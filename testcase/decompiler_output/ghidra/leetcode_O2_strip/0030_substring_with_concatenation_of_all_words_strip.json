{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103f80)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101120": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00103fa8)();\n  return iVar1;\n}\n\n", 
    "00101340": "\nvoid FUN_00101340(long param_1)\n\n{\n  *(long *)(param_1 + 8) = param_1;\n  *(long *)param_1 = param_1;\n  return;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00105068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00103f98)();\n  return pvVar1;\n}\n\n", 
    "00101280": "\n/* WARNING: Removing unreachable block (ram,0x00101293) */\n/* WARNING: Removing unreachable block (ram,0x0010129f) */\n\nvoid FUN_00101280(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101160": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "001017c8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101140": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb8)();\n  return pvVar1;\n}\n\n", 
    "00101360": "\nvoid FUN_00101360(undefined8 param_1,undefined8 *param_2)\n\n{\n  FUN_00101350(param_1,param_2,*param_2);\n  return;\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101180": "\nundefined8 FUN_00101180(int param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long in_FS_OFFSET;\n  int local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 3) {\n    fwrite(\"Usage: ./test str w1 w2...\\n\",1,0x1b,stderr);\n                    /* WARNING: Subroutine does not return */\n    exit(-1);\n  }\n  local_24 = 0;\n  lVar2 = FUN_001014c0(*(undefined8 *)(param_2 + 8),param_2 + 0x10,param_1 + -2,&local_24);\n  if (0 < local_24) {\n    lVar3 = 0;\n    do {\n      lVar1 = lVar3 * 4;\n      lVar3 = lVar3 + 1;\n      __printf_chk(1,&DAT_00102020,*(undefined4 *)(lVar2 + lVar1));\n    } while ((int)lVar3 < local_24);\n  }\n  putchar(10);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001017c0": "\nvoid FUN_001017c0(void)\n\n{\n  return;\n}\n\n", 
    "001014c0": "\nvoid * FUN_001014c0(char *param_1,char **param_2,int param_3,int *param_4)\n\n{\n  int *piVar1;\n  size_t __nmemb;\n  char cVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  int iVar5;\n  undefined4 uVar6;\n  void *pvVar7;\n  void *pvVar8;\n  void *__dest;\n  undefined4 *puVar9;\n  long lVar10;\n  size_t __n;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int *piVar14;\n  char *pcVar15;\n  int iVar16;\n  int iVar17;\n  bool bVar18;\n  byte bVar19;\n  undefined auVar20 [16];\n  void *local_60;\n  \n  bVar19 = 0;\n  if (*param_1 == '\\0') {\n    *param_4 = 0;\n    local_60 = (void *)0x0;\n  }\n  else {\n    pvVar7 = malloc((long)param_3 << 4);\n    pvVar8 = pvVar7;\n    do {\n      auVar20 = FUN_00101340(pvVar8);\n      pvVar8 = (void *)(SUB168(auVar20,0) + 0x10);\n    } while (pvVar8 != SUB168(auVar20 >> 0x40,0));\n    __nmemb = (long)param_3 * 4;\n    pvVar8 = calloc(__nmemb,1);\n    iVar13 = 0;\n    do {\n      iVar12 = iVar13;\n      iVar13 = iVar12 + 1;\n      FUN_001013b0(param_2,iVar12,pvVar7,param_3,pvVar8);\n    } while (param_3 != iVar13);\n    lVar10 = -1;\n    pcVar15 = *param_2;\n    do {\n      if (lVar10 == 0) break;\n      lVar10 = lVar10 + -1;\n      cVar2 = *pcVar15;\n      pcVar15 = pcVar15 + (ulong)bVar19 * -2 + 1;\n    } while (cVar2 != '\\0');\n    iVar17 = ~(uint)lVar10 - 1;\n    iVar5 = iVar13 * iVar17;\n    __dest = malloc((long)(int)~(uint)lVar10);\n    __n = (size_t)iVar17;\n    *(undefined *)((long)__dest + __n) = 0;\n    puVar9 = (undefined4 *)malloc(40000);\n    cVar2 = param_1[__n - 1];\n    puVar4 = puVar9;\n    pcVar15 = param_1;\n    while (cVar2 != '\\0') {\n      memcpy(__dest,pcVar15,__n);\n      uVar6 = FUN_00101450(__dest,pvVar7,iVar13);\n      *puVar4 = uVar6;\n      cVar2 = pcVar15[__n];\n      puVar4 = puVar4 + 1;\n      pcVar15 = pcVar15 + 1;\n    }\n    local_60 = malloc(40000);\n    pvVar7 = malloc(__nmemb);\n    if (param_1[iVar5 + -1] == '\\0') {\n      iVar17 = 0;\n    }\n    else {\n      lVar10 = 0;\n      iVar17 = 0;\n      do {\n        pvVar7 = memset(pvVar7,0,__nmemb);\n        piVar14 = puVar9 + lVar10;\n        iVar16 = 0;\n        do {\n          iVar3 = *piVar14;\n          if ((iVar3 < 0) ||\n             (piVar1 = (int *)((long)pvVar7 + (long)iVar3 * 4), iVar11 = *piVar1 + 1,\n             *piVar1 = iVar11, *(int *)((long)pvVar8 + (long)iVar3 * 4) < iVar11)) {\n            if (iVar13 != iVar16) goto LAB_001016ec;\n            break;\n          }\n          piVar14 = piVar14 + __n;\n          bVar18 = iVar12 != iVar16;\n          iVar16 = iVar16 + 1;\n        } while (bVar18);\n        *(int *)((long)local_60 + (long)iVar17 * 4) = (int)lVar10;\n        iVar17 = iVar17 + 1;\nLAB_001016ec:\n        lVar10 = lVar10 + 1;\n      } while (param_1[lVar10 + (long)iVar5 + -1] != '\\0');\n    }\n    *param_4 = iVar17;\n  }\n  return local_60;\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103f88)();\n  return iVar1;\n}\n\n", 
    "00101750": "\nvoid FUN_00101750(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101130": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00103fb0)();\n  return pvVar1;\n}\n\n", 
    "00101350": "\nvoid FUN_00101350(long *param_1,long **param_2,long param_3)\n\n{\n  *(long **)(param_3 + 8) = param_1;\n  *param_1 = param_3;\n  param_1[1] = (long)param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "00101450": "\nundefined4 FUN_00101450(char *param_1,long param_2,int param_3)\n\n{\n  undefined8 *puVar1;\n  int iVar2;\n  undefined8 *puVar3;\n  \n  iVar2 = FUN_00101370(param_1,(long)param_3);\n  puVar3 = (undefined8 *)((long)iVar2 * 0x10 + param_2);\n  puVar1 = (undefined8 *)*puVar3;\n  while( true ) {\n    if (puVar3 == puVar1) {\n      return 0xffffffff;\n    }\n    iVar2 = strcmp((char *)puVar1[-2],param_1);\n    if (iVar2 == 0) break;\n    puVar1 = (undefined8 *)*puVar1;\n  }\n  return *(undefined4 *)(puVar1 + -1);\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fa0)();\n  return pvVar1;\n}\n\n", 
    "00101330": "\nvoid thunk_FUN_001012b0(void)\n\n{\n  FUN_001012b0();\n  return;\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101170": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00101150": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fc0)();\n  return;\n}\n\n", 
    "00101370": "\nulong FUN_00101370(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = uVar2 * 0x83 + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2 & 0xffffffff;\n  }\n  return 0;\n}\n\n", 
    "00101250": "\nvoid FUN_00101250(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101180,unaff_retaddr,&stack0x00000008,FUN_00101750,FUN_001017c0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001012b0": "\n/* WARNING: Removing unreachable block (ram,0x001012d4) */\n/* WARNING: Removing unreachable block (ram,0x001012e0) */\n\nvoid FUN_001012b0(void)\n\n{\n  return;\n}\n\n", 
    "001013b0": "\nvoid FUN_001013b0(long param_1,int param_2,long param_3,int param_4,long param_5)\n\n{\n  undefined8 *puVar1;\n  int *piVar2;\n  char *__s2;\n  undefined8 *puVar3;\n  int iVar4;\n  char **ppcVar5;\n  long lVar6;\n  \n  __s2 = *(char **)(param_1 + (long)param_2 * 8);\n  iVar4 = FUN_00101370(__s2,(long)param_4);\n  puVar1 = (undefined8 *)(param_3 + (long)iVar4 * 0x10);\n  puVar3 = (undefined8 *)*puVar1;\n  while( true ) {\n    if (puVar1 == puVar3) {\n      ppcVar5 = (char **)malloc(0x20);\n      *ppcVar5 = __s2;\n      *(int *)(ppcVar5 + 1) = param_2;\n      lVar6 = FUN_00101360(ppcVar5 + 2,puVar1);\n      piVar2 = (int *)(param_5 + (long)*(int *)(lVar6 + 8) * 4);\n      *piVar2 = *piVar2 + 1;\n      return;\n    }\n    iVar4 = strcmp((char *)puVar3[-2],__s2);\n    if (iVar4 == 0) break;\n    puVar3 = (undefined8 *)*puVar3;\n  }\n  piVar2 = (int *)(param_5 + (long)*(int *)(puVar3 + -1) * 4);\n  *piVar2 = *piVar2 + 1;\n  return;\n}\n\n", 
    "001010f0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103f90)();\n  return;\n}\n\n", 
    "001010d0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001012f0": "\nvoid FUN_001012f0(void)\n\n{\n  if (DAT_00104028 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101280();\n    DAT_00104028 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}