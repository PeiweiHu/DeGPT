{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101220": "\n/* WARNING: Removing unreachable block (ram,0x00101233) */\n/* WARNING: Removing unreachable block (ram,0x0010123f) */\n\nvoid FUN_00101220(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fb8)();\n  return iVar1;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001010c0": "\nundefined8 FUN_001010c0(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  void **ppvVar3;\n  void *pvVar4;\n  int *piVar5;\n  long lVar6;\n  void **ppvVar7;\n  long lVar8;\n  long in_FS_OFFSET;\n  int local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_44 = 0;\n  piVar2 = (int *)malloc(0xc);\n  ppvVar3 = (void **)malloc(0x18);\n  piVar5 = piVar2;\n  ppvVar7 = ppvVar3;\n  do {\n    *piVar5 = 3;\n    lVar8 = 0;\n    pvVar4 = malloc(0xc);\n    *ppvVar7 = pvVar4;\n    while( true ) {\n      local_44 = local_44 + 1;\n      *(int *)((long)pvVar4 + lVar8 * 4) = local_44;\n      lVar8 = lVar8 + 1;\n      __printf_chk(1,&DAT_00102004);\n      if (*piVar5 == (int)lVar8 || *piVar5 < (int)lVar8) break;\n      pvVar4 = *ppvVar7;\n    }\n    piVar5 = piVar5 + 1;\n    ppvVar7 = ppvVar7 + 1;\n    putchar(10);\n  } while (piVar5 != piVar2 + 3);\n  lVar6 = 0;\n  lVar8 = FUN_001012e0(ppvVar3,3,piVar2,&local_44);\n  if (0 < local_44) {\n    do {\n      lVar1 = lVar6 * 4;\n      lVar6 = lVar6 + 1;\n      __printf_chk(1,&DAT_00102004,*(undefined4 *)(lVar8 + lVar1));\n    } while ((int)lVar6 < local_44);\n  }\n  putchar(10);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001012e0": "\nvoid * FUN_001012e0(long param_1,int param_2,int *param_3,int *param_4)\n\n{\n  void *pvVar1;\n  int iVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  uint uVar6;\n  long lVar7;\n  undefined4 *puVar8;\n  long lVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  \n  if (param_2 != 0) {\n    iVar4 = param_2 + -1;\n    iVar5 = *param_3 + -1;\n    pvVar1 = malloc((long)(*param_3 * param_2) << 2);\n    if ((iVar4 < 0) || (iVar5 < 0)) {\n      iVar12 = 0;\n    }\n    else {\n      uVar6 = 0;\n      iVar12 = 0;\n      iVar11 = 0;\n      iVar10 = 0;\n      do {\n        if (uVar6 == 2) {\n          lVar3 = *(long *)(param_1 + (long)iVar4 * 8);\n          lVar7 = (long)iVar5;\n          puVar8 = (undefined4 *)((long)pvVar1 + (long)iVar12 * 4);\n          do {\n            lVar9 = lVar7 * 4;\n            lVar7 = lVar7 + -1;\n            *puVar8 = *(undefined4 *)(lVar3 + lVar9);\n            puVar8 = puVar8 + 1;\n          } while (iVar11 <= (int)lVar7);\n          iVar2 = iVar5 - iVar11;\n          if (iVar5 < iVar11) {\n            iVar2 = 0;\n          }\n          iVar4 = iVar4 + -1;\n          iVar12 = iVar12 + 1 + iVar2;\n        }\n        else if (uVar6 < 3) {\n          if (uVar6 == 0) {\n            lVar3 = *(long *)(param_1 + (long)iVar10 * 8);\n            lVar7 = (long)iVar11;\n            lVar9 = iVar12 - lVar7;\n            do {\n              *(undefined4 *)((long)pvVar1 + lVar7 * 4 + lVar9 * 4) =\n                   *(undefined4 *)(lVar3 + lVar7 * 4);\n              lVar7 = lVar7 + 1;\n            } while ((int)lVar7 <= iVar5);\n            iVar2 = iVar5 - iVar11;\n            if (iVar5 < iVar11) {\n              iVar2 = 0;\n            }\n            iVar10 = iVar10 + 1;\n            iVar12 = iVar12 + 1 + iVar2;\n          }\n          else if (uVar6 == 1) {\n            lVar3 = (long)iVar10;\n            lVar7 = iVar12 - lVar3;\n            do {\n              *(undefined4 *)((long)pvVar1 + lVar3 * 4 + lVar7 * 4) =\n                   *(undefined4 *)(*(long *)(param_1 + lVar3 * 8) + (long)iVar5 * 4);\n              lVar3 = lVar3 + 1;\n            } while ((int)lVar3 <= iVar4);\n            iVar2 = iVar4 - iVar10;\n            if (iVar4 < iVar10) {\n              iVar2 = 0;\n            }\n            iVar5 = iVar5 + -1;\n            iVar12 = iVar12 + 1 + iVar2;\n          }\n        }\n        else if (uVar6 == 3) {\n          lVar3 = (long)iVar4;\n          puVar8 = (undefined4 *)((long)pvVar1 + (long)iVar12 * 4);\n          do {\n            lVar7 = lVar3 * 8;\n            lVar3 = lVar3 + -1;\n            *puVar8 = *(undefined4 *)(*(long *)(param_1 + lVar7) + (long)iVar11 * 4);\n            puVar8 = puVar8 + 1;\n          } while (iVar10 <= (int)lVar3);\n          iVar2 = iVar4 - iVar10;\n          if (iVar4 < iVar10) {\n            iVar2 = 0;\n          }\n          iVar11 = iVar11 + 1;\n          iVar12 = iVar12 + 1 + iVar2;\n        }\n        uVar6 = uVar6 + 1 & 3;\n      } while ((iVar10 <= iVar4) && (iVar11 <= iVar5));\n    }\n    *param_4 = iVar12;\n    return pvVar1;\n  }\n  *param_4 = 0;\n  return (void *)0x0;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101250": "\n/* WARNING: Removing unreachable block (ram,0x00101274) */\n/* WARNING: Removing unreachable block (ram,0x00101280) */\n\nvoid FUN_00101250(void)\n\n{\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fc0)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101290": "\nvoid FUN_00101290(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101220();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001014b0": "\nvoid FUN_001014b0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001012d0": "\nvoid thunk_FUN_00101250(void)\n\n{\n  FUN_00101250();\n  return;\n}\n\n", 
    "001011f0": "\nvoid FUN_001011f0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_001010c0,unaff_retaddr,&stack0x00000008,FUN_001014b0,FUN_00101520,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101528": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101520": "\nvoid FUN_00101520(void)\n\n{\n  return;\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}