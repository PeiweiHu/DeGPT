{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fc0)();\n  return;\n}\n\n", 
    "00101130": "\nvoid FUN_00101130(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101080,unaff_retaddr,&stack0x00000008,FUN_00101280,FUN_001012f0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101220": "\nint FUN_00101220(int *param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  if ((param_3 <= param_1[(long)param_2 + -1]) && (*param_1 == param_3 || *param_1 < param_3)) {\n    iVar1 = -1;\n    do {\n      iVar2 = param_2;\n      param_2 = iVar1;\n      do {\n        iVar1 = param_2;\n        if (iVar2 + -1 <= iVar1) {\n          iVar1 = -1;\n          if (param_1[iVar2] == param_3) {\n            iVar1 = iVar2;\n          }\n          return iVar1;\n        }\n        param_2 = (iVar1 + iVar2) / 2;\n      } while (param_1[param_2] < param_3);\n    } while( true );\n  }\n  return -1;\n}\n\n", 
    "00101210": "\nvoid thunk_FUN_00101190(void)\n\n{\n  FUN_00101190();\n  return;\n}\n\n", 
    "00101060": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fc8)();\n  return;\n}\n\n", 
    "00101280": "\nvoid FUN_00101280(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101050": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101160": "\n/* WARNING: Removing unreachable block (ram,0x00101173) */\n/* WARNING: Removing unreachable block (ram,0x0010117f) */\n\nvoid FUN_00101160(void)\n\n{\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101080": "\nundefined8 FUN_00101080(void)\n\n{\n  undefined4 uVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_28 = 0xffffffff;\n  local_20 = 0x500000003;\n  local_18 = 0xc00000009;\n  uVar1 = FUN_00101220(&local_28,6,2);\n  __printf_chk(1,\"possible index = %d\\n\",uVar1);\n  uVar1 = FUN_00101220(&local_28,6,9);\n  __printf_chk(1,\"possible index = %d\\n\",uVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00101190": "\n/* WARNING: Removing unreachable block (ram,0x001011b4) */\n/* WARNING: Removing unreachable block (ram,0x001011c0) */\n\nvoid FUN_00101190(void)\n\n{\n  return;\n}\n\n", 
    "00101070": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001012f8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "001012f0": "\nvoid FUN_001012f0(void)\n\n{\n  return;\n}\n\n", 
    "001011d0": "\nvoid FUN_001011d0(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101160();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}