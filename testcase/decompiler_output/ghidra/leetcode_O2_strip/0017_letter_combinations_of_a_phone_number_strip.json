{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fa0)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101100": "\nundefined8 FUN_00101100(undefined8 param_1,long param_2)\n\n{\n  long lVar1;\n  void *__ptr;\n  long lVar2;\n  long in_FS_OFFSET;\n  int local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_24 = 0;\n  __ptr = (void *)FUN_00101280(*(undefined8 *)(param_2 + 8),&local_24);\n  if (0 < local_24) {\n    lVar2 = 0;\n    do {\n      puts(*(char **)((long)__ptr + lVar2 * 8));\n      lVar1 = lVar2 * 8;\n      lVar2 = lVar2 + 1;\n      free(*(void **)((long)__ptr + lVar1));\n    } while ((int)lVar2 < local_24);\n  }\n  free(__ptr);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00101280": "\nvoid ** FUN_00101280(char *param_1,int *param_2)\n\n{\n  int iVar1;\n  undefined *puVar2;\n  uint uVar3;\n  size_t sVar4;\n  void **ppvVar5;\n  void *pvVar6;\n  ulong uVar7;\n  ulong uVar8;\n  char *pcVar9;\n  int iVar10;\n  int iVar11;\n  ulong uVar12;\n  void **ppvVar13;\n  void **ppvVar14;\n  int iVar15;\n  long in_FS_OFFSET;\n  bool bVar16;\n  undefined8 local_c8;\n  undefined8 local_c0;\n  undefined8 local_b8;\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined *local_98 [4];\n  undefined *local_78;\n  undefined *local_70;\n  undefined *local_68;\n  undefined *local_60;\n  undefined *local_58;\n  undefined *local_50;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar4 = strlen(param_1);\n  local_98[0] = &DAT_00102005;\n  local_98[1] = &DAT_00102004;\n  local_98[2] = &DAT_00102006;\n  local_98[3] = &DAT_0010200a;\n  local_78 = &DAT_0010200e;\n  local_70 = &DAT_00102012;\n  local_68 = &DAT_00102016;\n  local_60 = &DAT_0010201a;\n  local_58 = &DAT_0010201f;\n  local_50 = &DAT_00102023;\n  local_c8 = 0x100000000;\n  local_c0 = 0x300000003;\n  local_b8 = 0x300000003;\n  local_b0 = 0x400000003;\n  local_a8 = 0x400000003;\n  iVar11 = (int)sVar4;\n  if (0 < iVar11) {\n    iVar10 = 1;\n    iVar15 = 1;\n    uVar3 = iVar11 - 1;\n    pcVar9 = param_1;\n    do {\n      iVar1 = *(int *)((long)&local_c8 + (long)(*pcVar9 + -0x30) * 4);\n      if (0 < iVar1) {\n        iVar15 = iVar15 * iVar1;\n        iVar10 = 0;\n      }\n      pcVar9 = pcVar9 + 1;\n    } while (param_1 + (ulong)uVar3 + 1 != pcVar9);\n    if (iVar10 == 0) {\n      *param_2 = iVar15;\n      ppvVar5 = (void **)malloc((long)iVar15 << 3);\n      ppvVar13 = ppvVar5;\n      do {\n        ppvVar14 = ppvVar13 + 1;\n        pvVar6 = calloc((long)(iVar11 + 1),1);\n        *ppvVar13 = pvVar6;\n        ppvVar13 = ppvVar14;\n      } while (ppvVar14 != ppvVar5 + (ulong)(iVar15 - 1) + 1);\n      if (uVar3 == 0) {\n        uVar12 = 1;\n      }\n      else {\n        pcVar9 = param_1 + (int)uVar3;\n        uVar12 = 1;\n        do {\n          iVar1 = *(int *)((long)&local_c8 + (long)(*pcVar9 + -0x30) * 4);\n          if (0 < iVar1) {\n            uVar12 = (ulong)(uint)((int)uVar12 * iVar1);\n          }\n          pcVar9 = pcVar9 + -1;\n        } while (param_1 + (((long)iVar11 + -2) - (ulong)(iVar11 - 2)) != pcVar9);\n      }\n      uVar7 = 0;\n      while( true ) {\n        iVar11 = *(int *)((long)&local_c8 + (long)(param_1[uVar7] + -0x30) * 4);\n        if (0 < iVar11) {\n          if (uVar7 != 0) {\n            uVar12 = (long)(int)uVar12 / (long)iVar11 & 0xffffffff;\n          }\n          puVar2 = local_98[param_1[uVar7] + -0x30];\n          uVar8 = 0;\n          do {\n            *(undefined *)((long)ppvVar5[uVar8] + (long)iVar10) =\n                 puVar2[((int)uVar8 / (int)uVar12) % iVar11];\n            bVar16 = uVar8 != iVar15 - 1;\n            uVar8 = uVar8 + 1;\n          } while (bVar16);\n          iVar10 = iVar10 + 1;\n        }\n        if (uVar7 == uVar3) break;\n        uVar7 = uVar7 + 1;\n      }\n      goto LAB_001014e2;\n    }\n  }\n  *param_2 = 0;\n  ppvVar5 = (void **)0x0;\nLAB_001014e2:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return ppvVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001015a8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001015a0": "\nvoid FUN_001015a0(void)\n\n{\n  return;\n}\n\n", 
    "001011c0": "\n/* WARNING: Removing unreachable block (ram,0x001011d3) */\n/* WARNING: Removing unreachable block (ram,0x001011df) */\n\nvoid FUN_001011c0(void)\n\n{\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00103fa8)();\n  return;\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fb8)();\n  return sVar1;\n}\n\n", 
    "00101530": "\nvoid FUN_00101530(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101230": "\nvoid FUN_00101230(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_001011c0();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101270": "\nvoid thunk_FUN_001011f0(void)\n\n{\n  FUN_001011f0();\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101190": "\nvoid FUN_00101190(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101100,unaff_retaddr,&stack0x00000008,FUN_00101530,FUN_001015a0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fb0)();\n  return iVar1;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fd0)();\n  return pvVar1;\n}\n\n", 
    "001011f0": "\n/* WARNING: Removing unreachable block (ram,0x00101214) */\n/* WARNING: Removing unreachable block (ram,0x00101220) */\n\nvoid FUN_001011f0(void)\n\n{\n  return;\n}\n\n", 
    "001010d0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fc0)();\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}