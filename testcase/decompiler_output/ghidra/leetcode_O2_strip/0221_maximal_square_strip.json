{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103f98)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101120": "\nundefined8 FUN_00101120(int param_1,long param_2)\n\n{\n  char *__s;\n  undefined4 uVar1;\n  size_t sVar2;\n  char **ppcVar3;\n  \n  if (1 < param_1) {\n    ppcVar3 = (char **)(param_2 + 8);\n    do {\n      __s = *ppcVar3;\n      ppcVar3 = ppcVar3 + 1;\n      puts(__s);\n    } while (ppcVar3 != (char **)(param_2 + 0x10 + (ulong)(param_1 - 2) * 8));\n    sVar2 = strlen(*(char **)(param_2 + 8));\n    uVar1 = FUN_001012d0((char **)(param_2 + 8),param_1 + -1,sVar2);\n    __printf_chk(1,&DAT_00102024,uVar1);\n    return 0;\n  }\n  fwrite(\"Usage: ./test row1 row2...\\n\",1,0x1b,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101220": "\n/* WARNING: Removing unreachable block (ram,0x00101244) */\n/* WARNING: Removing unreachable block (ram,0x00101250) */\n\nvoid FUN_00101220(void)\n\n{\n  return;\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101260": "\nvoid FUN_00101260(void)\n\n{\n  if (DAT_00104028 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_001011f0();\n    DAT_00104028 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001011c0": "\nvoid FUN_001011c0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101120,unaff_retaddr,&stack0x00000008,FUN_00101500,FUN_00101570,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001010a0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001012c0": "\nint FUN_001012c0(int param_1,int param_2)\n\n{\n  if (param_1 <= param_2) {\n    param_1 = param_2;\n  }\n  return param_1;\n}\n\n", 
    "001012a0": "\nvoid thunk_FUN_00101220(void)\n\n{\n  FUN_00101220();\n  return;\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb8)();\n  return pvVar1;\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fa8)();\n  return iVar1;\n}\n\n", 
    "00101578": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101570": "\nvoid FUN_00101570(void)\n\n{\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fa0)();\n  return iVar1;\n}\n\n", 
    "001012d0": "\nint FUN_001012d0(char **param_1,int param_2,uint param_3)\n\n{\n  ulong uVar1;\n  uint **ppuVar2;\n  int iVar3;\n  undefined4 uVar4;\n  int iVar5;\n  uint **ppuVar6;\n  uint *puVar7;\n  ulong uVar8;\n  char *pcVar9;\n  long lVar10;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  uint **ppuVar11;\n  uint **ppuVar12;\n  uint uVar13;\n  ulong uVar14;\n  long lVar15;\n  char **ppcVar16;\n  uint *puVar17;\n  bool bVar18;\n  \n  ppuVar6 = (uint **)malloc((long)param_2 << 3);\n  ppuVar2 = ppuVar6 + (ulong)(param_2 - 1) + 1;\n  ppuVar11 = ppuVar6;\n  do {\n    ppuVar12 = ppuVar11 + 1;\n    puVar7 = (uint *)malloc((long)(int)param_3 << 2);\n    *ppuVar11 = puVar7;\n    ppuVar11 = ppuVar12;\n  } while (ppuVar12 != ppuVar2);\n  pcVar9 = *param_1;\n  puVar7 = *ppuVar6;\n  if ((int)param_3 < 1) {\n    iVar3 = 0;\n    uVar14 = (ulong)(param_3 - 1);\n  }\n  else {\n    uVar14 = (ulong)(param_3 - 1);\n    iVar3 = 0;\n    uVar8 = 0;\n    do {\n      if (pcVar9[uVar8] == '1') {\n        iVar3 = 1;\n      }\n      puVar7[uVar8] = (uint)(pcVar9[uVar8] == '1');\n      bVar18 = uVar8 != uVar14;\n      uVar8 = uVar8 + 1;\n    } while (bVar18);\n  }\n  uVar8 = 0;\n  while( true ) {\n    uVar1 = uVar8 + 1;\n    if (*pcVar9 == '1') {\n      iVar3 = 1;\n    }\n    *puVar7 = (uint)(*pcVar9 == '1');\n    if (uVar8 == param_2 - 1) break;\n    pcVar9 = param_1[uVar1];\n    puVar7 = ppuVar6[uVar1];\n    uVar8 = uVar1;\n  }\n  if (param_2 != 1) {\n    ppcVar16 = param_1 + 1;\n    uVar8 = (ulong)param_3;\n    ppuVar11 = ppuVar6;\n    do {\n      if (1 < (int)uVar8) {\n        pcVar9 = *ppcVar16;\n        puVar7 = ppuVar11[1];\n        lVar10 = 1;\n        do {\n          lVar15 = lVar10 * 4;\n          if (pcVar9[lVar10] == '1') {\n            puVar17 = *ppuVar11;\n            puVar7[lVar10] = 1;\n            uVar4 = FUN_001012b0(puVar17[lVar10],puVar7[lVar10 + -1]);\n            iVar5 = FUN_001012b0(*(undefined4 *)((long)puVar17 + lVar15 + -4),uVar4);\n            uVar13 = iVar5 + 1;\n            puVar7[extraout_RDX_00] = uVar13;\n          }\n          else {\n            puVar7[lVar10] = 0;\n            uVar13 = 0;\n          }\n          iVar3 = FUN_001012c0(iVar3,uVar13);\n          lVar10 = extraout_RDX + 1;\n        } while (lVar10 != (ulong)(param_3 - 2) + 2);\n      }\n      ppcVar16 = ppcVar16 + 1;\n      ppuVar11 = ppuVar11 + 1;\n    } while (param_1 + (ulong)(param_2 - 2) + 2 != ppcVar16);\n  }\n  do {\n    if (0 < (int)param_3) {\n      puVar17 = *ppuVar6;\n      puVar7 = puVar17 + uVar14 + 1;\n      do {\n        uVar13 = *puVar17;\n        puVar17 = puVar17 + 1;\n        __printf_chk(1,&DAT_00102004,uVar13);\n      } while (puVar7 != puVar17);\n    }\n    ppuVar6 = ppuVar6 + 1;\n    putchar(10);\n  } while (ppuVar6 != ppuVar2);\n  return iVar3 * iVar3;\n}\n\n", 
    "001012b0": "\nint FUN_001012b0(int param_1,int param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_1 = param_2;\n  }\n  return param_1;\n}\n\n", 
    "001010f0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fc0)();\n  return;\n}\n\n", 
    "001011f0": "\n/* WARNING: Removing unreachable block (ram,0x00101203) */\n/* WARNING: Removing unreachable block (ram,0x0010120f) */\n\nvoid FUN_001011f0(void)\n\n{\n  return;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fb0)();\n  return sVar1;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101500": "\nvoid FUN_00101500(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n"
}