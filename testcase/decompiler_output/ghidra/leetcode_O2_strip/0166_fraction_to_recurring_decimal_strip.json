{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103f90)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101120": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fc8)();\n  return sVar1;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atoi(char *__nptr)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_atoi_00103fb8)();\n  return iVar1;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101140": "\nundefined8 FUN_00101140(int param_1,long param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  char *__s;\n  \n  if (param_1 == 3) {\n    iVar1 = atoi(*(char **)(param_2 + 0x10));\n    iVar2 = atoi(*(char **)(param_2 + 8));\n    __s = (char *)FUN_00101330(iVar2,iVar1);\n    puts(__s);\n    return 0;\n  }\n  fwrite(\"Usage: ./test numerator denominator\\n\",1,0x24,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "00101580": "\nvoid FUN_00101580(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001012c0": "\nvoid FUN_001012c0(undefined8 param_1,undefined8 *param_2)\n\n{\n  FUN_001012b0(param_1,param_2,*param_2);\n  return;\n}\n\n", 
    "001012a0": "\nvoid FUN_001012a0(long param_1)\n\n{\n  *(long *)(param_1 + 8) = param_1;\n  *(long *)param_1 = param_1;\n  return;\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fa8)();\n  return pvVar1;\n}\n\n", 
    "001011e0": "\n/* WARNING: Removing unreachable block (ram,0x001011f3) */\n/* WARNING: Removing unreachable block (ram,0x001011ff) */\n\nvoid FUN_001011e0(void)\n\n{\n  return;\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_00103f98)();\n  return pcVar1;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101130": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00103fd0)();\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atoi(char *__nptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc0)();\n  return;\n}\n\n", 
    "00101330": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nuint * FUN_00101330(uint param_1,uint param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint *puVar6;\n  ulong uVar7;\n  char *__src;\n  void *pvVar8;\n  void *pvVar9;\n  undefined4 *puVar10;\n  undefined2 *puVar11;\n  ulong uVar12;\n  uint *puVar13;\n  uint *puVar14;\n  undefined *puVar15;\n  long lVar16;\n  ulong uVar17;\n  bool bVar18;\n  undefined auVar19 [16];\n  char *local_40;\n  \n  puVar6 = (uint *)malloc(0x400);\n  if (param_2 == 0) {\n    *(undefined *)puVar6 = 0;\n  }\n  else if (param_1 == 0) {\n    *(undefined2 *)puVar6 = 0x30;\n  }\n  else {\n    uVar7 = (ulong)(((int)param_1 >> 0x1f ^ param_1) - ((int)param_1 >> 0x1f));\n    uVar17 = (ulong)(((int)param_2 >> 0x1f ^ param_2) - ((int)param_2 >> 0x1f));\n    puVar14 = puVar6;\n    if ((float)param_1 / (float)param_2 < _DAT_00102030) {\n      *(undefined *)puVar6 = 0x2d;\n      puVar14 = (uint *)((long)puVar6 + 1);\n    }\n    uVar12 = uVar7 % uVar17;\n    __sprintf_chk(puVar14,1,0x400,&DAT_00102004,uVar7 / uVar17);\n    puVar14 = puVar6;\n    if (uVar12 != 0) {\n      do {\n        puVar13 = puVar14;\n        uVar3 = *puVar13 + 0xfefefeff & ~*puVar13;\n        uVar4 = uVar3 & 0x80808080;\n        puVar14 = puVar13 + 1;\n      } while (uVar4 == 0);\n      bVar18 = (uVar3 & 0x8080) == 0;\n      if (bVar18) {\n        uVar4 = uVar4 >> 0x10;\n      }\n      if (bVar18) {\n        puVar14 = (uint *)((long)puVar13 + 6);\n      }\n      puVar15 = (undefined *)((long)puVar14 + (-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n      *puVar15 = 0x2e;\n      local_40 = puVar15 + 1;\n      __src = (char *)calloc(0x400,1);\n      pvVar8 = malloc(0x5350);\n      pvVar9 = pvVar8;\n      do {\n        auVar19 = FUN_001012a0(pvVar9);\n        pvVar9 = (void *)(SUB168(auVar19,0) + 0x10);\n      } while (SUB168(auVar19 >> 0x40,0) != pvVar9);\n      lVar16 = 0;\n      do {\n        iVar5 = FUN_001012d0(pvVar8,uVar12 & 0xffffffff);\n        if (-1 < iVar5) {\n          if (iVar5 != 0) {\n            uVar7 = 0;\n            do {\n              puVar15[uVar7 + 1] = __src[uVar7];\n              bVar18 = iVar5 - 1 != uVar7;\n              uVar7 = uVar7 + 1;\n            } while (bVar18);\n            lVar16 = (ulong)(iVar5 - 1) + 1;\n            local_40 = local_40 + lVar16;\n            __src = __src + lVar16;\n          }\n          *local_40 = '(';\n          puVar11 = (undefined2 *)(local_40 + 1);\n          cVar1 = *__src;\n          while (cVar1 != '\\0') {\n            __src = __src + 1;\n            *(char *)puVar11 = cVar1;\n            puVar11 = (undefined2 *)((long)puVar11 + 1);\n            cVar1 = *__src;\n          }\n          *puVar11 = 0x29;\n          return puVar6;\n        }\n        puVar10 = (undefined4 *)malloc(0x18);\n        *puVar10 = (int)uVar12;\n        puVar10[1] = (int)lVar16;\n        FUN_001012c0(puVar10 + 2,\n                     (void *)((uVar12 + (((long)(SUB168(SEXT816(-0x3b57c414bdbe51cf) *\n                                                        SEXT816((long)uVar12) >> 0x40,0) + uVar12)\n                                         >> 10) - ((long)uVar12 >> 0x3f)) * -0x535) * 0x10 +\n                             (long)pvVar8));\n        lVar2 = uVar12 * 10;\n        uVar12 = lVar2 % (long)uVar17;\n        __src[lVar16] = (char)(lVar2 / (long)uVar17) + '0';\n        lVar16 = lVar16 + 1;\n      } while (uVar12 != 0);\n      strcpy(local_40,__src);\n    }\n  }\n  return puVar6;\n}\n\n", 
    "00101210": "\n/* WARNING: Removing unreachable block (ram,0x00101234) */\n/* WARNING: Removing unreachable block (ram,0x00101240) */\n\nvoid FUN_00101210(void)\n\n{\n  return;\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101250": "\nvoid FUN_00101250(void)\n\n{\n  if (DAT_00104028 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_001011e0();\n    DAT_00104028 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001015f8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101290": "\nvoid thunk_FUN_00101210(void)\n\n{\n  FUN_00101210();\n  return;\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001012d0": "\nundefined4 FUN_001012d0(long param_1,int param_2)\n\n{\n  undefined8 *puVar1;\n  undefined8 *puVar2;\n  \n  puVar2 = (undefined8 *)(param_1 + (long)(param_2 % 0x535) * 0x10);\n  puVar1 = (undefined8 *)*puVar2;\n  while( true ) {\n    if (puVar2 == puVar1) {\n      return 0xffffffff;\n    }\n    if (param_2 == *(int *)(puVar1 + -1)) break;\n    puVar1 = (undefined8 *)*puVar1;\n  }\n  return *(undefined4 *)((long)puVar1 + -4);\n}\n\n", 
    "001011b0": "\nvoid FUN_001011b0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101140,unaff_retaddr,&stack0x00000008,FUN_00101580,FUN_001015f0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001015f0": "\nvoid FUN_001015f0(void)\n\n{\n  return;\n}\n\n", 
    "001012b0": "\nvoid FUN_001012b0(long *param_1,long **param_2,long param_3)\n\n{\n  *(long **)(param_3 + 8) = param_1;\n  *param_1 = param_3;\n  param_1[1] = (long)param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb0)();\n  return pvVar1;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fa0)();\n  return iVar1;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}