{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fc8)();\n  return;\n}\n\n", 
    "00101130": "\nvoid FUN_00101130(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_001010c0();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00101240": "\nvoid FUN_00101240(void)\n\n{\n  return;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101060": "\nundefined8 FUN_00101060(void)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = FUN_00101180(0);\n  __printf_chk(1,&DAT_00102004,uVar1);\n  return 0;\n}\n\n", 
    "00101170": "\nvoid thunk_FUN_001010f0(void)\n\n{\n  FUN_001010f0();\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101050": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "00101040": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid FUN_00101090(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101060,unaff_retaddr,&stack0x00000008,FUN_001011d0,FUN_00101240,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101180": "\nint FUN_00101180(long param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  \n  if (param_1 != 0) {\n    iVar2 = FUN_00101180(*(undefined8 *)(param_1 + 8));\n    iVar3 = FUN_00101180(*(undefined8 *)(param_1 + 0x10));\n    iVar1 = iVar2 + 1;\n    if (iVar2 + 1 < iVar3 + 1) {\n      iVar1 = iVar3 + 1;\n    }\n    return iVar1;\n  }\n  return 0;\n}\n\n", 
    "001010f0": "\n/* WARNING: Removing unreachable block (ram,0x00101114) */\n/* WARNING: Removing unreachable block (ram,0x00101120) */\n\nvoid FUN_001010f0(void)\n\n{\n  return;\n}\n\n", 
    "001010c0": "\n/* WARNING: Removing unreachable block (ram,0x001010d3) */\n/* WARNING: Removing unreachable block (ram,0x001010df) */\n\nvoid FUN_001010c0(void)\n\n{\n  return;\n}\n\n", 
    "001011d0": "\nvoid FUN_001011d0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00101248": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}