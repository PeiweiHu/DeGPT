{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101240": "\n/* WARNING: Removing unreachable block (ram,0x00101264) */\n/* WARNING: Removing unreachable block (ram,0x00101270) */\n\nvoid FUN_00101240(void)\n\n{\n  return;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101280": "\nvoid FUN_00101280(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101210();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001014e8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fb8)();\n  return iVar1;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001012c0": "\nvoid thunk_FUN_00101240(void)\n\n{\n  FUN_00101240();\n  return;\n}\n\n", 
    "001014e0": "\nvoid FUN_001014e0(void)\n\n{\n  return;\n}\n\n", 
    "001011e0": "\nvoid FUN_001011e0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_001010c0,unaff_retaddr,&stack0x00000008,FUN_00101470,FUN_001014e0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001010c0": "\nundefined8 FUN_001010c0(int param_1,long param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  size_t sVar4;\n  void **ppvVar5;\n  void *pvVar6;\n  void **ppvVar7;\n  long *plVar8;\n  ulong uVar9;\n  \n  iVar1 = param_1 + -1;\n  sVar4 = strlen(*(char **)(param_2 + 8));\n  iVar2 = (int)sVar4;\n  ppvVar5 = (void **)malloc((long)iVar1 << 3);\n  if (0 < iVar1) {\n    plVar8 = (long *)(param_2 + 8);\n    ppvVar7 = ppvVar5;\n    do {\n      pvVar6 = malloc((long)iVar2 << 2);\n      *ppvVar7 = pvVar6;\n      if (0 < iVar2) {\n        uVar9 = 0;\n        while( true ) {\n          *(int *)((long)pvVar6 + uVar9 * 4) = *(char *)(*plVar8 + uVar9) + -0x30;\n          __printf_chk(1,&DAT_00102008);\n          if (uVar9 == iVar2 - 1) break;\n          pvVar6 = *ppvVar7;\n          uVar9 = uVar9 + 1;\n        }\n      }\n      ppvVar7 = ppvVar7 + 1;\n      plVar8 = plVar8 + 1;\n      putchar(10);\n    } while (ppvVar5 + (ulong)(param_1 - 2) + 1 != ppvVar7);\n  }\n  uVar3 = FUN_001012e0(ppvVar5,iVar1,sVar4 & 0xffffffff);\n  __printf_chk(1,&DAT_00102004,uVar3);\n  return 0;\n}\n\n", 
    "001012e0": "\nint FUN_001012e0(int **param_1,int param_2,int param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  int **ppiVar3;\n  int *piVar4;\n  long lVar5;\n  long lVar6;\n  long extraout_RDX;\n  int *piVar7;\n  int *piVar8;\n  int **ppiVar9;\n  int **ppiVar10;\n  \n  ppiVar3 = (int **)malloc((long)param_2 * 8);\n  if (param_2 < 1) {\n    piVar4 = *param_1;\n    piVar7 = *ppiVar3;\n    iVar1 = *piVar4;\n    *piVar7 = iVar1;\nLAB_00101456:\n    if (param_3 < 2) goto LAB_0010142e;\nLAB_0010139c:\n    lVar5 = 1;\n    do {\n      iVar1 = iVar1 + piVar4[lVar5];\n      piVar7[lVar5] = iVar1;\n      lVar5 = lVar5 + 1;\n    } while ((ulong)(param_3 - 2) + 2 != lVar5);\n    if (param_2 < 2) goto LAB_0010142e;\n  }\n  else {\n    ppiVar10 = ppiVar3;\n    do {\n      ppiVar9 = ppiVar10 + 1;\n      piVar4 = (int *)malloc((long)param_3 * 4);\n      *ppiVar10 = piVar4;\n      ppiVar10 = ppiVar9;\n    } while (ppiVar9 != ppiVar3 + (ulong)(param_2 - 1) + 1);\n    piVar4 = *param_1;\n    piVar7 = *ppiVar3;\n    iVar1 = *piVar4;\n    *piVar7 = iVar1;\n    if (param_2 < 2) goto LAB_00101456;\n    lVar5 = 1;\n    do {\n      iVar1 = iVar1 + *param_1[lVar5];\n      ppiVar10 = ppiVar3 + lVar5;\n      lVar5 = lVar5 + 1;\n      **ppiVar10 = iVar1;\n    } while ((ulong)(param_2 - 2) + 2 != lVar5);\n    iVar1 = *piVar7;\n    if (1 < param_3) goto LAB_0010139c;\n  }\n  ppiVar10 = param_1 + 1;\n  lVar5 = (ulong)(param_3 - 2) + 2;\n  ppiVar9 = ppiVar3;\n  do {\n    if (1 < param_3) {\n      piVar4 = *ppiVar10;\n      piVar7 = ppiVar9[1];\n      lVar6 = 1;\n      piVar8 = *ppiVar9;\n      do {\n        iVar1 = piVar4[lVar6];\n        iVar2 = FUN_001012d0(piVar8[lVar6],piVar7[lVar6 + -1]);\n        piVar7[extraout_RDX] = iVar1 + iVar2;\n        lVar6 = extraout_RDX + 1;\n      } while (lVar6 != lVar5);\n    }\n    ppiVar10 = ppiVar10 + 1;\n    ppiVar9 = ppiVar9 + 1;\n  } while (param_1 + (ulong)(param_2 - 2) + 2 != ppiVar10);\nLAB_0010142e:\n  return ppiVar3[(long)param_2 + -1][(long)param_3 + -1];\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101210": "\n/* WARNING: Removing unreachable block (ram,0x00101223) */\n/* WARNING: Removing unreachable block (ram,0x0010122f) */\n\nvoid FUN_00101210(void)\n\n{\n  return;\n}\n\n", 
    "00101470": "\nvoid FUN_00101470(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101090": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fc0)();\n  return sVar1;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001012d0": "\nint FUN_001012d0(int param_1,int param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_1 = param_2;\n  }\n  return param_1;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}