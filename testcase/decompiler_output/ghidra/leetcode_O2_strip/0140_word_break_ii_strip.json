{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103f90)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101120": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "00101340": "\nint * FUN_00101340(char *param_1,long param_2,long param_3,int param_4,long param_5,int param_6)\n\n{\n  int iVar1;\n  int **ppiVar2;\n  undefined8 uVar3;\n  int iVar4;\n  int *piVar5;\n  int *piVar6;\n  int **ppiVar7;\n  int *piVar8;\n  ulong uVar9;\n  bool bVar10;\n  \n  if (*param_1 == '\\0') {\n    piVar5 = (int *)0x0;\n  }\n  else {\n    ppiVar7 = (int **)(param_5 + (long)param_6 * 8);\n    piVar5 = *ppiVar7;\n    if (piVar5 == (int *)0x0) {\n      piVar5 = (int *)malloc(0x3c8);\n      *piVar5 = 0;\n      *ppiVar7 = piVar5;\n      if (0 < param_4) {\n        uVar9 = 0;\n        do {\n          iVar1 = *(int *)(param_3 + uVar9 * 4);\n          iVar4 = strncmp(param_1,*(char **)(param_2 + uVar9 * 8),(long)iVar1);\n          if (iVar4 == 0) {\n            piVar6 = (int *)FUN_00101340(param_1 + iVar1,param_2,param_3,param_4,param_5,\n                                         iVar1 + param_6);\n            if (piVar6 == (int *)0x0) {\n              FUN_001012e0(piVar5 + 2);\n              iVar1 = *piVar5;\n              uVar3 = *(undefined8 *)(param_2 + uVar9 * 8);\n              *piVar5 = iVar1 + 1;\n              FUN_00101310(piVar5 + (long)iVar1 * 4 + 2,uVar3);\n            }\n            else {\n              iVar1 = *piVar5;\n              if (0 < *piVar6) {\n                ppiVar7 = (int **)(piVar6 + 2);\n                piVar8 = piVar5 + (long)iVar1 * 4 + 2;\n                iVar4 = iVar1;\n                do {\n                  FUN_001012e0(piVar8);\n                  FUN_00101310();\n                  for (ppiVar2 = (int **)*ppiVar7; ppiVar7 != ppiVar2; ppiVar2 = (int **)*ppiVar2) {\n                    FUN_00101310(piVar8,ppiVar2[-1]);\n                  }\n                  iVar4 = iVar4 + 1;\n                  piVar8 = piVar8 + 4;\n                  ppiVar7 = ppiVar7 + 2;\n                  *piVar5 = *piVar5 + 1;\n                } while (iVar4 < iVar1 + *piVar6);\n              }\n            }\n          }\n          bVar10 = param_4 - 1 != uVar9;\n          uVar9 = uVar9 + 1;\n        } while (bVar10);\n      }\n    }\n  }\n  return piVar5;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101220": "\n/* WARNING: Removing unreachable block (ram,0x00101233) */\n/* WARNING: Removing unreachable block (ram,0x0010123f) */\n\nvoid FUN_00101220(void)\n\n{\n  return;\n}\n\n", 
    "00101660": "\nvoid FUN_00101660(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fb8)();\n  return pvVar1;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101140": "\nundefined8 FUN_00101140(int param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long in_FS_OFFSET;\n  int local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 3) {\n    fwrite(\"Usage: ./test word dictionary...\\n\",1,0x21,stderr);\n                    /* WARNING: Subroutine does not return */\n    exit(-1);\n  }\n  local_24 = 0;\n  lVar2 = FUN_00101500(*(undefined8 *)(param_2 + 8),param_2 + 0x10,param_1 + -2,&local_24);\n  if (0 < local_24) {\n    lVar3 = 0;\n    do {\n      lVar1 = lVar3 * 8;\n      lVar3 = lVar3 + 1;\n      puts(*(char **)(lVar2 + lVar1));\n    } while ((int)lVar3 < local_24);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fa8)();\n  return sVar1;\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00103f98)();\n  return iVar1;\n}\n\n", 
    "001012e0": "\nvoid FUN_001012e0(long param_1)\n\n{\n  *(long *)(param_1 + 8) = param_1;\n  *(long *)param_1 = param_1;\n  return;\n}\n\n", 
    "00101310": "\nvoid FUN_00101310(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x18);\n  *puVar1 = param_2;\n  FUN_00101300(puVar1 + 1,param_1);\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101130": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc0)();\n  return pvVar1;\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001016d8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00101250": "\n/* WARNING: Removing unreachable block (ram,0x00101274) */\n/* WARNING: Removing unreachable block (ram,0x00101280) */\n\nvoid FUN_00101250(void)\n\n{\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101290": "\nvoid FUN_00101290(void)\n\n{\n  if (DAT_00104028 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101220();\n    DAT_00104028 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001016d0": "\nvoid FUN_001016d0(void)\n\n{\n  return;\n}\n\n", 
    "001010b0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001012d0": "\nvoid thunk_FUN_00101250(void)\n\n{\n  FUN_00101250();\n  return;\n}\n\n", 
    "001010f0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fb0)();\n  return;\n}\n\n", 
    "001011f0": "\nvoid FUN_001011f0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101140,unaff_retaddr,&stack0x00000008,FUN_00101660,FUN_001016d0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fa0)();\n  return iVar1;\n}\n\n", 
    "001012f0": "\nvoid FUN_001012f0(long *param_1,long **param_2,long param_3)\n\n{\n  *(long **)(param_3 + 8) = param_1;\n  *param_1 = param_3;\n  param_1[1] = (long)param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101300": "\nvoid FUN_00101300(undefined8 param_1,long param_2)\n\n{\n  FUN_001012f0(param_1,*(undefined8 *)(param_2 + 8),param_2);\n  return;\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101500": "\nvoid * FUN_00101500(char *param_1,long param_2,int param_3,int *param_4)\n\n{\n  char cVar1;\n  int **ppiVar2;\n  size_t sVar3;\n  void *pvVar4;\n  size_t sVar5;\n  void *pvVar6;\n  int *piVar7;\n  char *pcVar8;\n  char *pcVar9;\n  int *piVar10;\n  int iVar11;\n  int **ppiVar12;\n  long lVar13;\n  int iVar14;\n  ulong uVar15;\n  bool bVar16;\n  int local_40;\n  \n  if (param_3 == 0) {\n    *param_4 = 0;\n    pvVar4 = (void *)0x0;\n  }\n  else {\n    sVar3 = strlen(param_1);\n    pvVar4 = malloc((long)param_3 << 2);\n    if (param_3 < 1) {\n      iVar11 = 0;\n    }\n    else {\n      iVar11 = 0;\n      uVar15 = 0;\n      do {\n        sVar5 = strlen(*(char **)(param_2 + uVar15 * 8));\n        *(int *)((long)pvVar4 + uVar15 * 4) = (int)sVar5;\n        iVar11 = iVar11 + (int)sVar5;\n        bVar16 = uVar15 != param_3 - 1;\n        uVar15 = uVar15 + 1;\n      } while (bVar16);\n    }\n    local_40 = (int)sVar3;\n    pvVar6 = calloc((long)local_40 << 3,1);\n    piVar7 = (int *)FUN_00101340(param_1,param_2,pvVar4,param_3,pvVar6,0);\n    iVar14 = *piVar7;\n    pvVar4 = malloc((long)iVar14 << 3);\n    if (0 < iVar14) {\n      ppiVar12 = (int **)(piVar7 + 2);\n      lVar13 = 0;\n      do {\n        pcVar8 = (char *)malloc((long)(iVar11 + 100));\n        ppiVar2 = (int **)*ppiVar12;\n        *(char **)((long)pvVar4 + lVar13 * 8) = pcVar8;\n        for (; ppiVar12 != ppiVar2; ppiVar2 = (int **)*ppiVar2) {\n          piVar10 = ppiVar2[-1];\n          do {\n            pcVar9 = pcVar8;\n            cVar1 = *(char *)piVar10;\n            piVar10 = (int *)((long)piVar10 + 1);\n            pcVar8 = pcVar9 + 1;\n            *pcVar9 = cVar1;\n          } while (cVar1 != '\\0');\n          *pcVar9 = ' ';\n        }\n        pcVar8[-1] = '\\0';\n        iVar14 = *piVar7;\n        lVar13 = lVar13 + 1;\n        ppiVar12 = ppiVar12 + 2;\n      } while ((int)lVar13 < iVar14);\n    }\n    *param_4 = iVar14;\n  }\n  return pvVar4;\n}\n\n"
}