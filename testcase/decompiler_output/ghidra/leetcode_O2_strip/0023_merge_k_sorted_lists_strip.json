{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101680": "\nvoid FUN_00101680(void)\n\n{\n  return;\n}\n\n", 
    "00101340": "\nint FUN_00101340(void)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00101330();\n  return iVar1 + 1;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101320": "\nvoid FUN_00101320(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = *param_1;\n  *param_1 = *param_2;\n  *param_2 = uVar1;\n  return;\n}\n\n", 
    "00101540": "\nundefined8 FUN_00101540(long *param_1)\n\n{\n  undefined8 *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined8 *puVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined auStack_38 [8];\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  puVar4 = (undefined8 *)FUN_00101510();\n  local_30 = 0;\n  puVar1 = puVar4 + 1;\n  if (*param_1 != 0) {\n    FUN_001014c0(*puVar4,puVar1);\n  }\n  if (param_1[1] != 0) {\n    FUN_001014c0(*puVar4,puVar1);\n  }\n  FUN_00101480(puVar4,puVar1);\n  iVar2 = *(int *)(puVar4 + 1);\n  puVar3 = auStack_38;\n  while (0 < iVar2) {\n    puVar5 = (undefined *)FUN_001014e0(puVar4,puVar1);\n    *(undefined **)(puVar3 + 8) = puVar5;\n    if (*(long *)(puVar5 + 8) != 0) {\n      FUN_001014c0(*puVar4,puVar1);\n    }\n    iVar2 = *(int *)(puVar4 + 1);\n    *(undefined8 *)(puVar5 + 8) = 0;\n    puVar3 = puVar5;\n  }\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_30;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101260": "\n/* WARNING: Removing unreachable block (ram,0x00101273) */\n/* WARNING: Removing unreachable block (ram,0x0010127f) */\n\nvoid FUN_00101260(void)\n\n{\n  return;\n}\n\n", 
    "00101480": "\nvoid FUN_00101480(undefined8 *param_1,int *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  \n  iVar1 = *param_2;\n  iVar2 = iVar1 / 2 + -1;\n  if (iVar2 < 1) {\n    return;\n  }\n  while( true ) {\n    FUN_001013a0(*param_1,iVar1,iVar2);\n    iVar2 = iVar2 + -1;\n    if (iVar2 == 0) break;\n    iVar1 = *param_2;\n  }\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101360": "\nvoid FUN_00101360(long param_1,ulong param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  uint uVar3;\n  ulong uVar4;\n  long extraout_RDX;\n  \n  uVar4 = param_2 & 0xffffffff;\n  if ((int)param_2 < 0) {\n    return;\n  }\n  do {\n    uVar3 = FUN_00101350(uVar4 & 0xffffffff);\n    uVar4 = (ulong)uVar3;\n    piVar2 = *(int **)(param_1 + (long)(int)uVar3 * 8);\n    iVar1 = **(int **)(param_1 + extraout_RDX * 8);\n    if (*piVar2 == iVar1 || *piVar2 < iVar1) {\n      return;\n    }\n    FUN_00101320();\n  } while (-1 < (int)uVar4);\n  return;\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fb8)();\n  return iVar1;\n}\n\n", 
    "001013a0": "\nvoid FUN_001013a0(long param_1,uint param_2,ulong param_3)\n\n{\n  int **ppiVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  int iVar5;\n  long extraout_RDX;\n  int **ppiVar6;\n  ulong uVar7;\n  \n  uVar7 = (ulong)param_2;\n  uVar4 = (uint)param_3;\n  param_3 = param_3 & 0xffffffff;\n  while( true ) {\n    if ((int)uVar4 < 0) {\n      return;\n    }\n    FUN_00101340(param_3);\n    iVar5 = FUN_00101330();\n    ppiVar6 = (int **)(param_1 + (long)iVar5 * 8);\n    iVar5 = **ppiVar6;\n    if ((int)extraout_RDX < (int)uVar7) {\n      ppiVar1 = (int **)(param_1 + extraout_RDX * 8);\n      iVar2 = **ppiVar1;\n      if (iVar2 <= iVar5) {\n        ppiVar6 = ppiVar1;\n        iVar5 = iVar2;\n      }\n    }\n    piVar3 = *(int **)(param_1 + (long)(int)param_3 * 8);\n    if (*piVar3 == iVar5 || *piVar3 < iVar5) break;\n    FUN_00101320(ppiVar6);\n    uVar4 = FUN_00101350(param_3 & 0xffffffff);\n    param_3 = (ulong)uVar4;\n  }\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001014e0": "\nundefined8 FUN_001014e0(long *param_1,int *param_2)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  long lVar3;\n  \n  puVar1 = (undefined8 *)*param_1;\n  uVar2 = *puVar1;\n  FUN_00101320(puVar1,puVar1 + (long)*param_2 + -1);\n  lVar3 = *param_1;\n  *param_2 = *param_2 + -1;\n  FUN_00101410(lVar3);\n  return uVar2;\n}\n\n", 
    "001014c0": "\nvoid FUN_001014c0(long param_1,int *param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *param_2;\n  *param_2 = iVar1 + 1;\n  *(undefined8 *)(param_1 + (long)iVar1 * 8) = param_3;\n  FUN_00101360(param_1,iVar1);\n  return;\n}\n\n", 
    "001010c0": "\nundefined8 FUN_001010c0(void)\n\n{\n  int *piVar1;\n  int *piVar2;\n  undefined8 *puVar3;\n  undefined4 *puVar4;\n  int iVar5;\n  long in_FS_OFFSET;\n  int aiStack_48 [2];\n  undefined4 *local_40;\n  int local_38 [2];\n  undefined4 *local_30;\n  long local_20;\n  \n  iVar5 = 0;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_40 = (undefined4 *)0x0;\n  piVar2 = aiStack_48;\n  do {\n    piVar1 = (int *)malloc(0x10);\n    *piVar1 = iVar5;\n    iVar5 = iVar5 + 2;\n    *(undefined8 *)(piVar1 + 2) = 0;\n    *(int **)(piVar2 + 2) = piVar1;\n    piVar2 = piVar1;\n    puVar4 = local_40;\n  } while (iVar5 != 6);\n  for (; puVar4 != (undefined4 *)0x0; puVar4 = *(undefined4 **)(puVar4 + 2)) {\n    __printf_chk(1,&DAT_00102004,*puVar4);\n  }\n  iVar5 = 1;\n  putchar(10);\n  local_30 = (undefined4 *)0x0;\n  piVar2 = local_38;\n  do {\n    piVar1 = (int *)malloc(0x10);\n    *piVar1 = iVar5;\n    iVar5 = iVar5 + 2;\n    *(undefined8 *)(piVar1 + 2) = 0;\n    *(int **)(piVar2 + 2) = piVar1;\n    piVar2 = piVar1;\n    puVar4 = local_30;\n  } while (iVar5 != 0xb);\n  for (; puVar4 != (undefined4 *)0x0; puVar4 = *(undefined4 **)(puVar4 + 2)) {\n    __printf_chk(1,&DAT_00102004,*puVar4);\n  }\n  putchar(10);\n  puVar3 = (undefined8 *)malloc(0x10);\n  *puVar3 = 0;\n  puVar3[1] = 0;\n  for (puVar4 = (undefined4 *)FUN_00101540(puVar3); puVar4 != (undefined4 *)0x0;\n      puVar4 = *(undefined4 **)(puVar4 + 2)) {\n    __printf_chk(1,&DAT_00102004,*puVar4);\n  }\n  putchar(10);\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return 0;\n}\n\n", 
    "00101310": "\nvoid thunk_FUN_00101290(void)\n\n{\n  FUN_00101290();\n  return;\n}\n\n", 
    "00101410": "\nvoid FUN_00101410(long param_1,uint param_2)\n\n{\n  int **ppiVar1;\n  int iVar2;\n  int *piVar3;\n  int iVar4;\n  int iVar5;\n  long extraout_RDX;\n  ulong extraout_RDX_00;\n  int iVar6;\n  ulong uVar7;\n  int **ppiVar8;\n  \n  uVar7 = (ulong)param_2;\n  iVar5 = 0;\n  while( true ) {\n    iVar5 = FUN_00101330(iVar5);\n    if ((int)uVar7 <= iVar5) {\n      return;\n    }\n    iVar4 = FUN_00101340(extraout_RDX_00 & 0xffffffff);\n    ppiVar8 = (int **)(param_1 + (long)iVar5 * 8);\n    iVar6 = **ppiVar8;\n    if (iVar4 < (int)uVar7) {\n      ppiVar1 = (int **)(param_1 + (long)iVar4 * 8);\n      iVar2 = **ppiVar1;\n      if (iVar2 <= iVar6) {\n        ppiVar8 = ppiVar1;\n        iVar6 = iVar2;\n        iVar5 = iVar4;\n      }\n    }\n    piVar3 = *(int **)(param_1 + extraout_RDX * 8);\n    if (*piVar3 == iVar6 || *piVar3 < iVar6) break;\n    FUN_00101320(ppiVar8);\n  }\n  return;\n}\n\n", 
    "00101510": "\nvoid ** FUN_00101510(void)\n\n{\n  void **ppvVar1;\n  void *pvVar2;\n  \n  ppvVar1 = (void **)malloc(0x10);\n  pvVar2 = malloc(0x10);\n  *(undefined4 *)(ppvVar1 + 1) = 0;\n  *ppvVar1 = pvVar2;\n  return ppvVar1;\n}\n\n", 
    "00101610": "\nvoid FUN_00101610(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101350": "\nint FUN_00101350(int param_1)\n\n{\n  return (param_1 + -1) / 2;\n}\n\n", 
    "00101230": "\nvoid FUN_00101230(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_001010c0,unaff_retaddr,&stack0x00000008,FUN_00101610,FUN_00101680,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101330": "\nint FUN_00101330(int param_1)\n\n{\n  return param_1 * 2 + 1;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fc0)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101290": "\n/* WARNING: Removing unreachable block (ram,0x001012b4) */\n/* WARNING: Removing unreachable block (ram,0x001012c0) */\n\nvoid FUN_00101290(void)\n\n{\n  return;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001012d0": "\nvoid FUN_001012d0(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101260();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00101688": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}