{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fc0)();\n  return;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return;\n}\n\n", 
    "00101110": "\nvoid FUN_00101110(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (FUN_00101080,unaff_retaddr,&stack0x00000008,FUN_00101280,FUN_001012f0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101060": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "00101170": "\n/* WARNING: Removing unreachable block (ram,0x00101194) */\n/* WARNING: Removing unreachable block (ram,0x001011a0) */\n\nvoid FUN_00101170(void)\n\n{\n  return;\n}\n\n", 
    "00101280": "\nvoid FUN_00101280(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101050": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101140": "\n/* WARNING: Removing unreachable block (ram,0x00101153) */\n/* WARNING: Removing unreachable block (ram,0x0010115f) */\n\nvoid FUN_00101140(void)\n\n{\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101080": "\nundefined8 FUN_00101080(void)\n\n{\n  undefined4 *puVar1;\n  undefined4 *puVar2;\n  undefined4 *puVar3;\n  \n  puVar1 = (undefined4 *)malloc(0x10);\n  puVar2 = (undefined4 *)malloc(0x10);\n  puVar3 = (undefined4 *)malloc(0x10);\n  *puVar1 = 1;\n  *puVar3 = 4;\n  *(undefined8 *)(puVar3 + 2) = 0;\n  *puVar2 = 2;\n  *(undefined4 **)(puVar1 + 2) = puVar3;\n  *(undefined4 **)(puVar2 + 2) = puVar3;\n  puVar1 = (undefined4 *)FUN_00101200(puVar1,puVar2);\n  if (puVar1 != (undefined4 *)0x0) {\n    __printf_chk(1,&DAT_00102004,*puVar1);\n  }\n  return 0;\n}\n\n", 
    "00101070": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001012f8": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "001011b0": "\nvoid FUN_001011b0(void)\n\n{\n  if (DAT_00104010 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104008);\n    }\n    FUN_00101140();\n    DAT_00104010 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001011f0": "\nvoid thunk_FUN_00101170(void)\n\n{\n  FUN_00101170();\n  return;\n}\n\n", 
    "001012f0": "\nvoid FUN_001012f0(void)\n\n{\n  return;\n}\n\n", 
    "00101200": "\nlong FUN_00101200(long param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  \n  if ((param_1 == 0) || (lVar4 = param_1, param_2 == 0)) {\n    lVar4 = 0;\n  }\n  else {\n    do {\n      lVar3 = lVar4;\n      lVar4 = *(long *)(lVar3 + 8);\n    } while (lVar4 != 0);\n    *(long *)(lVar3 + 8) = param_2;\n    lVar1 = param_1;\n    lVar2 = param_1;\n    do {\n      if (*(long *)(lVar1 + 8) == 0) break;\n      lVar2 = *(long *)(lVar2 + 8);\n      lVar1 = *(long *)(*(long *)(lVar1 + 8) + 8);\n      if (lVar2 == lVar1) {\n        for (; param_1 != lVar1; param_1 = *(long *)(param_1 + 8)) {\n          lVar1 = *(long *)(lVar1 + 8);\n        }\n        *(undefined8 *)(lVar3 + 8) = 0;\n        return lVar1;\n      }\n    } while (lVar1 != 0);\n    *(undefined8 *)(lVar3 + 8) = 0;\n  }\n  return lVar4;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}