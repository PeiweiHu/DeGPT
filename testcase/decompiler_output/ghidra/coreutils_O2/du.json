{
    "00103cf5": "\nvoid hash_get_first_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103bd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unsetenv(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unsetenv_0011bf38)();\n  return iVar1;\n}\n\n", 
    "00103ab0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_0011bea8)();\n  return iVar1;\n}\n\n", 
    "00109c30": "\nundefined8 hash_insert_if_absent(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_00109c7e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    check_tuning_isra_0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_00109cda;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < (float)UINT_00114b58) {\n      if ((float)UINT_00114b5c <= fVar7) {\n        uVar4 = (long)(fVar7 - (float)UINT_00114b5c) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = hash_rehash(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = hash_insert_if_absent_cold();\n          return uVar5;\n        }\n        goto LAB_00109cda;\n      }\n    }\n  }\n  else {\nLAB_00109cda:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_00109c7e;\n    }\n    plVar3 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_00109c7e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_00109c7e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103cf0": "\nvoid safe_hasher_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d280": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112510": "\nuint rotl16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "0011d040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* localtime_r@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112630": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001099b0": "\nvoid hash_free(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_00109a5c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_00109a1f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_00109a1f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_00109a5c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "0010dd60": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "0011d168": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010ed30": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010ed9f;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010ed9f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "0011d288": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109590": "\nlong hash_lookup(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "00109470": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid hash_print_statistics(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = hash_get_n_entries();\n  uVar2 = hash_get_n_buckets();\n  uVar3 = hash_get_n_buckets_used();\n  uVar4 = hash_get_max_bucket_length();\n  __fprintf_chk(param_2,1,0x114ab6,uVar1);\n  __fprintf_chk(param_2,1,0x114ace,uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _UINT_00114b60) / dVar6,param_2,1,&UINT_00114b00,uVar3);\n  __fprintf_chk(param_2,1,0x114ae6,uVar4);\n  return;\n}\n\n", 
    "0010b6b0": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00109230": "\nundefined8 transfer_entries(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00109260:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)safe_hasher(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          free_entry_isra_0(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_001092d0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_001092d0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00109260;\n    plVar3 = (long *)safe_hasher(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "00109110": "\nlong hash_find_entry(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)safe_hasher();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_001091b1:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            free_entry_isra_0(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_001091b1;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        free_entry_isra_0(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010f410": "\nlong filesystem_type(long param_1,int param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 *__ptr;\n  undefined8 *puVar5;\n  long in_FS_OFFSET;\n  undefined8 local_b8 [2];\n  statfs local_a8;\n  long local_30;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(lVar3 + 0x49) & 2) != 0) {\n    lVar4 = *(long *)(lVar3 + 0x50);\n    if (lVar4 == 0) {\n      lVar4 = hash_initialize(0xd,0,dev_type_hash,dev_type_compare,PTR_free_0011bfc8);\n      *(long *)(lVar3 + 0x50) = lVar4;\n      if (lVar4 != 0) goto LAB_0010f44c;\n    }\n    else {\nLAB_0010f44c:\n      local_b8[0] = *(undefined8 *)(param_1 + 0x78);\n      lVar3 = hash_lookup(lVar4,local_b8);\n      if (lVar3 != 0) {\n        lVar3 = *(long *)(lVar3 + 8);\n        goto LAB_0010f4bb;\n      }\n    }\n    if ((-1 < param_2) && (iVar2 = fstatfs(param_2,&local_a8), lVar3 = local_a8.f_type, iVar2 == 0))\n    {\n      if ((lVar4 != 0) && (__ptr = (undefined8 *)malloc(0x10), __ptr != (undefined8 *)0x0)) {\n        uVar1 = *(undefined8 *)(param_1 + 0x78);\n        __ptr[1] = lVar3;\n        *__ptr = uVar1;\n        puVar5 = (undefined8 *)hash_insert(lVar4,__ptr);\n        if (puVar5 == (undefined8 *)0x0) {\n          free(__ptr);\n          lVar3 = local_a8.f_type;\n        }\n        else {\n          lVar3 = local_a8.f_type;\n          if (__ptr != puVar5) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n        }\n      }\n      goto LAB_0010f4bb;\n    }\n  }\n  lVar3 = 0;\nLAB_0010f4bb:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar3;\n}\n\n", 
    "00103910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_closedir_0011bdd8)();\n  return iVar1;\n}\n\n", 
    "0010d470": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00111f50": "\nvoid extend_abbrs(void *param_1,void *param_2,size_t param_3)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(param_1,param_2,param_3);\n  *(undefined *)((long)pvVar1 + param_3) = 0;\n  return;\n}\n\n", 
    "00106a70": "\nundefined8 file_pattern_matches_isra_0(long param_1,long param_2,undefined8 param_3)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  \n  if (param_2 == 0) {\n    return 0;\n  }\n  lVar2 = 0;\n  do {\n    uVar1 = exclude_patopts(param_1,param_3);\n    if ((char)uVar1 != '\\0') {\n      return uVar1;\n    }\n    lVar2 = lVar2 + 1;\n    param_1 = param_1 + 0x48;\n  } while (lVar2 != param_2);\n  return 0;\n}\n\n", 
    "00106b90": "\nvoid add_exclude(long *param_1,char *param_2,uint param_3)\n\n{\n  uint *puVar1;\n  char cVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  char *__pattern;\n  size_t __n;\n  undefined4 *puVar8;\n  uint __cflags;\n  \n  lVar6 = *param_1;\n  if (((param_3 & 0x18000000) == 0) ||\n     (cVar2 = fnmatch_pattern_has_wildcards(param_2,param_3), cVar2 == '\\0')) {\n    if (((lVar6 == 0) || (*(int *)(lVar6 + 8) != 0)) ||\n       (((*(uint *)(lVar6 + 0xc) ^ param_3) & 0x60000018) != 0)) {\n      new_exclude_segment_isra_0(param_1,0,param_3);\n      lVar6 = *param_1;\n    }\n    lVar5 = xstrdup(param_2);\n    if ((param_3 & 0x10000002) == 0x10000000) {\n      unescape_pattern(lVar5);\n    }\n    lVar6 = hash_insert(*(undefined8 *)(lVar6 + 0x10),lVar5);\n    if (lVar5 != lVar6) {\n      (*(code *)PTR_free_0011bfc8)(lVar5);\n      return;\n    }\n  }\n  else {\n    if ((lVar6 == 0) ||\n       ((*(int *)(lVar6 + 8) != 1 || (((*(uint *)(lVar6 + 0xc) ^ param_3) & 0x20000000) != 0)))) {\n      new_exclude_segment_isra_0(param_1,1,param_3);\n      lVar6 = *param_1;\n    }\n    lVar5 = *(long *)(lVar6 + 0x20);\n    lVar7 = *(long *)(lVar6 + 0x10);\n    if (lVar5 == *(long *)(lVar6 + 0x18)) {\n      lVar7 = x2nrealloc(lVar7,lVar6 + 0x18,0x48);\n      lVar5 = *(long *)(lVar6 + 0x20);\n      *(long *)(lVar6 + 0x10) = lVar7;\n    }\n    *(long *)(lVar6 + 0x20) = lVar5 + 1;\n    puVar1 = (uint *)(lVar7 + lVar5 * 0x48);\n    *puVar1 = param_3;\n    if ((param_3 & 0x8000000) == 0) {\n      if ((param_3 & 0x4000000) != 0) {\n        param_2 = (char *)xstrdup(param_2);\n        exclude_add_pattern_buffer(param_1,param_2);\n      }\n      *(char **)(puVar1 + 2) = param_2;\n      return;\n    }\n    __cflags = (int)param_3 >> 3 & 2U | 9;\n    if ((param_3 & 8) == 0) {\n      iVar3 = regcomp((regex_t *)(puVar1 + 2),param_2,__cflags);\n    }\n    else {\n      sVar4 = strlen(param_2);\n      do {\n        __n = sVar4;\n        if (__n == 0) goto LAB_00106c70;\n        sVar4 = __n - 1;\n      } while (param_2[__n - 1] == '/');\n      __pattern = (char *)xmalloc(__n + 7);\n      memcpy(__pattern,param_2,__n);\n      puVar8 = (undefined4 *)(__pattern + __n);\n      *puVar8 = 0x2a2e2f28;\n      *(undefined2 *)(puVar8 + 1) = 0x3f29;\n      *(undefined *)((long)puVar8 + 6) = 0;\n      iVar3 = regcomp((regex_t *)(puVar1 + 2),__pattern,__cflags);\n      free(__pattern);\n    }\n    if (iVar3 != 0) {\n      lVar5 = *(long *)(lVar6 + 0x20) + -1;\nLAB_00106c70:\n      *(long *)(lVar6 + 0x20) = lVar5;\n    }\n  }\n  return;\n}\n\n", 
    "00103aa0": "\nvoid __isoc99_sscanf(void)\n\n{\n  (*(code *)PTR___isoc99_sscanf_0011bea0)();\n  return;\n}\n\n", 
    "00104cb0": "\nvoid print_only_size(long param_1)\n\n{\n  FILE *__stream;\n  char *__s;\n  long in_FS_OFFSET;\n  undefined auStack_2a8 [664];\n  long local_10;\n  \n  __stream = stdout;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == -1) {\n    __s = (char *)dcgettext(0,\"Infinity\",5);\n  }\n  else {\n    __s = (char *)human_readable(param_1,auStack_2a8,human_output_opts,1,output_block_size);\n  }\n  fputs_unlocked(__s,__stream);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103ce0": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_0011bfc0)();\n  return;\n}\n\n", 
    "00111f60": "\nvoid getenv_TZ(void)\n\n{\n  getenv(\"TZ\");\n  return;\n}\n\n", 
    "00103bc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_0011bf30)();\n  return pDVar1;\n}\n\n", 
    "0011d270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strftime@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint regcomp(regex_t *__preg,char *__pattern,int __cflags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* regcomp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112520": "\nuint rotr16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00106060": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,&DAT_00114720,uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_001060e8;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_001060e8:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "0011d278": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b180": "\nvoid mbuiter_multi_next(char *param_1)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  char cVar3;\n  int iVar4;\n  size_t sVar5;\n  undefined8 uVar6;\n  long lVar7;\n  \n  if (param_1[0xc] != '\\0') {\n    return;\n  }\n  if (*param_1 == '\\0') {\n    pcVar1 = *(char **)(param_1 + 0x10);\n    cVar3 = is_basic((int)*pcVar1);\n    if (cVar3 != '\\0') {\n      *(undefined8 *)(param_1 + 0x18) = 1;\n      cVar3 = *pcVar1;\n      param_1[0x20] = '\\x01';\n      *(int *)(param_1 + 0x24) = (int)cVar3;\n      goto LAB_0010b1c2;\n    }\n    iVar4 = mbsinit((mbstate_t *)(param_1 + 4));\n    if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail((char *)((long)&UINT_00114bf0 + 2),(char *)&UINT_00114be4,0x96,\n                    (char *)&__PRETTY_FUNCTION___5042);\n    }\n    *param_1 = '\\x01';\n  }\n  sVar5 = __ctype_get_mb_cur_max();\n  uVar2 = *(undefined8 *)(param_1 + 0x10);\n  uVar6 = strnlen1(uVar2,sVar5);\n  lVar7 = rpl_mbrtowc(param_1 + 0x24,uVar2,uVar6,(mbstate_t *)(param_1 + 4));\n  *(long *)(param_1 + 0x18) = lVar7;\n  if (lVar7 == -1) {\n    *(undefined8 *)(param_1 + 0x18) = 1;\n    param_1[0x20] = '\\0';\n    param_1[0xc] = '\\x01';\n    return;\n  }\n  if (lVar7 == -2) {\n    sVar5 = strlen(*(char **)(param_1 + 0x10));\n    param_1[0x20] = '\\0';\n    *(size_t *)(param_1 + 0x18) = sVar5;\n  }\n  else {\n    if (lVar7 == 0) {\n      *(undefined8 *)(param_1 + 0x18) = 1;\n      if (**(char **)(param_1 + 0x10) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail((char *)((long)&UINT_00114c08 + 1),(char *)&UINT_00114be4,0xb2,\n                      (char *)&__PRETTY_FUNCTION___5042);\n      }\n      if (*(int *)(param_1 + 0x24) != 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail((char *)&UINT_00114c20,(char *)&UINT_00114be4,0xb3,\n                      (char *)&__PRETTY_FUNCTION___5042);\n      }\n    }\n    param_1[0x20] = '\\x01';\n    iVar4 = mbsinit((mbstate_t *)(param_1 + 4));\n    if (iVar4 != 0) {\n      *param_1 = '\\0';\n    }\n  }\nLAB_0010b1c2:\n  param_1[0xc] = '\\x01';\n  return;\n}\n\n", 
    "0010d480": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0011bdd0)();\n  return iVar1;\n}\n\n", 
    "0010d000": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f780": "\nundefined8 fts_palloc_isra_0(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n", 
    "0010e450": "\nbool bkm_scale(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "0010f540": "\nulong dirent_inode_sort_may_be_useful(void)\n\n{\n  ulong uVar1;\n  \n  uVar1 = filesystem_type();\n  if ((uVar1 != 0x1021994) && (uVar1 != 0xff534d42)) {\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0x6969);\n  }\n  return 0;\n}\n\n", 
    "00103bf0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fstatfs_0011bf48)();\n  return iVar1;\n}\n\n", 
    "00105ef0": "\nvoid argv_iter_init_argv(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x30);\n  if (puVar1 != (undefined8 *)0x0) {\n    *puVar1 = 0;\n    puVar1[4] = param_1;\n    puVar1[5] = param_1;\n  }\n  return;\n}\n\n", 
    "00103ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t mktime(tm *__tp)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_mktime_0011beb8)();\n  return tVar1;\n}\n\n", 
    "0010dc20": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111520": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00112610": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0011d140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d260": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00111640": "\nundefined8 dev_from_mount_options_isra_0(void)\n\n{\n  return 0xffffffffffffffff;\n}\n\n", 
    "0011d020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010df80": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,&DAT_00114720,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* closedir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103cff": "\nvoid hash_insert_if_absent_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t timegm(tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* timegm@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103cfa": "\nvoid hash_rehash_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001066f0": "\nvoid new_exclude_segment_isra_0(undefined8 *param_1,int param_2,uint param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  code *pcVar3;\n  code *pcVar4;\n  bool bVar5;\n  \n  puVar1 = (undefined8 *)xzalloc(0x28);\n  *(int *)(puVar1 + 1) = param_2;\n  *(uint *)((long)puVar1 + 0xc) = param_3;\n  if (param_2 == 0) {\n    bVar5 = (param_3 & 0x10) != 0;\n    pcVar3 = string_compare;\n    if (bVar5) {\n      pcVar3 = string_compare_ci;\n    }\n    pcVar4 = string_hasher;\n    if (bVar5) {\n      pcVar4 = string_hasher_ci;\n    }\n    uVar2 = hash_initialize(0,0,pcVar4,pcVar3,string_free);\n    puVar1[2] = uVar2;\n  }\n  uVar2 = *param_1;\n  *param_1 = puVar1;\n  *puVar1 = uVar2;\n  return;\n}\n\n", 
    "00109210": "\nvoid allocate_entry_isra_0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "0010d690": "\nundefined  [16] make_timespec(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00103810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0011bd58)();\n  return sVar1;\n}\n\n", 
    "00103930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_0011bde8)();\n  return iVar1;\n}\n\n", 
    "00103ac0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint regexec(regex_t *__preg,char *__string,size_t __nmatch,regmatch_t *__pmatch,int __eflags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_regexec_0011beb0)();\n  return iVar1;\n}\n\n", 
    "00103be0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoul_0011bf40)();\n  return uVar1;\n}\n\n", 
    "00112500": "\nvoid rotr_sz(void)\n\n{\n  rotr64();\n  return;\n}\n\n", 
    "0011d250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112620": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00111650": "\nvoid free_mount_entry(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1[1]);\n  free(param_1[2]);\n  if ((*(byte *)(param_1 + 5) & 4) != 0) {\n    free(param_1[3]);\n  }\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "0011d010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nintmax_t strtoimax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoimax@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010cd80": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "0011d130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107170": "\nvoid fwrite_uppcase(FILE *param_1,byte *param_2,long param_3)\n\n{\n  byte bVar1;\n  __int32_t **pp_Var2;\n  byte *pbVar3;\n  \n  if (param_3 != 0) {\n    pbVar3 = param_2 + param_3;\n    pp_Var2 = __ctype_toupper_loc();\n    do {\n      bVar1 = *param_2;\n      param_2 = param_2 + 1;\n      fputc((*pp_Var2)[bVar1],param_1);\n    } while (param_2 != pbVar3);\n    return;\n  }\n  return;\n}\n\n", 
    "0010b8f0": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0011d258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid endmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* endmntent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * freopen(char *__filename,char *__modes,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* freopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0011bd50)();\n  return sVar1;\n}\n\n", 
    "0010d460": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00103920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint regcomp(regex_t *__preg,char *__pattern,int __cflags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_regcomp_0011bde0)();\n  return iVar1;\n}\n\n", 
    "00103cb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strstr_0011bfa8)();\n  return pcVar1;\n}\n\n", 
    "00104ec0": "\nundefined4 process_file(long param_1,long param_2)\n\n{\n  long lVar1;\n  char cVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  long extraout_RDX;\n  ushort uVar8;\n  long lVar9;\n  long in_FS_OFFSET;\n  bool bVar10;\n  undefined auVar11 [16];\n  ulong local_88;\n  ulong uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  ulong local_68;\n  ulong uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  long local_40;\n  \n  uVar8 = *(ushort *)(param_2 + 0x70);\n  uVar7 = *(undefined8 *)(param_2 + 0x38);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (uVar8 == 4) {\n    uVar6 = quotearg_style(4,uVar7);\n    uVar5 = dcgettext(0,\"cannot read directory %s\",5);\n    uVar3 = 0;\n    error(0,*(undefined4 *)(param_2 + 0x40),uVar5,uVar6);\n    if (time_type != 0) goto LAB_00104f13;\nLAB_00105128:\n    auVar11 = get_stat_ctime_isra_0(*(undefined8 *)(param_2 + 0xd0),*(undefined8 *)(param_2 + 0xd8))\n    ;\n    if (apparent_size != '\\0') goto LAB_00104f36;\nLAB_00105142:\n    lVar9 = *(long *)(param_2 + 0xb8) << 9;\n  }\n  else {\n    uVar3 = 1;\n    if (uVar8 != 6) {\n      uVar3 = excluded_file_name(exclude,uVar7);\n      if ((char)uVar3 == '\\0') {\n        if (uVar8 == 0xb) {\n          fts_set(param_1,param_2,1);\n          lVar9 = fts_read(param_1);\n          if (param_2 != lVar9) {\n                    /* WARNING: Subroutine does not return */\n            __assert_fail(\"e == ent\",\"src/du.c\",0x20e,\"process_file\");\n          }\n          uVar8 = *(ushort *)(param_2 + 0x70);\n        }\n        if (uVar8 == 10 || uVar8 == 0xd) {\n          uVar7 = quotearg_style(4,uVar7);\n          uVar6 = dcgettext(0,\"cannot access %s\",5);\n          error(0,*(undefined4 *)(param_2 + 0x40),uVar6,uVar7);\n          goto LAB_001050ff;\n        }\n        if (((((*(byte *)(param_1 + 0x48) & 0x40) != 0) && (0 < *(long *)(param_2 + 0x58))) &&\n            (*(long *)(param_1 + 0x18) != *(long *)(param_2 + 0x78))) ||\n           ((opt_count_all == '\\0' &&\n            (((hash_all != '\\0' ||\n              (((*(uint *)(param_2 + 0x90) & 0xf000) != 0x4000 && (1 < *(ulong *)(param_2 + 0x88))))\n              ) && (cVar2 = hash_ins(di_files,*(undefined8 *)(param_2 + 0x80),\n                                     *(undefined8 *)(param_2 + 0x78)), cVar2 == '\\0'))))))\n        goto LAB_001050f0;\n        if (uVar8 != 2) {\n          if (uVar8 == 7) {\n            uVar3 = 0;\n            uVar6 = quotearg_n_style_colon(0,3,uVar7);\n            error(0,*(undefined4 *)(param_2 + 0x40),&DAT_00114720,uVar6);\n          }\n          else {\n            uVar3 = 1;\n            if (uVar8 == 1) goto LAB_001050ff;\n          }\n          goto LAB_00104f01;\n        }\n        cVar2 = cycle_warning_required(param_1,param_2);\n        if ((cVar2 != '\\0') && (uVar3 = mount_point_in_fts_cycle(param_2), (char)uVar3 == '\\0')) {\n          uVar7 = quotearg_n_style_colon(0,3,uVar7);\n          uVar6 = dcgettext(0,\n                            \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                            ,5);\n          error(0,0,uVar6,uVar7);\n          goto LAB_001050ff;\n        }\n      }\n      else {\nLAB_001050f0:\n        if (uVar8 == 1) {\n          fts_set(param_1,param_2,4);\n          lVar9 = fts_read(param_1);\n          if (param_2 != lVar9) {\n                    /* WARNING: Subroutine does not return */\n            __assert_fail(\"e == ent\",\"src/du.c\",0x22f,\"process_file\");\n          }\n        }\n      }\n      uVar3 = 1;\n      goto LAB_001050ff;\n    }\nLAB_00104f01:\n    if (time_type == 0) goto LAB_00105128;\nLAB_00104f13:\n    if (time_type == 2) {\n      auVar11 = get_stat_ctime_isra_0\n                          (*(undefined8 *)(param_2 + 0xc0),*(undefined8 *)(param_2 + 200));\n    }\n    else {\n      auVar11 = get_stat_ctime_isra_0\n                          (*(undefined8 *)(param_2 + 0xe0),*(undefined8 *)(param_2 + 0xe8));\n    }\n    if (apparent_size == '\\0') goto LAB_00105142;\nLAB_00104f36:\n    lVar9 = 0;\n    if (-1 < *(long *)(param_2 + 0xa8)) {\n      lVar9 = *(long *)(param_2 + 0xa8);\n    }\n  }\n  duinfo_set(&local_88,lVar9,SUB168(auVar11,0),SUB168(auVar11 >> 0x40,0));\n  lVar9 = dulvl_7302;\n  uVar4 = *(ulong *)(param_2 + 0x58);\n  local_68 = local_88;\n  uStack_60 = uStack_80;\n  local_58 = local_78;\n  uStack_50 = uStack_70;\n  if (n_alloc_7301 == 0) {\n    n_alloc_7301 = uVar4 + 10;\n    dulvl_7302 = xcalloc(n_alloc_7301,0x40);\n    cVar2 = opt_separate_dirs;\n  }\n  else {\n    cVar2 = opt_separate_dirs;\n    if (prev_level != uVar4) {\n      if (prev_level < uVar4) {\n        if (n_alloc_7301 <= uVar4) {\n          dulvl_7302 = xnrealloc(dulvl_7302,uVar4,0x80);\n          n_alloc_7301 = uVar4 * 2;\n        }\n        cVar2 = opt_separate_dirs;\n        if (prev_level + 1 <= uVar4) {\n          lVar9 = (prev_level + 1) * 0x40 + dulvl_7302;\n          do {\n            duinfo_init(lVar9);\n            duinfo_init(lVar9 + 0x20);\n            lVar9 = lVar9 + 0x40;\n          } while (extraout_RDX + 1U <= uVar4);\n        }\n      }\n      else {\n        if (prev_level - 1 != uVar4) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"level == prev_level - 1\",\"src/du.c\",0x27d,\"process_file\");\n        }\n        lVar1 = dulvl_7302 + prev_level * 0x40;\n        duinfo_add(&local_68,lVar1);\n        cVar2 = opt_separate_dirs;\n        if (opt_separate_dirs == '\\0') {\n          duinfo_add(&local_68,lVar1 + 0x20);\n        }\n        lVar9 = lVar9 + 0x20 + uVar4 * 0x40;\n        duinfo_add(lVar9,lVar1);\n        duinfo_add(lVar9,lVar1 + 0x20);\n      }\n    }\n  }\n  prev_level = uVar4;\n  if (cVar2 == '\\0') {\n    duinfo_add(uVar4 * 0x40 + dulvl_7302,&local_88);\n    duinfo_add(tot_dui,&local_88);\n    if ((uVar8 & 0xfffd) != 4) goto LAB_00105031;\nLAB_0010503a:\n    if (max_depth < uVar4) goto LAB_00105043;\n  }\n  else {\n    if ((uVar8 & 0xfffd) == 4) {\n      duinfo_add(tot_dui,&local_88);\n      goto LAB_0010503a;\n    }\n    duinfo_add(uVar4 * 0x40 + dulvl_7302,&local_88);\n    duinfo_add(tot_dui,&local_88);\nLAB_00105031:\n    if (opt_all != '\\0') goto LAB_0010503a;\nLAB_00105043:\n    if (uVar4 != 0) goto LAB_001050ff;\n  }\n  uVar4 = uStack_60;\n  if (opt_inodes == '\\0') {\n    uVar4 = local_68;\n  }\n  bVar10 = opt_threshold <= uVar4;\n  if ((long)opt_threshold < 0) {\n    bVar10 = uVar4 <= -opt_threshold;\n  }\n  if (bVar10) {\n    print_size(&local_68,uVar7);\n  }\nLAB_001050ff:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar3;\n}\n\n", 
    "00108f80": "\nulong raw_hasher(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = rotr_sz(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "00112950": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "0011d120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d240": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106390": "\nulong di_set_lookup(undefined8 *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  lVar1 = map_device_isra_0(*param_1,param_1 + 2,param_2);\n  if (lVar1 != 0) {\n    lVar2 = map_inode_number_isra_0(param_1 + 1,param_3);\n    if (lVar2 != -1) {\n      lVar1 = hash_lookup(lVar1,lVar2);\n      return (ulong)(lVar1 != 0);\n    }\n  }\n  return 0xffffffff;\n}\n\n", 
    "0011d000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_toupper_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "0010df60": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0011d128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fnmatch(char *__pattern,char *__name,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fnmatch@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getenv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a30": "\nuint exclude_patopts(uint *param_1,char *param_2)\n\n{\n  uint uVar1;\n  \n  if ((*param_1 & 0x8000000) != 0) {\n    uVar1 = regexec((regex_t *)(param_1 + 2),param_2,0,(regmatch_t *)0x0,0);\n    return uVar1 & 0xffffff00 | (uint)(uVar1 == 0);\n  }\n  uVar1 = exclude_fnmatch(*(undefined8 *)(param_1 + 2));\n  return uVar1;\n}\n\n", 
    "0010d310": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103ca0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getdelim(char **__lineptr,size_t *__n,int __delimiter,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getdelim_0011bfa0)();\n  return _Var1;\n}\n\n", 
    "00104eb0": "\nundefined  [16] get_stat_ctime_isra_0(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00107110": "\nvoid fwrite_lowcase(FILE *param_1,byte *param_2,long param_3)\n\n{\n  byte bVar1;\n  __int32_t **pp_Var2;\n  byte *pbVar3;\n  \n  if (param_3 != 0) {\n    pbVar3 = param_2 + param_3;\n    pp_Var2 = __ctype_tolower_loc();\n    do {\n      bVar1 = *param_2;\n      param_2 = param_2 + 1;\n      fputc((*pp_Var2)[bVar1],param_1);\n    } while (param_2 != pbVar3);\n    return;\n  }\n  return;\n}\n\n", 
    "00108c30": "\nvoid fprintftime(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                undefined8 param_5)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  __strftime_internal();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail(param_1,param_2,param_5);\n}\n\n", 
    "00106140": "\nvoid di_ent_free(long param_1)\n\n{\n  hash_free(*(undefined8 *)(param_1 + 8));\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "0010ef40": "\nlong fts_maxarglen(char **param_1)\n\n{\n  size_t sVar1;\n  ulong uVar2;\n  char *__s;\n  \n  __s = *param_1;\n  if (__s != (char *)0x0) {\n    uVar2 = 0;\n    do {\n      sVar1 = strlen(__s);\n      if (uVar2 < sVar1) {\n        uVar2 = sVar1;\n      }\n      __s = param_1[1];\n      param_1 = param_1 + 1;\n    } while (__s != (char *)0x0);\n    return uVar2 + 1;\n  }\n  return 1;\n}\n\n", 
    "00112720": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00106020": "\nvoid argv_iter_free(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    free((void *)param_1[2]);\n  }\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "0010ee20": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "0011d230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint regexec(regex_t *__preg,char *__string,size_t __nmatch,regmatch_t *__pmatch,int __eflags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* regexec@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "0011d350": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * gmtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* gmtime_r@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112600": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "0011d238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t mktime(tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mktime@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b9e0": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "0011d358": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f72b": "\nvoid FUN_0010f72b(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "0011d118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d440": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00104a80": "\nvoid duinfo_add(ulong *param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  int iVar3;\n  ulong uVar4;\n  \n  uVar4 = *param_2 + *param_1;\n  uVar1 = param_2[2];\n  if (CARRY8(*param_2,*param_1)) {\n    uVar4 = 0xffffffffffffffff;\n  }\n  uVar2 = param_2[3];\n  *param_1 = uVar4;\n  param_1[1] = param_1[1] + param_2[1];\n  iVar3 = timespec_cmp(param_1[2],param_1[3],uVar1,uVar2);\n  if (iVar3 < 0) {\n    param_1[2] = uVar1;\n    param_1[3] = uVar2;\n  }\n  return;\n}\n\n", 
    "00105b70": "\nlong argmatch(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "0010f860": "\nvoid diropen_isra_0(undefined4 param_1,uint param_2,undefined8 param_3)\n\n{\n  if ((param_2 & 0x200) != 0) {\n    openat_safer(param_1,param_3);\n    return;\n  }\n  open_safer(param_3,(param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900);\n  return;\n}\n\n", 
    "00103bb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_0011bf28)();\n  return uVar1;\n}\n\n", 
    "00103cd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0011bfb8)();\n  return ppuVar1;\n}\n\n", 
    "00106050": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "0011d340": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "0010ef10": "\nulong fts_compare_ino(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n", 
    "00106290": "\nlong * di_set_alloc(void)\n\n{\n  long *__ptr;\n  long lVar1;\n  long *plVar2;\n  \n  __ptr = (long *)malloc(0x18);\n  plVar2 = __ptr;\n  if (__ptr != (long *)0x0) {\n    lVar1 = hash_initialize(0xb,0,di_ent_hash,di_ent_compare,di_ent_free);\n    *__ptr = lVar1;\n    if (lVar1 == 0) {\n      plVar2 = (long *)0x0;\n      free(__ptr);\n    }\n    else {\n      __ptr[1] = 0;\n      __ptr[2] = 0;\n    }\n  }\n  return plVar2;\n}\n\n", 
    "0011d100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstatat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "0011d220": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __isoc99_sscanf(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __isoc99_sscanf@@GLIBC_2.7 */\n  halt_baddata();\n}\n\n", 
    "00112ad0": "\nvoid mb_copy(void **param_1,void **param_2)\n\n{\n  char cVar1;\n  void **__src;\n  void *pvVar2;\n  void *__n;\n  \n  __src = (void **)*param_2;\n  __n = param_2[1];\n  if (__src == param_2 + 3) {\n    pvVar2 = memcpy(param_1 + 3,__src,(size_t)__n);\n    __n = param_2[1];\n    *param_1 = pvVar2;\n  }\n  else {\n    *param_1 = __src;\n  }\n  cVar1 = *(char *)(param_2 + 2);\n  param_1[1] = __n;\n  *(char *)(param_1 + 2) = cVar1;\n  if (cVar1 != '\\0') {\n    *(undefined4 *)((long)param_1 + 0x14) = *(undefined4 *)((long)param_2 + 0x14);\n  }\n  return;\n}\n\n", 
    "0011d348": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __sprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "0010ef00": "\nulong dev_type_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "0011d108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b350": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  uint *puVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(&UINT_00114c58,1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      puVar5 = &UINT_00114c90;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *(byte *)puVar5;\n        bVar7 = *pbVar4 == *(byte *)puVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        puVar5 = (uint *)((long)puVar5 + (ulong)bVar8 * -2 + 1);\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010d650": "\nsize_t strnlen1(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  size_t sVar2;\n  \n  pvVar1 = memchr(param_1,0,param_2);\n  sVar2 = (long)pvVar1 + (1 - (long)param_1);\n  if (pvVar1 == (void *)0x0) {\n    sVar2 = param_2;\n  }\n  return sVar2;\n}\n\n", 
    "00103cc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_0011bfb0)();\n  return pp_Var1;\n}\n\n", 
    "00103ba0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nwint_t towlower(wint_t __wc)\n\n{\n  wint_t wVar1;\n  \n  wVar1 = (*(code *)PTR_towlower_0011bf20)();\n  return wVar1;\n}\n\n", 
    "00107010": "\nundefined4\nadd_exclude_file(undefined8 param_1,undefined8 param_2,char *param_3,ulong param_4,char param_5)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  FILE *pFVar3;\n  undefined8 local_20;\n  \n  local_20 = param_1;\n  if ((*param_3 == '-') && (param_3[1] == '\\0')) {\n    uVar1 = add_exclude_fp(call_addfn,param_2,stdin,param_4,(int)param_5,&local_20);\n    return uVar1;\n  }\n  pFVar3 = fopen(param_3,\"r\");\n  if (pFVar3 != (FILE *)0x0) {\n    uVar1 = add_exclude_fp(call_addfn,param_2,pFVar3,param_4 & 0xffffffff,(int)param_5,&local_20);\n    iVar2 = rpl_fclose(pFVar3);\n    if (iVar2 == 0) {\n      return uVar1;\n    }\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010cf80": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "0010de30": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010de8b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010de8b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00106160": "\nlong map_device_isra_0(undefined8 param_1,long **param_2,long param_3)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = *param_2;\n  if (plVar2 == (long *)0x0) {\n    plVar2 = (long *)malloc(0x10);\n    *param_2 = plVar2;\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n  }\n  else if (*plVar2 == param_3) {\n    return plVar2[1];\n  }\n  *plVar2 = param_3;\n  plVar1 = (long *)hash_insert(param_1,plVar2);\n  if (plVar1 == (long *)0x0) {\n    return 0;\n  }\n  if (plVar2 == plVar1) {\n    *param_2 = (long *)0x0;\n    lVar3 = hash_initialize(0x3fd,0,di_ino_hash,0,0);\n    plVar2[1] = lVar3;\n    return lVar3;\n  }\n  lVar3 = plVar1[1];\n  plVar2[1] = lVar3;\n  return lVar3;\n}\n\n", 
    "00106040": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "0011d210": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid setmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setmntent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d330": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strstr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112700": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00112820": "\nundefined8 cycle_check(long *param_1,long *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  long *extraout_RDX;\n  long *extraout_RDX_00;\n  long *plVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  if (param_1[2] == 0) {\n    param_1[2] = 1;\n    cVar1 = is_zero_or_power_of_two(1);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    lVar4 = param_2[1];\n    plVar3 = extraout_RDX_00;\n  }\n  else {\n    lVar4 = param_2[1];\n    if ((lVar4 == *param_1) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    lVar2 = param_1[2] + 1;\n    param_1[2] = lVar2;\n    cVar1 = is_zero_or_power_of_two(lVar2);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    plVar3 = extraout_RDX;\n    if (lVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar2 = *param_2;\n  *plVar3 = lVar4;\n  plVar3[1] = lVar2;\n  return 0;\n}\n\n", 
    "0011d218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109780": "\nulong hash_string(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "0011d338": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_tolower_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "0010b480": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "0010f600": "\nvoid cwd_advance_fd(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\nLAB_0010f64c:\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = i_ring_push(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      goto LAB_0010f64c;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n", 
    "00111f00": "\nbool equal_tm(uint *param_1,uint *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  byte bVar1;\n  uint uVar2;\n  \n  uVar2 = *param_1 ^ *param_2 | param_1[1] ^ param_2[1] | param_1[2] ^ param_2[2] |\n          param_1[3] ^ param_2[3] | param_1[4] ^ param_2[4] | param_1[5] ^ param_2[5];\n  bVar1 = isdst_differ(param_1[8],param_2[8],param_3,param_4,uVar2);\n  return (bVar1 | uVar2) == 0;\n}\n\n", 
    "00106110": "\nulong di_ent_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "00106470": "\nvoid free_exclude_segment(long param_1)\n\n{\n  uint *puVar1;\n  ulong uVar2;\n  void *__ptr;\n  \n  if (*(int *)(param_1 + 8) == 0) {\n    hash_free(*(undefined8 *)(param_1 + 0x10));\n  }\n  else if (*(int *)(param_1 + 8) == 1) {\n    __ptr = *(void **)(param_1 + 0x10);\n    if (*(long *)(param_1 + 0x20) != 0) {\n      uVar2 = 0;\n      do {\n        while (puVar1 = (uint *)((long)__ptr + uVar2 * 0x48), (*puVar1 & 0x8000000) == 0) {\n          uVar2 = uVar2 + 1;\n          if (*(ulong *)(param_1 + 0x20) < uVar2 || *(ulong *)(param_1 + 0x20) == uVar2)\n          goto LAB_001064c9;\n        }\n        uVar2 = uVar2 + 1;\n        regfree((regex_t *)(puVar1 + 2));\n        __ptr = *(void **)(param_1 + 0x10);\n      } while (uVar2 <= *(ulong *)(param_1 + 0x20) && *(ulong *)(param_1 + 0x20) != uVar2);\n    }\nLAB_001064c9:\n    free(__ptr);\n  }\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "0010ae90": "\nchar * imaxtostr(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "00108f40": "\nulong next_prime(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = is_prime(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "0011d320": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulonglong gnu_dev_makedev(uint __major,uint __minor)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* gnu_dev_makedev@@GLIBC_2.3.3 */\n  halt_baddata();\n}\n\n", 
    "0011d200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001036e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0011bcc0)();\n  return;\n}\n\n", 
    "0011d328": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getdelim(char **__lineptr,size_t *__n,int __delimiter,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getdelim@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112bd0": "\nuint fd_safer(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = dup_safer();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "0011d208": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getmntent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104b70": "\nvoid fill_mount_table(void)\n\n{\n  long lVar1;\n  int iVar2;\n  long lVar3;\n  long in_FS_OFFSET;\n  stat local_b8;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = read_file_system_list(0);\n  while (lVar3 != 0) {\n    if (((*(byte *)(lVar3 + 0x28) & 3) == 0) &&\n       (iVar2 = stat(*(char **)(lVar3 + 8),&local_b8), iVar2 == 0)) {\n      hash_ins(di_mnt,local_b8.st_ino,local_b8.st_dev);\n    }\n    lVar1 = *(long *)(lVar3 + 0x30);\n    free_mount_entry(lVar3);\n    lVar3 = lVar1;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b570": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010e840": "\nvoid xstrtol_error(uint param_1,int param_2,undefined param_3,long param_4,undefined8 param_5,\n                  undefined4 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  long in_FS_OFFSET;\n  undefined local_32;\n  undefined local_31;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 4) {\n    if (param_1 < 2) {\n      if (param_1 != 1) {\n        xstrtol_error_cold();\n        return;\n      }\n      pcVar2 = \"%s%s argument \\'%s\\' too large\";\n    }\n    else {\n      pcVar2 = \"invalid suffix in %s%s argument \\'%s\\'\";\n    }\n  }\n  else {\n    if (param_1 != 4) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    pcVar2 = \"invalid %s%s argument \\'%s\\'\";\n  }\n  if (param_2 < 0) {\n    puVar4 = &local_32;\n    local_31 = 0;\n    puVar3 = &DAT_00115b6d + -(long)param_2;\n    local_32 = param_3;\n  }\n  else {\n    puVar3 = &DAT_00115b6d;\n    puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n  }\n  uVar1 = dcgettext(0,pcVar2,5);\n  error(param_6,0,uVar1,puVar3,puVar4,param_5);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103a80": "\nvoid setmntent(void)\n\n{\n  (*(code *)PTR_setmntent_0011be90)();\n  return;\n}\n\n", 
    "0010d630": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001121d0": "\nvoid tzfree(long *param_1)\n\n{\n  long *plVar1;\n  \n  if (param_1 == (long *)0x1) {\n    return;\n  }\n  if (param_1 != (long *)0x0) {\n    do {\n      plVar1 = (long *)*param_1;\n      free(param_1);\n      param_1 = plVar1;\n    } while (plVar1 != (long *)0x0);\n  }\n  return;\n}\n\n", 
    "0010f700": "\nvoid fts_padjust_isra_0(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00106220": "\nlong map_inode_number_isra_0(long *param_1,long param_2)\n\n{\n  long lVar1;\n  \n  if (param_2 - 1U < 0x7ffffffffffffffe) {\n    return param_2;\n  }\n  lVar1 = *param_1;\n  if (lVar1 == 0) {\n    lVar1 = ino_map_alloc(0x7fffffffffffffff);\n    *param_1 = lVar1;\n    if (lVar1 == 0) {\n      return -1;\n    }\n  }\n  lVar1 = ino_map_insert(lVar1,param_2);\n  return lVar1;\n}\n\n", 
    "00106460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid string_free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0011bfc8)();\n  return;\n}\n\n", 
    "0010df30": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00112800": "\nvoid cycle_check_init(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n", 
    "0010cf60": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "0011d310": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001037f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid regfree(regex_t *__preg)\n\n{\n  (*(code *)PTR_regfree_0011bd48)();\n  return;\n}\n\n", 
    "001036d0": "\nvoid endmntent(void)\n\n{\n  (*(code *)PTR_endmntent_0011bcb8)();\n  return;\n}\n\n", 
    "0010de00": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "0011d318": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid hasmntopt(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* hasmntopt@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103a70": "\nvoid getmntent(void)\n\n{\n  (*(code *)PTR_getmntent_0011be88)();\n  return;\n}\n\n", 
    "00105e90": "\nlong argmatch_to_argument(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00109640": "\nlong hash_get_next(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "0010e970": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "0010b460": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00109400": "\nbool hash_table_ok(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00109420:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00109420;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "00103b90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0011bf18)();\n  return pFVar1;\n}\n\n", 
    "0010d520": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d640": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "001090f0": "\nvoid free_entry_isra_0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010e0d0": "\nuint xstrtoimax(char *param_1,char **param_2,uint param_3,intmax_t *param_4,char *param_5)\n\n{\n  char cVar1;\n  char cVar2;\n  uint uVar3;\n  int *piVar4;\n  intmax_t iVar5;\n  char *pcVar6;\n  char *pcVar7;\n  undefined8 uVar8;\n  uint uVar9;\n  int iVar10;\n  long in_FS_OFFSET;\n  char *local_50;\n  intmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoimax\");\n  }\n  if (param_2 == (char **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0;\n  iVar5 = strtoimax(param_1,param_2,param_3);\n  pcVar7 = *param_2;\n  local_48 = iVar5;\n  if (pcVar7 == param_1) {\n    if (param_5 == (char *)0x0) {\n      uVar9 = 4;\n      goto LAB_0010e15f;\n    }\n    cVar1 = *pcVar7;\n    uVar9 = 4;\n    if (cVar1 == '\\0') goto LAB_0010e15f;\n    iVar10 = (int)cVar1;\n    pcVar6 = strchr(param_5,iVar10);\n    if (pcVar6 == (char *)0x0) goto LAB_0010e15f;\n    local_48 = 1;\n    uVar9 = 0;\nLAB_0010e1e2:\n    pcVar6 = strchr(param_5,iVar10);\n    if (pcVar6 == (char *)0x0) {\nswitchD_0010e243_caseD_43:\n      uVar9 = uVar9 | 2;\n      *param_4 = local_48;\n      goto LAB_0010e15f;\n    }\n    switch(cVar1) {\n    case 'E':\n    case 'G':\n    case 'K':\n    case 'M':\n    case 'P':\n    case 'T':\n    case 'Y':\n    case 'Z':\n    case 'g':\n    case 'k':\n    case 'm':\n    case 't':\n      pcVar6 = strchr(param_5,0x30);\n      if (pcVar6 == (char *)0x0) goto switchD_0010e21a_caseD_46;\n      cVar2 = pcVar7[1];\n      if (cVar2 == 'D') {\n        iVar10 = 2;\n        uVar8 = 1000;\n      }\n      else if (cVar2 == 'i') {\n        uVar8 = 0x400;\n        iVar10 = (pcVar7[2] == 'B') + 1 + (uint)(pcVar7[2] == 'B');\n      }\n      else {\n        iVar10 = (cVar2 == 'B') + 1;\n        uVar8 = 1000;\n        if (cVar2 != 'B') {\n          uVar8 = 0x400;\n        }\n      }\n      break;\n    default:\nswitchD_0010e21a_caseD_46:\n      iVar10 = 1;\n      uVar8 = 0x400;\n    }\n    switch(cVar1) {\n    case 'B':\n      uVar3 = bkm_scale(&local_48,0x400);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    default:\n      goto switchD_0010e243_caseD_43;\n    case 'E':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,6);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'G':\n    case 'g':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,3);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'K':\n    case 'k':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,1);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'M':\n    case 'm':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,2);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'P':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,5);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'T':\n    case 't':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,4);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'Y':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,8);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'Z':\n      uVar3 = bkm_scale_by_power(&local_48,uVar8,7);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'b':\n      uVar3 = bkm_scale(&local_48,0x200);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'c':\n      break;\n    case 'w':\n      uVar3 = bkm_scale(&local_48,2);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n    }\n    iVar5 = local_48;\n    *param_2 = pcVar7 + iVar10;\n    if (pcVar7[iVar10] != '\\0') {\n      uVar9 = uVar9 | 2;\n    }\n  }\n  else {\n    if (*piVar4 == 0) {\n      uVar9 = 0;\n    }\n    else {\n      uVar9 = 4;\n      if (*piVar4 != 0x22) goto LAB_0010e15f;\n      uVar9 = 1;\n    }\n    if ((param_5 != (char *)0x0) && (cVar1 = *pcVar7, cVar1 != '\\0')) {\n      iVar10 = (int)cVar1;\n      goto LAB_0010e1e2;\n    }\n  }\n  *param_4 = iVar5;\nLAB_0010e15f:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar9;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d610": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "001122c0": "\nundefined4 revert_tz(long param_1)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  int iVar3;\n  \n  uVar1 = 1;\n  if (param_1 != 1) {\n    piVar2 = __errno_location();\n    iVar3 = *piVar2;\n    uVar1 = change_env(param_1);\n    if ((char)uVar1 == '\\0') {\n      iVar3 = *piVar2;\n    }\n    tzfree(param_1);\n    *piVar2 = iVar3;\n  }\n  return uVar1;\n}\n\n", 
    "00106130": "\nulong di_ino_hash(ulong param_1,ulong param_2)\n\n{\n  return param_1 % param_2;\n}\n\n", 
    "0011d300": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010cf20": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "0011d308": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105b60": "\nvoid __argmatch_die(void)\n\n{\n  usage(1);\n  return;\n}\n\n", 
    "00105c80": "\nvoid argmatch_invalid(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = quote_n(1,param_1);\n  uVar3 = quotearg_n_style(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "0010e940": "\nbool bkm_scale(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "0010a100": "\n/* WARNING: Removing unreachable block (ram,0x0010a16d) */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid adjust_value(void)\n\n{\n  return;\n}\n\n", 
    "0010b310": "\nvoid mbuiter_multi_copy(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  \n  cVar1 = *param_2;\n  *param_1 = cVar1;\n  if (cVar1 == '\\0') {\n    *(undefined8 *)(param_1 + 4) = 0;\n  }\n  else {\n    *(undefined8 *)(param_1 + 4) = *(undefined8 *)(param_2 + 4);\n  }\n  param_1[0xc] = param_2[0xc];\n  mb_copy(param_1 + 0x10,param_2 + 0x10);\n  return;\n}\n\n", 
    "00106120": "\nulong di_ent_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00106000": "\nlong argv_iter_n_args(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    return param_1[1];\n  }\n  return param_1[5] - param_1[4] >> 3;\n}\n\n", 
    "00109f00": "\nlong hash_delete(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = hash_find_entry(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_00109f43;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_0010a07a;\nLAB_00109f94:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_00109f94;\nLAB_0010a07a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    check_tuning_isra_0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if ((float)UINT_00114b5c <= fVar7) {\n        uVar4 = (long)(fVar7 - (float)UINT_00114b5c) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = hash_rehash(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_00109f43:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001036f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0011bcc8)();\n  return piVar1;\n}\n\n", 
    "00112aa0": "\nuint mb_width_aux(wchar_t param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = wcwidth(param_1);\n  if (-1 < (int)uVar1) {\n    return uVar1;\n  }\n  iVar2 = iswcntrl(param_1);\n  return (uint)(iVar2 == 0);\n}\n\n", 
    "00104a60": "\nvoid duinfo_set(undefined8 *param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  *param_1 = param_2;\n  param_1[1] = 1;\n  param_1[2] = param_3;\n  param_1[3] = param_4;\n  return;\n}\n\n", 
    "0010a470": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 * human_readable(ulong param_1,char *param_2,uint param_3,ulong param_4,ulong param_5)\n\n{\n  char *pcVar1;\n  undefined auVar2 [16];\n  undefined auVar3 [16];\n  float fVar4;\n  float fVar5;\n  char cVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  lconv *plVar10;\n  size_t sVar11;\n  size_t sVar12;\n  undefined8 *puVar13;\n  ulong uVar14;\n  ulong uVar15;\n  long lVar16;\n  uint uVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  undefined8 *puVar21;\n  ulong uVar22;\n  uint uVar23;\n  char *__s;\n  undefined8 *puVar24;\n  ulong uVar25;\n  bool bVar26;\n  undefined8 in_ST0;\n  undefined8 *local_78;\n  uint local_68;\n  \n  uVar7 = param_3 & 3;\n  uVar8 = param_3 & 0x20;\n  plVar10 = localeconv();\n  puVar21 = (undefined8 *)plVar10->decimal_point;\n  uVar20 = (-(uint)(uVar8 == 0) & 0xffffffe8) + 0x400;\n  sVar11 = strlen((char *)puVar21);\n  bVar26 = 0xf < sVar11 - 1;\n  if (bVar26) {\n    puVar21 = (undefined8 *)&DAT_00115d14;\n  }\n  pcVar1 = plVar10->grouping;\n  __s = plVar10->thousands_sep;\n  if (bVar26) {\n    sVar11 = 1;\n  }\n  sVar12 = strlen(__s);\n  if (0x10 < sVar12) {\n    __s = \"\";\n  }\n  local_78 = (undefined8 *)(param_2 + 0x287);\n  uVar19 = (uint)sVar11;\n  if (param_4 < param_5) {\n    if (param_4 != 0) {\n      auVar3 = ZEXT816(param_5) / ZEXT816(param_4);\n      if (param_5 % param_4 == 0) {\n        uVar22 = SUB168(ZEXT816(param_1) / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        auVar2 = ZEXT816((ulong)(SUB168(ZEXT816(param_1) %\n                                        (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 10));\n        uVar25 = SUB168(auVar2 % (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 2;\n        uVar9 = SUB164(auVar2 / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        uVar15 = (ulong)uVar9;\n        if (uVar25 < SUB168(auVar3,0)) {\n          uVar17 = (uint)(uVar25 != 0);\n        }\n        else {\n          uVar17 = (SUB168(auVar3,0) < uVar25) + 2;\n        }\n        goto joined_r0x0010a7e6;\n      }\n    }\nLAB_0010a55c:\n    fVar4 = (float)param_4;\n    if ((long)param_4 < 0) {\n      fVar4 = fVar4 + (float)UINT_00114b58;\n    }\n    if ((long)param_5 < 0) {\n      fVar4 = fVar4 / ((float)param_5 + (float)UINT_00114b58);\n      if ((long)param_1 < 0) goto LAB_0010a690;\nLAB_0010a599:\n      fVar4 = (float)param_1 * fVar4;\n      if ((param_3 & 0x10) != 0) goto LAB_0010a5a5;\nLAB_0010a6d8:\n      adjust_value(uVar7);\n      __sprintf_chk(param_2,1,0xffffffffffffffff,&UINT_00114b94);\n      sVar12 = strlen(param_2);\n      uVar23 = 0xffffffff;\n      sVar11 = sVar12;\n    }\n    else {\n      fVar4 = fVar4 / (float)param_5;\n      if (-1 < (long)param_1) goto LAB_0010a599;\nLAB_0010a690:\n      fVar4 = ((float)param_1 + (float)UINT_00114b58) * fVar4;\n      if ((param_3 & 0x10) == 0) goto LAB_0010a6d8;\nLAB_0010a5a5:\n      uVar23 = 0;\n      fVar5 = (float)uVar20;\n      do {\n        uVar23 = uVar23 + 1;\n        fVar5 = fVar5 * (float)uVar20;\n        if (fVar4 < fVar5) break;\n      } while (uVar23 != 8);\n      adjust_value(uVar7);\n      __sprintf_chk(param_2,1,0xffffffffffffffff,0x114b9a);\n      sVar12 = strlen(param_2);\n      if ((sVar11 + 2 + (ulong)(uVar8 == 0) < sVar12) ||\n         (((param_3 & 8) != 0 && (param_2[sVar12 - 1] == '0')))) {\n        adjust_value(uVar7,in_ST0);\n        __sprintf_chk(param_2,1,0xffffffffffffffff,&UINT_00114b94);\n        sVar12 = strlen(param_2);\n        sVar11 = sVar12;\n      }\n      else {\n        sVar11 = sVar12 - (sVar11 + 1);\n      }\n    }\n    puVar13 = (undefined8 *)memmove((void *)((long)local_78 - sVar12),param_2,sVar12);\n    puVar24 = (undefined8 *)(sVar11 + (long)puVar13);\n  }\n  else {\n    if ((param_4 % param_5 != 0) ||\n       (uVar22 = param_1 * SUB168(ZEXT816(param_4) / ZEXT816(param_5),0),\n       SUB168(ZEXT816(uVar22) /\n              (ZEXT816(param_4) / ZEXT816(param_5) & (undefined  [16])0xffffffffffffffff),0) !=\n       param_1)) goto LAB_0010a55c;\n    uVar17 = 0;\n    uVar15 = 0;\n    uVar9 = 0;\njoined_r0x0010a7e6:\n    local_68 = param_3 & 0x10;\n    puVar13 = local_78;\n    if ((param_3 & 0x10) == 0) {\n      uVar23 = 0xffffffff;\nLAB_0010a7fb:\n      if (uVar7 != 1) goto LAB_0010a80a;\n      puVar24 = local_78;\n      if (5 < (int)(uVar9 + (((uint)uVar22 & 1) + uVar17 != 0))) goto LAB_0010a81a;\nLAB_0010a848:\n      do {\n        puVar13 = (undefined8 *)((long)puVar13 + -1);\n        *(char *)puVar13 = (char)uVar22 + (char)(uVar22 / 10) * -10 + '0';\n        bVar26 = 9 < uVar22;\n        uVar22 = uVar22 / 10;\n      } while (bVar26);\n    }\n    else {\n      uVar9 = (uint)uVar15;\n      uVar25 = (ulong)uVar20;\n      uVar23 = 0;\n      if (uVar22 < uVar25) goto LAB_0010a7fb;\n      while( true ) {\n        uVar14 = uVar22 / uVar25;\n        uVar9 = (int)uVar15 + (int)(uVar22 % uVar25) * 10;\n        uVar15 = (ulong)uVar9 / (ulong)uVar20;\n        uVar18 = ((int)uVar17 >> 1) + (uVar9 % uVar20) * 2;\n        uVar9 = (uint)uVar15;\n        uVar17 = uVar17 + uVar18;\n        if (uVar18 < uVar20) {\n          uVar17 = (uint)(uVar17 != 0);\n        }\n        else {\n          uVar17 = (uVar20 < uVar17) + 2;\n        }\n        uVar23 = uVar23 + 1;\n        uVar22 = uVar14;\n        if (uVar14 < uVar25) break;\n        if (uVar23 == 8) goto LAB_0010a7fb;\n      }\n      if (9 < uVar14) goto LAB_0010a7fb;\n      if (uVar7 == 1) {\n        bVar26 = 2 < (uVar9 & 1) + uVar17;\n      }\n      else {\n        bVar26 = uVar17 != 0 && uVar7 == 0;\n      }\n      if (bVar26) {\n        cVar6 = (char)uVar15 + '1';\n        if (uVar9 == 9) {\n          uVar22 = uVar14 + 1;\n          if (uVar14 != 9) {\n            uVar17 = 0;\n            goto LAB_0010ab0f;\n          }\n          goto LAB_0010ab53;\n        }\n      }\n      else if (uVar9 == 0) {\nLAB_0010ab0f:\n        if ((param_3 & 8) != 0) goto LAB_0010ab55;\n        cVar6 = '0';\n      }\n      else {\n        cVar6 = (char)uVar15 + '0';\n      }\n      param_2[0x286] = cVar6;\n      uVar15 = sVar11 & 0xffffffff;\n      puVar13 = (undefined8 *)(param_2 + (0x286 - sVar11));\n      if (uVar19 < 8) {\n        if ((sVar11 & 4) == 0) {\n          if (((int)uVar15 != 0) &&\n             (*(undefined *)puVar13 = *(undefined *)puVar21, (sVar11 & 2) != 0)) {\n            *(undefined2 *)((long)puVar13 + (uVar15 - 2)) =\n                 *(undefined2 *)((long)puVar21 + (uVar15 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)puVar13 = *(undefined4 *)puVar21;\n          *(undefined4 *)((long)puVar13 + (uVar15 - 4)) =\n               *(undefined4 *)((long)puVar21 + (uVar15 - 4));\n        }\n      }\n      else {\n        *puVar13 = *puVar21;\n        *(undefined8 *)((long)puVar13 + ((sVar11 & 0xffffffff) - 8)) =\n             *(undefined8 *)((long)puVar21 + ((sVar11 & 0xffffffff) - 8));\n        lVar16 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n        uVar9 = (int)lVar16 + uVar19 & 0xfffffff8;\n        if (7 < uVar9) {\n          uVar17 = 0;\n          do {\n            uVar15 = (ulong)uVar17;\n            uVar17 = uVar17 + 8;\n            *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar15) =\n                 *(undefined8 *)((long)puVar21 + (uVar15 - lVar16));\n          } while (uVar17 < uVar9);\n        }\n      }\nLAB_0010ab53:\n      uVar17 = 0;\nLAB_0010ab55:\n      puVar24 = puVar13;\n      if (uVar7 == 1) goto LAB_0010a848;\n      uVar9 = 0;\nLAB_0010a80a:\n      puVar24 = puVar13;\n      if ((uVar7 != 0) || ((int)(uVar17 + uVar9) < 1)) goto LAB_0010a848;\nLAB_0010a81a:\n      uVar22 = uVar22 + 1;\n      puVar13 = puVar24;\n      if (((local_68 == 0) || (uVar20 != uVar22)) || (uVar23 == 8)) goto LAB_0010a848;\n      uVar23 = uVar23 + 1;\n      if ((param_3 & 8) == 0) {\n        *(undefined *)((long)puVar24 + -1) = 0x30;\n        puVar24 = (undefined8 *)((long)puVar24 + ~sVar11);\n        uVar22 = sVar11 & 0xffffffff;\n        if (uVar19 < 8) {\n          if ((sVar11 & 4) == 0) {\n            if (((int)uVar22 != 0) &&\n               (*(undefined *)puVar24 = *(undefined *)puVar21, (sVar11 & 2) != 0)) {\n              *(undefined2 *)((long)puVar24 + (uVar22 - 2)) =\n                   *(undefined2 *)((long)puVar21 + (uVar22 - 2));\n            }\n          }\n          else {\n            *(undefined4 *)puVar24 = *(undefined4 *)puVar21;\n            *(undefined4 *)((long)puVar24 + (uVar22 - 4)) =\n                 *(undefined4 *)((long)puVar21 + (uVar22 - 4));\n          }\n        }\n        else {\n          *puVar24 = *puVar21;\n          *(undefined8 *)((long)puVar24 + ((sVar11 & 0xffffffff) - 8)) =\n               *(undefined8 *)((long)puVar21 + ((sVar11 & 0xffffffff) - 8));\n          lVar16 = (long)puVar24 - ((ulong)(puVar24 + 1) & 0xfffffffffffffff8);\n          uVar7 = (int)lVar16 + uVar19 & 0xfffffff8;\n          if (7 < uVar7) {\n            uVar19 = 0;\n            do {\n              uVar22 = (ulong)uVar19;\n              uVar19 = uVar19 + 8;\n              *(undefined8 *)(((ulong)(puVar24 + 1) & 0xfffffffffffffff8) + uVar22) =\n                   *(undefined8 *)((long)puVar21 + (uVar22 - lVar16));\n            } while (uVar19 < uVar7);\n          }\n        }\n      }\n      *(undefined *)((long)puVar24 + -1) = 0x31;\n      puVar13 = (undefined8 *)((long)puVar24 + -1);\n    }\n  }\n  if ((param_3 & 4) != 0) {\n    puVar13 = (undefined8 *)group_number(puVar13,(long)puVar24 - (long)puVar13,pcVar1,__s);\n  }\n  puVar21 = local_78;\n  if ((param_3 & 0x80) == 0) goto LAB_0010a76f;\n  if (uVar23 == 0xffffffff) {\n    if (param_5 < 2) {\n      uVar23 = 0;\n      goto LAB_0010a75c;\n    }\n    uVar23 = 1;\n    uVar22 = 1;\n    do {\n      uVar22 = uVar22 * uVar20;\n      if (param_5 <= uVar22) break;\n      uVar23 = uVar23 + 1;\n    } while (uVar23 != 8);\n    if ((param_3 & 0x40) != 0) goto LAB_0010a9d1;\nLAB_0010a9ef:\n    puVar21 = (undefined8 *)((long)local_78 + 1);\n    if ((uVar23 == 1) && (uVar8 == 0)) {\n      *(undefined *)local_78 = 0x6b;\n      goto joined_r0x0010aac5;\n    }\n    *(undefined *)local_78 = *(undefined *)((long)&power_letter + (long)(int)uVar23);\n    if ((param_3 & 0x100) == 0) goto LAB_0010a76f;\n    if (uVar8 != 0) {\n      *(undefined *)((long)local_78 + 1) = 0x69;\n      puVar21 = (undefined8 *)((long)local_78 + 2);\n    }\n  }\n  else {\nLAB_0010a75c:\n    if ((param_3 & 0x100 | uVar23) == 0) goto LAB_0010a76f;\n    if ((param_3 & 0x40) != 0) {\nLAB_0010a9d1:\n      local_78 = (undefined8 *)(param_2 + 0x288);\n      param_2[0x287] = ' ';\n    }\n    puVar21 = local_78;\n    if (uVar23 != 0) goto LAB_0010a9ef;\njoined_r0x0010aac5:\n    if ((param_3 & 0x100) == 0) goto LAB_0010a76f;\n  }\n  *(undefined *)puVar21 = 0x42;\n  puVar21 = (undefined8 *)((long)puVar21 + 1);\nLAB_0010a76f:\n  local_78 = puVar21;\n  *(undefined *)local_78 = 0;\n  return puVar13;\n}\n\n", 
    "00103a90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0011be98)();\n  return pcVar1;\n}\n\n", 
    "0010d620": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010b410": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e920": "\nvoid xstrtol_fatal(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4,\n                  undefined8 param_5)\n\n{\n  xstrtol_error(param_1,param_2,(int)param_3,param_4,param_5,exit_failure);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001123c0": "\ntime_t mktime_z(long param_1,tm *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  tm *ptVar4;\n  time_t tVar5;\n  long in_FS_OFFSET;\n  time_t local_70;\n  tm local_68;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    tVar5 = timegm(param_2);\n    goto LAB_00112432;\n  }\n  lVar3 = set_tz();\n  if (lVar3 != 0) {\n    local_70 = mktime(param_2);\n    if (local_70 == -1) {\n      ptVar4 = localtime_r(&local_70,&local_68);\n      if ((ptVar4 != (tm *)0x0) && (iVar2 = equal_tm(param_2,&local_68), iVar2 != 0))\n      goto LAB_00112412;\n    }\n    else {\nLAB_00112412:\n      cVar1 = save_abbr(param_1,param_2);\n      if (cVar1 == '\\0') {\n        local_70 = -1;\n      }\n    }\n    cVar1 = revert_tz(lVar3);\n    tVar5 = local_70;\n    if (cVar1 != '\\0') goto LAB_00112432;\n  }\n  tVar5 = -1;\nLAB_00112432:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return tVar5;\n}\n\n", 
    "001124e0": "\nuint rotr32(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "001036a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_0011bca0)();\n  return pp_Var1;\n}\n\n", 
    "001037c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0011bd30)();\n  return iVar1;\n}\n\n", 
    "0010ad30": "\nulong ino_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "0010ad20": "\nulong ino_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0011bdc0)();\n  return pvVar1;\n}\n\n", 
    "00106e30": "\nint add_exclude_fp(code *param_1,undefined8 param_2,FILE *param_3,undefined4 param_4,byte param_5,\n                  undefined8 param_6)\n\n{\n  byte bVar1;\n  int iVar2;\n  long lVar3;\n  int *piVar4;\n  byte *pbVar5;\n  ushort **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  long lVar10;\n  byte *pbVar11;\n  long in_FS_OFFSET;\n  int local_5c;\n  int local_50;\n  long local_48;\n  long local_40;\n  \n  lVar10 = 0;\n  lVar3 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = 0;\n  while( true ) {\n    iVar2 = getc_unlocked(param_3);\n    if (iVar2 == -1) break;\n    if (local_48 == lVar10) {\n      lVar3 = x2realloc(lVar3,&local_48);\n    }\n    *(char *)(lVar3 + lVar10) = (char)iVar2;\n    lVar10 = lVar10 + 1;\n  }\n  local_5c = ferror_unlocked(param_3);\n  piVar4 = __errno_location();\n  local_50 = 0;\n  if (local_5c != 0) {\n    local_5c = *piVar4;\n    local_50 = -(uint)(local_5c != 0);\n  }\n  pbVar5 = (byte *)xrealloc(lVar3,lVar10 + 1);\n  pbVar5[lVar10] = param_5;\n  if (lVar10 == 0) {\n    exclude_add_pattern_buffer(param_2,pbVar5);\n  }\n  else {\n    bVar1 = pbVar5[lVar10 + -1];\n    exclude_add_pattern_buffer(param_2,pbVar5);\n    if (pbVar5 < pbVar5 + (ulong)(bVar1 != param_5) + lVar10) {\n      pbVar8 = pbVar5;\n      pbVar11 = pbVar5;\n      do {\n        pbVar9 = pbVar11 + 1;\n        pbVar7 = pbVar8;\n        if (*pbVar11 == param_5) {\n          ppuVar6 = __ctype_b_loc();\n          pbVar7 = pbVar9;\n          if (((*ppuVar6)[param_5] & 0x2000) == 0) {\nLAB_00106fb6:\n            *pbVar11 = 0;\n            (*param_1)(param_2,pbVar8,param_4,param_6);\n          }\n          else {\n            for (; pbVar8 != pbVar11; pbVar11 = pbVar11 + -1) {\n              if ((*(byte *)((long)*ppuVar6 + (ulong)pbVar11[-1] * 2 + 1) & 0x20) == 0)\n              goto LAB_00106fb6;\n            }\n          }\n        }\n        pbVar8 = pbVar7;\n        pbVar11 = pbVar9;\n      } while (pbVar5 + (ulong)(bVar1 != param_5) + lVar10 != pbVar9);\n    }\n  }\n  *piVar4 = local_5c;\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_50;\n}\n\n", 
    "00103b60": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0011bf00)();\n  return;\n}\n\n", 
    "00103a40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_0011be70)();\n  return iVar1;\n}\n\n", 
    "00103c80": "\nvoid hasmntopt(void)\n\n{\n  (*(code *)PTR_hasmntopt_0011bf90)();\n  return;\n}\n\n", 
    "00112edc": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "0010fcc0": "\nvoid leave_dir_isra_0(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto leave_dir_isra_0_cold;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = *(long *)(lVar1 + 0x80);\n      }\n    }\n  }\n  else {\n    local_28 = *(undefined8 *)(param_3 + 0x78);\n    local_20 = *(undefined8 *)(param_3 + 0x80);\n    __ptr = (void *)hash_delete(*param_2,&local_28);\n    if (__ptr == (void *)0x0) {\nleave_dir_isra_0_cold:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    free(__ptr);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b300": "\nvoid mbuiter_multi_reloc(long param_1,long param_2)\n\n{\n  *(long *)(param_1 + 0x10) = *(long *)(param_1 + 0x10) + param_2;\n  return;\n}\n\n", 
    "00106300": "\nvoid di_set_free(undefined8 *param_1)\n\n{\n  hash_free(*param_1);\n  free((void *)param_1[1]);\n  free((void *)param_1[2]);\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "0010d720": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00115403,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010d9e9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0010d9e9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010da8b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010da8b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010d83d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010d83d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00106540": "\nint fnmatch_no_wildcards(char *param_1,char *param_2,uint param_3)\n\n{\n  int iVar1;\n  size_t __n;\n  char *__ptr;\n  char *pcVar2;\n  \n  if ((param_3 & 8) == 0) {\n    if ((param_3 & 0x10) != 0) {\n      iVar1 = mbscasecmp();\n      return iVar1;\n    }\n    iVar1 = strcmp(param_1,param_2);\n    return iVar1;\n  }\n  if ((param_3 & 0x10) == 0) {\n    __n = strlen(param_1);\n    iVar1 = strncmp(param_1,param_2,__n);\n    if (iVar1 == 0) {\n      iVar1 = 0;\n      if (param_2[__n] != 0x2f) {\n        iVar1 = (int)param_2[__n];\n      }\n    }\n    return iVar1;\n  }\n  __ptr = (char *)xstrdup(param_2);\n  pcVar2 = __ptr;\n  while( true ) {\n    pcVar2 = strchr(pcVar2,0x2f);\n    if (pcVar2 == (char *)0x0) break;\n    *pcVar2 = '\\0';\n    iVar1 = mbscasecmp(param_1,__ptr);\n    if (iVar1 < 1) goto LAB_001065e6;\n    *pcVar2 = '/';\n    pcVar2 = pcVar2 + 1;\n  }\n  iVar1 = mbscasecmp(param_1,__ptr);\nLAB_001065e6:\n  free(__ptr);\n  return iVar1;\n}\n\n", 
    "001124f0": "\nvoid rotl_sz(void)\n\n{\n  rotl64();\n  return;\n}\n\n", 
    "001037b0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0011bd28)();\n  return;\n}\n\n", 
    "0010ad40": "\nlong * ino_map_alloc(long param_1)\n\n{\n  long *__ptr;\n  long lVar1;\n  long *plVar2;\n  \n  __ptr = (long *)malloc(0x18);\n  plVar2 = __ptr;\n  if (__ptr != (long *)0x0) {\n    lVar1 = hash_initialize(0x3fd,0,ino_hash,ino_compare,PTR_free_0011bfc8);\n    *__ptr = lVar1;\n    if (lVar1 == 0) {\n      plVar2 = (long *)0x0;\n      free(__ptr);\n    }\n    else {\n      __ptr[1] = param_1;\n      __ptr[2] = 0;\n    }\n  }\n  return plVar2;\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0011bdb8)();\n  return;\n}\n\n", 
    "001039f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid tzset(void)\n\n{\n  (*(code *)PTR_tzset_0011be48)();\n  return;\n}\n\n", 
    "00103a30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcwidth_0011be68)();\n  return iVar1;\n}\n\n", 
    "00103c70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0011bf88)();\n  return iVar1;\n}\n\n", 
    "00103b50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_0011bef8)();\n  return pvVar1;\n}\n\n", 
    "0010a300": "\nundefined8 humblock(char *param_1,undefined8 *param_2,uint *param_3)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  long in_FS_OFFSET;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((param_1 == (char *)0x0) && (param_1 = getenv(\"BLOCK_SIZE\"), param_1 == (char *)0x0)) &&\n     (param_1 = getenv((char *)&UINT_00114b78), param_1 == (char *)0x0)) {\n    uVar4 = default_block_size();\n    uVar5 = 0;\n    *param_2 = uVar4;\n  }\n  else {\n    uVar5 = 0;\n    if (*param_1 == '\\'') {\n      param_1 = param_1 + 1;\n      uVar5 = 4;\n    }\n    iVar3 = argmatch(param_1,block_size_args,&block_size_opts,4);\n    if (iVar3 < 0) {\n      uVar4 = xstrtoumax(param_1,&local_38,0,param_2,0x114b82);\n      if ((int)uVar4 != 0) {\n        *param_3 = 0;\n        goto LAB_0010a378;\n      }\n      cVar2 = *param_1;\n      while (9 < (byte)(cVar2 - 0x30U)) {\n        if (local_38 == param_1) {\n          if (local_38[-1] == 'B') {\n            uVar5 = uVar5 | 0x180;\n            if (local_38[-2] != 'i') break;\n          }\n          else {\n            uVar5 = uVar5 | 0x80;\n          }\n          uVar5 = uVar5 | 0x20;\n          break;\n        }\n        pcVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        cVar2 = *pcVar1;\n      }\n    }\n    else {\n      *param_2 = 1;\n      uVar5 = uVar5 | (&block_size_opts)[iVar3];\n    }\n  }\n  *param_3 = uVar5;\n  uVar4 = 0;\nLAB_0010a378:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001124c0": "\nulong rotr64(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00106450": "\nvoid call_addfn(void)\n\n{\n  code **in_RCX;\n  \n                    /* WARNING: Could not recover jumptable at 0x00106454. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**in_RCX)();\n  return;\n}\n\n", 
    "00106330": "\nundefined8 di_set_insert(undefined8 *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 uVar3;\n  \n  lVar1 = map_device_isra_0(*param_1,param_1 + 2,param_2);\n  if (lVar1 != 0) {\n    lVar2 = map_inode_number_isra_0(param_1 + 1,param_3);\n    if (lVar2 != -1) {\n      uVar3 = hash_insert_if_absent(lVar1,lVar2,0);\n      return uVar3;\n    }\n  }\n  return 0xffffffff;\n}\n\n", 
    "00112da0": "\nvoid dup_safer(undefined8 param_1)\n\n{\n  rpl_fcntl(param_1,0,3);\n  return;\n}\n\n", 
    "0010d0c0": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00112ec0": "\nint fstatat(int __fd,char *__file,stat *__buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstatat(1,__fd,__file,__buf,__flag);\n  return iVar1;\n}\n\n", 
    "001036c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nintmax_t strtoimax(char *__nptr,char **__endptr,int __base)\n\n{\n  intmax_t iVar1;\n  \n  iVar1 = (*(code *)PTR_strtoimax_0011bcb0)();\n  return iVar1;\n}\n\n", 
    "001037e0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0011bd40)();\n  return;\n}\n\n", 
    "00104a30": "\nvoid duinfo_init(undefined8 *param_1)\n\n{\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0x8000000000000000;\n  param_1[3] = 0xffffffffffffffff;\n  return;\n}\n\n", 
    "00103b80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0011bf10)();\n  return iVar1;\n}\n\n", 
    "00103a60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0011be80)();\n  return iVar1;\n}\n\n", 
    "001124d0": "\nuint rotl32(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "001125f0": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001036b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0011bca8)();\n  return pcVar1;\n}\n\n", 
    "0010e0a0": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "001037d0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0011bd38)();\n  return;\n}\n\n", 
    "001049e0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_0011bff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001038f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * freopen(char *__filename,char *__modes,FILE *__stream)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_freopen_0011bdc8)();\n  return pFVar1;\n}\n\n", 
    "00104a20": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00112dc0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00103a50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0011be78)();\n  return pvVar1;\n}\n\n", 
    "00104b40": "\nuint hash_ins(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  uint uVar1;\n  \n  uVar1 = di_set_insert(param_1,param_3,param_2);\n  if (-1 < (int)uVar1) {\n    return uVar1 & 0xffffff00 | (uint)(uVar1 != 0);\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00103c90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulonglong gnu_dev_makedev(uint __major,uint __minor)\n\n{\n  ulonglong uVar1;\n  \n  uVar1 = (*(code *)PTR_gnu_dev_makedev_0011bf98)();\n  return uVar1;\n}\n\n", 
    "00103b70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0011bf08)();\n  return iVar1;\n}\n\n", 
    "0010b760": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00109700": "\nlong hash_do_for_each(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "00103000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___0011bfe8;\n  if (PTR___gmon_start___0011bfe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___0011bfe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00106630": "\nvoid string_hasher(void)\n\n{\n  hash_string();\n  return;\n}\n\n", 
    "00105660": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_0011421a;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'd' || (pcVar2[1] != 'u')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_00114217;\n        goto LAB_0010589e;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_00114217;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_00114217);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010589e:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_00114217);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_00114217);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_00114217) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106870": "\nundefined8 fnmatch_pattern_has_wildcards(char *param_1,uint param_2)\n\n{\n  char cVar1;\n  char *pcVar2;\n  \n  cVar1 = *param_1;\njoined_r0x00106898:\n  if (cVar1 == '\\0') {\n    return 0;\n  }\n  pcVar2 = param_1 + 1;\n  switch(cVar1) {\n  case '!':\n  case '+':\n  case '@':\n    if ((param_2 & 0x20) == 0) break;\n    cVar1 = param_1[1];\n    param_1 = pcVar2;\n    if (cVar1 == '(') {\nswitchD_001068ab_caseD_2a:\n      return 1;\n    }\n    goto joined_r0x00106898;\n  case '(':\n  case ')':\n  case '.':\n  case '{':\n  case '}':\n    if ((param_2 & 0x8000000) != 0) {\n      return 1;\n    }\n    break;\n  case '*':\n  case '?':\n  case '[':\n    goto switchD_001068ab_caseD_2a;\n  case '\\\\':\n    if ((param_2 & 0x8000000) == 0) {\n      if (((param_2 & 2) == 0) && (param_1[1] != '\\0')) {\n        pcVar2 = param_1 + 2;\n      }\n      cVar1 = *pcVar2;\n      param_1 = pcVar2;\n      goto joined_r0x00106898;\n    }\n  }\n  cVar1 = param_1[1];\n  param_1 = pcVar2;\n  goto joined_r0x00106898;\n}\n\n", 
    "001126e0": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00112ea0": "\nint lstat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __lxstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "0010d1c0": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "001038a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0011bda0)();\n  return pcVar1;\n}\n\n", 
    "001039c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_feof_0011be30)();\n  return iVar1;\n}\n\n", 
    "0010f3a0": "\nDIR * opendirat(undefined8 param_1,undefined8 param_2,uint param_3,int *param_4)\n\n{\n  int iVar1;\n  int __fd;\n  DIR *pDVar2;\n  int *piVar3;\n  \n  pDVar2 = (DIR *)0x0;\n  __fd = openat_safer(param_1,param_2,param_3 | 0x90900);\n  if (-1 < __fd) {\n    pDVar2 = fdopendir(__fd);\n    if (pDVar2 == (DIR *)0x0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      close(__fd);\n      *piVar3 = iVar1;\n      return (DIR *)0x0;\n    }\n    *param_4 = __fd;\n  }\n  return pDVar2;\n}\n\n", 
    "00103b20": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0011bee0)();\n  return;\n}\n\n", 
    "00103a00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0011be50)();\n  return iVar1;\n}\n\n", 
    "00111ee0": "\nuint isdst_differ(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 == 0) != (param_2 == 0)) {\n    uVar1 = (~param_1 & ~param_2) >> 0x1f;\n  }\n  return uVar1;\n}\n\n", 
    "00103c40": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0011bf70)();\n  return;\n}\n\n", 
    "00109aa0": "\nundefined4 hash_rehash(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)compute_bucket_size_isra_0\n                              (*(undefined4 *)((long)pvVar1 + 8),param_2,\n                               *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_00109bac;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = transfer_entries(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = transfer_entries(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = transfer_entries(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_00109bac;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_00109bac;\n    }\n  }\n  uVar3 = 0;\nLAB_00109bac:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dup2@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112080": "\nundefined8 save_abbr(long *param_1,char *param_2)\n\n{\n  char *__s2;\n  long *plVar1;\n  int iVar2;\n  size_t sVar3;\n  ulong uVar4;\n  int *piVar5;\n  long lVar6;\n  char *__s1;\n  \n  __s2 = *(char **)(param_2 + 0x30);\n  if (__s2 == (char *)0x0) {\n    return 1;\n  }\n  if ((__s2 < param_2) || (param_2 + 0x38 <= __s2)) {\n    __s1 = (char *)((long)param_1 + 9);\n    if (*__s2 != '\\0') {\n      do {\n        iVar2 = strcmp(__s1,__s2);\n        while( true ) {\n          if (iVar2 == 0) goto LAB_00112118;\n          if ((*__s1 == '\\0') &&\n             (((char *)((long)param_1 + 9) != __s1 || (*(char *)(param_1 + 1) == '\\0')))) {\n            sVar3 = strlen(__s2);\n            uVar4 = (long)__s1 - (long)(char *)((long)param_1 + 9);\n            if (~uVar4 < sVar3 + 1) {\n              piVar5 = __errno_location();\n              *piVar5 = 0xc;\n              return 0;\n            }\n            if (uVar4 + sVar3 + 1 < 0x77) {\n              extend_abbrs(__s1,__s2);\n            }\n            else {\n              lVar6 = tzalloc(__s2);\n              *param_1 = lVar6;\n              if (lVar6 == 0) {\n                return 0;\n              }\n              *(undefined *)(lVar6 + 8) = 0;\n              __s1 = (char *)(lVar6 + 9);\n            }\n            goto LAB_00112118;\n          }\n          sVar3 = strlen(__s1);\n          __s1 = __s1 + sVar3 + 1;\n          if ((*__s1 != '\\0') || (plVar1 = (long *)*param_1, plVar1 == (long *)0x0)) break;\n          __s1 = (char *)((long)plVar1 + 9);\n          iVar2 = strcmp(__s1,__s2);\n          param_1 = plVar1;\n        }\n      } while( true );\n    }\n    __s1 = \"\";\nLAB_00112118:\n    *(char **)(param_2 + 0x30) = __s1;\n  }\n  return 1;\n}\n\n", 
    "0010eef0": "\nulong dev_type_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "0011d0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106500": "\nuint string_compare_ci(void)\n\n{\n  uint uVar1;\n  \n  uVar1 = mbscasecmp();\n  return uVar1 & 0xffffff00 | (uint)(uVar1 == 0);\n}\n\n", 
    "0011d0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001125d0": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00105650": "\nundefined * bad_cast_constprop_0(void)\n\n{\n  return &DAT_00115d14;\n}\n\n", 
    "001039b0": "\nvoid __memcpy_chk(void)\n\n{\n  (*(code *)PTR___memcpy_chk_0011be28)();\n  return;\n}\n\n", 
    "00105e10": "\nlong __xargmatch_internal\n               (undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = argmatch(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    argmatch_invalid(param_1,param_2,lVar1);\n    argmatch_valid(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "00103c30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0011bf68)();\n  return sVar1;\n}\n\n", 
    "0010af30": "\nwint_t mbscasecmp(byte *param_1,byte *param_2)\n\n{\n  byte bVar1;\n  ushort *puVar2;\n  wint_t wVar3;\n  wint_t wVar4;\n  wint_t wVar5;\n  int iVar6;\n  size_t sVar7;\n  ushort **ppuVar8;\n  __int32_t **pp_Var9;\n  byte bVar10;\n  long in_FS_OFFSET;\n  undefined local_b8 [4];\n  undefined8 local_b4;\n  undefined local_ac;\n  byte *local_a8;\n  ulong local_a0;\n  char local_98;\n  wint_t local_94;\n  undefined local_78 [4];\n  undefined8 local_74;\n  undefined local_6c;\n  byte *local_68;\n  ulong local_60;\n  char local_58;\n  wint_t local_54;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  wVar5 = 0;\n  if (param_1 != param_2) {\n    sVar7 = __ctype_get_mb_cur_max();\n    if (sVar7 < 2) {\n      ppuVar8 = __ctype_b_loc();\n      puVar2 = *ppuVar8;\n      do {\n        bVar10 = *param_1;\n        if ((*(byte *)((long)puVar2 + (ulong)bVar10 * 2 + 1) & 1) != 0) {\n          pp_Var9 = __ctype_tolower_loc();\n          bVar10 = *(byte *)(*pp_Var9 + bVar10);\n        }\n        bVar1 = *param_2;\n        if ((*(byte *)((long)puVar2 + (ulong)bVar1 * 2 + 1) & 1) != 0) {\n          pp_Var9 = __ctype_tolower_loc();\n          bVar1 = *(byte *)(*pp_Var9 + bVar1);\n        }\n        if (bVar10 == 0) {\n          wVar5 = -(uint)bVar1;\n          goto LAB_0010b060;\n        }\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n      } while (bVar10 == bVar1);\n      wVar5 = (uint)bVar10 - (uint)bVar1;\n    }\n    else {\n      local_b8[0] = 0;\n      local_b4 = 0;\n      local_78[0] = 0;\n      local_74 = 0;\n      local_a8 = param_1;\n      local_68 = param_2;\n      while( true ) {\n        local_6c = 0;\n        local_ac = 0;\n        mbuiter_multi_next(local_b8);\n        if ((local_98 != '\\0') && (local_94 == 0)) break;\n        mbuiter_multi_next(local_78);\n        wVar5 = local_54;\n        if (local_58 == '\\0') {\n          if (local_98 != '\\0') goto LAB_0010b158;\n          if (local_a0 != local_60) {\n            if (local_a0 < local_60) {\n              iVar6 = memcmp(local_a8,local_68,local_a0);\n              if (iVar6 < 1) goto LAB_0010b158;\n            }\n            else {\n              iVar6 = memcmp(local_a8,local_68,local_60);\n              if (iVar6 < 0) goto LAB_0010b158;\n            }\n            goto LAB_0010b100;\n          }\n          wVar5 = memcmp(local_a8,local_68,local_a0);\n          if (wVar5 == 0) goto LAB_0010afe4;\n          goto LAB_0010b060;\n        }\n        if (local_54 == 0) break;\n        if (local_98 == '\\0') goto LAB_0010b100;\n        wVar3 = towlower(local_94);\n        wVar4 = towlower(wVar5);\n        wVar5 = wVar3 - wVar4;\n        if (wVar3 - wVar4 != 0) goto LAB_0010b060;\nLAB_0010afe4:\n        local_a8 = local_a8 + local_a0;\n        local_68 = local_68 + local_60;\n      }\n      mbuiter_multi_next(local_b8);\n      if ((local_98 == '\\0') || (local_94 != 0)) {\nLAB_0010b100:\n        wVar5 = 1;\n      }\n      else {\n        mbuiter_multi_next(local_78);\n        if ((local_58 == '\\0') || (wVar5 = local_54, local_54 != 0)) {\nLAB_0010b158:\n          wVar5 = 0xffffffff;\n        }\n      }\n    }\n  }\nLAB_0010b060:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return wVar5;\n}\n\n", 
    "00103b10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0011bed8)();\n  return pcVar1;\n}\n\n", 
    "0011d0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001070d0": "\nint iso_week_days(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = (param_1 - param_2) + 0x17e;\n  return (param_1 - iVar1) + 3 + (iVar1 / 7) * 7;\n}\n\n", 
    "001124b0": "\nulong rotl64(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "0010ede0": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0011d0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __lxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* wcwidth@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112a60": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0011bc98)();\n  return;\n}\n\n", 
    "00105560": "\nuint du_files_constprop_0(undefined4 param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  uint uVar8;\n  \n  uVar8 = 1;\n  if (temp_argv_7393._0_8_ != 0) {\n    lVar3 = xfts_open(temp_argv_7393,param_1,0);\n    while( true ) {\n      lVar4 = fts_read(lVar3);\n      if (lVar4 == 0) break;\n      uVar1 = process_file(lVar3,lVar4);\n      uVar8 = uVar8 & uVar1;\n    }\n    piVar5 = __errno_location();\n    if (*piVar5 != 0) {\n      uVar6 = quotearg_n_style_colon(0,3,*(undefined8 *)(lVar3 + 0x20));\n      uVar7 = dcgettext(0,\"fts_read failed: %s\",5);\n      uVar8 = 0;\n      error(0,*piVar5,uVar7,uVar6);\n    }\n    prev_level = 0;\n    iVar2 = fts_close(lVar3);\n    if (iVar2 != 0) {\n      uVar6 = dcgettext(0,\"fts_close failed\",5);\n      error(0,*piVar5,uVar6);\n      return 0;\n    }\n  }\n  return uVar8;\n}\n\n", 
    "00106770": "\nulong string_hasher_ci(char *param_1,ulong param_2)\n\n{\n  char *pcVar1;\n  wint_t wVar2;\n  ulong uVar3;\n  long lVar4;\n  long in_FS_OFFSET;\n  undefined local_78 [4];\n  undefined8 local_74;\n  undefined local_6c;\n  char *local_68;\n  long local_60;\n  char local_58;\n  wint_t local_54;\n  long local_30;\n  \n  uVar3 = 0;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_78[0] = 0;\n  local_74 = 0;\n  local_68 = param_1;\n  while( true ) {\n    local_6c = 0;\n    mbuiter_multi_next(local_78);\n    pcVar1 = local_68;\n    if ((local_58 != '\\0') && (local_54 == 0)) break;\n    if (local_58 == '\\0') {\n      lVar4 = (long)*local_68;\n    }\n    else {\n      wVar2 = towlower(local_54);\n      lVar4 = (long)(int)wVar2;\n    }\n    local_68 = pcVar1 + local_60;\n    uVar3 = (uVar3 * 0x1f + lVar4) % param_2;\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001038c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0011bdb0)();\n  return _Var1;\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_0011be40)();\n  return iVar1;\n}\n\n", 
    "0010f6e0": "\nvoid set_stat_type_isra_0(undefined4 *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_2 - 1U < 0xc) {\n    uVar1 = *(undefined4 *)(CSWTCH_49 + (ulong)(param_2 - 1U) * 4);\n  }\n  *param_1 = uVar1;\n  return;\n}\n\n", 
    "001037a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setenv_0011bd20)();\n  return iVar1;\n}\n\n", 
    "00104b10": "\nvoid emit_size_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00103b40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00103b40(void)\n\n{\n  (*_DAT_0011bef0)();\n  return;\n}\n\n", 
    "00104d50": "\nvoid show_date(undefined8 param_1,undefined8 param_2,ulong param_3,undefined8 param_4)\n\n{\n  long lVar1;\n  char *__s;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  undefined8 local_88;\n  ulong local_80;\n  undefined local_78 [64];\n  undefined local_38 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_88 = param_2;\n  local_80 = param_3;\n  lVar1 = localtime_rz(param_4,&local_88,local_78);\n  if (lVar1 == 0) {\n    __s = (char *)timetostr(local_88,local_38);\n    uVar2 = quote(__s);\n    uVar3 = dcgettext(0,\"time %s is out of range\",5);\n    error(0,0,uVar3,uVar2);\n    fputs_unlocked(__s,stdout);\n  }\n  else {\n    fprintftime(stdout,param_1,local_78,param_4,local_80 & 0xffffffff);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103a20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n  dirent *pdVar1;\n  \n  pdVar1 = (dirent *)(*(code *)PTR_readdir_0011be60)();\n  return pdVar1;\n}\n\n", 
    "00105f60": "\nFILE * argv_iter(FILE **param_1,int *param_2)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  __ssize_t _Var3;\n  FILE *pFVar4;\n  \n  if (*param_1 == (FILE *)0x0) {\n    pFVar1 = param_1[5];\n    pFVar4 = *(FILE **)pFVar1;\n    if (pFVar4 != (FILE *)0x0) {\n      *param_2 = 1;\n      param_1[5] = (FILE *)&pFVar1->_IO_read_ptr;\n      return pFVar4;\n    }\n    *param_2 = 2;\n  }\n  else {\n    _Var3 = getdelim((char **)(param_1 + 2),(size_t *)(param_1 + 3),0,*param_1);\n    if (_Var3 < 0) {\n      iVar2 = feof(*param_1);\n      *param_2 = (-(uint)(iVar2 == 0) & 2) + 2;\n      pFVar4 = (FILE *)0x0;\n    }\n    else {\n      *param_2 = 1;\n      pFVar4 = param_1[2];\n      param_1[1] = (FILE *)((long)&param_1[1]->_flags + 1);\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "0011d1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103c60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0011bf80)();\n  return iVar1;\n}\n\n", 
    "001125a0": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0011d0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* openat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "0011d1f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010eed0": "\nulong AD_hash(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "0011d1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b600": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0011d2f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106520": "\nuint string_compare(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = strcmp(param_1,param_2);\n  return uVar1 & 0xffffff00 | (uint)(uVar1 == 0);\n}\n\n", 
    "00106400": "\nvoid unescape_pattern(char *param_1)\n\n{\n  char cVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  pcVar3 = param_1;\n  do {\n    cVar1 = *pcVar3;\n    pcVar2 = pcVar3 + 1;\n    if (cVar1 == '\\\\') {\n      if (pcVar3[1] != '\\0') {\n        cVar1 = pcVar3[1];\n        pcVar2 = pcVar3 + 2;\n        *param_1 = cVar1;\n        goto joined_r0x00106411;\n      }\n      *param_1 = '\\\\';\n    }\n    else {\n      *param_1 = cVar1;\njoined_r0x00106411:\n      if (cVar1 == '\\0') {\n        return;\n      }\n    }\n    param_1 = param_1 + 1;\n    pcVar3 = pcVar2;\n  } while( true );\n}\n\n", 
    "0011d0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001127f0": "\nulong is_zero_or_power_of_two(ulong param_1)\n\n{\n  return param_1 - 1 & 0xffffffffffffff00 | (ulong)((param_1 - 1 & param_1) == 0);\n}\n\n", 
    "00106640": "\nundefined8 file_name_matches_isra_0(uint param_1,undefined8 param_2,char *param_3,char *param_4)\n\n{\n  long lVar1;\n  char *pcVar2;\n  \n  while( true ) {\n    strcpy(param_4,param_3);\n    lVar1 = hash_lookup(param_2,param_4);\n    while( true ) {\n      if (lVar1 != 0) {\n        return 1;\n      }\n      if (((param_1 & 8) == 0) || (pcVar2 = strrchr(param_4,0x2f), pcVar2 == (char *)0x0)) break;\n      *pcVar2 = '\\0';\n      lVar1 = hash_lookup(param_2,param_4);\n    }\n    if (((param_1 & 0x40000000) != 0) || (param_3 = strchr(param_3,0x2f), param_3 == (char *)0x0))\n    break;\n    param_3 = param_3 + 1;\n  }\n  return 0;\n}\n\n", 
    "0010d1b0": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00111fe0": "\nundefined8 * tzalloc(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  undefined8 *puVar3;\n  ulong uVar4;\n  \n  if (param_1 == (char *)0x0) {\n    puVar3 = (undefined8 *)malloc(0x80);\n    if (puVar3 != (undefined8 *)0x0) {\n      *puVar3 = 0;\n      *(undefined2 *)(puVar3 + 1) = 0;\n      return puVar3;\n    }\n  }\n  else {\n    sVar2 = strlen(param_1);\n    uVar1 = sVar2 + 1;\n    uVar4 = 0x76;\n    if (0x75 < uVar1) {\n      uVar4 = uVar1;\n    }\n    puVar3 = (undefined8 *)malloc(uVar4 + 0x11 & 0xfffffffffffffff8);\n    if (puVar3 != (undefined8 *)0x0) {\n      *puVar3 = 0;\n      *(undefined2 *)(puVar3 + 1) = 1;\n      extend_abbrs((long)puVar3 + 9,param_1,uVar1);\n    }\n  }\n  return puVar3;\n}\n\n", 
    "001039d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0011be38)();\n  return pvVar1;\n}\n\n", 
    "001049a0": "\n/* WARNING: Removing unreachable block (ram,0x001049c4) */\n/* WARNING: Removing unreachable block (ram,0x001049d0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * gmtime_r(time_t *__timer,tm *__tp)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_gmtime_r_0011bda8)();\n  return ptVar1;\n}\n\n", 
    "00103a10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_0011be58)();\n  return iVar1;\n}\n\n", 
    "00104c20": "\nundefined8 mount_point_in_fts_cycle(long *param_1)\n\n{\n  long *plVar1;\n  int iVar2;\n  \n  plVar1 = (long *)*param_1;\n  if (di_mnt == 0) {\n    di_mnt = di_set_alloc();\n    if (di_mnt == 0) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    fill_mount_table();\n  }\n  if (param_1 != plVar1) {\n    do {\n      iVar2 = di_set_lookup(di_mnt,param_1[0xf],param_1[0x10]);\n      if (0 < iVar2) {\n        return 1;\n      }\n      param_1 = (long *)param_1[1];\n    } while ((param_1 != (long *)0x0) && (plVar1 != param_1));\n  }\n  return 0;\n}\n\n", 
    "00105d10": "\nvoid argmatch_valid(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,&DAT_0011471e,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "00103c50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_unlocked_0011bf78)();\n  return iVar1;\n}\n\n", 
    "00103b30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t timegm(tm *__tp)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_timegm_0011bee8)();\n  return tVar1;\n}\n\n", 
    "00104d40": "\nchar * timetostr(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "0011d0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* readdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001125b0": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "001113a0": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        fts_lfree();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                              &DAT_00115d14);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = fts_build(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            cwd_advance_fd(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = fts_build(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "0010dcd0": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00109900": "\nvoid hash_clear(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010999b;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010999b:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "0010edc0": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "0011d2e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid tzset(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* tzset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001095f0": "\nlong hash_get_first(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = hash_get_first_cold();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = hash_get_first_cold();\n  return lVar1;\n}\n\n", 
    "0010fb80": "\nvoid fts_load_isra_0(void **param_1,long param_2)\n\n{\n  char *__s;\n  void *pvVar1;\n  char *pcVar2;\n  size_t sVar3;\n  \n  __s = (char *)(param_2 + 0x108);\n  pvVar1 = *param_1;\n  *(long *)(param_2 + 0x48) = *(long *)(param_2 + 0x60);\n  memmove(pvVar1,__s,*(long *)(param_2 + 0x60) + 1);\n  pcVar2 = strrchr(__s,0x2f);\n  if ((pcVar2 != (char *)0x0) && ((__s != pcVar2 || (*(char *)(param_2 + 0x109) != '\\0')))) {\n    sVar3 = strlen(pcVar2 + 1);\n    memmove(__s,pcVar2 + 1,sVar3 + 1);\n    *(size_t *)(param_2 + 0x60) = sVar3;\n  }\n  pvVar1 = *param_1;\n  *(void **)(param_2 + 0x38) = pvVar1;\n  *(void **)(param_2 + 0x30) = pvVar1;\n  return;\n}\n\n", 
    "00103680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0011bfc8)();\n  return;\n}\n\n", 
    "0010e4b0": "\nuint xstrtoul(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0010e5ab;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010e5ec:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_0010e640_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_0010e572;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_0010e616_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_0010e616_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = bkm_scale(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_0010e640_caseD_43;\n        case 0x45:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = bkm_scale(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = bkm_scale(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_0010e572;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010e5ec;\n      }\n    }\n  }\nLAB_0010e5ab:\n  uVar10 = 4;\nLAB_0010e572:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103d27": "\nvoid filesystem_type_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d22": "\nvoid fts_set_stat_required_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d2a0": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00103c00": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0011bf50)();\n  return;\n}\n\n", 
    "0010f170": "\nlong fts_sort(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_0010f1c5:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_0010f1c5;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n", 
    "0010ddc0": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "001115b0": "\nvoid unescape_tab(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  char *pcVar3;\n  ulong uVar4;\n  \n  sVar2 = strlen(param_1);\n  uVar4 = 0;\n  pcVar3 = param_1;\n  do {\n    uVar1 = uVar4 + 1;\n    if ((((param_1[uVar4] == '\\\\') && (uVar4 + 4 < sVar2 + 1)) &&\n        ((byte)(param_1[uVar1] - 0x30U) < 4)) &&\n       (((byte)(param_1[uVar4 + 2] - 0x30U) < 8 && ((byte)(param_1[uVar4 + 3] - 0x30U) < 8)))) {\n      *pcVar3 = param_1[uVar4 + 3] + 'P' + (param_1[uVar4 + 2] + param_1[uVar1] * '\\b') * '\\b';\n      uVar4 = uVar4 + 4;\n    }\n    else {\n      *pcVar3 = param_1[uVar4];\n      uVar4 = uVar1;\n      if (sVar2 + 1 <= uVar1) {\n        return;\n      }\n    }\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n", 
    "001126a0": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0011d1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d2f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00103d0e": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid regfree(regex_t *__preg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* regfree@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b820": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0011d1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "0011d2d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getline@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0011bd18)();\n  return iVar1;\n}\n\n", 
    "0010d2b0": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106ad0": "\nuint excluded_file_name(long **param_1,char *param_2)\n\n{\n  long *plVar1;\n  char cVar2;\n  size_t sVar3;\n  void *__ptr;\n  long *plVar4;\n  uint uVar5;\n  \n  if (*param_1 == (long *)0x0) {\n    return 0;\n  }\n  __ptr = (void *)0x0;\n  plVar1 = *param_1;\n  while( true ) {\n    plVar4 = plVar1;\n    if (*(int *)(plVar4 + 1) == 0) {\n      if (__ptr == (void *)0x0) {\n        sVar3 = strlen(param_2);\n        __ptr = (void *)xmalloc(sVar3 + 1);\n      }\n      cVar2 = file_name_matches_isra_0(*(undefined4 *)((long)plVar4 + 0xc),plVar4[2],param_2,__ptr);\n    }\n    else {\n      cVar2 = file_pattern_matches_isra_0(plVar4[2],plVar4[4],param_2);\n    }\n    if (cVar2 != '\\0') break;\n    plVar1 = (long *)*plVar4;\n    if ((long *)*plVar4 == (long *)0x0) {\n      uVar5 = 1;\nLAB_00106b34:\n      free(__ptr);\n      return (*(uint *)((long)plVar4 + 0xc) >> 0x1d ^ 1) & 1 ^ uVar5;\n    }\n  }\n  uVar5 = 0;\n  goto LAB_00106b34;\n}\n\n", 
    "00103d18": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d13": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f7f0": "\nulong setup_dir_isra_0(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_1 & 0x102) != 0) {\n    pvVar1 = (void *)hash_initialize(0x1f,0,AD_hash,AD_compare,PTR_free_0011bfc8);\n    *param_2 = pvVar1;\n    return (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  pvVar1 = malloc(0x20);\n  *param_2 = pvVar1;\n  if (pvVar1 != (void *)0x0) {\n    cycle_check_init(pvVar1);\n    return 1;\n  }\n  return 0;\n}\n\n", 
    "00108ce0": "\nFILE * freopen_safer(char *param_1,char *param_2,FILE *param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  FILE *pFVar4;\n  char cVar5;\n  char cVar6;\n  \n  iVar2 = fileno(param_3);\n  piVar3 = __errno_location();\n  if (iVar2 == 1) {\n    iVar2 = dup2(0,0);\n    if (iVar2 == 0) {\nLAB_00108e1d:\n      cVar5 = '\\0';\n      cVar6 = '\\0';\n      cVar1 = '\\0';\nLAB_00108d9c:\n      pFVar4 = freopen(param_1,param_2,param_3);\n      goto LAB_00108daf;\n    }\n    cVar5 = '\\0';\n    cVar6 = '\\0';\n    cVar1 = protect_fd();\n    if (cVar1 != '\\0') goto LAB_00108d9c;\n    iVar2 = *piVar3;\n    pFVar4 = (FILE *)0x0;\n  }\n  else {\n    if (iVar2 == 2) {\n      cVar5 = false;\n    }\n    else {\n      if (iVar2 == 0) goto LAB_00108e1d;\n      iVar2 = dup2(2,2);\n      cVar5 = iVar2 != 2;\n    }\n    iVar2 = dup2(1,1);\n    cVar6 = iVar2 != 1;\n    iVar2 = dup2(0,0);\n    if (iVar2 == 0) {\n      cVar1 = '\\0';\nLAB_00108d69:\n      if ((!(bool)cVar6) || (cVar6 = protect_fd(1), cVar6 != '\\0')) {\n        if (((bool)cVar5 == false) || (cVar5 = protect_fd(2), cVar5 != '\\0')) goto LAB_00108d9c;\n        iVar2 = *piVar3;\n        pFVar4 = (FILE *)0x0;\n        goto LAB_00108eb6;\n      }\n      iVar2 = *piVar3;\n      pFVar4 = (FILE *)0x0;\n      if ((bool)cVar5 != false) {\n        close(2);\n      }\nLAB_00108e98:\n      close(1);\n    }\n    else {\n      cVar1 = protect_fd();\n      if (cVar1 != '\\0') goto LAB_00108d69;\n      cVar1 = '\\x01';\n      pFVar4 = (FILE *)0x0;\nLAB_00108daf:\n      iVar2 = *piVar3;\n      if (cVar5 != '\\0') {\nLAB_00108eb6:\n        close(2);\n      }\n      if (cVar6 != '\\0') goto LAB_00108e98;\n    }\n    if (cVar1 == '\\0') goto joined_r0x00108e6a;\n  }\n  close(0);\njoined_r0x00108e6a:\n  if (pFVar4 == (FILE *)0x0) {\n    *piVar3 = iVar2;\n  }\n  return pFVar4;\n}\n\n", 
    "0011d2e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001126b0": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "0011d0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010def0": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00103d3b": "\nvoid i_ring_pop_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d2c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fstatfs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106970": "\nulong exclude_fnmatch(undefined8 param_1,char *param_2,uint param_3,undefined8 param_4,ulong param_5\n                     )\n\n{\n  int iVar1;\n  char cVar2;\n  char cVar3;\n  char *pcVar4;\n  ulong uVar5;\n  char *pcVar6;\n  code *pcVar7;\n  \n  pcVar7 = fnmatch_no_wildcards;\n  if ((param_3 & 0x10000000) != 0) {\n    pcVar7 = (code *)PTR_fnmatch_0011bfd8;\n  }\n  iVar1 = (*pcVar7)(param_1,param_2,param_3);\n  uVar5 = param_5 & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  if (((param_3 & 0x40000000) == 0) && (cVar2 = *param_2, cVar2 != '\\0')) {\n    do {\n      if (iVar1 == 0) {\n        return 1;\n      }\n      while( true ) {\n        pcVar4 = param_2 + 1;\n        cVar3 = *pcVar4;\n        pcVar6 = param_2;\n        if (cVar2 == '/') break;\n        param_2 = pcVar4;\n        cVar2 = cVar3;\n        if (cVar3 == '\\0') {\n          uVar5 = 0;\n          goto LAB_001069d5;\n        }\n      }\n      while (param_2 = pcVar4, cVar3 == '/') {\n        pcVar4 = param_2 + 1;\n        pcVar6 = param_2;\n        cVar3 = param_2[1];\n      }\n      iVar1 = (*pcVar7)(param_1,param_2,param_3);\n      cVar2 = pcVar6[1];\n    } while (cVar2 != '\\0');\n    uVar5 = uVar5 & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\nLAB_001069d5:\n  return uVar5 & 0xffffffff;\n}\n\n", 
    "0011d1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* feof@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001039a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dirfd_0011be20)();\n  return iVar1;\n}\n\n", 
    "00103b00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0011bed0)();\n  return pvVar1;\n}\n\n", 
    "0010f270": "\nvoid * fts_alloc(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n", 
    "00105f20": "\nvoid argv_iter_init_stream(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x30);\n  if (puVar1 != (undefined8 *)0x0) {\n    *puVar1 = param_1;\n    puVar1[2] = 0;\n    puVar1[3] = 0;\n    puVar1[1] = 0;\n    puVar1[4] = 0;\n  }\n  return;\n}\n\n", 
    "00103d40": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte main(int param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  int iVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  long lVar6;\n  undefined4 *puVar7;\n  undefined8 uVar8;\n  int *piVar9;\n  char *pcVar10;\n  byte bVar11;\n  uint *puVar12;\n  undefined8 *puVar13;\n  uint uVar14;\n  long in_FS_OFFSET;\n  undefined auVar15 [16];\n  undefined8 uStack_88;\n  undefined8 local_80;\n  char *local_78;\n  uint local_70;\n  char local_69;\n  undefined4 local_64;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  long local_40;\n  \n  uVar14 = 8;\n  puVar12 = &switchD_00103e6c::switchdataD_00114520;\n  bVar11 = 1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  puVar13 = param_2;\n  local_58 = bad_cast_constprop_0();\n  local_50 = 0;\n  set_program_name(*puVar13);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  atexit(close_stdout);\n  exclude = new_exclude();\n  pcVar4 = getenv(\"DU_BLOCK_SIZE\");\n  human_options(pcVar4,&human_output_opts,&output_block_size);\n  local_80 = (undefined4 *)((ulong)local_80 & 0xffffffffffffff00);\n  local_70 = 0x10;\n  local_78 = (char *)0x0;\n  local_69 = '\\0';\nLAB_00103e1f:\n  do {\n    while( true ) {\n      local_64 = 0xffffffff;\n      puVar7 = &local_64;\n      uVar5 = getopt_long(param_1,param_2,\"0abd:chHklmst:xB:DLPSX:\",long_options);\n      iVar3 = (int)uVar5;\n      if (iVar3 == -1) {\n        if (bVar11 == 0) goto LAB_00104897;\n        if (opt_all != '\\0') {\n          if ((char)local_80 != '\\0') goto LAB_00104876;\n          goto LAB_00104244;\n        }\n        if (local_69 == '\\0') goto LAB_001048a1;\n        if ((char)local_80 == '\\0') goto LAB_00104244;\n        if (max_depth == (char *)0x0) {\n          uVar5 = dcgettext(0,\"warning: summarizing is the same as using --max-depth=0\",5);\n          error(0,0,uVar5);\n          if (max_depth == (char *)0x0) goto LAB_00104610;\n        }\n        pcVar4 = max_depth;\n        uVar5 = dcgettext(0,\"warning: summarizing conflicts with --max-depth=%lu\",5);\n        error(0,0,uVar5,pcVar4);\n        usage(1);\n        goto LAB_00104490;\n      }\n      if (iVar3 < 0x88) break;\nswitchD_00103e6c_caseD_31:\n      bVar11 = 0;\n    }\n    if (iVar3 < 0x30) {\n      if (iVar3 == -0x83) {\n        version_etc(stdout,&DAT_00114217,\"GNU coreutils\",Version,\"Torbjorn Granlund\",\n                    \"David MacKenzie\",\"Paul Eggert\",\"Jim Meyering\",0,uVar5);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar3 == -0x82) {\n        usage(0);\n        goto LAB_0010473a;\n      }\n      goto switchD_00103e6c_caseD_31;\n    }\n    switch(iVar3) {\n    default:\n      goto switchD_00103e6c_caseD_31;\n    case 0x42:\n      iVar3 = human_options(optarg,&human_output_opts,&output_block_size);\n      if (iVar3 == 0) break;\n      xstrtol_fatal(iVar3,local_64,0x42,long_options,optarg);\n    case 0x30:\n      opt_nul_terminate_output = 1;\n      break;\n    case 0x44:\n    case 0x48:\n      local_70 = 0x11;\n      break;\n    case 0x4c:\n      local_70 = 2;\n      break;\n    case 0x50:\n      local_70 = 0x10;\n      break;\n    case 0x53:\n      opt_separate_dirs = 1;\n      break;\n    case 0x58:\n      iVar3 = add_exclude_file(add_exclude,exclude,optarg,0x10000000,10);\n      if (iVar3 != 0) {\n        uVar5 = quotearg_n_style_colon(0,3,optarg);\n        piVar9 = __errno_location();\n        bVar11 = 0;\n        error(0,*piVar9,&DAT_00114720,uVar5);\n      }\n      break;\n    case 0x61:\n      opt_all = '\\x01';\n      break;\n    case 0x62:\n      apparent_size = '\\x01';\n      human_output_opts = 0;\n      output_block_size = 1;\n      break;\n    case 99:\n      print_grand_total = '\\x01';\n      break;\n    case 100:\n      iVar3 = xstrtoul(optarg,0,0,&local_60,0);\n      if (iVar3 == 0) {\n        max_depth = (char *)CONCAT44(local_60._4_4_,(int)local_60);\n        local_69 = '\\x01';\n      }\n      else {\n        uVar5 = quote(optarg);\n        uVar8 = dcgettext(0,\"invalid maximum depth %s\",5);\n        bVar11 = 0;\n        error(0,0,uVar8,uVar5);\n      }\n      break;\n    case 0x68:\n      human_output_opts = 0xb0;\n      output_block_size = 1;\n      break;\n    case 0x6b:\n      human_output_opts = 0;\n      output_block_size = 0x400;\n      break;\n    case 0x6c:\n      opt_count_all = '\\x01';\n      break;\n    case 0x6d:\n      human_output_opts = 0;\n      output_block_size = 0x100000;\n      break;\n    case 0x73:\n      local_80 = (undefined4 *)CONCAT71(local_80._1_7_,1);\n      break;\n    case 0x74:\n      iVar3 = xstrtoimax(optarg,0,0,&opt_threshold,\"kKmMGTPEZY0\");\n      if (iVar3 != 0) goto LAB_00104858;\n      if ((opt_threshold == 0) && (*optarg == '-')) {\n        uVar5 = dcgettext(0,\"invalid --threshold argument \\'-0\\'\",5);\n        error(1,0,uVar5);\n        goto switchD_00103e6c_caseD_87;\n      }\n      break;\n    case 0x78:\n      uVar14 = 0x48;\n      break;\n    case 0x80:\n      apparent_size = '\\x01';\n      break;\n    case 0x81:\n      add_exclude(exclude,optarg,0x10000000);\n      break;\n    case 0x82:\n      local_78 = optarg;\n      break;\n    case 0x83:\n      human_output_opts = 0x90;\n      output_block_size = 1;\n      break;\n    case 0x85:\n      opt_time = '\\x01';\n      uVar2 = 0;\n      if (optarg != (char *)0x0) {\n        lVar6 = __xargmatch_internal(\"--time\",optarg,time_args,time_types,4,argmatch_die);\n        uVar2 = *(undefined4 *)(time_types + lVar6 * 4);\n      }\n      time_type = uVar2;\n      pcVar4 = getenv(\"TZ\");\n      localtz = tzalloc(pcVar4);\n      break;\n    case 0x86:\n      goto switchD_00103e6c_caseD_86;\n    case 0x87:\nswitchD_00103e6c_caseD_87:\n      opt_inodes = '\\x01';\n    }\n  } while( true );\nswitchD_00103e6c_caseD_86:\n  time_style = optarg;\n  goto LAB_00103e1f;\nLAB_00104858:\n  xstrtol_fatal(iVar3,local_64,0x74,long_options,optarg);\nLAB_00104876:\n  uVar5 = dcgettext(0,\"cannot both summarize and show all entries\",5);\n  error(0,0,uVar5);\nLAB_00104897:\n  usage(1);\nLAB_001048a1:\n  if ((char)local_80 != '\\0') {\nLAB_00104610:\n    max_depth = (char *)0x0;\n  }\nLAB_00104244:\n  if (opt_inodes != '\\0') {\n    if (apparent_size != '\\0') {\n      uVar5 = dcgettext(0,\"warning: options --apparent-size and -b are ineffective with --inodes\",5)\n      ;\n      error(0,0,uVar5);\n    }\n    output_block_size = 1;\n  }\n  if (opt_time != '\\0') {\n    pcVar4 = time_style;\n    if (time_style != (char *)0x0) goto LAB_00104283;\nLAB_0010473a:\n    pcVar4 = getenv(\"TIME_STYLE\");\n    if ((pcVar4 == (char *)0x0) ||\n       (time_style = pcVar4, iVar3 = strcmp(pcVar4,\"locale\"), iVar3 == 0)) {\n      pcVar4 = \"long-iso\";\n      time_style = \"long-iso\";\nLAB_0010468f:\n      lVar6 = __xargmatch_internal\n                        (\"time style\",pcVar4,time_style_args,time_style_types,4,argmatch_die);\n      iVar3 = *(int *)(time_style_types + lVar6 * 4);\n      if (iVar3 == 1) {\n        time_format = \"%Y-%m-%d %H:%M\";\n      }\n      else if (iVar3 == 2) {\n        time_format = \"%Y-%m-%d\";\n      }\n      else if (iVar3 == 0) {\n        time_format = \"%Y-%m-%d %H:%M:%S.%N %z\";\n      }\n    }\n    else {\n      if (*pcVar4 == '+') {\n        pcVar10 = strchr(pcVar4,10);\n        if (pcVar10 != (char *)0x0) {\n          *pcVar10 = '\\0';\n          goto LAB_00104283;\n        }\n      }\n      else {\n        while (pcVar4 = time_style, iVar3 = strncmp(time_style,\"posix-\",6), iVar3 == 0) {\n          time_style = pcVar4 + 6;\n        }\nLAB_00104283:\n        if (*pcVar4 != '+') goto LAB_0010468f;\n      }\n      time_format = pcVar4 + 1;\n    }\n  }\n  pcVar4 = local_78;\n  if (local_78 == (char *)0x0) {\n    puVar13 = &local_58;\n    if (optind < param_1) {\n      puVar13 = param_2 + optind;\n    }\n    puVar12 = (uint *)argv_iter_init_argv(puVar13);\n    hash_all = optind + 1 < param_1 || local_70 == 2;\n    goto LAB_00104301;\n  }\n  if (param_1 <= optind) goto code_r0x001042b4;\n  param_2 = (undefined8 *)quote(param_2[optind]);\n  uVar5 = dcgettext(0,\"extra operand %s\",5);\n  error(0,0,uVar5,param_2);\n  uVar5 = dcgettext(0,\"file operands cannot be combined with --files0-from\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar5);\n  iVar3 = usage(1);\n  goto LAB_00104858;\ncode_r0x001042b4:\n  iVar3 = strcmp(local_78,\"-\");\n  if ((iVar3 != 0) && (lVar6 = freopen_safer(pcVar4,\"r\",stdin), lVar6 == 0)) {\n    uVar5 = quotearg_style(4,local_78);\n    uVar8 = dcgettext(0,\"cannot open %s for reading\",5);\n    piVar9 = __errno_location();\n    auVar15 = error(1,*piVar9,uVar8,uVar5);\n    uVar5 = uStack_88;\n    uStack_88 = SUB168(auVar15,0);\n    (*(code *)PTR___libc_start_main_0011bfe0)\n              (main,uVar5,&local_80,__libc_csu_init,__libc_csu_fini,SUB168(auVar15 >> 0x40,0),\n               &uStack_88);\n    do {\n                    /* WARNING: Do nothing block with infinite loop */\n    } while( true );\n  }\n  puVar12 = (uint *)argv_iter_init_stream(stdin);\n  hash_all = true;\nLAB_00104301:\n  if ((puVar12 != (uint *)0x0) && (di_files = di_set_alloc(), di_files != 0)) {\n    if ((opt_count_all != '\\0') || (hash_all == '\\0')) {\n      uVar14 = uVar14 | 0x100;\n    }\n    uVar14 = uVar14 | local_70;\n    param_2 = &local_60;\n    param_1 = 0x1143ee;\n    pcVar4 = local_78;\n    while (puVar7 = (undefined4 *)argv_iter(puVar12,param_2), puVar7 != (undefined4 *)0x0) {\n      if (pcVar4 == (char *)0x0) {\n        if (*(char *)puVar7 == '\\0') {\n          bVar11 = 0;\n          uVar5 = dcgettext(0,param_1,5);\n          error(0,0,&DAT_00114720,uVar5);\n        }\n        else {\nLAB_0010449a:\n          temp_argv_7393._0_8_ = puVar7;\n          bVar1 = du_files_constprop_0(uVar14);\n          bVar11 = bVar11 & bVar1;\n        }\n      }\n      else {\n        if ((((*pcVar4 == '-') && (pcVar4[1] == '\\0')) && (*(char *)puVar7 == '-')) &&\n           (*(char *)((long)puVar7 + 1) == '\\0')) {\n          local_80 = puVar7;\n          uVar5 = quotearg_style(4,puVar7);\n          uVar8 = dcgettext(0,\"when reading file names from stdin, no file name of %s allowed\",5);\n          error(0,0,uVar8,uVar5);\n          if (*(char *)local_80 == '\\0') goto LAB_001043e0;\n        }\n        else {\nLAB_00104490:\n          if (*(char *)puVar7 != '\\0') goto LAB_0010449a;\nLAB_001043e0:\n          uVar5 = argv_iter_n_args(puVar12);\n          local_80 = (undefined4 *)dcgettext(0,param_1,5);\n          uVar8 = quotearg_n_style_colon(0,3,pcVar4);\n          error(0,0,\"%s:%lu: %s\",uVar8,uVar5,local_80);\n        }\n        bVar11 = 0;\n      }\n    }\n    if ((int)local_60 != 3) {\n      if ((int)local_60 == 4) {\n        bVar11 = 0;\n        uVar5 = quotearg_n_style_colon(0,3,local_78);\n        uVar8 = dcgettext(0,\"%s: read error\",5);\n        piVar9 = __errno_location();\n        error(0,*piVar9,uVar8,uVar5);\n      }\n      else if ((int)local_60 != 2) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"unexpected error code from argv_iter\\\"\",\"src/du.c\",0x438,\n                      (char *)&__PRETTY_FUNCTION___7402);\n      }\n      argv_iter_free(puVar12);\n      di_set_free(di_files);\n      if (di_mnt != 0) {\n        di_set_free();\n      }\n      if (((local_78 == (char *)0x0) ||\n          ((iVar3 = ferror_unlocked(stdin), iVar3 == 0 && (iVar3 = rpl_fclose(stdin), iVar3 == 0))))\n         || (bVar11 == 0)) {\n        if (print_grand_total != '\\0') {\n          uVar5 = dcgettext(0,\"total\",5);\n          print_size(tot_dui,uVar5);\n        }\n        if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return bVar11 ^ 1;\n        }\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      uVar5 = quotearg_style(4,local_78);\n      uVar8 = dcgettext(0,\"error reading %s\",5);\n      error(1,0,uVar8,uVar5);\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00103c20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0011bf60)();\n  return;\n}\n\n", 
    "0010dec0": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "0011d1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d2d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010bbc0": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,uint *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  uint *local_98;\n  ulong local_90;\n  uint *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (uint *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_0010c047:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_0010c069;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_0010c606;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = (uint *)((long)&UINT_00114c1c + 2);\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010bfbf;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_0010c047;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010bfbf:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = (uint *)((long)&UINT_00114c1c + 2);\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = &UINT_00114c98;\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = &UINT_00114c98;\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = &UINT_00114c98;\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (uint *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(0x114cb7,param_5);\n      local_78 = (uint *)gettext_quote(0x114c1e);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen((char *)local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_0010bd10:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_0010c570_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010c50b;\n          goto LAB_0010c2fb;\n        default:\nswitchD_0010c420_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_0010c7f8;\n              }\n              if (lVar10 == -2) goto joined_r0x0010cc0a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_0010c1e0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_0010c7f8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_0010bf81;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_0010c4c8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_0010c4c8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_0010c4c8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_0010c1d7;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_0010c1c4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_0010c1c4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_0010bee8;\n          goto LAB_0010c1d7;\n        case 0x23:\n        case 0x7e:\nLAB_0010c1bb:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_0010c1c4;\n          goto LAB_0010bee5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_0010c420_caseD_25;\n        case 0x27:\nswitchD_0010c420_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_0010bee8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010bf0b;\n          }\n          goto LAB_0010c1e0;\n        case 0x3f:\nswitchD_0010c420_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010cb6e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_0010bee8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010bf0b;\n          }\n          goto LAB_0010c1e0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_0010be18_caseD_5c;\n          if (!bVar20) {\nLAB_0010c458:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_0010c470;\n          }\n          goto LAB_0010c1e0;\n        case 0x7b:\n        case 0x7d:\nswitchD_0010c420_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010c1bb;\nLAB_0010bee5:\n          bVar23 = false;\n          goto LAB_0010bee8;\n        }\nLAB_0010c2f0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010c2fb:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_0010bf08;\n          goto LAB_0010be30;\n        }\nLAB_0010c330:\n        bVar21 = false;\n        goto joined_r0x0010c341;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_0010c550;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_0010be18_caseD_0;\n          default:\n            goto switchD_0010c420_caseD_1;\n          case 7:\n            goto switchD_0010c570_caseD_7;\n          case 8:\n            goto switchD_0010c570_caseD_8;\n          case 9:\n            goto switchD_0010be18_caseD_9;\n          case 10:\n            goto switchD_0010c570_caseD_a;\n          case 0xb:\n            goto switchD_0010c570_caseD_b;\n          case 0xc:\n            goto switchD_0010c570_caseD_c;\n          case 0xd:\n            goto switchD_0010c570_caseD_d;\n          case 0x20:\n            goto LAB_0010c599;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_0010be18_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_0010c581;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_0010be28;\n          case 0x27:\n            goto switchD_0010c420_caseD_27;\n          case 0x3f:\n            goto switchD_0010c420_caseD_3f;\n          case 0x5c:\n            goto switchD_0010be18_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_0010c420_caseD_7b;\n          }\n        }\n        goto LAB_0010c1ee;\n      }\nLAB_0010c550:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_0010c570_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_0010be18_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010bf0b;\n            }\nLAB_0010c9ab:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010c9ab;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_0010c9e8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010bf0b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_0010c1e0;\n      default:\n        bVar23 = false;\n        goto switchD_0010c420_caseD_1;\n      case 7:\nswitchD_0010c570_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_0010c570_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_0010be18_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_0010c2f0;\n      case 10:\nswitchD_0010c570_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_0010c330;\n      case 0xb:\nswitchD_0010c570_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_0010c330;\n      case 0xc:\nswitchD_0010c570_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_0010c570_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_0010c330;\n      case 0x20:\n        bVar5 = false;\nLAB_0010c599:\n        uVar15 = 0x20;\n        goto LAB_0010be28;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_0010be18_caseD_21:\n        bVar22 = false;\n        goto LAB_0010bee5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_0010c581:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_0010bee8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_0010be30;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_0010be28:\n        bVar22 = false;\n        goto LAB_0010be30;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_0010c420_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_0010c420_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_0010be18_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_0010c458;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_0010c2f0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_0010c420_caseD_7b;\n      }\n      if (bVar20) goto LAB_0010c350;\n      bVar21 = false;\n      goto LAB_0010bea6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_0010c1d7:\n      param_5 = 2;\nLAB_0010c1e0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010c1ee:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_0010c228;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_0010cc75:\n      uVar13 = uVar18;\n      if (((local_98 != (uint *)0x0) && (bVar20)) && (cVar11 = *(char *)local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = *(char *)((long)local_98 + (uVar13 - uVar18));\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_0010c228:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_0010c228;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_0010cc75;\nLAB_0010c606:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_0010c069:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = (uint *)((long)&UINT_00114c1c + 2);\n  } while( true );\ncode_r0x0010c50b:\n  uVar13 = uVar13 + 1;\n  goto LAB_0010bd10;\nswitchD_0010cb6e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_0010c9e8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010bf0b;\n    goto LAB_0010be30;\n  }\n  goto LAB_0010c1ee;\njoined_r0x0010cc0a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_0010c7f8:\n  if (1 < uVar17) {\nLAB_0010c802:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_0010c1e0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_0010beb8;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_0010c470;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_0010bf81:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_0010c802;\n  }\nswitchD_0010c420_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_0010bee8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_0010be30:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010bf0b;\n  }\n  else {\nLAB_0010bf08:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010bf0b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_0010c470:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_0010beb8;\n    }\n  }\njoined_r0x0010c341:\n  if (bVar20) {\nLAB_0010c350:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_0010c1e0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_0010bea6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_0010beb8:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_0010bd10;\n}\n\n", 
    "00103d2c": "\nvoid cwd_advance_fd_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00112b50": "\nvoid openat_safer(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_3 & 0x40) != 0) {\n    uVar3 = param_4 & 0xffffffff;\n  }\n  iVar2 = openat(param_1,param_2,param_3,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106840": "\nvoid exclude_add_pattern_buffer(long param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  undefined8 *puVar2;\n  \n  puVar2 = (undefined8 *)xmalloc(0x10);\n  uVar1 = *(undefined8 *)(param_1 + 8);\n  puVar2[1] = param_2;\n  *puVar2 = uVar1;\n  *(undefined8 **)(param_1 + 8) = puVar2;\n  return;\n}\n\n", 
    "00103690": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0011bff8)();\n  return;\n}\n\n", 
    "0011d2b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unsetenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* unsetenv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001093a0": "\nulong hash_get_max_bucket_length(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010d5f0": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00103d36": "\nvoid fts_read_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d3b0": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111fa0": "\nbool change_env(long param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = param_1 + 9;\n  if (*(char *)(param_1 + 8) == '\\0') {\n    lVar2 = 0;\n  }\n  iVar1 = setenv_TZ(lVar2);\n  if (iVar1 == 0) {\n    tzset();\n  }\n  return iVar1 == 0;\n}\n\n", 
    "00103c10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_0011bf58)();\n  return _Var1;\n}\n\n", 
    "00103d31": "\nvoid leave_dir_isra_0_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104e20": "\nvoid print_size(undefined8 *param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = param_1[1];\n  if (opt_inodes == '\\0') {\n    uVar1 = *param_1;\n  }\n  print_only_size(uVar1);\n  if (opt_time != '\\0') {\n    putchar_unlocked(9);\n    show_date(time_format,param_1[2],param_1[3],localtz);\n  }\n  __printf_chk(1,\"\\t%s%c\",param_2,-(opt_nul_terminate_output == '\\0') & 10);\n  fflush_unlocked(stdout);\n  return;\n}\n\n", 
    "0010ded0": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010ddb0": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "0010efc0": "\nint fts_stat(long param_1,long param_2,char param_3)\n\n{\n  stat *__buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = stat(*(char **)(param_2 + 0x30),__buf);\n    if (iVar1 == 0) {\nLAB_0010f04c:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = lstat(*(char **)(param_2 + 0x30),__buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = fstatat(*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__buf,0x100);\n    if (iVar1 == 0) goto LAB_0010f04c;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n", 
    "001128d0": "\nvoid open_safer(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001071d0": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong __strftime_internal(FILE *param_1,char *param_2,undefined8 *param_3,char param_4,\n                         undefined8 param_5,undefined8 param_6,uint param_7)\n\n{\n  byte bVar1;\n  char cVar2;\n  long lVar3;\n  bool bVar4;\n  uint uVar5;\n  int iVar6;\n  char *pcVar7;\n  ulong uVar8;\n  ulong uVar9;\n  char *pcVar10;\n  size_t __size;\n  int iVar11;\n  char *pcVar12;\n  char cVar13;\n  int iVar14;\n  ulong uVar15;\n  char cVar16;\n  uint uVar17;\n  long lVar18;\n  long lVar19;\n  uint uVar20;\n  uint uVar21;\n  size_t sVar22;\n  char cVar23;\n  uint uVar24;\n  size_t sVar25;\n  ulong uVar26;\n  char *__s;\n  uint uVar27;\n  char *pcVar28;\n  long in_FS_OFFSET;\n  bool bVar29;\n  char *local_4d8;\n  ulong local_4c0;\n  int local_4a8;\n  undefined8 local_488;\n  undefined8 uStack_480;\n  undefined8 local_478;\n  undefined8 uStack_470;\n  undefined8 local_468;\n  undefined8 uStack_460;\n  undefined8 local_458;\n  undefined2 local_44d;\n  char local_44b;\n  char local_44a [2];\n  undefined local_448;\n  undefined local_447 [21];\n  char local_432 [1010];\n  long local_40;\n  \n  __s = (char *)param_3[6];\n  uVar17 = *(uint *)(param_3 + 1);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__s == (char *)0x0) {\n    __s = \"\";\n  }\n  if ((int)uVar17 < 0xd) {\n    if (uVar17 == 0) {\n      uVar17 = 0xc;\n    }\n  }\n  else {\n    uVar17 = uVar17 - 0xc;\n  }\n  cVar13 = *param_2;\n  uVar26 = 0;\njoined_r0x00107235:\n  if (cVar13 != '\\0') {\n    if (cVar13 == '%') {\n      cVar13 = '\\0';\n      local_4a8 = 0;\n      cVar16 = param_4;\nLAB_001072d0:\n      do {\n        cVar23 = param_2[1];\n        cVar2 = cVar23 + -0x30;\n        bVar29 = cVar23 == '0';\n        pcVar7 = param_2;\n        while (param_2 = pcVar7 + 1, !bVar29) {\n          uVar20 = (uint)cVar23;\n          if (!bVar29 && SBORROW1(cVar23,'0') == cVar2 < '\\0') {\n            if (cVar23 == '^') {\n              cVar16 = '\\x01';\n              goto LAB_001072d0;\n            }\n            if (cVar23 == '_') {\n              local_4a8 = 0x5f;\n              goto LAB_001072d0;\n            }\n            if (9 < uVar20 - 0x30) {\n              uVar24 = 0xffffffff;\n              goto LAB_00107380;\n            }\n            uVar24 = 0;\n            pcVar7 = param_2;\n            goto LAB_00107477;\n          }\n          if (cVar23 != '#') {\n            if (cVar23 != '-') {\n              uVar24 = 0xffffffff;\n              goto LAB_0010734e;\n            }\n            local_4a8 = 0x2d;\n            goto LAB_001072d0;\n          }\n          cVar23 = pcVar7[2];\n          cVar13 = '\\x01';\n          cVar2 = cVar23 + -0x30;\n          pcVar7 = param_2;\n          bVar29 = cVar2 == '\\0';\n        }\n        local_4a8 = 0x30;\n      } while( true );\n    }\n    if (0xfffffffffffffffd < uVar26) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      fputc((int)cVar13,param_1);\n    }\n    uVar26 = uVar26 + 1;\n    goto LAB_00107261;\n  }\nLAB_00107270:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar26;\nLAB_00107477:\n  do {\n    uVar20 = (uint)pcVar7[1];\n    param_2 = pcVar7 + 1;\n    uVar21 = uVar20 - 0x30;\n    if ((int)uVar24 < 0xccccccd) {\n      if ((uVar24 == 0xccccccc) && ('7' < *pcVar7)) goto LAB_001074b5;\n      uVar24 = *pcVar7 + -0x30 + uVar24 * 10;\n    }\n    else {\nLAB_001074b5:\n      if (9 < uVar21) {\n        uVar24 = 0x7fffffff;\n        break;\n      }\n      uVar20 = (uint)pcVar7[2];\n      uVar24 = 0x7fffffff;\n      param_2 = pcVar7 + 2;\n      uVar21 = uVar20 - 0x30;\n    }\n    pcVar7 = param_2;\n  } while (uVar21 < 10);\nLAB_00107380:\n  if ((char)uVar20 != 'E') {\nLAB_0010734e:\n    if ((byte)uVar20 == 0x4f) goto LAB_00107386;\n    uVar21 = uVar20;\n    uVar27 = 0;\n    uVar5 = uVar20;\n    if ((byte)uVar20 < 0x7b) goto LAB_0010735d;\n    goto switchD_0010736f_caseD_1;\n  }\nLAB_00107386:\n  bVar1 = param_2[1];\n  uVar5 = (uint)bVar1;\n  param_2 = param_2 + 1;\n  uVar21 = (uint)(char)bVar1;\n  uVar27 = uVar20;\n  if (0x7a < bVar1) goto switchD_0010736f_caseD_1;\nLAB_0010735d:\n  cVar23 = (char)uVar5;\n                    /* WARNING (jumptable): Sanity check requires truncation of jumptable */\n                    /* WARNING: Could not find normalized switch variable to match jumptable */\n  switch(uVar5 & 0xff) {\n  case 0:\n    cVar13 = param_2[-1];\n    param_2 = param_2 + -1;\nLAB_00108080:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    if (cVar13 != '%') break;\n    local_4c0 = 1;\n    pcVar7 = param_2;\n    local_4d8 = (char *)1;\n    if (uVar8 != 0) {\n      local_4d8 = (char *)uVar8;\n    }\n    goto LAB_001073e1;\n  case 0x25:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    local_4d8 = (char *)1;\n    if (uVar8 != 0) {\n      local_4d8 = (char *)uVar8;\n    }\n    if (uVar27 != 0) {\n      local_4c0 = 1;\n      pcVar7 = param_2;\n      goto LAB_001073e1;\n    }\n    if (~uVar26 <= local_4d8) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      if (1 < (int)uVar24) {\n        lVar18 = 0;\n        if (local_4a8 == 0x30) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        else {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        uVar21 = (uint)*param_2;\n      }\n      fputc(uVar21,param_1);\n    }\n    goto LAB_001082bf;\n  case 0x3a:\n    pcVar7 = param_2 + 1;\n    uVar8 = 1;\n    cVar13 = param_2[1];\n    while (cVar13 == ':') {\n      uVar8 = uVar8 + 1;\n      pcVar7 = param_2 + uVar8;\n      cVar13 = param_2[uVar8];\n    }\n    if (cVar13 == 'z') goto LAB_001082fe;\n    break;\n  case 0x41:\n  case 0x61:\n    if (uVar27 != 0) break;\n    local_4c0._0_1_ = '\\0';\n    if (cVar13 != '\\0') {\n      cVar16 = cVar13;\n    }\n    uVar27 = 0;\n    pcVar7 = &local_44b;\n    goto LAB_00107506;\n  case 0x42:\n    if (uVar27 != 0x45) {\n      local_4c0._0_1_ = '\\0';\n      if (cVar13 != '\\0') {\n        cVar16 = cVar13;\n      }\n      goto LAB_001074e3;\n    }\n    break;\n  case 0x43:\n    if (uVar27 != 0x45) {\n      local_4d8._0_4_ = 2;\n      uVar20 = *(uint *)((long)param_3 + 0x14);\n      iVar6 = (int)uVar20 / 100 + 0x13;\n      bVar29 = (int)uVar20 < -0x76c;\n      uVar8 = (ulong)(iVar6 - ((uint)(0 < iVar6) & (uint)((int)uVar20 % 100) >> 0x1f));\n      uVar21 = 0;\n      bVar4 = false;\n      goto LAB_0010773d;\n    }\nLAB_00108770:\n    uVar20 = 0;\n    goto LAB_00107750;\n  case 0x44:\n    if (uVar27 == 0) {\n      pcVar7 = \"%m/%d/%y\";\n      goto LAB_001081da;\n    }\n    break;\n  case 0x46:\n    if (uVar27 == 0) {\n      pcVar7 = \"%Y-%m-%d\";\n      goto LAB_001081da;\n    }\n    break;\n  case 0x47:\n  case 0x56:\n  case 0x67:\n    if (uVar27 != 0x45) {\n      uVar20 = *(uint *)((long)param_3 + 0x14);\n      uVar21 = *(uint *)((long)param_3 + 0x1c);\n      uVar8 = (ulong)((uVar20 - 100) + ((int)uVar20 >> 0x1f & 400U));\n      iVar6 = iso_week_days(uVar21,*(uint *)(param_3 + 3));\n      iVar11 = (int)uVar8;\n      if (iVar6 < 0) {\n        uVar5 = iVar11 - 1;\n        iVar6 = 0x16d;\n        if (((uVar5 & 3) == 0) &&\n           (iVar6 = 0x16e, (uVar5 * -0x3d70a3d7 + 0x51eb850 >> 2 | uVar5 * 0x40000000) < 0x28f5c29))\n        {\n          iVar6 = ~-(uint)((int)uVar5 % 400 == 0) + 0x16e;\n        }\n        iVar6 = iso_week_days(uVar21 + iVar6);\n        iVar11 = -1;\n      }\n      else {\n        iVar14 = 0x16d;\n        if ((uVar8 & 3) == 0) {\n          iVar14 = 0x16e;\n          uVar5 = iVar11 * -0x3d70a3d7 + 0x51eb850;\n          if ((uVar5 >> 2 | iVar11 * 0x40000000) < 0x28f5c29) {\n            iVar14 = ((uVar5 >> 4 | iVar11 * -0x70000000) < 0xa3d70b) + 0x16d;\n          }\n        }\n        iVar11 = iso_week_days(uVar21 - iVar14);\n        if (-1 < iVar11) {\n          iVar6 = iVar11;\n        }\n        iVar11 = (iVar11 >> 0x1f) + 1;\n      }\n      if (cVar23 == 'G') {\n        local_4d8._0_4_ = 4;\n        uVar8 = (ulong)(uVar20 + 0x76c + iVar11);\n        bVar29 = (int)uVar20 < -0x76c - iVar11;\n        uVar21 = 0;\n        bVar4 = false;\n        goto LAB_0010773d;\n      }\n      if (cVar23 == 'g') {\n        uVar21 = ((int)uVar20 % 100 + iVar11) % 100;\n        uVar8 = (ulong)uVar21;\n        local_4d8._0_4_ = 2;\n        if ((int)uVar21 < 0) {\n          uVar5 = uVar21 + 100;\n          if ((int)uVar20 < -0x76c - iVar11) {\n            uVar5 = -uVar21;\n          }\n          uVar8 = (ulong)uVar5;\n        }\n      }\n      else {\n        uVar8 = (ulong)(iVar6 / 7 + 1);\n        local_4d8._0_4_ = 2;\n      }\n      goto LAB_00107730;\n    }\n    break;\n  case 0x48:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)(param_3 + 1);\n      local_4d8._0_4_ = 2;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x49:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)uVar17;\n      local_4d8._0_4_ = 2;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x4d:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)((long)param_3 + 4);\n      local_4d8._0_4_ = 2;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x4e:\n    if (uVar27 != 0x45) {\n      if (uVar24 == 0xffffffff) {\n        uVar8 = (ulong)param_7;\n        uVar24 = 9;\n        local_4d8._0_4_ = 9;\n      }\n      else {\n        local_4d8._0_4_ = uVar24;\n        if ((int)uVar24 < 9) {\n          uVar8 = (ulong)param_7;\n          uVar20 = uVar24;\n          do {\n            uVar20 = uVar20 + 1;\n            uVar8 = (ulong)(uint)((int)uVar8 / 10);\n          } while (uVar20 != 9);\n        }\n        else {\n          uVar8 = (ulong)param_7;\n        }\n      }\n      goto LAB_00107730;\n    }\n    break;\n  case 0x50:\n    local_4c0._0_1_ = '\\x01';\n    goto LAB_001083cf;\n  case 0x52:\n    pcVar7 = \"%H:%M\";\n    goto LAB_001081da;\n  case 0x53:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)param_3;\n      local_4d8._0_4_ = 2;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x54:\n    pcVar7 = \"%H:%M:%S\";\nLAB_001081da:\n    uVar9 = __strftime_internal(0,pcVar7,param_3,cVar16,param_5,param_6,param_7);\n    uVar8 = 0;\n    if (-1 < (int)uVar24) {\n      uVar8 = (long)(int)uVar24;\n    }\n    local_4d8 = (char *)uVar8;\n    if (uVar8 <= uVar9) {\n      local_4d8 = (char *)uVar9;\n    }\n    if (~uVar26 <= local_4d8) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      if (uVar9 < uVar8) {\n        uVar8 = (ulong)(int)uVar24;\n        if (local_4a8 == 0x30) {\n          if (uVar8 != uVar9) {\n            lVar18 = 0;\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x30,param_1);\n            } while (uVar8 - uVar9 != lVar18);\n          }\n        }\n        else {\n          lVar18 = 0;\n          if (uVar8 != uVar9) {\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x20,param_1);\n            } while (uVar8 - uVar9 != lVar18);\n          }\n        }\n      }\n      __strftime_internal(param_1,pcVar7,param_3,cVar16,param_5,param_6,param_7);\n    }\nLAB_001082bf:\n    uVar26 = uVar26 + (long)local_4d8;\n    goto LAB_00107261;\n  case 0x55:\n    if (uVar27 != 0x45) {\n      iVar6 = (*(uint *)((long)param_3 + 0x1c) - *(uint *)(param_3 + 3)) + 7;\nLAB_00107aeb:\n      uVar8 = (ulong)(uint)(iVar6 / 7);\n      local_4d8._0_4_ = 2;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x57:\n    if (uVar27 != 0x45) {\n      iVar6 = (((int)(*(uint *)(param_3 + 3) + 6) / 7) * 7 - (*(uint *)(param_3 + 3) + 6)) + 7 +\n              *(uint *)((long)param_3 + 0x1c);\n      goto LAB_00107aeb;\n    }\n    break;\n  case 0x58:\n  case 99:\n  case 0x78:\n    if (uVar27 != 0x4f) goto switchD_0010736f_caseD_72;\n    break;\n  case 0x59:\n    if (uVar27 == 0x45) goto LAB_00108770;\n    if (uVar27 == 0x4f) break;\n    local_4d8._0_4_ = 4;\n    bVar29 = (int)*(uint *)((long)param_3 + 0x14) < -0x76c;\n    uVar8 = (ulong)(*(uint *)((long)param_3 + 0x14) + 0x76c);\n    uVar21 = 0;\n    bVar4 = false;\n    goto LAB_00107b50;\n  case 0x5a:\n    if (cVar13 != '\\0') {\n      cVar16 = '\\0';\n    }\n    __size = strlen(__s);\n    sVar25 = (size_t)(int)uVar24;\n    uVar8 = 0;\n    if (-1 < (int)uVar24) {\n      uVar8 = sVar25;\n    }\n    sVar22 = __size;\n    if (__size < uVar8) {\n      sVar22 = uVar8;\n    }\n    if (~uVar26 <= sVar22) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      if (__size < uVar8) {\n        if (local_4a8 == 0x30) {\n          if (sVar25 != __size) {\n            lVar18 = 0;\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x30,param_1);\n            } while (sVar25 - __size != lVar18);\n          }\n        }\n        else {\n          lVar18 = 0;\n          if (sVar25 != __size) {\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x20,param_1);\n            } while (sVar25 - __size != lVar18);\n          }\n        }\n      }\n      if (cVar13 == '\\0') {\n        if (cVar16 == '\\0') {\n          fwrite(__s,__size,1,param_1);\n        }\n        else {\n          fwrite_uppcase(param_1,__s,__size);\n        }\n      }\n      else {\n        fwrite_lowcase(param_1,__s,__size);\n      }\n    }\n    uVar26 = uVar26 + sVar22;\n    goto LAB_00107261;\n  case 0x62:\n  case 0x68:\n    if (cVar13 != '\\0') {\n      cVar16 = cVar13;\n    }\n    if (uVar27 != 0x45) goto switchD_0010736f_caseD_72;\n    break;\n  case 100:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)((long)param_3 + 0xc);\n      local_4d8._0_4_ = 2;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x65:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)((long)param_3 + 0xc);\nLAB_001079a7:\n      local_4d8._0_4_ = 2;\n      if ((local_4a8 != 0x30) && (local_4a8 != 0x2d)) {\n        local_4a8 = 0x5f;\n      }\n      goto LAB_00107730;\n    }\n    break;\n  case 0x6a:\n    if (uVar27 != 0x45) {\n      local_4d8._0_4_ = 3;\n      bVar29 = (int)*(uint *)((long)param_3 + 0x1c) < -1;\n      uVar8 = (ulong)(*(uint *)((long)param_3 + 0x1c) + 1);\n      uVar21 = 0;\n      bVar4 = false;\n      goto LAB_0010773d;\n    }\n    break;\n  case 0x6b:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)(param_3 + 1);\n      goto LAB_001079a7;\n    }\n    break;\n  case 0x6c:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)uVar17;\n      goto LAB_001079a7;\n    }\n    break;\n  case 0x6d:\n    if (uVar27 != 0x45) {\n      local_4d8._0_4_ = 2;\n      bVar29 = (int)*(uint *)(param_3 + 2) < -1;\n      uVar8 = (ulong)(*(uint *)(param_3 + 2) + 1);\n      uVar21 = 0;\n      bVar4 = false;\n      goto LAB_0010773d;\n    }\n    break;\n  case 0x6e:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    if (uVar8 == 0) {\n      uVar8 = 1;\n    }\n    if (~uVar26 <= uVar8) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      if (1 < (int)uVar24) {\n        lVar18 = 0;\n        if (local_4a8 == 0x30) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        else {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n      }\n      fputc(10,param_1);\n    }\n    goto LAB_00107fc6;\n  case 0x70:\n    local_4c0._0_1_ = '\\0';\nLAB_001083cf:\n    cVar23 = 'p';\n    if (cVar13 != '\\0') {\n      cVar16 = '\\0';\n      local_4c0._0_1_ = cVar13;\n    }\nLAB_001074e3:\n    if (uVar27 != 0) {\n      local_4d8._0_4_ = 0;\n      goto LAB_00107762;\n    }\n    pcVar7 = &local_44b;\n    goto LAB_00107506;\n  case 0x71:\n    local_4d8._0_4_ = 1;\n    uVar20 = 1;\n    if (uVar27 == 0x4f) goto LAB_00107750;\n    bVar4 = false;\n    bVar29 = false;\n    uVar21 = 0;\n    uVar8 = (ulong)(((int)(*(uint *)(param_3 + 2) * 0xb) >> 5) + 1);\n    goto LAB_00107b57;\n  case 0x72:\nswitchD_0010736f_caseD_72:\n    local_4c0._0_1_ = '\\0';\n    goto LAB_001074e3;\n  case 0x73:\n    local_468 = param_3[4];\n    uStack_460 = param_3[5];\n    local_488 = *param_3;\n    uStack_480 = param_3[1];\n    local_478 = param_3[2];\n    uStack_470 = param_3[3];\n    local_458 = param_3[6];\n    lVar19 = mktime_z(param_6,&local_488);\n    pcVar7 = local_432 + 1;\n    lVar18 = lVar19;\n    do {\n      lVar3 = lVar18 / 10;\n      cVar13 = (char)lVar18 + (char)lVar3 * -10;\n      if (lVar19 < 0) {\n        cVar13 = -cVar13;\n      }\n      pcVar7 = pcVar7 + -1;\n      *pcVar7 = cVar13 + '0';\n      lVar18 = lVar3;\n    } while (lVar3 != 0);\n    uVar20 = 1;\n    if (0 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    if (lVar19 < 0) goto LAB_00108440;\n    goto LAB_001078c2;\n  case 0x74:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    if (uVar8 == 0) {\n      uVar8 = 1;\n    }\n    if (~uVar26 <= uVar8) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      if (1 < (int)uVar24) {\n        lVar18 = 0;\n        if (local_4a8 == 0x30) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        else {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n      }\n      fputc(9,param_1);\n    }\nLAB_00107fc6:\n    uVar26 = uVar26 + uVar8;\n    goto LAB_00107261;\n  case 0x75:\n    uVar8 = (ulong)((int)(*(uint *)(param_3 + 3) + 6) % 7 + 1);\n    local_4d8._0_4_ = 1;\n    goto LAB_00107730;\n  case 0x77:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)(param_3 + 3);\n      local_4d8._0_4_ = 1;\n      goto LAB_00107730;\n    }\n    break;\n  case 0x79:\n    if (uVar27 == 0x45) goto LAB_00108770;\n    uVar20 = (int)*(uint *)((long)param_3 + 0x14) % 100;\n    uVar8 = (ulong)uVar20;\n    local_4d8._0_4_ = 2;\n    if ((int)uVar20 < 0) {\n      uVar21 = uVar20 + 100;\n      if ((int)*(uint *)((long)param_3 + 0x14) < -0x76c) {\n        uVar21 = -uVar20;\n      }\n      uVar8 = (ulong)uVar21;\n    }\nLAB_00107730:\n    uVar21 = 0;\n    bVar4 = false;\n    bVar29 = SUB81(uVar8 >> 0x1f,0);\nLAB_0010773d:\n    iVar6 = (int)uVar8;\n    if (uVar27 != 0x4f) {\nLAB_00107b50:\n      iVar6 = (int)uVar8;\n      if (bVar29 != false) goto LAB_00107b55;\nLAB_00107b57:\n      pcVar10 = local_432 + 1;\n      pcVar7 = local_432;\n      while( true ) {\n        if ((uVar21 & 1) != 0) {\n          pcVar10[-1] = ':';\n          pcVar28 = pcVar10 + -2;\n          pcVar10 = pcVar7;\n          pcVar7 = pcVar28;\n        }\n        uVar21 = (int)uVar21 >> 1;\n        pcVar10[-1] = (char)uVar8 + (char)(uVar8 / 10) * -10 + '0';\n        if (((uint)uVar8 < 10) && (uVar21 == 0)) break;\n        uVar8 = uVar8 / 10;\n        pcVar10 = pcVar7;\n        pcVar7 = pcVar7 + -1;\n      }\n      uVar20 = (uint)local_4d8;\n      if ((int)(uint)local_4d8 < (int)uVar24) {\n        uVar20 = uVar24;\n      }\n      if (bVar29 == false) {\n        if (bVar4) {\n          if (local_4a8 != 0x2d) {\n            cVar13 = '+';\n            goto LAB_00107c0a;\n          }\n          local_4d8._0_1_ = '+';\nLAB_00108454:\n          uVar21 = 0;\n          if (-1 < (int)uVar24) {\n            uVar21 = uVar24;\n          }\n          pcVar28 = (char *)(long)(int)uVar21;\n          pcVar10 = (char *)0x1;\n          if (pcVar28 != (char *)0x0) {\n            pcVar10 = pcVar28;\n          }\n          if ((char *)~uVar26 <= pcVar10) goto LAB_001072a0;\n          if (param_1 != (FILE *)0x0) {\n            if (((uVar20 == 0) && ((char *)0x1 < pcVar28)) && ((long)(int)uVar24 != 1)) {\n              lVar18 = 0;\n              do {\n                lVar18 = lVar18 + 1;\n                fputc(0x20,param_1);\n              } while ((long)(int)uVar24 + -1 != lVar18);\n            }\n            fputc((int)(char)local_4d8,param_1);\n          }\n          uVar26 = uVar26 + (long)pcVar10;\n          local_4a8 = 0x2d;\n          local_4d8 = local_432 + (1 - (long)pcVar7);\n          pcVar10 = (char *)~uVar26;\n        }\n        else {\nLAB_001078c2:\n          local_4d8 = local_432 + (1 - (long)pcVar7);\n          pcVar10 = (char *)~uVar26;\n          if (local_4a8 != 0x2d) {\n            iVar6 = uVar20 - (uint)local_4d8;\n            if (0 < iVar6) {\n              cVar13 = '\\0';\n              goto LAB_00107c34;\n            }\n          }\n          uVar21 = 0;\n          if (-1 < (int)uVar24) {\n            uVar21 = uVar24;\n          }\n          pcVar28 = (char *)(long)(int)uVar21;\n        }\n      }\n      else {\nLAB_00108440:\n        cVar13 = '-';\n        if (local_4a8 == 0x2d) {\n          local_4d8._0_1_ = '-';\n          goto LAB_00108454;\n        }\nLAB_00107c0a:\n        local_4d8 = local_432 + (1 - (long)pcVar7);\n        iVar6 = (uVar20 - 1) - (int)local_4d8;\n        if (iVar6 < 1) {\n          uVar21 = 0;\n          if (-1 < (int)uVar24) {\n            uVar21 = uVar24;\n          }\n          pcVar28 = (char *)(long)(int)uVar21;\n          pcVar10 = (char *)0x1;\n          if (pcVar28 != (char *)0x0) {\n            pcVar10 = pcVar28;\n          }\n          if ((char *)~uVar26 <= pcVar10) goto LAB_001072a0;\n          if (param_1 != (FILE *)0x0) {\n            if ((uVar20 == 0) && ((char *)0x1 < pcVar28)) {\n              lVar18 = (long)(int)uVar24;\n              if (local_4a8 == 0x30) {\n                if (lVar18 != 1) {\n                  lVar19 = 0;\n                  do {\n                    lVar19 = lVar19 + 1;\n                    fputc(0x30,param_1);\n                  } while (lVar18 + -1 != lVar19);\n                }\n              }\n              else {\n                lVar19 = 0;\n                if (lVar18 != 1) {\n                  do {\n                    lVar19 = lVar19 + 1;\n                    fputc(0x20,param_1);\n                  } while (lVar18 + -1 != lVar19);\n                }\n              }\n            }\n            fputc((int)cVar13,param_1);\n          }\n          uVar26 = uVar26 + (long)pcVar10;\n          pcVar10 = (char *)~uVar26;\n        }\n        else {\nLAB_00107c34:\n          uVar8 = ~uVar26;\n          if (local_4a8 == 0x5f) {\n            uVar9 = (ulong)iVar6;\n            if (uVar8 <= uVar9) goto LAB_001072a0;\n            if (param_1 != (FILE *)0x0) {\n              uVar8 = 0;\n              do {\n                uVar8 = uVar8 + 1;\n                fputc(0x20,param_1);\n              } while (uVar8 < uVar9);\n            }\n            uVar26 = uVar26 + uVar9;\n            if (iVar6 < (int)uVar24) {\n              uVar24 = uVar24 - iVar6;\n              pcVar28 = (char *)(long)(int)uVar24;\n            }\n            else {\n              pcVar28 = (char *)0x0;\n              uVar24 = 0;\n            }\n            pcVar10 = (char *)~uVar26;\n            if (cVar13 == '\\0') {\n              local_4d8 = local_432 + (1 - (long)pcVar7);\n            }\n            else {\n              pcVar12 = (char *)0x1;\n              if (pcVar28 != (char *)0x0) {\n                pcVar12 = pcVar28;\n              }\n              if (pcVar10 <= pcVar12) goto LAB_001072a0;\n              if (param_1 != (FILE *)0x0) {\n                if (((uVar20 == 0) && ((char *)0x1 < pcVar28)) && ((long)(int)uVar24 != 1)) {\n                  lVar18 = 0;\n                  do {\n                    lVar18 = lVar18 + 1;\n                    fputc(0x20,param_1);\n                  } while ((long)(int)uVar24 + -1 != lVar18);\n                }\n                fputc((int)cVar13,param_1);\n                local_4a8 = 0x5f;\n              }\n              uVar26 = uVar26 + (long)pcVar12;\n              local_4d8 = local_432 + (1 - (long)pcVar7);\n              pcVar10 = (char *)~uVar26;\n            }\n          }\n          else {\n            if (uVar8 <= (ulong)(long)(int)uVar20) goto LAB_001072a0;\n            if (cVar13 != '\\0') {\n              uVar21 = 0;\n              if (-1 < (int)uVar24) {\n                uVar21 = uVar24;\n              }\n              uVar15 = (ulong)(int)uVar21;\n              uVar9 = 1;\n              if (uVar15 != 0) {\n                uVar9 = uVar15;\n              }\n              if (uVar8 <= uVar9) goto LAB_001072a0;\n              if (param_1 != (FILE *)0x0) {\n                if ((uVar20 == 0) && (1 < uVar15)) {\n                  lVar18 = (long)(int)uVar24;\n                  if (local_4a8 == 0x30) {\n                    if (lVar18 != 1) {\n                      lVar19 = 0;\n                      do {\n                        lVar19 = lVar19 + 1;\n                        fputc(0x30,param_1);\n                      } while (lVar18 + -1 != lVar19);\n                    }\n                  }\n                  else {\n                    lVar19 = 0;\n                    if (lVar18 != 1) {\n                      do {\n                        lVar19 = lVar19 + 1;\n                        fputc(0x20,param_1);\n                      } while (lVar18 + -1 != lVar19);\n                    }\n                  }\n                }\n                fputc((int)cVar13,param_1);\n              }\n              uVar26 = uVar26 + uVar9;\n            }\n            if (param_1 != (FILE *)0x0) {\n              uVar8 = 0;\n              do {\n                uVar8 = uVar8 + 1;\n                fputc(0x30,param_1);\n              } while (uVar8 < (ulong)(long)iVar6);\n            }\n            uVar26 = uVar26 + (long)iVar6;\n            pcVar28 = (char *)0x0;\n            uVar24 = 0;\n            local_4d8 = local_432 + (1 - (long)pcVar7);\n            pcVar10 = (char *)~uVar26;\n          }\n        }\n      }\n      pcVar12 = local_4d8;\n      if (local_4d8 < pcVar28) {\n        pcVar12 = pcVar28;\n      }\n      if (pcVar10 <= pcVar12) goto LAB_001072a0;\n      if (param_1 != (FILE *)0x0) {\n        if ((uVar20 == 0) && (local_4d8 < pcVar28)) {\n          pcVar10 = (char *)(long)(int)uVar24;\n          if (local_4a8 == 0x30) {\n            if (pcVar10 != local_4d8) {\n              lVar18 = 0;\n              do {\n                lVar18 = lVar18 + 1;\n                fputc(0x30,param_1);\n              } while ((long)pcVar10 - (long)local_4d8 != lVar18);\n            }\n          }\n          else {\n            lVar18 = 0;\n            if (pcVar10 != local_4d8) {\n              do {\n                lVar18 = lVar18 + 1;\n                fputc(0x20,param_1);\n              } while ((long)pcVar10 - (long)local_4d8 != lVar18);\n            }\n          }\n        }\n        if (cVar16 == '\\0') {\n          fwrite(pcVar7,(size_t)local_4d8,1,param_1);\n        }\n        else {\n          fwrite_uppcase(param_1,pcVar7,local_4d8);\n        }\n      }\n      uVar26 = uVar26 + (long)pcVar12;\n      goto LAB_00107261;\n    }\n    uVar20 = (uint)local_4d8;\n    if (bVar29 != false) {\nLAB_00107b55:\n      uVar8 = (ulong)(uint)-iVar6;\n      goto LAB_00107b57;\n    }\nLAB_00107750:\n    local_4d8._0_4_ = uVar20;\n    local_4c0._0_1_ = '\\0';\nLAB_00107762:\n    local_44b = (char)uVar27;\n    pcVar7 = local_44a;\n    uVar27 = (uint)local_4d8;\nLAB_00107506:\n    local_44d = 0x2520;\n    *pcVar7 = cVar23;\n    pcVar7[1] = '\\0';\n    lVar18 = FUN_00103b40(&local_448,0x400,&local_44d,param_3);\n    if (lVar18 == 0) goto LAB_00107261;\n    uVar8 = lVar18 - 1;\n    uVar9 = 0;\n    if (-1 < (int)uVar24) {\n      uVar9 = (long)(int)uVar24;\n    }\n    local_4d8 = (char *)uVar9;\n    if (uVar9 <= uVar8) {\n      local_4d8 = (char *)uVar8;\n    }\n    if (~uVar26 <= local_4d8) goto LAB_001072a0;\n    if (param_1 != (FILE *)0x0) {\n      if ((uVar27 == 0) && (uVar8 < uVar9)) {\n        uVar9 = (ulong)(int)uVar24;\n        if (local_4a8 == 0x30) {\n          if (uVar9 != uVar8) {\n            lVar18 = 0;\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x30,param_1);\n            } while (uVar9 - uVar8 != lVar18);\n          }\n        }\n        else {\n          lVar18 = 0;\n          if (uVar9 != uVar8) {\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x20,param_1);\n            } while (uVar9 - uVar8 != lVar18);\n          }\n        }\n      }\n      if ((char)local_4c0 == '\\0') {\n        if (cVar16 == '\\0') {\n          fwrite(local_447,uVar8,1,param_1);\n        }\n        else {\n          fwrite_uppcase(param_1,local_447,uVar8);\n        }\n      }\n      else {\n        fwrite_lowcase(param_1,local_447,uVar8);\n      }\n    }\n    goto LAB_00107458;\n  case 0x7a:\n    uVar8 = 0;\n    pcVar7 = param_2;\nLAB_001082fe:\n    param_2 = pcVar7;\n    if ((int)*(uint *)(param_3 + 4) < 0) goto LAB_00107261;\n    bVar29 = true;\n    iVar6 = (int)param_3[5];\n    if ((-1 < iVar6) && (bVar29 = false, iVar6 == 0)) {\n      bVar29 = *__s == '-';\n    }\n    uVar20 = iVar6 / 0xe10;\n    uVar21 = (iVar6 / 0x3c) % 0x3c;\n    if (uVar8 == 2) {\nLAB_00108a2b:\n      local_4d8._0_4_ = 9;\n      bVar4 = true;\n      iVar11 = uVar21 * 100;\n      uVar21 = 0x14;\n      uVar8 = (ulong)(iVar6 % 0x3c + uVar20 * 10000 + iVar11);\n    }\n    else if (uVar8 < 3) {\n      if (uVar8 == 0) {\n        local_4d8._0_4_ = 5;\n        bVar4 = true;\n        uVar8 = (ulong)(uVar20 * 100 + uVar21);\n        uVar21 = 0;\n      }\n      else {\nLAB_0010839e:\n        local_4d8._0_4_ = 6;\n        bVar4 = true;\n        uVar8 = (ulong)(uVar20 * 100 + uVar21);\n        uVar21 = 4;\n      }\n    }\n    else {\n      if (uVar8 != 3) {\n        cVar13 = *param_2;\n        goto LAB_00108080;\n      }\n      if (iVar6 % 0x3c != 0) goto LAB_00108a2b;\n      if (uVar21 != 0) goto LAB_0010839e;\n      uVar8 = (ulong)uVar20;\n      local_4d8._0_4_ = 3;\n      bVar4 = true;\n    }\n    goto LAB_0010773d;\n  }\nswitchD_0010736f_caseD_1:\n  pcVar7 = param_2;\n  do {\n    pcVar7 = pcVar7 + -1;\n  } while (*pcVar7 != '%');\n  local_4c0 = (ulong)(((int)param_2 + 1) - (int)pcVar7);\n  uVar20 = 0;\n  if (-1 < (int)uVar24) {\n    uVar20 = uVar24;\n  }\n  uVar8 = (ulong)(int)uVar20;\n  local_4d8 = (char *)local_4c0;\n  if (local_4c0 < uVar8) {\n    local_4d8 = (char *)uVar8;\n  }\nLAB_001073e1:\n  if (~uVar26 <= local_4d8) {\nLAB_001072a0:\n    uVar26 = 0;\n    goto LAB_00107270;\n  }\n  if (param_1 != (FILE *)0x0) {\n    if (local_4c0 < uVar8) {\n      uVar8 = (ulong)(int)uVar24;\n      if (local_4a8 == 0x30) {\n        if (uVar8 != local_4c0) {\n          lVar18 = 0;\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while (uVar8 - local_4c0 != lVar18);\n        }\n      }\n      else {\n        lVar18 = 0;\n        if (uVar8 != local_4c0) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while (uVar8 - local_4c0 != lVar18);\n        }\n      }\n    }\n    if (cVar16 == '\\0') {\n      fwrite(pcVar7,local_4c0,1,param_1);\n    }\n    else {\n      fwrite_uppcase(param_1,pcVar7,local_4c0);\n    }\n  }\nLAB_00107458:\n  uVar26 = uVar26 + (long)local_4d8;\nLAB_00107261:\n  cVar13 = param_2[1];\n  param_2 = param_2 + 1;\n  goto joined_r0x00107235;\n}\n\n", 
    "0010eea0": "\nulong AD_compare(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "001106f0": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  uint uVar4;\n  int iVar5;\n  long *__ptr;\n  ulong uVar6;\n  char *__ptr_00;\n  long lVar7;\n  size_t sVar8;\n  long lVar9;\n  long lVar10;\n  int *piVar11;\n  char *__s;\n  ulong uVar12;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar11 = __errno_location();\n    *piVar11 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  uVar4 = param_2 & 0xfffffdff | 4;\n  if ((param_2 & 2) == 0) {\n    uVar4 = param_2;\n  }\n  *(uint *)(__ptr + 9) = uVar4;\n  uVar6 = fts_maxarglen(param_1);\n  uVar12 = 0x1000;\n  if (0xfff < uVar6) {\n    uVar12 = uVar6;\n  }\n  local_42 = fts_palloc_isra_0(__ptr + 4,__ptr + 6,uVar12);\n  if (local_42 == 0) goto LAB_001109a2;\n  __ptr_00 = *param_1;\n  if (__ptr_00 == (char *)0x0) {\n    if (param_3 != 0) {\n      __s = (char *)0x0;\nLAB_001107e8:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_001107f7;\n    }\nLAB_00110a37:\n    lVar9 = 0;\nLAB_0011090f:\n    lVar10 = fts_alloc(__ptr,\"\",0);\n    *__ptr = lVar10;\n    if (lVar10 != 0) {\n      *(long *)(lVar10 + 0x10) = lVar9;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar10 + 0x70) = 9;\n      *(undefined8 *)(lVar10 + 0x58) = 1;\n      cVar2 = setup_dir_isra_0(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar5 = diropen_isra_0(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                                 &DAT_00115d14);\n          *(int *)(__ptr + 5) = iVar5;\n          if (iVar5 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        i_ring_init(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00110988:\n    fts_lfree(lVar9);\n    free(__ptr_00);\n  }\n  else {\n    __ptr_00 = (char *)fts_alloc(__ptr,\"\",0);\n    if (__ptr_00 != (char *)0x0) {\n      *(undefined8 *)(__ptr_00 + 0x58) = 0xffffffffffffffff;\n      __s = *param_1;\n      *(undefined8 *)(__ptr_00 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_001107e8;\nLAB_001107f7:\n      if (__s == (char *)0x0) goto LAB_00110a37;\n      local_40 = 0;\n      uVar12 = 0;\n      lVar10 = 0;\n      do {\n        sVar8 = strlen(__s);\n        if (((2 < sVar8) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) && (__s[sVar8 - 1] == '/')) {\n          do {\n            if (__s[sVar8 - 2] != '/') break;\n            sVar8 = sVar8 - 1;\n          } while (sVar8 != 1);\n        }\n        lVar7 = fts_alloc(__ptr);\n        lVar9 = lVar10;\n        if (lVar7 == 0) goto LAB_00110988;\n        *(undefined8 *)(lVar7 + 0x58) = 0;\n        *(char **)(lVar7 + 8) = __ptr_00;\n        *(long *)(lVar7 + 0x30) = lVar7 + 0x108;\n        lVar9 = lVar7;\n        if ((lVar10 == 0) || (local_42 == 0)) {\n          uVar3 = fts_stat(__ptr,lVar7,0);\n          *(undefined2 *)(lVar7 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00110885;\n          *(undefined8 *)(lVar7 + 0x10) = 0;\n          if (lVar10 != 0) goto LAB_001109f8;\n        }\n        else {\n          *(undefined2 *)(lVar7 + 0x70) = 0xb;\n          fts_set_stat_required(lVar7,1);\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar7 + 0x10) = 0;\nLAB_001109f8:\n            *(long *)(local_40 + 0x10) = lVar7;\n            lVar9 = lVar10;\n          }\n          else {\nLAB_00110885:\n            *(long *)(lVar7 + 0x10) = lVar10;\n            lVar7 = local_40;\n          }\n        }\n        local_40 = lVar7;\n        uVar12 = uVar12 + 1;\n        __s = param_1[uVar12];\n        lVar10 = lVar9;\n      } while (__s != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar12)) {\n        lVar9 = fts_sort(__ptr,lVar9,uVar12);\n      }\n      goto LAB_0011090f;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_001109a2:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n", 
    "0011d2c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoul@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103d1d": "\nvoid xstrtol_error_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __memcpy_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __memcpy_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00103760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_0011bd00)();\n  return;\n}\n\n", 
    "00104970": "\n/* WARNING: Removing unreachable block (ram,0x00104983) */\n/* WARNING: Removing unreachable block (ram,0x0010498f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00112e80": "\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstat(1,__fd,__buf);\n  return iVar1;\n}\n\n", 
    "00103880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0011bd90)();\n  return pcVar1;\n}\n\n", 
    "0011d2a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoumax@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001097f0": "\nvoid ** hash_initialize(undefined8 param_1,uint *param_2,code *param_3,code *param_4,void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = raw_hasher;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = raw_comparator;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (uint *)0x0) {\n      param_2 = &default_tuning;\n    }\n    __ptr[5] = param_2;\n    cVar1 = check_tuning_isra_0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)compute_bucket_size_isra_0(param_2[2],param_1,*(undefined *)(param_2 + 4));\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "0010a1d0": "\nvoid * group_number(long param_1,size_t param_2,byte *param_3,char *param_4)\n\n{\n  byte bVar1;\n  size_t __n;\n  void *pvVar2;\n  undefined *__src;\n  size_t __n_00;\n  ulong uVar3;\n  ulong uVar4;\n  long in_FS_OFFSET;\n  undefined auStack_78 [56];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __n = strlen(param_4);\n  __memcpy_chk(auStack_78,param_1,param_2,0x29);\n  pvVar2 = (void *)(param_1 + param_2);\n  __n_00 = 0xffffffffffffffff;\n  while( true ) {\n    bVar1 = *param_3;\n    if (bVar1 == 0) {\n      if (param_2 < __n_00) {\n        __n_00 = param_2;\n      }\n      uVar4 = param_2 - __n_00;\n      __src = auStack_78 + uVar4;\n    }\n    else {\n      if (bVar1 < 0x7f) {\n        uVar3 = (ulong)bVar1;\n        if (param_2 < bVar1) {\n          uVar3 = param_2;\n        }\n        uVar4 = param_2 - uVar3;\n        __src = auStack_78 + uVar4;\n        param_2 = uVar3;\n      }\n      else {\n        uVar4 = 0;\n        __src = auStack_78;\n      }\n      param_3 = param_3 + 1;\n      __n_00 = param_2;\n    }\n    pvVar2 = memcpy((void *)((long)pvVar2 - __n_00),__src,__n_00);\n    if (uVar4 == 0) break;\n    pvVar2 = memcpy((void *)((long)pvVar2 - __n),param_4,__n);\n    param_2 = uVar4;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pvVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d5c0": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00108ed0": "\nulong is_prime(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "0010acf0": "\nundefined8 human_options(undefined8 param_1,undefined8 param_2,long *param_3)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  \n  uVar1 = humblock(param_1,param_3,param_2);\n  if (*param_3 != 0) {\n    return uVar1;\n  }\n  lVar2 = default_block_size();\n  *param_3 = lVar2;\n  return 4;\n}\n\n", 
    "0010dfc0": "\nvoid xfts_open(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n", 
    "00109ea0": "\nundefined8 hash_insert(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = hash_insert_if_absent(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106900": "\nvoid new_exclude(void)\n\n{\n  xzalloc(0x10);\n  return;\n}\n\n", 
    "0011d2b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fdopendir@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001129c0": "\nundefined i_ring_empty(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n", 
    "00103870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dup2_0011bd88)();\n  return iVar1;\n}\n\n", 
    "00110a70": "\nundefined4 fts_close(void **param_1)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  void *pvVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar3 = *(long *)((long)__ptr + 0x58);\n    while (-1 < lVar3) {\n      pvVar2 = *(void **)((long)__ptr + 0x10);\n      if (pvVar2 == (void *)0x0) {\n        pvVar2 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n      else {\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n    }\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    fts_lfree();\n  }\n  ppvVar1 = param_1 + 0xc;\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar4 = fchdir(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\n        iVar4 = *piVar6;\n        iVar5 = close(*(int *)(param_1 + 5));\n        if (iVar5 == 0) goto LAB_00110bbd;\n        if (iVar4 == 0) goto LAB_00110b78;\n        fd_ring_clear(ppvVar1);\n        if (param_1[10] == (void *)0x0) {\n          free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          free(param_1);\n          goto LAB_00110c2f;\n        }\n        goto LAB_00110b1c;\n      }\n      iVar4 = close(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\nLAB_00110b78:\n        iVar4 = *piVar6;\n        goto LAB_00110bbd;\n      }\n    }\nLAB_00110b07:\n    iVar4 = 0;\n    fd_ring_clear(ppvVar1);\n    if (param_1[10] == (void *)0x0) {\n      free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n      free(param_1);\n      return 0;\n    }\nLAB_00110b1c:\n    hash_free();\n  }\n  else {\n    if ((*(int *)((long)param_1 + 0x2c) < 0) ||\n       (iVar4 = close(*(int *)((long)param_1 + 0x2c)), iVar4 == 0)) goto LAB_00110b07;\n    piVar6 = __errno_location();\n    iVar4 = *piVar6;\nLAB_00110bbd:\n    fd_ring_clear(ppvVar1);\n    if (param_1[10] != (void *)0x0) goto LAB_00110b1c;\n  }\n  free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n  free(param_1);\n  if (iVar4 == 0) {\n    return 0;\n  }\n  piVar6 = __errno_location();\nLAB_00110c2f:\n  *piVar6 = iVar4;\n  return 0xffffffff;\n}\n\n", 
    "0010fd90": "\nvoid * fts_build(long *param_1,int param_2)\n\n{\n  long lVar1;\n  DIR *__dirp;\n  long lVar2;\n  long lVar3;\n  bool bVar4;\n  void *pvVar5;\n  undefined *puVar6;\n  char cVar7;\n  undefined2 uVar8;\n  int iVar9;\n  int *piVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__ptr;\n  uint uVar13;\n  uint uVar14;\n  undefined4 uVar15;\n  DIR *__dirp_00;\n  ulong uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  ulong local_a0;\n  void *local_98;\n  void *local_90;\n  undefined *local_70;\n  ulong local_68;\n  ulong local_60;\n  char local_4b;\n  char local_4a;\n  int local_44;\n  long local_40;\n  \n  lVar1 = *param_1;\n  __dirp = *(DIR **)(lVar1 + 0x18);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__dirp == (DIR *)0x0) {\n    uVar14 = *(uint *)(param_1 + 9);\n    uVar13 = uVar14 & 0x10;\n    if ((uVar13 != 0) && (uVar13 = 0x20000, (uVar14 & 1) != 0)) {\n      uVar13 = (uint)(*(long *)(lVar1 + 0x58) != 0) << 0x11;\n    }\n    uVar15 = 0xffffff9c;\n    if ((uVar14 & 0x204) == 0x200) {\n      uVar15 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    local_90 = (void *)opendirat(uVar15,*(undefined8 *)(lVar1 + 0x30),(uVar14 & 0x800) << 7 | uVar13\n                                 ,&local_44);\n    *(void **)(lVar1 + 0x18) = local_90;\n    if (local_90 == (void *)0x0) {\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n        goto LAB_001102a3;\n      }\n      goto LAB_0011059d;\n    }\n    if (*(short *)(lVar1 + 0x70) == 0xb) {\n      uVar8 = fts_stat(param_1,lVar1,0);\n      *(undefined2 *)(lVar1 + 0x70) = uVar8;\n    }\n    else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n      leave_dir_isra_0(*(uint *)(param_1 + 9),param_1 + 0xb,lVar1);\n      fts_stat(param_1,lVar1,0);\n      cVar7 = enter_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar1);\n      if (cVar7 == '\\0') {\n        piVar10 = __errno_location();\n        local_90 = (void *)0x0;\n        *piVar10 = 0xc;\n        goto LAB_001102a3;\n      }\n    }\n    local_68 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n    if (param_2 == 2) {\nLAB_001104c0:\n      bVar19 = false;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n    else {\n      if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar1 + 0x88) == 2)) &&\n         (iVar9 = leaf_optimization(lVar1,local_44), iVar9 != 0)) {\n        if (param_2 != 3) goto LAB_001104c0;\n        bVar4 = false;\n        bVar19 = true;\n      }\n      else {\n        bVar19 = param_2 == 3;\n        bVar4 = true;\n      }\n      if ((*(byte *)((long)param_1 + 0x49) & 2) != 0) {\n        local_44 = rpl_fcntl(local_44,0x406,3);\n      }\n      if ((-1 < local_44) && (iVar9 = fts_safe_changedir(param_1,lVar1,local_44,0), iVar9 == 0))\n      goto LAB_0010fdef;\n      if ((bVar19) && (bVar4)) {\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\n      *(ushort *)(lVar1 + 0x72) = *(ushort *)(lVar1 + 0x72) | 1;\n      closedir(*(DIR **)(lVar1 + 0x18));\n      uVar14 = *(uint *)(param_1 + 9);\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (((uVar14 & 0x200) != 0) && (-1 < local_44)) {\n        close(local_44);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      bVar19 = false;\n    }\n  }\n  else {\n    local_44 = dirfd(__dirp);\n    if (local_44 < 0) {\n      closedir(*(DIR **)(lVar1 + 0x18));\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\nLAB_0011059d:\n      local_90 = (void *)0x0;\n      goto LAB_001102a3;\n    }\n    if (param_1[8] == 0) {\n      local_68 = 100000;\n      uVar14 = *(uint *)(param_1 + 9);\n      bVar19 = true;\n    }\n    else {\n      local_68 = 0xffffffffffffffff;\nLAB_0010fdef:\n      bVar19 = true;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n  }\n  uVar18 = *(ulong *)(lVar1 + 0x48);\n  local_a0 = uVar18;\n  local_60 = uVar18 - 1;\n  if (*(char *)(*(long *)(lVar1 + 0x38) + -1 + uVar18) != '/') {\n    local_a0 = uVar18 + 1;\n    local_60 = uVar18;\n  }\n  local_70 = (undefined *)0x0;\n  if ((uVar14 & 4) != 0) {\n    local_70 = (undefined *)(local_60 + param_1[4]) + 1;\n    *(undefined *)(local_60 + param_1[4]) = 0x2f;\n  }\n  __dirp_00 = *(DIR **)(lVar1 + 0x18);\n  lVar2 = *(long *)(lVar1 + 0x58);\n  uVar18 = param_1[6] - local_a0;\n  if (__dirp_00 == (DIR *)0x0) {\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      local_90 = (void *)0x0;\n      uVar16 = 0;\n      local_4a = '\\0';\nLAB_00110384:\n      local_70 = local_70 + -1;\n      goto LAB_0011038a;\n    }\n    local_90 = (void *)0x0;\n    if ((bool)(bVar19 & __dirp == (DIR *)0x0)) {\n      local_4a = '\\0';\n      uVar16 = 0;\n      goto LAB_00110410;\n    }\nLAB_00110439:\n    if (((param_2 == 3) && (*(short *)(lVar1 + 0x70) != 7)) && (*(short *)(lVar1 + 0x70) != 4)) {\n      *(undefined2 *)(lVar1 + 0x70) = 6;\n    }\n    fts_lfree(local_90);\n    local_90 = (void *)0x0;\n  }\n  else {\n    piVar10 = __errno_location();\n    local_4a = '\\0';\n    local_4b = '\\0';\n    local_98 = (void *)0x0;\n    local_90 = (void *)0x0;\n    uVar17 = 0;\n    do {\n      while( true ) {\n        *piVar10 = 0;\n        pdVar11 = readdir(__dirp_00);\n        uVar16 = uVar17;\n        if (pdVar11 == (dirent *)0x0) {\n          if (*piVar10 != 0) {\n            *(int *)(lVar1 + 0x40) = *piVar10;\n            *(ushort *)(lVar1 + 0x70) = (-(ushort)(((ulong)__dirp | uVar17) == 0) & 0xfffd) + 7;\n          }\n          if (*(DIR **)(lVar1 + 0x18) != (DIR *)0x0) {\n            closedir(*(DIR **)(lVar1 + 0x18));\n            *(undefined8 *)(lVar1 + 0x18) = 0;\n          }\n          goto LAB_00110354;\n        }\n        if ((((*(byte *)(param_1 + 9) & 0x20) != 0) || (pdVar11->d_name[0] != '.')) ||\n           ((pdVar11->d_name[1] != '\\0' && (*(short *)(pdVar11->d_name + 1) != 0x2e)))) break;\nLAB_0010fec3:\n        __dirp_00 = *(DIR **)(lVar1 + 0x18);\n        uVar17 = uVar16;\n        if (__dirp_00 == (DIR *)0x0) goto LAB_00110354;\n      }\n      sVar12 = strlen(pdVar11->d_name);\n      __ptr = (void *)fts_alloc(param_1,pdVar11->d_name,sVar12);\n      if (__ptr == (void *)0x0) {\nLAB_00110250:\n        iVar9 = *piVar10;\n        free(__ptr);\n        fts_lfree(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = iVar9;\n        goto LAB_001102a3;\n      }\n      if (uVar18 <= sVar12) {\n        lVar3 = param_1[4];\n        cVar7 = fts_palloc_isra_0(param_1 + 4,param_1 + 6,local_60 + 2 + sVar12);\n        if (cVar7 == '\\0') goto LAB_00110250;\n        puVar6 = local_70;\n        if ((param_1[4] != lVar3) &&\n           (local_4b = cVar7, puVar6 = (undefined *)(param_1[4] + local_a0),\n           (*(byte *)(param_1 + 9) & 4) == 0)) {\n          puVar6 = local_70;\n        }\n        local_70 = puVar6;\n        uVar18 = param_1[6] - local_a0;\n      }\n      if (CARRY8(sVar12,local_a0)) {\n        free(__ptr);\n        fts_lfree(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = 0x24;\n        goto LAB_001102a3;\n      }\n      *(long *)((long)__ptr + 0x58) = lVar2 + 1;\n      lVar3 = *param_1;\n      *(size_t *)((long)__ptr + 0x48) = sVar12 + local_a0;\n      *(long *)((long)__ptr + 8) = lVar3;\n      *(__ino_t *)((long)__ptr + 0x80) = pdVar11->d_ino;\n      uVar14 = *(uint *)(param_1 + 9);\n      if ((uVar14 & 4) == 0) {\n        *(void **)((long)__ptr + 0x30) = (void *)((long)__ptr + 0x108);\n      }\n      else {\n        *(undefined8 *)((long)__ptr + 0x30) = *(undefined8 *)((long)__ptr + 0x38);\n        memmove(local_70,(void *)((long)__ptr + 0x108),*(long *)((long)__ptr + 0x60) + 1);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      if ((param_1[8] == 0) || ((uVar14 & 0x400) != 0)) {\n        uVar16 = 1;\n        if ((uVar14 & 0x18) == 0x18) {\n          uVar16 = (ulong)((pdVar11->d_type & 0xfb) == 0);\n        }\n        *(undefined2 *)((long)__ptr + 0x70) = 0xb;\n        set_stat_type_isra_0((long)__ptr + 0x90);\n        fts_set_stat_required(__ptr,uVar16 & 0xffffffff);\n      }\n      else {\n        uVar8 = fts_stat(param_1,__ptr,0);\n        *(undefined2 *)((long)__ptr + 0x70) = uVar8;\n      }\n      *(undefined8 *)((long)__ptr + 0x10) = 0;\n      pvVar5 = __ptr;\n      if (local_90 != (void *)0x0) {\n        *(void **)((long)local_98 + 0x10) = __ptr;\n        pvVar5 = local_90;\n      }\n      local_90 = pvVar5;\n      uVar16 = uVar17 + 1;\n      local_98 = __ptr;\n      if (uVar17 != 10000) {\n        if (uVar16 < local_68) goto LAB_0010fec3;\n        break;\n      }\n      if (param_1[8] == 0) {\n        local_4a = dirent_inode_sort_may_be_useful(lVar1,local_44);\n      }\n      uVar16 = 0x2711;\n      __dirp_00 = *(DIR **)(lVar1 + 0x18);\n      uVar17 = uVar16;\n    } while (__dirp_00 != (DIR *)0x0);\nLAB_00110354:\n    if (local_4b != '\\0') {\n      fts_padjust_isra_0(param_1[1],param_1[4],local_90);\n    }\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      if ((param_1[6] == local_a0) || (uVar16 == 0)) goto LAB_00110384;\nLAB_0011038a:\n      *local_70 = 0;\n    }\n    if ((__dirp == (DIR *)0x0) && (bVar19)) {\n      if ((param_2 == 1) || (uVar16 == 0)) {\nLAB_00110410:\n        if (*(long *)(lVar1 + 0x58) == 0) {\n          iVar9 = restore_initial_cwd(param_1);\n        }\n        else {\n          iVar9 = fts_safe_changedir(param_1,*(undefined8 *)(lVar1 + 8),0xffffffff,&DAT_00115d13);\n        }\n        if (iVar9 != 0) {\n          *(undefined2 *)(lVar1 + 0x70) = 7;\n          *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n          fts_lfree(local_90);\n          local_90 = (void *)0x0;\n          goto LAB_001102a3;\n        }\n        goto LAB_00110430;\n      }\n    }\n    else {\nLAB_00110430:\n      if (uVar16 == 0) goto LAB_00110439;\n    }\n    if (local_4a == '\\0') {\n      if ((param_1[8] != 0) && (uVar16 != 1)) {\n        local_90 = (void *)fts_sort(param_1,local_90,uVar16);\n      }\n    }\n    else {\n      param_1[8] = (long)fts_compare_ino;\n      local_90 = (void *)fts_sort(param_1,local_90,uVar16);\n      param_1[8] = 0;\n    }\n  }\nLAB_001102a3:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_90;\n}\n\n", 
    "00103990": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0011be18)();\n  return iVar1;\n}\n\n", 
    "00103750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getc_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getc_unlocked_0011bcf8)();\n  return iVar1;\n}\n\n", 
    "0010fb50": "\nvoid free_dir_isra_0(uint param_1,long param_2)\n\n{\n  if ((param_1 & 0x102) == 0) {\n    (*(code *)PTR_free_0011bfc8)(param_2);\n    return;\n  }\n  if (param_2 != 0) {\n    hash_free();\n    return;\n  }\n  return;\n}\n\n", 
    "00112a10": "\nundefined4 i_ring_pop(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  char cVar4;\n  \n  cVar4 = i_ring_empty();\n  if (cVar4 != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n", 
    "00112b30": "\nuint is_basic(byte param_1)\n\n{\n  return *(uint *)(is_basic_table + (ulong)(param_1 >> 5) * 4) >> (param_1 & 0x1f) & 1;\n}\n\n", 
    "0010d6f0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble timespectod(long param_1,long param_2)\n\n{\n  return (double)param_2 / _DAT_001153e8 + (double)param_1;\n}\n\n", 
    "0010d5d0": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010e050": "\nundefined8 bkm_scale(long *param_1,int param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  \n  lVar3 = -0x8000000000000000;\n  lVar2 = (long)param_2;\n  lVar1 = *param_1;\n  if ((SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n              ZEXT816(0x8000000000000000)) / SEXT816(lVar2),0) <= lVar1) &&\n     (lVar3 = 0x7fffffffffffffff,\n     lVar1 <= SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                     ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar2),0))) {\n    *param_1 = lVar2 * lVar1;\n    return 0;\n  }\n  *param_1 = lVar3;\n  return 1;\n}\n\n", 
    "001129d0": "\nundefined4 i_ring_push(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar3 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar4 = *(int *)(param_1 + 0x14) + uVar3 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar4 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar4;\n  if (*(uint *)(param_1 + 0x18) == uVar4) {\n    *(uint *)(param_1 + 0x18) = uVar3 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n", 
    "0011d2a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nwint_t towlower(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* towlower@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001116a0": "\nbyte * read_file_system_list(void)\n\n{\n  byte **ppbVar1;\n  undefined8 uVar2;\n  uint uVar3;\n  int iVar4;\n  FILE *__stream;\n  __ssize_t _Var5;\n  char *pcVar6;\n  byte **ppbVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  undefined8 *puVar10;\n  byte *pbVar11;\n  int *piVar12;\n  long lVar13;\n  long lVar14;\n  byte *pbVar15;\n  byte *pbVar16;\n  long in_FS_OFFSET;\n  undefined uVar17;\n  bool bVar18;\n  bool bVar19;\n  undefined uVar20;\n  bool bVar21;\n  bool bVar22;\n  byte bVar23;\n  byte **local_98;\n  undefined local_81;\n  uint local_80;\n  uint local_7c;\n  int local_78;\n  int local_74;\n  int local_70;\n  int local_6c;\n  int local_68;\n  int local_64;\n  int local_60;\n  int local_5c;\n  byte *local_58;\n  char *local_50;\n  size_t local_48;\n  long local_40;\n  \n  bVar23 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __stream = fopen(\"/proc/self/mountinfo\",\"r\");\n  if (__stream == (FILE *)0x0) {\n    pbVar8 = (byte *)setmntent(\"/etc/mtab\",\"r\");\n    if (pbVar8 == (byte *)0x0) goto LAB_0011195b;\n    local_98 = &local_58;\n    puVar10 = (undefined8 *)getmntent(pbVar8);\n    while (puVar10 != (undefined8 *)0x0) {\n      lVar13 = hasmntopt(puVar10,&DAT_00115df5);\n      ppbVar7 = (byte **)xmalloc(0x38);\n      pbVar11 = (byte *)xstrdup(*puVar10);\n      uVar2 = puVar10[1];\n      *ppbVar7 = pbVar11;\n      pbVar11 = (byte *)xstrdup(uVar2);\n      ppbVar7[2] = (byte *)0x0;\n      uVar2 = puVar10[2];\n      bVar22 = true;\n      ppbVar7[1] = pbVar11;\n      pbVar11 = (byte *)xstrdup(uVar2);\n      lVar14 = 7;\n      ppbVar1 = ppbVar7 + 5;\n      bVar18 = false;\n      *(byte *)ppbVar1 = *(byte *)ppbVar1 | 4;\n      bVar21 = *(byte *)ppbVar1 == 0;\n      ppbVar7[3] = pbVar11;\n      pbVar15 = pbVar11;\n      pbVar9 = (byte *)\"autofs\";\n      do {\n        if (lVar14 == 0) break;\n        lVar14 = lVar14 + -1;\n        bVar18 = *pbVar15 < *pbVar9;\n        bVar21 = *pbVar15 == *pbVar9;\n        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n      } while (bVar21);\n      bVar19 = false;\n      bVar18 = (!bVar18 && !bVar21) == bVar18;\n      if (!bVar18) {\n        lVar14 = 5;\n        pbVar15 = pbVar11;\n        pbVar9 = &DAT_00115d86;\n        do {\n          if (lVar14 == 0) break;\n          lVar14 = lVar14 + -1;\n          bVar19 = *pbVar15 < *pbVar9;\n          bVar18 = *pbVar15 == *pbVar9;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n        } while (bVar18);\n        bVar21 = false;\n        bVar18 = (!bVar19 && !bVar18) == bVar19;\n        if (!bVar18) {\n          lVar14 = 6;\n          pbVar15 = pbVar11;\n          pbVar9 = (byte *)\"subfs\";\n          do {\n            if (lVar14 == 0) break;\n            lVar14 = lVar14 + -1;\n            bVar21 = *pbVar15 < *pbVar9;\n            bVar18 = *pbVar15 == *pbVar9;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar18);\n          bVar19 = false;\n          bVar18 = (!bVar21 && !bVar18) == bVar21;\n          if (!bVar18) {\n            lVar14 = 8;\n            pbVar15 = pbVar11;\n            pbVar9 = (byte *)\"debugfs\";\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar19 = *pbVar15 < *pbVar9;\n              bVar18 = *pbVar15 == *pbVar9;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n              pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n            } while (bVar18);\n            bVar21 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar14 = 7;\n              pbVar15 = pbVar11;\n              pbVar9 = (byte *)\"devpts\";\n              do {\n                if (lVar14 == 0) break;\n                lVar14 = lVar14 + -1;\n                bVar21 = *pbVar15 < *pbVar9;\n                bVar18 = *pbVar15 == *pbVar9;\n                pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar21 && !bVar18) == bVar21;\n              if (!bVar18) {\n                lVar14 = 8;\n                pbVar15 = pbVar11;\n                pbVar9 = (byte *)\"fusectl\";\n                do {\n                  if (lVar14 == 0) break;\n                  lVar14 = lVar14 + -1;\n                  bVar19 = *pbVar15 < *pbVar9;\n                  bVar18 = *pbVar15 == *pbVar9;\n                  pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                  pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                } while (bVar18);\n                bVar21 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar14 = 7;\n                  pbVar15 = pbVar11;\n                  pbVar9 = (byte *)\"mqueue\";\n                  do {\n                    if (lVar14 == 0) break;\n                    lVar14 = lVar14 + -1;\n                    bVar21 = *pbVar15 < *pbVar9;\n                    bVar18 = *pbVar15 == *pbVar9;\n                    pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                    pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar21 && !bVar18) == bVar21;\n                  if (!bVar18) {\n                    lVar14 = 0xb;\n                    pbVar15 = pbVar11;\n                    pbVar9 = (byte *)\"rpc_pipefs\";\n                    do {\n                      if (lVar14 == 0) break;\n                      lVar14 = lVar14 + -1;\n                      bVar19 = *pbVar15 < *pbVar9;\n                      bVar18 = *pbVar15 == *pbVar9;\n                      pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                      pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                    } while (bVar18);\n                    bVar21 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar14 = 6;\n                      pbVar15 = pbVar11;\n                      pbVar9 = (byte *)\"sysfs\";\n                      do {\n                        if (lVar14 == 0) break;\n                        lVar14 = lVar14 + -1;\n                        bVar21 = *pbVar15 < *pbVar9;\n                        bVar18 = *pbVar15 == *pbVar9;\n                        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                        pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar21 && !bVar18) == bVar21;\n                      if (!bVar18) {\n                        lVar14 = 6;\n                        pbVar15 = pbVar11;\n                        pbVar9 = (byte *)\"devfs\";\n                        do {\n                          if (lVar14 == 0) break;\n                          lVar14 = lVar14 + -1;\n                          bVar19 = *pbVar15 < *pbVar9;\n                          bVar18 = *pbVar15 == *pbVar9;\n                          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                        } while (bVar18);\n                        bVar21 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar14 = 7;\n                          pbVar15 = pbVar11;\n                          pbVar9 = (byte *)\"kernfs\";\n                          do {\n                            if (lVar14 == 0) break;\n                            lVar14 = lVar14 + -1;\n                            bVar21 = *pbVar15 < *pbVar9;\n                            bVar18 = *pbVar15 == *pbVar9;\n                            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                          } while (bVar18);\n                          if (((!bVar21 && !bVar18) != bVar21) &&\n                             (iVar4 = strcmp((char *)pbVar11,\"ignore\"), iVar4 != 0)) {\n                            iVar4 = strcmp((char *)pbVar11,\"none\");\n                            bVar22 = lVar13 == 0 && iVar4 == 0;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      pbVar15 = *ppbVar7;\n      *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfe | bVar22;\n      pcVar6 = strchr((char *)pbVar15,0x3a);\n      bVar22 = true;\n      if (pcVar6 != (char *)0x0) goto LAB_00111d4f;\n      bVar18 = *pbVar15 < 0x2f;\n      bVar21 = *pbVar15 == 0x2f;\n      if (bVar21) {\n        bVar18 = pbVar15[1] < 0x2f;\n        bVar21 = pbVar15[1] == 0x2f;\n        if (!bVar21) goto LAB_00111df2;\n        lVar13 = 6;\n        pbVar9 = pbVar11;\n        pbVar16 = &DAT_00115dd9;\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar9 < *pbVar16;\n          bVar21 = *pbVar9 == *pbVar16;\n          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          pbVar16 = pbVar16 + (ulong)bVar23 * -2 + 1;\n        } while (bVar21);\n        bVar19 = false;\n        bVar21 = (!bVar18 && !bVar21) == bVar18;\n        if (!bVar21) {\n          lVar13 = 5;\n          pbVar9 = &DAT_00115ddf;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar19 = *pbVar11 < *pbVar9;\n            bVar21 = *pbVar11 == *pbVar9;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar18 = false;\n          bVar21 = (!bVar19 && !bVar21) == bVar19;\n          if (!bVar21) goto LAB_00111df2;\n        }\n      }\n      else {\nLAB_00111df2:\n        lVar13 = 7;\n        pbVar11 = (byte *)\"-hosts\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar11 < *pbVar15;\n          bVar21 = *pbVar11 == *pbVar15;\n          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        } while (bVar21);\n        bVar22 = (!bVar18 && !bVar21) == bVar18;\n      }\nLAB_00111d4f:\n      *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfd | bVar22 * '\\x02';\n      pbVar11 = (byte *)dev_from_mount_options_isra_0();\n      ppbVar7[4] = pbVar11;\n      *local_98 = (byte *)ppbVar7;\n      local_98 = ppbVar7 + 6;\n      puVar10 = (undefined8 *)getmntent(pbVar8);\n    }\n    iVar4 = endmntent(pbVar8);\n    if (iVar4 != 0) goto LAB_0011194b;\nLAB_00111d9a:\n    piVar12 = __errno_location();\n    iVar4 = *piVar12;\n  }\n  else {\n    local_98 = &local_58;\n    local_50 = (char *)0x0;\n    local_48 = 0;\n    while (_Var5 = getline(&local_50,&local_48,__stream), _Var5 != -1) {\n      uVar3 = __isoc99_sscanf(local_50,\"%*u %*u %u:%u %n%*s%n %n%*s%n%c\",&local_80,&local_7c,\n                              &local_60,&local_5c,&local_78,&local_74,&local_81);\n      if ((((uVar3 & 0xfffffffb) == 3) &&\n          (pcVar6 = strstr(local_50 + local_74,\" - \"), pcVar6 != (char *)0x0)) &&\n         (uVar3 = __isoc99_sscanf(pcVar6,\" - %n%*s%n %n%*s%n %c\",&local_70,&local_6c,&local_68,\n                                  &local_64,&local_81), (uVar3 & 0xfffffffb) == 1)) {\n        local_50[local_5c] = '\\0';\n        local_50[local_74] = '\\0';\n        pcVar6[local_6c] = '\\0';\n        pcVar6[local_64] = '\\0';\n        unescape_tab(pcVar6 + local_68);\n        unescape_tab(local_50 + local_78);\n        unescape_tab(local_50 + local_60);\n        ppbVar7 = (byte **)xmalloc(0x38);\n        pbVar8 = (byte *)xstrdup(pcVar6 + local_68);\n        *ppbVar7 = pbVar8;\n        pbVar8 = (byte *)xstrdup(local_50 + local_78);\n        ppbVar7[1] = pbVar8;\n        pbVar8 = (byte *)xstrdup(local_50 + local_60);\n        ppbVar7[2] = pbVar8;\n        bVar22 = true;\n        pbVar8 = (byte *)xstrdup(pcVar6 + local_70);\n        ppbVar1 = ppbVar7 + 5;\n        uVar17 = 0;\n        *(byte *)ppbVar1 = *(byte *)ppbVar1 | 4;\n        uVar20 = *(char *)ppbVar1 == '\\0';\n        ppbVar7[3] = pbVar8;\n        pbVar9 = (byte *)gnu_dev_makedev(local_80,local_7c);\n        lVar13 = 7;\n        pbVar11 = pbVar8;\n        pbVar15 = (byte *)\"autofs\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          uVar17 = *pbVar11 < *pbVar15;\n          uVar20 = *pbVar11 == *pbVar15;\n          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        } while ((bool)uVar20);\n        ppbVar7[4] = pbVar9;\n        bVar18 = false;\n        bVar21 = (!(bool)uVar17 && !(bool)uVar20) == (bool)uVar17;\n        if (!bVar21) {\n          lVar13 = 5;\n          pbVar11 = pbVar8;\n          pbVar15 = &DAT_00115d86;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar11 < *pbVar15;\n            bVar21 = *pbVar11 == *pbVar15;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar19 = false;\n          bVar18 = (!bVar18 && !bVar21) == bVar18;\n          if (!bVar18) {\n            lVar13 = 6;\n            pbVar11 = pbVar8;\n            pbVar15 = (byte *)\"subfs\";\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar11 < *pbVar15;\n              bVar18 = *pbVar11 == *pbVar15;\n              pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            } while (bVar18);\n            bVar21 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar13 = 8;\n              pbVar11 = pbVar8;\n              pbVar15 = (byte *)\"debugfs\";\n              do {\n                if (lVar13 == 0) break;\n                lVar13 = lVar13 + -1;\n                bVar21 = *pbVar11 < *pbVar15;\n                bVar18 = *pbVar11 == *pbVar15;\n                pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar21 && !bVar18) == bVar21;\n              if (!bVar18) {\n                lVar13 = 7;\n                pbVar11 = pbVar8;\n                pbVar15 = (byte *)\"devpts\";\n                do {\n                  if (lVar13 == 0) break;\n                  lVar13 = lVar13 + -1;\n                  bVar19 = *pbVar11 < *pbVar15;\n                  bVar18 = *pbVar11 == *pbVar15;\n                  pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                  pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                } while (bVar18);\n                bVar21 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar13 = 8;\n                  pbVar11 = pbVar8;\n                  pbVar15 = (byte *)\"fusectl\";\n                  do {\n                    if (lVar13 == 0) break;\n                    lVar13 = lVar13 + -1;\n                    bVar21 = *pbVar11 < *pbVar15;\n                    bVar18 = *pbVar11 == *pbVar15;\n                    pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                    pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar21 && !bVar18) == bVar21;\n                  if (!bVar18) {\n                    lVar13 = 7;\n                    pbVar11 = pbVar8;\n                    pbVar15 = (byte *)\"mqueue\";\n                    do {\n                      if (lVar13 == 0) break;\n                      lVar13 = lVar13 + -1;\n                      bVar19 = *pbVar11 < *pbVar15;\n                      bVar18 = *pbVar11 == *pbVar15;\n                      pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                      pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                    } while (bVar18);\n                    bVar21 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar13 = 0xb;\n                      pbVar11 = pbVar8;\n                      pbVar15 = (byte *)\"rpc_pipefs\";\n                      do {\n                        if (lVar13 == 0) break;\n                        lVar13 = lVar13 + -1;\n                        bVar21 = *pbVar11 < *pbVar15;\n                        bVar18 = *pbVar11 == *pbVar15;\n                        pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar21 && !bVar18) == bVar21;\n                      if (!bVar18) {\n                        lVar13 = 6;\n                        pbVar11 = pbVar8;\n                        pbVar15 = (byte *)\"sysfs\";\n                        do {\n                          if (lVar13 == 0) break;\n                          lVar13 = lVar13 + -1;\n                          bVar19 = *pbVar11 < *pbVar15;\n                          bVar18 = *pbVar11 == *pbVar15;\n                          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                        } while (bVar18);\n                        bVar21 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar13 = 6;\n                          pbVar11 = pbVar8;\n                          pbVar15 = (byte *)\"devfs\";\n                          do {\n                            if (lVar13 == 0) break;\n                            lVar13 = lVar13 + -1;\n                            bVar21 = *pbVar11 < *pbVar15;\n                            bVar18 = *pbVar11 == *pbVar15;\n                            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                          } while (bVar18);\n                          bVar19 = false;\n                          bVar18 = (!bVar21 && !bVar18) == bVar21;\n                          if (!bVar18) {\n                            lVar13 = 7;\n                            pbVar11 = pbVar8;\n                            pbVar15 = (byte *)\"kernfs\";\n                            do {\n                              if (lVar13 == 0) break;\n                              lVar13 = lVar13 + -1;\n                              bVar19 = *pbVar11 < *pbVar15;\n                              bVar18 = *pbVar11 == *pbVar15;\n                              pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                            } while (bVar18);\n                            if (((!bVar19 && !bVar18) != bVar19) &&\n                               (iVar4 = strcmp((char *)pbVar8,\"ignore\"), iVar4 != 0)) {\n                              iVar4 = strcmp((char *)pbVar8,\"none\");\n                              bVar22 = iVar4 == 0;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        pbVar11 = *ppbVar7;\n        *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfe | bVar22;\n        pcVar6 = strchr((char *)pbVar11,0x3a);\n        bVar22 = true;\n        if (pcVar6 != (char *)0x0) goto LAB_001118f9;\n        bVar18 = *pbVar11 < 0x2f;\n        bVar21 = *pbVar11 == 0x2f;\n        if (bVar21) {\n          bVar18 = pbVar11[1] < 0x2f;\n          bVar21 = pbVar11[1] == 0x2f;\n          if (!bVar21) goto LAB_00111ad9;\n          lVar13 = 6;\n          pbVar15 = pbVar8;\n          pbVar9 = &DAT_00115dd9;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar15 < *pbVar9;\n            bVar21 = *pbVar15 == *pbVar9;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar19 = false;\n          bVar21 = (!bVar18 && !bVar21) == bVar18;\n          if (!bVar21) {\n            lVar13 = 5;\n            pbVar15 = &DAT_00115ddf;\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar8 < *pbVar15;\n              bVar21 = *pbVar8 == *pbVar15;\n              pbVar8 = pbVar8 + (ulong)bVar23 * -2 + 1;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            } while (bVar21);\n            bVar18 = false;\n            bVar21 = (!bVar19 && !bVar21) == bVar19;\n            if (!bVar21) goto LAB_00111ad9;\n          }\n        }\n        else {\nLAB_00111ad9:\n          lVar13 = 7;\n          pbVar8 = (byte *)\"-hosts\";\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar8 < *pbVar11;\n            bVar21 = *pbVar8 == *pbVar11;\n            pbVar8 = pbVar8 + (ulong)bVar23 * -2 + 1;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar22 = (!bVar18 && !bVar21) == bVar18;\n        }\nLAB_001118f9:\n        *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfd | bVar22 * '\\x02';\n        *local_98 = (byte *)ppbVar7;\n        local_98 = ppbVar7 + 6;\n      }\n    }\n    free(local_50);\n    iVar4 = ferror_unlocked(__stream);\n    if (iVar4 == 0) {\n      iVar4 = rpl_fclose(__stream);\n      if (iVar4 != -1) {\nLAB_0011194b:\n        *local_98 = (byte *)0x0;\n        pbVar8 = local_58;\n        goto LAB_0011195b;\n      }\n      goto LAB_00111d9a;\n    }\n    piVar12 = __errno_location();\n    iVar4 = *piVar12;\n    rpl_fclose(__stream);\n    *piVar12 = iVar4;\n  }\n  *local_98 = (byte *)0x0;\n  while (local_58 != (byte *)0x0) {\n    pbVar8 = *(byte **)(local_58 + 0x30);\n    free_mount_entry(local_58);\n    local_58 = pbVar8;\n  }\n  *piVar12 = iVar4;\n  pbVar8 = (byte *)0x0;\nLAB_0011195b:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pbVar8;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105920": "\nvoid emit_blocksize_note_constprop_0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\n                    \"\\nDisplay values are in units of the first available SIZE from --block-size,\\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\\n\"\n                    ,5);\n  __printf_chk(1,uVar1,&DAT_001142a2);\n  return;\n}\n\n", 
    "00105960": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = program_name;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n\",5\n                     );\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Summarize disk usage of the set of FILEs, recursively for directories.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_mandatory_arg_note();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -0, --null            end each output line with NUL, not newline\\n  -a, --all             write counts for all files, not just directories\\n      --apparent-size   print apparent sizes, rather than disk usage; although\\n                          the apparent size is usually smaller, it may be\\n                          larger due to holes in (\\'sparse\\') files, internal\\n                          fragmentation, indirect blocks, and the like\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\\n                           \\'-BM\\' prints sizes in units of 1,048,576 bytes;\\n                           see SIZE format below\\n  -b, --bytes           equivalent to \\'--apparent-size --block-size=1\\'\\n  -c, --total           produce a grand total\\n  -D, --dereference-args  dereference only symlinks that are listed on the\\n                          command line\\n  -d, --max-depth=N     print the total for a directory (or file, with --all)\\n                          only if it is N or fewer levels below the command\\n                          line argument;  --max-depth=0 is the same as\\n                          --summarize\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --files0-from=F   summarize disk usage of the\\n                          NUL-terminated file names specified in file F;\\n                          if F is -, then read names from standard input\\n  -H                    equivalent to --dereference-args (-D)\\n  -h, --human-readable  print sizes in human readable format (e.g., 1K 234M 2G)\\n      --inodes          list inode usage information instead of block usage\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -k                    like --block-size=1K\\n  -L, --dereference     dereference all symbolic links\\n  -l, --count-links     count sizes many times if hard linked\\n  -m                    like --block-size=1M\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -P, --no-dereference  don\\'t follow any symbolic links (this is the default)\\n  -S, --separate-dirs   for directories do not include size of subdirectories\\n      --si              like -h, but use powers of 1000 not 1024\\n  -s, --summarize       display only a total for each argument\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -t, --threshold=SIZE  exclude entries smaller than SIZE if positive,\\n                          or entries greater than SIZE if negative\\n      --time            show time of the last modification of any file in the\\n                          directory, or any of its subdirectories\\n      --time=WORD       show time as WORD instead of modification time:\\n                          atime, access, use, ctime or status\\n      --time-style=STYLE  show times using STYLE, which can be:\\n                            full-iso, long-iso, iso, or +FORMAT;\\n                            FORMAT is interpreted like in \\'date\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -X, --exclude-from=FILE  exclude files that match any pattern in FILE\\n      --exclude=PATTERN    exclude files that match PATTERN\\n  -x, --one-file-system    skip directories on different file systems\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_blocksize_note_constprop_0();\n    emit_size_note();\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00103780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n  lconv *plVar1;\n  \n  plVar1 = (lconv *)(*(code *)PTR_localeconv_0011bd10)();\n  return plVar1;\n}\n\n", 
    "00112e60": "\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __xstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00103d09": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d04": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001096b0": "\nvoid hash_get_entries(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "0010a2d0": "\nint default_block_size(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = getenv((char *)&UINT_00114b68);\n  return (-(uint)(pcVar1 == (char *)0x0) & 0x200) + 0x200;\n}\n\n", 
    "0010b4e0": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00112580": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00111370": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n", 
    "0010d290": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "001129a0": "\nvoid i_ring_init(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n", 
    "0010adf0": "\nlong ino_map_insert(undefined8 *param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar3 = (long *)param_1[2];\n  if (plVar3 == (long *)0x0) {\n    plVar3 = (long *)malloc(0x10);\n    param_1[2] = plVar3;\n    if (plVar3 == (long *)0x0) {\n      return -1;\n    }\n  }\n  else if (*plVar3 == param_2) {\n    return plVar3[1];\n  }\n  *plVar3 = param_2;\n  plVar2 = (long *)hash_insert(*param_1,plVar3);\n  if (plVar2 == (long *)0x0) {\n    return -1;\n  }\n  if (plVar3 == plVar2) {\n    lVar1 = param_1[1];\n    param_1[2] = 0;\n    param_1[1] = lVar1 + 1;\n    plVar3[1] = lVar1;\n    return lVar1;\n  }\n  lVar1 = plVar2[1];\n  plVar3[1] = lVar1;\n  return lVar1;\n}\n\n", 
    "0010db90": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswcntrl_0011bd08)();\n  return iVar1;\n}\n\n", 
    "0011d090": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112c30": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint rpl_fcntl(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00112cb4;\n  }\n  if (have_dupfd_cloexec_3397 < 0) {\n    iVar2 = rpl_fcntl(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, have_dupfd_cloexec_3397 != -1)) goto LAB_00112cb4;\nLAB_00112cf1:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00112cb4;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = rpl_fcntl(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00112cb4;\n        have_dupfd_cloexec_3397 = -1;\n        __fd = iVar2;\n        goto LAB_00112cf1;\n      }\n    }\n    have_dupfd_cloexec_3397 = 1;\n  }\nLAB_00112cb4:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_0011bd98)();\n  return iVar1;\n}\n\n", 
    "0011d098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f8b0": "\nint fts_safe_changedir(long param_1,long param_2,int param_3,char *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  byte bVar7;\n  uint uVar8;\n  long in_FS_OFFSET;\n  stat local_d8;\n  long local_40;\n  \n  uVar8 = *(uint *)(param_1 + 0x48);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar4 = param_3;\n  if ((((param_4 == (char *)0x0) || (cVar1 = *param_4, cVar1 != '.')) || (param_4[1] != '.')) ||\n     (param_4[2] != '\\0')) {\n    if ((uVar8 & 4) == 0) {\n      if (param_3 < 0) {\n        bVar2 = 0;\nLAB_0010f9c7:\n        iVar4 = diropen_isra_0(*(undefined4 *)(param_1 + 0x2c),uVar8,param_4);\n        if (iVar4 < 0) {\n          iVar3 = -1;\n          goto LAB_0010f950;\n        }\n        uVar8 = *(uint *)(param_1 + 0x48);\n      }\n      else {\n        bVar2 = 0;\n      }\n      iVar3 = param_3;\n      if ((uVar8 & 2) == 0) {\n        bVar7 = bVar2;\n        if (param_4 != (char *)0x0) {\n          cVar1 = *param_4;\nLAB_0010f921:\n          bVar2 = bVar7;\n          bVar7 = bVar2;\n          if (((cVar1 == '.') && (param_4[1] == '.')) && (iVar3 = param_3, param_4[2] == '\\0'))\n          goto LAB_0010fa00;\n        }\nLAB_0010f92a:\n        if ((uVar8 & 0x200) != 0) {\n          iVar3 = 0;\n          cwd_advance_fd(param_1,iVar4,bVar7 ^ 1);\n          goto LAB_0010f950;\n        }\n        iVar3 = fchdir(iVar4);\n      }\n      else {\nLAB_0010fa00:\n        iVar5 = fstat(iVar4,&local_d8);\n        param_3 = iVar3;\n        if (iVar5 == 0) {\n          if ((*(__dev_t *)(param_2 + 0x78) == local_d8.st_dev) &&\n             (*(__ino_t *)(param_2 + 0x80) == local_d8.st_ino)) {\n            uVar8 = *(uint *)(param_1 + 0x48);\n            bVar7 = bVar2;\n            goto LAB_0010f92a;\n          }\n          piVar6 = __errno_location();\n          *piVar6 = 2;\n        }\n        iVar3 = -1;\n      }\n      if (param_3 < 0) {\n        piVar6 = __errno_location();\n        iVar5 = *piVar6;\n        close(iVar4);\n        *piVar6 = iVar5;\n      }\n      goto LAB_0010f950;\n    }\n  }\n  else if ((uVar8 & 4) == 0) {\n    if (param_3 < 0) {\n      if ((uVar8 & 0x200) == 0) {\nLAB_0010fad8:\n        bVar2 = 1;\n        goto LAB_0010f9c7;\n      }\n      bVar2 = i_ring_empty(param_1 + 0x60);\n      if (bVar2 != 0) goto LAB_0010f9c7;\n      iVar3 = i_ring_pop(param_1 + 0x60);\n      uVar8 = *(uint *)(param_1 + 0x48);\n      if (iVar3 < 0) goto LAB_0010fad8;\n      bVar2 = 1;\n      param_3 = iVar3;\n      iVar4 = iVar3;\n      bVar7 = 1;\n      if ((uVar8 & 2) != 0) goto LAB_0010fa00;\n      goto LAB_0010f92a;\n    }\n    bVar2 = 1;\n    iVar3 = param_3;\n    bVar7 = 1;\n    if ((uVar8 & 2) == 0) goto LAB_0010f921;\n    goto LAB_0010fa00;\n  }\n  if (((uVar8 & 0x200) == 0) || (param_3 < 0)) {\n    iVar3 = 0;\n  }\n  else {\n    iVar3 = 0;\n    close(param_3);\n  }\nLAB_0010f950:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "0010d6d0": "\nulong timespec_sign(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = 0xffffffff;\n  if (-1 < (long)param_1) {\n    uVar1 = (ulong)((param_1 | param_2) != 0);\n  }\n  return uVar1;\n}\n\n", 
    "00109060": "\nulong compute_bucket_size_isra_0(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if ((float)UINT_00114b58 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < (float)UINT_00114b5c) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - (float)UINT_00114b5c) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = next_prime(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "0010f360": "\nvoid fd_ring_clear(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = i_ring_empty(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = i_ring_pop(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n", 
    "00108fe0": "\nundefined8 check_tuning_isra_0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&default_tuning) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if (((((float)UINT_00114b44 < fVar1) && (fVar1 < (float)UINT_00114b48)) &&\n      ((float)UINT_00114b4c < pfVar2[3])) && ((float)UINT_00114b50 <= *pfVar2)) {\n    fVar3 = *pfVar2 + (float)UINT_00114b44;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= (float)UINT_00114b54)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&default_tuning;\n  return 0;\n}\n\n", 
    "0010cfe0": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00106910": "\nvoid free_exclude(undefined8 *param_1)\n\n{\n  undefined8 *puVar1;\n  undefined8 *puVar2;\n  \n  puVar2 = (undefined8 *)*param_1;\n  while (puVar2 != (undefined8 *)0x0) {\n    puVar1 = (undefined8 *)*puVar2;\n    free_exclude_segment(puVar2);\n    puVar2 = puVar1;\n  }\n  puVar2 = (undefined8 *)param_1[1];\n  while (puVar2 != (undefined8 *)0x0) {\n    puVar1 = (undefined8 *)*puVar2;\n    free((void *)puVar2[1]);\n    free(puVar2);\n    puVar2 = puVar1;\n  }\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "00103960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0011be00)();\n  return iVar1;\n}\n\n", 
    "00112e40": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "0011d080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fcntl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110c60": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  long lVar10;\n  void *pvVar11;\n  void *pvVar12;\n  uint uVar13;\n  \n  pvVar11 = *param_1;\n  if (pvVar11 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar13 = *(uint *)(param_1 + 9);\n  if ((uVar13 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar11 + 0x74);\n  *(undefined2 *)((long)pvVar11 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = fts_stat(param_1,pvVar11,0);\n    *(undefined2 *)((long)pvVar11 + 0x70) = uVar6;\n    return pvVar11;\n  }\n  sVar2 = *(short *)((long)pvVar11 + 0x70);\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_00110dcf;\n      goto LAB_00110cf0;\n    }\n    sVar7 = fts_stat(param_1,pvVar11,1);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar11;\n      if (sVar7 != 0xb) {\n        return pvVar11;\n      }\n      goto LAB_00110f99;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                             &DAT_00115d14);\n      *(int *)((long)pvVar11 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n        *(int *)((long)pvVar11 + 0x40) = iVar8;\n        *param_1 = pvVar11;\n        return pvVar11;\n      }\n      *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\nLAB_00110eea:\n      *param_1 = pvVar11;\n      if (sVar7 == 0xb) goto LAB_00110f99;\n      goto LAB_00110ef8;\n    }\n    *param_1 = pvVar11;\nLAB_00110f02:\n    if (*(long *)((long)pvVar11 + 0x58) != 0) goto LAB_00110f13;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_00110e6a;\nLAB_00110dcf:\n      if (((uVar13 & 0x40) != 0) && (*(void **)((long)pvVar11 + 0x78) != param_1[3])) {\nLAB_00110e6a:\n        if ((*(byte *)((long)pvVar11 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar11 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          fts_lfree();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar11 + 0x70) = 6;\n        leave_dir_isra_0(uVar3,param_1 + 0xb,pvVar11);\n        return pvVar11;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_00110fe8:\n        pvVar12 = (void *)fts_build(param_1,3);\n        param_1[1] = pvVar12;\n        if (pvVar12 == (void *)0x0) {\n          uVar13 = *(uint *)(param_1 + 9);\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar11 + 0x40) != 0) && (*(short *)((long)pvVar11 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n          }\n          leave_dir_isra_0(uVar13,param_1 + 0xb,pvVar11);\n          return pvVar11;\n        }\n      }\n      else {\n        if ((uVar13 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar13 & 0xffffdfff;\n          fts_lfree();\n          param_1[1] = (void *)0x0;\n          goto LAB_00110fe8;\n        }\n        iVar8 = fts_safe_changedir(param_1,pvVar11,0xffffffff,*(undefined8 *)((long)pvVar11 + 0x30))\n        ;\n        if (iVar8 == 0) {\n          pvVar12 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 1;\n          *(int *)((long)pvVar11 + 0x40) = iVar8;\n          pvVar12 = param_1[1];\n          for (pvVar11 = pvVar12; pvVar11 != (void *)0x0; pvVar11 = *(void **)((long)pvVar11 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar11 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar11 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n    }\n    else {\nLAB_00110cf0:\n      do {\n        pvVar12 = *(void **)((long)pvVar11 + 0x10);\n        if (pvVar12 == (void *)0x0) {\n          pvVar12 = *(void **)((long)pvVar11 + 8);\n          if (*(long *)((long)pvVar12 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar12 + 0x48);\n            *param_1 = pvVar12;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar12 = (void *)fts_build(param_1,3);\n            if (pvVar12 != (void *)0x0) {\n              free(pvVar11);\n              goto LAB_00110f4a;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar12 = *(void **)((long)pvVar11 + 8);\n          }\n          *param_1 = pvVar12;\n          free(pvVar11);\n          if (*(long *)((long)pvVar12 + 0x58) == -1) {\n            free(pvVar12);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar12 + 0x70) == 0xb) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          *(undefined *)((long)param_1[4] + *(long *)((long)pvVar12 + 0x48)) = 0;\n          if (*(long *)((long)pvVar12 + 0x58) == 0) {\n            iVar8 = restore_initial_cwd(param_1);\n            if (iVar8 == 0) goto LAB_00110d5b;\nLAB_0011110f:\n            piVar9 = __errno_location();\n            uVar13 = *(uint *)(param_1 + 9) | 0x4000;\n            sVar7 = *(short *)((long)pvVar12 + 0x70);\n            *(int *)((long)pvVar12 + 0x40) = *piVar9;\n            *(uint *)(param_1 + 9) = uVar13;\n            if (sVar7 == 2) {\n              return (void *)0x0;\n            }\n          }\n          else {\n            if ((*(ushort *)((long)pvVar12 + 0x72) & 2) == 0) {\n              if (((*(ushort *)((long)pvVar12 + 0x72) & 1) == 0) &&\n                 (iVar8 = fts_safe_changedir(param_1,*(undefined8 *)((long)pvVar12 + 8),0xffffffff,\n                                             &DAT_00115d13), iVar8 != 0)) goto LAB_0011110f;\nLAB_00110d5b:\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            else {\n              iVar8 = *(int *)((long)pvVar12 + 0x44);\n              if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                  iVar8 = fchdir(iVar8);\n                  if (iVar8 != 0) {\n                    piVar9 = __errno_location();\n                    *(int *)((long)pvVar12 + 0x40) = *piVar9;\n                    *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                  }\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n                else {\n                  cwd_advance_fd(param_1,iVar8,1);\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n              }\n              close(iVar8);\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            if (*(short *)((long)pvVar12 + 0x70) == 2) goto LAB_00110d8b;\n          }\n          if (*(int *)((long)pvVar12 + 0x40) == 0) {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 6;\n            leave_dir_isra_0(uVar13,param_1 + 0xb,pvVar12);\n            uVar13 = *(uint *)(param_1 + 9);\n          }\n          else {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n          }\nLAB_00110d8b:\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          return pvVar12;\n        }\n        *param_1 = pvVar12;\n        free(pvVar11);\n        pvVar11 = pvVar12;\n        if (*(long *)((long)pvVar12 + 0x58) == 0) {\n          iVar8 = restore_initial_cwd(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          fts_load_isra_0(param_1 + 4,pvVar12);\n          setup_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar12 + 0x70);\n          goto LAB_00110eea;\n        }\n      } while (*(short *)((long)pvVar12 + 0x74) == 4);\n      if (*(short *)((long)pvVar12 + 0x74) == 2) {\n        sVar7 = fts_stat(param_1,pvVar12,1);\n        *(short *)((long)pvVar12 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                                 &DAT_00115d14);\n          *(int *)((long)pvVar12 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n            *(int *)((long)pvVar12 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar12 + 0x72) = *(ushort *)((long)pvVar12 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar12 + 0x74) = 3;\n      }\n    }\nLAB_00110f4a:\n    lVar4 = *(long *)(*(long *)((long)pvVar12 + 8) + 0x48);\n    lVar10 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar12 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar10 = lVar4;\n    }\n    pvVar11 = param_1[4];\n    *(undefined *)(lVar10 + (long)pvVar11) = 0x2f;\n    memmove((undefined *)(lVar10 + (long)pvVar11) + 1,(void *)((long)pvVar12 + 0x108),\n            *(long *)((long)pvVar12 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar12 + 0x70);\n    *param_1 = pvVar12;\n    pvVar11 = pvVar12;\n    if (sVar7 != 0xb) {\nLAB_00110ef8:\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_00110f02;\n    }\nLAB_00110f99:\n    if (*(long *)((long)pvVar11 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar11 + 0xa8) != 1) {\n        pvVar11 = (void *)fts_read_cold();\n        return pvVar11;\n      }\n      return pvVar11;\n    }\n    lVar4 = *(long *)((long)pvVar11 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = leaf_optimization(lVar4,*(undefined4 *)((long)param_1 + 0x2c)), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\n      goto LAB_00110ef8;\n    }\n    sVar7 = fts_stat(param_1,pvVar11,0);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar11 + 0x90) & 0xf000) != 0x4000) goto LAB_00110ef8;\n    if (*(long *)((long)pvVar11 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_00110f13;\n    }\n    if (sVar7 != 1) {\n      return pvVar11;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar11 + 0x78);\nLAB_00110f13:\n  cVar5 = enter_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar11);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar11 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar11;\n}\n\n", 
    "00103af0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_0011bec8)();\n  return iVar1;\n}\n\n", 
    "0011d088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setenv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109390": "\nundefined8 hash_get_n_entries(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "0010e480": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "00112320": "\ntm * localtime_rz(long param_1,time_t *param_2,tm *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  \n  if (param_1 == 0) {\n    ptVar3 = gmtime_r(param_2,param_3);\n    return ptVar3;\n  }\n  lVar2 = set_tz();\n  if (lVar2 != 0) {\n    ptVar3 = localtime_r(param_2,param_3);\n    if ((ptVar3 != (tm *)0x0) && (cVar1 = save_abbr(param_1,param_3), cVar1 != '\\0')) {\n      cVar1 = revert_tz(lVar2);\n      if (cVar1 == '\\0') {\n        return (tm *)0x0;\n      }\n      return param_3;\n    }\n    revert_tz(lVar2);\n  }\n  return (tm *)0x0;\n}\n\n", 
    "0010d390": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00112680": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00108fb0": "\nlong safe_hasher(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_0011bd68)();\n  return iVar1;\n}\n\n", 
    "00103950": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0011bdf8)();\n  return iVar1;\n}\n\n", 
    "00103710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_localtime_r_0011bcd8)();\n  return ptVar1;\n}\n\n", 
    "0010db70": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "0011d070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswcntrl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103ae0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0011bec0)();\n  return;\n}\n\n", 
    "001097c0": "\nvoid hash_reset_tuning(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "0011d078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* localeconv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dirfd@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f580": "\nundefined leaf_optimization(void)\n\n{\n  long lVar1;\n  undefined uVar2;\n  \n  lVar1 = filesystem_type();\n  if (lVar1 == 0x52654973) {\n    uVar2 = 2;\n  }\n  else if (lVar1 < 0x52654974) {\n    uVar2 = 0;\n    if ((lVar1 != 0x6969) && (lVar1 != 0x9fa0)) {\n      return lVar1 != 0;\n    }\n  }\n  else {\n    uVar2 = 2;\n    if ((lVar1 != 0x58465342) && (uVar2 = 0, lVar1 != 0xff534d42)) {\n      uVar2 = lVar1 != 0x5346414f;\n    }\n  }\n  return uVar2;\n}\n\n", 
    "0010d6a0": "\nint timespec_cmp(long param_1,int param_2,long param_3,int param_4)\n\n{\n  int iVar1;\n  \n  if (param_3 <= param_1) {\n    iVar1 = 1;\n    if (param_1 <= param_3) {\n      iVar1 = param_2 - param_4;\n    }\n    return iVar1;\n  }\n  return -1;\n}\n\n", 
    "0010d040": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00112210": "\nlong set_tz(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s2;\n  long lVar3;\n  int *piVar4;\n  long lVar5;\n  \n  __s2 = (char *)getenv_TZ();\n  if (__s2 == (char *)0x0) {\n    if (*(char *)(param_1 + 8) == '\\0') {\n      return 1;\n    }\n  }\n  else if (*(char *)(param_1 + 8) != '\\0') {\n    iVar2 = strcmp((char *)(param_1 + 9),__s2);\n    if (iVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar3 = tzalloc(__s2);\n  lVar5 = lVar3;\n  if (lVar3 != 0) {\n    cVar1 = change_env(param_1);\n    if (cVar1 == '\\0') {\n      piVar4 = __errno_location();\n      lVar5 = 0;\n      iVar2 = *piVar4;\n      tzfree(lVar3);\n      *piVar4 = iVar2;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010d280": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00103940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_0011bdf0)();\n  return pvVar1;\n}\n\n", 
    "0010e010": "\nbool cycle_warning_required(long param_1,long param_2)\n\n{\n  uint uVar1;\n  bool bVar2;\n  \n  bVar2 = true;\n  uVar1 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar1 != 0x10) && (bVar2 = false, uVar1 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar2;\n}\n\n", 
    "00103700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0011bcd0)();\n  return iVar1;\n}\n\n", 
    "00103820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_0011bd60)();\n  return iVar1;\n}\n\n", 
    "00103980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0011be10)();\n  return pvVar1;\n}\n\n", 
    "00103740": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0011bcf0)();\n  return;\n}\n\n", 
    "00108c80": "\nundefined8 protect_fd(int param_1)\n\n{\n  int __fd;\n  int *piVar1;\n  undefined8 uVar2;\n  \n  uVar2 = 1;\n  __fd = open((char *)&UINT_00114aac,0);\n  if ((param_1 != __fd) && (uVar2 = 0, -1 < __fd)) {\n    close(__fd);\n    piVar1 = __errno_location();\n    *piVar1 = 9;\n    return 0;\n  }\n  return uVar2;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0011bd80)();\n  return sVar1;\n}\n\n", 
    "0010dd80": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "0010ef90": "\nvoid fts_set_stat_required(long param_1,char param_2)\n\n{\n  if (*(short *)(param_1 + 0x70) == 0xb) {\n    *(ulong *)(param_1 + 0xa8) = (ulong)(param_2 != '\\0') + 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00111f70": "\nvoid setenv_TZ(char *param_1)\n\n{\n  if (param_1 != (char *)0x0) {\n    setenv(\"TZ\",param_1,1);\n    return;\n  }\n  unsetenv(\"TZ\");\n  return;\n}\n\n", 
    "0011d060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getc_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getc_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104ae0": "\nvoid emit_mandatory_arg_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00112530": "\nuint rotl8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "0011d188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* qsort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109370": "\nundefined8 hash_get_n_buckets(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "00112540": "\nuint rotr8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "0010e9a0": "\nuint xstrtoumax(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0010ea9b;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010eadc:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_0010eb30_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_0010ea62;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_0010eb06_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_0010eb06_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = bkm_scale(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_0010eb30_caseD_43;\n        case 0x45:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = bkm_scale(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = bkm_scale(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_0010ea62;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010eadc;\n      }\n    }\n  }\nLAB_0010ea9b:\n  uVar10 = 4;\nLAB_0010ea62:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00112780": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010f670": "\nuint restore_initial_cwd(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      cwd_advance_fd(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  fd_ring_clear(param_1 + 0x60);\n  return uVar2;\n}\n\n", 
    "00103730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_0011bce8)();\n  return pcVar1;\n}\n\n", 
    "00104940": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0011bfe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010f310": "\nvoid fts_lfree(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n", 
    "00103850": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0011bd78)();\n  return;\n}\n\n", 
    "0010cfa0": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00103970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0011be08)();\n  return iVar1;\n}\n\n", 
    "0011d290": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010ba90": "\nuint * gettext_quote(uint *param_1,int param_2)\n\n{\n  int iVar1;\n  uint *puVar2;\n  undefined8 uVar3;\n  \n  puVar2 = (uint *)dcgettext(0,param_1,5);\n  if (param_1 == puVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,0x114ca9,0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,0x114caf,0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        puVar2 = &UINT_00114c98;\n        if (param_2 != 9) {\n          puVar2 = (uint *)((long)&UINT_00114c1c + 2);\n        }\n        return puVar2;\n      }\n      if (*(char *)puVar2 == '`') {\n        puVar2 = (uint *)((long)&UINT_00114ca0 + 1);\n      }\n      else {\n        puVar2 = (uint *)((long)&UINT_00114c9c + 2);\n      }\n    }\n    else if (*(char *)puVar2 == '`') {\n      puVar2 = (uint *)((long)&UINT_00114ca4 + 1);\n    }\n    else {\n      puVar2 = (uint *)((long)&UINT_00114c98 + 2);\n    }\n  }\n  return puVar2;\n}\n\n", 
    "0011d050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d298": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010fc10": "\nundefined8 enter_dir_isra_0(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = cycle_check(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)hash_insert(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n", 
    "0011d058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0011d178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109380": "\nundefined8 hash_get_n_buckets_used(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "0010d260": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "0010d380": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "00112550": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00112e30": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "0010adc0": "\nvoid ino_map_free(undefined8 *param_1)\n\n{\n  hash_free(*param_1);\n  free((void *)param_1[2]);\n  (*(code *)PTR_free_0011bfc8)(param_1);\n  return;\n}\n\n", 
    "00108fa0": "\nbool raw_comparator(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "00103720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0011bce0)();\n  return;\n}\n\n", 
    "00103840": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0011bd70)();\n  return;\n}\n\n"
}