{
    "0010a640": "\nundefined8 hash_get_n_buckets(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "00106fc0": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "00106870": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010aa90": "\nvoid hash_reset_tuning(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "001130f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __openat_2(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __openat_2@@GLIBC_2.7 */\n  halt_baddata();\n}\n\n", 
    "001028d8": "\nvoid filesystem_type_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109d50": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00104450": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "00109b10": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n", 
    "001028d3": "\nvoid fts_set_stat_required_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00113048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fcntl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107160": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "001130f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107280": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00111f38)();\n  return pvVar1;\n}\n\n", 
    "001038a0": "\nvoid chopt_init(undefined4 *param_1)\n\n{\n  *param_1 = 2;\n  *(undefined *)(param_1 + 1) = 0;\n  *(undefined8 *)(param_1 + 2) = 0;\n  *(undefined2 *)(param_1 + 4) = 1;\n  *(undefined8 *)(param_1 + 6) = 0;\n  *(undefined8 *)(param_1 + 8) = 0;\n  return;\n}\n\n", 
    "001076a0": "\nulong dev_type_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "0010b7d0": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00113050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001028bf": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102d90": "\n/* WARNING: Removing unreachable block (ram,0x00102db4) */\n/* WARNING: Removing unreachable block (ram,0x00102dc0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001066d0": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b170": "\nundefined8 hash_insert(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = hash_insert_if_absent(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00111ee0)();\n  return iVar1;\n}\n\n", 
    "001028ba": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001082f0": "\nvoid free_dir_isra_0(uint param_1,long param_2)\n\n{\n  if ((param_1 & 0x102) == 0) {\n    (*(code *)PTR_free_00111fb8)(param_2);\n    return;\n  }\n  if (param_2 != 0) {\n    hash_free();\n    return;\n  }\n  return;\n}\n\n", 
    "00113170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fstatfs_00111f70)();\n  return iVar1;\n}\n\n", 
    "00106500": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104320": "\nbyte chown_files(undefined8 param_1,ulong param_2,undefined4 param_3,undefined4 param_4,uint param_5\n                ,uint param_6,int *param_7)\n\n{\n  uint uVar1;\n  byte bVar2;\n  int iVar3;\n  undefined8 uVar4;\n  long lVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  byte bVar8;\n  \n  if (((param_5 & param_6) == 0xffffffff) && (*(char *)(param_7 + 4) == '\\0')) {\n    uVar1 = (uint)param_2;\n    param_2 = param_2 & 0xffffffff;\n    if (*param_7 == 2) {\n      param_2 = (ulong)(uVar1 | 8);\n    }\n  }\n  bVar8 = 1;\n  uVar4 = xfts_open(param_1,param_2,0);\n  while (lVar5 = fts_read(uVar4), lVar5 != 0) {\n    bVar2 = change_file_owner(uVar4,lVar5,param_3,param_4,param_5,param_6,param_7);\n    bVar8 = bVar8 & bVar2;\n  }\n  piVar6 = __errno_location();\n  if (*piVar6 != 0) {\n    bVar8 = *(byte *)((long)param_7 + 0x11);\n    if (bVar8 == 0) {\n      uVar7 = dcgettext(0,\"fts_read failed\",5);\n      error(0,*piVar6,uVar7);\n    }\n    else {\n      bVar8 = 0;\n    }\n  }\n  iVar3 = fts_close(uVar4);\n  if (iVar3 != 0) {\n    bVar8 = 0;\n    uVar4 = dcgettext(0,\"fts_close failed\",5);\n    error(0,*piVar6,uVar4);\n  }\n  return bVar8;\n}\n\n", 
    "00106fb0": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "00109e80": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00106860": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00111d98)();\n  return;\n}\n\n", 
    "001028c9": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108000": "\nvoid diropen_isra_0(undefined4 param_1,uint param_2,undefined8 param_3)\n\n{\n  if ((param_2 & 0x200) != 0) {\n    openat_safer(param_1,param_3);\n    return;\n  }\n  open_safer(param_3,(param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900);\n  return;\n}\n\n", 
    "001028c4": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107030": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010708b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010708b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00113058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001039b0": "\nulong change_file_owner(long param_1,long param_2,__uid_t param_3,__gid_t param_4,uint param_5,\n                       uint param_6,int *param_7)\n\n{\n  byte bVar1;\n  ushort uVar2;\n  char *pcVar3;\n  __ino_t *p_Var4;\n  long *plVar5;\n  char cVar6;\n  int iVar7;\n  int *piVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  void *__ptr;\n  void *__ptr_00;\n  ulong uVar11;\n  undefined8 uVar12;\n  char *pcVar13;\n  undefined4 uVar14;\n  __uid_t _Var15;\n  uint uVar16;\n  ulong unaff_R12;\n  long in_FS_OFFSET;\n  bool bVar17;\n  stat *local_f0;\n  stat local_d8;\n  long local_40;\n  \n  uVar2 = *(ushort *)(param_2 + 0x70);\n  pcVar3 = *(char **)(param_2 + 0x38);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  switch(uVar2) {\n  case 1:\n    unaff_R12 = (ulong)*(byte *)(param_7 + 1);\n    if (*(byte *)(param_7 + 1) != 0) {\n      plVar5 = *(long **)(param_7 + 2);\n      if (((plVar5 != (long *)0x0) && (*(long *)(param_2 + 0x80) == *plVar5)) &&\n         (*(long *)(param_2 + 0x78) == plVar5[1])) {\n        if ((*pcVar3 == '/') && (pcVar3[1] == '\\0')) {\n          uVar9 = quotearg_style(4,pcVar3);\n          uVar10 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n          error(0,0,uVar10,uVar9);\n        }\n        else {\n          uVar9 = quotearg_n_style(1,4,&DAT_0010ced6);\n          uVar10 = quotearg_n_style(0,4,pcVar3);\n          uVar12 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n          error(0,0,uVar12,uVar10,uVar9);\n        }\n        unaff_R12 = 0;\n        uVar9 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n        error(0,0,uVar9);\n        fts_set(param_1,param_2,4);\n        fts_read(param_1);\n      }\n      goto LAB_00103bf0;\n    }\n    break;\n  case 2:\n    cVar6 = cycle_warning_required(param_1,param_2);\n    if (cVar6 != '\\0') {\n      uVar9 = quotearg_n_style_colon(0,3,pcVar3);\n      uVar10 = dcgettext(0,\n                         \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                         ,5);\n      unaff_R12 = 0;\n      error(0,0,uVar10,uVar9);\n      goto LAB_00103bf0;\n    }\n    break;\n  case 4:\n    bVar1 = *(byte *)((long)param_7 + 0x11);\n    if (bVar1 != 0) goto LAB_00103bbe;\n    uVar9 = quotearg_style(4,pcVar3);\n    pcVar13 = \"cannot read directory %s\";\nLAB_00103d64:\n    pcVar13 = (char *)dcgettext(0,pcVar13,5);\n    uVar14 = *(undefined4 *)(param_2 + 0x40);\nLAB_00103d0a:\n    unaff_R12 = (ulong)bVar1;\n    error(0,uVar14,pcVar13,uVar9);\n    iVar7 = *param_7;\n    goto joined_r0x00103d18;\n  case 6:\n    if (*(char *)(param_7 + 1) == '\\0') {\nLAB_00103bea:\n      unaff_R12 = 1;\n      goto LAB_00103bf0;\n    }\n    break;\n  case 7:\n    bVar1 = *(byte *)((long)param_7 + 0x11);\n    if (bVar1 == 0) {\n      uVar9 = quotearg_n_style_colon(0,3,pcVar3);\n      uVar14 = *(undefined4 *)(param_2 + 0x40);\n      pcVar13 = \"%s\";\n      goto LAB_00103d0a;\n    }\n    goto LAB_00103bbe;\n  case 10:\n    if ((*(long *)(param_2 + 0x58) == 0) && (*(long *)(param_2 + 0x20) == 0)) {\n      *(undefined8 *)(param_2 + 0x20) = 1;\n      fts_set(param_1,param_2,1);\n      goto LAB_00103bea;\n    }\n    bVar1 = *(byte *)((long)param_7 + 0x11);\n    if (bVar1 == 0) {\n      uVar9 = quotearg_style(4,pcVar3);\n      pcVar13 = \"cannot access %s\";\n      goto LAB_00103d64;\n    }\nLAB_00103bbe:\n    iVar7 = *param_7;\n    unaff_R12 = 0;\njoined_r0x00103d18:\n    if ((iVar7 != 2) && (iVar7 == 0)) {\n      uVar14 = 3;\n      unaff_R12 = 0;\n      __ptr = (void *)0x0;\n      __ptr_00 = (void *)0x0;\n      goto LAB_00103ece;\n    }\n    goto LAB_00103b90;\n  }\n  uVar16 = (uint)uVar2;\n  pcVar13 = *(char **)(param_2 + 0x30);\n  cVar6 = *(char *)(param_7 + 4);\n  local_f0 = (stat *)(param_2 + 0x78);\n  if ((((param_5 & param_6) != 0xffffffff) || (*param_7 != 2)) || (*(long *)(param_7 + 2) != 0)) {\n    if (cVar6 != '\\0') goto LAB_00103a67;\n    goto LAB_00103a7d;\n  }\n  if (cVar6 == '\\0') {\n    if (((uVar2 & 0xfffd) == 4) || ((ushort)(uVar2 - 1) < 2)) {\n      uVar14 = *(undefined4 *)(param_1 + 0x2c);\nLAB_00103b21:\n      iVar7 = lchownat(uVar14,pcVar13,param_3,param_4);\n      bVar17 = iVar7 == 0;\n      if ((bVar17) || (piVar8 = __errno_location(), *piVar8 != 0x5f)) {\nLAB_00103b66:\n        if (bVar17) goto LAB_00103e76;\nLAB_00103b6f:\n        bVar1 = *(byte *)((long)param_7 + 0x11);\n        if (bVar1 != 0) goto LAB_00103b7d;\n        uVar9 = quotearg_style(4,pcVar3);\n        if (param_3 == 0xffffffff) {\n          uVar10 = dcgettext(0,\"changing group of %s\",5);\n        }\n        else {\n          uVar10 = dcgettext(0,\"changing ownership of %s\",5);\n        }\n        piVar8 = __errno_location();\nLAB_0010403b:\n        unaff_R12 = (ulong)bVar1;\n        error(0,*piVar8,uVar10,uVar9);\n        iVar7 = *param_7;\n        if (iVar7 != 2) goto LAB_00103b87;\n      }\n      else {\n        unaff_R12 = 1;\n        if ((*param_7 != 2) && (*param_7 == 0)) {\n          uVar14 = 1;\n          goto LAB_00103f27;\n        }\n      }\n    }\n    else {\nLAB_00103b15:\n      uVar14 = *(undefined4 *)(param_1 + 0x2c);\n      if (cVar6 == '\\0') goto LAB_00103b21;\n      uVar16 = restricted_chown(uVar14,pcVar13,local_f0,param_3,param_4,param_5);\n      if (uVar16 == 5) {\n        iVar7 = chownat(*(undefined4 *)(param_1 + 0x2c),pcVar13,param_3,param_4);\n        bVar17 = iVar7 == 0;\n        goto LAB_00103b66;\n      }\n      if (5 < uVar16) {\n        if (uVar16 != 6) {\n          uVar11 = change_file_owner_cold();\n          return uVar11;\n        }\n        goto LAB_00103b6f;\n      }\n      if (uVar16 != 2) {\n        if (1 < uVar16 - 3) {\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\n        if ((*param_7 == 2) || (*param_7 != 0)) {\n          unaff_R12 = 0;\n          goto LAB_00103b90;\n        }\n        unaff_R12 = 0;\n        uVar14 = 3;\n        goto LAB_00103f27;\n      }\nLAB_00103e76:\n      iVar7 = *param_7;\n      if (iVar7 != 2) {\n        if (param_3 == 0xffffffff) {\nLAB_00103f90:\n          if ((param_4 == 0xffffffff) || (local_f0->st_gid == param_4)) goto LAB_00103fb7;\n          _Var15 = local_f0->st_uid;\n          uVar14 = 2;\n          unaff_R12 = 1;\n        }\n        else {\n          _Var15 = local_f0->st_uid;\n          uVar14 = 2;\n          unaff_R12 = 1;\n          if (_Var15 == param_3) goto LAB_00103f90;\n        }\n        goto LAB_00103ea3;\n      }\nLAB_00103fd0:\n      unaff_R12 = 1;\n    }\n  }\n  else {\nLAB_00103a67:\n    if ((*(uint *)(param_2 + 0x90) & 0xf000) == 0xa000) {\n      local_f0 = &local_d8;\n      iVar7 = fstatat(*(int *)(param_1 + 0x2c),pcVar13,local_f0,0);\n      if (iVar7 == 0) {\n        uVar16 = (uint)*(ushort *)(param_2 + 0x70);\n        goto LAB_00103a7d;\n      }\n      bVar1 = *(byte *)((long)param_7 + 0x11);\n      if (bVar1 == 0) {\n        uVar9 = quotearg_style(4,pcVar3);\n        uVar10 = dcgettext(0,\"cannot dereference %s\",5);\n        piVar8 = __errno_location();\n        goto LAB_0010403b;\n      }\nLAB_00103b7d:\n      iVar7 = *param_7;\n      unaff_R12 = 0;\n      if (iVar7 == 2) goto LAB_00103b90;\nLAB_00103b87:\n      if (iVar7 != 0) goto LAB_00103b90;\n      uVar14 = 3;\n    }\n    else {\nLAB_00103a7d:\n      uVar16 = (uint)unaff_R12 & 0xffffff00 | (uint)(((ushort)uVar16 & 0xfffd) == 4) |\n               uVar16 & 0xffffff00 | (uint)((ushort)((ushort)uVar16 - 1) < 2);\n      unaff_R12 = (ulong)uVar16;\n      cVar6 = (char)uVar16;\n      if ((param_5 == 0xffffffff) || (local_f0->st_uid == param_5)) {\n        if (param_6 == 0xffffffff) {\n          if ((((cVar6 == '\\0') || (p_Var4 = *(__ino_t **)(param_7 + 2), p_Var4 == (__ino_t *)0x0))\n              || (*p_Var4 != local_f0->st_ino)) || (local_f0->st_dev != p_Var4[1]))\n          goto LAB_00103b11;\n        }\n        else if (((cVar6 == '\\0') || (p_Var4 = *(__ino_t **)(param_7 + 2), p_Var4 == (__ino_t *)0x0)\n                 ) || ((local_f0->st_ino != *p_Var4 || (local_f0->st_dev != p_Var4[1])))) {\n          if (local_f0->st_gid != param_6) goto LAB_001041bd;\nLAB_00103b11:\n          cVar6 = *(char *)(param_7 + 4);\n          goto LAB_00103b15;\n        }\nLAB_00103db0:\n        if ((*pcVar3 == '/') && (pcVar3[1] == '\\0')) {\n          uVar9 = quotearg_style(4,pcVar3);\n          uVar10 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n          error(0,0,uVar10,uVar9);\n        }\n        else {\n          uVar9 = quotearg_n_style(1,4,&DAT_0010ced6);\n          uVar10 = quotearg_n_style(0,4,pcVar3);\n          uVar12 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n          error(0,0,uVar12,uVar10,uVar9);\n        }\n        unaff_R12 = 0;\n        uVar9 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n        error(0,0,uVar9);\n        goto LAB_00103bf0;\n      }\n      if (cVar6 == '\\0') {\n        iVar7 = *param_7;\n        if (iVar7 == 2) goto LAB_00103fd0;\nLAB_00103fb7:\n        if (iVar7 != 0) goto LAB_00103fd0;\n        unaff_R12 = 1;\n      }\n      else {\n        p_Var4 = *(__ino_t **)(param_7 + 2);\n        if ((p_Var4 != (__ino_t *)0x0) && (local_f0->st_ino == *p_Var4)) {\n          if (local_f0->st_dev == p_Var4[1]) goto LAB_00103db0;\nLAB_001041bd:\n          iVar7 = *param_7;\n          unaff_R12 = 1;\n          if (iVar7 != 2) goto LAB_00103acd;\n          goto LAB_00103b90;\n        }\n        iVar7 = *param_7;\n        if (iVar7 == 2) goto LAB_00103b90;\nLAB_00103acd:\n        if (iVar7 != 0) goto LAB_00103b90;\n      }\n      uVar14 = 4;\n    }\nLAB_00103f27:\n    _Var15 = local_f0->st_uid;\nLAB_00103ea3:\n    __ptr = (void *)uid_to_name(_Var15);\n    __ptr_00 = (void *)gid_to_name(local_f0->st_gid);\nLAB_00103ece:\n    describe_change(pcVar3,uVar14,__ptr,__ptr_00,*(undefined8 *)(param_7 + 6),\n                    *(undefined8 *)(param_7 + 8));\n    free(__ptr);\n    free(__ptr_00);\n  }\nLAB_00103b90:\n  if (*(char *)(param_7 + 1) == '\\0') {\n    fts_set(param_1,param_2,4);\n  }\nLAB_00103bf0:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return unaff_R12;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001027a0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00111f30)();\n  return;\n}\n\n", 
    "001066c0": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00113068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoul_00111f68)();\n  return uVar1;\n}\n\n", 
    "001070d0": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00113060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwuid(__uid_t __uid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getpwuid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010a650": "\nundefined8 hash_get_n_buckets_used(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "00113180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010a500": "\nundefined8 transfer_entries(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_0010a530:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)safe_hasher(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          free_entry_isra_0(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0010a5a0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0010a5a0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_0010a530;\n    plVar3 = (long *)safe_hasher(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "00106410": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "0010a860": "\nlong hash_lookup(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "001130d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010a740": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid hash_print_statistics(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = hash_get_n_entries();\n  uVar2 = hash_get_n_buckets();\n  uVar3 = hash_get_n_buckets_used();\n  uVar4 = hash_get_max_bucket_length();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_0010dce0) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "0010b950": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001131f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104470": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_001044f8;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_001044f8:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "00106890": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "00104ce0": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010cee1;\n      }\n      else {\n        pcVar2 = &DAT_0010cede;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010cee5;\n    }\n    else {\n      pcVar2 = &DAT_0010ceda;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00106770": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001028f6": "\nvoid hash_rehash_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00113148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrnam(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getgrnam@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001028f1": "\nvoid hash_get_first_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00111f48)();\n  return iVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00111eb8)();\n  return pvVar1;\n}\n\n", 
    "00107180": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001049b0": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010b7b0": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "00113030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b9f0": "\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __xstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00113150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b8d0": "\nvoid rotl_sz(void)\n\n{\n  rotl64();\n  return;\n}\n\n", 
    "001065d0": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "00104c30": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "001064b0": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "00109cc0": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109210": "\nundefined4 fts_close(void **param_1)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  void *pvVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar3 = *(long *)((long)__ptr + 0x58);\n    while (-1 < lVar3) {\n      pvVar2 = *(void **)((long)__ptr + 0x10);\n      if (pvVar2 == (void *)0x0) {\n        pvVar2 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n      else {\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n    }\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    fts_lfree();\n  }\n  ppvVar1 = param_1 + 0xc;\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar4 = fchdir(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\n        iVar4 = *piVar6;\n        iVar5 = close(*(int *)(param_1 + 5));\n        if (iVar5 == 0) goto LAB_0010935d;\n        if (iVar4 == 0) goto LAB_00109318;\n        fd_ring_clear(ppvVar1);\n        if (param_1[10] == (void *)0x0) {\n          free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          free(param_1);\n          goto LAB_001093cf;\n        }\n        goto LAB_001092bc;\n      }\n      iVar4 = close(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\nLAB_00109318:\n        iVar4 = *piVar6;\n        goto LAB_0010935d;\n      }\n    }\nLAB_001092a7:\n    iVar4 = 0;\n    fd_ring_clear(ppvVar1);\n    if (param_1[10] == (void *)0x0) {\n      free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n      free(param_1);\n      return 0;\n    }\nLAB_001092bc:\n    hash_free();\n  }\n  else {\n    if ((*(int *)((long)param_1 + 0x2c) < 0) ||\n       (iVar4 = close(*(int *)((long)param_1 + 0x2c)), iVar4 == 0)) goto LAB_001092a7;\n    piVar6 = __errno_location();\n    iVar4 = *piVar6;\nLAB_0010935d:\n    fd_ring_clear(ppvVar1);\n    if (param_1[10] != (void *)0x0) goto LAB_001092bc;\n  }\n  free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n  free(param_1);\n  if (iVar4 == 0) {\n    return 0;\n  }\n  piVar6 = __errno_location();\nLAB_001093cf:\n  *piVar6 = iVar4;\n  return 0xffffffff;\n}\n\n", 
    "0010af00": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 hash_insert_if_absent(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010af4e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    check_tuning_isra_0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_0010afaa;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_0010dcd8) {\n      if (_DAT_0010dcdc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0010dcdc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = hash_rehash(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = hash_insert_if_absent_cold();\n          return uVar5;\n        }\n        goto LAB_0010afaa;\n      }\n    }\n  }\n  else {\nLAB_0010afaa:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010af4e;\n    }\n    plVar3 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010af4e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010af4e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104900": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001028dd": "\nvoid cwd_advance_fd_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001130d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001131f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchownat(int __fd,char *__file,__uid_t __owner,__gid_t __group,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchownat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchownat(int __fd,char *__file,__uid_t __owner,__gid_t __group,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchownat_00111f80)();\n  return iVar1;\n}\n\n", 
    "0010a980": "\nvoid hash_get_entries(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00111ef0)();\n  return pvVar1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_00111e60)();\n  return iVar1;\n}\n\n", 
    "00106400": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00107730": "\nvoid fts_set_stat_required(long param_1,char param_2)\n\n{\n  if (*(short *)(param_1 + 0x70) == 0xb) {\n    *(ulong *)(param_1 + 0xa8) = (ulong)(param_2 != '\\0') + 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108e90": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  uint uVar4;\n  int iVar5;\n  long *__ptr;\n  ulong uVar6;\n  char *__ptr_00;\n  long lVar7;\n  size_t sVar8;\n  long lVar9;\n  long lVar10;\n  int *piVar11;\n  char *__s;\n  ulong uVar12;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar11 = __errno_location();\n    *piVar11 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  uVar4 = param_2 & 0xfffffdff | 4;\n  if ((param_2 & 2) == 0) {\n    uVar4 = param_2;\n  }\n  *(uint *)(__ptr + 9) = uVar4;\n  uVar6 = fts_maxarglen(param_1);\n  uVar12 = 0x1000;\n  if (0xfff < uVar6) {\n    uVar12 = uVar6;\n  }\n  local_42 = fts_palloc_isra_0(__ptr + 4,__ptr + 6,uVar12);\n  if (local_42 == 0) goto LAB_00109142;\n  __ptr_00 = *param_1;\n  if (__ptr_00 == (char *)0x0) {\n    if (param_3 != 0) {\n      __s = (char *)0x0;\nLAB_00108f88:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_00108f97;\n    }\nLAB_001091d7:\n    lVar9 = 0;\nLAB_001090af:\n    lVar10 = fts_alloc(__ptr,\"\",0);\n    *__ptr = lVar10;\n    if (lVar10 != 0) {\n      *(long *)(lVar10 + 0x10) = lVar9;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar10 + 0x70) = 9;\n      *(undefined8 *)(lVar10 + 0x58) = 1;\n      cVar2 = setup_dir_isra_0(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar5 = diropen_isra_0(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                                 &DAT_0010dba2);\n          *(int *)(__ptr + 5) = iVar5;\n          if (iVar5 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        i_ring_init(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00109128:\n    fts_lfree(lVar9);\n    free(__ptr_00);\n  }\n  else {\n    __ptr_00 = (char *)fts_alloc(__ptr,\"\",0);\n    if (__ptr_00 != (char *)0x0) {\n      *(undefined8 *)(__ptr_00 + 0x58) = 0xffffffffffffffff;\n      __s = *param_1;\n      *(undefined8 *)(__ptr_00 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_00108f88;\nLAB_00108f97:\n      if (__s == (char *)0x0) goto LAB_001091d7;\n      local_40 = 0;\n      uVar12 = 0;\n      lVar10 = 0;\n      do {\n        sVar8 = strlen(__s);\n        if (((2 < sVar8) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) && (__s[sVar8 - 1] == '/')) {\n          do {\n            if (__s[sVar8 - 2] != '/') break;\n            sVar8 = sVar8 - 1;\n          } while (sVar8 != 1);\n        }\n        lVar7 = fts_alloc(__ptr);\n        lVar9 = lVar10;\n        if (lVar7 == 0) goto LAB_00109128;\n        *(undefined8 *)(lVar7 + 0x58) = 0;\n        *(char **)(lVar7 + 8) = __ptr_00;\n        *(long *)(lVar7 + 0x30) = lVar7 + 0x108;\n        lVar9 = lVar7;\n        if ((lVar10 == 0) || (local_42 == 0)) {\n          uVar3 = fts_stat(__ptr,lVar7,0);\n          *(undefined2 *)(lVar7 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00109025;\n          *(undefined8 *)(lVar7 + 0x10) = 0;\n          if (lVar10 != 0) goto LAB_00109198;\n        }\n        else {\n          *(undefined2 *)(lVar7 + 0x70) = 0xb;\n          fts_set_stat_required(lVar7,1);\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar7 + 0x10) = 0;\nLAB_00109198:\n            *(long *)(local_40 + 0x10) = lVar7;\n            lVar9 = lVar10;\n          }\n          else {\nLAB_00109025:\n            *(long *)(lVar7 + 0x10) = lVar10;\n            lVar7 = local_40;\n          }\n        }\n        local_40 = lVar7;\n        uVar12 = uVar12 + 1;\n        __s = param_1[uVar12];\n        lVar10 = lVar9;\n      } while (__s != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar12)) {\n        lVar9 = fts_sort(__ptr,lVar9,uVar12);\n      }\n      goto LAB_001090af;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_00109142:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n", 
    "001130e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104460": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "00109f80": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00106880": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00113038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010ba50": "\nint fstatat(int __fd,char *__file,stat *__buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstatat(1,__fd,__file,__buf,__flag);\n  return iVar1;\n}\n\n", 
    "00113158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001028e7": "\nvoid fts_read_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001027c0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00111f40)();\n  return;\n}\n\n", 
    "0010b8f0": "\nuint rotl16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "001028e2": "\nvoid leave_dir_isra_0_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00111eb0)();\n  return iVar1;\n}\n\n", 
    "0010a6d0": "\nbool hash_table_ok(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0010a6f0:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0010a6f0;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010b8e0": "\nvoid rotr_sz(void)\n\n{\n  rotr64();\n  return;\n}\n\n", 
    "00113040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* qsort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001076b0": "\nulong fts_compare_ino(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n", 
    "00113160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* readdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109df0": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001028ce": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001130e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001070f0": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00102830": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00111f78)();\n  return;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n  dirent *pdVar1;\n  \n  pdVar1 = (dirent *)(*(code *)PTR_readdir_00111ee8)();\n  return pdVar1;\n}\n\n", 
    "00104530": "\nvoid lchownat(int param_1,char *param_2,__uid_t param_3,__gid_t param_4)\n\n{\n  fchownat(param_1,param_2,param_3,param_4,0x100);\n  return;\n}\n\n", 
    "001130b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b930": "\nvoid dup_safer(undefined8 param_1)\n\n{\n  rpl_fcntl(param_1,0,3);\n  return;\n}\n\n", 
    "001131d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchown(int __fd,__uid_t __owner,__gid_t __group)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchown@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00111e28)();\n  return iVar1;\n}\n\n", 
    "00102470": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00111fe0)();\n  return;\n}\n\n", 
    "0010b810": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00107000": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00107ab0": "\nvoid fts_lfree(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n", 
    "00109e30": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010aa50": "\nulong hash_string(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "00113008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b9d0": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "00113130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dirfd@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104e10": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00105297:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001052b9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00105856;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010520f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00105297;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010520f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_0010cef9,param_5);\n      local_78 = (char *)gettext_quote(&DAT_0010cee9);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104f60:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_001057c0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010575b;\n          goto LAB_0010554b;\n        default:\nswitchD_00105670_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105a48;\n              }\n              if (lVar10 == -2) goto joined_r0x00105e5a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00105430;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105a48;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_001051d1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00105718;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00105718;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00105718:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00105427;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00105414;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00105414:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00105138;\n          goto LAB_00105427;\n        case 0x23:\n        case 0x7e:\nLAB_0010540b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00105414;\n          goto LAB_00105135;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00105670_caseD_25;\n        case 0x27:\nswitchD_00105670_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00105138;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010515b;\n          }\n          goto LAB_00105430;\n        case 0x3f:\nswitchD_00105670_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00105dbe_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00105138;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010515b;\n          }\n          goto LAB_00105430;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00105068_caseD_5c;\n          if (!bVar20) {\nLAB_001056a8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_001056c0;\n          }\n          goto LAB_00105430;\n        case 0x7b:\n        case 0x7d:\nswitchD_00105670_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010540b;\nLAB_00105135:\n          bVar23 = false;\n          goto LAB_00105138;\n        }\nLAB_00105540:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010554b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00105158;\n          goto LAB_00105080;\n        }\nLAB_00105580:\n        bVar21 = false;\n        goto joined_r0x00105591;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_001057a0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00105068_caseD_0;\n          default:\n            goto switchD_00105670_caseD_1;\n          case 7:\n            goto switchD_001057c0_caseD_7;\n          case 8:\n            goto switchD_001057c0_caseD_8;\n          case 9:\n            goto switchD_00105068_caseD_9;\n          case 10:\n            goto switchD_001057c0_caseD_a;\n          case 0xb:\n            goto switchD_001057c0_caseD_b;\n          case 0xc:\n            goto switchD_001057c0_caseD_c;\n          case 0xd:\n            goto switchD_001057c0_caseD_d;\n          case 0x20:\n            goto LAB_001057e9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00105068_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_001057d1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00105078;\n          case 0x27:\n            goto switchD_00105670_caseD_27;\n          case 0x3f:\n            goto switchD_00105670_caseD_3f;\n          case 0x5c:\n            goto switchD_00105068_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00105670_caseD_7b;\n          }\n        }\n        goto LAB_0010543e;\n      }\nLAB_001057a0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_001057c0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00105068_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010515b;\n            }\nLAB_00105bfb:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00105bfb;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105c38;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010515b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00105430;\n      default:\n        bVar23 = false;\n        goto switchD_00105670_caseD_1;\n      case 7:\nswitchD_001057c0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_001057c0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00105068_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00105540;\n      case 10:\nswitchD_001057c0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00105580;\n      case 0xb:\nswitchD_001057c0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00105580;\n      case 0xc:\nswitchD_001057c0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_001057c0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00105580;\n      case 0x20:\n        bVar5 = false;\nLAB_001057e9:\n        uVar15 = 0x20;\n        goto LAB_00105078;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00105068_caseD_21:\n        bVar22 = false;\n        goto LAB_00105135;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_001057d1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00105138;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00105080;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00105078:\n        bVar22 = false;\n        goto LAB_00105080;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00105670_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00105670_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00105068_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_001056a8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00105540;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00105670_caseD_7b;\n      }\n      if (bVar20) goto LAB_001055a0;\n      bVar21 = false;\n      goto LAB_001050f6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00105427:\n      param_5 = 2;\nLAB_00105430:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010543e:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_00105478;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105ec5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00105478:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00105478;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105ec5;\nLAB_00105856:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001052b9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010575b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104f60;\nswitchD_00105dbe_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105c38:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010515b;\n    goto LAB_00105080;\n  }\n  goto LAB_0010543e;\njoined_r0x00105e5a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105a48:\n  if (1 < uVar17) {\nLAB_00105a52:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00105430;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00105108;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_001056c0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_001051d1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105a52;\n  }\nswitchD_00105670_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00105138:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00105080:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010515b;\n  }\n  else {\nLAB_00105158:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010515b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_001056c0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00105108;\n    }\n  }\njoined_r0x00105591:\n  if (bVar20) {\nLAB_001055a0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00105430;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_001050f6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00105108:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104f60;\n}\n\n", 
    "0010b8b0": "\nuint rotl32(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00109ee0": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00113010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001130b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001071c0": "\nvoid xfts_open(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n", 
    "001131d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fdopendir@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid i_ring_pop_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001061f0": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00107e80": "\nvoid set_stat_type_isra_0(undefined4 *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_2 - 1U < 0xc) {\n    uVar1 = *(undefined4 *)(CSWTCH_49 + (ulong)(param_2 - 1U) * 4);\n  }\n  *param_1 = uVar1;\n  return;\n}\n\n", 
    "0010a280": "\nlong safe_hasher(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b490": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106d90": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107910": "\nlong fts_sort(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_00107965:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_00107965;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n", 
    "00106820": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001130c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrgid(__gid_t __gid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getgrgid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001131e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoul@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104520": "\nvoid chownat(int param_1,char *param_2,__uid_t param_3,__gid_t param_4)\n\n{\n  fchownat(param_1,param_2,param_3,param_4,0);\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00111e20)();\n  return sVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00111fb8)();\n  return;\n}\n\n", 
    "00108320": "\nvoid fts_load_isra_0(void **param_1,long param_2)\n\n{\n  char *__s;\n  void *pvVar1;\n  char *pcVar2;\n  size_t sVar3;\n  \n  __s = (char *)(param_2 + 0x108);\n  pvVar1 = *param_1;\n  *(long *)(param_2 + 0x48) = *(long *)(param_2 + 0x60);\n  memmove(pvVar1,__s,*(long *)(param_2 + 0x60) + 1);\n  pcVar2 = strrchr(__s,0x2f);\n  if ((pcVar2 != (char *)0x0) && ((__s != pcVar2 || (*(char *)(param_2 + 0x109) != '\\0')))) {\n    sVar3 = strlen(pcVar2 + 1);\n    memmove(__s,pcVar2 + 1,sVar3 + 1);\n    *(size_t *)(param_2 + 0x60) = sVar3;\n  }\n  pvVar1 = *param_1;\n  *(void **)(param_2 + 0x38) = pvVar1;\n  *(void **)(param_2 + 0x30) = pvVar1;\n  return;\n}\n\n", 
    "0010ba30": "\nint lstat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __lxstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00113138": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107ce0": "\nulong dirent_inode_sort_may_be_useful(void)\n\n{\n  ulong uVar1;\n  \n  uVar1 = filesystem_type();\n  if ((uVar1 != 0x1021994) && (uVar1 != 0xff534d42)) {\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0x6969);\n  }\n  return 0;\n}\n\n", 
    "00113018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b8c0": "\nuint rotr32(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00113020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "00109dd0": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001130c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstatat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00107f90": "\nulong setup_dir_isra_0(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_1 & 0x102) != 0) {\n    pvVar1 = (void *)hash_initialize(0x1f,0,AD_hash,AD_compare,PTR_free_00111fb8);\n    *param_2 = pvVar1;\n    return (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  pvVar1 = malloc(0x20);\n  *param_2 = pvVar1;\n  if (pvVar1 != (void *)0x0) {\n    cycle_check_init(pvVar1);\n    return 1;\n  }\n  return 0;\n}\n\n", 
    "001131e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fstatfs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106810": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00105fd0": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00111da8)();\n  return;\n}\n\n", 
    "001028b5": "\nvoid change_file_owner_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103580": "\nchar * user_group_str(char *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  char *pcVar3;\n  char *pcVar4;\n  \n  if (param_1 == (char *)0x0) {\n    param_1 = param_2;\n    if (param_2 != (char *)0x0) goto LAB_001035e0;\n    pcVar3 = (char *)0x0;\n  }\n  else {\n    if (param_2 == (char *)0x0) {\nLAB_001035e0:\n      pcVar3 = (char *)xstrdup(param_1);\n      return pcVar3;\n    }\n    sVar1 = strlen(param_1);\n    sVar2 = strlen(param_2);\n    pcVar3 = (char *)xmalloc(sVar1 + 2 + sVar2);\n    pcVar4 = stpcpy(pcVar3,param_1);\n    *pcVar4 = ':';\n    strcpy(pcVar4 + 1,param_2);\n  }\n  return pcVar3;\n}\n\n", 
    "0010b910": "\nuint rotl8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "001131b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010a0d0": "\nvoid open_safer(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109e10": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106290": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00106170": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00113108": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001028b0": "\nvoid describe_change_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a8c0": "\nlong hash_get_first(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = hash_get_first_cold();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = hash_get_first_cold();\n  return lVar1;\n}\n\n", 
    "001066b0": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00113110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_00111f60)();\n  return pDVar1;\n}\n\n", 
    "00107b40": "\nDIR * opendirat(undefined8 param_1,undefined8 param_2,uint param_3,int *param_4)\n\n{\n  int iVar1;\n  int __fd;\n  DIR *pDVar2;\n  int *piVar3;\n  \n  pDVar2 = (DIR *)0x0;\n  __fd = openat_safer(param_1,param_2,param_3 | 0x90900);\n  if (-1 < __fd) {\n    pDVar2 = fdopendir(__fd);\n    if (pDVar2 == (DIR *)0x0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      close(__fd);\n      *piVar3 = iVar1;\n      return (DIR *)0x0;\n    }\n    *param_4 = __fd;\n  }\n  return pDVar2;\n}\n\n", 
    "00109da0": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "001070c0": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "0010a020": "\nundefined8 cycle_check(long *param_1,long *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  long *extraout_RDX;\n  long *extraout_RDX_00;\n  long *plVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  if (param_1[2] == 0) {\n    param_1[2] = 1;\n    cVar1 = is_zero_or_power_of_two(1);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    lVar4 = param_2[1];\n    plVar3 = extraout_RDX_00;\n  }\n  else {\n    lVar4 = param_2[1];\n    if ((lVar4 == *param_1) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    lVar2 = param_1[2] + 1;\n    param_1[2] = lVar2;\n    cVar1 = is_zero_or_power_of_two(lVar2);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    plVar3 = extraout_RDX;\n    if (lVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar2 = *param_2;\n  *plVar3 = lVar4;\n  plVar3[1] = lVar2;\n  return 0;\n}\n\n", 
    "001131b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001131c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00111fd0;\n  if (PTR___gmon_start___00111fd0 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00111fd0)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00104540": "\nchar * umaxtostr(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00106600": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106840": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid endgrent(void)\n\n{\n  (*(code *)PTR_endgrent_00111da0)();\n  return;\n}\n\n", 
    "00104660": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b920": "\nuint rotr8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "001130a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001028a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00111fb0)();\n  return ppuVar1;\n}\n\n", 
    "0010b1d0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong hash_delete(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = hash_find_entry(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_0010b213;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_0010b34a;\nLAB_0010b264:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_0010b264;\nLAB_0010b34a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    check_tuning_isra_0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_0010dcdc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0010dcdc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = hash_rehash(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_0010b213:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107130": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00109e20": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00107250": "\nbool bkm_scale(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "00108460": "\nvoid leave_dir_isra_0(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto leave_dir_isra_0_cold;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = *(long *)(lVar1 + 0x80);\n      }\n    }\n  }\n  else {\n    local_28 = *(undefined8 *)(param_3 + 0x78);\n    local_20 = *(undefined8 *)(param_3 + 0x80);\n    __ptr = (void *)hash_delete(*param_2,&local_28);\n    if (__ptr == (void *)0x0) {\nleave_dir_isra_0_cold:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    free(__ptr);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010ac80": "\nvoid hash_free(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010ad2c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0010acef;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0010acef:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010ad2c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  (*(code *)PTR_free_00111fb8)(param_1);\n  return;\n}\n\n", 
    "0010ba10": "\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstat(1,__fd,__buf);\n  return iVar1;\n}\n\n", 
    "00113118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113238": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b9c0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00102d60": "\n/* WARNING: Removing unreachable block (ram,0x00102d73) */\n/* WARNING: Removing unreachable block (ram,0x00102d7f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00109ff0": "\nulong is_zero_or_power_of_two(ulong param_1)\n\n{\n  return param_1 - 1 & 0xffffffffffffff00 | (ulong)((param_1 - 1 & param_1) == 0);\n}\n\n", 
    "0010b8a0": "\nulong rotr64(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00113000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid endgrent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* endgrent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107a10": "\nvoid * fts_alloc(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n", 
    "00113120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109db0": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "0010a150": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "001131c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102910": "\nbyte main(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  char *pcVar7;\n  char *pcVar8;\n  uint uVar9;\n  long in_FS_OFFSET;\n  undefined4 local_108;\n  char local_104;\n  long local_100;\n  undefined local_f8;\n  undefined local_f7;\n  char *local_e8;\n  stat local_d8;\n  long local_40;\n  \n  uVar9 = 0x10;\n  iVar4 = -1;\n  pcVar8 = (char *)(long)param_1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  atexit(close_stdout);\n  chopt_init(&local_108);\n  bVar1 = false;\n  while (iVar3 = getopt_long((ulong)pcVar8 & 0xffffffff,param_2,\"HLPRcfhv\",long_options,0),\n        iVar3 != -1) {\n    if (0x83 < iVar3) goto switchD_001029f3_caseD_49;\n    if (iVar3 < 0x48) {\n      if (iVar3 == -0x83) {\n        version_etc(stdout,\"chgrp\",\"GNU coreutils\",Version,\"David MacKenzie\",\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar3 != -0x82) goto switchD_001029f3_caseD_49;\n      usage(0);\n      break;\n    }\n    switch(iVar3) {\n    case 0x48:\n      uVar9 = 0x11;\n      break;\n    default:\n      goto switchD_001029f3_caseD_49;\n    case 0x4c:\n      uVar9 = 2;\n      break;\n    case 0x50:\n      uVar9 = 0x10;\n      break;\n    case 0x52:\n      local_104 = '\\x01';\n      break;\n    case 99:\n      local_108 = 1;\n      break;\n    case 0x66:\n      local_f7 = 1;\n      break;\n    case 0x68:\n      iVar4 = 0;\n      break;\n    case 0x76:\n      local_108 = 0;\n      break;\n    case 0x80:\n      iVar4 = 1;\n      break;\n    case 0x81:\n      bVar1 = false;\n      break;\n    case 0x82:\n      bVar1 = true;\n      break;\n    case 0x83:\n      reference_file = optarg;\n    }\n  }\n  pcVar7 = reference_file;\n  if (local_104 == '\\0') {\n    uVar9 = 0x10;\n  }\n  else if (uVar9 == 0x10) {\n    if (iVar4 == 1) goto LAB_00102cd1;\n    iVar4 = 0;\n  }\n  local_f8 = iVar4 != 0;\n  iVar4 = optind;\n  if (reference_file == (char *)0x0) {\n    if (param_1 - optind < 2) goto LAB_00102c49;\n    pcVar8 = (char *)param_2[optind];\n    optind = optind + 1;\n    if (*pcVar8 != '\\0') goto LAB_00102c7d;\n    goto LAB_00102bd7;\n  }\n  if (param_1 - optind < 1) goto LAB_00102c49;\n  iVar4 = stat(reference_file,&local_d8);\n  if (iVar4 == 0) {\n    local_e8 = (char *)gid_to_name(local_d8.st_gid);\n    goto LAB_00102b2b;\n  }\n  uVar5 = quotearg_style(4,pcVar7);\n  pcVar8 = (char *)dcgettext(0,\"failed to get attributes of %s\",5);\n  piVar6 = __errno_location();\n  error(1,*piVar6,pcVar8,uVar5);\nLAB_00102cd1:\n  uVar5 = dcgettext(0,\"-R --dereference requires either -H or -L\",5);\n  error(1,0,uVar5);\n  do {\n    pcVar8 = (char *)quote(param_2[(long)(pcVar8 + -1)]);\n    uVar5 = dcgettext(0,\"missing operand after %s\",5);\n    error(0,0,uVar5,pcVar8);\nswitchD_001029f3_caseD_49:\n    while( true ) {\n      usage(1);\nLAB_00102c7d:\n      pcVar7 = (char *)xstrdup(pcVar8);\nLAB_00102bd7:\n      local_e8 = pcVar7;\n      local_d8.st_gid = parse_group(pcVar8);\nLAB_00102b2b:\n      if (((local_104 == '\\0') || (!bVar1)) ||\n         (local_100 = get_root_dev_ino(dev_ino_buf_7132), local_100 != 0)) {\n        bVar2 = chown_files(param_2 + optind,uVar9 | 0x400,0xffffffff,local_d8.st_gid,0xffffffff,\n                            0xffffffff,&local_108,(long)optind);\n        if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return bVar2 ^ 1;\n        }\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      uVar5 = quotearg_style(4,&DAT_0010ced6);\n      pcVar8 = (char *)dcgettext(0,\"failed to get attributes of %s\",5);\n      piVar6 = __errno_location();\n      iVar4 = error(1,*piVar6,pcVar8,uVar5);\nLAB_00102c49:\n      if (iVar4 < (int)pcVar8) break;\n      uVar5 = dcgettext(0,\"missing operand\",5);\n      error(0,0,uVar5);\n    }\n  } while( true );\n}\n\n", 
    "0010a270": "\nbool raw_comparator(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "001130a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_closedir_00111e98)();\n  return iVar1;\n}\n\n", 
    "00102ee0": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x10c096;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010c01c;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 6;\n    pbVar7 = (byte *)\"chgrp\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"chgrp\";\n        goto LAB_001030fe;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"chgrp\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"chgrp\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_001030fe:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"chgrp\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"chgrp\");\n    if (pcVar4 != \"chgrp\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_stpcpy_00111e08)();\n  return pcVar1;\n}\n\n", 
    "00104730": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00104850": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00106230": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00108530": "\nvoid * fts_build(long *param_1,int param_2)\n\n{\n  long lVar1;\n  DIR *__dirp;\n  long lVar2;\n  long lVar3;\n  bool bVar4;\n  void *pvVar5;\n  undefined *puVar6;\n  char cVar7;\n  undefined2 uVar8;\n  int iVar9;\n  int *piVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__ptr;\n  uint uVar13;\n  uint uVar14;\n  undefined4 uVar15;\n  DIR *__dirp_00;\n  ulong uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  ulong local_a0;\n  void *local_98;\n  void *local_90;\n  undefined *local_70;\n  ulong local_68;\n  ulong local_60;\n  char local_4b;\n  char local_4a;\n  int local_44;\n  long local_40;\n  \n  lVar1 = *param_1;\n  __dirp = *(DIR **)(lVar1 + 0x18);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__dirp == (DIR *)0x0) {\n    uVar14 = *(uint *)(param_1 + 9);\n    uVar13 = uVar14 & 0x10;\n    if ((uVar13 != 0) && (uVar13 = 0x20000, (uVar14 & 1) != 0)) {\n      uVar13 = (uint)(*(long *)(lVar1 + 0x58) != 0) << 0x11;\n    }\n    uVar15 = 0xffffff9c;\n    if ((uVar14 & 0x204) == 0x200) {\n      uVar15 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    local_90 = (void *)opendirat(uVar15,*(undefined8 *)(lVar1 + 0x30),(uVar14 & 0x800) << 7 | uVar13\n                                 ,&local_44);\n    *(void **)(lVar1 + 0x18) = local_90;\n    if (local_90 == (void *)0x0) {\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n        goto LAB_00108a43;\n      }\n      goto LAB_00108d3d;\n    }\n    if (*(short *)(lVar1 + 0x70) == 0xb) {\n      uVar8 = fts_stat(param_1,lVar1,0);\n      *(undefined2 *)(lVar1 + 0x70) = uVar8;\n    }\n    else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n      leave_dir_isra_0(*(uint *)(param_1 + 9),param_1 + 0xb,lVar1);\n      fts_stat(param_1,lVar1,0);\n      cVar7 = enter_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar1);\n      if (cVar7 == '\\0') {\n        piVar10 = __errno_location();\n        local_90 = (void *)0x0;\n        *piVar10 = 0xc;\n        goto LAB_00108a43;\n      }\n    }\n    local_68 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n    if (param_2 == 2) {\nLAB_00108c60:\n      bVar19 = false;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n    else {\n      if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar1 + 0x88) == 2)) &&\n         (iVar9 = leaf_optimization(lVar1,local_44), iVar9 != 0)) {\n        if (param_2 != 3) goto LAB_00108c60;\n        bVar4 = false;\n        bVar19 = true;\n      }\n      else {\n        bVar19 = param_2 == 3;\n        bVar4 = true;\n      }\n      if ((*(byte *)((long)param_1 + 0x49) & 2) != 0) {\n        local_44 = rpl_fcntl(local_44,0x406,3);\n      }\n      if ((-1 < local_44) && (iVar9 = fts_safe_changedir(param_1,lVar1,local_44,0), iVar9 == 0))\n      goto LAB_0010858f;\n      if ((bVar19) && (bVar4)) {\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\n      *(ushort *)(lVar1 + 0x72) = *(ushort *)(lVar1 + 0x72) | 1;\n      closedir(*(DIR **)(lVar1 + 0x18));\n      uVar14 = *(uint *)(param_1 + 9);\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (((uVar14 & 0x200) != 0) && (-1 < local_44)) {\n        close(local_44);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      bVar19 = false;\n    }\n  }\n  else {\n    local_44 = dirfd(__dirp);\n    if (local_44 < 0) {\n      closedir(*(DIR **)(lVar1 + 0x18));\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\nLAB_00108d3d:\n      local_90 = (void *)0x0;\n      goto LAB_00108a43;\n    }\n    if (param_1[8] == 0) {\n      local_68 = 100000;\n      uVar14 = *(uint *)(param_1 + 9);\n      bVar19 = true;\n    }\n    else {\n      local_68 = 0xffffffffffffffff;\nLAB_0010858f:\n      bVar19 = true;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n  }\n  uVar18 = *(ulong *)(lVar1 + 0x48);\n  local_a0 = uVar18;\n  local_60 = uVar18 - 1;\n  if (*(char *)(*(long *)(lVar1 + 0x38) + -1 + uVar18) != '/') {\n    local_a0 = uVar18 + 1;\n    local_60 = uVar18;\n  }\n  local_70 = (undefined *)0x0;\n  if ((uVar14 & 4) != 0) {\n    local_70 = (undefined *)(local_60 + param_1[4]) + 1;\n    *(undefined *)(local_60 + param_1[4]) = 0x2f;\n  }\n  __dirp_00 = *(DIR **)(lVar1 + 0x18);\n  lVar2 = *(long *)(lVar1 + 0x58);\n  uVar18 = param_1[6] - local_a0;\n  if (__dirp_00 == (DIR *)0x0) {\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      local_90 = (void *)0x0;\n      uVar16 = 0;\n      local_4a = '\\0';\nLAB_00108b24:\n      local_70 = local_70 + -1;\n      goto LAB_00108b2a;\n    }\n    local_90 = (void *)0x0;\n    if ((bool)(bVar19 & __dirp == (DIR *)0x0)) {\n      local_4a = '\\0';\n      uVar16 = 0;\n      goto LAB_00108bb0;\n    }\nLAB_00108bd9:\n    if (((param_2 == 3) && (*(short *)(lVar1 + 0x70) != 7)) && (*(short *)(lVar1 + 0x70) != 4)) {\n      *(undefined2 *)(lVar1 + 0x70) = 6;\n    }\n    fts_lfree(local_90);\n    local_90 = (void *)0x0;\n  }\n  else {\n    piVar10 = __errno_location();\n    local_4a = '\\0';\n    local_4b = '\\0';\n    local_98 = (void *)0x0;\n    local_90 = (void *)0x0;\n    uVar17 = 0;\n    do {\n      while( true ) {\n        *piVar10 = 0;\n        pdVar11 = readdir(__dirp_00);\n        uVar16 = uVar17;\n        if (pdVar11 == (dirent *)0x0) {\n          if (*piVar10 != 0) {\n            *(int *)(lVar1 + 0x40) = *piVar10;\n            *(ushort *)(lVar1 + 0x70) = (-(ushort)(((ulong)__dirp | uVar17) == 0) & 0xfffd) + 7;\n          }\n          if (*(DIR **)(lVar1 + 0x18) != (DIR *)0x0) {\n            closedir(*(DIR **)(lVar1 + 0x18));\n            *(undefined8 *)(lVar1 + 0x18) = 0;\n          }\n          goto LAB_00108af4;\n        }\n        if ((((*(byte *)(param_1 + 9) & 0x20) != 0) || (pdVar11->d_name[0] != '.')) ||\n           ((pdVar11->d_name[1] != '\\0' && (*(short *)(pdVar11->d_name + 1) != 0x2e)))) break;\nLAB_00108663:\n        __dirp_00 = *(DIR **)(lVar1 + 0x18);\n        uVar17 = uVar16;\n        if (__dirp_00 == (DIR *)0x0) goto LAB_00108af4;\n      }\n      sVar12 = strlen(pdVar11->d_name);\n      __ptr = (void *)fts_alloc(param_1,pdVar11->d_name,sVar12);\n      if (__ptr == (void *)0x0) {\nLAB_001089f0:\n        iVar9 = *piVar10;\n        free(__ptr);\n        fts_lfree(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = iVar9;\n        goto LAB_00108a43;\n      }\n      if (uVar18 <= sVar12) {\n        lVar3 = param_1[4];\n        cVar7 = fts_palloc_isra_0(param_1 + 4,param_1 + 6,local_60 + 2 + sVar12);\n        if (cVar7 == '\\0') goto LAB_001089f0;\n        puVar6 = local_70;\n        if ((param_1[4] != lVar3) &&\n           (local_4b = cVar7, puVar6 = (undefined *)(param_1[4] + local_a0),\n           (*(byte *)(param_1 + 9) & 4) == 0)) {\n          puVar6 = local_70;\n        }\n        local_70 = puVar6;\n        uVar18 = param_1[6] - local_a0;\n      }\n      if (CARRY8(sVar12,local_a0)) {\n        free(__ptr);\n        fts_lfree(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = 0x24;\n        goto LAB_00108a43;\n      }\n      *(long *)((long)__ptr + 0x58) = lVar2 + 1;\n      lVar3 = *param_1;\n      *(size_t *)((long)__ptr + 0x48) = sVar12 + local_a0;\n      *(long *)((long)__ptr + 8) = lVar3;\n      *(__ino_t *)((long)__ptr + 0x80) = pdVar11->d_ino;\n      uVar14 = *(uint *)(param_1 + 9);\n      if ((uVar14 & 4) == 0) {\n        *(void **)((long)__ptr + 0x30) = (void *)((long)__ptr + 0x108);\n      }\n      else {\n        *(undefined8 *)((long)__ptr + 0x30) = *(undefined8 *)((long)__ptr + 0x38);\n        memmove(local_70,(void *)((long)__ptr + 0x108),*(long *)((long)__ptr + 0x60) + 1);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      if ((param_1[8] == 0) || ((uVar14 & 0x400) != 0)) {\n        uVar16 = 1;\n        if ((uVar14 & 0x18) == 0x18) {\n          uVar16 = (ulong)((pdVar11->d_type & 0xfb) == 0);\n        }\n        *(undefined2 *)((long)__ptr + 0x70) = 0xb;\n        set_stat_type_isra_0((long)__ptr + 0x90);\n        fts_set_stat_required(__ptr,uVar16 & 0xffffffff);\n      }\n      else {\n        uVar8 = fts_stat(param_1,__ptr,0);\n        *(undefined2 *)((long)__ptr + 0x70) = uVar8;\n      }\n      *(undefined8 *)((long)__ptr + 0x10) = 0;\n      pvVar5 = __ptr;\n      if (local_90 != (void *)0x0) {\n        *(void **)((long)local_98 + 0x10) = __ptr;\n        pvVar5 = local_90;\n      }\n      local_90 = pvVar5;\n      uVar16 = uVar17 + 1;\n      local_98 = __ptr;\n      if (uVar17 != 10000) {\n        if (uVar16 < local_68) goto LAB_00108663;\n        break;\n      }\n      if (param_1[8] == 0) {\n        local_4a = dirent_inode_sort_may_be_useful(lVar1,local_44);\n      }\n      uVar16 = 0x2711;\n      __dirp_00 = *(DIR **)(lVar1 + 0x18);\n      uVar17 = uVar16;\n    } while (__dirp_00 != (DIR *)0x0);\nLAB_00108af4:\n    if (local_4b != '\\0') {\n      fts_padjust_isra_0(param_1[1],param_1[4],local_90);\n    }\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      if ((param_1[6] == local_a0) || (uVar16 == 0)) goto LAB_00108b24;\nLAB_00108b2a:\n      *local_70 = 0;\n    }\n    if ((__dirp == (DIR *)0x0) && (bVar19)) {\n      if ((param_2 == 1) || (uVar16 == 0)) {\nLAB_00108bb0:\n        if (*(long *)(lVar1 + 0x58) == 0) {\n          iVar9 = restore_initial_cwd(param_1);\n        }\n        else {\n          iVar9 = fts_safe_changedir(param_1,*(undefined8 *)(lVar1 + 8),0xffffffff,&DAT_0010dba1);\n        }\n        if (iVar9 != 0) {\n          *(undefined2 *)(lVar1 + 0x70) = 7;\n          *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n          fts_lfree(local_90);\n          local_90 = (void *)0x0;\n          goto LAB_00108a43;\n        }\n        goto LAB_00108bd0;\n      }\n    }\n    else {\nLAB_00108bd0:\n      if (uVar16 == 0) goto LAB_00108bd9;\n    }\n    if (local_4a == '\\0') {\n      if ((param_1[8] != 0) && (uVar16 != 1)) {\n        local_90 = (void *)fts_sort(param_1,local_90,uVar16);\n      }\n    }\n    else {\n      param_1[8] = (long)fts_compare_ino;\n      local_90 = (void *)fts_sort(param_1,local_90,uVar16);\n      param_1[8] = 0;\n    }\n  }\nLAB_00108a43:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_90;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00111f28)();\n  return pcVar1;\n}\n\n", 
    "0010ad70": "\nundefined4 hash_rehash(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)compute_bucket_size_isra_0\n                              (*(undefined4 *)((long)pvVar1 + 8),param_2,\n                               *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_0010ae7c;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = transfer_entries(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = transfer_entries(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = transfer_entries(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_0010ae7c;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_0010ae7c;\n    }\n  }\n  uVar3 = 0;\nLAB_0010ae7c:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrgid(__gid_t __gid)\n\n{\n  group *pgVar1;\n  \n  pgVar1 = (group *)(*(code *)PTR_getgrgid_00111e58)();\n  return pgVar1;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_00111dc8)();\n  return pcVar1;\n}\n\n", 
    "001046b0": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00107d20": "\nundefined leaf_optimization(void)\n\n{\n  long lVar1;\n  undefined uVar2;\n  \n  lVar1 = filesystem_type();\n  if (lVar1 == 0x52654973) {\n    uVar2 = 2;\n  }\n  else if (lVar1 < 0x52654974) {\n    uVar2 = 0;\n    if ((lVar1 != 0x6969) && (lVar1 != 0x9fa0)) {\n      return lVar1 != 0;\n    }\n  }\n  else {\n    uVar2 = 2;\n    if ((lVar1 != 0x58465342) && (uVar2 = 0, lVar1 != 0xff534d42)) {\n      uVar2 = lVar1 != 0x5346414f;\n    }\n  }\n  return uVar2;\n}\n\n", 
    "00113210": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "001061b0": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "00109ea0": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010a000": "\nvoid cycle_check_init(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n", 
    "0010abd0": "\nvoid hash_clear(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010ac6b;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010ac6b:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00111f20)();\n  return pvVar1;\n}\n\n", 
    "00102660": "\nvoid __openat_2(void)\n\n{\n  (*(code *)PTR___openat_2_00111e90)();\n  return;\n}\n\n", 
    "00102540": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00111e00)();\n  return;\n}\n\n", 
    "0010b900": "\nuint rotr16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "001131a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107670": "\nulong AD_hash(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "0010b3f0": "\nundefined i_ring_empty(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n", 
    "00109f20": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00109e00": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00102e20": "\nulong parse_group(char *param_1)\n\n{\n  int iVar1;\n  group *pgVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  ulong local_28;\n  long local_20;\n  \n  uVar5 = 0xffffffff;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*param_1 != '\\0') {\n    pgVar2 = getgrnam(param_1);\n    if (pgVar2 == (group *)0x0) {\n      iVar1 = xstrtoul(param_1,0,10,&local_28,\"\");\n      if (iVar1 == 0) {\n        uVar5 = local_28 & 0xffffffff;\n        if (local_28 < 0x100000000) goto LAB_00102e70;\n      }\n      uVar3 = quote(param_1);\n      uVar4 = dcgettext(0,\"invalid group: %s\",5);\n      error(1,0,uVar4,uVar3);\n      goto LAB_00102ed7;\n    }\n    uVar5 = (ulong)pgVar2->gr_gid;\nLAB_00102e70:\n    endgrent();\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\nLAB_00102ed7:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00111e50)();\n  return pcVar1;\n}\n\n", 
    "0010a9d0": "\nlong hash_do_for_each(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "001047c0": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00111dc0)();\n  return;\n}\n\n", 
    "00107ecb": "\nvoid FUN_00107ecb(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00113100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* closedir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106f80": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00109eb0": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "0010a250": "\nulong raw_hasher(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = rotr_sz(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "00109400": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  long lVar10;\n  void *pvVar11;\n  void *pvVar12;\n  uint uVar13;\n  \n  pvVar11 = *param_1;\n  if (pvVar11 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar13 = *(uint *)(param_1 + 9);\n  if ((uVar13 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar11 + 0x74);\n  *(undefined2 *)((long)pvVar11 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = fts_stat(param_1,pvVar11,0);\n    *(undefined2 *)((long)pvVar11 + 0x70) = uVar6;\n    return pvVar11;\n  }\n  sVar2 = *(short *)((long)pvVar11 + 0x70);\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_0010956f;\n      goto LAB_00109490;\n    }\n    sVar7 = fts_stat(param_1,pvVar11,1);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar11;\n      if (sVar7 != 0xb) {\n        return pvVar11;\n      }\n      goto LAB_00109739;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                             &DAT_0010dba2);\n      *(int *)((long)pvVar11 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n        *(int *)((long)pvVar11 + 0x40) = iVar8;\n        *param_1 = pvVar11;\n        return pvVar11;\n      }\n      *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\nLAB_0010968a:\n      *param_1 = pvVar11;\n      if (sVar7 == 0xb) goto LAB_00109739;\n      goto LAB_00109698;\n    }\n    *param_1 = pvVar11;\nLAB_001096a2:\n    if (*(long *)((long)pvVar11 + 0x58) != 0) goto LAB_001096b3;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_0010960a;\nLAB_0010956f:\n      if (((uVar13 & 0x40) != 0) && (*(void **)((long)pvVar11 + 0x78) != param_1[3])) {\nLAB_0010960a:\n        if ((*(byte *)((long)pvVar11 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar11 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          fts_lfree();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar11 + 0x70) = 6;\n        leave_dir_isra_0(uVar3,param_1 + 0xb,pvVar11);\n        return pvVar11;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_00109788:\n        pvVar12 = (void *)fts_build(param_1,3);\n        param_1[1] = pvVar12;\n        if (pvVar12 == (void *)0x0) {\n          uVar13 = *(uint *)(param_1 + 9);\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar11 + 0x40) != 0) && (*(short *)((long)pvVar11 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n          }\n          leave_dir_isra_0(uVar13,param_1 + 0xb,pvVar11);\n          return pvVar11;\n        }\n      }\n      else {\n        if ((uVar13 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar13 & 0xffffdfff;\n          fts_lfree();\n          param_1[1] = (void *)0x0;\n          goto LAB_00109788;\n        }\n        iVar8 = fts_safe_changedir(param_1,pvVar11,0xffffffff,*(undefined8 *)((long)pvVar11 + 0x30))\n        ;\n        if (iVar8 == 0) {\n          pvVar12 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 1;\n          *(int *)((long)pvVar11 + 0x40) = iVar8;\n          pvVar12 = param_1[1];\n          for (pvVar11 = pvVar12; pvVar11 != (void *)0x0; pvVar11 = *(void **)((long)pvVar11 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar11 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar11 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n    }\n    else {\nLAB_00109490:\n      do {\n        pvVar12 = *(void **)((long)pvVar11 + 0x10);\n        if (pvVar12 == (void *)0x0) {\n          pvVar12 = *(void **)((long)pvVar11 + 8);\n          if (*(long *)((long)pvVar12 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar12 + 0x48);\n            *param_1 = pvVar12;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar12 = (void *)fts_build(param_1,3);\n            if (pvVar12 != (void *)0x0) {\n              free(pvVar11);\n              goto LAB_001096ea;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar12 = *(void **)((long)pvVar11 + 8);\n          }\n          *param_1 = pvVar12;\n          free(pvVar11);\n          if (*(long *)((long)pvVar12 + 0x58) == -1) {\n            free(pvVar12);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar12 + 0x70) == 0xb) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          *(undefined *)((long)param_1[4] + *(long *)((long)pvVar12 + 0x48)) = 0;\n          if (*(long *)((long)pvVar12 + 0x58) == 0) {\n            iVar8 = restore_initial_cwd(param_1);\n            if (iVar8 == 0) goto LAB_001094fb;\nLAB_001098af:\n            piVar9 = __errno_location();\n            uVar13 = *(uint *)(param_1 + 9) | 0x4000;\n            sVar7 = *(short *)((long)pvVar12 + 0x70);\n            *(int *)((long)pvVar12 + 0x40) = *piVar9;\n            *(uint *)(param_1 + 9) = uVar13;\n            if (sVar7 == 2) {\n              return (void *)0x0;\n            }\n          }\n          else {\n            if ((*(ushort *)((long)pvVar12 + 0x72) & 2) == 0) {\n              if (((*(ushort *)((long)pvVar12 + 0x72) & 1) == 0) &&\n                 (iVar8 = fts_safe_changedir(param_1,*(undefined8 *)((long)pvVar12 + 8),0xffffffff,\n                                             &DAT_0010dba1), iVar8 != 0)) goto LAB_001098af;\nLAB_001094fb:\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            else {\n              iVar8 = *(int *)((long)pvVar12 + 0x44);\n              if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                  iVar8 = fchdir(iVar8);\n                  if (iVar8 != 0) {\n                    piVar9 = __errno_location();\n                    *(int *)((long)pvVar12 + 0x40) = *piVar9;\n                    *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                  }\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n                else {\n                  cwd_advance_fd(param_1,iVar8,1);\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n              }\n              close(iVar8);\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            if (*(short *)((long)pvVar12 + 0x70) == 2) goto LAB_0010952b;\n          }\n          if (*(int *)((long)pvVar12 + 0x40) == 0) {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 6;\n            leave_dir_isra_0(uVar13,param_1 + 0xb,pvVar12);\n            uVar13 = *(uint *)(param_1 + 9);\n          }\n          else {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n          }\nLAB_0010952b:\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          return pvVar12;\n        }\n        *param_1 = pvVar12;\n        free(pvVar11);\n        pvVar11 = pvVar12;\n        if (*(long *)((long)pvVar12 + 0x58) == 0) {\n          iVar8 = restore_initial_cwd(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          fts_load_isra_0(param_1 + 4,pvVar12);\n          setup_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar12 + 0x70);\n          goto LAB_0010968a;\n        }\n      } while (*(short *)((long)pvVar12 + 0x74) == 4);\n      if (*(short *)((long)pvVar12 + 0x74) == 2) {\n        sVar7 = fts_stat(param_1,pvVar12,1);\n        *(short *)((long)pvVar12 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                                 &DAT_0010dba2);\n          *(int *)((long)pvVar12 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n            *(int *)((long)pvVar12 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar12 + 0x72) = *(ushort *)((long)pvVar12 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar12 + 0x74) = 3;\n      }\n    }\nLAB_001096ea:\n    lVar4 = *(long *)(*(long *)((long)pvVar12 + 8) + 0x48);\n    lVar10 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar12 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar10 = lVar4;\n    }\n    pvVar11 = param_1[4];\n    *(undefined *)(lVar10 + (long)pvVar11) = 0x2f;\n    memmove((undefined *)(lVar10 + (long)pvVar11) + 1,(void *)((long)pvVar12 + 0x108),\n            *(long *)((long)pvVar12 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar12 + 0x70);\n    *param_1 = pvVar12;\n    pvVar11 = pvVar12;\n    if (sVar7 != 0xb) {\nLAB_00109698:\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_001096a2;\n    }\nLAB_00109739:\n    if (*(long *)((long)pvVar11 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar11 + 0xa8) != 1) {\n        pvVar11 = (void *)fts_read_cold();\n        return pvVar11;\n      }\n      return pvVar11;\n    }\n    lVar4 = *(long *)((long)pvVar11 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = leaf_optimization(lVar4,*(undefined4 *)((long)param_1 + 0x2c)), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\n      goto LAB_00109698;\n    }\n    sVar7 = fts_stat(param_1,pvVar11,0);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar11 + 0x90) & 0xf000) != 0x4000) goto LAB_00109698;\n    if (*(long *)((long)pvVar11 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_001096b3;\n    }\n    if (sVar7 != 1) {\n      return pvVar11;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar11 + 0x78);\nLAB_001096b3:\n  cVar5 = enter_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar11);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar11 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar11;\n}\n\n", 
    "0010aac0": "\nvoid ** hash_initialize(undefined8 param_1,undefined1 *param_2,code *param_3,code *param_4,\n                       void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = raw_hasher;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = raw_comparator;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined1 *)0x0) {\n      param_2 = default_tuning;\n    }\n    __ptr[5] = param_2;\n    cVar1 = check_tuning_isra_0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)compute_bucket_size_isra_0\n                                  (*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "001131a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00111ea8)();\n  return iVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00111e18)();\n  return sVar1;\n}\n\n", 
    "00107bb0": "\nlong filesystem_type(long param_1,int param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 *__ptr;\n  undefined8 *puVar5;\n  long in_FS_OFFSET;\n  undefined8 local_b8 [2];\n  statfs local_a8;\n  long local_30;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(lVar3 + 0x49) & 2) != 0) {\n    lVar4 = *(long *)(lVar3 + 0x50);\n    if (lVar4 == 0) {\n      lVar4 = hash_initialize(0xd,0,dev_type_hash,dev_type_compare,PTR_free_00111fb8);\n      *(long *)(lVar3 + 0x50) = lVar4;\n      if (lVar4 != 0) goto LAB_00107bec;\n    }\n    else {\nLAB_00107bec:\n      local_b8[0] = *(undefined8 *)(param_1 + 0x78);\n      lVar3 = hash_lookup(lVar4,local_b8);\n      if (lVar3 != 0) {\n        lVar3 = *(long *)(lVar3 + 8);\n        goto LAB_00107c5b;\n      }\n    }\n    if ((-1 < param_2) && (iVar2 = fstatfs(param_2,&local_a8), lVar3 = local_a8.f_type, iVar2 == 0))\n    {\n      if ((lVar4 != 0) && (__ptr = (undefined8 *)malloc(0x10), __ptr != (undefined8 *)0x0)) {\n        uVar1 = *(undefined8 *)(param_1 + 0x78);\n        __ptr[1] = lVar3;\n        *__ptr = uVar1;\n        puVar5 = (undefined8 *)hash_insert(lVar4,__ptr);\n        if (puVar5 == (undefined8 *)0x0) {\n          free(__ptr);\n          lVar3 = local_a8.f_type;\n        }\n        else {\n          lVar3 = local_a8.f_type;\n          if (__ptr != puVar5) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n        }\n      }\n      goto LAB_00107c5b;\n    }\n  }\n  lVar3 = 0;\nLAB_00107c5b:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar3;\n}\n\n", 
    "00106250": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001046d0": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00102d30": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00111fc8)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001033a0": "\nundefined8\nrestricted_chown(undefined4 param_1,undefined8 param_2,__dev_t *param_3,__uid_t param_4,\n                __gid_t param_5,uint param_6,uint param_7)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  stat local_d8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_7 & param_6) != 0xffffffff) {\n    if ((*(uint *)(param_3 + 3) & 0xf000) == 0x8000) {\n      uVar4 = 0x900;\n    }\n    else {\n      uVar4 = 0x10900;\n      if ((*(uint *)(param_3 + 3) & 0xf000) != 0x4000) goto LAB_001034b0;\n    }\n    iVar1 = __openat_2(param_1,param_2,uVar4);\n    if (-1 < iVar1) {\nLAB_00103463:\n      iVar2 = fstat(iVar1,&local_d8);\n      if (iVar2 == 0) {\n        uVar5 = 4;\n        if ((((param_3[1] == local_d8.st_ino) && (*param_3 == local_d8.st_dev)) &&\n            ((param_6 == 0xffffffff || (uVar5 = 2, local_d8.st_uid == param_6)))) &&\n           ((param_7 == 0xffffffff || (uVar5 = 2, local_d8.st_gid == param_7)))) {\n          iVar2 = fchown(iVar1,param_4,param_5);\n          if (iVar2 == 0) {\n            uVar5 = 2;\n            iVar1 = close(iVar1);\n            if (iVar1 == 0) goto LAB_001034b6;\n            goto LAB_00103550;\n          }\n          goto LAB_00103570;\n        }\n      }\n      else {\nLAB_00103570:\n        uVar5 = 6;\n      }\n      piVar3 = __errno_location();\n      iVar2 = *piVar3;\n      close(iVar1);\n      *piVar3 = iVar2;\n      goto LAB_001034b6;\n    }\n    piVar3 = __errno_location();\n    if (*piVar3 != 0xd) {\nLAB_00103550:\n      uVar5 = 6;\n      goto LAB_001034b6;\n    }\n    if ((*(uint *)(param_3 + 3) & 0xf000) == 0x8000) {\n      iVar1 = __openat_2(param_1,param_2,uVar4 | 1);\n      if (-1 < iVar1) goto LAB_00103463;\n      if (*piVar3 != 0xd) goto LAB_00103550;\n    }\n  }\nLAB_001034b0:\n  uVar5 = 5;\nLAB_001034b6:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107b00": "\nvoid fd_ring_clear(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = i_ring_empty(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = i_ring_pop(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_00111dd8)();\n  return;\n}\n\n", 
    "001083b0": "\nundefined8 enter_dir_isra_0(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = cycle_check(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)hash_insert(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n", 
    "001061d0": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "00106d70": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "00104a70": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106920": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010d63b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106be9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00106be9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00106c8b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00106c8b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106a3d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00106a3d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010b550": "\nuint fd_safer(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = dup_safer();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00102560": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00111e10)();\n  return;\n}\n\n", 
    "00102dd0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00111fe0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "0010a910": "\nlong hash_get_next(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "00107210": "\nbool cycle_warning_required(long param_1,long param_2)\n\n{\n  uint uVar1;\n  bool bVar2;\n  \n  bVar2 = true;\n  uVar1 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar1 != 0x10) && (bVar2 = false, uVar1 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar2;\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00111ea0)();\n  return iVar1;\n}\n\n", 
    "00107690": "\nulong dev_type_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "00109f00": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "001068a0": "\n__ino_t * get_root_dev_ino(__ino_t *param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  stat local_a8;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = lstat(\"/\",&local_a8);\n  if (iVar1 == 0) {\n    *param_1 = local_a8.st_ino;\n    param_1[1] = local_a8.st_dev;\n  }\n  else {\n    param_1 = (__ino_t *)0x0;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b3d0": "\nvoid i_ring_init(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n", 
    "001024e0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00111dd0)();\n  return;\n}\n\n", 
    "001045a0": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_0010ced0;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00113200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001072b0": "\nuint xstrtoul(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_001073ab;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_001073ec:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_00107440_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_00107372;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00107416_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00107416_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = bkm_scale(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_00107440_caseD_43;\n        case 0x45:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = bkm_scale(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = bkm_scale(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_00107372;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_001073ec;\n      }\n    }\n  }\nLAB_001073ab:\n  uVar10 = 4;\nLAB_00107372:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b440": "\nundefined4 i_ring_pop(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  char cVar4;\n  \n  cVar4 = i_ring_empty();\n  if (cVar4 != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n", 
    "00102870": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00111f98)();\n  return;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00111f08)();\n  return iVar1;\n}\n\n", 
    "00106310": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00107640": "\nulong AD_compare(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00107760": "\nint fts_stat(long param_1,long param_2,char param_3)\n\n{\n  stat *__buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = stat(*(char **)(param_2 + 0x30),__buf);\n    if (iVar1 == 0) {\nLAB_001077ec:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = lstat(*(char **)(param_2 + 0x30),__buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = fstatat(*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__buf,0x100);\n    if (iVar1 == 0) goto LAB_001077ec;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n", 
    "001025b0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00111e38)();\n  return;\n}\n\n", 
    "0010a2b0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 check_tuning_isra_0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)default_tuning) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0010dcc4 < fVar1) && (fVar1 < DAT_0010dcc8)) && (_DAT_0010dccc < pfVar2[3])) &&\n     (_DAT_0010dcd0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0010dcc4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0010dcd4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)default_tuning;\n  return 0;\n}\n\n", 
    "00108050": "\nint fts_safe_changedir(long param_1,long param_2,int param_3,char *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  byte bVar7;\n  uint uVar8;\n  long in_FS_OFFSET;\n  stat local_d8;\n  long local_40;\n  \n  uVar8 = *(uint *)(param_1 + 0x48);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar4 = param_3;\n  if ((((param_4 == (char *)0x0) || (cVar1 = *param_4, cVar1 != '.')) || (param_4[1] != '.')) ||\n     (param_4[2] != '\\0')) {\n    if ((uVar8 & 4) == 0) {\n      if (param_3 < 0) {\n        bVar2 = 0;\nLAB_00108167:\n        iVar4 = diropen_isra_0(*(undefined4 *)(param_1 + 0x2c),uVar8,param_4);\n        if (iVar4 < 0) {\n          iVar3 = -1;\n          goto LAB_001080f0;\n        }\n        uVar8 = *(uint *)(param_1 + 0x48);\n      }\n      else {\n        bVar2 = 0;\n      }\n      iVar3 = param_3;\n      if ((uVar8 & 2) == 0) {\n        bVar7 = bVar2;\n        if (param_4 != (char *)0x0) {\n          cVar1 = *param_4;\nLAB_001080c1:\n          bVar2 = bVar7;\n          bVar7 = bVar2;\n          if (((cVar1 == '.') && (param_4[1] == '.')) && (iVar3 = param_3, param_4[2] == '\\0'))\n          goto LAB_001081a0;\n        }\nLAB_001080ca:\n        if ((uVar8 & 0x200) != 0) {\n          iVar3 = 0;\n          cwd_advance_fd(param_1,iVar4,bVar7 ^ 1);\n          goto LAB_001080f0;\n        }\n        iVar3 = fchdir(iVar4);\n      }\n      else {\nLAB_001081a0:\n        iVar5 = fstat(iVar4,&local_d8);\n        param_3 = iVar3;\n        if (iVar5 == 0) {\n          if ((*(__dev_t *)(param_2 + 0x78) == local_d8.st_dev) &&\n             (*(__ino_t *)(param_2 + 0x80) == local_d8.st_ino)) {\n            uVar8 = *(uint *)(param_1 + 0x48);\n            bVar7 = bVar2;\n            goto LAB_001080ca;\n          }\n          piVar6 = __errno_location();\n          *piVar6 = 2;\n        }\n        iVar3 = -1;\n      }\n      if (param_3 < 0) {\n        piVar6 = __errno_location();\n        iVar5 = *piVar6;\n        close(iVar4);\n        *piVar6 = iVar5;\n      }\n      goto LAB_001080f0;\n    }\n  }\n  else if ((uVar8 & 4) == 0) {\n    if (param_3 < 0) {\n      if ((uVar8 & 0x200) == 0) {\nLAB_00108278:\n        bVar2 = 1;\n        goto LAB_00108167;\n      }\n      bVar2 = i_ring_empty(param_1 + 0x60);\n      if (bVar2 != 0) goto LAB_00108167;\n      iVar3 = i_ring_pop(param_1 + 0x60);\n      uVar8 = *(uint *)(param_1 + 0x48);\n      if (iVar3 < 0) goto LAB_00108278;\n      bVar2 = 1;\n      param_3 = iVar3;\n      iVar4 = iVar3;\n      bVar7 = 1;\n      if ((uVar8 & 2) != 0) goto LAB_001081a0;\n      goto LAB_001080ca;\n    }\n    bVar2 = 1;\n    iVar3 = param_3;\n    bVar7 = 1;\n    if ((uVar8 & 2) == 0) goto LAB_001080c1;\n    goto LAB_001081a0;\n  }\n  if (((uVar8 & 0x200) == 0) || (param_3 < 0)) {\n    iVar3 = 0;\n  }\n  else {\n    iVar3 = 0;\n    close(param_3);\n  }\nLAB_001080f0:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchown(int __fd,__uid_t __owner,__gid_t __group)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchown_00111f58)();\n  return iVar1;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00111ec8)();\n  return pvVar1;\n}\n\n", 
    "00107f20": "\nundefined8 fts_palloc_isra_0(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n", 
    "001076e0": "\nlong fts_maxarglen(char **param_1)\n\n{\n  size_t sVar1;\n  ulong uVar2;\n  char *__s;\n  \n  __s = *param_1;\n  if (__s != (char *)0x0) {\n    uVar2 = 0;\n    do {\n      sVar1 = strlen(__s);\n      if (uVar2 < sVar1) {\n        uVar2 = sVar1;\n      }\n      __s = param_1[1];\n      param_1 = param_1 + 1;\n    } while (__s != (char *)0x0);\n    return uVar2 + 1;\n  }\n  return 1;\n}\n\n", 
    "001064d0": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00113098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* openat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00111f00)();\n  return pcVar1;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00111e70)();\n  return _Var1;\n}\n\n", 
    "001028fb": "\nvoid hash_insert_if_absent_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103950": "\nvoid uid_to_name(__uid_t param_1)\n\n{\n  passwd *ppVar1;\n  char *pcVar2;\n  long in_FS_OFFSET;\n  undefined auStack_28 [24];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  ppVar1 = getpwuid(param_1);\n  if (ppVar1 == (passwd *)0x0) {\n    pcVar2 = (char *)umaxtostr(param_1,auStack_28);\n  }\n  else {\n    pcVar2 = ppVar1->pw_name;\n  }\n  xstrdup(pcVar2);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00111de0)();\n  return iVar1;\n}\n\n", 
    "0010b890": "\nulong rotl64(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00113090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __lxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00111f90)();\n  return sVar1;\n}\n\n", 
    "00107ea0": "\nvoid fts_padjust_isra_0(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00106ed0": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dirfd_00111ec0)();\n  return iVar1;\n}\n\n", 
    "0010a1a0": "\nulong is_prime(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_00111e30)();\n  return iVar1;\n}\n\n", 
    "001038d0": "\nvoid chopt_free(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x18));\n  (*(code *)PTR_free_00111fb8)(*(undefined8 *)(param_1 + 0x20));\n  return;\n}\n\n", 
    "0010a3e0": "\nlong hash_find_entry(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)safe_hasher();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_0010a481:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            free_entry_isra_0(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_0010a481;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        free_entry_isra_0(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010b4d0": "\nvoid openat_safer(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_3 & 0x40) != 0) {\n    uVar3 = param_4 & 0xffffffff;\n  }\n  iVar2 = openat(param_1,param_2,param_3,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00111f50)();\n  return iVar1;\n}\n\n", 
    "00106e20": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001065e0": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00111f88)();\n  return;\n}\n\n", 
    "0010a330": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong compute_bucket_size_isra_0(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_0010dcd8 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_0010dcdc) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_0010dcdc) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = next_prime(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00111ef8)();\n  return iVar1;\n}\n\n", 
    "0010a210": "\nulong next_prime(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = is_prime(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00111e68)();\n  return pcVar1;\n}\n\n", 
    "001028ec": "\nvoid safe_hasher_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00111fa8)();\n  return iVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00111f18)();\n  return iVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00111e88)();\n  return iVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwuid(__uid_t __uid)\n\n{\n  passwd *ppVar1;\n  \n  ppVar1 = (passwd *)(*(code *)PTR_getpwuid_00111df8)();\n  return ppVar1;\n}\n\n", 
    "00103180": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = program_name;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\n                      \"Usage: %s [OPTION]... GROUP FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Change the group of each FILE to GROUP.\\nWith --reference, change the group of each FILE to that of RFILE.\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -c, --changes          like verbose but report only when a change is made\\n  -f, --silent, --quiet  suppress most error messages\\n  -v, --verbose          output a diagnostic for every file processed\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --dereference      affect the referent of each symbolic link (this is\\n                         the default), rather than the symbolic link itself\\n  -h, --no-dereference   affect symbolic links instead of any referenced file\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"                         (useful only on systems that can change the\\n                         ownership of a symlink)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --no-preserve-root  do not treat \\'/\\' specially (the default)\\n      --preserve-root    fail to operate recursively on \\'/\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --reference=RFILE  use RFILE\\'s group rather than specifying a\\n                         GROUP value\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -R, --recursive        operate on files and directories recursively\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nThe following options modify how a hierarchy is traversed when the -R\\noption is also specified.  If more than one is specified, only the final\\none takes effect.\\n\\n  -H                     if a command line argument is a symbolic link\\n                         to a directory, traverse it\\n  -L                     traverse every symbolic link to a directory\\n                         encountered\\n  -P                     do not traverse any symbolic links (default)\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    uVar2 = program_name;\n    uVar3 = dcgettext(0,\n                      \"\\nExamples:\\n  %s staff /u      Change the group of /u to \\\"staff\\\".\\n  %s -hR staff /u  Change the group of /u and subfiles to \\\"staff\\\".\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00106690": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00102e10": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00111ed8)();\n  return iVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00111e48)();\n  return sVar1;\n}\n\n", 
    "0010b5b0": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010b61f;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010b61f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00111db8)();\n  return iVar1;\n}\n\n", 
    "00113078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010ba6c": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "001064f0": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00111df0)();\n  return iVar1;\n}\n\n", 
    "0010a660": "\nundefined8 hash_get_n_entries(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "00113070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* stpcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00111fa0)();\n  return iVar1;\n}\n\n", 
    "00102760": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00111f10)();\n  return;\n}\n\n", 
    "00109d80": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00111e80)();\n  return pvVar1;\n}\n\n", 
    "0010b400": "\nundefined4 i_ring_push(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar3 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar4 = *(int *)(param_1 + 0x14) + uVar3 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar4 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar4;\n  if (*(uint *)(param_1 + 0x18) == uVar4) {\n    *(uint *)(param_1 + 0x18) = uVar3 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n", 
    "00107da0": "\nvoid cwd_advance_fd(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\nLAB_00107dec:\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = i_ring_push(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      goto LAB_00107dec;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n", 
    "00109b40": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        fts_lfree();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                              &DAT_0010dba2);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = fts_build(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            cwd_advance_fd(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = fts_build(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "00106560": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00111db0)();\n  return piVar1;\n}\n\n", 
    "0010a3c0": "\nvoid free_entry_isra_0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010a4e0": "\nvoid allocate_entry_isra_0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrnam(char *__name)\n\n{\n  group *pgVar1;\n  \n  pgVar1 = (group *)(*(code *)PTR_getgrnam_00111ed0)();\n  return pgVar1;\n}\n\n", 
    "001025c0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00111e40)();\n  return;\n}\n\n", 
    "001038f0": "\nvoid gid_to_name(__gid_t param_1)\n\n{\n  group *pgVar1;\n  char *pcVar2;\n  long in_FS_OFFSET;\n  undefined auStack_28 [24];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  pgVar1 = getgrgid(param_1);\n  if (pgVar1 == (group *)0x0) {\n    pcVar2 = (char *)umaxtostr(param_1,auStack_28);\n  }\n  else {\n    pcVar2 = pgVar1->gr_name;\n  }\n  xstrdup(pcVar2);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107e10": "\nuint restore_initial_cwd(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      cwd_advance_fd(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  fd_ring_clear(param_1 + 0x60);\n  return uVar2;\n}\n\n", 
    "001064e0": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "00106f60": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "00113088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104b40": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00111e78)();\n  return;\n}\n\n", 
    "00102510": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00111de8)();\n  return;\n}\n\n", 
    "0010b640": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint rpl_fcntl(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010b6c4;\n  }\n  if (have_dupfd_cloexec_3397 < 0) {\n    iVar2 = rpl_fcntl(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, have_dupfd_cloexec_3397 != -1)) goto LAB_0010b6c4;\nLAB_0010b701:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010b6c4;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = rpl_fcntl(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010b6c4;\n        have_dupfd_cloexec_3397 = -1;\n        __fd = iVar2;\n        goto LAB_0010b701;\n      }\n    }\n    have_dupfd_cloexec_3397 = 1;\n  }\nLAB_0010b6c4:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103600": "\nvoid describe_change(undefined8 param_1,int param_2,undefined8 param_3,undefined8 param_4,\n                    long param_5,long param_6)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  if (param_2 == 1) {\n    uVar2 = quotearg_style(4,param_1);\n    uVar3 = dcgettext(0,\"neither symbolic link %s nor referent has been changed\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    return;\n  }\n  pvVar1 = (void *)user_group_str(param_5,param_6);\n  if (param_6 == 0) {\n    param_4 = 0;\n  }\n  if (param_5 == 0) {\n    __ptr = (void *)user_group_str(0,param_4);\n    if (param_2 != 3) {\n      if (param_2 == 4) {\n        if (param_6 == 0) {\n          uVar2 = dcgettext(0,\"ownership of %s retained\\n\",5);\n        }\n        else {\n          uVar2 = dcgettext(0,\"group of %s retained as %s\\n\",5);\n        }\n      }\n      else {\n        if (param_2 != 2) {\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\n        if (param_6 == 0) {\n          uVar2 = dcgettext(0,\"no change to ownership of %s\\n\",5);\n        }\n        else {\n          uVar2 = dcgettext(0,\"changed group of %s from %s to %s\\n\",5);\n        }\n      }\n      goto code_r0x00102464;\n    }\n    if (__ptr != (void *)0x0) {\n      if (param_6 == 0) {\n        uVar2 = dcgettext(0,\"failed to change ownership of %s\\n\",5);\n      }\n      else {\n        uVar2 = dcgettext(0,\"failed to change group of %s from %s to %s\\n\",5);\n      }\n      goto code_r0x00102464;\n    }\n    pcVar4 = \"failed to change group of %s to %s\\n\";\n    if (param_6 == 0) {\n      pcVar4 = \"failed to change ownership of %s\\n\";\n    }\n  }\n  else {\n    __ptr = (void *)user_group_str(param_3,param_4);\n    if (param_2 != 3) {\n      if (param_2 == 4) {\n        uVar2 = dcgettext(0,\"ownership of %s retained as %s\\n\",5);\n      }\n      else {\n        if (param_2 != 2) {\n          describe_change_cold();\n          return;\n        }\n        uVar2 = dcgettext(0,\"changed ownership of %s from %s to %s\\n\",5);\n      }\n      goto code_r0x00102464;\n    }\n    if (__ptr != (void *)0x0) {\n      uVar2 = dcgettext(0,\"failed to change ownership of %s from %s to %s\\n\",5);\n      goto code_r0x00102464;\n    }\n    pcVar4 = \"failed to change ownership of %s to %s\\n\";\n  }\n  uVar2 = dcgettext(0,pcVar4,5);\n  __ptr = pvVar1;\n  pvVar1 = (void *)0x0;\ncode_r0x00102464:\n  uVar3 = quotearg_style(4,param_1);\n  __printf_chk(1,uVar2,uVar3,__ptr,pvVar1);\n  free(__ptr);\n  (*(code *)PTR_free_00111fb8)(pvVar1);\n  return;\n}\n\n", 
    "0010a670": "\nulong hash_get_max_bucket_length(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n"
}