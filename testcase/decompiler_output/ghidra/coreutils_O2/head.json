{
    "00106870": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00107960": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104450": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar3 = program_name;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n    __printf_chk(1,uVar2,uVar3);\n    uVar3 = dcgettext(0,\n                      \"Print the first %d lines of each FILE to standard output.\\nWith more than one FILE, precede each with a header giving the file name.\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,10);\n    emit_stdin_note();\n    emit_mandatory_arg_note();\n    uVar3 = dcgettext(0,\n                      \"  -c, --bytes=[-]NUM       print the first NUM bytes of each file;\\n                             with the leading \\'-\\', print all but the last\\n                             NUM bytes of each file\\n  -n, --lines=[-]NUM       print the first NUM lines instead of the first %d;\\n                             with the leading \\'-\\', print all but the last\\n                             NUM lines of each file\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,10);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -q, --quiet, --silent    never print headers giving file names\\n  -v, --verbose            always print headers giving file names\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"  -z, --zero-terminated    line delimiter is NUL, not newline\\n\",5\n                              );\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nNUM may have a multiplier suffix:\\nb 512, kB 1000, K 1024, MB 1000*1000, M 1024*1024,\\nGB 1000*1000*1000, G 1024*1024*1024, and so on for T, P, E, Z, Y.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar3);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00102390": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010ce50)();\n  return piVar1;\n}\n\n", 
    "00107280": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00102c70": "\nvoid emit_mandatory_arg_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00104f70": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00108931;\n      }\n      else {\n        pcVar2 = &DAT_0010892e;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00108935;\n    }\n    else {\n      pcVar2 = &DAT_0010892a;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "001067f0": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102b50": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010cfe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00107a40": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00106740": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "00102380": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010ce48)();\n  return;\n}\n\n", 
    "00102bf0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_0010cff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00104dd0": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106860": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010ce38)();\n  return;\n}\n\n", 
    "00107150": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010e1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001065a0": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00103e70": "\nbyte elide_tail_bytes_file_isra_0\n               (undefined8 param_1,undefined4 param_2,ulong param_3,long param_4,long *param_5,\n               long param_6)\n\n{\n  int iVar1;\n  ulong uVar2;\n  void **__ptr;\n  ulong uVar3;\n  int *piVar4;\n  void *pvVar5;\n  void *__ptr_00;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  ulong uVar13;\n  uint uVar14;\n  byte bVar15;\n  void **ppvVar16;\n  byte bVar17;\n  byte bVar18;\n  void **ppvVar19;\n  ulong uVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  long lStack_98;\n  long lStack_88;\n  void *pvStack_58;\n  long lStack_50;\n  long lStack_40;\n  \n  bVar15 = (byte)((ulong)param_6 >> 0x3f) | presume_input_pipe;\n  if (bVar15 == 0) {\n    lVar8 = *param_5;\n    if (0x1fffffffffffffff < lVar8 - 1U) {\n      lVar8 = 0x200;\n    }\n    if (lVar8 < param_4) {\n      uVar10 = param_4 - param_6;\n      if ((long)uVar10 < 0) {\n        uVar10 = 0;\n      }\n      if ((param_3 < uVar10) && (iVar1 = copy_fd(param_2,uVar10 - param_3), iVar1 != 0)) {\n        diagnose_copy_fd_failure(iVar1,param_1);\n      }\n      else {\n        bVar15 = 1;\n      }\n      return bVar15;\n    }\n  }\n  lStack_40 = *(long *)(in_FS_OFFSET + 0x28);\n  lStack_98 = param_6;\n  if (0x100000 < param_3) {\n    uVar13 = 0;\n    __ptr = (void **)0x0;\n    uVar9 = (ulong)((uint)param_3 & 0x1fff);\n    lStack_88 = 0;\n    uVar2 = 0x2000 - uVar9;\n    uVar20 = 1;\n    uVar11 = param_3 + uVar2 >> 0xd;\n    uVar10 = uVar11 + 1;\n    bVar18 = 0;\n    bVar17 = 0;\nLAB_00103978:\n    uVar12 = 0x10;\n    if (uVar10 < 0x11) {\n      uVar12 = uVar10;\n    }\nLAB_0010398a:\n    __ptr = (void **)xnrealloc(__ptr,uVar12,8);\n    ppvVar16 = __ptr + uVar13;\n    if (bVar17 == 0) goto LAB_00103a42;\nLAB_001039bc:\n    uVar3 = full_read(param_2,*ppvVar16,0x2000);\n    bVar15 = 0;\n    if ((0x1fff < uVar3) || (piVar4 = __errno_location(), bVar15 = bVar17, *piVar4 == 0)) {\n      do {\n        bVar18 = 1;\n        bVar17 = 1;\n        lStack_98 = lStack_98 + uVar3;\n        xwrite_stdout(__ptr[uVar20],uVar3);\n        uVar13 = uVar20;\n        do {\n          uVar20 = (uVar13 + 1) % uVar10;\n          if (bVar15 != 0) {\n            if (bVar18 == 0) {\n              if (uVar11 == uVar13) {\n                lStack_98 = lStack_98 + (uVar3 - uVar9);\n                xwrite_stdout(__ptr[uVar20]);\n              }\n            }\n            else {\n              lStack_98 = lStack_98 + uVar2;\n              if (uVar2 < 0x2000 - uVar3) {\n                xwrite_stdout((long)__ptr[uVar13] + uVar3,uVar2);\n                bVar15 = bVar17;\n              }\n              else {\n                xwrite_stdout((long)__ptr[uVar13] + uVar3);\n                xwrite_stdout(__ptr[uVar20],uVar3 - uVar9);\n                bVar15 = bVar18;\n              }\n            }\n            goto LAB_00103b20;\n          }\n          if (uVar12 == uVar13) {\n            if (uVar12 == 0) goto LAB_00103978;\n            bVar21 = uVar10 >> 1 < uVar12;\n            uVar12 = uVar12 * 2;\n            if (bVar21) {\n              uVar12 = uVar10;\n            }\n            goto LAB_0010398a;\n          }\n          ppvVar16 = __ptr + uVar13;\n          if (bVar18 != 0) goto LAB_001039bc;\nLAB_00103a42:\n          pvVar5 = (void *)xmalloc(0x2000);\n          *ppvVar16 = pvVar5;\n          lStack_88 = uVar13 + 1;\n          uVar3 = full_read(param_2,pvVar5,0x2000);\n          if (uVar3 < 0x2000) {\n            piVar4 = __errno_location();\n            if (*piVar4 != 0) goto LAB_00103d30;\n            bVar15 = 1;\n          }\n          else {\n            bVar15 = 0;\n          }\n          bVar21 = uVar11 != uVar13;\n          uVar13 = uVar20;\n        } while (bVar21);\n      } while( true );\n    }\nLAB_00103d30:\n    uVar6 = quotearg_style(4,param_1);\n    uVar7 = dcgettext(0,\"error reading %s\",5);\n    error(0,*piVar4,uVar7,uVar6);\n    bVar15 = 0;\nLAB_00103b20:\n    ppvVar16 = __ptr;\n    if (lStack_88 != 0) {\n      do {\n        ppvVar19 = ppvVar16 + 1;\n        free(*ppvVar16);\n        ppvVar16 = ppvVar19;\n      } while (__ptr + lStack_88 != ppvVar19);\n    }\n    free(__ptr);\nLAB_00103bea:\n    if ((-1 < param_6) && (lVar8 = elseek(param_2,lStack_98,0,param_1), lVar8 < 0)) {\n      bVar15 = 0;\n    }\n    if (lStack_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return bVar15;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  uVar10 = param_3 + 0x2000;\n  uVar14 = 0;\n  bVar15 = 1;\n  __ptr_00 = (void *)xnmalloc(2,uVar10,param_3,0);\n  lStack_50 = (long)__ptr_00 + uVar10;\n  pvVar5 = __ptr_00;\n  pvStack_58 = __ptr_00;\nLAB_00103ba0:\n  uVar2 = full_read(param_2,pvVar5,uVar10);\n  uVar13 = param_3;\n  if (uVar2 < uVar10) {\n    piVar4 = __errno_location();\n    if (*piVar4 != 0) {\n      uVar6 = quotearg_style(4,param_1);\n      uVar7 = dcgettext(0,\"error reading %s\",5);\n      bVar15 = 0;\n      error(0,*piVar4,uVar7,uVar6);\nLAB_00103be0:\n      free(__ptr_00);\n      goto LAB_00103bea;\n    }\n    if (param_3 < uVar2) {\n      if (bVar15 != 0) {\n        lStack_98 = lStack_98 + (uVar2 - param_3);\n        xwrite_stdout(pvVar5,uVar2 - param_3);\n        goto LAB_00103be0;\n      }\n      bVar15 = 1;\n    }\n    else {\n      if (bVar15 != 0) goto LAB_00103be0;\n      bVar15 = 1;\n      uVar13 = uVar2;\n    }\nLAB_00103c73:\n    lStack_98 = lStack_98 + uVar13;\n    xwrite_stdout((long)(&pvStack_58)[uVar14 ^ 1] + 0x2000);\n    if (param_3 < uVar2) {\nLAB_00103ccb:\n      lStack_98 = lStack_98 + (uVar2 - param_3);\n      xwrite_stdout(pvVar5);\n    }\n    if (bVar15 != 0) goto LAB_00103be0;\n  }\n  else {\n    if (bVar15 == 0) goto LAB_00103c73;\n    if (param_3 < uVar2) {\n      bVar15 = 0;\n      goto LAB_00103ccb;\n    }\n  }\n  uVar14 = uVar14 ^ 1;\n  bVar15 = 0;\n  pvVar5 = (&pvStack_58)[uVar14];\n  goto LAB_00103ba0;\n}\n\n", 
    "001079f0": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00107b50": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "001026b9": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106890": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106770": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "001026b4": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107f00": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001075a0": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "001041b0": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  long lVar4;\n  undefined **ppuVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  undefined1 *puVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar7 = (byte *)0x108734;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_001086ba;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar5 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar7 == (byte *)0x0;\n    if (bVar10) break;\n    lVar4 = 5;\n    pbVar6 = &DAT_001086b5;\n    do {\n      if (lVar4 == 0) break;\n      lVar4 = lVar4 + -1;\n      bVar9 = *pbVar6 < *pbVar7;\n      bVar10 = *pbVar6 == *pbVar7;\n      pbVar6 = pbVar6 + 1;\n      pbVar7 = pbVar7 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar7 = *(byte **)((long)ppuVar5 + 0x20);\n    ppuVar5 = (undefined **)((long)ppuVar5 + 0x10);\n  }\n  puVar8 = *(undefined1 **)((long)ppuVar5 + 0x18);\n  if (puVar8 == (undefined1 *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar8 = &DAT_001086b5;\n        goto LAB_001043ce;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar8 = &DAT_001086b5;\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_001086b5);\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_001043ce:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,&DAT_001086b5);\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_001086b5);\n    if (puVar8 != &DAT_001086b5) {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,puVar8,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107b80": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0010cf88)();\n  return iVar1;\n}\n\n", 
    "00106520": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00106400": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00103250": "\nundefined8 copy_fd(undefined4 param_1,ulong param_2)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  undefined auStack_2038 [8200];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0) {\n    do {\n      uVar3 = 0x2000;\n      if (param_2 < 0x2001) {\n        uVar3 = param_2;\n      }\n      lVar1 = safe_read(param_1,auStack_2038,uVar3);\n      if (lVar1 == -1) {\n        uVar2 = 1;\n        goto LAB_001032e1;\n      }\n      param_2 = param_2 - lVar1;\n      if ((lVar1 == 0) && (param_2 != 0)) {\n        uVar2 = 2;\n        goto LAB_001032e1;\n      }\n      xwrite_stdout(auStack_2038,lVar1);\n    } while (param_2 != 0);\n  }\n  uVar2 = 0;\nLAB_001032e1:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "00106760": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "001026a5": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001026a0": "\nvoid diagnose_copy_fd_failure_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107a50": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00107c90": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00103320": "\nundefined8 head_lines(undefined8 param_1,int param_2,long param_3)\n\n{\n  int iVar1;\n  long lVar2;\n  __off_t _Var3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  long lVar7;\n  long in_FS_OFFSET;\n  stat sStack_20d8;\n  char local_2048 [8200];\n  long local_40;\n  long lVar8;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 == 0) {\nLAB_001034af:\n    uVar4 = 1;\n  }\n  else {\n    while( true ) {\n      lVar2 = safe_read(param_2,local_2048,0x2000);\n      if (lVar2 == -1) break;\n      if (lVar2 == 0) goto LAB_001034af;\n      lVar8 = 0;\n      do {\n        lVar7 = lVar8 + 1;\n        if ((local_2048[lVar8] == line_end) && (param_3 = param_3 + -1, param_3 == 0)) {\n          _Var3 = lseek(param_2,lVar7 - lVar2,1);\n          if (_Var3 < 0) {\n            iVar1 = fstat(param_2,&sStack_20d8);\n            if ((iVar1 != 0) || ((sStack_20d8.st_mode & 0xf000) == 0x8000)) {\n              elseek(param_2,lVar7 - lVar2,1,param_1);\n            }\n          }\n          xwrite_stdout(local_2048,lVar7);\n          uVar4 = 1;\n          goto LAB_001033f8;\n        }\n        lVar8 = lVar7;\n      } while (lVar2 != lVar7);\n      xwrite_stdout(local_2048);\n    }\n    uVar4 = quotearg_style(4,param_1);\n    uVar5 = dcgettext(0,\"error reading %s\",5);\n    piVar6 = __errno_location();\n    error(0,*piVar6,uVar5,uVar4);\n    uVar4 = 0;\n  }\nLAB_001033f8:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106950": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00104ec0": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00102590": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010cf50)();\n  return;\n}\n\n", 
    "00102ce0": "\nvoid string_to_integer(char param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  \n  if (param_1 == '\\0') {\n    uVar1 = dcgettext(0,\"invalid number of bytes\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"invalid number of lines\",5);\n  }\n  xdectoumax(param_2,0,0xffffffffffffffff,\"bkKmMGTPEZY0\",uVar1,0);\n  return;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0010cec0)();\n  return pcVar1;\n}\n\n", 
    "00107ab0": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00107240": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "00102c30": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001023f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ce80)();\n  return iVar1;\n}\n\n", 
    "0010e080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107b20": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "001070a0": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102bb0": "\n/* WARNING: Removing unreachable block (ram,0x00102bd4) */\n/* WARNING: Removing unreachable block (ram,0x00102be0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00106940": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_0010cf48)();\n  return iVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010ceb8)();\n  return sVar1;\n}\n\n", 
    "00107aa0": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00107230": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "00107bc0": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00106ad0": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00107350": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00107ce0": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106260": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "00102d40": "\n__off_t elseek(int param_1,__off_t param_2,int param_3,undefined8 param_4)\n\n{\n  __off_t _Var1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  char *pcVar6;\n  long in_FS_OFFSET;\n  undefined auStack_48 [24];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  _Var1 = lseek(param_1,param_2,param_3);\n  if (_Var1 < 0) {\n    uVar2 = offtostr(param_2,auStack_48);\n    uVar3 = quotearg_n_style_colon(0,3,param_4);\n    pcVar6 = \"%s: cannot seek to offset %s\";\n    if (param_3 != 0) {\n      pcVar6 = \"%s: cannot seek to relative offset %s\";\n    }\n    uVar4 = dcgettext(0,pcVar6,5);\n    piVar5 = __errno_location();\n    error(0,*piVar5,uVar4,uVar3,uVar2);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return _Var1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ce78)();\n  return;\n}\n\n", 
    "0010e098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010ced0)();\n  return _Var1;\n}\n\n", 
    "00102370": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010ce40)();\n  return;\n}\n\n", 
    "00107ad0": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010e060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102e90": "\nundefined4 elide_tail_lines_pipe(undefined8 param_1,undefined4 param_2,ulong param_3,long param_4)\n\n{\n  void *pvVar1;\n  size_t __n;\n  void *pvVar2;\n  void *pvVar3;\n  ulong uVar4;\n  long lVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  int *piVar8;\n  int iVar9;\n  long lVar10;\n  undefined4 uVar11;\n  void *local_78;\n  ulong local_68;\n  long local_58;\n  void *local_50;\n  \n  local_78 = (void *)xmalloc(0x2018);\n  *(undefined8 *)((long)local_78 + 0x2008) = 0;\n  *(undefined8 *)((long)local_78 + 0x2000) = 0;\n  *(undefined8 *)((long)local_78 + 0x2010) = 0;\n  pvVar1 = (void *)xmalloc(0x2018);\n  local_68 = 0;\n  pvVar3 = pvVar1;\n  local_58 = param_4;\n  local_50 = local_78;\n  while (__n = safe_read(param_2,pvVar3,0x2000), __n - 1 < 0xfffffffffffffffe) {\n    if (param_3 == 0) {\n      local_58 = local_58 + __n;\n      xwrite_stdout(pvVar3,__n);\n    }\n    else {\n      *(size_t *)((long)pvVar1 + 0x2000) = __n;\n      *(undefined8 *)((long)pvVar1 + 0x2008) = 0;\n      iVar9 = (int)line_end;\n      *(undefined8 *)((long)pvVar1 + 0x2010) = 0;\n      pvVar2 = pvVar3;\n      lVar5 = 0;\n      while( true ) {\n        pvVar2 = memchr(pvVar2,iVar9,(long)pvVar3 + (__n - (long)pvVar2));\n        if (pvVar2 == (void *)0x0) break;\n        *(long *)((long)pvVar1 + 0x2008) = lVar5 + 1;\n        pvVar2 = (void *)((long)pvVar2 + 1);\n        lVar5 = lVar5 + 1;\n      }\n      local_68 = local_68 + lVar5;\n      if (*(long *)((long)local_78 + 0x2000) + __n < 0x2000) {\n        memcpy((void *)(*(long *)((long)local_78 + 0x2000) + (long)local_78),pvVar3,__n);\n        *(long *)((long)local_78 + 0x2000) =\n             *(long *)((long)local_78 + 0x2000) + *(long *)((long)pvVar1 + 0x2000);\n        *(long *)((long)local_78 + 0x2008) =\n             *(long *)((long)local_78 + 0x2008) + *(long *)((long)pvVar1 + 0x2008);\n      }\n      else {\n        *(void **)((long)local_78 + 0x2010) = pvVar1;\n        local_78 = pvVar1;\n        if (param_3 < local_68 - *(long *)((long)local_50 + 0x2008)) {\n          local_58 = local_58 + *(long *)((long)local_50 + 0x2000);\n          xwrite_stdout(local_50);\n          local_68 = local_68 - *(long *)((long)local_50 + 0x2008);\n          pvVar1 = local_50;\n          pvVar3 = local_50;\n          local_50 = *(void **)((long)local_50 + 0x2010);\n        }\n        else {\n          pvVar3 = (void *)xmalloc(0x2018);\n          pvVar1 = pvVar3;\n        }\n      }\n    }\n  }\n  free(pvVar1);\n  if (__n == 0xffffffffffffffff) {\n    uVar6 = quotearg_style(4,param_1);\n    uVar7 = dcgettext(0,\"error reading %s\",5);\n    piVar8 = __errno_location();\n    uVar11 = 0;\n    error(0,*piVar8,uVar7,uVar6);\n    if (local_50 == (void *)0x0) goto LAB_00103194;\n  }\n  else {\n    if ((*(long *)((long)local_78 + 0x2000) != 0) &&\n       (*(char *)((long)local_78 + *(long *)((long)local_78 + 0x2000) + -1) != line_end)) {\n      *(long *)((long)local_78 + 0x2008) = *(long *)((long)local_78 + 0x2008) + 1;\n      local_68 = local_68 + 1;\n    }\n    uVar4 = local_68 - *(long *)((long)local_50 + 0x2008);\n    pvVar1 = local_50;\n    while (param_3 < uVar4) {\n      local_58 = local_58 + *(long *)((long)pvVar1 + 0x2000);\n      xwrite_stdout(pvVar1);\n      local_68 = local_68 - *(long *)((long)pvVar1 + 0x2008);\n      pvVar1 = *(void **)((long)pvVar1 + 0x2010);\n      uVar4 = local_68 - *(long *)((long)pvVar1 + 0x2008);\n    }\n    if (param_3 < local_68) {\n      lVar5 = *(long *)((long)pvVar1 + 0x2000);\n      iVar9 = (int)line_end;\n      lVar10 = local_68 - param_3;\n      pvVar3 = pvVar1;\n      do {\n        pvVar3 = memchr(pvVar3,iVar9,(long)pvVar1 + (lVar5 - (long)pvVar3));\n        if (pvVar3 == (void *)0x0) break;\n        *(long *)((long)pvVar1 + 0x2008) = *(long *)((long)pvVar1 + 0x2008) + 1;\n        pvVar3 = (void *)((long)pvVar3 + 1);\n        lVar10 = lVar10 + -1;\n      } while (lVar10 != 0);\n      local_58 = (long)pvVar3 + (local_58 - (long)pvVar1);\n      xwrite_stdout(pvVar1);\n    }\n    uVar11 = 1;\n  }\n  do {\n    pvVar1 = *(void **)((long)local_50 + 0x2010);\n    free(local_50);\n    local_50 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\nLAB_00103194:\n  if ((-1 < param_4) && (lVar5 = elseek(param_2,local_58,0,param_1), lVar5 < 0)) {\n    uVar11 = 0;\n  }\n  return uVar11;\n}\n\n", 
    "001045f0": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "0010e180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107a20": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010e068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107b40": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "001071e0": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "0010e188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___0010cfe8;\n  if (PTR___gmon_start___0010cfe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___0010cfe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00106960": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010cec8)();\n  return pcVar1;\n}\n\n", 
    "00102360": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010cff8)();\n  return;\n}\n\n", 
    "00107010": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107ac0": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00106af0": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00107370": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001066a0": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "00102c40": "\nvoid emit_stdin_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00104d00": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001045e0": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "0010e190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "0010e070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00107e90": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010e198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010cfc0)();\n  return iVar1;\n}\n\n", 
    "0010e0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010cf30)();\n  return pvVar1;\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010cea0)();\n  return sVar1;\n}\n\n", 
    "00102ca0": "\nvoid write_header(undefined8 param_1)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = \"\";\n  if (first_file_6942 == '\\0') {\n    pcVar1 = \"\\n\";\n  }\n  __printf_chk(1,\"%s==> %s <==\\n\",pcVar1,param_1);\n  first_file_6942 = 0;\n  return;\n}\n\n", 
    "00104730": "\nchar * offtostr(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "00107200": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00106aa0": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00107440": "\nulong xnumtoumax(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  ulong uVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  long in_FS_OFFSET;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = xstrtoumax(param_1,0,param_2,&local_48);\n  uVar1 = local_48;\n  if (iVar2 == 0) {\n    if ((param_3 <= local_48) && (local_48 <= param_4)) goto LAB_001074ea;\n    piVar3 = __errno_location();\n    *piVar3 = (-(uint)(uVar1 < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar3 = __errno_location();\n    if (iVar2 == 1) {\n      *piVar3 = 0x4b;\n    }\n    else if (iVar2 == 3) {\n      *piVar3 = 0;\n    }\n  }\n  uVar4 = quote(param_1);\n  iVar2 = *piVar3;\n  if (iVar2 == 0x16) {\n    iVar2 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n  error(param_7,iVar2,\"%s: %s\",param_6,uVar4);\nLAB_001074ea:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_48;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107dd0": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0010e0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "00103e00": "\nbool usable_st_size_isra_0(uint param_1)\n\n{\n  return (param_1 & 0xd000) == 0x8000;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memrchr_0010cf80)();\n  return pvVar1;\n}\n\n", 
    "001048f0": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_0010cef0)();\n  return pvVar1;\n}\n\n", 
    "0010e160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ce60)();\n  return;\n}\n\n", 
    "001046b0": "\nlong full_read(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = safe_read(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n", 
    "0010e040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001047d0": "\nchar * umaxtostr(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00106b10": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00107d20": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00107d8f;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00107d8f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00104a50": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010e168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104600": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00104688;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00104688:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "00102660": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010cfb8)();\n  return;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010cf28)();\n  return iVar1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010ce98)();\n  return sVar1;\n}\n\n", 
    "00104960": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00106460": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "00103f10": "\nuint head(undefined8 param_1,int param_2,undefined8 param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  long lVar7;\n  long in_FS_OFFSET;\n  undefined auStack_c8 [152];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (print_headers != '\\0') {\n    write_header();\n  }\n  if (param_5 == '\\0') {\n    if (param_4 == '\\0') {\n      uVar2 = head_bytes();\n    }\n    else {\n      uVar2 = head_lines(param_1,param_2,param_3);\n    }\n  }\n  else {\n    iVar3 = fstat(param_2,(stat *)auStack_c8);\n    if (iVar3 == 0) {\n      uVar2 = (uint)presume_input_pipe;\n      if (presume_input_pipe == 0) {\n        cVar1 = usable_st_size_isra_0(auStack_c8._24_4_);\n        lVar7 = -1;\n        if ((cVar1 != '\\0') && (lVar7 = elseek(param_2,0,1,param_1), lVar7 < 0)) goto LAB_00103f67;\n      }\n      else {\n        lVar7 = -1;\n      }\n      if (param_4 == '\\0') {\n        uVar2 = elide_tail_bytes_file_isra_0\n                          (param_1,param_2,param_3,auStack_c8._48_8_,auStack_c8 + 0x38,lVar7);\n      }\n      else {\n        uVar2 = elide_tail_lines_file_isra_0();\n      }\n    }\n    else {\n      uVar4 = quotearg_style(4,param_1);\n      uVar5 = dcgettext(0,\"cannot fstat %s\",5);\n      piVar6 = __errno_location();\n      uVar2 = 0;\n      error(0,*piVar6,uVar5,uVar4);\n    }\n  }\nLAB_00103f67:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "0010e170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoumax@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010cf78)();\n  return;\n}\n\n", 
    "0010e050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010cee8)();\n  return iVar1;\n}\n\n", 
    "001023a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010ce58)();\n  return iVar1;\n}\n\n", 
    "00106b00": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "001073b0": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "0010e178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102410": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ce90)();\n  return;\n}\n\n", 
    "00104830": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102450": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010ceb0)();\n  return;\n}\n\n", 
    "0010e0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010cfd0)();\n  return ppuVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010cf40)();\n  return pcVar1;\n}\n\n", 
    "00107340": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "0010e0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n  (*(code *)PTR_clearerr_unlocked_0010ce70)();\n  return;\n}\n\n", 
    "001034c0": "\nundefined8 head_bytes(undefined8 param_1,undefined4 param_2,ulong param_3)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  undefined auStack_2048 [8200];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 != 0) {\n    uVar5 = 0x2000;\n    do {\n      if (param_3 < uVar5) {\n        uVar5 = param_3;\n      }\n      lVar1 = safe_read(param_2,auStack_2048,uVar5);\n      if (lVar1 == -1) {\n        uVar2 = quotearg_style(4,param_1);\n        uVar3 = dcgettext(0,\"error reading %s\",5);\n        piVar4 = __errno_location();\n        error(0,*piVar4,uVar3,uVar2);\n        uVar2 = 0;\n        goto LAB_0010359d;\n      }\n      if (lVar1 == 0) break;\n      xwrite_stdout(auStack_2048,lVar1);\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  uVar2 = 1;\nLAB_0010359d:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107c20": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010cf00)();\n  return iVar1;\n}\n\n", 
    "00106b30": "\nssize_t safe_read(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7ff00001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "001073e0": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00104b90": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "0010e020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106920": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010cf38)();\n  return iVar1;\n}\n\n", 
    "00103650": "\nulong elide_tail_lines_seekable\n                (undefined8 param_1,undefined4 param_2,long param_3,size_t param_4,long param_5)\n\n{\n  size_t sVar1;\n  long lVar2;\n  size_t sVar3;\n  void *pvVar4;\n  long lVar5;\n  ulong uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  int *piVar9;\n  size_t sVar10;\n  int iVar11;\n  long in_FS_OFFSET;\n  undefined8 local_2050;\n  undefined local_2048 [8200];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = (long)(param_5 - param_4) % 0x2000;\n  lVar5 = 0x2000;\n  if (lVar2 != 0) {\n    lVar5 = lVar2;\n  }\n  sVar10 = param_5 - lVar5;\n  local_2050 = param_4;\n  lVar2 = elseek(param_2,sVar10,0,param_1);\n  if (-1 < lVar2) {\n    sVar3 = safe_read(param_2,local_2048,lVar5);\n    if (sVar3 != 0xffffffffffffffff) {\n      iVar11 = (int)line_end;\n      lVar5 = param_3;\n      if (((param_3 != 0) && (sVar3 != 0)) && (local_2048[sVar3 - 1] != line_end)) {\n        lVar5 = param_3 + -1;\n      }\njoined_r0x00103723:\n      do {\n        if (sVar3 == 0) {\nLAB_00103728:\n          if (sVar10 != local_2050) {\n            sVar10 = sVar10 - 0x2000;\n            lVar2 = elseek(param_2,sVar10,0,param_1);\n            if (lVar2 < 0) goto LAB_00103818;\n            sVar3 = safe_read(param_2,local_2048,0x2000);\n            if (sVar3 == 0xffffffffffffffff) break;\n            if (sVar3 != 0) {\n              iVar11 = (int)line_end;\n              goto joined_r0x00103723;\n            }\n          }\n          uVar6 = 1;\n          goto LAB_0010381a;\n        }\n        if (param_3 == 0) {\n          sVar3 = sVar3 - 1;\n          sVar1 = local_2050;\n        }\n        else {\n          pvVar4 = memrchr(local_2048,iVar11,sVar3);\n          if (pvVar4 == (void *)0x0) goto LAB_00103728;\n          sVar3 = (long)pvVar4 - (long)local_2048;\n          sVar1 = local_2050;\n        }\n        local_2050 = sVar3;\n        if (lVar5 == 0) goto LAB_001037c8;\n        lVar5 = lVar5 + -1;\n        sVar3 = local_2050;\n        local_2050 = sVar1;\n      } while( true );\n    }\n    uVar7 = quotearg_style(4,param_1);\n    uVar8 = dcgettext(0,\"error reading %s\",5);\n    piVar9 = __errno_location();\n    error(0,*piVar9,uVar8,uVar7);\n    uVar6 = 0;\n    goto LAB_0010381a;\n  }\nLAB_00103818:\n  uVar6 = 0;\nLAB_0010381a:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar6;\nLAB_001037c8:\n  sVar3 = local_2050;\n  if ((long)sVar1 < (long)sVar10) {\n    lVar5 = elseek(param_2,sVar1,0,param_1);\n    if (lVar5 < 0) goto LAB_00103818;\n    iVar11 = copy_fd(param_2,sVar10 - sVar1);\n    sVar3 = local_2050;\n    sVar1 = local_2050;\n    if (iVar11 != 0) {\n      diagnose_copy_fd_failure(iVar11,param_1);\n      uVar6 = 0;\n      goto LAB_0010381a;\n    }\n  }\n  local_2050 = sVar1;\n  xwrite_stdout(local_2048,sVar3 + 1);\n  uVar6 = elseek(param_2,sVar10 + sVar3 + 1,0,param_1);\n  uVar6 = ~uVar6 >> 0x3f;\n  goto LAB_0010381a;\n}\n\n", 
    "00102440": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010cea8)();\n  return;\n}\n\n", 
    "0010e0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107ba0": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010cfc8)();\n  return iVar1;\n}\n\n", 
    "00106ab0": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00107570": "\nbool bkm_scale(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "0010e0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106480": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00103e10": "\nulong elide_tail_lines_file_isra_0\n                (undefined8 param_1,undefined4 param_2,ulong param_3,long param_4,long *param_5,\n                long param_6)\n\n{\n  void *pvVar1;\n  size_t __n;\n  void *pvVar2;\n  void *pvVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  int iVar8;\n  long lVar9;\n  long lVar10;\n  uint uVar11;\n  void *pvStack_78;\n  ulong uStack_68;\n  long lStack_58;\n  void *pvStack_50;\n  \n  if ((presume_input_pipe == '\\0') && (-1 < param_6)) {\n    lVar10 = *param_5;\n    if (0x1fffffffffffffff < lVar10 - 1U) {\n      lVar10 = 0x200;\n    }\n    if (lVar10 < param_4) {\n      if (param_4 <= param_6) {\n        return 1;\n      }\n      uVar4 = elide_tail_lines_seekable();\n      return uVar4;\n    }\n  }\n  pvStack_78 = (void *)xmalloc(0x2018);\n  *(undefined8 *)((long)pvStack_78 + 0x2008) = 0;\n  *(undefined8 *)((long)pvStack_78 + 0x2000) = 0;\n  *(undefined8 *)((long)pvStack_78 + 0x2010) = 0;\n  pvVar1 = (void *)xmalloc(0x2018);\n  uStack_68 = 0;\n  pvVar3 = pvVar1;\n  lStack_58 = param_6;\n  pvStack_50 = pvStack_78;\n  while (__n = safe_read(param_2,pvVar3,0x2000), __n - 1 < 0xfffffffffffffffe) {\n    if (param_3 == 0) {\n      lStack_58 = lStack_58 + __n;\n      xwrite_stdout(pvVar3,__n);\n    }\n    else {\n      *(size_t *)((long)pvVar1 + 0x2000) = __n;\n      *(undefined8 *)((long)pvVar1 + 0x2008) = 0;\n      iVar8 = (int)line_end;\n      *(undefined8 *)((long)pvVar1 + 0x2010) = 0;\n      pvVar2 = pvVar3;\n      lVar10 = 0;\n      while( true ) {\n        pvVar2 = memchr(pvVar2,iVar8,(long)pvVar3 + (__n - (long)pvVar2));\n        if (pvVar2 == (void *)0x0) break;\n        *(long *)((long)pvVar1 + 0x2008) = lVar10 + 1;\n        pvVar2 = (void *)((long)pvVar2 + 1);\n        lVar10 = lVar10 + 1;\n      }\n      uStack_68 = uStack_68 + lVar10;\n      if (*(long *)((long)pvStack_78 + 0x2000) + __n < 0x2000) {\n        memcpy((void *)(*(long *)((long)pvStack_78 + 0x2000) + (long)pvStack_78),pvVar3,__n);\n        *(long *)((long)pvStack_78 + 0x2000) =\n             *(long *)((long)pvStack_78 + 0x2000) + *(long *)((long)pvVar1 + 0x2000);\n        *(long *)((long)pvStack_78 + 0x2008) =\n             *(long *)((long)pvStack_78 + 0x2008) + *(long *)((long)pvVar1 + 0x2008);\n      }\n      else {\n        *(void **)((long)pvStack_78 + 0x2010) = pvVar1;\n        pvStack_78 = pvVar1;\n        if (param_3 < uStack_68 - *(long *)((long)pvStack_50 + 0x2008)) {\n          lStack_58 = lStack_58 + *(long *)((long)pvStack_50 + 0x2000);\n          xwrite_stdout(pvStack_50);\n          uStack_68 = uStack_68 - *(long *)((long)pvStack_50 + 0x2008);\n          pvVar1 = pvStack_50;\n          pvVar3 = pvStack_50;\n          pvStack_50 = *(void **)((long)pvStack_50 + 0x2010);\n        }\n        else {\n          pvVar3 = (void *)xmalloc(0x2018);\n          pvVar1 = pvVar3;\n        }\n      }\n    }\n  }\n  free(pvVar1);\n  if (__n == 0xffffffffffffffff) {\n    uVar5 = quotearg_style(4,param_1);\n    uVar6 = dcgettext(0,\"error reading %s\",5);\n    piVar7 = __errno_location();\n    uVar11 = 0;\n    error(0,*piVar7,uVar6,uVar5);\n    if (pvStack_50 == (void *)0x0) goto LAB_00103194;\n  }\n  else {\n    if ((*(long *)((long)pvStack_78 + 0x2000) != 0) &&\n       (*(char *)((long)pvStack_78 + *(long *)((long)pvStack_78 + 0x2000) + -1) != line_end)) {\n      *(long *)((long)pvStack_78 + 0x2008) = *(long *)((long)pvStack_78 + 0x2008) + 1;\n      uStack_68 = uStack_68 + 1;\n    }\n    uVar4 = uStack_68 - *(long *)((long)pvStack_50 + 0x2008);\n    pvVar1 = pvStack_50;\n    while (param_3 < uVar4) {\n      lStack_58 = lStack_58 + *(long *)((long)pvVar1 + 0x2000);\n      xwrite_stdout(pvVar1);\n      uStack_68 = uStack_68 - *(long *)((long)pvVar1 + 0x2008);\n      pvVar1 = *(void **)((long)pvVar1 + 0x2010);\n      uVar4 = uStack_68 - *(long *)((long)pvVar1 + 0x2008);\n    }\n    if (param_3 < uStack_68) {\n      lVar10 = *(long *)((long)pvVar1 + 0x2000);\n      iVar8 = (int)line_end;\n      lVar9 = uStack_68 - param_3;\n      pvVar3 = pvVar1;\n      do {\n        pvVar3 = memchr(pvVar3,iVar8,(long)pvVar1 + (lVar10 - (long)pvVar3));\n        if (pvVar3 == (void *)0x0) break;\n        *(long *)((long)pvVar1 + 0x2008) = *(long *)((long)pvVar1 + 0x2008) + 1;\n        pvVar3 = (void *)((long)pvVar3 + 1);\n        lVar9 = lVar9 + -1;\n      } while (lVar9 != 0);\n      lStack_58 = (long)pvVar3 + (lStack_58 - (long)pvVar1);\n      xwrite_stdout(pvVar1);\n    }\n    uVar11 = 1;\n  }\n  do {\n    pvVar1 = *(void **)((long)pvStack_50 + 0x2010);\n    free(pvStack_50);\n    pvStack_50 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\nLAB_00103194:\n  if ((-1 < param_6) && (lVar10 = elseek(param_2,lStack_58,0,param_1), lVar10 < 0)) {\n    uVar11 = 0;\n  }\n  return (ulong)uVar11;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0010cef8)();\n  return sVar1;\n}\n\n", 
    "001035d0": "\nvoid diagnose_copy_fd_failure(int param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  char *pcVar4;\n  \n  if (param_1 == 1) {\n    uVar1 = quotearg_style(4);\n    pcVar4 = \"error reading %s\";\n  }\n  else {\n    if (param_1 != 2) {\n      diagnose_copy_fd_failure_cold();\n      return;\n    }\n    uVar1 = quotearg_n_style_colon(0,3,param_2);\n    pcVar4 = \"%s: file has shrunk too much\";\n  }\n  uVar2 = dcgettext(0,pcVar4,5);\n  piVar3 = __errno_location();\n  error(0,*piVar3,uVar2,uVar1);\n  return;\n}\n\n", 
    "001023c0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ce68)();\n  return;\n}\n\n", 
    "0010e150": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a00": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106b20": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "001072b0": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010730b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010730b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010e158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* clearerr_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107400": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e128": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106790": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010cf60)();\n  return pvVar1;\n}\n\n", 
    "0010e0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_0010cf98)();\n  return uVar1;\n}\n\n", 
    "0010e120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010cf08)();\n  return iVar1;\n}\n\n", 
    "0010e000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* read@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106780": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106ff0": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "0010e0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint main(int param_1,undefined8 *param_2)\n\n{\n  byte *pbVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  char *pcVar9;\n  char *pcVar10;\n  char *pcVar11;\n  undefined1 *puVar12;\n  uint uVar13;\n  undefined *puVar14;\n  char *pcVar15;\n  undefined8 in_R9;\n  undefined8 in_R10;\n  uint uVar16;\n  undefined8 *puVar17;\n  long lVar18;\n  char cVar19;\n  long in_FS_OFFSET;\n  undefined auVar20 [16];\n  undefined8 uStack_68;\n  undefined auStack_60 [4];\n  uint local_5c;\n  undefined local_58 [24];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  atexit(close_stdout);\n  have_read_stdin = '\\0';\n  print_headers = 0;\n  line_end = 10;\n  if ((1 < param_1) && (pcVar15 = (char *)param_2[1], puVar17 = param_2, *pcVar15 == '-'))\n  goto LAB_001028a9;\nLAB_00102756:\n  cVar19 = '\\x01';\n  lVar18 = 10;\n  iVar5 = 0;\n  do {\n    local_5c = local_5c & 0xffffff00;\n    uVar3 = 0x1087f8;\nLAB_00102770:\n    pcVar15 = (char *)0x0;\n    uVar2 = getopt_long(param_1,param_2,\"c:n:qvz0123456789\",long_options);\n    if (uVar2 == 0xffffffff) {\n      if ((iVar5 == 1) || ((iVar5 == 0 && (optind < param_1 + -1)))) {\n        print_headers = 1;\n      }\n      if (((cVar19 == '\\0') && ((char)local_5c != '\\0')) && (lVar18 < 0)) {\n        uVar7 = umaxtostr(lVar18,local_58);\n        uVar7 = quote(uVar7);\n        uVar8 = dcgettext(0,\"invalid number of bytes\",5);\n        auVar20 = error(1,0x4b,\"%s: %s\",uVar8,uVar7);\n        uVar7 = uStack_68;\n        uStack_68 = SUB168(auVar20,0);\n        (*(code *)PTR___libc_start_main_0010cfe0)\n                  (main,uVar7,auStack_60,__libc_csu_init,__libc_csu_fini,SUB168(auVar20 >> 0x40,0),\n                   &uStack_68);\n        do {\n                    /* WARNING: Do nothing block with infinite loop */\n        } while( true );\n      }\n      if (optind < param_1) {\n        puVar12 = (undefined1 *)(param_2 + optind);\n        puVar14 = *(undefined **)puVar12;\n        if (puVar14 == (undefined *)0x0) {\n          uVar16 = 1;\n          goto LAB_00102a0d;\n        }\n      }\n      else {\n        puVar12 = default_file_list_7148;\n        puVar14 = &DAT_00108742;\n      }\n      uVar3 = local_5c & 0xff;\n      uVar13 = local_5c & 0xff;\n      uVar16 = 1;\n      do {\n        puVar12 = (undefined1 *)((long)puVar12 + 8);\n        uVar2 = uVar13;\n        uVar4 = head_file(puVar14,lVar18,cVar19);\n        puVar14 = *(undefined **)puVar12;\n        uVar16 = uVar16 & uVar4;\n      } while (puVar14 != (undefined *)0x0);\nLAB_00102a0d:\n      if ((have_read_stdin == '\\0') || (iVar5 = close(0), -1 < iVar5)) {\n        if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n          __stack_chk_fail();\n        }\n        return uVar16 ^ 1;\n      }\n      piVar6 = __errno_location();\n      error(1,*piVar6,&DAT_00108742);\n      goto switchD_001027c0_caseD_64;\n    }\n    if (0x80 < (int)uVar2) goto switchD_001027c0_caseD_64;\n    if (0x62 < (int)uVar2) {\n      switch(uVar2) {\n      case 99:\n        local_5c = local_5c & 0xffffff00 | (uint)(*optarg == '-');\n        if (*optarg == '-') {\n          optarg = optarg + 1;\n        }\n        cVar19 = '\\0';\n        lVar18 = string_to_integer(0);\n        break;\n      default:\n        goto switchD_001027c0_caseD_64;\n      case 0x6e:\n        local_5c = local_5c & 0xffffff00 | (uint)(*optarg == '-');\n        if (*optarg == '-') {\n          optarg = optarg + 1;\n        }\n        cVar19 = '\\x01';\n        lVar18 = string_to_integer(1);\n        break;\n      case 0x71:\n        iVar5 = 2;\n        break;\n      case 0x76:\n        iVar5 = 1;\n        break;\n      case 0x7a:\n        line_end = 0;\n        break;\n      case 0x80:\n        presume_input_pipe = 1;\n      }\n      goto LAB_00102770;\n    }\n    if (uVar2 == 0xffffff7d) {\n      version_etc(stdout,&DAT_001086b5,\"GNU coreutils\",Version,\"David MacKenzie\",\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (uVar2 != 0xffffff7e) {\nswitchD_001027c0_caseD_64:\n      if (9 < uVar2 - 0x30) goto LAB_00102a8d;\n      local_5c = uVar2;\n      uVar7 = dcgettext(0,\"invalid trailing option -- %c\",5);\n      uVar2 = local_5c;\n      goto LAB_00102abd;\n    }\n    usage();\n    puVar17 = param_2;\nLAB_001028a9:\n    param_2 = puVar17;\n    if (9 < (int)pcVar15[1] - 0x30U) goto LAB_00102756;\n    pcVar10 = pcVar15 + 1;\n    do {\n      pcVar9 = pcVar10;\n      uVar3 = (uint)pcVar9[1];\n      pcVar10 = pcVar9 + 1;\n    } while (uVar3 - 0x30 < 10);\n    if (pcVar9[1] == '\\0') {\n      cVar19 = '\\x01';\n      iVar5 = 0;\n    }\n    else {\n      in_R9 = 0;\n      in_R10 = 10;\n      uVar2 = 0;\n      cVar19 = '\\x01';\n      iVar5 = 0;\n      pcVar11 = pcVar10;\n      do {\n        switch(uVar3 - 0x62 & 0xff) {\n        case 0:\n        case 9:\n        case 0xb:\n          cVar19 = '\\0';\n          uVar2 = uVar3;\n          break;\n        case 1:\n          uVar2 = 0;\n          cVar19 = '\\0';\n          break;\n        default:\n          do {\n            if ((char)in_R9 != '\\0') {\n              line_end = (undefined)in_R10;\n            }\n            uVar7 = dcgettext(0,\"invalid trailing option -- %c\",5);\n            uVar2 = (int)(char)uVar3;\nLAB_00102abd:\n            error(0,0,uVar7,uVar2);\nLAB_00102a8d:\n            usage(1);\n          } while( true );\n        case 10:\n          cVar19 = '\\x01';\n          break;\n        case 0xf:\n          iVar5 = 2;\n          break;\n        case 0x14:\n          iVar5 = 1;\n          break;\n        case 0x18:\n          in_R9 = 1;\n          in_R10 = 0;\n        }\n        pbVar1 = (byte *)(pcVar11 + 1);\n        uVar3 = (uint)*pbVar1;\n        pcVar11 = pcVar11 + 1;\n      } while (*pbVar1 != 0);\n      if ((char)in_R9 != '\\0') {\n        line_end = (undefined)in_R10;\n      }\n      *pcVar10 = (char)uVar2;\n      if ((char)uVar2 != '\\0') {\n        pcVar9[2] = '\\0';\n      }\n    }\n    param_2 = puVar17 + 1;\n    param_1 = param_1 + -1;\n    lVar18 = string_to_integer(cVar19,pcVar15 + 1);\n    *param_2 = *puVar17;\n  } while( true );\n}\n\n", 
    "001049c0": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_0010cf58)();\n  return sVar1;\n}\n\n", 
    "001038d0": "\nchar elide_tail_bytes_pipe(undefined8 param_1,undefined4 param_2,ulong param_3,long param_4)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  void **__ptr;\n  ulong uVar3;\n  int *piVar4;\n  void *pvVar5;\n  void *__ptr_00;\n  long lVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  uint uVar13;\n  char cVar14;\n  void **ppvVar15;\n  char cVar16;\n  void **ppvVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  long local_98;\n  long local_88;\n  void *local_58;\n  long local_50;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_98 = param_4;\n  if (0x100000 < param_3) {\n    uVar12 = 0;\n    __ptr = (void **)0x0;\n    uVar9 = (ulong)((uint)param_3 & 0x1fff);\n    local_88 = 0;\n    uVar2 = 0x2000 - uVar9;\n    uVar18 = 1;\n    uVar10 = param_3 + uVar2 >> 0xd;\n    uVar1 = uVar10 + 1;\n    cVar16 = '\\0';\nLAB_00103978:\n    uVar11 = 0x10;\n    if (uVar1 < 0x11) {\n      uVar11 = uVar1;\n    }\nLAB_0010398a:\n    __ptr = (void **)xnrealloc(__ptr,uVar11,8);\n    ppvVar15 = __ptr + uVar12;\n    if (cVar16 == '\\0') goto LAB_00103a42;\nLAB_001039bc:\n    uVar3 = full_read(param_2,*ppvVar15,0x2000);\n    cVar14 = '\\0';\n    if ((0x1fff < uVar3) || (piVar4 = __errno_location(), cVar14 = cVar16, *piVar4 == 0)) {\n      do {\n        cVar16 = '\\x01';\n        local_98 = local_98 + uVar3;\n        xwrite_stdout(__ptr[uVar18],uVar3);\n        uVar12 = uVar18;\n        do {\n          uVar18 = (uVar12 + 1) % uVar1;\n          if (cVar14 != '\\0') {\n            if (cVar16 == '\\0') {\n              if (uVar10 == uVar12) {\n                local_98 = local_98 + (uVar3 - uVar9);\n                xwrite_stdout(__ptr[uVar18]);\n              }\n            }\n            else {\n              local_98 = local_98 + uVar2;\n              cVar14 = cVar16;\n              if (uVar2 < 0x2000 - uVar3) {\n                xwrite_stdout((long)__ptr[uVar12] + uVar3,uVar2);\n              }\n              else {\n                xwrite_stdout((long)__ptr[uVar12] + uVar3);\n                xwrite_stdout(__ptr[uVar18],uVar3 - uVar9);\n              }\n            }\n            goto LAB_00103b20;\n          }\n          if (uVar11 == uVar12) {\n            if (uVar11 == 0) goto LAB_00103978;\n            bVar19 = uVar1 >> 1 < uVar11;\n            uVar11 = uVar11 * 2;\n            if (bVar19) {\n              uVar11 = uVar1;\n            }\n            goto LAB_0010398a;\n          }\n          ppvVar15 = __ptr + uVar12;\n          if (cVar16 != '\\0') goto LAB_001039bc;\nLAB_00103a42:\n          pvVar5 = (void *)xmalloc(0x2000);\n          *ppvVar15 = pvVar5;\n          local_88 = uVar12 + 1;\n          uVar3 = full_read(param_2,pvVar5,0x2000);\n          if (uVar3 < 0x2000) {\n            piVar4 = __errno_location();\n            if (*piVar4 != 0) goto LAB_00103d30;\n            cVar14 = '\\x01';\n          }\n          else {\n            cVar14 = '\\0';\n          }\n          bVar19 = uVar10 != uVar12;\n          uVar12 = uVar18;\n        } while (bVar19);\n      } while( true );\n    }\nLAB_00103d30:\n    uVar7 = quotearg_style(4,param_1);\n    uVar8 = dcgettext(0,\"error reading %s\",5);\n    error(0,*piVar4,uVar8,uVar7);\n    cVar14 = '\\0';\nLAB_00103b20:\n    ppvVar15 = __ptr;\n    if (local_88 != 0) {\n      do {\n        ppvVar17 = ppvVar15 + 1;\n        free(*ppvVar15);\n        ppvVar15 = ppvVar17;\n      } while (__ptr + local_88 != ppvVar17);\n    }\n    free(__ptr);\nLAB_00103bea:\n    if ((-1 < param_4) && (lVar6 = elseek(param_2,local_98,0,param_1), lVar6 < 0)) {\n      cVar14 = '\\0';\n    }\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return cVar14;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  uVar1 = param_3 + 0x2000;\n  uVar13 = 0;\n  cVar14 = '\\x01';\n  __ptr_00 = (void *)xnmalloc(2,uVar1,param_3,0);\n  local_50 = (long)__ptr_00 + uVar1;\n  pvVar5 = __ptr_00;\n  local_58 = __ptr_00;\nLAB_00103ba0:\n  uVar2 = full_read(param_2,pvVar5,uVar1);\n  uVar12 = param_3;\n  if (uVar2 < uVar1) {\n    piVar4 = __errno_location();\n    if (*piVar4 != 0) {\n      uVar7 = quotearg_style(4,param_1);\n      uVar8 = dcgettext(0,\"error reading %s\",5);\n      cVar14 = '\\0';\n      error(0,*piVar4,uVar8,uVar7);\nLAB_00103be0:\n      free(__ptr_00);\n      goto LAB_00103bea;\n    }\n    if (param_3 < uVar2) {\n      if (cVar14 != '\\0') {\n        local_98 = local_98 + (uVar2 - param_3);\n        xwrite_stdout(pvVar5,uVar2 - param_3);\n        goto LAB_00103be0;\n      }\n      cVar14 = '\\x01';\n    }\n    else {\n      if (cVar14 != '\\0') goto LAB_00103be0;\n      cVar14 = '\\x01';\n      uVar12 = uVar2;\n    }\nLAB_00103c73:\n    local_98 = local_98 + uVar12;\n    xwrite_stdout((long)(&local_58)[uVar13 ^ 1] + 0x2000);\n    if (param_3 < uVar2) {\nLAB_00103ccb:\n      local_98 = local_98 + (uVar2 - param_3);\n      xwrite_stdout(pvVar5);\n    }\n    if (cVar14 != '\\0') goto LAB_00103be0;\n  }\n  else {\n    if (cVar14 == '\\0') goto LAB_00103c73;\n    if (param_3 < uVar2) {\n      cVar14 = '\\0';\n      goto LAB_00103ccb;\n    }\n  }\n  uVar13 = uVar13 ^ 1;\n  cVar14 = '\\0';\n  pvVar5 = (&local_58)[uVar13];\n  goto LAB_00103ba0;\n}\n\n", 
    "00107f10": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "001026af": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104c40": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001064c0": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "0010e0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001040a0": "\nulong head_file(char *param_1,undefined8 param_2,undefined param_3,undefined param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  char *pcVar7;\n  \n  if ((*param_1 == '-') && (param_1[1] == '\\0')) {\n    have_read_stdin = 1;\n    uVar3 = dcgettext(0,\"standard input\",5);\n    uVar4 = head(uVar3,0,param_2,param_3,param_4);\n    return uVar4;\n  }\n  iVar1 = open(param_1,0);\n  if (iVar1 < 0) {\n    uVar3 = quotearg_style(4,param_1);\n    pcVar7 = \"cannot open %s for reading\";\n  }\n  else {\n    uVar2 = head(param_1,iVar1,param_2,param_3,param_4);\n    iVar1 = close(iVar1);\n    if (iVar1 == 0) {\n      return (ulong)uVar2;\n    }\n    uVar3 = quotearg_style(4,param_1);\n    pcVar7 = \"failed to close %s\";\n  }\n  uVar5 = dcgettext(0,pcVar7,5);\n  piVar6 = __errno_location();\n  error(0,*piVar6,uVar5,uVar3);\n  return 0;\n}\n\n", 
    "00102b80": "\n/* WARNING: Removing unreachable block (ram,0x00102b93) */\n/* WARNING: Removing unreachable block (ram,0x00102b9f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "0010e130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107a70": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "0010e010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010cf90)();\n  return iVar1;\n}\n\n", 
    "001026aa": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010cfb0)();\n  return sVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010cf20)();\n  return pvVar1;\n}\n\n", 
    "00106ba0": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010907b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106e69;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00106e69:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00106f0b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00106f0b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106cbd;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00106cbd:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00107db0": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "00107540": "\nvoid xdectoumax(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5,undefined8 param_6)\n\n{\n  xnumtoumax(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n", 
    "0010e108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106690": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00104ae0": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010e1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00107f44": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "001025d0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010cf70)();\n  return;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010cee0)();\n  return pvVar1;\n}\n\n", 
    "0010e1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001050a0": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00105527:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00105549;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00105ae6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010549f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00105527;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010549f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_00108949,param_5);\n      local_78 = (char *)gettext_quote(&DAT_00108939);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_001051f0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00105a50_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x001059eb;\n          goto LAB_001057db;\n        default:\nswitchD_00105900_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105cd8;\n              }\n              if (lVar10 == -2) goto joined_r0x001060ea;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_001056c0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105cd8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00105461;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_001059a8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_001059a8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_001059a8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_001056b7;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_001056a4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_001056a4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_001053c8;\n          goto LAB_001056b7;\n        case 0x23:\n        case 0x7e:\nLAB_0010569b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_001056a4;\n          goto LAB_001053c5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00105900_caseD_25;\n        case 0x27:\nswitchD_00105900_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_001053c8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x001053eb;\n          }\n          goto LAB_001056c0;\n        case 0x3f:\nswitchD_00105900_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010604e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_001053c8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x001053eb;\n          }\n          goto LAB_001056c0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_001052f8_caseD_5c;\n          if (!bVar20) {\nLAB_00105938:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00105950;\n          }\n          goto LAB_001056c0;\n        case 0x7b:\n        case 0x7d:\nswitchD_00105900_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010569b;\nLAB_001053c5:\n          bVar23 = false;\n          goto LAB_001053c8;\n        }\nLAB_001057d0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_001057db:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_001053e8;\n          goto LAB_00105310;\n        }\nLAB_00105810:\n        bVar21 = false;\n        goto joined_r0x00105821;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00105a30;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_001052f8_caseD_0;\n          default:\n            goto switchD_00105900_caseD_1;\n          case 7:\n            goto switchD_00105a50_caseD_7;\n          case 8:\n            goto switchD_00105a50_caseD_8;\n          case 9:\n            goto switchD_001052f8_caseD_9;\n          case 10:\n            goto switchD_00105a50_caseD_a;\n          case 0xb:\n            goto switchD_00105a50_caseD_b;\n          case 0xc:\n            goto switchD_00105a50_caseD_c;\n          case 0xd:\n            goto switchD_00105a50_caseD_d;\n          case 0x20:\n            goto LAB_00105a79;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_001052f8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00105a61;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00105308;\n          case 0x27:\n            goto switchD_00105900_caseD_27;\n          case 0x3f:\n            goto switchD_00105900_caseD_3f;\n          case 0x5c:\n            goto switchD_001052f8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00105900_caseD_7b;\n          }\n        }\n        goto LAB_001056ce;\n      }\nLAB_00105a30:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00105a50_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_001052f8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x001053eb;\n            }\nLAB_00105e8b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00105e8b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105ec8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x001053eb;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_001056c0;\n      default:\n        bVar23 = false;\n        goto switchD_00105900_caseD_1;\n      case 7:\nswitchD_00105a50_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00105a50_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_001052f8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_001057d0;\n      case 10:\nswitchD_00105a50_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00105810;\n      case 0xb:\nswitchD_00105a50_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00105810;\n      case 0xc:\nswitchD_00105a50_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00105a50_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00105810;\n      case 0x20:\n        bVar5 = false;\nLAB_00105a79:\n        uVar15 = 0x20;\n        goto LAB_00105308;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_001052f8_caseD_21:\n        bVar22 = false;\n        goto LAB_001053c5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00105a61:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_001053c8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00105310;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00105308:\n        bVar22 = false;\n        goto LAB_00105310;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00105900_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00105900_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_001052f8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00105938;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_001057d0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00105900_caseD_7b;\n      }\n      if (bVar20) goto LAB_00105830;\n      bVar21 = false;\n      goto LAB_00105386;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_001056b7:\n      param_5 = 2;\nLAB_001056c0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_001056ce:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_00105708;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00106155:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00105708:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00105708;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00106155;\nLAB_00105ae6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00105549:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x001059eb:\n  uVar13 = uVar13 + 1;\n  goto LAB_001051f0;\nswitchD_0010604e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105ec8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x001053eb;\n    goto LAB_00105310;\n  }\n  goto LAB_001056ce;\njoined_r0x001060ea:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105cd8:\n  if (1 < uVar17) {\nLAB_00105ce2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_001056c0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00105398;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00105950;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00105461:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105ce2;\n  }\nswitchD_00105900_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_001053c8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00105310:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x001053eb;\n  }\n  else {\nLAB_001053e8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x001053eb:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00105950:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00105398;\n    }\n  }\njoined_r0x00105821:\n  if (bVar20) {\nLAB_00105830:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_001056c0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00105386:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00105398:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_001051f0;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010cf18)();\n  return pvVar1;\n}\n\n", 
    "00102400": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ce88)();\n  return;\n}\n\n", 
    "00104940": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "0010e100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010cfa8)();\n  return;\n}\n\n", 
    "0010e118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106440": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0010ced8)();\n  return;\n}\n\n", 
    "0010e0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102e00": "\nsize_t xwrite_stdout(void *param_1,ulong param_2)\n\n{\n  size_t in_RAX;\n  size_t sVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  void *pvVar5;\n  void *pvVar6;\n  void *pvVar7;\n  ulong uVar8;\n  undefined8 uVar9;\n  ulong extraout_RDX;\n  int iVar10;\n  long lVar11;\n  int iVar12;\n  undefined8 uVar13;\n  uint uVar14;\n  long lVar15;\n  void *pvStack_90;\n  ulong uStack_80;\n  long lStack_70;\n  void *pvStack_68;\n  \n  if (param_2 == 0) {\n    return in_RAX;\n  }\n  sVar1 = fwrite_unlocked(param_1,1,param_2,stdout);\n  if (param_2 <= sVar1) {\n    return sVar1;\n  }\n  clearerr_unlocked(stdout);\n  lVar2 = quotearg_style(4,\"standard output\");\n  uVar3 = dcgettext(0,\"error writing %s\",5);\n  piVar4 = __errno_location();\n  uVar13 = 1;\n  iVar12 = *piVar4;\n  error(1,iVar12,uVar3);\n  pvStack_90 = (void *)xmalloc(0x2018);\n  *(undefined8 *)((long)pvStack_90 + 0x2008) = 0;\n  *(undefined8 *)((long)pvStack_90 + 0x2000) = 0;\n  *(undefined8 *)((long)pvStack_90 + 0x2010) = 0;\n  pvVar5 = (void *)xmalloc(0x2018);\n  uStack_80 = 0;\n  pvVar7 = pvVar5;\n  lStack_70 = lVar2;\n  pvStack_68 = pvStack_90;\n  while (sVar1 = safe_read(iVar12,pvVar7,0x2000), sVar1 - 1 < 0xfffffffffffffffe) {\n    if (extraout_RDX == 0) {\n      lStack_70 = lStack_70 + sVar1;\n      xwrite_stdout(pvVar7,sVar1);\n    }\n    else {\n      *(size_t *)((long)pvVar5 + 0x2000) = sVar1;\n      *(undefined8 *)((long)pvVar5 + 0x2008) = 0;\n      iVar10 = (int)line_end;\n      *(undefined8 *)((long)pvVar5 + 0x2010) = 0;\n      pvVar6 = pvVar7;\n      lVar15 = 0;\n      while( true ) {\n        pvVar6 = memchr(pvVar6,iVar10,(long)pvVar7 + (sVar1 - (long)pvVar6));\n        if (pvVar6 == (void *)0x0) break;\n        *(long *)((long)pvVar5 + 0x2008) = lVar15 + 1;\n        pvVar6 = (void *)((long)pvVar6 + 1);\n        lVar15 = lVar15 + 1;\n      }\n      uStack_80 = uStack_80 + lVar15;\n      if (*(long *)((long)pvStack_90 + 0x2000) + sVar1 < 0x2000) {\n        memcpy((void *)(*(long *)((long)pvStack_90 + 0x2000) + (long)pvStack_90),pvVar7,sVar1);\n        *(long *)((long)pvStack_90 + 0x2000) =\n             *(long *)((long)pvStack_90 + 0x2000) + *(long *)((long)pvVar5 + 0x2000);\n        *(long *)((long)pvStack_90 + 0x2008) =\n             *(long *)((long)pvStack_90 + 0x2008) + *(long *)((long)pvVar5 + 0x2008);\n      }\n      else {\n        *(void **)((long)pvStack_90 + 0x2010) = pvVar5;\n        pvStack_90 = pvVar5;\n        if (extraout_RDX < uStack_80 - *(long *)((long)pvStack_68 + 0x2008)) {\n          lStack_70 = lStack_70 + *(long *)((long)pvStack_68 + 0x2000);\n          xwrite_stdout(pvStack_68);\n          uStack_80 = uStack_80 - *(long *)((long)pvStack_68 + 0x2008);\n          pvVar5 = pvStack_68;\n          pvVar7 = pvStack_68;\n          pvStack_68 = *(void **)((long)pvStack_68 + 0x2010);\n        }\n        else {\n          pvVar7 = (void *)xmalloc(0x2018);\n          pvVar5 = pvVar7;\n        }\n      }\n    }\n  }\n  free(pvVar5);\n  if (sVar1 == 0xffffffffffffffff) {\n    uVar3 = quotearg_style(4,uVar13);\n    uVar9 = dcgettext(0,\"error reading %s\",5);\n    piVar4 = __errno_location();\n    uVar14 = 0;\n    error(0,*piVar4,uVar9,uVar3);\n    if (pvStack_68 == (void *)0x0) goto LAB_00103194;\n  }\n  else {\n    if ((*(long *)((long)pvStack_90 + 0x2000) != 0) &&\n       (*(char *)((long)pvStack_90 + *(long *)((long)pvStack_90 + 0x2000) + -1) != line_end)) {\n      *(long *)((long)pvStack_90 + 0x2008) = *(long *)((long)pvStack_90 + 0x2008) + 1;\n      uStack_80 = uStack_80 + 1;\n    }\n    uVar8 = uStack_80 - *(long *)((long)pvStack_68 + 0x2008);\n    pvVar5 = pvStack_68;\n    while (extraout_RDX < uVar8) {\n      lStack_70 = lStack_70 + *(long *)((long)pvVar5 + 0x2000);\n      xwrite_stdout(pvVar5);\n      uStack_80 = uStack_80 - *(long *)((long)pvVar5 + 0x2008);\n      pvVar5 = *(void **)((long)pvVar5 + 0x2010);\n      uVar8 = uStack_80 - *(long *)((long)pvVar5 + 0x2008);\n    }\n    if (extraout_RDX < uStack_80) {\n      lVar15 = *(long *)((long)pvVar5 + 0x2000);\n      iVar10 = (int)line_end;\n      lVar11 = uStack_80 - extraout_RDX;\n      pvVar7 = pvVar5;\n      do {\n        pvVar7 = memchr(pvVar7,iVar10,(long)pvVar5 + (lVar15 - (long)pvVar7));\n        if (pvVar7 == (void *)0x0) break;\n        *(long *)((long)pvVar5 + 0x2008) = *(long *)((long)pvVar5 + 0x2008) + 1;\n        pvVar7 = (void *)((long)pvVar7 + 1);\n        lVar11 = lVar11 + -1;\n      } while (lVar11 != 0);\n      lStack_70 = (long)pvVar7 + (lStack_70 - (long)pvVar5);\n      xwrite_stdout(pvVar5);\n    }\n    uVar14 = 1;\n  }\n  do {\n    pvVar5 = *(void **)((long)pvStack_68 + 0x2010);\n    free(pvStack_68);\n    pvStack_68 = pvVar5;\n  } while (pvVar5 != (void *)0x0);\nLAB_00103194:\n  if ((-1 < lVar2) && (lVar2 = elseek(iVar12,lStack_70,0,uVar13), lVar2 < 0)) {\n    uVar14 = 0;\n  }\n  return (ulong)uVar14;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010cf68)();\n  return pcVar1;\n}\n\n", 
    "00107e10": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00107f30": "\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstat(1,__fd,__buf);\n  return iVar1;\n}\n\n", 
    "0010e1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001064e0": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001075d0": "\nuint xstrtoumax(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_001076cb;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010770c:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_00107760_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_00107692;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00107736_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00107736_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = bkm_scale(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_00107760_caseD_43;\n        case 0x45:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = bkm_scale(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = bkm_scale(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_00107692;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010770c;\n      }\n    }\n  }\nLAB_001076cb:\n  uVar10 = 4;\nLAB_00107692:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102630": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010cfa0)();\n  return;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010cf10)();\n  return iVar1;\n}\n\n", 
    "0010e110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107a90": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n"
}