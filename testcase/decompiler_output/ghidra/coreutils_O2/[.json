{
    "00107720": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00107960": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00106990": "\nundefined  [16] make_timespec(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00102390": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ee68)();\n  return;\n}\n\n", 
    "00107af0": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "001028d0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_0010efe0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001065b0": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00105f40": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00109bc4": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "001101a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107710": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00105ec0": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00108c70": "\nundefined8 printf_fetchargs(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  undefined1 *puVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  long *plVar9;\n  char **ppcVar10;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar10 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar10 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar10 + 1;\n        }\n        pcVar6 = *ppcVar10;\n        if (pcVar6 == (char *)0x0) {\n          pcVar6 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar6;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          plVar9 = (long *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          plVar9 = *(long **)(param_1 + 2);\n          *(long **)(param_1 + 2) = plVar9 + 1;\n        }\n        puVar5 = (undefined1 *)*plVar9;\n        if (puVar5 == (undefined1 *)0x0) {\n          puVar5 = wide_null_string_2831;\n        }\n        *(undefined1 **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "00110108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102380": "\nvoid error_at_line(void)\n\n{\n  (*(code *)PTR_error_at_line_0010ee60)();\n  return;\n}\n\n", 
    "00102bf0": "\nchar * find_int(char *param_1)\n\n{\n  long lVar1;\n  byte bVar2;\n  ushort **ppuVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  ushort *puVar7;\n  char cVar8;\n  char *pcVar9;\n  \n  ppuVar3 = __ctype_b_loc();\n  puVar7 = *ppuVar3;\n  pcVar9 = param_1;\n  while( true ) {\n    cVar8 = *pcVar9;\n    bVar2 = to_uchar();\n    if ((*(byte *)(puVar7 + bVar2) & 1) == 0) break;\n    pcVar9 = pcVar9 + 1;\n  }\n  if (cVar8 == '+') {\n    pcVar4 = pcVar9 + 1;\n    pcVar9 = pcVar4;\n  }\n  else {\n    pcVar4 = pcVar9 + (cVar8 == '-');\n  }\n  if ((int)*pcVar4 - 0x30U < 10) {\n    cVar8 = pcVar4[1];\n    if (9 < (int)cVar8 - 0x30U) goto LAB_00102c7a;\n    do {\n      cVar8 = pcVar4[2];\n      pcVar4 = pcVar4 + 1;\n    } while ((int)cVar8 - 0x30U < 10);\n    bVar2 = to_uchar();\n    lVar1 = extraout_RDX;\n    for (bVar2 = *(byte *)(puVar7 + bVar2); (bVar2 & 1) != 0; bVar2 = *(byte *)(puVar7 + bVar2)) {\n      cVar8 = *(char *)(lVar1 + 1);\nLAB_00102c7a:\n      bVar2 = to_uchar();\n      lVar1 = extraout_RDX_00;\n    }\n    if (cVar8 == '\\0') {\n      return pcVar9;\n    }\n  }\n  uVar5 = quote(param_1);\n  uVar6 = dcgettext(0,\"invalid integer %s\",5);\n                    /* WARNING: Subroutine does not return */\n  test_syntax_error(uVar6,uVar5);\n}\n\n", 
    "00105fe0": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00106980": "\nvoid strintcmp(void)\n\n{\n  numcompare_constprop_0();\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010ee38)();\n  return;\n}\n\n", 
    "00107150": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00110100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106060": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00107390": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined * xstrcat(long param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  char *__s;\n  size_t sVar4;\n  ulong uVar5;\n  ulong uVar6;\n  undefined *puVar7;\n  int *piVar8;\n  char **ppcVar9;\n  long lVar10;\n  undefined *__dest;\n  long in_FS_OFFSET;\n  ulong local_58;\n  char **ppcStack_50;\n  \n  lVar2 = *(long *)(in_FS_OFFSET + 0x28);\n  local_58 = *param_2;\n  ppcStack_50 = (char **)param_2[1];\n  uVar3 = param_2[2];\n  if (param_1 == 0) {\n    __dest = (undefined *)xmalloc(1);\n    puVar7 = __dest;\n  }\n  else {\n    uVar5 = 0;\n    lVar10 = param_1;\n    do {\n      uVar6 = local_58 & 0xffffffff;\n      if ((uint)local_58 < 0x30) {\n        local_58 = (ulong)((uint)local_58 + 8);\n        ppcVar9 = (char **)(uVar6 + uVar3);\n      }\n      else {\n        ppcVar9 = ppcStack_50;\n        ppcStack_50 = ppcStack_50 + 1;\n      }\n      sVar4 = strlen(*ppcVar9);\n      uVar5 = xsum(uVar5,sVar4);\n      lVar10 = lVar10 + -1;\n    } while (lVar10 != 0);\n    if (0x7fffffff < uVar5) {\n      piVar8 = __errno_location();\n      puVar7 = (undefined *)0x0;\n      *piVar8 = 0x4b;\n      goto LAB_001074a4;\n    }\n    puVar7 = (undefined *)xmalloc(uVar5 + 1);\n    __dest = puVar7;\n    do {\n      uVar1 = *(uint *)param_2;\n      if (uVar1 < 0x30) {\n        ppcVar9 = (char **)((ulong)uVar1 + param_2[2]);\n        *(uint *)param_2 = uVar1 + 8;\n      }\n      else {\n        ppcVar9 = (char **)param_2[1];\n        param_2[1] = (ulong)(ppcVar9 + 1);\n      }\n      __s = *ppcVar9;\n      sVar4 = strlen(__s);\n      memcpy(__dest,__s,sVar4);\n      __dest = __dest + sVar4;\n      param_1 = param_1 + -1;\n    } while (param_1 != 0);\n  }\n  *__dest = 0;\nLAB_001074a4:\n  if (lVar2 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return puVar7;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001066c0": "\nuint numcompare_constprop_0(byte *param_1,byte *param_2)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  byte bVar3;\n  byte bVar4;\n  long lVar5;\n  uint uVar6;\n  uint uVar7;\n  ulong uVar8;\n  ulong uVar9;\n  uint uVar10;\n  \n  uVar6 = (uint)*param_1;\n  bVar3 = *param_2;\n  uVar7 = (uint)bVar3;\n  if (*param_1 == 0x2d) {\n    do {\n      bVar4 = param_1[1];\n      param_1 = param_1 + 1;\n    } while (bVar4 == 0x30);\n    uVar6 = (uint)bVar4;\n    uVar10 = bVar4 - 0x30;\n    if (bVar3 != 0x2d) {\n      if (uVar10 < 10) {\n        return 0xffffffff;\n      }\n      while ((char)uVar7 == '0') {\n        param_2 = param_2 + 1;\n        uVar7 = (uint)*param_2;\n      }\n      return -(uint)(uVar7 - 0x30 < 10);\n    }\n    do {\n      bVar3 = param_2[1];\n      uVar7 = (uint)bVar3;\n      param_2 = param_2 + 1;\n    } while (bVar3 == 0x30);\n    if (bVar4 == bVar3) {\n      do {\n        if (9 < uVar10) {\n          uVar6 = uVar7 - uVar6;\n          goto LAB_00106961;\n        }\n        bVar3 = param_1[1];\n        uVar6 = (uint)bVar3;\n        pbVar1 = param_2 + 1;\n        uVar7 = (uint)*pbVar1;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n        uVar10 = bVar3 - 0x30;\n      } while (bVar3 == *pbVar1);\n    }\n    uVar6 = uVar7 - uVar6;\n    if (uVar10 < 10) {\n      uVar9 = 0;\n      do {\n        lVar5 = uVar9 + 1;\n        uVar9 = uVar9 + 1;\n      } while (param_1[lVar5] - 0x30 < 10);\n      if (9 < uVar7 - 0x30) {\n        return -(uint)(uVar9 != 0);\n      }\n    }\n    else {\nLAB_00106961:\n      uVar9 = 0;\n      if (9 < uVar7 - 0x30) {\n        return 0;\n      }\n    }\n    uVar8 = 0;\n    do {\n      lVar5 = uVar8 + 1;\n      uVar8 = uVar8 + 1;\n    } while (param_2[lVar5] - 0x30 < 10);\n    if (uVar8 == uVar9) {\n      if (uVar8 == 0) {\n        uVar6 = 0;\n      }\n    }\n    else {\n      uVar6 = (-(uint)(uVar9 < uVar8) & 2) - 1;\n    }\n  }\n  else {\n    if (bVar3 == 0x2d) {\n      do {\n        pbVar1 = param_2 + 1;\n        param_2 = param_2 + 1;\n      } while (*pbVar1 == 0x30);\n      if (9 < *pbVar1 - 0x30) {\n        while ((char)uVar6 == '0') {\n          param_1 = param_1 + 1;\n          uVar6 = (uint)*param_1;\n        }\n        return (uint)(uVar6 - 0x30 < 10);\n      }\n      return 1;\n    }\n    while ((char)uVar6 == '0') {\n      param_1 = param_1 + 1;\n      uVar6 = (uint)*param_1;\n    }\n    while ((char)uVar7 == '0') {\n      param_2 = param_2 + 1;\n      uVar7 = (uint)*param_2;\n    }\n    uVar10 = uVar6 - 0x30;\n    if ((char)uVar7 == (char)uVar6) {\n      do {\n        if (9 < uVar10) {\n          uVar6 = uVar6 - uVar7;\n          goto LAB_00106945;\n        }\n        pbVar1 = param_1 + 1;\n        uVar6 = (uint)*pbVar1;\n        pbVar2 = param_2 + 1;\n        uVar7 = (uint)*pbVar2;\n        param_1 = param_1 + 1;\n        param_2 = param_2 + 1;\n        uVar10 = uVar6 - 0x30;\n      } while (*pbVar1 == *pbVar2);\n    }\n    uVar6 = uVar6 - uVar7;\n    if (uVar10 < 10) {\n      uVar9 = 0;\n      do {\n        lVar5 = uVar9 + 1;\n        uVar9 = uVar9 + 1;\n      } while (param_1[lVar5] - 0x30 < 10);\n      if (9 < uVar7 - 0x30) {\n        return (uint)(uVar9 != 0);\n      }\n    }\n    else {\nLAB_00106945:\n      uVar9 = 0;\n      if (9 < uVar7 - 0x30) {\n        return 0;\n      }\n    }\n    uVar8 = 0;\n    do {\n      lVar5 = uVar8 + 1;\n      uVar8 = uVar8 + 1;\n    } while (param_2[lVar5] - 0x30 < 10);\n    if (uVar9 != uVar8) {\n      return -(uint)(uVar9 < uVar8) | 1;\n    }\n    if (uVar9 == 0) {\n      uVar6 = 0;\n    }\n  }\n  return uVar6;\n}\n\n", 
    "001079f0": "\nlong xsum(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "00102b40": "\nvoid test_syntax_error(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                      undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                      undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12\n                      ,undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  undefined8 local_c0;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c0 = *(undefined8 *)(in_FS_OFFSET + 0x28);\n  local_d0 = &stack0x00000008;\n  local_c8 = local_b8;\n  local_d8 = 8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  verror(0,0,param_9,&local_d8);\n                    /* WARNING: Subroutine does not return */\n  exit(2);\n}\n\n", 
    "00107a30": "\nvoid xsum4(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = xsum();\n  uVar1 = xsum(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  xsum(uVar1,in_RCX);\n  return;\n}\n\n", 
    "00107b50": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00102930": "\nundefined8 test_unop(char *param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = 0;\n  if (*param_1 == '-') {\n    switch(param_1[1]) {\n    case 'G':\n    case 'L':\n    case 'N':\n    case 'O':\n    case 'S':\n    case 'a':\n    case 'b':\n    case 'c':\n    case 'd':\n    case 'e':\n    case 'f':\n    case 'g':\n    case 'h':\n    case 'k':\n    case 'n':\n    case 'o':\n    case 'p':\n    case 'r':\n    case 's':\n    case 't':\n    case 'u':\n    case 'w':\n    case 'x':\n    case 'z':\n      uVar1 = 1;\n      break;\n    default:\n      return 0;\n    }\n  }\n  return uVar1;\n}\n\n", 
    "00106410": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00107740": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00103ad0": "\nuint and(void)\n\n{\n  char *pcVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = 1;\n  while( true ) {\n    uVar2 = term();\n    uVar3 = uVar3 & uVar2;\n    if (argc <= pos) {\n      return uVar3;\n    }\n    pcVar1 = *(char **)(argv + (long)pos * 8);\n    if (*pcVar1 != '-') {\n      return uVar3;\n    }\n    if (pcVar1[1] != 'a') {\n      return uVar3;\n    }\n    if (pcVar1[2] != '\\0') break;\n    advance(0);\n  }\n  return uVar3;\n}\n\n", 
    "00107180": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "00105d20": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "001075a0": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001065d0": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001076c0": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00107a60": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00107acf;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00107acf:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00102600": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010efa0)();\n  return;\n}\n\n", 
    "00106400": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00108e90": "\nundefined8 printf_parse(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_00108f0b:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_00108fe0:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_00109037;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_00108fe0;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_00108fe0;\n  }\n  goto switchD_001090c2_caseD_26;\nLAB_00109037:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_0010904b:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_00109054;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_00109054;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0010922c;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_001090c2_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0010922c:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_001090c2_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_00109247:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_00109054:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x001090b1;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_00109054;\n      }\n      goto LAB_00109436;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)xsum(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010989a;\nLAB_00109a6a:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010999e:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_00109247;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00109a6a;\n        goto LAB_0010999e;\n      }\n      goto LAB_00109a9f;\n    }\n    goto LAB_00109aa3;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_001092be;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_001090c2_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_001092be:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_001090c2_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_0010935e:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_00109436;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_0010904b;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)xsum(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_00109aa3;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_001098e1;\n      goto LAB_0010935a;\n    }\n    goto LAB_00109aa3;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_001098e1:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_0010935a:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_0010935e;\n  }\n  goto LAB_0010989a;\ncode_r0x001090b1:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_001090c2_caseD_25;\n  default:\n    goto switchD_001090c2_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_001090c2_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_00109436;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_0010910b:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_00109436:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_001090c2_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_00108f0b;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_00109a9f:\n      __src = (byte **)param_3[1];\n      goto LAB_00109aa3;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_001091d8;\n        goto LAB_0010976a;\n      }\n      goto LAB_00109a9f;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_0010976a:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_001091d8:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_00108f0b;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_001098aa;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)xsum(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010989a;\nLAB_00109721:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_001096d8:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010910b;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00109721;\n        goto LAB_001096d8;\n      }\n      goto LAB_00109a9f;\n    }\nLAB_00109aa3:\n    if (ppbVar2 == __src) goto LAB_0010989a;\n  }\n  free(__src);\nLAB_0010989a:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_001098aa:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "00107850": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00107290": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "00103b30": "\nuint or(void)\n\n{\n  char *pcVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = 0;\n  while( true ) {\n    uVar2 = and();\n    uVar3 = uVar3 | uVar2;\n    if (argc <= pos) {\n      return uVar3;\n    }\n    pcVar1 = *(char **)(argv + (long)pos * 8);\n    if (*pcVar1 != '-') {\n      return uVar3;\n    }\n    if (pcVar1[1] != 'o') {\n      return uVar3;\n    }\n    if (pcVar1[2] != '\\0') break;\n    advance(0);\n  }\n  return uVar3;\n}\n\n", 
    "001065c0": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "001078f0": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00109bb0": "\nint lstat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __lxstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00107a50": "\nulong xmax(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "00102830": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010efc8)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00103320": "\nundefined  [16] get_stat_mtime_isra_0(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00104650": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102590": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010ef68)();\n  return;\n}\n\n", 
    "00102ce0": "\nvoid beyond(void)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  \n  uVar1 = quote(*(undefined8 *)(argv + -8 + (long)argc * 8));\n  uVar2 = dcgettext(0,\"missing argument after %s\",5);\n                    /* WARNING: Subroutine does not return */\n  test_syntax_error(uVar2,uVar1);\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010eed8)();\n  return pvVar1;\n}\n\n", 
    "00102350": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010ee48)();\n  return;\n}\n\n", 
    "00104890": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001029b0": "\nbool binop(byte *param_1)\n\n{\n  byte bVar1;\n  int iVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  bool bVar8;\n  bool bVar9;\n  \n  if ((*param_1 != 0x3d) || (bVar9 = true, param_1[1] != 0)) {\n    bVar1 = *param_1;\n    if ((bVar1 == 0x21) && ((param_1[1] == 0x3d && (param_1[2] == 0)))) {\n      return true;\n    }\n    bVar6 = bVar1 < 0x3d;\n    bVar8 = bVar1 == 0x3d;\n    if (bVar8) {\n      bVar6 = param_1[1] < 0x3d;\n      bVar8 = param_1[1] == 0x3d;\n      if (bVar8) {\n        bVar6 = false;\n        bVar8 = param_1[2] == 0;\n        if (bVar8) {\n          return true;\n        }\n      }\n    }\n    lVar3 = 4;\n    bVar9 = true;\n    pbVar4 = param_1;\n    pbVar5 = &DAT_0010a1a4;\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar8 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + 1;\n      pbVar5 = pbVar5 + 1;\n    } while (bVar8);\n    bVar7 = false;\n    bVar6 = (!bVar6 && !bVar8) == bVar6;\n    if (!bVar6) {\n      lVar3 = 4;\n      pbVar4 = param_1;\n      pbVar5 = &DAT_0010a1a8;\n      do {\n        if (lVar3 == 0) break;\n        lVar3 = lVar3 + -1;\n        bVar7 = *pbVar4 < *pbVar5;\n        bVar6 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + 1;\n        pbVar5 = pbVar5 + 1;\n      } while (bVar6);\n      bVar8 = false;\n      bVar6 = (!bVar7 && !bVar6) == bVar7;\n      if (!bVar6) {\n        lVar3 = 4;\n        pbVar4 = param_1;\n        pbVar5 = &DAT_0010a1ac;\n        do {\n          if (lVar3 == 0) break;\n          lVar3 = lVar3 + -1;\n          bVar8 = *pbVar4 < *pbVar5;\n          bVar6 = *pbVar4 == *pbVar5;\n          pbVar4 = pbVar4 + 1;\n          pbVar5 = pbVar5 + 1;\n        } while (bVar6);\n        bVar7 = false;\n        bVar6 = (!bVar8 && !bVar6) == bVar8;\n        if (!bVar6) {\n          lVar3 = 4;\n          pbVar4 = param_1;\n          pbVar5 = &DAT_0010a1b0;\n          do {\n            if (lVar3 == 0) break;\n            lVar3 = lVar3 + -1;\n            bVar7 = *pbVar4 < *pbVar5;\n            bVar6 = *pbVar4 == *pbVar5;\n            pbVar4 = pbVar4 + 1;\n            pbVar5 = pbVar5 + 1;\n          } while (bVar6);\n          bVar8 = false;\n          bVar6 = (!bVar7 && !bVar6) == bVar7;\n          if (!bVar6) {\n            lVar3 = 4;\n            pbVar4 = param_1;\n            pbVar5 = &DAT_0010a1b4;\n            do {\n              if (lVar3 == 0) break;\n              lVar3 = lVar3 + -1;\n              bVar8 = *pbVar4 < *pbVar5;\n              bVar6 = *pbVar4 == *pbVar5;\n              pbVar4 = pbVar4 + 1;\n              pbVar5 = pbVar5 + 1;\n            } while (bVar6);\n            bVar7 = false;\n            bVar6 = (!bVar8 && !bVar6) == bVar8;\n            if (!bVar6) {\n              lVar3 = 4;\n              pbVar4 = param_1;\n              pbVar5 = &DAT_0010a1b8;\n              do {\n                if (lVar3 == 0) break;\n                lVar3 = lVar3 + -1;\n                bVar7 = *pbVar4 < *pbVar5;\n                bVar6 = *pbVar4 == *pbVar5;\n                pbVar4 = pbVar4 + 1;\n                pbVar5 = pbVar5 + 1;\n              } while (bVar6);\n              bVar8 = false;\n              bVar6 = (!bVar7 && !bVar6) == bVar7;\n              if (!bVar6) {\n                lVar3 = 4;\n                pbVar4 = param_1;\n                pbVar5 = &DAT_0010a1bc;\n                do {\n                  if (lVar3 == 0) break;\n                  lVar3 = lVar3 + -1;\n                  bVar8 = *pbVar4 < *pbVar5;\n                  bVar6 = *pbVar4 == *pbVar5;\n                  pbVar4 = pbVar4 + 1;\n                  pbVar5 = pbVar5 + 1;\n                } while (bVar6);\n                if (((!bVar8 && !bVar6) != bVar8) &&\n                   (iVar2 = strcmp((char *)param_1,\"-gt\"), iVar2 != 0)) {\n                  iVar2 = strcmp((char *)param_1,\"-ge\");\n                  bVar9 = iVar2 == 0;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return bVar9;\n}\n\n", 
    "00107bd0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * vasnprintf(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = printf_parse(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_00108403;\n  }\n  iVar5 = printf_fetchargs(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_00108403;\n  }\n  uVar6 = xsum4(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_00107c91:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_00107d86;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x107cec;\n      __n = (int *)xsum(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_00107d77;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_00107d15;\n        }\ncode_r0x001087e4:\n        *(undefined8 *)(puVar18 + -8) = 0x1087e9;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_00108289;\nLAB_0010827c:\n        if (pvVar12 == (void *)0x0) goto LAB_00108289;\n        goto LAB_00108281;\n      }\n      piVar19 = (int *)0xc;\nLAB_00107d15:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x001087e4;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10875c;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x001087e4;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x1087a6;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x107d5d;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_00108c5c;\n      }\nLAB_00107d77:\n      *(undefined8 *)(puVar18 + -8) = 0x107d86;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_00107d86:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x108b39;\n          piVar9 = (int *)xsum(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x001087e4;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x001087e4;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x108c24;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x001087e4;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x108c47;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x108b8b;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_00108c5c;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x108c13;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x108bc2;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x108bda;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x108bf2;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_00108403;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_00102668;\n          *(undefined8 *)(puVar18 + -8) = 0x108697;\n          piVar9 = (int *)xsum(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x001087e4;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x001087e4;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x108a78;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x001087e4;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x108ab1;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x1086ef;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_00108c5c;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_00102668:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_0010266d;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nvasnprintf_cold:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x102668;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x107eb6;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x107eed;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_00102668;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_00102668;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x108037;\n            piVar9 = (int *)xsum(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x001087e4;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x001087e4;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x108a2e;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x001087e4;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x108a60;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x108085;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x001087e4;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x10809b;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_001080c4:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto vasnprintf_cold;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_00108518;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_0010817a:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x10819b;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x001081ac;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_00108564;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x1084d4;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x001081ac;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x1088d8;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x001081ac;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_0010817a;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x108871;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x001081ac;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_0010856b;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_00108518:\n              uVar11 = (ulong)local_3c0[0];\nLAB_00108322:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x108343;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_00108322;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_00108564:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_0010856b:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x108593;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x001081ac:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_001081cc;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1083b3;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1083c7;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1083df;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1083f7;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_00108403;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_001080c4;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_00102668;\n            if (local_3c4 < iVar5) {\nLAB_001081cc:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1089c6;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1089da;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x1089f2;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x108a0a;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_00108403;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x10820a;\n              uVar10 = xsum(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x108215;\n              piVar13 = (int *)xmax(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x108610;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x108633;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_001080c4;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x108260;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_001080c4;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_00108289;\n                goto LAB_0010827c;\n              }\n              goto LAB_001080c4;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_00107c91;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0010829d;\nLAB_00108c5c:\n  *(undefined8 *)(puVar18 + -8) = 0x108c61;\n  local_3e0 = __errno_location();\nLAB_00108281:\n  *(undefined8 *)(puVar18 + -8) = 0x108289;\n  free(pvVar12);\nLAB_00108289:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x10829d;\n    free(puVar15);\n  }\nLAB_0010829d:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x1082b5;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x1082cd;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_00108403:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x108c5c;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "00106150": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00105f00": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "001032a0": "\nulong two_arguments(void)\n\n{\n  char *pcVar1;\n  char cVar2;\n  uint uVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  \n  pcVar1 = *(char **)(argv + (long)pos * 8);\n  if ((*pcVar1 == '!') && (pcVar1[1] == '\\0')) {\n    advance(0);\n    uVar3 = one_argument();\n    return (ulong)(uVar3 ^ 1);\n  }\n  if ((*pcVar1 == '-') && ((pcVar1[1] != '\\0' && (pcVar1[2] == '\\0')))) {\n    cVar2 = test_unop();\n    if (cVar2 != '\\0') {\n      uVar4 = unary_operator();\n      return uVar4;\n    }\n  }\n  else {\n    beyond();\n  }\n  uVar5 = quote();\n  uVar6 = dcgettext(0,\"%s: unary operator expected\",5);\n                    /* WARNING: Subroutine does not return */\n  test_syntax_error(uVar6,uVar5);\n}\n\n", 
    "00102d50": "\nvoid unary_advance(void)\n\n{\n  advance(1);\n  pos = pos + 1;\n  return;\n}\n\n", 
    "001069f0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble timespectod(long param_1,long param_2)\n\n{\n  return (double)param_2 / _DAT_0010b868 + (double)param_1;\n}\n\n", 
    "001023f0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ee98)();\n  return;\n}\n\n", 
    "001070a0": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102340": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_0010ee40)();\n  return;\n}\n\n", 
    "00105fa0": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103ee0": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = program_name;\n  pFVar1 = stdout;\n  if (param_1 == 0) {\n    pcVar3 = (char *)dcgettext(0,\n                               \"Usage: test EXPRESSION\\n  or:  test\\n  or:  [ EXPRESSION ]\\n  or:  [ ]\\n  or:  [ OPTION\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"Exit with the status determined by EXPRESSION.\\n\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nAn omitted EXPRESSION defaults to false.  Otherwise,\\nEXPRESSION is true or false and sets exit status.  It is one of:\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\n  ( EXPRESSION )               EXPRESSION is true\\n  ! EXPRESSION                 EXPRESSION is false\\n  EXPRESSION1 -a EXPRESSION2   both EXPRESSION1 and EXPRESSION2 are true\\n  EXPRESSION1 -o EXPRESSION2   either EXPRESSION1 or EXPRESSION2 is true\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\n  -n STRING            the length of STRING is nonzero\\n  STRING               equivalent to -n STRING\\n  -z STRING            the length of STRING is zero\\n  STRING1 = STRING2    the strings are equal\\n  STRING1 != STRING2   the strings are not equal\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\n  INTEGER1 -eq INTEGER2   INTEGER1 is equal to INTEGER2\\n  INTEGER1 -ge INTEGER2   INTEGER1 is greater than or equal to INTEGER2\\n  INTEGER1 -gt INTEGER2   INTEGER1 is greater than INTEGER2\\n  INTEGER1 -le INTEGER2   INTEGER1 is less than or equal to INTEGER2\\n  INTEGER1 -lt INTEGER2   INTEGER1 is less than INTEGER2\\n  INTEGER1 -ne INTEGER2   INTEGER1 is not equal to INTEGER2\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\n  FILE1 -ef FILE2   FILE1 and FILE2 have the same device and inode numbers\\n  FILE1 -nt FILE2   FILE1 is newer (modification date) than FILE2\\n  FILE1 -ot FILE2   FILE1 is older than FILE2\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\n  -b FILE     FILE exists and is block special\\n  -c FILE     FILE exists and is character special\\n  -d FILE     FILE exists and is a directory\\n  -e FILE     FILE exists\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -f FILE     FILE exists and is a regular file\\n  -g FILE     FILE exists and is set-group-ID\\n  -G FILE     FILE exists and is owned by the effective group ID\\n  -h FILE     FILE exists and is a symbolic link (same as -L)\\n  -k FILE     FILE exists and has its sticky bit set\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -L FILE     FILE exists and is a symbolic link (same as -h)\\n  -O FILE     FILE exists and is owned by the effective user ID\\n  -p FILE     FILE exists and is a named pipe\\n  -r FILE     FILE exists and read permission is granted\\n  -s FILE     FILE exists and has a size greater than zero\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -S FILE     FILE exists and is a socket\\n  -t FD       file descriptor FD is opened on a terminal\\n  -u FILE     FILE exists and its set-user-ID bit is set\\n  -w FILE     FILE exists and write permission is granted\\n  -x FILE     FILE exists and execute (or search) permission is granted\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nExcept for -h and -L, all FILE-related tests dereference symbolic links.\\nBeware that parentheses need to be escaped (e.g., by backslashes) for shells.\\nINTEGER may also be -l STRING, which evaluates to the length of STRING.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nNOTE: Binary -a and -o are inherently ambiguous.  Use \\'test EXPR1 && test\\nEXPR2\\' or \\'test EXPR1 || test EXPR2\\' instead.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nNOTE: [ honors the --help and --version options, but test does not.\\ntest treats each of those as it treats any other nonempty STRING.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    uVar4 = dcgettext(0,\"test and/or [\",5);\n    uVar2 = dcgettext(0,\n                      \"\\nNOTE: your shell may have its own version of %s, which usually supersedes\\nthe version described here.  Please refer to your shell\\'s documentation\\nfor details about the options it supports.\\n\"\n                      ,5);\n    __printf_chk(1,uVar2,uVar4);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00104400": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010ef60)();\n  return pcVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010eed0)();\n  return _Var1;\n}\n\n", 
    "00106ad0": "\nvoid verror(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  verror_at_line(param_1,param_2,0,0,param_3,param_4);\n  return;\n}\n\n", 
    "00107350": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001079b0": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00107b10": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001023e0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ee90)();\n  return;\n}\n\n", 
    "00106a20": "\nvoid verror_at_line(undefined4 param_1,undefined4 param_2,long param_3,undefined4 param_4,\n                   undefined8 param_5,undefined8 param_6)\n\n{\n  void *__ptr;\n  undefined8 uVar1;\n  int *piVar2;\n  \n  __ptr = (void *)xvasprintf(param_5,param_6);\n  if (__ptr != (void *)0x0) {\n    if (param_3 == 0) {\n      error(param_1,param_2,\"%s\",__ptr);\n    }\n    else {\n      error_at_line(param_1,param_2,param_3,param_4,\"%s\",__ptr);\n    }\n    free(__ptr);\n    return;\n  }\n  uVar1 = dcgettext(0,\"unable to display error message\",5);\n  piVar2 = __errno_location();\n  error(0,*piVar2,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107820": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010eee8)();\n  return iVar1;\n}\n\n", 
    "00102370": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010ee58)();\n  return piVar1;\n}\n\n", 
    "00110198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00110078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __lxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001043b0": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105f20": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "001077a0": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00110080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102d70": "\nulong unary_operator(void)\n\n{\n  long lVar1;\n  int iVar2;\n  __gid_t _Var3;\n  __uid_t _Var4;\n  undefined4 extraout_var;\n  undefined4 extraout_var_00;\n  undefined4 extraout_var_01;\n  ulong uVar5;\n  char *pcVar6;\n  int *piVar7;\n  ulong uVar8;\n  undefined4 extraout_var_02;\n  undefined4 extraout_var_03;\n  undefined4 extraout_var_04;\n  undefined4 extraout_var_05;\n  long in_FS_OFFSET;\n  stat sStack_b8;\n  long local_20;\n  \n  lVar1 = argv;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  switch(*(undefined *)(*(long *)(argv + (long)pos * 8) + 1)) {\n  case 0x47:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    if (iVar2 == 0) {\n      piVar7 = __errno_location();\n      *piVar7 = 0;\n      _Var3 = getegid();\n      uVar8 = CONCAT44(extraout_var_04,_Var3);\n      if (_Var3 == 0xffffffff) {\n        uVar8 = 0;\n        uVar5 = 0;\n        if (*piVar7 != 0) break;\n      }\n      uVar5 = uVar8 & 0xffffffffffffff00 | (ulong)(sStack_b8.st_gid == _Var3);\n      break;\n    }\n  default:\nswitchD_00102dba_caseD_48:\n    uVar5 = 0;\n    break;\n  case 0x4c:\n  case 0x68:\n    unary_advance();\n    iVar2 = lstat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0xa000));\n    }\n    break;\n  case 0x4f:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    if (iVar2 == 0) {\n      piVar7 = __errno_location();\n      *piVar7 = 0;\n      _Var4 = geteuid();\n      uVar8 = CONCAT44(extraout_var_05,_Var4);\n      if (_Var4 == 0xffffffff) {\n        uVar8 = 0;\n        uVar5 = 0;\n        if (*piVar7 != 0) break;\n      }\n      uVar5 = uVar8 & 0xffffffffffffff00 | (ulong)(sStack_b8.st_uid == _Var4);\n      break;\n    }\n    goto switchD_00102dba_caseD_48;\n  case 0x53:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0xc000));\n    }\n    break;\n  case 0x61:\n  case 0x65:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = CONCAT44(extraout_var,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 == 0);\n    break;\n  case 0x62:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0x6000));\n    }\n    break;\n  case 99:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0x2000));\n    }\n    break;\n  case 100:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0x4000));\n    }\n    break;\n  case 0x66:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0x8000));\n    }\n    break;\n  case 0x67:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode >> 10 & 1);\n    }\n    break;\n  case 0x6b:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode >> 9 & 1);\n    }\n    break;\n  case 0x6e:\n    unary_advance();\n    pcVar6 = *(char **)(lVar1 + -8 + (long)pos * 8);\n    uVar5 = (ulong)pcVar6 & 0xffffffffffffff00 | (ulong)(*pcVar6 != '\\0');\n    break;\n  case 0x70:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode & 0xf000 | (uint)((sStack_b8.st_mode & 0xf000) == 0x1000));\n    }\n    break;\n  case 0x72:\n    unary_advance();\n    iVar2 = euidaccess(*(char **)(lVar1 + -8 + (long)pos * 8),4);\n    uVar5 = CONCAT44(extraout_var_03,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 == 0);\n    break;\n  case 0x73:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(0 < sStack_b8.st_size);\n    }\n    break;\n  case 0x74:\n    unary_advance();\n    pcVar6 = (char *)find_int(*(undefined8 *)(lVar1 + -8 + (long)pos * 8));\n    piVar7 = __errno_location();\n    *piVar7 = 0;\n    uVar8 = strtol(pcVar6,(char **)0x0,10);\n    uVar5 = 0;\n    if ((*piVar7 != 0x22) && (uVar5 = 0, uVar8 < 0x80000000)) {\n      iVar2 = isatty((int)uVar8);\n      uVar5 = CONCAT44(extraout_var_02,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 != 0);\n    }\n    break;\n  case 0x75:\n    unary_advance();\n    iVar2 = stat(*(char **)(lVar1 + -8 + (long)pos * 8),&sStack_b8);\n    uVar5 = 0;\n    if (iVar2 == 0) {\n      uVar5 = (ulong)(sStack_b8.st_mode >> 0xb & 1);\n    }\n    break;\n  case 0x77:\n    unary_advance();\n    iVar2 = euidaccess(*(char **)(lVar1 + -8 + (long)pos * 8),2);\n    uVar5 = CONCAT44(extraout_var_01,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 == 0);\n    break;\n  case 0x78:\n    unary_advance();\n    iVar2 = euidaccess(*(char **)(lVar1 + -8 + (long)pos * 8),1);\n    uVar5 = CONCAT44(extraout_var_00,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 == 0);\n    break;\n  case 0x7a:\n    unary_advance();\n    pcVar6 = *(char **)(lVar1 + -8 + (long)pos * 8);\n    uVar5 = (ulong)pcVar6 & 0xffffffffffffff00 | (ulong)(*pcVar6 == '\\0');\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102920": "\nundefined4 to_uchar(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00104420": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00107810": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00102000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___0010efd0;\n  if (PTR___gmon_start___0010efd0 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___0010efd0)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00103330": "\nuint get_mtime(char *param_1,undefined (*param_2) [16],undefined8 param_3,undefined8 param_4,\n              uint param_5)\n\n{\n  int iVar1;\n  uint uVar2;\n  long in_FS_OFFSET;\n  undefined auVar3 [16];\n  stat sStack_a8;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = stat(param_1,&sStack_a8);\n  uVar2 = param_5 & 0xffffff00 | (uint)(iVar1 == 0);\n  if (iVar1 == 0) {\n    auVar3 = get_stat_mtime_isra_0(sStack_a8.st_mtim.tv_sec,sStack_a8.st_mtim.tv_nsec);\n    *param_2 = auVar3;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103cc0": "\n/* WARNING: Removing unreachable block (ram,0x001035b0) */\n/* WARNING: Removing unreachable block (ram,0x00103679) */\n\nulong posixtest(int param_1)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long lVar3;\n  char cVar4;\n  byte bVar5;\n  uint uVar6;\n  int iVar7;\n  int iVar8;\n  ulong uVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  size_t sVar12;\n  char *pcVar13;\n  char cVar14;\n  long lVar15;\n  long in_FS_OFFSET;\n  bool bVar16;\n  undefined8 uStack_1a8;\n  undefined8 uStack_1a0;\n  undefined8 uStack_198;\n  undefined8 uStack_190;\n  stat sStack_188;\n  stat sStack_f8;\n  undefined auStack_48 [24];\n  long lStack_30;\n  code *pcStack_20;\n  \n  lVar15 = argv;\n  if (param_1 != 3) {\n    if (param_1 < 4) {\n      if (param_1 == 1) {\n        uVar9 = one_argument();\n        return uVar9;\n      }\n      if (param_1 == 2) {\n        pcVar13 = *(char **)(argv + (long)pos * 8);\n        if ((*pcVar13 == '!') && (pcVar13[1] == '\\0')) {\n          advance(0);\n          uVar6 = one_argument();\n          return (ulong)(uVar6 ^ 1);\n        }\n        if (((*pcVar13 == '-') && (pcVar13[1] != '\\0')) && (pcVar13[2] == '\\0')) {\n          cVar4 = test_unop();\n          if (cVar4 != '\\0') {\n            uVar9 = unary_operator();\n            return uVar9;\n          }\n        }\n        else {\n          beyond();\n        }\n        uVar10 = quote();\n        uVar11 = dcgettext(0,\"%s: unary operator expected\",5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar11,uVar10);\n      }\n      if (param_1 != 1) {\n                    /* WARNING: Subroutine does not return */\n        pcStack_20 = quoting_options_from_style_cold;\n        abort();\n      }\n    }\n    else if (param_1 == 4) {\n      pcVar13 = *(char **)(argv + (long)pos * 8);\n      if ((*pcVar13 == '!') && (pcVar13[1] == '\\0')) {\n        pcStack_20 = (code *)0x103d78;\n        advance(1);\n        pcStack_20 = (code *)0x103d7d;\n        uVar6 = three_arguments();\n        uVar9 = (ulong)(uVar6 ^ 1);\n      }\n      else {\n        if ((*pcVar13 != '(') ||\n           (((pcVar13[1] != '\\0' ||\n             (pcVar13 = *(char **)(argv + 0x18 + (long)pos * 8), *pcVar13 != ')')) ||\n            (pcVar13[1] != '\\0')))) goto LAB_00103d59;\n        pcStack_20 = (code *)0x103d39;\n        advance(0);\n        pcStack_20 = (code *)0x103d3e;\n        bVar5 = two_arguments();\n        uVar9 = (ulong)bVar5 << 0x38;\n        pcStack_20 = (code *)0x103d49;\n        advance(0);\n        uVar9 = uVar9 >> 0x38;\n      }\n      return uVar9;\n    }\nLAB_00103d59:\n    uVar9 = expr();\n    return uVar9;\n  }\n  pcVar13 = *(char **)(argv + ((long)pos + 1) * 8);\n  lVar1 = ((long)pos + 1) * 8;\n  lStack_30 = 0x103bce;\n  cVar4 = binop();\n  lVar3 = argv;\n  if (cVar4 == '\\0') {\n    pcVar2 = *(char **)(lVar15 + -8 + lVar1);\n    if ((*pcVar2 == '!') && (pcVar2[1] == '\\0')) {\n      lStack_30 = 0x103bf3;\n      advance(1);\n      lStack_30 = 0x103bf8;\n      uVar6 = two_arguments();\n      uVar9 = (ulong)(uVar6 ^ 1);\n    }\n    else {\n      if ((*pcVar2 != '(') ||\n         (((pcVar2[1] != '\\0' || (pcVar2 = *(char **)(lVar15 + 8 + lVar1), *pcVar2 != ')')) ||\n          (pcVar2[1] != '\\0')))) {\n        if ((*pcVar13 == '-') &&\n           (((pcVar13[1] == 'a' && (pcVar13[2] == '\\0')) ||\n            ((pcVar13[1] == 'o' && (pcVar13[2] == '\\0')))))) {\n          uVar9 = expr();\n          return uVar9;\n        }\n        lStack_30 = 0x103c6a;\n        uVar10 = quote(pcVar13);\n        lStack_30 = 0x103c80;\n        uVar11 = dcgettext(0,\"%s: binary operator expected\",5);\n                    /* WARNING: Subroutine does not return */\n        lStack_30 = 0x103c8d;\n        test_syntax_error(uVar11,uVar10);\n      }\n      lStack_30 = 0x103c2a;\n      advance(0);\n      lStack_30 = 0x103c2f;\n      bVar5 = one_argument();\n      pcStack_20 = (code *)((ulong)pcStack_20 & 0xffffffffffffff | (ulong)bVar5 << 0x38);\n      lStack_30 = 0x103c3a;\n      advance(0);\n      uVar9 = (ulong)pcStack_20 >> 0x38;\n    }\n    return uVar9;\n  }\n  lStack_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar9 = 0;\n  lVar15 = (long)(pos + 1);\n  if (pos + 1 < argc + -2) {\n    pcVar13 = *(char **)(argv + 8 + lVar15 * 8);\n    if (((*pcVar13 == '-') && (pcVar13[1] == 'l')) && (pcVar13[2] == '\\0')) {\n      uVar9 = 1;\n      advance(0);\n    }\n    else {\n      uVar9 = 0;\n    }\n  }\n  iVar8 = pos;\n  pcVar13 = *(char **)(lVar3 + lVar15 * 8);\n  lVar1 = lVar15 * 8;\n  if (*pcVar13 != '-') {\n    if ((*pcVar13 == '=') && ((pcVar13[1] == '\\0' || ((pcVar13[1] == '=' && (pcVar13[2] == '\\0')))))\n       ) {\n      iVar7 = strcmp(*(char **)(lVar3 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar3 + ((long)pos + 2) * 8));\n      uVar9 = (ulong)(iVar7 == 0);\n      pos = iVar8 + 3;\n    }\n    else {\n      if ((*pcVar13 != '!') || ((pcVar13[1] != '=' || (pcVar13[2] != '\\0')))) {\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      iVar7 = strcmp(*(char **)(lVar3 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar3 + ((long)pos + 2) * 8));\n      uVar9 = (ulong)(iVar7 != 0);\n      pos = iVar8 + 3;\n    }\n    goto LAB_001034a9;\n  }\n  cVar4 = pcVar13[1];\n  cVar14 = (char)uVar9;\n  if (((cVar4 == 'l') || (cVar4 == 'g')) && ((pcVar13[2] == 'e' || (pcVar13[2] == 't')))) {\n    if (pcVar13[3] != '\\0') {\nLAB_00103524:\n      if (cVar4 == 'o') {\n        if ((pcVar13[2] != 't') || (pcVar13[3] != '\\0')) goto LAB_001037b6;\n        pos = pos + 3;\n        if (cVar14 != '\\0') {\n          pcVar13 = \"-ot does not accept -l\";\n          goto LAB_00103851;\n        }\n        cVar4 = get_mtime(*(undefined8 *)(lVar3 + -8 + lVar1),&uStack_1a8);\n        uVar6 = get_mtime(*(undefined8 *)(lVar3 + 8 + lVar1),&uStack_198);\n        uVar9 = (ulong)uVar6;\n        if (((char)uVar6 != '\\0') && (cVar4 != '\\0')) {\n          uVar6 = timespec_cmp(uStack_1a8,uStack_1a0,uStack_198,uStack_190);\n          uVar9 = (ulong)(uVar6 >> 0x1f);\n        }\n        goto LAB_001034a9;\n      }\n      if ('o' < cVar4) goto LAB_001037b6;\n      if (cVar4 == 'e') {\n        cVar4 = pcVar13[2];\n        goto LAB_001035cc;\n      }\n      if (cVar4 != 'n') goto LAB_001037b6;\n      cVar4 = pcVar13[2];\nLAB_00103722:\n      if ((cVar4 != 't') || (pcVar13[3] != '\\0')) {\nLAB_001037b6:\n        uVar10 = quote();\n        uVar11 = dcgettext(0,\"%s: unknown binary operator\",5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar11,uVar10);\n      }\n      pos = pos + 3;\n      if (cVar14 != '\\0') {\n        pcVar13 = \"-nt does not accept -l\";\nLAB_00103851:\n        pos = iVar8 + 3;\n        uVar10 = dcgettext(0,pcVar13,5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar10,0);\n      }\n      uVar6 = get_mtime(*(undefined8 *)(lVar3 + -8 + lVar1),&uStack_1a8);\n      uVar9 = (ulong)uVar6;\n      cVar4 = get_mtime(*(undefined8 *)(lVar3 + 8 + lVar1),&uStack_198);\n      if (((char)uVar6 != '\\0') && (cVar4 != '\\0')) {\n        iVar8 = timespec_cmp(uStack_1a8,uStack_1a0,uStack_198,uStack_190);\n        uVar9 = (ulong)(uVar6 & 0xffffff00 | (uint)(0 < iVar8));\n      }\n      goto LAB_001034a9;\n    }\n  }\n  else {\n    if (cVar4 != 'e') {\n      if (cVar4 != 'n') goto LAB_00103524;\n      cVar4 = pcVar13[2];\n      if (cVar4 == 'e') goto LAB_001037ac;\n      goto LAB_00103722;\n    }\n    cVar4 = pcVar13[2];\n    if (cVar4 != 'q') {\nLAB_001035cc:\n      if ((cVar4 != 'f') || (pcVar13[3] != '\\0')) goto LAB_001037b6;\n      pos = pos + 3;\n      if (cVar14 != '\\0') {\n        pcVar13 = \"-ef does not accept -l\";\n        goto LAB_00103851;\n      }\n      iVar8 = stat(*(char **)(lVar3 + -8 + lVar1),&sStack_188);\n      if (((iVar8 == 0) && (iVar8 = stat(*(char **)(lVar3 + 8 + lVar1),&sStack_f8), iVar8 == 0)) &&\n         (sStack_188.st_dev == sStack_f8.st_dev)) {\n        uVar9 = (ulong)(sStack_188.st_ino == sStack_f8.st_ino);\n      }\n      goto LAB_001034a9;\n    }\nLAB_001037ac:\n    if (pcVar13[3] != '\\0') goto LAB_001037b6;\n  }\n  uVar10 = find_int();\n  if (cVar14 == '\\0') {\n    uVar11 = find_int(*(undefined8 *)(argv + 8 + lVar1));\n  }\n  else {\n    sVar12 = strlen(*(char **)(argv + 0x10 + lVar1));\n    uVar11 = umaxtostr(sVar12,auStack_48);\n  }\n  iVar8 = strintcmp(uVar10,uVar11);\n  lVar15 = *(long *)(argv + lVar15 * 8);\n  bVar16 = *(char *)(lVar15 + 2) == 'e';\n  cVar4 = *(char *)(lVar15 + 1);\n  pos = pos + 3;\n  if (cVar4 == 'l') {\n    uVar9 = (ulong)(iVar8 < (int)(uint)bVar16);\n  }\n  else if (cVar4 == 'g') {\n    uVar9 = (ulong)((int)-(uint)bVar16 < iVar8);\n  }\n  else {\n    uVar9 = (ulong)((iVar8 != 0) == bVar16);\n  }\nLAB_001034a9:\n  if (lStack_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar9;\n}\n\n", 
    "00103ba0": "\n/* WARNING: Removing unreachable block (ram,0x001035b0) */\n/* WARNING: Removing unreachable block (ram,0x00103679) */\n\nulong three_arguments(void)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long lVar3;\n  char cVar4;\n  byte bVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  size_t sVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  ulong uVar12;\n  char *pcVar13;\n  char cVar14;\n  long lVar15;\n  long in_FS_OFFSET;\n  bool bVar16;\n  undefined8 uStack_1a8;\n  undefined8 uStack_1a0;\n  undefined8 uStack_198;\n  undefined8 uStack_190;\n  stat sStack_188;\n  stat sStack_f8;\n  undefined auStack_48 [24];\n  long lStack_30;\n  ulong uStack_20;\n  \n  lVar1 = argv;\n  pcVar13 = *(char **)(argv + ((long)pos + 1) * 8);\n  lVar15 = ((long)pos + 1) * 8;\n  lStack_30 = 0x103bce;\n  cVar4 = binop();\n  lVar3 = argv;\n  if (cVar4 == '\\0') {\n    pcVar2 = *(char **)(lVar1 + -8 + lVar15);\n    if ((*pcVar2 == '!') && (pcVar2[1] == '\\0')) {\n      lStack_30 = 0x103bf3;\n      advance(1);\n      lStack_30 = 0x103bf8;\n      uVar8 = two_arguments();\n      uStack_20 = (ulong)(uVar8 ^ 1);\n    }\n    else {\n      if ((*pcVar2 != '(') ||\n         (((pcVar2[1] != '\\0' || (pcVar2 = *(char **)(lVar1 + 8 + lVar15), *pcVar2 != ')')) ||\n          (pcVar2[1] != '\\0')))) {\n        if ((*pcVar13 == '-') &&\n           (((pcVar13[1] == 'a' && (pcVar13[2] == '\\0')) ||\n            ((pcVar13[1] == 'o' && (pcVar13[2] == '\\0')))))) {\n          uVar12 = expr();\n          return uVar12;\n        }\n        lStack_30 = 0x103c6a;\n        uVar10 = quote(pcVar13);\n        lStack_30 = 0x103c80;\n        uVar11 = dcgettext(0,\"%s: binary operator expected\",5);\n                    /* WARNING: Subroutine does not return */\n        lStack_30 = 0x103c8d;\n        test_syntax_error(uVar11,uVar10);\n      }\n      lStack_30 = 0x103c2a;\n      advance(0);\n      lStack_30 = 0x103c2f;\n      bVar5 = one_argument();\n      uStack_20 = uStack_20 & 0xffffffffffffff | (ulong)bVar5 << 0x38;\n      lStack_30 = 0x103c3a;\n      advance(0);\n      uStack_20 = uStack_20 >> 0x38;\n    }\n    return uStack_20;\n  }\n  lStack_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar12 = 0;\n  lVar15 = (long)(pos + 1);\n  if (pos + 1 < argc + -2) {\n    pcVar13 = *(char **)(argv + 8 + lVar15 * 8);\n    if (((*pcVar13 == '-') && (pcVar13[1] == 'l')) && (pcVar13[2] == '\\0')) {\n      uVar12 = 1;\n      advance(0);\n    }\n    else {\n      uVar12 = 0;\n    }\n  }\n  iVar7 = pos;\n  pcVar13 = *(char **)(lVar3 + lVar15 * 8);\n  lVar1 = lVar15 * 8;\n  if (*pcVar13 != '-') {\n    if ((*pcVar13 == '=') && ((pcVar13[1] == '\\0' || ((pcVar13[1] == '=' && (pcVar13[2] == '\\0')))))\n       ) {\n      iVar6 = strcmp(*(char **)(lVar3 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar3 + ((long)pos + 2) * 8));\n      uVar12 = (ulong)(iVar6 == 0);\n      pos = iVar7 + 3;\n    }\n    else {\n      if ((*pcVar13 != '!') || ((pcVar13[1] != '=' || (pcVar13[2] != '\\0')))) {\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      iVar6 = strcmp(*(char **)(lVar3 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar3 + ((long)pos + 2) * 8));\n      uVar12 = (ulong)(iVar6 != 0);\n      pos = iVar7 + 3;\n    }\n    goto LAB_001034a9;\n  }\n  cVar4 = pcVar13[1];\n  cVar14 = (char)uVar12;\n  if (((cVar4 == 'l') || (cVar4 == 'g')) && ((pcVar13[2] == 'e' || (pcVar13[2] == 't')))) {\n    if (pcVar13[3] != '\\0') {\nLAB_00103524:\n      if (cVar4 == 'o') {\n        if ((pcVar13[2] != 't') || (pcVar13[3] != '\\0')) goto LAB_001037b6;\n        pos = pos + 3;\n        if (cVar14 != '\\0') {\n          pcVar13 = \"-ot does not accept -l\";\n          goto LAB_00103851;\n        }\n        cVar4 = get_mtime(*(undefined8 *)(lVar3 + -8 + lVar1),&uStack_1a8);\n        uVar8 = get_mtime(*(undefined8 *)(lVar3 + 8 + lVar1),&uStack_198);\n        uVar12 = (ulong)uVar8;\n        if (((char)uVar8 != '\\0') && (cVar4 != '\\0')) {\n          uVar8 = timespec_cmp(uStack_1a8,uStack_1a0,uStack_198,uStack_190);\n          uVar12 = (ulong)(uVar8 >> 0x1f);\n        }\n        goto LAB_001034a9;\n      }\n      if ('o' < cVar4) goto LAB_001037b6;\n      if (cVar4 == 'e') {\n        cVar4 = pcVar13[2];\n        goto LAB_001035cc;\n      }\n      if (cVar4 != 'n') goto LAB_001037b6;\n      cVar4 = pcVar13[2];\nLAB_00103722:\n      if ((cVar4 != 't') || (pcVar13[3] != '\\0')) {\nLAB_001037b6:\n        uVar10 = quote();\n        uVar11 = dcgettext(0,\"%s: unknown binary operator\",5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar11,uVar10);\n      }\n      pos = pos + 3;\n      if (cVar14 != '\\0') {\n        pcVar13 = \"-nt does not accept -l\";\nLAB_00103851:\n        pos = iVar7 + 3;\n        uVar10 = dcgettext(0,pcVar13,5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar10,0);\n      }\n      uVar8 = get_mtime(*(undefined8 *)(lVar3 + -8 + lVar1),&uStack_1a8);\n      uVar12 = (ulong)uVar8;\n      cVar4 = get_mtime(*(undefined8 *)(lVar3 + 8 + lVar1),&uStack_198);\n      if (((char)uVar8 != '\\0') && (cVar4 != '\\0')) {\n        iVar7 = timespec_cmp(uStack_1a8,uStack_1a0,uStack_198,uStack_190);\n        uVar12 = (ulong)(uVar8 & 0xffffff00 | (uint)(0 < iVar7));\n      }\n      goto LAB_001034a9;\n    }\n  }\n  else {\n    if (cVar4 != 'e') {\n      if (cVar4 != 'n') goto LAB_00103524;\n      cVar4 = pcVar13[2];\n      if (cVar4 == 'e') goto LAB_001037ac;\n      goto LAB_00103722;\n    }\n    cVar4 = pcVar13[2];\n    if (cVar4 != 'q') {\nLAB_001035cc:\n      if ((cVar4 != 'f') || (pcVar13[3] != '\\0')) goto LAB_001037b6;\n      pos = pos + 3;\n      if (cVar14 != '\\0') {\n        pcVar13 = \"-ef does not accept -l\";\n        goto LAB_00103851;\n      }\n      iVar7 = stat(*(char **)(lVar3 + -8 + lVar1),&sStack_188);\n      if (((iVar7 == 0) && (iVar7 = stat(*(char **)(lVar3 + 8 + lVar1),&sStack_f8), iVar7 == 0)) &&\n         (sStack_188.st_dev == sStack_f8.st_dev)) {\n        uVar12 = (ulong)(sStack_188.st_ino == sStack_f8.st_ino);\n      }\n      goto LAB_001034a9;\n    }\nLAB_001037ac:\n    if (pcVar13[3] != '\\0') goto LAB_001037b6;\n  }\n  uVar10 = find_int();\n  if (cVar14 == '\\0') {\n    uVar11 = find_int(*(undefined8 *)(argv + 8 + lVar1));\n  }\n  else {\n    sVar9 = strlen(*(char **)(argv + 0x10 + lVar1));\n    uVar11 = umaxtostr(sVar9,auStack_48);\n  }\n  iVar7 = strintcmp(uVar10,uVar11);\n  lVar15 = *(long *)(argv + lVar15 * 8);\n  bVar16 = *(char *)(lVar15 + 2) == 'e';\n  cVar4 = *(char *)(lVar15 + 1);\n  pos = pos + 3;\n  if (cVar4 == 'l') {\n    uVar12 = (ulong)(iVar7 < (int)(uint)bVar16);\n  }\n  else if (cVar4 == 'g') {\n    uVar12 = (ulong)((int)-(uint)bVar16 < iVar7);\n  }\n  else {\n    uVar12 = (ulong)((iVar7 != 0) == bVar16);\n  }\nLAB_001034a9:\n  if (lStack_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar12;\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t geteuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_geteuid_0010eee0)();\n  return _Var1;\n}\n\n", 
    "00102360": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010ee50)();\n  return;\n}\n\n", 
    "00107130": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "00106160": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "00110088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106af0": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010b8a3,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106db9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00106db9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00106e5b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00106e5b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106c0d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00106c0d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00110098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107a10": "\nvoid xsum3(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = xsum();\n  xsum(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "00102910": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001071d0": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00110090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102670": "\nbyte main(int param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  char *pcVar5;\n  \n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  initialize_exit_failure_constprop_0();\n  atexit(close_stdout);\n  argv = param_2;\n  if (param_1 == 2) {\n    pcVar5 = (char *)param_2[1];\n    iVar2 = strcmp(pcVar5,\"--help\");\n    if (iVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n      usage(0);\n    }\n    iVar2 = strcmp(pcVar5,\"--version\");\n    if (iVar2 == 0) {\n      version_etc(stdout,\"[\",\"GNU coreutils\",Version,\"Kevin Braunsdorf\",\"Matthew Bradburn\",0,0);\n      return 0;\n    }\n    iVar2 = strcmp(pcVar5,\"]\");\n    if (iVar2 == 0) {\n      argc = 1;\n      pos = 1;\n      return 1;\n    }\n  }\n  else if ((1 < param_1) && (iVar2 = strcmp((char *)param_2[(long)param_1 + -1],\"]\"), iVar2 == 0)) {\n    pos = 1;\n    argc = param_1 + -1;\n    bVar1 = posixtest(param_1 + -2);\n    if (pos == argc) {\n      return bVar1 ^ 1;\n    }\n    uVar4 = quote(argv[pos]);\n    pcVar5 = \"extra argument %s\";\n    goto LAB_001027eb;\n  }\n  uVar4 = quote(&DAT_0010a33f);\n  pcVar5 = \"missing %s\";\nLAB_001027eb:\n  uVar3 = dcgettext(0,pcVar5,5);\n                    /* WARNING: Subroutine does not return */\n  test_syntax_error(uVar3,uVar4);\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getegid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getegid_0010ef48)();\n  return _Var1;\n}\n\n", 
    "00103880": "\nuint term(void)\n\n{\n  long lVar1;\n  int iVar2;\n  char cVar3;\n  char cVar4;\n  uint uVar5;\n  char **ppcVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char *pcVar10;\n  int iVar11;\n  uint unaff_R12D;\n  long unaff_R14;\n  long lVar12;\n  \n  iVar2 = argc;\n  lVar1 = argv;\n  if (pos < argc) {\n    unaff_R12D = 0;\n    do {\n      lVar12 = (long)pos;\n      pcVar10 = *(char **)(lVar1 + lVar12 * 8);\n      cVar3 = *pcVar10;\n      unaff_R14 = lVar1;\n      if (cVar3 != '!') {\n        if ((cVar3 == '(') && (pcVar10[1] == '\\0')) goto LAB_001039a8;\nLAB_001038f2:\n        if (iVar2 - pos < 4) {\n          if (iVar2 - pos == 3) goto LAB_00103980;\n        }\n        else {\n          if ((((*pcVar10 == '-') && (pcVar10[1] == 'l')) && (pcVar10[2] == '\\0')) &&\n             (cVar4 = binop(*(undefined8 *)(lVar1 + 0x10 + lVar12 * 8)), cVar4 != '\\0')) {\n            uVar5 = binary_operator(1);\n            goto LAB_0010396c;\n          }\nLAB_00103980:\n          cVar4 = binop(*(undefined8 *)(lVar1 + 8 + lVar12 * 8));\n          if (cVar4 != '\\0') {\n            uVar5 = binary_operator(0);\n            goto LAB_0010396c;\n          }\n        }\n        if (((cVar3 != '-') || (pcVar10[1] == '\\0')) || (pcVar10[2] != '\\0')) {\n          uVar5 = (uint)(cVar3 != '\\0');\n          goto LAB_00103965;\n        }\n        cVar3 = test_unop(pcVar10);\n        if (cVar3 == '\\0') {\n          uVar8 = quote();\n          pcVar10 = \"%s: unary operator expected\";\n          goto LAB_00103a9d;\n        }\n        uVar5 = unary_operator();\n        goto LAB_0010396c;\n      }\n      if (pcVar10[1] != '\\0') goto LAB_001038f2;\n      unaff_R12D = unaff_R12D ^ 1;\n      advance(1);\n    } while (pos < iVar2);\n  }\n  beyond();\nLAB_001039a8:\n  advance(1);\n  if (pos + 1 < iVar2) {\n    iVar11 = 1;\n    ppcVar6 = (char **)(unaff_R14 + (long)(pos + 1) * 8);\n    do {\n      if ((**ppcVar6 == ')') && ((*ppcVar6)[1] == '\\0')) break;\n      if (iVar11 == 4) {\n        iVar11 = iVar2 - pos;\n        break;\n      }\n      iVar11 = iVar11 + 1;\n      ppcVar6 = ppcVar6 + 1;\n    } while (iVar2 - pos != iVar11);\n  }\n  else {\n    iVar11 = 1;\n  }\n  uVar5 = posixtest(iVar11);\n  pcVar10 = *(char **)(argv + (long)pos * 8);\n  if (pcVar10 == (char *)0x0) {\n    uVar8 = quote(&DAT_0010b8a5);\n    pcVar10 = \"%s expected\";\nLAB_00103a9d:\n    uVar9 = dcgettext(0,pcVar10,5);\n                    /* WARNING: Subroutine does not return */\n    test_syntax_error(uVar9,uVar8);\n  }\n  if ((*pcVar10 != ')') || (pcVar10[1] != '\\0')) {\n    uVar8 = quote_n(1);\n    uVar9 = quote_n(0,&DAT_0010b8a5);\n    uVar7 = dcgettext(0,\"%s expected, found %s\",5);\n                    /* WARNING: Subroutine does not return */\n    test_syntax_error(uVar7,uVar9,uVar8);\n  }\nLAB_00103965:\n  advance(0);\nLAB_0010396c:\n  return uVar5 ^ unaff_R12D;\n}\n\n", 
    "00102430": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010eeb8)();\n  return;\n}\n\n", 
    "00107200": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010725b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010725b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00106230": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "00110178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00104290": "\nchar * umaxtostr(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00106350": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00110058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106590": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010265e": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010ef98)();\n  return sVar1;\n}\n\n", 
    "00110060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0010ef08)();\n  return iVar1;\n}\n\n", 
    "001023b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_isatty_0010ee78)();\n  return iVar1;\n}\n\n", 
    "00110180": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001072a0": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00102663": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid vasnprintf_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010ef40)();\n  return pcVar1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_0010eeb0)();\n  return iVar1;\n}\n\n", 
    "00106220": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00110068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010264f": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107790": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00110188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010264a": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001069a0": "\nint timespec_cmp(long param_1,int param_2,long param_3,int param_4)\n\n{\n  int iVar1;\n  \n  if (param_3 <= param_1) {\n    iVar1 = 1;\n    if (param_1 <= param_3) {\n      iVar1 = param_2 - param_4;\n    }\n    return iVar1;\n  }\n  return -1;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010ef90)();\n  return;\n}\n\n", 
    "001047c0": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010ef00)();\n  return pvVar1;\n}\n\n", 
    "00110190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023a0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ee70)();\n  return;\n}\n\n", 
    "00110070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001063e0": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00104b60": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104fe7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00105009;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_001055a6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00104f5f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104fe7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00104f5f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_0010b131,param_5);\n      local_78 = (char *)gettext_quote(&DAT_0010b121);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104cb0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00105510_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x001054ab;\n          goto LAB_0010529b;\n        default:\nswitchD_001053c0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105798;\n              }\n              if (lVar10 == -2) goto joined_r0x00105baa;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00105180;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105798;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00104f21;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00105468;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00105468;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00105468:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00105177;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00105164;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00105164:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104e88;\n          goto LAB_00105177;\n        case 0x23:\n        case 0x7e:\nLAB_0010515b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00105164;\n          goto LAB_00104e85;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_001053c0_caseD_25;\n        case 0x27:\nswitchD_001053c0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104e88;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x00104eab;\n          }\n          goto LAB_00105180;\n        case 0x3f:\nswitchD_001053c0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00105b0e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104e88;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x00104eab;\n          }\n          goto LAB_00105180;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00104db8_caseD_5c;\n          if (!bVar20) {\nLAB_001053f8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00105410;\n          }\n          goto LAB_00105180;\n        case 0x7b:\n        case 0x7d:\nswitchD_001053c0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010515b;\nLAB_00104e85:\n          bVar23 = false;\n          goto LAB_00104e88;\n        }\nLAB_00105290:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010529b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104ea8;\n          goto LAB_00104dd0;\n        }\nLAB_001052d0:\n        bVar21 = false;\n        goto joined_r0x001052e1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_001054f0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00104db8_caseD_0;\n          default:\n            goto switchD_001053c0_caseD_1;\n          case 7:\n            goto switchD_00105510_caseD_7;\n          case 8:\n            goto switchD_00105510_caseD_8;\n          case 9:\n            goto switchD_00104db8_caseD_9;\n          case 10:\n            goto switchD_00105510_caseD_a;\n          case 0xb:\n            goto switchD_00105510_caseD_b;\n          case 0xc:\n            goto switchD_00105510_caseD_c;\n          case 0xd:\n            goto switchD_00105510_caseD_d;\n          case 0x20:\n            goto LAB_00105539;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00104db8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00105521;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00104dc8;\n          case 0x27:\n            goto switchD_001053c0_caseD_27;\n          case 0x3f:\n            goto switchD_001053c0_caseD_3f;\n          case 0x5c:\n            goto switchD_00104db8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_001053c0_caseD_7b;\n          }\n        }\n        goto LAB_0010518e;\n      }\nLAB_001054f0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00105510_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00104db8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x00104eab;\n            }\nLAB_0010594b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010594b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105988;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x00104eab;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00105180;\n      default:\n        bVar23 = false;\n        goto switchD_001053c0_caseD_1;\n      case 7:\nswitchD_00105510_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00105510_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00104db8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00105290;\n      case 10:\nswitchD_00105510_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_001052d0;\n      case 0xb:\nswitchD_00105510_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_001052d0;\n      case 0xc:\nswitchD_00105510_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00105510_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_001052d0;\n      case 0x20:\n        bVar5 = false;\nLAB_00105539:\n        uVar15 = 0x20;\n        goto LAB_00104dc8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00104db8_caseD_21:\n        bVar22 = false;\n        goto LAB_00104e85;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00105521:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104e88;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00104dd0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00104dc8:\n        bVar22 = false;\n        goto LAB_00104dd0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_001053c0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_001053c0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00104db8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_001053f8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00105290;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_001053c0_caseD_7b;\n      }\n      if (bVar20) goto LAB_001052f0;\n      bVar21 = false;\n      goto LAB_00104e46;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00105177:\n      param_5 = 2;\nLAB_00105180:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010518e:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_001051c8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105c15:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001051c8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001051c8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105c15;\nLAB_001055a6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00105009:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x001054ab:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104cb0;\nswitchD_00105b0e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105988:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x00104eab;\n    goto LAB_00104dd0;\n  }\n  goto LAB_0010518e;\njoined_r0x00105baa:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105798:\n  if (1 < uVar17) {\nLAB_001057a2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00105180;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00104e58;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00105410;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00104f21:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_001057a2;\n  }\nswitchD_001053c0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104e88:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00104dd0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x00104eab;\n  }\n  else {\nLAB_00104ea8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x00104eab:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00105410:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00104e58;\n    }\n  }\njoined_r0x001052e1:\n  if (bVar20) {\nLAB_001052f0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00105180;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00104e46:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00104e58:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104cb0;\n}\n\n", 
    "00102659": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010eea8)();\n  return sVar1;\n}\n\n", 
    "00102654": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010eec8)();\n  return pcVar1;\n}\n\n", 
    "00103db0": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  \n  uVar1 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  pcVar2 = setlocale(5,(char *)0x0);\n  if ((pcVar2 != (char *)0x0) && (((*pcVar2 != 'e' || (pcVar2[1] != 'n')) || (pcVar2[2] != '_')))) {\n    uVar1 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\",5);\n    __printf_chk(1,uVar1,\"[\");\n  }\n  uVar1 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n  __printf_chk(1,uVar1,\"https://www.gnu.org/software/coreutils/\",\"[\");\n  uVar1 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  __printf_chk(1,uVar1,\"test invocation\",\"\");\n  return;\n}\n\n", 
    "00102330": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010efe0)();\n  return;\n}\n\n", 
    "00109b70": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "001100e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104510": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00103ed0": "\nvoid initialize_exit_failure_constprop_0(void)\n\n{\n  exit_failure = 2;\n  return;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010ef58)();\n  return pvVar1;\n}\n\n", 
    "00106250": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00110158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint euidaccess(char *__name,int __type)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* euidaccess@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ee88)();\n  return iVar1;\n}\n\n", 
    "001069d0": "\nulong timespec_sign(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = 0xffffffff;\n  if (-1 < (long)param_1) {\n    uVar1 = (ulong)((param_1 | param_2) != 0);\n  }\n  return uVar1;\n}\n\n", 
    "00110160": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001033a0": "\nuint binary_operator(byte param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  int iVar6;\n  size_t sVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char *pcVar10;\n  byte bVar11;\n  long lVar12;\n  long in_FS_OFFSET;\n  bool bVar13;\n  undefined8 local_1a8;\n  undefined8 local_1a0;\n  undefined8 local_198;\n  undefined8 local_190;\n  stat local_188;\n  stat local_f8;\n  undefined local_68 [32];\n  undefined local_48 [24];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    advance(0);\n  }\n  lVar2 = argv;\n  bVar11 = 0;\n  lVar12 = (long)(pos + 1);\n  if (pos + 1 < argc + -2) {\n    pcVar10 = *(char **)(argv + 8 + lVar12 * 8);\n    if (((*pcVar10 == '-') && (pcVar10[1] == 'l')) && (pcVar10[2] == '\\0')) {\n      bVar11 = 1;\n      advance(0);\n    }\n    else {\n      bVar11 = 0;\n    }\n  }\n  iVar6 = pos;\n  pcVar10 = *(char **)(lVar2 + lVar12 * 8);\n  lVar1 = lVar12 * 8;\n  if (*pcVar10 != '-') {\n    if ((*pcVar10 == '=') && ((pcVar10[1] == '\\0' || ((pcVar10[1] == '=' && (pcVar10[2] == '\\0')))))\n       ) {\n      iVar4 = strcmp(*(char **)(lVar2 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar2 + ((long)pos + 2) * 8));\n      uVar5 = (uint)(iVar4 == 0);\n      pos = iVar6 + 3;\n    }\n    else {\n      if ((*pcVar10 != '!') || ((pcVar10[1] != '=' || (pcVar10[2] != '\\0')))) {\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      iVar4 = strcmp(*(char **)(lVar2 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar2 + ((long)pos + 2) * 8));\n      uVar5 = (uint)(iVar4 != 0);\n      pos = iVar6 + 3;\n    }\n    goto LAB_001034a9;\n  }\n  cVar3 = pcVar10[1];\n  if ((cVar3 == 'l') || (cVar3 == 'g')) {\n    if ((pcVar10[2] != 'e') && (pcVar10[2] != 't')) goto LAB_00103514;\n    if (pcVar10[3] != '\\0') goto LAB_00103524;\n  }\n  else {\nLAB_00103514:\n    if (cVar3 != 'e') {\n      if (cVar3 == 'n') {\n        cVar3 = pcVar10[2];\n        if (cVar3 == 'e') goto LAB_001037ac;\n      }\n      else {\nLAB_00103524:\n        if (cVar3 == 'o') {\n          if ((pcVar10[2] != 't') || (pcVar10[3] != '\\0')) goto LAB_001037b6;\n          pos = pos + 3;\n          if ((bVar11 != 0) || (param_1 != 0)) {\n            pcVar10 = \"-ot does not accept -l\";\n            goto LAB_00103851;\n          }\n          cVar3 = get_mtime(*(undefined8 *)(lVar2 + -8 + lVar1),&local_1a8);\n          uVar5 = get_mtime(*(undefined8 *)(lVar2 + 8 + lVar1),&local_198);\n          if (((char)uVar5 != '\\0') && (cVar3 != '\\0')) {\n            uVar5 = timespec_cmp(local_1a8,local_1a0,local_198,local_190);\n            uVar5 = uVar5 >> 0x1f;\n          }\n          goto LAB_001034a9;\n        }\n        if ('o' < cVar3) goto LAB_001037b6;\n        if (cVar3 == 'e') {\n          cVar3 = pcVar10[2];\n          goto LAB_001035cc;\n        }\n        if (cVar3 != 'n') goto LAB_001037b6;\n        cVar3 = pcVar10[2];\n      }\n      if ((cVar3 != 't') || (pcVar10[3] != '\\0')) {\nLAB_001037b6:\n        uVar9 = quote();\n        uVar8 = dcgettext(0,\"%s: unknown binary operator\",5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar8,uVar9);\n      }\n      pos = pos + 3;\n      if ((bVar11 != 0) || (param_1 != 0)) {\n        pcVar10 = \"-nt does not accept -l\";\nLAB_00103851:\n        pos = iVar6 + 3;\n        uVar9 = dcgettext(0,pcVar10,5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar9,0);\n      }\n      uVar5 = get_mtime(*(undefined8 *)(lVar2 + -8 + lVar1),&local_1a8);\n      cVar3 = get_mtime(*(undefined8 *)(lVar2 + 8 + lVar1),&local_198);\n      if (((char)uVar5 != '\\0') && (cVar3 != '\\0')) {\n        iVar6 = timespec_cmp(local_1a8,local_1a0,local_198,local_190);\n        uVar5 = uVar5 & 0xffffff00 | (uint)(0 < iVar6);\n      }\n      goto LAB_001034a9;\n    }\n    cVar3 = pcVar10[2];\n    if (cVar3 != 'q') {\nLAB_001035cc:\n      if ((cVar3 != 'f') || (pcVar10[3] != '\\0')) goto LAB_001037b6;\n      pos = pos + 3;\n      uVar5 = (uint)(bVar11 | param_1);\n      if ((bVar11 | param_1) != 0) {\n        pcVar10 = \"-ef does not accept -l\";\n        goto LAB_00103851;\n      }\n      iVar6 = stat(*(char **)(lVar2 + -8 + lVar1),&local_188);\n      if (iVar6 == 0) {\n        iVar6 = stat(*(char **)(lVar2 + 8 + lVar1),&local_f8);\n        if ((iVar6 == 0) && (local_188.st_dev == local_f8.st_dev)) {\n          uVar5 = (uint)(local_188.st_ino == local_f8.st_ino);\n        }\n      }\n      goto LAB_001034a9;\n    }\nLAB_001037ac:\n    if (pcVar10[3] != '\\0') goto LAB_001037b6;\n  }\n  if (param_1 == 0) {\n    uVar9 = find_int();\n  }\n  else {\n    sVar7 = strlen(*(char **)(lVar2 + -8 + lVar1));\n    uVar9 = umaxtostr(sVar7,local_68);\n  }\n  if (bVar11 == 0) {\n    uVar8 = find_int(*(undefined8 *)(argv + 8 + lVar1));\n  }\n  else {\n    sVar7 = strlen(*(char **)(argv + 0x10 + lVar1));\n    uVar8 = umaxtostr(sVar7,local_48);\n  }\n  iVar6 = strintcmp(uVar9,uVar8);\n  lVar2 = *(long *)(argv + lVar12 * 8);\n  bVar13 = *(char *)(lVar2 + 2) == 'e';\n  cVar3 = *(char *)(lVar2 + 1);\n  pos = pos + 3;\n  if (cVar3 == 'l') {\n    uVar5 = (uint)(iVar6 < (int)(uint)bVar13);\n  }\n  else if (cVar3 == 'g') {\n    uVar5 = (uint)((int)-(uint)bVar13 < iVar6);\n  }\n  else {\n    uVar5 = (uint)((iVar6 != 0) == bVar13);\n  }\nLAB_001034a9:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00110040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* isatty@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010ef18)();\n  return pvVar1;\n}\n\n", 
    "001072c0": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001100e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtol@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102560": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010ef50)();\n  return;\n}\n\n", 
    "001100f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010eec0)();\n  return sVar1;\n}\n\n", 
    "00104980": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00107330": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00106240": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00110168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_strtol_0010ef10)();\n  return lVar1;\n}\n\n", 
    "00110170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023c0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ee80)();\n  return;\n}\n\n", 
    "00110050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102d20": "\nvoid advance(char param_1)\n\n{\n  pos = pos + 1;\n  if ((param_1 != '\\0') && (argc <= pos)) {\n    beyond();\n    advance(1);\n    pos = pos + 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001045a0": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001100f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001074f0": "\nundefined8 xvasprintf(char *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  long lVar4;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar1 = *param_1;\n  lVar4 = 0;\n  do {\n    if (cVar1 == '\\0') {\n      local_18 = xstrcat(lVar4,param_2);\nLAB_00107550:\n      if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return local_18;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if ((cVar1 != '%') || (param_1[lVar4 * 2 + 1] != 's')) {\n      iVar2 = rpl_vasprintf(&local_18,param_1);\n      if (iVar2 < 0) {\n        piVar3 = __errno_location();\n        if (*piVar3 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n          xalloc_die();\n        }\n        local_18 = 0;\n      }\n      goto LAB_00107550;\n    }\n    lVar4 = lVar4 + 1;\n    cVar1 = param_1[lVar4 * 2];\n  } while( true );\n}\n\n", 
    "00109b90": "\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __xstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00107760": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001100c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010ef78)();\n  return iVar1;\n}\n\n", 
    "00110138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error_at_line(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error_at_line@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001041d0": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "001065f0": "\nuint fraccompare(char *param_1,char *param_2,char param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  char *pcVar3;\n  char cVar4;\n  char cVar5;\n  int iVar6;\n  int iVar7;\n  char *pcVar8;\n  \n  if (*param_1 != param_3) {\n    if (param_3 != *param_2) {\n      return 0;\n    }\n    iVar7 = (int)param_2[1];\n    param_2 = param_2 + 1;\nLAB_00106688:\n    while ((char)iVar7 == '0') {\n      pcVar8 = param_2 + 1;\n      param_2 = param_2 + 1;\n      iVar7 = (int)*pcVar8;\n    }\n    return -(uint)(iVar7 - 0x30U < 10);\n  }\n  iVar6 = (int)param_1[1];\n  if (param_3 == *param_2) {\n    while( true ) {\n      cVar4 = param_2[1];\n      iVar7 = (int)cVar4;\n      cVar5 = (char)iVar6;\n      param_2 = param_2 + 1;\n      pcVar8 = param_1 + 1;\n      uVar1 = (int)cVar5 - 0x30;\n      if (cVar4 != cVar5) break;\n      if (9 < uVar1) {\n        return 0;\n      }\n      iVar6 = (int)param_1[2];\n      param_1 = pcVar8;\n    }\n    uVar2 = (int)cVar4 - 0x30;\n    if (9 < uVar1) {\n      if (9 < uVar2) {\n        return 0;\n      }\n      goto LAB_00106688;\n    }\n    if (uVar2 < 10) {\n      return (int)cVar5 - (int)cVar4;\n    }\n  }\n  else {\n    pcVar8 = param_1 + 1;\n  }\n  while ((char)iVar6 == '0') {\n    pcVar3 = pcVar8 + 1;\n    pcVar8 = pcVar8 + 1;\n    iVar6 = (int)*pcVar3;\n  }\n  return (uint)(iVar6 - 0x30U < 10);\n}\n\n", 
    "00105f80": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00110140": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "001042f0": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010efb0)();\n  return iVar1;\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010ef20)();\n  return iVar1;\n}\n\n", 
    "001100c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102980": "\nulong one_argument(void)\n\n{\n  char *pcVar1;\n  long lVar2;\n  \n  lVar2 = (long)pos;\n  pos = pos + 1;\n  pcVar1 = *(char **)(argv + lVar2 * 8);\n  return (ulong)pcVar1 & 0xffffffffffffff00 | (ulong)(*pcVar1 != '\\0');\n}\n\n", 
    "00109b60": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00102860": "\n/* WARNING: Removing unreachable block (ram,0x00102873) */\n/* WARNING: Removing unreachable block (ram,0x0010287f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00107630": "\nulong rpl_vasprintf(void **param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  void *__ptr;\n  int *piVar1;\n  long in_FS_OFFSET;\n  ulong local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (void *)vasnprintf(0,&local_18,param_2,param_3);\n  if (__ptr == (void *)0x0) {\n    local_18 = 0xffffffff;\n  }\n  else if (local_18 < 0x80000000) {\n    *param_1 = __ptr;\n    local_18 = local_18 & 0xffffffff;\n  }\n  else {\n    free(__ptr);\n    piVar1 = __errno_location();\n    *piVar1 = 0x4b;\n    local_18 = 0xffffffff;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_18;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106420": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106ff0": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107870": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "001100d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104480": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00110028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010ef70)();\n  return;\n}\n\n", 
    "00107190": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "00110148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109af0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001041c0": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "001064c0": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106f40": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "001077f0": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00110150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001065e0": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "00110030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010efa8)();\n  return iVar1;\n}\n\n", 
    "001100d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102890": "\n/* WARNING: Removing unreachable block (ram,0x001028b4) */\n/* WARNING: Removing unreachable block (ram,0x001028c0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00110118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010ef38)();\n  return iVar1;\n}\n\n", 
    "00107300": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "001100a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106330": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00107780": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106570": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00110110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025d0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010ef88)();\n  return;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010eef8)();\n  return iVar1;\n}\n\n", 
    "00110120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getegid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getegid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104a30": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010b119;\n      }\n      else {\n        pcVar2 = &DAT_0010b116;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010b11d;\n    }\n    else {\n      pcVar2 = &DAT_0010b112;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "001062b0": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102645": "\nvoid posixtest_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103b80": "\n/* WARNING: Removing unreachable block (ram,0x001035b0) */\n/* WARNING: Removing unreachable block (ram,0x00103679) */\n\nulong expr(void)\n\n{\n  long lVar1;\n  char *pcVar2;\n  long lVar3;\n  char cVar4;\n  byte bVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  size_t sVar9;\n  ulong uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  char *pcVar13;\n  char cVar14;\n  long lVar15;\n  long in_FS_OFFSET;\n  bool bVar16;\n  undefined8 uStack_1b0;\n  undefined8 uStack_1a8;\n  undefined8 uStack_1a0;\n  undefined8 uStack_198;\n  stat sStack_190;\n  stat sStack_100;\n  undefined auStack_50 [24];\n  long lStack_38;\n  ulong uStack_28;\n  \n  if (pos < argc) {\n    uVar10 = or();\n    return uVar10;\n  }\n  beyond();\n  lVar1 = argv;\n  pcVar13 = *(char **)(argv + ((long)pos + 1) * 8);\n  lVar15 = ((long)pos + 1) * 8;\n  lStack_38 = 0x103bce;\n  cVar4 = binop();\n  lVar3 = argv;\n  if (cVar4 == '\\0') {\n    pcVar2 = *(char **)(lVar1 + -8 + lVar15);\n    if ((*pcVar2 == '!') && (pcVar2[1] == '\\0')) {\n      lStack_38 = 0x103bf3;\n      advance(1);\n      lStack_38 = 0x103bf8;\n      uVar8 = two_arguments();\n      uStack_28 = (ulong)(uVar8 ^ 1);\n    }\n    else {\n      if ((*pcVar2 != '(') ||\n         (((pcVar2[1] != '\\0' || (pcVar2 = *(char **)(lVar1 + 8 + lVar15), *pcVar2 != ')')) ||\n          (pcVar2[1] != '\\0')))) {\n        if ((*pcVar13 == '-') &&\n           (((pcVar13[1] == 'a' && (pcVar13[2] == '\\0')) ||\n            ((pcVar13[1] == 'o' && (pcVar13[2] == '\\0')))))) {\n          uVar10 = expr();\n          return uVar10;\n        }\n        lStack_38 = 0x103c6a;\n        uVar11 = quote(pcVar13);\n        lStack_38 = 0x103c80;\n        uVar12 = dcgettext(0,\"%s: binary operator expected\",5);\n                    /* WARNING: Subroutine does not return */\n        lStack_38 = 0x103c8d;\n        test_syntax_error(uVar12,uVar11);\n      }\n      lStack_38 = 0x103c2a;\n      advance(0);\n      lStack_38 = 0x103c2f;\n      bVar5 = one_argument();\n      uStack_28 = uStack_28 & 0xffffffffffffff | (ulong)bVar5 << 0x38;\n      lStack_38 = 0x103c3a;\n      advance(0);\n      uStack_28 = uStack_28 >> 0x38;\n    }\n    return uStack_28;\n  }\n  lStack_38 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar10 = 0;\n  lVar15 = (long)(pos + 1);\n  if (pos + 1 < argc + -2) {\n    pcVar13 = *(char **)(argv + 8 + lVar15 * 8);\n    if (((*pcVar13 == '-') && (pcVar13[1] == 'l')) && (pcVar13[2] == '\\0')) {\n      uVar10 = 1;\n      advance(0);\n    }\n    else {\n      uVar10 = 0;\n    }\n  }\n  iVar7 = pos;\n  pcVar13 = *(char **)(lVar3 + lVar15 * 8);\n  lVar1 = lVar15 * 8;\n  if (*pcVar13 != '-') {\n    if ((*pcVar13 == '=') && ((pcVar13[1] == '\\0' || ((pcVar13[1] == '=' && (pcVar13[2] == '\\0')))))\n       ) {\n      iVar6 = strcmp(*(char **)(lVar3 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar3 + ((long)pos + 2) * 8));\n      uVar10 = (ulong)(iVar6 == 0);\n      pos = iVar7 + 3;\n    }\n    else {\n      if ((*pcVar13 != '!') || ((pcVar13[1] != '=' || (pcVar13[2] != '\\0')))) {\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      iVar6 = strcmp(*(char **)(lVar3 + -0x10 + ((long)pos + 2) * 8),\n                     *(char **)(lVar3 + ((long)pos + 2) * 8));\n      uVar10 = (ulong)(iVar6 != 0);\n      pos = iVar7 + 3;\n    }\n    goto LAB_001034a9;\n  }\n  cVar4 = pcVar13[1];\n  cVar14 = (char)uVar10;\n  if (((cVar4 == 'l') || (cVar4 == 'g')) && ((pcVar13[2] == 'e' || (pcVar13[2] == 't')))) {\n    if (pcVar13[3] != '\\0') {\nLAB_00103524:\n      if (cVar4 == 'o') {\n        if ((pcVar13[2] != 't') || (pcVar13[3] != '\\0')) goto LAB_001037b6;\n        pos = pos + 3;\n        if (cVar14 != '\\0') {\n          pcVar13 = \"-ot does not accept -l\";\n          goto LAB_00103851;\n        }\n        cVar4 = get_mtime(*(undefined8 *)(lVar3 + -8 + lVar1),&uStack_1b0);\n        uVar8 = get_mtime(*(undefined8 *)(lVar3 + 8 + lVar1),&uStack_1a0);\n        uVar10 = (ulong)uVar8;\n        if (((char)uVar8 != '\\0') && (cVar4 != '\\0')) {\n          uVar8 = timespec_cmp(uStack_1b0,uStack_1a8,uStack_1a0,uStack_198);\n          uVar10 = (ulong)(uVar8 >> 0x1f);\n        }\n        goto LAB_001034a9;\n      }\n      if ('o' < cVar4) goto LAB_001037b6;\n      if (cVar4 == 'e') {\n        cVar4 = pcVar13[2];\n        goto LAB_001035cc;\n      }\n      if (cVar4 != 'n') goto LAB_001037b6;\n      cVar4 = pcVar13[2];\nLAB_00103722:\n      if ((cVar4 != 't') || (pcVar13[3] != '\\0')) {\nLAB_001037b6:\n        uVar11 = quote();\n        uVar12 = dcgettext(0,\"%s: unknown binary operator\",5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar12,uVar11);\n      }\n      pos = pos + 3;\n      if (cVar14 != '\\0') {\n        pcVar13 = \"-nt does not accept -l\";\nLAB_00103851:\n        pos = iVar7 + 3;\n        uVar11 = dcgettext(0,pcVar13,5);\n                    /* WARNING: Subroutine does not return */\n        test_syntax_error(uVar11,0);\n      }\n      uVar8 = get_mtime(*(undefined8 *)(lVar3 + -8 + lVar1),&uStack_1b0);\n      uVar10 = (ulong)uVar8;\n      cVar4 = get_mtime(*(undefined8 *)(lVar3 + 8 + lVar1),&uStack_1a0);\n      if (((char)uVar8 != '\\0') && (cVar4 != '\\0')) {\n        iVar7 = timespec_cmp(uStack_1b0,uStack_1a8,uStack_1a0,uStack_198);\n        uVar10 = (ulong)(uVar8 & 0xffffff00 | (uint)(0 < iVar7));\n      }\n      goto LAB_001034a9;\n    }\n  }\n  else {\n    if (cVar4 != 'e') {\n      if (cVar4 != 'n') goto LAB_00103524;\n      cVar4 = pcVar13[2];\n      if (cVar4 == 'e') goto LAB_001037ac;\n      goto LAB_00103722;\n    }\n    cVar4 = pcVar13[2];\n    if (cVar4 != 'q') {\nLAB_001035cc:\n      if ((cVar4 != 'f') || (pcVar13[3] != '\\0')) goto LAB_001037b6;\n      pos = pos + 3;\n      if (cVar14 != '\\0') {\n        pcVar13 = \"-ef does not accept -l\";\n        goto LAB_00103851;\n      }\n      iVar7 = stat(*(char **)(lVar3 + -8 + lVar1),&sStack_190);\n      if (((iVar7 == 0) && (iVar7 = stat(*(char **)(lVar3 + 8 + lVar1),&sStack_100), iVar7 == 0)) &&\n         (sStack_190.st_dev == sStack_100.st_dev)) {\n        uVar10 = (ulong)(sStack_190.st_ino == sStack_100.st_ino);\n      }\n      goto LAB_001034a9;\n    }\nLAB_001037ac:\n    if (pcVar13[3] != '\\0') goto LAB_001037b6;\n  }\n  uVar11 = find_int();\n  if (cVar14 == '\\0') {\n    uVar12 = find_int(*(undefined8 *)(argv + 8 + lVar1));\n  }\n  else {\n    sVar9 = strlen(*(char **)(argv + 0x10 + lVar1));\n    uVar12 = umaxtostr(sVar9,auStack_50);\n  }\n  iVar7 = strintcmp(uVar11,uVar12);\n  lVar15 = *(long *)(argv + lVar15 * 8);\n  bVar16 = *(char *)(lVar15 + 2) == 'e';\n  cVar4 = *(char *)(lVar15 + 1);\n  pos = pos + 3;\n  if (cVar4 == 'l') {\n    uVar10 = (ulong)(iVar7 < (int)(uint)bVar16);\n  }\n  else if (cVar4 == 'g') {\n    uVar10 = (ulong)((int)-(uint)bVar16 < iVar7);\n  }\n  else {\n    uVar10 = (ulong)((iVar7 != 0) == bVar16);\n  }\nLAB_001034a9:\n  if (lStack_38 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar10;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010ef30)();\n  return pvVar1;\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010eea0)();\n  return sVar1;\n}\n\n", 
    "001100a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t geteuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* geteuid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104700": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00110008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102640": "\nvoid binary_operator_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106320": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "001100b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106200": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "00106560": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00107770": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00107890": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00110000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __snprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010eef0)();\n  return iVar1;\n}\n\n", 
    "00110128": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint euidaccess(char *__name,int __type)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_euidaccess_0010ef80)();\n  return iVar1;\n}\n\n", 
    "00110130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106f60": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001076f0": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001041e0": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00104268;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00104268:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010efb8)();\n  return ppuVar1;\n}\n\n", 
    "001100b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_0010ef28)();\n  return iVar1;\n}\n\n"
}