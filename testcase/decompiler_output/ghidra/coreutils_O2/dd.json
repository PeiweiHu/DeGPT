{
    "0010a400": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00103000": "\n/* WARNING: Removing unreachable block (ram,0x00103024) */\n/* WARNING: Removing unreachable block (ram,0x00103030) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "0010a640": "\nbool bkm_scale(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "00104cc0": "\nulong skip(int param_1,undefined8 param_2,ulong param_3,ulong param_4,ulong *param_5)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  long lVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  char *pcVar7;\n  ulong uVar8;\n  long lVar9;\n  long in_FS_OFFSET;\n  int local_dc;\n  stat local_d8;\n  long local_40;\n  \n  uVar8 = *param_5;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x7fffffffffffffff)) / ZEXT816(param_4),0) < param_3) {\n    lVar4 = skip_via_lseek(param_2,param_1,0,2);\n    if (lVar4 < 0) {\n      local_dc = 0;\n      goto LAB_00104da1;\n    }\n  }\n  else {\n    lVar9 = uVar8 + param_3 * param_4;\n    lVar4 = skip_via_lseek(param_2,param_1,lVar9,1);\n    if (-1 < lVar4) {\n      if (param_1 == 0) {\n        iVar2 = fstat(0,&local_d8);\n        if (iVar2 != 0) {\n          uVar5 = quotearg_style(4,param_2);\n          uVar6 = dcgettext(0,\"cannot fstat %s\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(1,*piVar3,uVar6,uVar5);\n        }\n        cVar1 = usable_st_size_isra_0(local_d8.st_mode);\n        param_3 = 0;\n        if ((cVar1 != '\\0') && ((ulong)local_d8.st_size < (ulong)(input_offset + lVar9))) {\n          param_3 = lVar9 - local_d8.st_size;\n          lVar9 = local_d8.st_size - input_offset;\n          param_3 = param_3 / param_4;\n        }\n        advance_input_offset(lVar9);\n      }\n      else {\nLAB_00104d48:\n        *param_5 = 0;\n        param_3 = 0;\n      }\nLAB_00104d53:\n      if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      return param_3;\n    }\n    local_dc = *piVar3;\n    lVar4 = skip_via_lseek(param_2,param_1,0,2);\n    if (lVar4 < 0) {\nLAB_00104da1:\n      if (param_1 == 0) {\n        alloc_ibuf();\n        uVar5 = ibuf;\n      }\n      else {\n        alloc_obuf();\n        uVar5 = obuf;\n      }\n      do {\n        uVar8 = param_4;\n        if (param_3 == 0) {\n          uVar8 = *param_5;\n          param_3 = 0;\n        }\n        while( true ) {\n          lVar4 = (*iread_fnc)(param_1,uVar5,uVar8);\n          if (lVar4 < 0) {\n            if (param_1 == 0) {\n              uVar5 = quotearg_style(4,param_2);\n              uVar6 = dcgettext(0,\"error reading %s\",5);\n                    /* WARNING: Subroutine does not return */\n              nl_error(0,*piVar3,uVar6,uVar5);\n            }\n            goto LAB_00104f5a;\n          }\n          if (lVar4 == 0) goto LAB_00104d53;\n          if (param_1 == 0) {\n            advance_input_offset(lVar4);\n          }\n          if (param_3 == 0) goto LAB_00104d48;\n          param_3 = param_3 - 1;\n          if (param_3 != 0) break;\n          uVar8 = *param_5;\n          param_3 = uVar8;\n          if (uVar8 == 0) goto LAB_00104d53;\n          param_3 = 0;\n        }\n      } while( true );\n    }\n    if (local_dc != 0) goto LAB_00104e46;\n  }\n  local_dc = 0x4b;\nLAB_00104e46:\n  if (param_1 == 0) {\n    uVar5 = quotearg_n_style_colon(0,3,param_2);\n    pcVar7 = \"%s: cannot skip\";\n  }\n  else {\nLAB_00104f5a:\n    uVar5 = quotearg_n_style_colon(0,3,param_2);\n    pcVar7 = \"%s: cannot seek\";\n  }\n  uVar6 = dcgettext(0,pcVar7,5);\n                    /* WARNING: Subroutine does not return */\n  nl_error(0,local_dc,uVar6,uVar5);\n}\n\n", 
    "00103120": "\nvoid siginfo_handler(void)\n\n{\n  info_signal_count = info_signal_count + 1;\n  return;\n}\n\n", 
    "001028d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00114f48)();\n  return iVar1;\n}\n\n", 
    "001029f0": "\nundefined4 main(undefined4 param_1,undefined8 *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  char cVar3;\n  int iVar4;\n  undefined4 uVar5;\n  long lVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  uint uVar9;\n  long in_FS_OFFSET;\n  stat sStack_c8;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  install_signal_handlers();\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  atexit(maybe_close_stdout);\n  iVar4 = getpagesize();\n  page_size = (long)iVar4;\n  parse_long_options(param_1,param_2,&DAT_0010e190,\"coreutils\",Version,usage,\"Paul Rubin\",\n                     \"David MacKenzie\",\"Stuart Kemp\",0);\n  close_stdout_required = 0;\n  iVar4 = getopt_long(param_1,param_2,\"\",long_options,0);\n  if (iVar4 != -1) {\n    usage(1);\nLAB_00102eae:\n    uVar7 = quotearg_style(4,input_file);\n    uVar8 = dcgettext(0,\"failed to open %s\",5);\n                    /* WARNING: Subroutine does not return */\n    nl_error(1,*(undefined4 *)param_2,uVar8,uVar7);\n  }\n  lVar6 = 0;\n  do {\n    trans_table[lVar6] = (char)lVar6;\n    lVar6 = lVar6 + 1;\n  } while (lVar6 != 0x100);\n  scanargs(param_1,param_2);\n  apply_translations();\n  lVar6 = input_file;\n  param_2 = (undefined8 *)__errno_location();\n  if (lVar6 == 0) {\n    input_file = dcgettext(0,\"standard input\",5);\n    set_fd_flags(0,input_flags,input_file);\n  }\n  else {\n    iVar4 = ifd_reopen(0,lVar6,input_flags,0);\n    if (iVar4 < 0) goto LAB_00102eae;\n  }\n  input_offset = lseek(0,0,1);\n  uVar9 = output_flags;\n  input_seekable = (byte)~(byte)((ulong)input_offset >> 0x38) >> 7;\n  if (input_offset < 0) {\n    input_offset = 0;\n  }\n  input_seek_errno = *(undefined4 *)param_2;\n  if (output_file == 0) {\n    output_file = dcgettext(0,\"standard output\",5);\n    set_fd_flags(1,uVar9,output_file);\n    goto LAB_00102c40;\n  }\n  uVar9 = (int)conversions_mask >> 6 & 0x80U | output_flags |\n          (uint)((conversions_mask & 0x1000) == 0) << 6;\n  if (seek_records == 0) {\n    uVar9 = uVar9 | -(uint)((conversions_mask & 0x200) == 0) & 0x200;\nLAB_00102bd2:\n    iVar4 = ifd_reopen(1,output_file,uVar9 | 1,0x1b6);\n    if (iVar4 < 0) {\n      uVar7 = quotearg_style(4,output_file);\n      uVar8 = dcgettext(0,\"failed to open %s\",5);\n                    /* WARNING: Subroutine does not return */\n      nl_error(1,*(undefined4 *)param_2,uVar8,uVar7);\n    }\n  }\n  else {\n    iVar4 = ifd_reopen(1,output_file,uVar9 | 2,0x1b6);\n    if (iVar4 < 0) goto LAB_00102bd2;\n  }\n  uVar2 = output_blocksize;\n  uVar1 = seek_records;\n  if ((seek_records != 0) && ((conversions_mask & 0x200) == 0)) {\n    lVar6 = seek_records * output_blocksize + seek_bytes;\n    if (SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x7fffffffffffffff)) / ZEXT816(output_blocksize),0) <\n        seek_records) {\n      uVar7 = dcgettext(0,\n                        \"offset too large: cannot truncate to a length of seek=%lu (%lu-byte) blocks\"\n                        ,5);\n                    /* WARNING: Subroutine does not return */\n      nl_error(1,0,uVar7,uVar1,uVar2);\n    }\n    iVar4 = iftruncate_constprop_0(lVar6);\n    if (iVar4 != 0) {\n      uVar5 = *(undefined4 *)param_2;\n      iVar4 = fstat(1,&sStack_c8);\n      if (iVar4 != 0) {\n        uVar7 = quotearg_style(4,output_file);\n        uVar8 = dcgettext(0,\"cannot fstat %s\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(1,*(undefined4 *)param_2,uVar8,uVar7);\n      }\n      if (((sStack_c8.st_mode & 0xf000) - 0x4000 & 0xffffb000) == 0) {\n        uVar7 = quotearg_style(4,output_file);\n        uVar8 = dcgettext(0,\"failed to truncate to %lu bytes in output file %s\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(1,uVar5,uVar8,lVar6,uVar7);\n      }\n    }\n  }\nLAB_00102c40:\n  start_time = gethrxtime();\n  next_time = start_time + 1000000000;\n  uVar5 = dd_copy();\n  if ((max_records | max_bytes) == 0) {\n    if ((i_nocache != '\\0') && (cVar3 = invalidate_cache(0,0), cVar3 == '\\0')) {\n      uVar7 = quotearg_n_style_colon(0,3,input_file);\n      uVar8 = dcgettext(0,\"failed to discard cache for: %s\",5);\n                    /* WARNING: Subroutine does not return */\n      nl_error(0,*(undefined4 *)param_2,uVar8,uVar7);\n    }\n    if ((o_nocache != '\\0') && (cVar3 = invalidate_cache(1,0), cVar3 == '\\0')) {\n      uVar7 = quotearg_n_style_colon(0,3,output_file);\n      uVar8 = dcgettext(0,\"failed to discard cache for: %s\",5);\n                    /* WARNING: Subroutine does not return */\n      nl_error(0,*(undefined4 *)param_2,uVar8,uVar7);\n    }\n  }\n  else {\n    if ((i_nocache != '\\0') || (i_nocache_eof != '\\0')) {\n      invalidate_cache(0,0);\n    }\n    if ((o_nocache != '\\0') || (o_nocache_eof != '\\0')) {\n      invalidate_cache(1,0);\n    }\n  }\n  finish_up();\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar5;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_unlocked_00114eb8)();\n  return iVar1;\n}\n\n", 
    "00116200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010af20": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c7a0": "\nundefined8 printf_fetchargs(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  undefined1 *puVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  long *plVar9;\n  char **ppcVar10;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar10 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar10 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar10 + 1;\n        }\n        pcVar6 = *ppcVar10;\n        if (pcVar6 == (char *)0x0) {\n          pcVar6 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar6;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          plVar9 = (long *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          plVar9 = *(long **)(param_1 + 2);\n          *(long **)(param_1 + 2) = plVar9 + 1;\n        }\n        puVar5 = (undefined1 *)*plVar9;\n        if (puVar5 == (undefined1 *)0x0) {\n          puVar5 = wide_null_string_2831;\n        }\n        *(undefined1 **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "00103a00": "\nulong is_nul(char *param_1,size_t param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  char *__s2;\n  \n  __s2 = param_1;\n  if (param_2 == 0) {\n    return 1;\n  }\n  while( true ) {\n    if (*__s2 != '\\0') {\n      return 0;\n    }\n    __s2 = __s2 + 1;\n    param_2 = param_2 - 1;\n    if (param_2 == 0) break;\n    if ((param_2 & 0xf) == 0) {\n      iVar1 = memcmp(param_1,__s2,param_2);\n      return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n    }\n  }\n  return 1;\n}\n\n", 
    "0010b6b0": "\nvoid xsum3(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = xsum();\n  xsum(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "001030a0": "\nundefined8 select_plural(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "001031c0": "\nvoid operand_is(undefined8 param_1,undefined8 param_2)\n\n{\n  operand_matches(param_1,param_2,0x3d);\n  return;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_gettimeofday_00114e60)();\n  return iVar1;\n}\n\n", 
    "0010b050": "\nlong argmatch(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "00107b60": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00107c80": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00102940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00114f80)();\n  return sVar1;\n}\n\n", 
    "00109910": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "00102820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00114ef0)();\n  return iVar1;\n}\n\n", 
    "0010b500": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00103110": "\nvoid interrupt_handler(undefined4 param_1)\n\n{\n  interrupt_signal = param_1;\n  return;\n}\n\n", 
    "00103ce0": "\nint ifd_reopen(undefined4 param_1,undefined8 param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  do {\n    process_signals();\n    iVar1 = fd_reopen(param_1,param_2,param_3,param_4);\n    if (-1 < iVar1) {\n      return iVar1;\n    }\n    piVar2 = __errno_location();\n  } while (*piVar2 == 4);\n  return iVar1;\n}\n\n", 
    "00109c40": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00114d58)();\n  return;\n}\n\n", 
    "00109a00": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "00116208": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcngettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcngettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00108240": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_001086c7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001086e9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00108c86;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010863f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_001086c7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010863f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_0010fcb9,param_5);\n      local_78 = (char *)gettext_quote(&DAT_0010fca9);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00108390:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00108bf0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00108b8b;\n          goto LAB_0010897b;\n        default:\nswitchD_00108aa0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00108e78;\n              }\n              if (lVar10 == -2) goto joined_r0x0010928a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00108860;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00108e78;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00108601;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00108b48;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00108b48;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00108b48:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00108857;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00108844;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00108844:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00108568;\n          goto LAB_00108857;\n        case 0x23:\n        case 0x7e:\nLAB_0010883b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00108844;\n          goto LAB_00108565;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00108aa0_caseD_25;\n        case 0x27:\nswitchD_00108aa0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00108568;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010858b;\n          }\n          goto LAB_00108860;\n        case 0x3f:\nswitchD_00108aa0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001091ee_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00108568;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010858b;\n          }\n          goto LAB_00108860;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00108498_caseD_5c;\n          if (!bVar20) {\nLAB_00108ad8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00108af0;\n          }\n          goto LAB_00108860;\n        case 0x7b:\n        case 0x7d:\nswitchD_00108aa0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010883b;\nLAB_00108565:\n          bVar23 = false;\n          goto LAB_00108568;\n        }\nLAB_00108970:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010897b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00108588;\n          goto LAB_001084b0;\n        }\nLAB_001089b0:\n        bVar21 = false;\n        goto joined_r0x001089c1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00108bd0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00108498_caseD_0;\n          default:\n            goto switchD_00108aa0_caseD_1;\n          case 7:\n            goto switchD_00108bf0_caseD_7;\n          case 8:\n            goto switchD_00108bf0_caseD_8;\n          case 9:\n            goto switchD_00108498_caseD_9;\n          case 10:\n            goto switchD_00108bf0_caseD_a;\n          case 0xb:\n            goto switchD_00108bf0_caseD_b;\n          case 0xc:\n            goto switchD_00108bf0_caseD_c;\n          case 0xd:\n            goto switchD_00108bf0_caseD_d;\n          case 0x20:\n            goto LAB_00108c19;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00108498_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00108c01;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001084a8;\n          case 0x27:\n            goto switchD_00108aa0_caseD_27;\n          case 0x3f:\n            goto switchD_00108aa0_caseD_3f;\n          case 0x5c:\n            goto switchD_00108498_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00108aa0_caseD_7b;\n          }\n        }\n        goto LAB_0010886e;\n      }\nLAB_00108bd0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00108bf0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00108498_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010858b;\n            }\nLAB_0010902b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010902b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00109068;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010858b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00108860;\n      default:\n        bVar23 = false;\n        goto switchD_00108aa0_caseD_1;\n      case 7:\nswitchD_00108bf0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00108bf0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00108498_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00108970;\n      case 10:\nswitchD_00108bf0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_001089b0;\n      case 0xb:\nswitchD_00108bf0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_001089b0;\n      case 0xc:\nswitchD_00108bf0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00108bf0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_001089b0;\n      case 0x20:\n        bVar5 = false;\nLAB_00108c19:\n        uVar15 = 0x20;\n        goto LAB_001084a8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00108498_caseD_21:\n        bVar22 = false;\n        goto LAB_00108565;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00108c01:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00108568;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001084b0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001084a8:\n        bVar22 = false;\n        goto LAB_001084b0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00108aa0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00108aa0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00108498_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00108ad8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00108970;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00108aa0_caseD_7b;\n      }\n      if (bVar20) goto LAB_001089d0;\n      bVar21 = false;\n      goto LAB_00108526;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00108857:\n      param_5 = 2;\nLAB_00108860:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010886e:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_001088a8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_001092f5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001088a8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001088a8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_001092f5;\nLAB_00108c86:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001086e9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00108b8b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00108390;\nswitchD_001091ee_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00109068:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010858b;\n    goto LAB_001084b0;\n  }\n  goto LAB_0010886e;\njoined_r0x0010928a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00108e78:\n  if (1 < uVar17) {\nLAB_00108e82:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00108860;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00108538;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00108af0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00108601:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00108e82;\n  }\nswitchD_00108aa0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00108568:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001084b0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010858b;\n  }\n  else {\nLAB_00108588:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010858b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00108af0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00108538;\n    }\n  }\njoined_r0x001089c1:\n  if (bVar20) {\nLAB_001089d0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00108860;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00108526:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00108538:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00108390;\n}\n\n", 
    "00107ae0": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "0010a5e0": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0010b6d0": "\nvoid xsum4(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = xsum();\n  uVar1 = xsum(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  xsum(uVar1,in_RCX);\n  return;\n}\n\n", 
    "001028c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00114f40)();\n  return iVar1;\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00114eb0)();\n  return pvVar1;\n}\n\n", 
    "0010a4b0": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010a50b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010a50b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010b5a0": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00103e70": "\nlong iread_fullblock(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  if (param_3 == 0) {\n    return 0;\n  }\n  lVar2 = 0;\n  while( true ) {\n    lVar1 = iread(param_1,param_2,param_3);\n    if (lVar1 < 0) {\n      return lVar1;\n    }\n    if (lVar1 == 0) break;\n    lVar2 = lVar2 + lVar1;\n    param_2 = param_2 + lVar1;\n    param_3 = param_3 - lVar1;\n    if (param_3 == 0) {\n      return lVar2;\n    }\n  }\n  return lVar2;\n}\n\n", 
    "001029cf": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d50": "\nulong iread(int param_1,void *param_2,ulong param_3)\n\n{\n  int iVar1;\n  ulong uVar2;\n  ulong uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  do {\n    process_signals();\n    uVar3 = read(param_1,param_2,param_3);\n    if (uVar3 == 0xffffffffffffffff) {\n      piVar4 = __errno_location();\n      iVar1 = *piVar4;\n      if (iVar1 == 0x16) {\n        if ((long)prev_nread_7192 < 1) {\n          prev_nread_7192 = uVar3;\n          return 0xffffffffffffffff;\n        }\n        if (param_3 <= prev_nread_7192) {\n          prev_nread_7192 = uVar3;\n          return 0xffffffffffffffff;\n        }\n        if ((input_flags._1_1_ & 0x40) == 0) {\n          prev_nread_7192 = uVar3;\n          return 0xffffffffffffffff;\n        }\n        *piVar4 = 0;\n        prev_nread_7192 = 0;\n        return 0;\n      }\n    }\n    else {\n      if (-1 < (long)uVar3) break;\n      piVar4 = __errno_location();\n      iVar1 = *piVar4;\n    }\n  } while (iVar1 == 4);\n  if (0 < (long)uVar3) {\n    if (uVar3 < param_3) {\n      process_signals();\n    }\n    else if ((long)uVar3 < 1) {\n      prev_nread_7192 = uVar3;\n      return uVar3;\n    }\n    uVar2 = prev_nread_7192;\n    if (((warn_partial_read != '\\0') && (0 < (long)prev_nread_7192)) && (prev_nread_7192 < param_3))\n    {\n      if (status_level != 1) {\n        uVar5 = select_plural(prev_nread_7192);\n        uVar5 = dcngettext(0,\"warning: partial read (%lu byte); suggest iflag=fullblock\",\n                           \"warning: partial read (%lu bytes); suggest iflag=fullblock\",uVar5,5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,0,uVar5,uVar2);\n      }\n      warn_partial_read = '\\0';\n    }\n  }\n  prev_nread_7192 = uVar3;\n  return uVar3;\n}\n\n", 
    "00116210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoumax@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00114ee8)();\n  return pvVar1;\n}\n\n", 
    "001029ca": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106b80": "\nlong xtime_nonnegative_nsec(long param_1)\n\n{\n  return param_1 % 1000000000;\n}\n\n", 
    "00109920": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00114f78)();\n  return;\n}\n\n", 
    "0010afb0": "\nulong rpl_vasprintf(void **param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  void *__ptr;\n  int *piVar1;\n  long in_FS_OFFSET;\n  ulong local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (void *)vasnprintf(0,&local_18,param_2,param_3);\n  if (__ptr == (void *)0x0) {\n    local_18 = 0xffffffff;\n  }\n  else if (local_18 < 0x80000000) {\n    *param_1 = __ptr;\n    local_18 = local_18 & 0xffffffff;\n  }\n  else {\n    free(__ptr);\n    piVar1 = __errno_location();\n    *piVar1 = 0x4b;\n    local_18 = 0xffffffff;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_18;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00114f98)();\n  return iVar1;\n}\n\n", 
    "00103140": "\nulong cache_round(int param_1,long param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong *puVar3;\n  ulong uVar4;\n  \n  puVar3 = &i_pending_7172;\n  if (param_1 != 0) {\n    puVar3 = &o_pending_7173;\n  }\n  uVar1 = *puVar3;\n  if (param_2 != 0) {\n    uVar4 = param_2 + uVar1;\n    uVar2 = (ulong)((uint)uVar4 & 0x1ffff);\n    uVar1 = uVar4 - uVar2;\n    *puVar3 = uVar2;\n    if (uVar4 <= uVar2) {\n      uVar1 = 0;\n    }\n  }\n  return uVar1;\n}\n\n", 
    "00106fe0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 * human_readable(ulong param_1,char *param_2,uint param_3,ulong param_4,ulong param_5)\n\n{\n  char *pcVar1;\n  undefined auVar2 [16];\n  undefined auVar3 [16];\n  float fVar4;\n  float fVar5;\n  char cVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  lconv *plVar10;\n  size_t sVar11;\n  size_t sVar12;\n  undefined8 *puVar13;\n  ulong uVar14;\n  ulong uVar15;\n  long lVar16;\n  uint uVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  undefined8 *puVar21;\n  ulong uVar22;\n  uint uVar23;\n  char *__s;\n  undefined8 *puVar24;\n  ulong uVar25;\n  bool bVar26;\n  undefined8 in_ST0;\n  undefined8 *local_78;\n  uint local_68;\n  \n  uVar7 = param_3 & 3;\n  uVar8 = param_3 & 0x20;\n  plVar10 = localeconv();\n  puVar21 = (undefined8 *)plVar10->decimal_point;\n  uVar20 = (-(uint)(uVar8 == 0) & 0xffffffe8) + 0x400;\n  sVar11 = strlen((char *)puVar21);\n  bVar26 = 0xf < sVar11 - 1;\n  if (bVar26) {\n    puVar21 = (undefined8 *)&DAT_0010fbe0;\n  }\n  pcVar1 = plVar10->grouping;\n  __s = plVar10->thousands_sep;\n  if (bVar26) {\n    sVar11 = 1;\n  }\n  sVar12 = strlen(__s);\n  if (0x10 < sVar12) {\n    __s = \"\";\n  }\n  local_78 = (undefined8 *)(param_2 + 0x287);\n  uVar19 = (uint)sVar11;\n  if (param_4 < param_5) {\n    if (param_4 != 0) {\n      auVar3 = ZEXT816(param_5) / ZEXT816(param_4);\n      if (param_5 % param_4 == 0) {\n        uVar22 = SUB168(ZEXT816(param_1) / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        auVar2 = ZEXT816((ulong)(SUB168(ZEXT816(param_1) %\n                                        (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 10));\n        uVar25 = SUB168(auVar2 % (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 2;\n        uVar9 = SUB164(auVar2 / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        uVar15 = (ulong)uVar9;\n        if (uVar25 < SUB168(auVar3,0)) {\n          uVar17 = (uint)(uVar25 != 0);\n        }\n        else {\n          uVar17 = (SUB168(auVar3,0) < uVar25) + 2;\n        }\n        goto joined_r0x00107356;\n      }\n    }\nLAB_001070cc:\n    fVar4 = (float)param_4;\n    if ((long)param_4 < 0) {\n      fVar4 = fVar4 + _DAT_0010fc44;\n    }\n    if ((long)param_5 < 0) {\n      fVar4 = fVar4 / ((float)param_5 + _DAT_0010fc44);\n      if ((long)param_1 < 0) goto LAB_00107200;\nLAB_00107109:\n      fVar4 = (float)param_1 * fVar4;\n      if ((param_3 & 0x10) != 0) goto LAB_00107115;\nLAB_00107248:\n      adjust_value(uVar7);\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\");\n      sVar12 = strlen(param_2);\n      uVar23 = 0xffffffff;\n      sVar11 = sVar12;\n    }\n    else {\n      fVar4 = fVar4 / (float)param_5;\n      if (-1 < (long)param_1) goto LAB_00107109;\nLAB_00107200:\n      fVar4 = ((float)param_1 + _DAT_0010fc44) * fVar4;\n      if ((param_3 & 0x10) == 0) goto LAB_00107248;\nLAB_00107115:\n      uVar23 = 0;\n      fVar5 = (float)uVar20;\n      do {\n        uVar23 = uVar23 + 1;\n        fVar5 = fVar5 * (float)uVar20;\n        if (fVar4 < fVar5) break;\n      } while (uVar23 != 8);\n      adjust_value(uVar7);\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.1Lf\");\n      sVar12 = strlen(param_2);\n      if ((sVar11 + 2 + (ulong)(uVar8 == 0) < sVar12) ||\n         (((param_3 & 8) != 0 && (param_2[sVar12 - 1] == '0')))) {\n        adjust_value(uVar7,in_ST0);\n        __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\");\n        sVar12 = strlen(param_2);\n        sVar11 = sVar12;\n      }\n      else {\n        sVar11 = sVar12 - (sVar11 + 1);\n      }\n    }\n    puVar13 = (undefined8 *)memmove((void *)((long)local_78 - sVar12),param_2,sVar12);\n    puVar24 = (undefined8 *)(sVar11 + (long)puVar13);\n  }\n  else {\n    if ((param_4 % param_5 != 0) ||\n       (uVar22 = param_1 * SUB168(ZEXT816(param_4) / ZEXT816(param_5),0),\n       SUB168(ZEXT816(uVar22) /\n              (ZEXT816(param_4) / ZEXT816(param_5) & (undefined  [16])0xffffffffffffffff),0) !=\n       param_1)) goto LAB_001070cc;\n    uVar17 = 0;\n    uVar15 = 0;\n    uVar9 = 0;\njoined_r0x00107356:\n    local_68 = param_3 & 0x10;\n    puVar13 = local_78;\n    if ((param_3 & 0x10) == 0) {\n      uVar23 = 0xffffffff;\nLAB_0010736b:\n      if (uVar7 != 1) goto LAB_0010737a;\n      puVar24 = local_78;\n      if (5 < (int)(uVar9 + (((uint)uVar22 & 1) + uVar17 != 0))) goto LAB_0010738a;\nLAB_001073b8:\n      do {\n        puVar13 = (undefined8 *)((long)puVar13 + -1);\n        *(char *)puVar13 = (char)uVar22 + (char)(uVar22 / 10) * -10 + '0';\n        bVar26 = 9 < uVar22;\n        uVar22 = uVar22 / 10;\n      } while (bVar26);\n    }\n    else {\n      uVar9 = (uint)uVar15;\n      uVar25 = (ulong)uVar20;\n      uVar23 = 0;\n      if (uVar22 < uVar25) goto LAB_0010736b;\n      while( true ) {\n        uVar14 = uVar22 / uVar25;\n        uVar9 = (int)uVar15 + (int)(uVar22 % uVar25) * 10;\n        uVar15 = (ulong)uVar9 / (ulong)uVar20;\n        uVar18 = ((int)uVar17 >> 1) + (uVar9 % uVar20) * 2;\n        uVar9 = (uint)uVar15;\n        uVar17 = uVar17 + uVar18;\n        if (uVar18 < uVar20) {\n          uVar17 = (uint)(uVar17 != 0);\n        }\n        else {\n          uVar17 = (uVar20 < uVar17) + 2;\n        }\n        uVar23 = uVar23 + 1;\n        uVar22 = uVar14;\n        if (uVar14 < uVar25) break;\n        if (uVar23 == 8) goto LAB_0010736b;\n      }\n      if (9 < uVar14) goto LAB_0010736b;\n      if (uVar7 == 1) {\n        bVar26 = 2 < (uVar9 & 1) + uVar17;\n      }\n      else {\n        bVar26 = uVar17 != 0 && uVar7 == 0;\n      }\n      if (bVar26) {\n        cVar6 = (char)uVar15 + '1';\n        if (uVar9 == 9) {\n          uVar22 = uVar14 + 1;\n          if (uVar14 != 9) {\n            uVar17 = 0;\n            goto LAB_0010767f;\n          }\n          goto LAB_001076c3;\n        }\n      }\n      else if (uVar9 == 0) {\nLAB_0010767f:\n        if ((param_3 & 8) != 0) goto LAB_001076c5;\n        cVar6 = '0';\n      }\n      else {\n        cVar6 = (char)uVar15 + '0';\n      }\n      param_2[0x286] = cVar6;\n      uVar15 = sVar11 & 0xffffffff;\n      puVar13 = (undefined8 *)(param_2 + (0x286 - sVar11));\n      if (uVar19 < 8) {\n        if ((sVar11 & 4) == 0) {\n          if (((int)uVar15 != 0) &&\n             (*(undefined *)puVar13 = *(undefined *)puVar21, (sVar11 & 2) != 0)) {\n            *(undefined2 *)((long)puVar13 + (uVar15 - 2)) =\n                 *(undefined2 *)((long)puVar21 + (uVar15 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)puVar13 = *(undefined4 *)puVar21;\n          *(undefined4 *)((long)puVar13 + (uVar15 - 4)) =\n               *(undefined4 *)((long)puVar21 + (uVar15 - 4));\n        }\n      }\n      else {\n        *puVar13 = *puVar21;\n        *(undefined8 *)((long)puVar13 + ((sVar11 & 0xffffffff) - 8)) =\n             *(undefined8 *)((long)puVar21 + ((sVar11 & 0xffffffff) - 8));\n        lVar16 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n        uVar9 = (int)lVar16 + uVar19 & 0xfffffff8;\n        if (7 < uVar9) {\n          uVar17 = 0;\n          do {\n            uVar15 = (ulong)uVar17;\n            uVar17 = uVar17 + 8;\n            *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar15) =\n                 *(undefined8 *)((long)puVar21 + (uVar15 - lVar16));\n          } while (uVar17 < uVar9);\n        }\n      }\nLAB_001076c3:\n      uVar17 = 0;\nLAB_001076c5:\n      puVar24 = puVar13;\n      if (uVar7 == 1) goto LAB_001073b8;\n      uVar9 = 0;\nLAB_0010737a:\n      puVar24 = puVar13;\n      if ((uVar7 != 0) || ((int)(uVar17 + uVar9) < 1)) goto LAB_001073b8;\nLAB_0010738a:\n      uVar22 = uVar22 + 1;\n      puVar13 = puVar24;\n      if (((local_68 == 0) || (uVar20 != uVar22)) || (uVar23 == 8)) goto LAB_001073b8;\n      uVar23 = uVar23 + 1;\n      if ((param_3 & 8) == 0) {\n        *(undefined *)((long)puVar24 + -1) = 0x30;\n        puVar24 = (undefined8 *)((long)puVar24 + ~sVar11);\n        uVar22 = sVar11 & 0xffffffff;\n        if (uVar19 < 8) {\n          if ((sVar11 & 4) == 0) {\n            if (((int)uVar22 != 0) &&\n               (*(undefined *)puVar24 = *(undefined *)puVar21, (sVar11 & 2) != 0)) {\n              *(undefined2 *)((long)puVar24 + (uVar22 - 2)) =\n                   *(undefined2 *)((long)puVar21 + (uVar22 - 2));\n            }\n          }\n          else {\n            *(undefined4 *)puVar24 = *(undefined4 *)puVar21;\n            *(undefined4 *)((long)puVar24 + (uVar22 - 4)) =\n                 *(undefined4 *)((long)puVar21 + (uVar22 - 4));\n          }\n        }\n        else {\n          *puVar24 = *puVar21;\n          *(undefined8 *)((long)puVar24 + ((sVar11 & 0xffffffff) - 8)) =\n               *(undefined8 *)((long)puVar21 + ((sVar11 & 0xffffffff) - 8));\n          lVar16 = (long)puVar24 - ((ulong)(puVar24 + 1) & 0xfffffffffffffff8);\n          uVar7 = (int)lVar16 + uVar19 & 0xfffffff8;\n          if (7 < uVar7) {\n            uVar19 = 0;\n            do {\n              uVar22 = (ulong)uVar19;\n              uVar19 = uVar19 + 8;\n              *(undefined8 *)(((ulong)(puVar24 + 1) & 0xfffffffffffffff8) + uVar22) =\n                   *(undefined8 *)((long)puVar21 + (uVar22 - lVar16));\n            } while (uVar19 < uVar7);\n          }\n        }\n      }\n      *(undefined *)((long)puVar24 + -1) = 0x31;\n      puVar13 = (undefined8 *)((long)puVar24 + -1);\n    }\n  }\n  if ((param_3 & 4) != 0) {\n    puVar13 = (undefined8 *)group_number(puVar13,(long)puVar24 - (long)puVar13,pcVar1,__s);\n  }\n  puVar21 = local_78;\n  if ((param_3 & 0x80) == 0) goto LAB_001072df;\n  if (uVar23 == 0xffffffff) {\n    if (param_5 < 2) {\n      uVar23 = 0;\n      goto LAB_001072cc;\n    }\n    uVar23 = 1;\n    uVar22 = 1;\n    do {\n      uVar22 = uVar22 * uVar20;\n      if (param_5 <= uVar22) break;\n      uVar23 = uVar23 + 1;\n    } while (uVar23 != 8);\n    if ((param_3 & 0x40) != 0) goto LAB_00107541;\nLAB_0010755f:\n    puVar21 = (undefined8 *)((long)local_78 + 1);\n    if ((uVar23 == 1) && (uVar8 == 0)) {\n      *(undefined *)local_78 = 0x6b;\n      goto joined_r0x00107635;\n    }\n    *(undefined1 *)local_78 = power_letter[(int)uVar23];\n    if ((param_3 & 0x100) == 0) goto LAB_001072df;\n    if (uVar8 != 0) {\n      *(undefined *)((long)local_78 + 1) = 0x69;\n      puVar21 = (undefined8 *)((long)local_78 + 2);\n    }\n  }\n  else {\nLAB_001072cc:\n    if ((param_3 & 0x100 | uVar23) == 0) goto LAB_001072df;\n    if ((param_3 & 0x40) != 0) {\nLAB_00107541:\n      local_78 = (undefined8 *)(param_2 + 0x288);\n      param_2[0x287] = ' ';\n    }\n    puVar21 = local_78;\n    if (uVar23 != 0) goto LAB_0010755f;\njoined_r0x00107635:\n    if ((param_3 & 0x100) == 0) goto LAB_001072df;\n  }\n  *(undefined *)puVar21 = 0x42;\n  puVar21 = (undefined8 *)((long)puVar21 + 1);\nLAB_001072df:\n  local_78 = puVar21;\n  *(undefined *)local_78 = 0;\n  return puVar13;\n}\n\n", 
    "00107860": "\nundefined8 human_options(undefined8 param_1,undefined8 param_2,long *param_3)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  \n  uVar1 = humblock(param_1,param_3,param_2);\n  if (*param_3 != 0) {\n    return uVar1;\n  }\n  lVar2 = default_block_size();\n  *param_3 = lVar2;\n  return 4;\n}\n\n", 
    "0010ab90": "\nundefined8 xvasprintf(char *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  long lVar4;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar1 = *param_1;\n  lVar4 = 0;\n  do {\n    if (cVar1 == '\\0') {\n      local_18 = xstrcat(lVar4,param_2);\nLAB_0010abf0:\n      if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return local_18;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if ((cVar1 != '%') || (param_1[lVar4 * 2 + 1] != 's')) {\n      iVar2 = rpl_vasprintf(&local_18,param_1);\n      if (iVar2 < 0) {\n        piVar3 = __errno_location();\n        if (*piVar3 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n          xalloc_die();\n        }\n        local_18 = 0;\n      }\n      goto LAB_0010abf0;\n    }\n    lVar4 = lVar4 + 1;\n    cVar1 = param_1[lVar4 * 2];\n  } while( true );\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigemptyset_00114ec8)();\n  return iVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dup2_00114e38)();\n  return iVar1;\n}\n\n", 
    "0010c9c0": "\nundefined8 printf_parse(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_0010ca3b:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_0010cb10:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_0010cb67;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_0010cb10;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_0010cb10;\n  }\n  goto switchD_0010cbf2_caseD_26;\nLAB_0010cb67:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_0010cb7b:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_0010cb84;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_0010cb84;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0010cd5c;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_0010cbf2_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0010cd5c:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_0010cbf2_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_0010cd77:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_0010cb84:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x0010cbe1;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_0010cb84;\n      }\n      goto LAB_0010cf66;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)xsum(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010d3ca;\nLAB_0010d59a:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010d4ce:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010cd77;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010d59a;\n        goto LAB_0010d4ce;\n      }\n      goto LAB_0010d5cf;\n    }\n    goto LAB_0010d5d3;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_0010cdee;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_0010cbf2_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_0010cdee:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_0010cbf2_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_0010ce8e:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_0010cf66;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_0010cb7b;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)xsum(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_0010d5d3;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_0010d411;\n      goto LAB_0010ce8a;\n    }\n    goto LAB_0010d5d3;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_0010d411:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_0010ce8a:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_0010ce8e;\n  }\n  goto LAB_0010d3ca;\ncode_r0x0010cbe1:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_0010cbf2_caseD_25;\n  default:\n    goto switchD_0010cbf2_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_0010cbf2_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_0010cf66;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_0010cc3b:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_0010cf66:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_0010cbf2_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_0010ca3b;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_0010d5cf:\n      __src = (byte **)param_3[1];\n      goto LAB_0010d5d3;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_0010cd08;\n        goto LAB_0010d29a;\n      }\n      goto LAB_0010d5cf;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_0010d29a:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_0010cd08:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_0010ca3b;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_0010d3da;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)xsum(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010d3ca;\nLAB_0010d251:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010d208:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010cc3b;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010d251;\n        goto LAB_0010d208;\n      }\n      goto LAB_0010d5cf;\n    }\nLAB_0010d5d3:\n    if (ppbVar2 == __src) goto LAB_0010d3ca;\n  }\n  free(__src);\nLAB_0010d3ca:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_0010d3da:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "001028f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_00114f58)();\n  return uVar1;\n}\n\n", 
    "00109cc0": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "00109ba0": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d690": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00102960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00114f90)();\n  return iVar1;\n}\n\n", 
    "00102840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00114f00)();\n  return iVar1;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00114e70)();\n  return pvVar1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_clock_gettime_00114de0)();\n  return iVar1;\n}\n\n", 
    "0010aea0": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "0010b600": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00109b00": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103490": "\nulong abbreviation_lacks_prefix(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  return sVar1 & 0xffffffffffffff00 | (ulong)(param_1[sVar1 - 2] == ' ');\n}\n\n", 
    "001028e0": "\nvoid dcngettext(void)\n\n{\n  (*(code *)PTR_dcngettext_00114f50)();\n  return;\n}\n\n", 
    "001027c0": "\nvoid __memcpy_chk(void)\n\n{\n  (*(code *)PTR___memcpy_chk_00114ec0)();\n  return;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00114e30)();\n  return sVar1;\n}\n\n", 
    "0010a5b0": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "001031d0": "\nvoid translate_buffer(char *param_1,long param_2)\n\n{\n  byte bVar1;\n  undefined1 *puVar2;\n  undefined *extraout_RDX;\n  char *pcVar3;\n  \n  if (param_2 != 0) {\n    pcVar3 = param_1 + param_2;\n    puVar2 = trans_table;\n    do {\n      bVar1 = to_uchar((int)*param_1);\n      param_1 = extraout_RDX + 1;\n      *extraout_RDX = puVar2[bVar1];\n    } while (param_1 != pcVar3);\n  }\n  return;\n}\n\n", 
    "00109cd0": "\nvoid verror_at_line(undefined4 param_1,undefined4 param_2,long param_3,undefined4 param_4,\n                   undefined8 param_5,undefined8 param_6)\n\n{\n  void *__ptr;\n  undefined8 uVar1;\n  int *piVar2;\n  \n  __ptr = (void *)xvasprintf(param_5,param_6);\n  if (__ptr != (void *)0x0) {\n    if (param_3 == 0) {\n      error(param_1,param_2,\"%s\",__ptr);\n    }\n    else {\n      error_at_line(param_1,param_2,param_3,param_4,\"%s\",__ptr);\n    }\n    free(__ptr);\n    return;\n  }\n  uVar1 = dcgettext(0,\"unable to display error message\",5);\n  piVar2 = __errno_location();\n  error(0,*piVar2,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001030b0": "\nlong ptr_align(long param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (param_2 - 1) + param_1;\n  return uVar1 - uVar1 % param_2;\n}\n\n", 
    "00103800": "\nundefined8 print_stats(void)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 in_RAX;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  \n  if (status_level == 1) {\n    return in_RAX;\n  }\n  if (0 < progress_len) {\n    fputc_unlocked(10,stderr);\n    progress_len = 0;\n  }\n  uVar6 = w_partial;\n  uVar3 = w_full;\n  uVar2 = r_partial;\n  uVar5 = r_full;\n  uVar4 = dcgettext(0,\"%lu+%lu records in\\n%lu+%lu records out\\n\",5);\n  __fprintf_chk(stderr,1,uVar4,uVar5,uVar2,uVar3);\n  lVar1 = r_truncate;\n  if (r_truncate != 0) {\n    uVar5 = select_plural(r_truncate);\n    uVar5 = dcngettext(0,\"%lu truncated record\\n\",\"%lu truncated records\\n\",uVar5,5);\n    uVar6 = __fprintf_chk(stderr,1,uVar5,lVar1);\n  }\n  if (status_level != 2) {\n    uVar5 = print_xfer_stats(0);\n    return uVar5;\n  }\n  return uVar6;\n}\n\n", 
    "0010b160": "\nvoid argmatch_invalid(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = quote_n(1,param_1);\n  uVar3 = quotearg_n_style(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "0010b040": "\nvoid __argmatch_die(void)\n\n{\n  usage(1);\n  return;\n}\n\n", 
    "00102950": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00114f88)();\n  return;\n}\n\n", 
    "00102830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00114ef8)();\n  return pcVar1;\n}\n\n", 
    "00103920": "\nvoid apply_translations(void)\n\n{\n  uint uVar1;\n  __int32_t **pp_Var2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  \n  uVar1 = conversions_mask;\n  if ((conversions_mask & 1) != 0) {\n    translate_charset(ebcdic_to_ascii);\n  }\n  if ((uVar1 & 0x40) == 0) {\n    if ((uVar1 & 0x20) == 0) goto LAB_0010396c;\n    pp_Var2 = __ctype_tolower_loc();\n    puVar3 = (undefined8 *)trans_table;\n    do {\n      puVar4 = (undefined8 *)((long)puVar3 + 1);\n      *(char *)puVar3 = (char)(*pp_Var2)[*(byte *)puVar3];\n      puVar3 = puVar4;\n    } while (puVar4 != &iread_fnc);\n  }\n  else {\n    pp_Var2 = __ctype_toupper_loc();\n    puVar3 = (undefined8 *)trans_table;\n    do {\n      puVar4 = (undefined8 *)((long)puVar3 + 1);\n      *(char *)puVar3 = (char)(*pp_Var2)[*(byte *)puVar3];\n      puVar3 = puVar4;\n    } while (puVar4 != &iread_fnc);\n  }\n  translation_needed = 1;\nLAB_0010396c:\n  if ((uVar1 & 2) != 0) {\n    translate_charset(ascii_to_ebcdic);\n    newline_character = 0x25;\n    space_character = 0x40;\n    return;\n  }\n  if ((uVar1 & 4) != 0) {\n    translate_charset(ascii_to_ibm);\n    newline_character = 0x25;\n    space_character = 0x40;\n    return;\n  }\n  return;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00114e68)();\n  return;\n}\n\n", 
    "00109900": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00104fe0": "\nundefined8 dd_copy(void)\n\n{\n  undefined *puVar1;\n  ulong uVar2;\n  char cVar3;\n  int iVar4;\n  long lVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  long lVar8;\n  ulong uVar9;\n  void *pvVar10;\n  int *piVar11;\n  ulong uVar12;\n  __off_t _Var13;\n  ulong uVar14;\n  uint uVar15;\n  long in_FS_OFFSET;\n  bool bVar16;\n  ulong local_e0;\n  stat local_d8;\n  long local_40;\n  \n  uVar2 = input_blocksize;\n  uVar9 = skip_records;\n  uVar12 = skip_bytes;\n  lVar8 = input_offset;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((skip_records | skip_bytes) != 0) &&\n     (((lVar5 = skip(0,input_file,skip_records,input_blocksize,&skip_bytes), lVar5 != 0 ||\n       ((uVar9 * uVar2 + uVar12 + lVar8 != input_offset && (input_offset_overflow != '\\x01')))) &&\n      (status_level != 1)))) {\n    uVar6 = quotearg_n_style_colon(0,3,input_file);\n    uVar7 = dcgettext(0,\"%s: cannot skip to specified offset\",5);\n                    /* WARNING: Subroutine does not return */\n    nl_error(0,0,uVar7,uVar6);\n  }\n  if ((seek_records | seek_bytes) != 0) {\n    local_e0 = seek_bytes;\n    lVar8 = skip(1,output_file,seek_records,output_blocksize,&local_e0);\n    uVar12 = output_blocksize;\n    if ((lVar8 != 0) || (uVar12 = local_e0, local_e0 != 0)) {\n      memset(obuf,0,uVar12);\n      do {\n        uVar12 = output_blocksize;\n        if (lVar8 == 0) goto LAB_0010512f;\n        uVar9 = iwrite_constprop_0(obuf,output_blocksize);\n        if (uVar12 != uVar9) goto LAB_001058ed;\n        lVar8 = lVar8 + -1;\n      } while (lVar8 != 0);\n      if (local_e0 != 0) {\nLAB_0010512f:\n        uVar12 = local_e0;\n        uVar9 = iwrite_constprop_0(obuf,local_e0);\n        if (uVar9 != uVar12) {\nLAB_001058ed:\n          uVar6 = quotearg_style(4,output_file);\n          uVar7 = dcgettext(0,\"writing to %s\",5);\n          piVar11 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n          nl_error(0,*piVar11,uVar7,uVar6);\n        }\n      }\n    }\n  }\n  uVar6 = 0;\n  if ((max_records | max_bytes) != 0) {\n    alloc_ibuf();\n    uVar12 = 0;\n    alloc_obuf();\njoined_r0x00105177:\n    if ((status_level == 4) && (lVar8 = gethrxtime(), next_time <= lVar8)) {\n      print_xfer_stats();\n      next_time = next_time + 1000000000;\n    }\n    uVar2 = max_bytes;\n    uVar9 = max_records;\n    uVar14 = r_full + r_partial;\n    if (uVar14 < (max_bytes != 0) + max_records) {\n      pvVar10 = ibuf;\n      if ((conversions_mask & 0x500) == 0x500) {\n        uVar15 = conversions_mask & 0x18;\n        if (uVar15 != 0) {\n          uVar15 = 0x20;\n        }\n        pvVar10 = memset(ibuf,uVar15,input_blocksize);\n      }\n      if (uVar14 < uVar9) {\n        uVar9 = (*iread_fnc)(0,pvVar10,input_blocksize);\n        if ((long)uVar9 < 1) goto LAB_00105204;\nLAB_001053c7:\n        uVar7 = advance_input_offset(uVar9);\n        if (i_nocache != 0) {\n          invalidate_cache(0,uVar7);\n        }\n        goto LAB_001052c5;\n      }\n      uVar9 = (*iread_fnc)(0,pvVar10,uVar2);\n      if (0 < (long)uVar9) goto LAB_001053c7;\nLAB_00105204:\n      if (uVar9 == 0) {\n        bVar16 = false;\n        i_nocache_eof = i_nocache_eof | i_nocache;\n        if (o_nocache != '\\0') {\n          bVar16 = (conversions_mask & 0x200) == 0;\n        }\n        o_nocache_eof = o_nocache_eof & 1 | bVar16;\n        goto LAB_00105613;\n      }\n      if (((conversions_mask & 0x100) == 0) || (status_level != 1)) {\n        uVar6 = quotearg_style(4,input_file);\n        uVar7 = dcgettext(0,\"error reading %s\",5);\n        piVar11 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,*piVar11,uVar7,uVar6);\n      }\n      print_stats();\n      invalidate_cache(0,input_blocksize - uVar12);\n      cVar3 = advance_input_after_read_error();\n      if (cVar3 == '\\0') {\n        input_seekable = 0;\n        uVar6 = 1;\n        input_seek_errno = 0x1d;\n      }\n      if (((conversions_mask & 0x400) == 0) || (uVar9 = uVar12, uVar12 != 0))\n      goto joined_r0x00105177;\nLAB_001052c5:\n      uVar12 = input_blocksize;\n      local_e0 = uVar9;\n      if (uVar9 < input_blocksize) {\n        r_partial = r_partial + 1;\n        if ((conversions_mask & 0x400) != 0) {\n          if ((conversions_mask & 0x100) == 0) {\n            uVar15 = conversions_mask & 0x18;\n            if (uVar15 != 0) {\n              uVar15 = 0x20;\n            }\n            memset((void *)((long)ibuf + uVar9),uVar15,input_blocksize - uVar9);\n          }\n          local_e0 = uVar12;\n        }\n        uVar12 = uVar9;\n        if (ibuf == obuf) {\nLAB_0010540e:\n          uVar9 = iwrite_constprop_0(ibuf,local_e0);\n          w_bytes = w_bytes + uVar9;\n          if (local_e0 != uVar9) goto LAB_00105539;\n          if (input_blocksize == uVar9) {\n            w_full = w_full + 1;\n          }\n          else {\n            w_partial = w_partial + 1;\n          }\n          goto joined_r0x00105177;\n        }\n      }\n      else {\n        r_full = r_full + 1;\n        uVar12 = 0;\n        if (ibuf == obuf) goto LAB_0010540e;\n      }\n      pvVar10 = ibuf;\n      if (translation_needed != '\\0') {\n        translate_buffer(ibuf,local_e0);\n      }\n      uVar9 = (ulong)conversions_mask;\n      if ((conversions_mask & 0x80) != 0) {\n        pvVar10 = (void *)swab_buffer(pvVar10,&local_e0);\n      }\n      if ((uVar9 & 8) == 0) {\n        if ((uVar9 & 0x10) == 0) {\n          copy_simple();\n        }\n        else {\n          copy_with_unblock();\n        }\n      }\n      else {\n        copy_with_block(pvVar10,local_e0);\n      }\n      goto joined_r0x00105177;\n    }\nLAB_00105613:\n    if (char_is_saved != '\\0') {\n      if ((conversions_mask & 8) == 0) {\n        if ((conversions_mask & 0x10) == 0) {\n          bVar16 = oc + 1 < output_blocksize;\n          puVar1 = (undefined *)((long)obuf + oc);\n          oc = oc + 1;\n          *puVar1 = saved_char;\n          if (bVar16) goto LAB_00105665;\n          write_output();\n        }\n        else {\n          copy_with_unblock(&saved_char,1);\n        }\n      }\n      else {\n        copy_with_block(&saved_char,1);\n      }\n    }\n    if ((conversions_mask & 8) == 0) goto LAB_00105665;\n    if (col == 0) goto LAB_001056ac;\n    uVar12 = col;\n    if (conversion_blocksize <= col) goto LAB_00105675;\n    do {\n      bVar16 = output_blocksize <= oc + 1;\n      puVar1 = (undefined *)((long)obuf + oc);\n      oc = oc + 1;\n      *puVar1 = space_character;\n      if (bVar16) {\n        write_output();\n      }\n      uVar12 = uVar12 + 1;\n    } while (uVar12 < conversion_blocksize);\nLAB_00105665:\n    if (col != 0) {\nLAB_00105675:\n      if ((conversions_mask & 0x10) != 0) {\n        bVar16 = output_blocksize <= oc + 1;\n        puVar1 = (undefined *)((long)obuf + oc);\n        oc = oc + 1;\n        *puVar1 = newline_character;\n        if (bVar16) {\n          write_output();\n        }\n      }\n    }\nLAB_001056ac:\n    if (oc != 0) {\n      uVar12 = iwrite_constprop_0(obuf);\n      w_bytes = w_bytes + uVar12;\n      if (uVar12 != 0) {\n        w_partial = w_partial + 1;\n      }\n      if (oc != uVar12) {\nLAB_00105539:\n        uVar6 = quotearg_style(4,output_file);\n        uVar7 = dcgettext(0,\"error writing %s\",5);\n        piVar11 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,*piVar11,uVar7,uVar6);\n      }\n    }\n    if (final_op_was_seek != '\\0') {\n      iVar4 = fstat(1,&local_d8);\n      if (iVar4 != 0) {\n        uVar6 = quotearg_style(4,output_file);\n        uVar7 = dcgettext(0,\"cannot fstat %s\",5);\n        piVar11 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,*piVar11,uVar7,uVar6);\n      }\n      if (((((local_d8.st_mode & 0xf000) == 0x8000) && (_Var13 = lseek(1,0,1), -1 < _Var13)) &&\n          (local_d8.st_size < _Var13)) && (iVar4 = iftruncate_constprop_0(_Var13), iVar4 != 0)) {\n        uVar6 = quotearg_style(4,output_file);\n        uVar7 = dcgettext(0,\"failed to truncate to %ld bytes in output file %s\",5);\n        piVar11 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,*piVar11,uVar7,_Var13,uVar6);\n      }\n    }\n    if (((conversions_mask & 0x4000) != 0) && (iVar4 = fdatasync(1), iVar4 != 0)) {\n      piVar11 = __errno_location();\n      if ((*piVar11 - 0x16U & 0xffffffef) != 0) {\n        uVar6 = quotearg_style(4,output_file);\n        uVar7 = dcgettext(0,\"fdatasync failed for %s\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,*piVar11,uVar7,uVar6);\n      }\n      conversions_mask = conversions_mask | 0x8000;\n    }\n    if ((conversions_mask & 0x8000) != 0) {\n      while (iVar4 = fsync(1), iVar4 != 0) {\n        piVar11 = __errno_location();\n        if (*piVar11 != 4) {\n          uVar6 = quotearg_style(4,output_file);\n          uVar7 = dcgettext(0,\"fsync failed for %s\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(0,*piVar11,uVar7,uVar6);\n        }\n      }\n    }\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar6;\n}\n\n", 
    "00106950": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "00102590": "\nvoid error_at_line(void)\n\n{\n  (*(code *)PTR_error_at_line_00114da8)();\n  return;\n}\n\n", 
    "0010a600": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001029b0": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00114fb8)();\n  return;\n}\n\n", 
    "001032a0": "\nvoid advance_input_offset(ulong param_1)\n\n{\n  bool bVar1;\n  \n  bVar1 = CARRY8(param_1,input_offset);\n  input_offset = param_1 + input_offset;\n  if (bVar1) {\n    input_offset_overflow = 1;\n  }\n  return;\n}\n\n", 
    "0010a6a0": "\nuint xstrtoumax(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0010a79b;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010a7dc:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_0010a830_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_0010a762;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_0010a806_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_0010a806_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = bkm_scale(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_0010a830_caseD_43;\n        case 0x45:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = bkm_scale(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = bkm_scale(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_0010a762;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010a7dc;\n      }\n    }\n  }\nLAB_0010a79b:\n  uVar10 = 4;\nLAB_0010a762:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00116088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* clock_gettime@@GLIBC_2.17 */\n  halt_baddata();\n}\n\n", 
    "00109ca0": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102900": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00114f60)();\n  return;\n}\n\n", 
    "00106c70": "\n/* WARNING: Removing unreachable block (ram,0x00106cdd) */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid adjust_value(void)\n\n{\n  return;\n}\n\n", 
    "0010b490": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010b370": "\nlong argmatch_to_argument(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00116080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fcntl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103ee0": "\nulong parse_integer(char *param_1,int *param_2)\n\n{\n  int iVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  bool bVar8;\n  undefined auVar9 [16];\n  ulong local_40;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = xstrtoumax(param_1,&local_38,10,&local_40,\"bcEGkKMPTwYZ0\");\n  if (iVar1 == 2) {\n    if (*local_38 == 'x') {\n      auVar9 = parse_integer(local_38 + 1,param_2);\n      uVar7 = SUB168(auVar9 >> 0x40,0);\n      uVar2 = SUB168(auVar9,0);\n      if (uVar2 != 0) {\n        uVar6 = (local_40 * uVar2) / uVar2;\n        uVar7 = (local_40 * uVar2) % uVar2;\n        bVar8 = local_40 != uVar6;\n        local_40 = uVar6;\n        if (bVar8) {\n          *param_2 = 1;\n          local_40 = 0;\n          goto LAB_00103f29;\n        }\n      }\n      if (((local_40 == 0) && (*param_1 == '0')) && (param_1[1] == 'x')) {\n        uVar3 = quote_n(1,&DAT_0010e0eb,uVar7);\n        uVar4 = quote_n(0,&DAT_0010e0ec);\n        uVar5 = dcgettext(0,\"warning: %s is a zero multiplier; use %s if that is intended\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,0,uVar5,uVar4,uVar3);\n      }\n      local_40 = local_40 * uVar2;\n      goto LAB_00103f29;\n    }\n  }\n  else if (iVar1 == 0) goto LAB_00103f29;\n  *param_2 = iVar1;\n  local_40 = 0;\nLAB_00103f29:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_40;\n}\n\n", 
    "00104400": "\nundefined8 advance_input_after_read_error(ulong param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  __off_t _Var5;\n  long lVar6;\n  ulong uVar7;\n  \n  iVar1 = input_seek_errno;\n  if (input_seekable == '\\0') {\n    if (input_seek_errno == 0x1d) {\n      return 1;\n    }\n    piVar2 = __errno_location();\n    *piVar2 = iVar1;\n  }\n  else {\n    advance_input_offset();\n    lVar6 = input_offset;\n    input_offset_overflow = input_offset_overflow | (byte)((ulong)input_offset >> 0x3f);\n    if (input_offset_overflow != 0) {\n      uVar3 = quotearg_style(4,input_file);\n      uVar4 = dcgettext(0,\"offset overflow while reading file %s\",5);\n                    /* WARNING: Subroutine does not return */\n      nl_error(0,0,uVar4,uVar3);\n    }\n    _Var5 = lseek(0,0,1);\n    if (-1 < _Var5) {\n      if (lVar6 != _Var5) {\n        uVar7 = lVar6 - _Var5;\n        if ((((long)uVar7 < 0) || (param_1 < uVar7)) && (status_level != 1)) {\n          uVar3 = dcgettext(0,\"warning: invalid file offset after failed read\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(0,0,uVar3);\n        }\n        lVar6 = skip_via_lseek(input_file,0,uVar7,1);\n        if (lVar6 < 0) {\n          piVar2 = __errno_location();\n          if (*piVar2 == 0) {\n            uVar3 = dcgettext(0,\"cannot work around kernel bug after all\",5);\n                    /* WARNING: Subroutine does not return */\n            nl_error(0,0,uVar3);\n          }\n          goto LAB_0010442c;\n        }\n      }\n      return 1;\n    }\n    piVar2 = __errno_location();\n  }\nLAB_0010442c:\n  uVar3 = quotearg_n_style_colon(0,3,input_file);\n  uVar4 = dcgettext(0,\"%s: cannot seek\",5);\n                    /* WARNING: Subroutine does not return */\n  nl_error(0,*piVar2,uVar4,uVar3);\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fdatasync(int __fildes)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fdatasync_00114da0)();\n  return iVar1;\n}\n\n", 
    "0010b700": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * vasnprintf(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = printf_parse(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_0010bf33;\n  }\n  iVar5 = printf_fetchargs(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_0010bf33;\n  }\n  uVar6 = xsum4(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_0010b7c1:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_0010b8b6;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x10b81c;\n      __n = (int *)xsum(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_0010b8a7;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_0010b845;\n        }\ncode_r0x0010c314:\n        *(undefined8 *)(puVar18 + -8) = 0x10c319;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_0010bdb9;\nLAB_0010bdac:\n        if (pvVar12 == (void *)0x0) goto LAB_0010bdb9;\n        goto LAB_0010bdb1;\n      }\n      piVar19 = (int *)0xc;\nLAB_0010b845:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010c314;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10c28c;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x0010c314;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x10c2d6;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10b88d;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_0010c78c;\n      }\nLAB_0010b8a7:\n      *(undefined8 *)(puVar18 + -8) = 0x10b8b6;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_0010b8b6:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x10c669;\n          piVar9 = (int *)xsum(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x0010c314;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010c314;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10c754;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010c314;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10c777;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10c6bb;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_0010c78c;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x10c743;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x10c6f2;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10c70a;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10c722;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_0010bf33;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_001029de;\n          *(undefined8 *)(puVar18 + -8) = 0x10c1c7;\n          piVar9 = (int *)xsum(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x0010c314;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010c314;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10c5a8;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010c314;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10c5e1;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10c21f;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_0010c78c;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_001029de:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_001029e3;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nvasnprintf_cold:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x1029de;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x10b9e6;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x10ba1d;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_001029de;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_001029de;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x10bb67;\n            piVar9 = (int *)xsum(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x0010c314;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010c314;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x10c55e;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010c314;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10c590;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x10bbb5;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010c314;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x10bbcb;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_0010bbf4:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto vasnprintf_cold;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_0010c048;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_0010bcaa:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x10bccb;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x0010bcdc;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_0010c094;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x10c004;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x0010bcdc;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10c408;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x0010bcdc;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_0010bcaa;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x10c3a1;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x0010bcdc;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_0010c09b;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_0010c048:\n              uVar11 = (ulong)local_3c0[0];\nLAB_0010be52:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10be73;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_0010be52;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_0010c094:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_0010c09b:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x10c0c3;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x0010bcdc:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_0010bcfc;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10bee3;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10bef7;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10bf0f;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10bf27;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_0010bf33;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_0010bbf4;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_001029de;\n            if (local_3c4 < iVar5) {\nLAB_0010bcfc:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10c4f6;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10c50a;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10c522;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10c53a;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_0010bf33;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x10bd3a;\n              uVar10 = xsum(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x10bd45;\n              piVar13 = (int *)xmax(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x10c140;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x10c163;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_0010bbf4;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x10bd90;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_0010bbf4;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_0010bdb9;\n                goto LAB_0010bdac;\n              }\n              goto LAB_0010bbf4;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_0010b7c1;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0010bdcd;\nLAB_0010c78c:\n  *(undefined8 *)(puVar18 + -8) = 0x10c791;\n  local_3e0 = __errno_location();\nLAB_0010bdb1:\n  *(undefined8 *)(puVar18 + -8) = 0x10bdb9;\n  free(pvVar12);\nLAB_0010bdb9:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x10bdcd;\n    free(puVar15);\n  }\nLAB_0010bdcd:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10bde5;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10bdfd;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_0010bf33:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x10c78c;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "001029a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00114fb0)();\n  return ppuVar1;\n}\n\n", 
    "0010b1f0": "\nvoid argmatch_valid(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,\", %s\",uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "00109680": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00116098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a20": "\nint fd_reopen(int param_1,char *param_2,int param_3,uint param_4)\n\n{\n  int iVar1;\n  int __fd;\n  int iVar2;\n  int *piVar3;\n  \n  __fd = open(param_2,param_3,(ulong)param_4);\n  if ((param_1 != __fd) && (-1 < __fd)) {\n    iVar2 = dup2(__fd,param_1);\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    close(__fd);\n    *piVar3 = iVar1;\n    return iVar2;\n  }\n  return __fd;\n}\n\n", 
    "00109cb0": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00106b40": "\nlong xtime_sec(long param_1)\n\n{\n  long lVar1;\n  \n  if (-1 < param_1) {\n    lVar1 = xtime_nonnegative_sec();\n    return lVar1;\n  }\n  return (param_1 + 999999999) / 1000000000 + -1;\n}\n\n", 
    "00116090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* write@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103100": "\nuint multiple_bits_set(uint param_1)\n\n{\n  return param_1 - 1 & 0xffffff00 | (uint)((param_1 - 1 & param_1) != 0);\n}\n\n", 
    "00104310": "\nvoid alloc_obuf(void)\n\n{\n  long lVar1;\n  long lVar2;\n  void *pvVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  undefined auStack_2b8 [664];\n  long local_20;\n  \n  lVar2 = page_size;\n  lVar1 = output_blocksize;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (obuf == 0) {\n    if ((conversions_mask._1_1_ & 8) == 0) {\n      alloc_ibuf();\n      obuf = ibuf;\n    }\n    else {\n      pvVar3 = malloc(page_size + -1 + output_blocksize);\n      if (pvVar3 == (void *)0x0) {\n        uVar4 = human_readable(lVar1,auStack_2b8,0x1f1,1,1);\n        uVar5 = dcgettext(0,\"memory exhausted by output buffer of size %lu bytes (%s)\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(1,0,uVar5,lVar1,uVar4);\n      }\n      obuf = ptr_align(pvVar3,lVar2);\n    }\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106970": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_001069f8;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_001069f8:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "001029d9": "\nvoid vasnprintf_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108110": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010fca1;\n      }\n      else {\n        pcVar2 = &DAT_0010fc9e;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010fca5;\n    }\n    else {\n      pcVar2 = &DAT_0010fc9a;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "001029d4": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107bf0": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010a1f0": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "0010aa30": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined * xstrcat(long param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  char *__s;\n  size_t sVar4;\n  ulong uVar5;\n  ulong uVar6;\n  undefined *puVar7;\n  int *piVar8;\n  char **ppcVar9;\n  long lVar10;\n  undefined *__dest;\n  long in_FS_OFFSET;\n  ulong local_58;\n  char **ppcStack_50;\n  \n  lVar2 = *(long *)(in_FS_OFFSET + 0x28);\n  local_58 = *param_2;\n  ppcStack_50 = (char **)param_2[1];\n  uVar3 = param_2[2];\n  if (param_1 == 0) {\n    __dest = (undefined *)xmalloc(1);\n    puVar7 = __dest;\n  }\n  else {\n    uVar5 = 0;\n    lVar10 = param_1;\n    do {\n      uVar6 = local_58 & 0xffffffff;\n      if ((uint)local_58 < 0x30) {\n        local_58 = (ulong)((uint)local_58 + 8);\n        ppcVar9 = (char **)(uVar6 + uVar3);\n      }\n      else {\n        ppcVar9 = ppcStack_50;\n        ppcStack_50 = ppcStack_50 + 1;\n      }\n      sVar4 = strlen(*ppcVar9);\n      uVar5 = xsum(uVar5,sVar4);\n      lVar10 = lVar10 + -1;\n    } while (lVar10 != 0);\n    if (0x7fffffff < uVar5) {\n      piVar8 = __errno_location();\n      puVar7 = (undefined *)0x0;\n      *piVar8 = 0x4b;\n      goto LAB_0010ab44;\n    }\n    puVar7 = (undefined *)xmalloc(uVar5 + 1);\n    __dest = puVar7;\n    do {\n      uVar1 = *(uint *)param_2;\n      if (uVar1 < 0x30) {\n        ppcVar9 = (char **)((ulong)uVar1 + param_2[2]);\n        *(uint *)param_2 = uVar1 + 8;\n      }\n      else {\n        ppcVar9 = (char **)param_2[1];\n        param_2[1] = (ulong)(ppcVar9 + 1);\n      }\n      __s = *ppcVar9;\n      sVar4 = strlen(__s);\n      memcpy(__dest,__s,sVar4);\n      __dest = __dest + sVar4;\n      param_1 = param_1 + -1;\n    } while (param_1 != 0);\n  }\n  *__dest = 0;\nLAB_0010ab44:\n  if (lVar2 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return puVar7;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001028b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fsync(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fsync_00114f38)();\n  return iVar1;\n}\n\n", 
    "00116068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001032c0": "\nvoid maybe_close_stdout(void)\n\n{\n  int iVar1;\n  \n  if (close_stdout_required != '\\0') {\n    close_stdout();\n    return;\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(1);\n}\n\n", 
    "00116188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "00102920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigismember(sigset_t *__set,int __signo)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigismember_00114f70)();\n  return iVar1;\n}\n\n", 
    "0010b470": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00116060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00114ee0)();\n  return iVar1;\n}\n\n", 
    "00109da0": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0011041b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010a069;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0010a069:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010a10b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010a10b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00109ebd;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00109ebd:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00116180": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103210": "\nlong swab_buffer(long param_1,ulong *param_2)\n\n{\n  long lVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  ulong uVar5;\n  \n  if (char_is_saved == '\\0') {\n    uVar5 = *param_2;\n    lVar1 = param_1;\n    param_1 = param_1 + 1;\n  }\n  else {\n    char_is_saved = '\\0';\n    lVar1 = param_1 + -1;\n    *(undefined *)(param_1 + -1) = saved_char;\n    uVar5 = *param_2 + 1;\n    *param_2 = uVar5;\n  }\n  if ((uVar5 & 1) == 0) {\n    puVar2 = (undefined *)(lVar1 + uVar5);\n  }\n  else {\n    uVar5 = uVar5 - 1;\n    char_is_saved = '\\x01';\n    puVar2 = (undefined *)(lVar1 + uVar5);\n    *param_2 = uVar5;\n    saved_char = *puVar2;\n  }\n  puVar3 = puVar2;\n  if (uVar5 >> 1 != 0) {\n    do {\n      puVar4 = puVar3 + -2;\n      *puVar3 = puVar3[-2];\n      puVar3 = puVar4;\n    } while (puVar2 + (uVar5 >> 1) * -2 != puVar4);\n  }\n  return param_1;\n}\n\n", 
    "00102000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00114fd0;\n  if (PTR___gmon_start___00114fd0 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00114fd0)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00106960": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "001029c5": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001095e0": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "001028a0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00114f30)();\n  return;\n}\n\n", 
    "0010b2f0": "\nlong __xargmatch_internal\n               (undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = argmatch(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    argmatch_invalid(param_1,param_2,lVar1);\n    argmatch_valid(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "001029c0": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103c10": "\nvoid process_signals(void)\n\n{\n  int __sig;\n  EVP_PKEY_CTX *ctx;\n  long in_FS_OFFSET;\n  sigset_t sStack_a8;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  while ((interrupt_signal != 0 || (info_signal_count != 0))) {\n    while( true ) {\n      sigprocmask(0,(sigset_t *)caught_signals,&sStack_a8);\n      __sig = interrupt_signal;\n      if (info_signal_count != 0) {\n        info_signal_count = info_signal_count + -1;\n      }\n      ctx = (EVP_PKEY_CTX *)0x2;\n      sigprocmask(2,&sStack_a8,(sigset_t *)0x0);\n      if (__sig != 0) break;\n      print_stats();\n      if ((interrupt_signal == 0) && (info_signal_count == 0)) goto LAB_00103c9a;\n    }\n    cleanup(ctx);\n    print_stats();\n    raise(__sig);\n  }\nLAB_00103c9a:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001068e0": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001079d0": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00103d30": "\nvoid finish_up(EVP_PKEY_CTX *param_1)\n\n{\n  cleanup(param_1);\n  print_stats();\n  process_signals();\n  return;\n}\n\n", 
    "00109660": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00116198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* localeconv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getpagesize_00114f68)();\n  return iVar1;\n}\n\n", 
    "001060e0": "\nvoid scanargs(int param_1,long param_2)\n\n{\n  char **ppcVar1;\n  char *__s;\n  char *pcVar2;\n  ulong uVar3;\n  char cVar4;\n  uint uVar5;\n  char *pcVar6;\n  ulong uVar7;\n  ulong uVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  uint extraout_EDX;\n  uint extraout_EDX_00;\n  uint extraout_EDX_01;\n  char **ppcVar12;\n  ulong uVar13;\n  undefined8 uVar14;\n  long in_FS_OFFSET;\n  ulong local_60;\n  ulong local_58;\n  ulong local_50;\n  int local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((int)optind < param_1) {\n    local_50 = 0;\n    uVar13 = 0;\n    local_60 = 0;\n    ppcVar12 = (char **)(param_2 + (long)(int)optind * 8);\n    local_58 = 0xffffffffffffffff;\n    ppcVar1 = (char **)(param_2 + 8 + ((ulong)(~optind + param_1) + (long)(int)optind) * 8);\nLAB_00106160:\n    do {\n      __s = *ppcVar12;\n      pcVar6 = strchr(__s,0x3d);\n      if (pcVar6 == (char *)0x0) {\nLAB_00106759:\n        uVar10 = quote(__s);\n        uVar9 = dcgettext(0,\"unrecognized operand %s\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,0,uVar9,uVar10);\n      }\n      pcVar6 = pcVar6 + 1;\n      cVar4 = operand_is(__s,&DAT_0010e256);\n      pcVar2 = pcVar6;\n      if (cVar4 != '\\0') goto LAB_00106157;\n      cVar4 = operand_is();\n      if (cVar4 == '\\0') {\n        cVar4 = operand_is();\n        if (cVar4 == '\\0') {\n          cVar4 = operand_is();\n          if (cVar4 == '\\0') {\n            cVar4 = operand_is();\n            if (cVar4 == '\\0') {\n              cVar4 = operand_is();\n              if (cVar4 == '\\0') {\n                local_44 = 0;\n                uVar7 = parse_integer(pcVar6,&local_44);\n                cVar4 = operand_is(__s,&DAT_0010e2c3);\n                uVar11 = local_60;\n                uVar3 = local_50;\n                if (cVar4 == '\\0') {\n                  cVar4 = operand_is();\n                  if (cVar4 != '\\0') {\n                    uVar8 = -page_size;\n                    output_blocksize = uVar7;\n                    if (0x7ffffffffffffffe < uVar8 && page_size != -0x7fffffffffffffff) {\n                      uVar8 = 0x7fffffffffffffff;\n                    }\n                    goto LAB_001064e6;\n                  }\n                  cVar4 = operand_is();\n                  if (cVar4 != '\\0') {\n                    uVar8 = (page_size + 2) * -2;\n                    uVar13 = uVar7;\n                    if (0x7fffffffffffffff < uVar8) {\n                      uVar8 = 0x7fffffffffffffff;\n                    }\n                    goto LAB_001064e6;\n                  }\n                  cVar4 = operand_is();\n                  if (cVar4 == '\\0') {\n                    cVar4 = operand_is();\n                    uVar11 = uVar7;\n                    if (((cVar4 == '\\0') &&\n                        (cVar4 = operand_is(), uVar11 = local_60, uVar3 = uVar7, cVar4 == '\\0')) &&\n                       (cVar4 = operand_is(), local_58 = uVar7, uVar3 = local_50, cVar4 == '\\0'))\n                    goto LAB_00106759;\n                    goto LAB_001065e7;\n                  }\n                  conversion_blocksize = uVar7;\n                  if (uVar7 != 0) goto LAB_001065e7;\n                }\n                else {\n                  uVar8 = (page_size + 2) * -2;\n                  input_blocksize = uVar7;\n                  if (0x7fffffffffffffff < uVar8) {\n                    uVar8 = 0x7fffffffffffffff;\n                  }\nLAB_001064e6:\n                  if (uVar7 != 0) {\n                    if (uVar8 < uVar7) {\n                      local_44 = 1;\n                      goto LAB_001064f7;\n                    }\nLAB_001065e7:\n                    local_50 = uVar3;\n                    local_60 = uVar11;\n                    pcVar2 = input_file;\n                    if (local_44 != 0) goto LAB_001064f7;\n                    goto LAB_00106157;\n                  }\n                }\n                local_44 = 4;\nLAB_001064f7:\n                uVar10 = quote(pcVar6);\n                uVar9 = dcgettext(0,\"invalid number\",5);\n                uVar14 = 0x4b;\n                if (local_44 != 1) {\n                  uVar14 = 0;\n                }\n                    /* WARNING: Subroutine does not return */\n                nl_error(1,uVar14,\"%s: %s\",uVar9,uVar10);\n              }\n              status_level = parse_symbols(pcVar6,&statuses,1,\"invalid status level\");\n              pcVar2 = input_file;\n            }\n            else {\n              uVar5 = parse_symbols(pcVar6,\"append\",0,\"invalid output flag\");\n              output_flags = output_flags | uVar5;\n              pcVar2 = input_file;\n            }\n          }\n          else {\n            uVar5 = parse_symbols(pcVar6,\"append\",0,\"invalid input flag\");\n            input_flags = input_flags | uVar5;\n            pcVar2 = input_file;\n          }\n        }\n        else {\n          uVar5 = parse_symbols(pcVar6,&conversions,0,\"invalid conversion\");\n          conversions_mask = conversions_mask | uVar5;\n          pcVar2 = input_file;\n        }\nLAB_00106157:\n        input_file = pcVar2;\n        ppcVar12 = ppcVar12 + 1;\n        if (ppcVar1 == ppcVar12) break;\n        goto LAB_00106160;\n      }\n      ppcVar12 = ppcVar12 + 1;\n      output_file = pcVar6;\n    } while (ppcVar1 != ppcVar12);\n    uVar11 = uVar13;\n    if (uVar13 != 0) goto LAB_001061cb;\n  }\n  else {\n    local_58 = 0xffffffffffffffff;\n    local_50 = 0;\n    local_60 = 0;\n  }\n  conversions_mask = conversions_mask | 0x800;\n  if (input_blocksize == 0) {\n    input_blocksize = 0x200;\n  }\n  uVar13 = output_blocksize;\n  uVar11 = input_blocksize;\n  if (output_blocksize == 0) {\n    output_blocksize = 0x200;\n    uVar13 = output_blocksize;\n  }\nLAB_001061cb:\n  input_blocksize = uVar11;\n  output_blocksize = uVar13;\n  if (conversion_blocksize == 0) {\n    conversions_mask = conversions_mask & 0xffffffe7;\n  }\n  if ((input_flags & 0x101000) != 0) {\n    input_flags = input_flags | 0x101000;\n  }\n  uVar13 = (ulong)output_flags;\n  if ((output_flags & 1) == 0) {\n    uVar11 = (ulong)input_flags;\n    if ((input_flags & 0x10) == 0) {\n      if ((output_flags & 0xc) == 0) {\n        if ((input_flags & 8) == 0) {\n          if (local_60 != 0) {\n            skip_records = local_60;\n          }\n        }\n        else if (local_60 != 0) {\n          skip_records = local_60 / input_blocksize;\n          skip_bytes = local_60 % input_blocksize;\n        }\n        if ((input_flags & 4) == 0) {\n          if (local_58 != 0xffffffffffffffff) {\n            max_records = local_58;\n          }\n        }\n        else if (local_58 != 0xffffffffffffffff) {\n          max_records = local_58 / input_blocksize;\n          max_bytes = local_58 % input_blocksize;\n        }\n        if ((output_flags & 0x10) == 0) {\n          if (local_50 != 0) {\n            seek_records = local_50;\n          }\n        }\n        else if (local_50 != 0) {\n          seek_records = local_50 / output_blocksize;\n          seek_bytes = local_50 % output_blocksize;\n        }\n        if ((conversions_mask & 0x800 | input_flags & 1) == 0) {\n          if (((skip_records == 0) && (0xfffffffffffffffd < max_records - 1)) &&\n             (((output_flags | input_flags) & 0x4000) == 0)) {\n            warn_partial_read = 0;\n            iread_fnc = iread;\n          }\n          else {\n            warn_partial_read = 1;\n            iread_fnc = iread;\n          }\n        }\n        else {\n          iread_fnc = iread_fullblock;\n          warn_partial_read = 0;\n          if ((input_flags & 1) == 0) {\n            iread_fnc = iread;\n          }\n        }\n        input_flags = input_flags & 0xfffffffe;\n        cVar4 = multiple_bits_set(conversions_mask & 7);\n        if (cVar4 != '\\0') {\n          uVar10 = dcgettext(0,\"cannot combine any two of {ascii,ebcdic,ibm}\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(1,0,uVar10);\n        }\n        cVar4 = multiple_bits_set(extraout_EDX & 0x18);\n        if (cVar4 != '\\0') {\n          uVar10 = dcgettext(0,\"cannot combine block and unblock\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(1,0,uVar10);\n        }\n        cVar4 = multiple_bits_set(extraout_EDX_00 & 0x60);\n        if (cVar4 != '\\0') {\n          uVar10 = dcgettext(0,\"cannot combine lcase and ucase\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(1,0,uVar10);\n        }\n        cVar4 = multiple_bits_set(extraout_EDX_01 & 0x3000);\n        if (cVar4 != '\\0') {\n          uVar10 = dcgettext(0,\"cannot combine excl and nocreat\",5);\n                    /* WARNING: Subroutine does not return */\n          nl_error(1,0,uVar10);\n        }\n        cVar4 = multiple_bits_set((uint)uVar11 & 0x4002);\n        if ((cVar4 == '\\0') && (cVar4 = multiple_bits_set((uint)uVar13 & 0x4002), cVar4 == '\\0')) {\n          if ((uVar11 & 2) != 0) {\n            i_nocache_eof = (max_records | max_bytes) == 0;\n            i_nocache = 1;\n            input_flags = (uint)uVar11 & 0xfffffffc;\n          }\n          if ((uVar13 & 2) != 0) {\n            o_nocache_eof = (max_records | max_bytes) == 0;\n            o_nocache = 1;\n            output_flags = (uint)uVar13 & 0xfffffffd;\n          }\n          if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n            __stack_chk_fail();\n          }\n          return;\n        }\n        uVar10 = dcgettext(0,\"cannot combine direct and nocache\",5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(1,0,uVar10);\n      }\n      pcVar6 = \"count_bytes\";\n      if ((output_flags & 4) == 0) {\n        pcVar6 = \"skip_bytes\";\n      }\n      uVar10 = quote(pcVar6);\n      pcVar6 = \"invalid output flag\";\n    }\n    else {\n      uVar10 = quote(\"seek_bytes\");\n      pcVar6 = \"invalid input flag\";\n    }\n  }\n  else {\n    uVar10 = quote(\"fullblock\");\n    pcVar6 = \"invalid output flag\";\n  }\n  uVar9 = dcgettext(0,pcVar6,5);\n                    /* WARNING: Subroutine does not return */\n  nl_error(0,0,\"%s: %s\",uVar9,uVar10);\n}\n\n", 
    "0010b480": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00116190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sigaction@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00114e18)();\n  return sVar1;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00114d88)();\n  return;\n}\n\n", 
    "001160e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106aa0": "\nvoid gethrxtime(void)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  timespec local_28;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = clock_gettime(1,&local_28);\n  if (iVar1 != 0) {\n    gettime(&local_28);\n  }\n  xtime_make(local_28.tv_sec,local_28.tv_nsec);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00114ea8)();\n  return iVar1;\n}\n\n", 
    "00106bc0": "\nlong xtime_nsec(long param_1)\n\n{\n  param_1 = param_1 % 1000000000;\n  if (param_1 < 0) {\n    param_1 = param_1 + 1000000000;\n  }\n  return param_1;\n}\n\n", 
    "00103080": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001160e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dup2@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00114dd8)();\n  return iVar1;\n}\n\n", 
    "00116168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputc_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d6d4": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00116048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error_at_line(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error_at_line@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106b10": "\nlong xtime_nonnegative_sec(long param_1)\n\n{\n  return param_1 / 1000000000;\n}\n\n", 
    "00109990": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104b70": "\nvoid copy_with_unblock(long param_1,ulong param_2)\n\n{\n  undefined *puVar1;\n  char cVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  ulong uVar6;\n  bool bVar7;\n  \n  if (param_2 == 0) {\n    return;\n  }\n  uVar6 = 0;\n  do {\n    bVar7 = col < conversion_blocksize;\n    cVar2 = *(char *)(param_1 + uVar6);\n    col = col + 1;\n    if (bVar7) {\n      uVar6 = uVar6 + 1;\n      uVar3 = oc;\n      lVar5 = obuf;\n      uVar4 = output_blocksize;\n      if (space_character == cVar2) {\n        pending_spaces_7449 = pending_spaces_7449 + 1;\n      }\n      else {\n        for (; pending_spaces_7449 != 0; pending_spaces_7449 = pending_spaces_7449 + -1) {\n          oc = uVar3 + 1;\n          *(char *)(lVar5 + uVar3) = space_character;\n          if (uVar4 <= oc) {\n            write_output();\n            uVar4 = output_blocksize;\n            lVar5 = obuf;\n          }\n          uVar3 = oc;\n        }\n        oc = uVar3 + 1;\n        *(char *)(lVar5 + uVar3) = cVar2;\n        if (uVar4 <= oc) goto LAB_00104c4c;\n      }\n    }\n    else {\n      pending_spaces_7449 = 0;\n      col = 0;\n      bVar7 = output_blocksize <= oc + 1;\n      puVar1 = (undefined *)(obuf + oc);\n      oc = oc + 1;\n      *puVar1 = newline_character;\n      if (bVar7) {\nLAB_00104c4c:\n        write_output();\n      }\n    }\n    if (param_2 <= uVar6) {\n      return;\n    }\n  } while( true );\n}\n\n", 
    "00106e70": "\nundefined8 humblock(char *param_1,undefined8 *param_2,uint *param_3)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  long in_FS_OFFSET;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((param_1 == (char *)0x0) && (param_1 = getenv(\"BLOCK_SIZE\"), param_1 == (char *)0x0)) &&\n     (param_1 = getenv(\"BLOCKSIZE\"), param_1 == (char *)0x0)) {\n    uVar4 = default_block_size();\n    uVar5 = 0;\n    *param_2 = uVar4;\n  }\n  else {\n    uVar5 = 0;\n    if (*param_1 == '\\'') {\n      param_1 = param_1 + 1;\n      uVar5 = 4;\n    }\n    iVar3 = argmatch(param_1,block_size_args,&block_size_opts,4);\n    if (iVar3 < 0) {\n      uVar4 = xstrtoumax(param_1,&local_38,0,param_2,\"eEgGkKmMpPtTyYzZ0\");\n      if ((int)uVar4 != 0) {\n        *param_3 = 0;\n        goto LAB_00106ee8;\n      }\n      cVar2 = *param_1;\n      while (9 < (byte)(cVar2 - 0x30U)) {\n        if (local_38 == param_1) {\n          if (local_38[-1] == 'B') {\n            uVar5 = uVar5 | 0x180;\n            if (local_38[-2] != 'i') break;\n          }\n          else {\n            uVar5 = uVar5 | 0x80;\n          }\n          uVar5 = uVar5 | 0x20;\n          break;\n        }\n        pcVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        cVar2 = *pcVar1;\n      }\n    }\n    else {\n      *param_2 = 1;\n      uVar5 = uVar5 | *(uint *)((long)&block_size_opts + (long)iVar3 * 4);\n    }\n  }\n  *param_3 = uVar5;\n  uVar4 = 0;\nLAB_00106ee8:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010a480": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "0010b690": "\nlong xsum(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "00116280": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105c60": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = program_name;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\"Usage: %s [OPERAND]...\\n  or:  %s OPTION\\n\",5);\n    __printf_chk(1,uVar2,uVar4,uVar4);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"Copy a file, converting and formatting according to the operands.\\n\\n  bs=BYTES        read and write up to BYTES bytes at a time (default: 512);\\n                  overrides ibs and obs\\n  cbs=BYTES       convert BYTES bytes at a time\\n  conv=CONVS      convert the file as per the comma separated symbol list\\n  count=N         copy only N input blocks\\n  ibs=BYTES       read up to BYTES bytes at a time (default: 512)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  if=FILE         read from FILE instead of stdin\\n  iflag=FLAGS     read as per the comma separated symbol list\\n  obs=BYTES       write BYTES bytes at a time (default: 512)\\n  of=FILE         write to FILE instead of stdout\\n  oflag=FLAGS     write as per the comma separated symbol list\\n  seek=N          skip N obs-sized blocks at start of output\\n  skip=N          skip N ibs-sized blocks at start of input\\n  status=LEVEL    The LEVEL of information to print to stderr;\\n                  \\'none\\' suppresses everything but error messages,\\n                  \\'noxfer\\' suppresses the final transfer statistics,\\n                  \\'progress\\' shows periodic transfer statistics\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nN and BYTES may be followed by the following multiplicative suffixes:\\nc =1, w =2, b =512, kB =1000, K =1024, MB =1000*1000, M =1024*1024, xM =M,\\nGB =1000*1000*1000, G =1024*1024*1024, and so on for T, P, E, Z, Y.\\n\\nEach CONV symbol may be:\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  ascii     from EBCDIC to ASCII\\n  ebcdic    from ASCII to EBCDIC\\n  ibm       from ASCII to alternate EBCDIC\\n  block     pad newline-terminated records with spaces to cbs-size\\n  unblock   replace trailing spaces in cbs-size records with newline\\n  lcase     change upper case to lower case\\n  ucase     change lower case to upper case\\n  sparse    try to seek rather than write the output for NUL input blocks\\n  swab      swap every pair of input bytes\\n  sync      pad every input block with NULs to ibs-size; when used\\n            with block or unblock, pad with spaces rather than NULs\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  excl      fail if the output file already exists\\n  nocreat   do not create the output file\\n  notrunc   do not truncate the output file\\n  noerror   continue after read errors\\n  fdatasync  physically write output file data before finishing\\n  fsync     likewise, but also write metadata\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nEach FLAG symbol may be:\\n\\n  append    append mode (makes sense only for output; conv=notrunc suggested)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  direct    use direct I/O for data\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  directory  fail unless a directory\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  dsync     use synchronized I/O for data\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  sync      likewise, but also for metadata\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  fullblock  accumulate full blocks of input (iflag only)\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  nonblock  use non-blocking I/O\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  noatime   do not update access time\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  nocache   Request to drop cache.  See also oflag=sync\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  noctty    do not assign controlling terminal from file\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  nofollow  do not follow symlinks\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  count_bytes  treat \\'count=N\\' as a byte count (iflag only)\\n\",5\n                              );\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  skip_bytes  treat \\'skip=N\\' as a byte count (iflag only)\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  seek_bytes  treat \\'seek=N\\' as a byte count (oflag only)\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    uVar4 = dcgettext(0,\n                      \"\\nSending a %s signal to a running \\'dd\\' process makes it\\nprint I/O statistics to standard error and then resume copying.\\n\\nOptions are:\\n\\n\"\n                      ,5);\n    __printf_chk(1,uVar4,&DAT_0010e21b);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00116160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fdatasync(int __fildes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fdatasync@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b450": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00114ea0)();\n  return iVar1;\n}\n\n", 
    "001160f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ftruncate@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00114e10)();\n  return sVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_raise_00114d80)();\n  return iVar1;\n}\n\n", 
    "001160f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sigemptyset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n  lconv *plVar1;\n  \n  plVar1 = (lconv *)(*(code *)PTR_localeconv_00114dd0)();\n  return plVar1;\n}\n\n", 
    "00116058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106b00": "\nlong xtime_make(long param_1,long param_2)\n\n{\n  return param_1 * 1000000000 + param_2;\n}\n\n", 
    "00106d40": "\nvoid * group_number(long param_1,size_t param_2,byte *param_3,char *param_4)\n\n{\n  byte bVar1;\n  size_t __n;\n  void *pvVar2;\n  undefined *__src;\n  size_t __n_00;\n  ulong uVar3;\n  ulong uVar4;\n  long in_FS_OFFSET;\n  undefined auStack_78 [56];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __n = strlen(param_4);\n  __memcpy_chk(auStack_78,param_1,param_2,0x29);\n  pvVar2 = (void *)(param_1 + param_2);\n  __n_00 = 0xffffffffffffffff;\n  while( true ) {\n    bVar1 = *param_3;\n    if (bVar1 == 0) {\n      if (param_2 < __n_00) {\n        __n_00 = param_2;\n      }\n      uVar4 = param_2 - __n_00;\n      __src = auStack_78 + uVar4;\n    }\n    else {\n      if (bVar1 < 0x7f) {\n        uVar3 = (ulong)bVar1;\n        if (param_2 < bVar1) {\n          uVar3 = param_2;\n        }\n        uVar4 = param_2 - uVar3;\n        __src = auStack_78 + uVar4;\n        param_2 = uVar3;\n      }\n      else {\n        uVar4 = 0;\n        __src = auStack_78;\n      }\n      param_3 = param_3 + 1;\n      __n_00 = param_2;\n    }\n    pvVar2 = memcpy((void *)((long)pvVar2 - __n_00),__src,__n_00);\n    if (uVar4 == 0) break;\n    pvVar2 = memcpy((void *)((long)pvVar2 - __n),param_4,__n);\n    param_2 = uVar4;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pvVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b580": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00116170": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __memcpy_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __memcpy_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00116050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109400": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "00104710": "\nint iftruncate_constprop_0(__off_t param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  do {\n    process_signals();\n    iVar1 = ftruncate(1,param_1);\n    if (-1 < iVar1) {\n      return iVar1;\n    }\n    piVar2 = __errno_location();\n  } while (*piVar2 == 4);\n  return iVar1;\n}\n\n", 
    "00104750": "\nulong iwrite_constprop_0(long param_1,ulong param_2)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  ulong uVar4;\n  int *piVar5;\n  __off_t _Var6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  ulong uVar9;\n  \n  if (((output_flags._1_1_ & 0x40) != 0) && (param_2 < output_blocksize)) {\n    uVar2 = rpl_fcntl(1,3);\n    iVar3 = rpl_fcntl(1,4,uVar2 & 0xffffbfff);\n    if ((iVar3 != 0) && (status_level != 1)) {\n      uVar7 = quotearg_n_style_colon(0,3,output_file);\n      uVar8 = dcgettext(0,\"failed to turn off O_DIRECT: %s\",5);\n      piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      nl_error(0,*piVar5,uVar8,uVar7);\n    }\n    o_nocache_eof = 1;\n    invalidate_cache(1,0);\n    conversions_mask = conversions_mask | 0x8000;\n  }\n  uVar9 = 0;\n  if (param_2 != 0) {\n    do {\n      process_signals();\n      uVar2 = conversions_mask;\n      final_op_was_seek = 0;\n      if (((conversions_mask & 0x10000) == 0) || (cVar1 = is_nul(param_1,param_2), cVar1 == '\\0')) {\nLAB_001047b9:\n        uVar4 = write(1,(void *)(param_1 + uVar9),param_2 - uVar9);\n        if ((long)uVar4 < 0) {\n          piVar5 = __errno_location();\n          iVar3 = *piVar5;\n          goto joined_r0x001047db;\n        }\n        if (uVar4 == 0) {\n          piVar5 = __errno_location();\n          *piVar5 = 0x1c;\n          break;\n        }\nLAB_00104786:\n        uVar9 = uVar9 + uVar4;\n      }\n      else {\n        _Var6 = lseek(1,param_2,1);\n        if (_Var6 < 0) {\n          conversions_mask = uVar2 & 0xfffeffff;\n          goto LAB_001047b9;\n        }\n        final_op_was_seek = 1;\n        uVar4 = param_2;\n        if (-1 < (long)param_2) goto LAB_00104786;\n        piVar5 = __errno_location();\n        iVar3 = *piVar5;\njoined_r0x001047db:\n        if (iVar3 != 4) break;\n      }\n    } while (uVar9 < param_2);\n    if ((o_nocache != '\\0') && (uVar9 != 0)) {\n      invalidate_cache(1,uVar9);\n      return uVar9;\n    }\n  }\n  return uVar9;\n}\n\n", 
    "00109c90": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00103300": "\nvoid install_signal_handlers(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  long in_FS_OFFSET;\n  undefined local_b8 [12];\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 local_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 local_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 local_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 local_70;\n  undefined4 uStack_6c;\n  undefined4 uStack_68;\n  undefined4 uStack_64;\n  undefined4 local_60;\n  undefined4 uStack_5c;\n  undefined4 uStack_58;\n  undefined4 uStack_54;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  undefined4 uStack_48;\n  undefined4 uStack_44;\n  undefined4 local_40;\n  undefined4 uStack_3c;\n  undefined4 uStack_38;\n  undefined4 uStack_34;\n  int local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  pcVar2 = getenv(\"POSIXLY_CORRECT\");\n  sigemptyset((sigset_t *)caught_signals);\n  if (pcVar2 == (char *)0x0) {\n    sigaddset((sigset_t *)caught_signals,10);\n  }\n  sigaction(2,(sigaction *)0x0,(sigaction *)local_b8);\n  if (local_b8._0_8_ != (__sighandler_t)0x1) {\n    sigaddset((sigset_t *)caught_signals,2);\n  }\n  local_b8._8_4_ = caught_signals._0_4_;\n  uStack_ac = caught_signals._4_4_;\n  uStack_a8 = caught_signals._8_4_;\n  uStack_a4 = caught_signals._12_4_;\n  local_a0 = caught_signals._16_4_;\n  uStack_9c = caught_signals._20_4_;\n  uStack_98 = caught_signals._24_4_;\n  uStack_94 = caught_signals._28_4_;\n  local_90 = caught_signals._32_4_;\n  uStack_8c = caught_signals._36_4_;\n  uStack_88 = caught_signals._40_4_;\n  uStack_84 = caught_signals._44_4_;\n  local_80 = caught_signals._48_4_;\n  uStack_7c = caught_signals._52_4_;\n  uStack_78 = caught_signals._56_4_;\n  uStack_74 = caught_signals._60_4_;\n  local_70 = caught_signals._64_4_;\n  uStack_6c = caught_signals._68_4_;\n  uStack_68 = caught_signals._72_4_;\n  uStack_64 = caught_signals._76_4_;\n  local_60 = caught_signals._80_4_;\n  uStack_5c = caught_signals._84_4_;\n  uStack_58 = caught_signals._88_4_;\n  uStack_54 = caught_signals._92_4_;\n  local_50 = caught_signals._96_4_;\n  uStack_4c = caught_signals._100_4_;\n  uStack_48 = caught_signals._104_4_;\n  uStack_44 = caught_signals._108_4_;\n  local_40 = caught_signals._112_4_;\n  uStack_3c = caught_signals._116_4_;\n  uStack_38 = caught_signals._120_4_;\n  uStack_34 = caught_signals._124_4_;\n  iVar1 = sigismember((sigset_t *)caught_signals,10);\n  if (iVar1 != 0) {\n    local_b8._0_8_ = siginfo_handler;\n    local_30 = 0;\n    sigaction(10,(sigaction *)local_b8,(sigaction *)0x0);\n  }\n  iVar1 = sigismember((sigset_t *)caught_signals,2);\n  if (iVar1 != 0) {\n    local_b8._0_8_ = interrupt_handler;\n    local_30 = -0x40000000;\n    sigaction(2,(sigaction *)local_b8,(sigaction *)0x0);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001161e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001160c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102690": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00114e28)();\n  return;\n}\n\n", 
    "00106010": "\nuint parse_symbols(char *param_1,char *param_2,char param_3,undefined8 param_4)\n\n{\n  uint uVar1;\n  char cVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  size_t sVar6;\n  uint uVar7;\n  uint uVar8;\n  char *pcVar9;\n  \n  uVar7 = 0;\n  while( true ) {\n    pcVar3 = strchr(param_1,0x2c);\n    pcVar9 = param_2;\n    while( true ) {\n      cVar2 = operand_matches(param_1,pcVar9,0x2c);\n      if ((cVar2 != '\\0') && (uVar1 = *(uint *)(pcVar9 + 0xc), uVar1 != 0)) break;\n      if (*pcVar9 == '\\0') {\n        if (pcVar3 == (char *)0x0) {\n          sVar6 = strlen(param_1);\n        }\n        else {\n          sVar6 = (long)pcVar3 - (long)param_1;\n        }\n        uVar4 = quotearg_n_style_mem(0,8,param_1,sVar6);\n        uVar5 = dcgettext(0,param_4,5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,0,\"%s: %s\",uVar5,uVar4);\n      }\n      pcVar9 = pcVar9 + 0x10;\n    }\n    uVar8 = uVar7 | uVar1;\n    uVar7 = uVar1;\n    if (param_3 == '\\0') {\n      uVar7 = uVar8;\n    }\n    if (pcVar3 == (char *)0x0) break;\n    param_1 = pcVar3 + 1;\n  }\n  return uVar7;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00114d98)();\n  return piVar1;\n}\n\n", 
    "001161e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001160c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* read@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d6c0": "\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstat(1,__fd,__buf);\n  return iVar1;\n}\n\n", 
    "00116018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __snprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00116268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_tolower_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "001045b0": "\nuint invalidate_cache(int param_1,ulong param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  ulong __len;\n  int *piVar3;\n  long lVar4;\n  ulong __offset;\n  bool bVar5;\n  uint unaff_R13D;\n  ulong uVar7;\n  uint uVar6;\n  \n  cVar1 = i_nocache_eof;\n  if (param_1 != 0) {\n    cVar1 = o_nocache_eof;\n  }\n  __len = cache_round();\n  bVar5 = __len == 0 && param_2 != 0;\n  uVar6 = unaff_R13D & 0xffffff00 | (uint)bVar5;\n  if (bVar5) {\n    return uVar6;\n  }\n  uVar7 = param_2 | __len;\n  if (uVar7 == 0) {\n    if (cVar1 == '\\0') {\n      return 1;\n    }\nLAB_00104603:\n    if (param_1 != 0) goto LAB_00104656;\nLAB_00104607:\n    lVar4 = input_offset;\n    if (input_seekable == '\\0') {\n      piVar3 = __errno_location();\n      *piVar3 = 0x1d;\n      return 0;\n    }\nLAB_0010467b:\n    if (lVar4 < 0) {\n      return uVar6;\n    }\n  }\n  else {\n    uVar7 = 0;\n    if (param_2 == 0) goto LAB_00104603;\n    uVar7 = cache_round();\n    if (param_1 == 0) goto LAB_00104607;\nLAB_00104656:\n    if (output_offset_7185 == -1) {\n      return uVar6;\n    }\n    if (output_offset_7185 < 0) {\n      lVar4 = lseek(1,0,1);\n      output_offset_7185 = lVar4;\n      goto LAB_0010467b;\n    }\n    lVar4 = output_offset_7185;\n    if (param_2 != 0) {\n      lVar4 = output_offset_7185 + uVar7 + __len;\n      output_offset_7185 = lVar4;\n      goto LAB_0010467b;\n    }\n  }\n  __offset = lVar4 - __len;\n  if ((param_2 == 0) && (__len != 0)) {\n    if (cVar1 == '\\0') {\n      __offset = __offset - uVar7;\n      goto LAB_00104695;\n    }\n  }\n  else {\n    __offset = __offset - uVar7;\n    if (__len != 0) goto LAB_00104695;\n  }\n  __len = 0;\n  __offset = __offset - __offset % page_size;\nLAB_00104695:\n  iVar2 = posix_fadvise(param_1,__offset,__len,4);\n  return unaff_R13D & 0xffffff00 | (uint)(iVar2 != -1);\n}\n\n", 
    "00116148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* raise@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107b00": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "001024f0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00114fe0)();\n  return;\n}\n\n", 
    "00116260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sigaddset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116140": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b430": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "0010acd0": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint rpl_fcntl(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010ad54;\n  }\n  if (have_dupfd_cloexec_3397 < 0) {\n    iVar2 = rpl_fcntl(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, have_dupfd_cloexec_3397 != -1)) goto LAB_0010ad54;\nLAB_0010ad91:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010ad54;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = rpl_fcntl(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010ad54;\n        have_dupfd_cloexec_3397 = -1;\n        __fd = iVar2;\n        goto LAB_0010ad91;\n      }\n    }\n    have_dupfd_cloexec_3397 = 1;\n  }\nLAB_0010ad54:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00114d90)();\n  return;\n}\n\n", 
    "001161f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001160d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102680": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00114e20)();\n  return;\n}\n\n", 
    "00107de0": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001096c0": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001161f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fsync(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fsync@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001095a0": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001160d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103090": "\nundefined4 to_uchar(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "0010b3d0": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "0010ac40": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010acaf;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010acaf:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00116278": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __sprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00116158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001034b0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid print_xfer_stats(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  char *__s;\n  size_t sVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  long lVar8;\n  char *pcVar9;\n  long in_FS_OFFSET;\n  undefined local_808 [654];\n  undefined local_57a [654];\n  char local_2ec [660];\n  char local_58 [24];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar8 = param_1;\n  if (param_1 == 0) {\n    lVar8 = gethrxtime();\n  }\n  uVar3 = human_readable(w_bytes,local_808,0x1d1,1,1);\n  pcVar4 = (char *)human_readable(w_bytes,local_57a,0x1f1,1,1);\n  if (start_time < lVar8) {\n    __s = (char *)human_readable(w_bytes,local_2ec,0x1d1,1000000000);\n    sVar5 = strlen(__s);\n    *(undefined2 *)(__s + sVar5) = (undefined2)slash_s_7120;\n    __s[sVar5 + 2] = slash_s_7120._2_1_;\n  }\n  else {\n    uVar6 = dcgettext(0,\"Infinity\",5);\n    __s = local_2ec;\n    __snprintf_chk(__s,0x28e,1,0x28e,\"%s B/s\",uVar6);\n  }\n  pcVar9 = \"%g s\";\n  if (param_1 != 0) {\n    fputc_unlocked(0xd,stderr);\n    pcVar9 = \"%.0f s\";\n  }\n  __snprintf_chk(local_58,0x18,1,0x18,pcVar9);\n  cVar1 = abbreviation_lacks_prefix(uVar3);\n  uVar6 = w_bytes;\n  if (cVar1 == '\\0') {\n    cVar1 = abbreviation_lacks_prefix(pcVar4);\n    uVar6 = w_bytes;\n    if (cVar1 == '\\0') {\n      uVar7 = dcgettext(0,\"%lu bytes (%s, %s) copied, %s, %s\",5);\n      __s = local_58;\n    }\n    else {\n      uVar7 = dcgettext(0,\"%lu bytes (%s) copied, %s, %s\",5);\n      pcVar4 = local_58;\n    }\n    iVar2 = __fprintf_chk(stderr,1,uVar7,uVar6,uVar3,pcVar4,__s);\n  }\n  else {\n    uVar3 = select_plural(w_bytes);\n    uVar3 = dcngettext(0,\"%lu byte copied, %s, %s\",\"%lu bytes copied, %s, %s\",uVar3,5);\n    iVar2 = __fprintf_chk(stderr,1,uVar3,uVar6,local_58,__s);\n  }\n  if (param_1 == 0) {\n    fputc_unlocked(10,stderr);\n    iVar2 = progress_len;\n  }\n  else if ((-1 < iVar2) && (iVar2 < progress_len)) {\n    __fprintf_chk(stderr,1,&DAT_0010e07f,progress_len - iVar2,\"\");\n  }\n  progress_len = iVar2;\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00116038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107d30": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00104a60": "\nvoid copy_with_block(char *param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  ulong uVar4;\n  bool bVar5;\n  \n  pcVar2 = param_1 + param_2;\n  if (param_2 != 0) {\n    do {\n      while (uVar4 = col, *param_1 == newline_character) {\n        if (col < conversion_blocksize) {\n          do {\n            bVar5 = output_blocksize <= oc + 1;\n            puVar3 = (undefined *)(obuf + oc);\n            oc = oc + 1;\n            *puVar3 = space_character;\n            if (bVar5) {\n              write_output();\n            }\n            uVar4 = uVar4 + 1;\n          } while (uVar4 < conversion_blocksize);\n        }\n        col = 0;\n        param_1 = param_1 + 1;\n        if (pcVar2 == param_1) {\n          col = 0;\n          return;\n        }\n      }\n      if (col == conversion_blocksize) {\n        r_truncate = r_truncate + 1;\n      }\n      else if (col < conversion_blocksize) {\n        uVar1 = oc + 1;\n        bVar5 = output_blocksize <= uVar1;\n        *(char *)(obuf + oc) = *param_1;\n        oc = uVar1;\n        if (bVar5) {\n          write_output();\n          uVar4 = col;\n        }\n      }\n      col = uVar4 + 1;\n      param_1 = param_1 + 1;\n    } while (pcVar2 != param_1);\n  }\n  return;\n}\n\n", 
    "00107f70": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00109740": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00116270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00109620": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00116150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d620": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010a350": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010b560": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102990": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_00114fa8)();\n  return pp_Var1;\n}\n\n", 
    "00102870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00114f18)();\n  return pcVar1;\n}\n\n", 
    "00109c70": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_00114e88)();\n  return iVar1;\n}\n\n", 
    "00109a30": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001161c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103040": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00114fe0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001160a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00114db8)();\n  return;\n}\n\n", 
    "001059a0": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_98 = &DAT_0010e193;\n  local_80[3] = \"sha256sum\";\n  local_90 = \"test invocation\";\n  local_58 = \"sha384sum\";\n  local_88 = \"coreutils\";\n  local_48 = \"sha512sum\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'd' || (pcVar2[1] != 'd')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_0010e190;\n        goto LAB_00105bde;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_0010e190;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0010e190);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_00105bde:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_0010e190);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0010e190);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_0010e190) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00116238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00114ed8)();\n  return iVar1;\n}\n\n", 
    "00109ae0": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00114e48)();\n  return pcVar1;\n}\n\n", 
    "00116240": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00116120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ioctl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103b60": "\nvoid cleanup(EVP_PKEY_CTX *ctx)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = close(0);\n  if (iVar1 < 0) {\n    uVar2 = quotearg_style(4,input_file);\n    uVar3 = dcgettext(0,\"closing input file %s\",5);\n    piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    nl_error(1,*piVar4,uVar3,uVar2);\n  }\n  iVar1 = close(1);\n  if (-1 < iVar1) {\n    return;\n  }\n  uVar2 = quotearg_style(4,output_file);\n  uVar3 = dcgettext(0,\"closing output file %s\",5);\n  piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  nl_error(1,*piVar4,uVar3,uVar2);\n}\n\n", 
    "00116000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_toupper_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00109830": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00114e80)();\n  return iVar1;\n}\n\n", 
    "0010a440": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "0010b650": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "001161c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102620": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00114df0)();\n  return;\n}\n\n", 
    "0010b530": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "001160a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_00114d60)();\n  return pp_Var1;\n}\n\n", 
    "00102980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaddset_00114fa0)();\n  return iVar1;\n}\n\n", 
    "00102860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00114f10)();\n  return pvVar1;\n}\n\n", 
    "00107ea0": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001161d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00104240": "\nvoid alloc_ibuf(void)\n\n{\n  long lVar1;\n  long lVar2;\n  void *pvVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  undefined auStack_2b8 [664];\n  long local_20;\n  \n  lVar2 = page_size;\n  lVar1 = input_blocksize;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (ibuf == 0) {\n    pvVar3 = malloc(input_blocksize + 3 + page_size * 2);\n    if (pvVar3 == (void *)0x0) {\n      uVar4 = human_readable(lVar1,auStack_2b8,0x1f1,1,1);\n      uVar5 = dcgettext(0,\"memory exhausted by input buffer of size %lu bytes (%s)\",5);\n                    /* WARNING: Subroutine does not return */\n      nl_error(1,0,uVar5,lVar1,uVar4);\n    }\n    ibuf = ptr_align((long)pvVar3 + 2,lVar2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001160b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001098e0": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "001161d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00114e40)();\n  return pcVar1;\n}\n\n", 
    "00116248": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00114db0)();\n  return iVar1;\n}\n\n", 
    "00116128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010a3e0": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "00116008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getenv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010ae60": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00109af0": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00114ed0)();\n  return pvVar1;\n}\n\n", 
    "0010d6a0": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "00116258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* posix_fadvise@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001030d0": "\nvoid translate_charset(long param_1)\n\n{\n  undefined8 *puVar1;\n  undefined8 *puVar2;\n  \n  puVar1 = (undefined8 *)trans_table;\n  do {\n    puVar2 = (undefined8 *)((long)puVar1 + 1);\n    *(undefined *)puVar1 = *(undefined *)(param_1 + (ulong)*(byte *)puVar1);\n    puVar1 = puVar2;\n  } while (puVar2 != &iread_fnc);\n  translation_needed = 1;\n  return;\n}\n\n", 
    "00116010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigprocmask(int __how,sigset_t *__set,sigset_t *__oset)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sigprocmask@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00109840": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "00116250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102850": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00114f08)();\n  return;\n}\n\n", 
    "00109600": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "001160b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ioctl_00114e78)();\n  return iVar1;\n}\n\n", 
    "0010a210": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b420": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_write_00114de8)();\n  return sVar1;\n}\n\n", 
    "0010a570": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00102fa0": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00114fc8)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00102890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00114f28)();\n  return pvVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00114e98)();\n  return iVar1;\n}\n\n", 
    "00102650": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00114e08)();\n  return;\n}\n\n", 
    "00104950": "\nvoid write_output(void)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  lVar1 = iwrite_constprop_0(obuf,output_blocksize);\n  w_bytes = w_bytes + lVar1;\n  if (output_blocksize == lVar1) {\n    oc = 0;\n    w_full = w_full + 1;\n    return;\n  }\n  uVar2 = quotearg_style(4,output_file);\n  uVar3 = dcgettext(0,\"writing to %s\",5);\n  piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  nl_error(0,*piVar4,uVar3,uVar2);\n}\n\n", 
    "00102530": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_00114d78)();\n  return;\n}\n\n", 
    "00109c50": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00104030": "\nvoid set_fd_flags(ulong param_1,uint param_2,undefined8 param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  uint uVar6;\n  long in_FS_OFFSET;\n  stat sStack_c8;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0xfffdfeff) != 0) {\n    uVar1 = rpl_fcntl(param_1,3);\n    uVar6 = param_2 & 0xfffdfeff | uVar1;\n    if ((int)uVar1 < 0) goto LAB_001040e3;\n    if (uVar1 == uVar6) goto LAB_0010405a;\n    if ((uVar6 & 0x10000) != 0) {\n      iVar2 = fstat((int)(param_1 & 0xffffffff),&sStack_c8);\n      if (iVar2 != 0) goto LAB_001040e3;\n      if ((sStack_c8.st_mode & 0xf000) != 0x4000) {\n        piVar5 = __errno_location();\n        *piVar5 = 0x14;\n        goto LAB_001040e3;\n      }\n      uVar6 = uVar6 & 0xfffeffff;\n      if (uVar6 == uVar1) goto LAB_0010405a;\n    }\n    iVar2 = rpl_fcntl(param_1 & 0xffffffff,4,uVar6);\n    if (iVar2 == -1) {\nLAB_001040e3:\n      uVar3 = quotearg_style(4,param_3);\n      uVar4 = dcgettext(0,\"setting flags for %s\",5);\n      piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      nl_error(1,*piVar5,uVar4,uVar3);\n    }\n  }\nLAB_0010405a:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00109a10": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001161a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103180": "\nuint operand_matches(long param_1,long param_2,uint param_3)\n\n{\n  char *pcVar1;\n  char cVar2;\n  long lVar3;\n  \n  lVar3 = 0;\n  do {\n    pcVar1 = (char *)(param_2 + lVar3);\n    cVar2 = *(char *)(param_1 + lVar3);\n    if (*pcVar1 == '\\0') {\n      return (uint)lVar3 & 0xffffff00 | (uint)((char)param_3 == cVar2) |\n             param_3 & 0xffffff00 | (uint)(cVar2 == '\\0');\n    }\n    lVar3 = lVar3 + 1;\n  } while (*pcVar1 == cVar2);\n  return 0;\n}\n\n", 
    "00116218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00114e58)();\n  return _Var1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaction_00114dc8)();\n  return iVar1;\n}\n\n", 
    "001049f0": "\nvoid copy_simple(void *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  ulong __n;\n  ulong uVar2;\n  \n  do {\n    while( true ) {\n      uVar1 = output_blocksize;\n      __n = output_blocksize - oc;\n      if (param_2 < output_blocksize - oc) {\n        __n = param_2;\n      }\n      param_2 = param_2 - __n;\n      uVar2 = __n + oc;\n      memcpy((void *)(obuf + oc),param_1,__n);\n      oc = uVar2;\n      if (uVar1 <= uVar2) break;\n      param_1 = (void *)((long)param_1 + __n);\n      if (param_2 == 0) {\n        return;\n      }\n    }\n    write_output();\n    param_1 = (void *)((long)param_1 + __n);\n  } while (param_2 != 0);\n  return;\n}\n\n", 
    "00109ac0": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00116220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getpagesize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103a60": "\nvoid nl_error(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n             undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n             undefined4 param_9,undefined4 param_10,undefined8 param_11,undefined8 param_12,\n             undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_e8;\n  undefined4 local_e4;\n  undefined *local_e0;\n  undefined *local_d8;\n  long local_d0;\n  undefined local_c8 [24];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined4 local_98;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  \n  if (in_AL != '\\0') {\n    local_98 = param_1;\n    local_88 = param_2;\n    local_78 = param_3;\n    local_68 = param_4;\n    local_58 = param_5;\n    local_48 = param_6;\n    local_38 = param_7;\n    local_28 = param_8;\n  }\n  local_d0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_b0 = param_12;\n  local_a8 = param_13;\n  local_a0 = param_14;\n  if (0 < progress_len) {\n    fputc_unlocked(10,stderr);\n    progress_len = 0;\n  }\n  local_e0 = &stack0x00000008;\n  local_d8 = local_c8;\n  local_e8 = 0x18;\n  local_e4 = 0x30;\n  verror(param_9,param_10,param_11,&local_e8);\n  if (local_d0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigprocmask(int __how,sigset_t *__set,sigset_t *__oset)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigprocmask_00114d70)();\n  return iVar1;\n}\n\n", 
    "00109930": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010a540": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "001161a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104700": "\nbool usable_st_size_isra_0(uint param_1)\n\n{\n  return (param_1 & 0xd000) == 0x8000;\n}\n\n", 
    "00102880": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00114f20)();\n  return;\n}\n\n", 
    "00102fd0": "\n/* WARNING: Removing unreachable block (ram,0x00102fe3) */\n/* WARNING: Removing unreachable block (ram,0x00102fef) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_00114e90)();\n  return sVar1;\n}\n\n", 
    "00109d80": "\nvoid verror(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  verror_at_line(param_1,param_2,0,0,param_3,param_4);\n  return;\n}\n\n", 
    "0010b520": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00102640": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00114e00)();\n  return;\n}\n\n", 
    "0010b400": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00104140": "\n__off_t skip_via_lseek(undefined8 param_1,int param_2,__off_t param_3,int param_4)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  undefined8 uVar3;\n  int *piVar4;\n  long in_FS_OFFSET;\n  undefined auStack_98 [8];\n  long local_90;\n  long local_70;\n  undefined8 local_68;\n  long local_60;\n  long local_40;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = ioctl(param_2,0x80306d02,auStack_98);\n  _Var2 = lseek(param_2,param_3,param_4);\n  if ((-1 < _Var2) && (iVar1 == 0)) {\n    iVar1 = ioctl(param_2,0x80306d02,&local_68);\n    if ((iVar1 == 0) && ((local_90 == local_60 && (local_70 == local_40)))) {\n      if (status_level != 1) {\n        uVar3 = dcgettext(0,\n                          \"warning: working around lseek kernel bug for file (%s)\\n  of mt_type=0x%0lx -- see <sys/mtio.h> for the list of types\"\n                          ,5);\n                    /* WARNING: Subroutine does not return */\n        nl_error(0,0,uVar3,param_1,local_68);\n      }\n      piVar4 = __errno_location();\n      _Var2 = -1;\n      *piVar4 = 0;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return _Var2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001161b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107890": "\nvoid parse_long_options(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                       undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                       undefined8 param_9,undefined8 param_10,undefined8 param_11,\n                       undefined8 param_12,undefined8 param_13,code *param_14)\n\n{\n  undefined4 uVar1;\n  char in_AL;\n  int iVar2;\n  long in_FS_OFFSET;\n  undefined4 local_f8;\n  undefined4 local_f4;\n  undefined *local_f0;\n  undefined *local_e8;\n  long local_e0;\n  undefined local_d8 [48];\n  undefined4 local_a8;\n  undefined4 local_98;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  \n  uVar1 = opterr;\n  if (in_AL != '\\0') {\n    local_a8 = param_1;\n    local_98 = param_2;\n    local_88 = param_3;\n    local_78 = param_4;\n    local_68 = param_5;\n    local_58 = param_6;\n    local_48 = param_7;\n    local_38 = param_8;\n  }\n  local_e0 = *(long *)(in_FS_OFFSET + 0x28);\n  opterr = 0;\n  if ((int)param_9 == 2) {\n    iVar2 = getopt_long(param_9,param_10,&DAT_0010fc4c,long_options,0);\n    if (iVar2 != -1) {\n      if (iVar2 == 0x68) {\n        (*param_14)(0);\n      }\n      else if (iVar2 == 0x76) {\n        local_f0 = &stack0x00000008;\n        local_f8 = 0x30;\n        local_e8 = local_d8;\n        local_f4 = 0x30;\n        version_etc_va(stdout,param_11,param_12,param_13,&local_f8);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n    }\n  }\n  opterr = uVar1;\n  optind = 0;\n  if (local_e0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010a2a0": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010ae40": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "0010b4b0": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00108060": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00116228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigismember(sigset_t *__set,int __signo)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sigismember@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b6f0": "\nulong xmax(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "00116108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* gettimeofday@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ftruncate_00114e50)();\n  return iVar1;\n}\n\n", 
    "0010b4a0": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "001025c0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00114dc0)();\n  return;\n}\n\n", 
    "00106c00": "\nvoid gettime(timespec *param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  timeval local_28;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = clock_gettime(0,param_1);\n  if (iVar1 != 0) {\n    gettimeofday(&local_28,(__timezone_ptr_t)0x0);\n    param_1->tv_sec = local_28.tv_sec;\n    param_1->tv_nsec = local_28.tv_usec * 1000;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106e40": "\nint default_block_size(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = getenv(\"POSIXLY_CORRECT\");\n  return (-(uint)(pcVar1 == (char *)0x0) & 0x200) + 0x200;\n}\n\n", 
    "00116230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00114df8)();\n  return iVar1;\n}\n\n", 
    "00104930": "\nvoid quit_constprop_0(void)\n\n{\n  finish_up();\n                    /* WARNING: Subroutine does not return */\n  exit(1);\n}\n\n", 
    "0010a550": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_00114d68)();\n  return pcVar1;\n}\n\n", 
    "0010a430": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "001161b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107a90": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a670": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n"
}