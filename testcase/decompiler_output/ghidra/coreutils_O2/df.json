{
    "00109f90": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00103ab0": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00117f78)();\n  return;\n}\n\n", 
    "0010fd00": "\nlong xsum(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "0010cb50": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001076a0": "\nvoid record_file(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)xmalloc(0x18);\n  uVar2 = xstrdup(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)hash_insert(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      triple_free(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00119038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010c9e0": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001044f0": "\nbool known_value(ulong param_1)\n\n{\n  return param_1 < 0xfffffffffffffffe;\n}\n\n", 
    "0010c380": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_001128db,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010c649;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0010c649:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010c6eb;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010c6eb:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010c49d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010c49d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00119278": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t wcstombs(char *__s,wchar_t *__pwcs,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* wcstombs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00117ea8)();\n  return iVar1;\n}\n\n", 
    "0010d230": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint cdb_fchdir_isra_0(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00117ef0)();\n  return iVar1;\n}\n\n", 
    "00119030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e680": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00119270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getline@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103aa0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00117f70)();\n  return sVar1;\n}\n\n", 
    "00105da0": "\nvoid get_point(char *param_1,ulong *param_2)\n\n{\n  char *__s;\n  int iVar1;\n  char *__s_00;\n  size_t sVar2;\n  size_t __n;\n  void *__ptr;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long lVar6;\n  undefined8 *puVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  undefined8 *puVar10;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  long in_FS_OFFSET;\n  bool bVar13;\n  bool bVar14;\n  byte bVar15;\n  ulong local_f0;\n  stat local_d8;\n  long local_40;\n  \n  bVar15 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s_00 = canonicalize_file_name(param_1);\n  puVar7 = mount_list;\n  if (__s_00 == (char *)0x0) {\nLAB_00105def:\n    if (puVar7 != (undefined8 *)0x0) {\nLAB_00105e00:\n      puVar12 = (undefined8 *)0x0;\n      do {\n        while( true ) {\n          uVar4 = puVar7[4];\n          if (puVar7[4] == 0xffffffffffffffff) {\n            iVar1 = stat((char *)puVar7[1],&local_d8);\n            if (iVar1 == 0) {\n              puVar7[4] = local_d8.st_dev;\n              uVar4 = local_d8.st_dev;\n            }\n            else {\n              piVar3 = __errno_location();\n              if (*piVar3 == 5) {\n                uVar5 = quotearg_n_style_colon(0,3,puVar7[1]);\n                error(0,*piVar3,&DAT_00113027,uVar5);\n                exit_status = 1;\n              }\n              puVar7[4] = 0xfffffffffffffffe;\n              uVar4 = 0xfffffffffffffffe;\n            }\n          }\n          bVar13 = *param_2 < uVar4;\n          bVar14 = *param_2 == uVar4;\n          puVar10 = puVar12;\n          if (bVar14) break;\nLAB_00105e10:\n          puVar7 = (undefined8 *)puVar7[6];\n          puVar12 = puVar10;\n          if (puVar7 == (undefined8 *)0x0) goto LAB_00105e90;\n        }\n        lVar6 = 5;\n        pbVar8 = (byte *)puVar7[3];\n        pbVar9 = &DAT_00111b98;\n        do {\n          if (lVar6 == 0) break;\n          lVar6 = lVar6 + -1;\n          bVar13 = *pbVar8 < *pbVar9;\n          bVar14 = *pbVar8 == *pbVar9;\n          pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n          pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n        } while (bVar14);\n        if (((!bVar13 && !bVar14) == bVar13) ||\n           ((((puVar12 != (undefined8 *)0x0 && ((*(byte *)(puVar12 + 5) & 1) == 0)) &&\n             ((*(byte *)(puVar7 + 5) & 1) != 0)) ||\n            ((iVar1 = stat((char *)puVar7[1],&local_d8), iVar1 == 0 &&\n             (puVar10 = puVar7, local_d8.st_dev == puVar7[4])))))) goto LAB_00105e10;\n        puVar7[4] = 0xfffffffffffffffe;\n        puVar7 = (undefined8 *)puVar7[6];\n      } while (puVar7 != (undefined8 *)0x0);\nLAB_00105e90:\n      if (puVar12 != (undefined8 *)0x0) {\nLAB_00105e99:\n        get_dev(*puVar12,puVar12[1],param_1,param_1,puVar12[3],*(byte *)(puVar12 + 5) & 1,\n                *(byte *)(puVar12 + 5) >> 1 & 1,0,0);\n        goto LAB_00105ecd;\n      }\n    }\n  }\n  else {\n    if (*__s_00 != '/') {\n      free(__s_00);\n      goto LAB_00105def;\n    }\n    sVar2 = strlen(__s_00);\n    if (puVar7 != (undefined8 *)0x0) {\n      local_f0 = 0;\n      bVar13 = true;\n      puVar10 = puVar7;\n      puVar11 = (undefined8 *)0x0;\nLAB_00105f28:\n      do {\n        puVar12 = puVar10;\n        bVar14 = false;\n        lVar6 = 5;\n        pbVar8 = (byte *)puVar12[3];\n        pbVar9 = &DAT_00111b98;\n        do {\n          if (lVar6 == 0) break;\n          lVar6 = lVar6 + -1;\n          bVar14 = *pbVar8 < *pbVar9;\n          bVar13 = *pbVar8 == *pbVar9;\n          pbVar8 = pbVar8 + (ulong)bVar15 * -2 + 1;\n          pbVar9 = pbVar9 + (ulong)bVar15 * -2 + 1;\n        } while (bVar13);\n        if (((!bVar14 && !bVar13) == bVar14) ||\n           (((puVar11 != (undefined8 *)0x0 && ((*(byte *)(puVar11 + 5) & 1) == 0)) &&\n            ((*(byte *)(puVar12 + 5) & 1) != 0)))) {\nLAB_00105fc0:\n          bVar13 = (undefined8 *)puVar12[6] == (undefined8 *)0x0;\n          puVar10 = (undefined8 *)puVar12[6];\n          puVar12 = puVar11;\n          if (bVar13) break;\n          goto LAB_00105f28;\n        }\n        __s = (char *)puVar12[1];\n        __n = strlen(__s);\n        if ((__n < local_f0) || (sVar2 < __n)) goto LAB_00105fc0;\n        if (__n != 1) {\n          if (((sVar2 == __n) || (__s_00[__n] == '/')) &&\n             (iVar1 = strncmp(__s,__s_00,__n), iVar1 == 0)) {\n            puVar11 = puVar12;\n            local_f0 = __n;\n          }\n          goto LAB_00105fc0;\n        }\n        local_f0 = 1;\n        bVar13 = (undefined8 *)puVar12[6] == (undefined8 *)0x0;\n        puVar10 = (undefined8 *)puVar12[6];\n        puVar11 = puVar12;\n      } while (!bVar13);\n      free(__s_00);\n      if (((puVar12 == (undefined8 *)0x0) ||\n          (iVar1 = stat((char *)puVar12[1],&local_d8), iVar1 != 0)) || (local_d8.st_dev != *param_2)\n         ) goto LAB_00105e00;\n      goto LAB_00105e99;\n    }\n    free(__s_00);\n  }\n  __ptr = (void *)find_mount_point(param_1,param_2);\n  if (__ptr != (void *)0x0) {\n    get_dev(0,__ptr,param_1,0,0,0,0,0,0);\n    free(__ptr);\n  }\nLAB_00105ecd:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108c70": "\nint default_block_size(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = getenv(\"POSIXLY_CORRECT\");\n  return (-(uint)(pcVar1 == (char *)0x0) & 0x200) + 0x200;\n}\n\n", 
    "00110e5c": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00108360": "\nundefined4 hash_rehash(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)compute_bucket_size_isra_0\n                              (*(undefined4 *)((long)pvVar1 + 8),param_2,\n                               *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_0010846c;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = transfer_entries(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = transfer_entries(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = transfer_entries(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_0010846c;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_0010846c;\n    }\n  }\n  uVar3 = 0;\nLAB_0010846c:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00110100": "\nundefined8 printf_parse(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_0011017b:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_00110250:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_001102a7;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_00110250;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_00110250;\n  }\n  goto switchD_00110332_caseD_26;\nLAB_001102a7:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_001102bb:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_001102c4;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_001102c4;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0011049c;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_00110332_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0011049c:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_00110332_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_001104b7:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_001102c4:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x00110321;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_001102c4;\n      }\n      goto LAB_001106a6;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)xsum(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_00110b0a;\nLAB_00110cda:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_00110c0e:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_001104b7;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00110cda;\n        goto LAB_00110c0e;\n      }\n      goto LAB_00110d0f;\n    }\n    goto LAB_00110d13;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_0011052e;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = xsum(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_00110332_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_0011052e:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_00110332_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_001105ce:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_001106a6;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_001102bb;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)xsum(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_00110d13;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_00110b51;\n      goto LAB_001105ca;\n    }\n    goto LAB_00110d13;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_00110b51:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_001105ca:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_001105ce;\n  }\n  goto LAB_00110b0a;\ncode_r0x00110321:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_00110332_caseD_25;\n  default:\n    goto switchD_00110332_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_00110332_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_001106a6;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_0011037b:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_001106a6:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_00110332_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_0011017b;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_00110d0f:\n      __src = (byte **)param_3[1];\n      goto LAB_00110d13;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_00110448;\n        goto LAB_001109da;\n      }\n      goto LAB_00110d0f;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_001109da:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_00110448:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_0011017b;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_00110b1a;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)xsum(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_00110b0a;\nLAB_00110991:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_00110948:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0011037b;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00110991;\n        goto LAB_00110948;\n      }\n      goto LAB_00110d0f;\n    }\nLAB_00110d13:\n    if (ppbVar2 == __src) goto LAB_00110b0a;\n  }\n  free(__src);\nLAB_00110b0a:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_00110b1a:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "001089c0": "\nulong triple_hash(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = hash_pjw(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n", 
    "00119168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001044e0": "\nulong devlist_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00119288": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcwidth_00117ea0)();\n  return iVar1;\n}\n\n", 
    "0010d240": "\nvoid cdb_free_isra_0(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 < 0) {\n    return;\n  }\n  iVar1 = close(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! close_fail\",\"lib/chdir-long.c\",0x40,\"cdb_free\");\n}\n\n", 
    "00119160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119280": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00117f88)();\n  return iVar1;\n}\n\n", 
    "0010cb30": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010cc50": "\nvoid xstrtol_error(uint param_1,int param_2,undefined param_3,long param_4,undefined8 param_5,\n                  undefined4 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  long in_FS_OFFSET;\n  undefined local_32;\n  undefined local_31;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 4) {\n    if (param_1 < 2) {\n      if (param_1 != 1) {\n        xstrtol_error_cold();\n        return;\n      }\n      pcVar2 = \"%s%s argument \\'%s\\' too large\";\n    }\n    else {\n      pcVar2 = \"invalid suffix in %s%s argument \\'%s\\'\";\n    }\n  }\n  else {\n    if (param_1 != 4) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    pcVar2 = \"invalid %s%s argument \\'%s\\'\";\n  }\n  if (param_2 < 0) {\n    puVar4 = &local_32;\n    local_31 = 0;\n    puVar3 = &DAT_00112c9d + -(long)param_2;\n    local_32 = param_3;\n  }\n  else {\n    puVar3 = &DAT_00112c9d;\n    puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n  }\n  uVar1 = dcgettext(0,pcVar2,5);\n  error(param_6,0,uVar1,puVar3,puVar4,param_5);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108270": "\nvoid hash_free(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010831c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_001082df;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_001082df:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010831c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n", 
    "0010ca10": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "00119018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid endmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* endmntent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010c9c0": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "00119258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001075a0": "\nundefined * mdir_name(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = dir_len();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n", 
    "00109690": "\nundefined8 human_options(undefined8 param_1,undefined8 param_2,long *param_3)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  \n  uVar1 = humblock(param_1,param_3,param_2);\n  if (*param_3 != 0) {\n    return uVar1;\n  }\n  lVar2 = default_block_size();\n  *param_3 = lVar2;\n  return 4;\n}\n\n", 
    "00119138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strspn@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001089f0": "\nulong triple_hash_no_name(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "00119010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010c360": "\nvoid free_cwd(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    close(*param_1);\n  }\n  free(*(void **)(param_1 + 2));\n  return;\n}\n\n", 
    "00119250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110e40": "\nint fstatat(int __fd,char *__file,stat *__buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstatat(1,__fd,__file,__buf,__flag);\n  return iVar1;\n}\n\n", 
    "00119130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00117e28)();\n  return iVar1;\n}\n\n", 
    "0010e660": "\nuint rotl8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "00103930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00117eb8)();\n  return iVar1;\n}\n\n", 
    "00103ac0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strdup(char *__s)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strdup_00117f80)();\n  return pcVar1;\n}\n\n", 
    "00108a10": "\nundefined8 triple_compare(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = same_name(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00109b00": "\nvoid * ambsalign(undefined8 param_1,ulong *param_2,undefined4 param_3,undefined4 param_4)\n\n{\n  ulong __size;\n  ulong uVar1;\n  void *__ptr;\n  ulong uVar2;\n  void *__ptr_00;\n  \n  uVar1 = *param_2;\n  uVar2 = uVar1;\n  __ptr_00 = (void *)0x0;\n  while( true ) {\n    __size = uVar2 + 1;\n    __ptr = realloc(__ptr_00,__size);\n    if (__ptr == (void *)0x0) {\n      free(__ptr_00);\n      return (void *)0x0;\n    }\n    *param_2 = uVar1;\n    uVar2 = mbsalign(param_1,__ptr,__size,param_2,param_3,param_4);\n    if (uVar2 == 0xffffffffffffffff) break;\n    __ptr_00 = __ptr;\n    if (uVar2 < __size) {\n      return __ptr;\n    }\n  }\n  free(__ptr);\n  return (void *)0x0;\n}\n\n", 
    "0010ca20": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "0010ba50": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "0010bb70": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "0010cd80": "\nuint bkm_scale_by_power(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = bkm_scale(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "00119148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001043e0": "\n/* WARNING: Removing unreachable block (ram,0x00104404) */\n/* WARNING: Removing unreachable block (ram,0x00104410) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00119268": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d220": "\nvoid cdb_init_isra_0(undefined4 *param_1)\n\n{\n  *param_1 = 0xffffff9c;\n  return;\n}\n\n", 
    "00103800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * canonicalize_file_name(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_canonicalize_file_name_00117e20)();\n  return pcVar1;\n}\n\n", 
    "00119140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d580": "\nvoid statvfs_works(void)\n\n{\n  int iVar1;\n  uint uVar2;\n  long in_FS_OFFSET;\n  utsname uStack_198;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = statvfs_works_cache_2643;\n  if ((int)statvfs_works_cache_2643 < 0) {\n    iVar1 = uname(&uStack_198);\n    uVar2 = 0;\n    if (iVar1 == 0) {\n      uVar2 = strverscmp(uStack_198.release,\"2.6.36\");\n      uVar2 = ~uVar2 >> 0x1f;\n    }\n  }\n  statvfs_works_cache_2643 = uVar2;\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00119020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strverscmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strverscmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e670": "\nuint rotr8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "00119260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strtoumax@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00117eb0)();\n  return pvVar1;\n}\n\n", 
    "0010cd50": "\nbool bkm_scale(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "0010bc60": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00107480": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "00119108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001078a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 check_tuning_isra_0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)default_tuning) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_001120c4 < fVar1) && (fVar1 < DAT_001120c8)) && (_DAT_001120cc < pfVar2[3])) &&\n     (_DAT_001120d0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_001120c4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_001120d4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)default_tuning;\n  return 0;\n}\n\n", 
    "0010b9d0": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00119238": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001046f0": "\nvoid add_fs_type(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)xmalloc(0x10);\n  *puVar1 = param_1;\n  puVar1[1] = fs_select_list;\n  fs_select_list = puVar1;\n  return;\n}\n\n", 
    "00107c40": "\nundefined8 hash_get_n_buckets_used(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "0010e640": "\nuint rotl16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00119230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00110e20": "\nint lstat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __lxstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00119110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e400": "\nvoid argmatch_valid(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,&DAT_00113025,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "0010a160": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010c100": "\nbool same_nameat(int param_1,undefined8 param_2,int param_3,undefined8 param_4)\n\n{\n  int iVar1;\n  void *__s1;\n  void *__s2;\n  size_t __n;\n  size_t sVar2;\n  char *pcVar3;\n  int *piVar4;\n  bool bVar5;\n  long in_FS_OFFSET;\n  stat local_168;\n  stat local_d8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s1 = (void *)last_component(param_2);\n  __s2 = (void *)last_component(param_4);\n  __n = base_len(__s1);\n  sVar2 = base_len(__s2);\n  bVar5 = false;\n  if (__n == sVar2) {\n    iVar1 = memcmp(__s1,__s2,__n);\n    if (iVar1 == 0) {\n      pcVar3 = (char *)dir_name(param_2);\n      iVar1 = fstatat(param_1,pcVar3,&local_168,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n        error(1,*piVar4,&DAT_00113027,pcVar3);\n      }\n      free(pcVar3);\n      pcVar3 = (char *)dir_name(param_4);\n      iVar1 = fstatat(param_3,pcVar3,&local_d8,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n        error(1,*piVar4,&DAT_00113027,pcVar3);\n      }\n      bVar5 = local_168.st_ino == local_d8.st_ino && local_168.st_dev == local_d8.st_dev;\n      free(pcVar3);\n    }\n    else {\n      bVar5 = false;\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e760": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010ba30": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "00107470": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "0010bc70": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "0010cb20": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "001079b0": "\nvoid free_entry_isra_0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00119128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * canonicalize_file_name(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* canonicalize_file_name@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __snprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00119248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001035f0": "\nvoid endmntent(void)\n\n{\n  (*(code *)PTR_endmntent_00117d18)();\n  return;\n}\n\n", 
    "00107c30": "\nundefined8 hash_get_n_buckets(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "00119120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getcwd@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getenv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d200": "\nchar * find_non_slash(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strspn(param_1,\"/\");\n  return param_1 + sVar1;\n}\n\n", 
    "0010e650": "\nuint rotr16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "0010bd60": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f30": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00106170": "\nvoid get_all_entries(void)\n\n{\n  undefined8 *puVar1;\n  \n  filter_mount_list(show_all_fs);\n  for (puVar1 = mount_list; puVar1 != (undefined8 *)0x0; puVar1 = (undefined8 *)puVar1[6]) {\n    get_dev(*puVar1,puVar1[1],0,0,puVar1[3],*(byte *)(puVar1 + 5) & 1,*(byte *)(puVar1 + 5) >> 1 & 1\n            ,0,1);\n  }\n  return;\n}\n\n", 
    "0010cd30": "\nvoid xstrtol_fatal(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4,\n                  undefined8 param_5)\n\n{\n  xstrtol_error(param_1,param_2,(int)param_3,param_4,param_5,exit_failure);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00119208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001043b0": "\n/* WARNING: Removing unreachable block (ram,0x001043c3) */\n/* WARNING: Removing unreachable block (ram,0x001043cf) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001066b0": "\nvoid decode_output_arg(void)\n\n{\n  int iVar1;\n  char *__ptr;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  char **ppcVar5;\n  uint uVar6;\n  ulong uVar7;\n  char *pcVar8;\n  char *pcVar9;\n  \n  __ptr = (char *)xstrdup();\n  pcVar8 = __ptr;\n  do {\n    pcVar9 = (char *)0x0;\n    pcVar2 = strchr(pcVar8,0x2c);\n    if (pcVar2 != (char *)0x0) {\n      *pcVar2 = '\\0';\n      pcVar9 = pcVar2 + 1;\n    }\n    ppcVar5 = (char **)(field_data + 8);\n    uVar7 = 0;\n    do {\n      iVar1 = strcmp(*ppcVar5,pcVar8);\n      if (iVar1 == 0) goto LAB_00106760;\n      uVar6 = (int)uVar7 + 1;\n      uVar7 = (ulong)uVar6;\n      ppcVar5 = ppcVar5 + 6;\n    } while (uVar6 != 0xc);\n    uVar3 = quote(pcVar8);\n    pcVar8 = \"option --output: field %s unknown\";\n    while( true ) {\n      uVar4 = dcgettext(0,pcVar8,5);\n      error(0,0,uVar4,uVar3);\n      usage(1);\nLAB_00106760:\n      if (field_data[uVar7 * 0x30 + 0x2c] == '\\0') break;\n      uVar3 = quote();\n      pcVar8 = \"option --output: field %s used more than once\";\n    }\n    if ((int)uVar7 == 2) {\n      alloc_field(2,&DAT_00111c2b);\n    }\n    else if ((int)uVar7 == 4) {\n      alloc_field(4,\"Avail\");\n    }\n    else {\n      alloc_field(uVar7,0);\n    }\n    pcVar8 = pcVar9;\n  } while (pcVar9 != (char *)0x0);\n  free(__ptr);\n  return;\n}\n\n", 
    "001044d0": "\nulong devlist_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "00119210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d890": "\nbyte * read_file_system_list(void)\n\n{\n  byte **ppbVar1;\n  undefined8 uVar2;\n  uint uVar3;\n  int iVar4;\n  FILE *__stream;\n  __ssize_t _Var5;\n  char *pcVar6;\n  byte **ppbVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  undefined8 *puVar10;\n  byte *pbVar11;\n  int *piVar12;\n  long lVar13;\n  long lVar14;\n  byte *pbVar15;\n  byte *pbVar16;\n  long in_FS_OFFSET;\n  undefined uVar17;\n  bool bVar18;\n  bool bVar19;\n  undefined uVar20;\n  bool bVar21;\n  bool bVar22;\n  byte bVar23;\n  byte **local_98;\n  undefined local_81;\n  uint local_80;\n  uint local_7c;\n  int local_78;\n  int local_74;\n  int local_70;\n  int local_6c;\n  int local_68;\n  int local_64;\n  int local_60;\n  int local_5c;\n  byte *local_58;\n  char *local_50;\n  size_t local_48;\n  long local_40;\n  \n  bVar23 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __stream = fopen(\"/proc/self/mountinfo\",\"r\");\n  if (__stream == (FILE *)0x0) {\n    pbVar8 = (byte *)setmntent(\"/etc/mtab\",\"r\");\n    if (pbVar8 == (byte *)0x0) goto LAB_0010db4b;\n    local_98 = &local_58;\n    puVar10 = (undefined8 *)getmntent(pbVar8);\n    while (puVar10 != (undefined8 *)0x0) {\n      lVar13 = hasmntopt(puVar10,&DAT_00112fa7);\n      ppbVar7 = (byte **)xmalloc(0x38);\n      pbVar11 = (byte *)xstrdup(*puVar10);\n      uVar2 = puVar10[1];\n      *ppbVar7 = pbVar11;\n      pbVar11 = (byte *)xstrdup(uVar2);\n      ppbVar7[2] = (byte *)0x0;\n      uVar2 = puVar10[2];\n      bVar22 = true;\n      ppbVar7[1] = pbVar11;\n      pbVar11 = (byte *)xstrdup(uVar2);\n      lVar14 = 7;\n      ppbVar1 = ppbVar7 + 5;\n      bVar18 = false;\n      *(byte *)ppbVar1 = *(byte *)ppbVar1 | 4;\n      bVar21 = *(byte *)ppbVar1 == 0;\n      ppbVar7[3] = pbVar11;\n      pbVar15 = pbVar11;\n      pbVar9 = (byte *)\"autofs\";\n      do {\n        if (lVar14 == 0) break;\n        lVar14 = lVar14 + -1;\n        bVar18 = *pbVar15 < *pbVar9;\n        bVar21 = *pbVar15 == *pbVar9;\n        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n      } while (bVar21);\n      bVar19 = false;\n      bVar18 = (!bVar18 && !bVar21) == bVar18;\n      if (!bVar18) {\n        lVar14 = 5;\n        pbVar15 = pbVar11;\n        pbVar9 = &DAT_00112f38;\n        do {\n          if (lVar14 == 0) break;\n          lVar14 = lVar14 + -1;\n          bVar19 = *pbVar15 < *pbVar9;\n          bVar18 = *pbVar15 == *pbVar9;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n        } while (bVar18);\n        bVar21 = false;\n        bVar18 = (!bVar19 && !bVar18) == bVar19;\n        if (!bVar18) {\n          lVar14 = 6;\n          pbVar15 = pbVar11;\n          pbVar9 = (byte *)\"subfs\";\n          do {\n            if (lVar14 == 0) break;\n            lVar14 = lVar14 + -1;\n            bVar21 = *pbVar15 < *pbVar9;\n            bVar18 = *pbVar15 == *pbVar9;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar18);\n          bVar19 = false;\n          bVar18 = (!bVar21 && !bVar18) == bVar21;\n          if (!bVar18) {\n            lVar14 = 8;\n            pbVar15 = pbVar11;\n            pbVar9 = (byte *)\"debugfs\";\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar19 = *pbVar15 < *pbVar9;\n              bVar18 = *pbVar15 == *pbVar9;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n              pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n            } while (bVar18);\n            bVar21 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar14 = 7;\n              pbVar15 = pbVar11;\n              pbVar9 = (byte *)\"devpts\";\n              do {\n                if (lVar14 == 0) break;\n                lVar14 = lVar14 + -1;\n                bVar21 = *pbVar15 < *pbVar9;\n                bVar18 = *pbVar15 == *pbVar9;\n                pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar21 && !bVar18) == bVar21;\n              if (!bVar18) {\n                lVar14 = 8;\n                pbVar15 = pbVar11;\n                pbVar9 = (byte *)\"fusectl\";\n                do {\n                  if (lVar14 == 0) break;\n                  lVar14 = lVar14 + -1;\n                  bVar19 = *pbVar15 < *pbVar9;\n                  bVar18 = *pbVar15 == *pbVar9;\n                  pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                  pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                } while (bVar18);\n                bVar21 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar14 = 7;\n                  pbVar15 = pbVar11;\n                  pbVar9 = (byte *)\"mqueue\";\n                  do {\n                    if (lVar14 == 0) break;\n                    lVar14 = lVar14 + -1;\n                    bVar21 = *pbVar15 < *pbVar9;\n                    bVar18 = *pbVar15 == *pbVar9;\n                    pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                    pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar21 && !bVar18) == bVar21;\n                  if (!bVar18) {\n                    lVar14 = 0xb;\n                    pbVar15 = pbVar11;\n                    pbVar9 = (byte *)\"rpc_pipefs\";\n                    do {\n                      if (lVar14 == 0) break;\n                      lVar14 = lVar14 + -1;\n                      bVar19 = *pbVar15 < *pbVar9;\n                      bVar18 = *pbVar15 == *pbVar9;\n                      pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                      pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                    } while (bVar18);\n                    bVar21 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar14 = 6;\n                      pbVar15 = pbVar11;\n                      pbVar9 = (byte *)\"sysfs\";\n                      do {\n                        if (lVar14 == 0) break;\n                        lVar14 = lVar14 + -1;\n                        bVar21 = *pbVar15 < *pbVar9;\n                        bVar18 = *pbVar15 == *pbVar9;\n                        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                        pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar21 && !bVar18) == bVar21;\n                      if (!bVar18) {\n                        lVar14 = 6;\n                        pbVar15 = pbVar11;\n                        pbVar9 = (byte *)\"devfs\";\n                        do {\n                          if (lVar14 == 0) break;\n                          lVar14 = lVar14 + -1;\n                          bVar19 = *pbVar15 < *pbVar9;\n                          bVar18 = *pbVar15 == *pbVar9;\n                          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                        } while (bVar18);\n                        bVar21 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar14 = 7;\n                          pbVar15 = pbVar11;\n                          pbVar9 = (byte *)\"kernfs\";\n                          do {\n                            if (lVar14 == 0) break;\n                            lVar14 = lVar14 + -1;\n                            bVar21 = *pbVar15 < *pbVar9;\n                            bVar18 = *pbVar15 == *pbVar9;\n                            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                          } while (bVar18);\n                          if (((!bVar21 && !bVar18) != bVar21) &&\n                             (iVar4 = strcmp((char *)pbVar11,\"ignore\"), iVar4 != 0)) {\n                            iVar4 = strcmp((char *)pbVar11,\"none\");\n                            bVar22 = lVar13 == 0 && iVar4 == 0;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      pbVar15 = *ppbVar7;\n      *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfe | bVar22;\n      pcVar6 = strchr((char *)pbVar15,0x3a);\n      bVar22 = true;\n      if (pcVar6 != (char *)0x0) goto LAB_0010df3f;\n      bVar18 = *pbVar15 < 0x2f;\n      bVar21 = *pbVar15 == 0x2f;\n      if (bVar21) {\n        bVar18 = pbVar15[1] < 0x2f;\n        bVar21 = pbVar15[1] == 0x2f;\n        if (!bVar21) goto LAB_0010dfe2;\n        lVar13 = 6;\n        pbVar9 = pbVar11;\n        pbVar16 = &DAT_00112f8b;\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar9 < *pbVar16;\n          bVar21 = *pbVar9 == *pbVar16;\n          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          pbVar16 = pbVar16 + (ulong)bVar23 * -2 + 1;\n        } while (bVar21);\n        bVar19 = false;\n        bVar21 = (!bVar18 && !bVar21) == bVar18;\n        if (!bVar21) {\n          lVar13 = 5;\n          pbVar9 = &DAT_00112f91;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar19 = *pbVar11 < *pbVar9;\n            bVar21 = *pbVar11 == *pbVar9;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar18 = false;\n          bVar21 = (!bVar19 && !bVar21) == bVar19;\n          if (!bVar21) goto LAB_0010dfe2;\n        }\n      }\n      else {\nLAB_0010dfe2:\n        lVar13 = 7;\n        pbVar11 = (byte *)\"-hosts\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar11 < *pbVar15;\n          bVar21 = *pbVar11 == *pbVar15;\n          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        } while (bVar21);\n        bVar22 = (!bVar18 && !bVar21) == bVar18;\n      }\nLAB_0010df3f:\n      *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfd | bVar22 * '\\x02';\n      pbVar11 = (byte *)dev_from_mount_options_isra_0();\n      ppbVar7[4] = pbVar11;\n      *local_98 = (byte *)ppbVar7;\n      local_98 = ppbVar7 + 6;\n      puVar10 = (undefined8 *)getmntent(pbVar8);\n    }\n    iVar4 = endmntent(pbVar8);\n    if (iVar4 != 0) goto LAB_0010db3b;\nLAB_0010df8a:\n    piVar12 = __errno_location();\n    iVar4 = *piVar12;\n  }\n  else {\n    local_98 = &local_58;\n    local_50 = (char *)0x0;\n    local_48 = 0;\n    while (_Var5 = getline(&local_50,&local_48,__stream), _Var5 != -1) {\n      uVar3 = __isoc99_sscanf(local_50,\"%*u %*u %u:%u %n%*s%n %n%*s%n%c\",&local_80,&local_7c,\n                              &local_60,&local_5c,&local_78,&local_74,&local_81);\n      if ((((uVar3 & 0xfffffffb) == 3) &&\n          (pcVar6 = strstr(local_50 + local_74,\" - \"), pcVar6 != (char *)0x0)) &&\n         (uVar3 = __isoc99_sscanf(pcVar6,\" - %n%*s%n %n%*s%n %c\",&local_70,&local_6c,&local_68,\n                                  &local_64,&local_81), (uVar3 & 0xfffffffb) == 1)) {\n        local_50[local_5c] = '\\0';\n        local_50[local_74] = '\\0';\n        pcVar6[local_6c] = '\\0';\n        pcVar6[local_64] = '\\0';\n        unescape_tab(pcVar6 + local_68);\n        unescape_tab(local_50 + local_78);\n        unescape_tab(local_50 + local_60);\n        ppbVar7 = (byte **)xmalloc(0x38);\n        pbVar8 = (byte *)xstrdup(pcVar6 + local_68);\n        *ppbVar7 = pbVar8;\n        pbVar8 = (byte *)xstrdup(local_50 + local_78);\n        ppbVar7[1] = pbVar8;\n        pbVar8 = (byte *)xstrdup(local_50 + local_60);\n        ppbVar7[2] = pbVar8;\n        bVar22 = true;\n        pbVar8 = (byte *)xstrdup(pcVar6 + local_70);\n        ppbVar1 = ppbVar7 + 5;\n        uVar17 = 0;\n        *(byte *)ppbVar1 = *(byte *)ppbVar1 | 4;\n        uVar20 = *(char *)ppbVar1 == '\\0';\n        ppbVar7[3] = pbVar8;\n        pbVar9 = (byte *)gnu_dev_makedev(local_80,local_7c);\n        lVar13 = 7;\n        pbVar11 = pbVar8;\n        pbVar15 = (byte *)\"autofs\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          uVar17 = *pbVar11 < *pbVar15;\n          uVar20 = *pbVar11 == *pbVar15;\n          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        } while ((bool)uVar20);\n        ppbVar7[4] = pbVar9;\n        bVar18 = false;\n        bVar21 = (!(bool)uVar17 && !(bool)uVar20) == (bool)uVar17;\n        if (!bVar21) {\n          lVar13 = 5;\n          pbVar11 = pbVar8;\n          pbVar15 = &DAT_00112f38;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar11 < *pbVar15;\n            bVar21 = *pbVar11 == *pbVar15;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar19 = false;\n          bVar18 = (!bVar18 && !bVar21) == bVar18;\n          if (!bVar18) {\n            lVar13 = 6;\n            pbVar11 = pbVar8;\n            pbVar15 = (byte *)\"subfs\";\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar11 < *pbVar15;\n              bVar18 = *pbVar11 == *pbVar15;\n              pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            } while (bVar18);\n            bVar21 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar13 = 8;\n              pbVar11 = pbVar8;\n              pbVar15 = (byte *)\"debugfs\";\n              do {\n                if (lVar13 == 0) break;\n                lVar13 = lVar13 + -1;\n                bVar21 = *pbVar11 < *pbVar15;\n                bVar18 = *pbVar11 == *pbVar15;\n                pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar21 && !bVar18) == bVar21;\n              if (!bVar18) {\n                lVar13 = 7;\n                pbVar11 = pbVar8;\n                pbVar15 = (byte *)\"devpts\";\n                do {\n                  if (lVar13 == 0) break;\n                  lVar13 = lVar13 + -1;\n                  bVar19 = *pbVar11 < *pbVar15;\n                  bVar18 = *pbVar11 == *pbVar15;\n                  pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                  pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                } while (bVar18);\n                bVar21 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar13 = 8;\n                  pbVar11 = pbVar8;\n                  pbVar15 = (byte *)\"fusectl\";\n                  do {\n                    if (lVar13 == 0) break;\n                    lVar13 = lVar13 + -1;\n                    bVar21 = *pbVar11 < *pbVar15;\n                    bVar18 = *pbVar11 == *pbVar15;\n                    pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                    pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar21 && !bVar18) == bVar21;\n                  if (!bVar18) {\n                    lVar13 = 7;\n                    pbVar11 = pbVar8;\n                    pbVar15 = (byte *)\"mqueue\";\n                    do {\n                      if (lVar13 == 0) break;\n                      lVar13 = lVar13 + -1;\n                      bVar19 = *pbVar11 < *pbVar15;\n                      bVar18 = *pbVar11 == *pbVar15;\n                      pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                      pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                    } while (bVar18);\n                    bVar21 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar13 = 0xb;\n                      pbVar11 = pbVar8;\n                      pbVar15 = (byte *)\"rpc_pipefs\";\n                      do {\n                        if (lVar13 == 0) break;\n                        lVar13 = lVar13 + -1;\n                        bVar21 = *pbVar11 < *pbVar15;\n                        bVar18 = *pbVar11 == *pbVar15;\n                        pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar21 && !bVar18) == bVar21;\n                      if (!bVar18) {\n                        lVar13 = 6;\n                        pbVar11 = pbVar8;\n                        pbVar15 = (byte *)\"sysfs\";\n                        do {\n                          if (lVar13 == 0) break;\n                          lVar13 = lVar13 + -1;\n                          bVar19 = *pbVar11 < *pbVar15;\n                          bVar18 = *pbVar11 == *pbVar15;\n                          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                        } while (bVar18);\n                        bVar21 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar13 = 6;\n                          pbVar11 = pbVar8;\n                          pbVar15 = (byte *)\"devfs\";\n                          do {\n                            if (lVar13 == 0) break;\n                            lVar13 = lVar13 + -1;\n                            bVar21 = *pbVar11 < *pbVar15;\n                            bVar18 = *pbVar11 == *pbVar15;\n                            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                          } while (bVar18);\n                          bVar19 = false;\n                          bVar18 = (!bVar21 && !bVar18) == bVar21;\n                          if (!bVar18) {\n                            lVar13 = 7;\n                            pbVar11 = pbVar8;\n                            pbVar15 = (byte *)\"kernfs\";\n                            do {\n                              if (lVar13 == 0) break;\n                              lVar13 = lVar13 + -1;\n                              bVar19 = *pbVar11 < *pbVar15;\n                              bVar18 = *pbVar11 == *pbVar15;\n                              pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                            } while (bVar18);\n                            if (((!bVar19 && !bVar18) != bVar19) &&\n                               (iVar4 = strcmp((char *)pbVar8,\"ignore\"), iVar4 != 0)) {\n                              iVar4 = strcmp((char *)pbVar8,\"none\");\n                              bVar22 = iVar4 == 0;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        pbVar11 = *ppbVar7;\n        *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfe | bVar22;\n        pcVar6 = strchr((char *)pbVar11,0x3a);\n        bVar22 = true;\n        if (pcVar6 != (char *)0x0) goto LAB_0010dae9;\n        bVar18 = *pbVar11 < 0x2f;\n        bVar21 = *pbVar11 == 0x2f;\n        if (bVar21) {\n          bVar18 = pbVar11[1] < 0x2f;\n          bVar21 = pbVar11[1] == 0x2f;\n          if (!bVar21) goto LAB_0010dcc9;\n          lVar13 = 6;\n          pbVar15 = pbVar8;\n          pbVar9 = &DAT_00112f8b;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar15 < *pbVar9;\n            bVar21 = *pbVar15 == *pbVar9;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar19 = false;\n          bVar21 = (!bVar18 && !bVar21) == bVar18;\n          if (!bVar21) {\n            lVar13 = 5;\n            pbVar15 = &DAT_00112f91;\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar8 < *pbVar15;\n              bVar21 = *pbVar8 == *pbVar15;\n              pbVar8 = pbVar8 + (ulong)bVar23 * -2 + 1;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            } while (bVar21);\n            bVar18 = false;\n            bVar21 = (!bVar19 && !bVar21) == bVar19;\n            if (!bVar21) goto LAB_0010dcc9;\n          }\n        }\n        else {\nLAB_0010dcc9:\n          lVar13 = 7;\n          pbVar8 = (byte *)\"-hosts\";\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar8 < *pbVar11;\n            bVar21 = *pbVar8 == *pbVar11;\n            pbVar8 = pbVar8 + (ulong)bVar23 * -2 + 1;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar22 = (!bVar18 && !bVar21) == bVar18;\n        }\nLAB_0010dae9:\n        *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfd | bVar22 * '\\x02';\n        *local_98 = (byte *)ppbVar7;\n        local_98 = ppbVar7 + 6;\n      }\n    }\n    free(local_50);\n    iVar4 = ferror_unlocked(__stream);\n    if (iVar4 == 0) {\n      iVar4 = rpl_fclose(__stream);\n      if (iVar4 != -1) {\nLAB_0010db3b:\n        *local_98 = (byte *)0x0;\n        pbVar8 = local_58;\n        goto LAB_0010db4b;\n      }\n      goto LAB_0010df8a;\n    }\n    piVar12 = __errno_location();\n    iVar4 = *piVar12;\n    rpl_fclose(__stream);\n    *piVar12 = iVar4;\n  }\n  *local_98 = (byte *)0x0;\n  while (local_58 != (byte *)0x0) {\n    pbVar8 = *(byte **)(local_58 + 0x30);\n    free_mount_entry(local_58);\n    local_58 = pbVar8;\n  }\n  *piVar12 = iVar4;\n  pbVar8 = (byte *)0x0;\nLAB_0010db4b:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pbVar8;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e740": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00107c60": "\nulong hash_get_max_bucket_length(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010e620": "\nvoid rotl_sz(void)\n\n{\n  rotl64();\n  return;\n}\n\n", 
    "0010e500": "\nlong __xargmatch_internal\n               (undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = argmatch(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    argmatch_invalid(param_1,param_2,lVar1);\n    argmatch_valid(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "0010a020": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00110e00": "\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __xstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00104ff0": "\nvoid print_table(void)\n\n{\n  long lVar1;\n  long lVar2;\n  char *__ptr;\n  ulong uVar3;\n  undefined8 uVar4;\n  char *__s;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  long local_40;\n  \n  uVar5 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (nrows != 0) {\n    do {\n      if (ncolumns != 0) {\n        uVar3 = 0;\n        uVar4 = **(undefined8 **)(table + uVar5 * 8);\n        while( true ) {\n          lVar1 = uVar3 * 8;\n          lVar2 = *(long *)(columns + uVar3 * 8);\n          local_48 = *(undefined8 *)(lVar2 + 0x20);\n          __ptr = (char *)ambsalign(uVar4,&local_48,*(undefined4 *)(lVar2 + 0x28),\n                                    (ulong)(ncolumns - 1 == uVar3) << 3);\n          __s = __ptr;\n          if (__ptr == (char *)0x0) {\n            __s = *(char **)(*(long *)(table + uVar5 * 8) + uVar3 * 8);\n          }\n          fputs_unlocked(__s,stdout);\n          uVar3 = uVar3 + 1;\n          free(__ptr);\n          if (ncolumns <= uVar3) break;\n          uVar4 = *(undefined8 *)(*(long *)(table + uVar5 * 8) + 8 + lVar1);\n          putchar_unlocked(0x20);\n        }\n      }\n      uVar5 = uVar5 + 1;\n      putchar_unlocked(10);\n    } while (uVar5 < nrows);\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00107490": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,&DAT_00113027,uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00107518;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00107518:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "0010ba10": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "0010cc20": "\nchar * xgetcwd(void)\n\n{\n  char *pcVar1;\n  int *piVar2;\n  \n  pcVar1 = getcwd((char *)0x0,0);\n  if (pcVar1 == (char *)0x0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n  }\n  return pcVar1;\n}\n\n", 
    "00119218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00119228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mempcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001079d0": "\nlong hash_find_entry(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)safe_hasher();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_00107a71:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            free_entry_isra_0(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_00107a71;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        free_entry_isra_0(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "001045e0": "\nvoid emit_mandatory_arg_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00119100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint uname(utsname *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* uname@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e750": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00107c50": "\nundefined8 hash_get_n_entries(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "0010e630": "\nvoid rotr_sz(void)\n\n{\n  rotr64();\n  return;\n}\n\n", 
    "00119220": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "0010c330": "\nvoid restore_cwd(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    fchdir(*param_1);\n    return;\n  }\n  chdir_long(*(undefined8 *)(param_1 + 2));\n  return;\n}\n\n", 
    "0010e600": "\nuint rotl32(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00107560": "\nvoid dir_len(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  \n  cVar1 = *param_1;\n  lVar2 = last_component();\n  uVar3 = lVar2 - (long)param_1;\n  do {\n    if (uVar3 <= (cVar1 == '/')) {\n      return;\n    }\n    lVar2 = uVar3 - 1;\n    uVar3 = uVar3 - 1;\n  } while (param_1[lVar2] == '/');\n  return;\n}\n\n", 
    "00105140": "\nvoid add_uint_with_neg_flag_constprop_0(ulong param_1,char param_2)\n\n{\n  if (grand_fsu[32] != param_2) {\n    if (grand_fsu[32] != '\\0') {\n      grand_fsu._24_8_ = -grand_fsu._24_8_;\n    }\n    if (param_2 != '\\0') {\n      param_1 = -param_1;\n    }\n    if (param_1 < grand_fsu._24_8_) {\n      grand_fsu._24_8_ = grand_fsu._24_8_ - param_1;\n    }\n    else {\n      grand_fsu._24_8_ = param_1 - grand_fsu._24_8_;\n      grand_fsu[32] = param_2;\n    }\n    if (grand_fsu[32] != '\\0') {\n      grand_fsu._24_8_ = -grand_fsu._24_8_;\n    }\n    return;\n  }\n  grand_fsu._24_8_ = param_1 + grand_fsu._24_8_;\n  return;\n}\n\n", 
    "00109f10": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "0010bd40": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "0010be60": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001036e0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00117d90)();\n  return;\n}\n\n", 
    "001035c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_00117d00)();\n  return pcVar1;\n}\n\n", 
    "00104b70": "\nchar ** last_device_for_mount(char *param_1)\n\n{\n  int iVar1;\n  char **ppcVar2;\n  char **ppcVar3;\n  \n  ppcVar2 = mount_list;\n  if (mount_list != (char **)0x0) {\n    ppcVar3 = (char **)0x0;\n    do {\n      iVar1 = strcmp(ppcVar2[1],param_1);\n      if (iVar1 == 0) {\n        ppcVar3 = ppcVar2;\n      }\n      ppcVar2 = (char **)ppcVar2[6];\n    } while (ppcVar2 != (char **)0x0);\n    if (ppcVar3 != (char **)0x0) {\n      ppcVar2 = (char **)canonicalize_file_name(*ppcVar3);\n      if ((ppcVar2 == (char **)0x0) || (*(char *)ppcVar2 != '/')) {\n        free(ppcVar2);\n        ppcVar2 = (char **)xstrdup(*ppcVar3);\n        return ppcVar2;\n      }\n    }\n  }\n  return ppcVar2;\n}\n\n", 
    "00109750": "\nundefined8 wc_ensure_printable(wint_t *param_1)\n\n{\n  wint_t *pwVar1;\n  wint_t __wc;\n  int iVar2;\n  undefined8 uVar3;\n  \n  uVar3 = 0;\n  __wc = *param_1;\n  while (__wc != 0) {\n    iVar2 = iswprint(__wc);\n    if (iVar2 == 0) {\n      *param_1 = 0xfffd;\n      uVar3 = 1;\n    }\n    pwVar1 = param_1 + 1;\n    param_1 = param_1 + 1;\n    __wc = *pwVar1;\n  }\n  return uVar3;\n}\n\n", 
    "00103a80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t wcstombs(char *__s,wchar_t *__pwcs,size_t __n)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_wcstombs_00117f60)();\n  return sVar1;\n}\n\n", 
    "0010e720": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00108760": "\nundefined8 hash_insert(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = hash_insert_if_absent(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107670": "\nvoid base_len(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00107790": "\nulong is_prime(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "00109e00": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_00112180;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010bd50": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "001037f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getcwd_00117e18)();\n  return pcVar1;\n}\n\n", 
    "001035b0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00117fe0)();\n  return;\n}\n\n", 
    "001036d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00117d88)();\n  return iVar1;\n}\n\n", 
    "00119200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint statvfs(char *__file,statvfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* statvfs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103a70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_00117f58)();\n  return _Var1;\n}\n\n", 
    "0010e850": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010e730": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "0010a490": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "0010e610": "\nuint rotr32(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00104fc0": "\nulong has_uuid_suffix(char *param_1)\n\n{\n  size_t sVar1;\n  ulong uVar2;\n  \n  sVar1 = strlen(param_1);\n  uVar2 = 0;\n  if (0x24 < sVar1) {\n    sVar1 = strspn(param_1 + (sVar1 - 0x24),\"-0123456789abcdefABCDEF\");\n    uVar2 = uVar2 & 0xffffffffffffff00 | (ulong)(sVar1 == 0x24);\n  }\n  return uVar2 & 0xffffffff;\n}\n\n", 
    "0010e0d0": "\nulong rpl_vasprintf(void **param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  void *__ptr;\n  int *piVar1;\n  long in_FS_OFFSET;\n  ulong local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (void *)vasnprintf(0,&local_18,param_2,param_3);\n  if (__ptr == (void *)0x0) {\n    local_18 = 0xffffffff;\n  }\n  else if (local_18 < 0x80000000) {\n    *param_1 = __ptr;\n    local_18 = local_18 & 0xffffffff;\n  }\n  else {\n    free(__ptr);\n    piVar1 = __errno_location();\n    *piVar1 = 0x4b;\n    local_18 = 0xffffffff;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_18;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e700": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00106490": "\nvoid emit_blocksize_note_constprop_0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\n                    \"\\nDisplay values are in units of the first available SIZE from --block-size,\\nand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\\nOtherwise, units default to 1024 bytes (or 512 if POSIXLY_CORRECT is set).\\n\"\n                    ,5);\n  __printf_chk(1,uVar1,&DAT_00111c28);\n  return;\n}\n\n", 
    "0010be40": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001047f0": "\nvoid devlist_free(void *param_1)\n\n{\n  free(param_1);\n  return;\n}\n\n", 
    "001035e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00117d10)();\n  return;\n}\n\n", 
    "0010fce0": "\nvoid dup_safer(undefined8 param_1)\n\n{\n  rpl_fcntl(param_1,0,3);\n  return;\n}\n\n", 
    "0010bd10": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "0010ead0": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010eb3f;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010eb3f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "0010c880": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106120": "\nvoid get_entry(char *param_1,ulong *param_2)\n\n{\n  char *__s;\n  char cVar1;\n  int iVar2;\n  char *__s_00;\n  size_t sVar3;\n  size_t __n;\n  void *__ptr;\n  int *piVar4;\n  ulong uVar5;\n  undefined8 uVar6;\n  long lVar7;\n  undefined8 *puVar8;\n  byte *pbVar9;\n  byte *pbVar10;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  undefined8 *puVar13;\n  long in_FS_OFFSET;\n  bool bVar14;\n  bool bVar15;\n  byte bVar16;\n  ulong uStack_f0;\n  stat sStack_d8;\n  long lStack_40;\n  \n  bVar16 = 0;\n  if (((*(uint *)(param_2 + 3) & 0xb000) == 0x2000) && (cVar1 = get_disk(), cVar1 != '\\0')) {\n    return;\n  }\n  lStack_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s_00 = canonicalize_file_name(param_1);\n  puVar8 = mount_list;\n  if (__s_00 == (char *)0x0) {\nLAB_00105def:\n    if (puVar8 != (undefined8 *)0x0) {\nLAB_00105e00:\n      puVar13 = (undefined8 *)0x0;\n      do {\n        while( true ) {\n          uVar5 = puVar8[4];\n          if (puVar8[4] == 0xffffffffffffffff) {\n            iVar2 = stat((char *)puVar8[1],&sStack_d8);\n            if (iVar2 == 0) {\n              puVar8[4] = sStack_d8.st_dev;\n              uVar5 = sStack_d8.st_dev;\n            }\n            else {\n              piVar4 = __errno_location();\n              if (*piVar4 == 5) {\n                uVar6 = quotearg_n_style_colon(0,3,puVar8[1]);\n                error(0,*piVar4,&DAT_00113027,uVar6);\n                exit_status = 1;\n              }\n              puVar8[4] = 0xfffffffffffffffe;\n              uVar5 = 0xfffffffffffffffe;\n            }\n          }\n          bVar14 = *param_2 < uVar5;\n          bVar15 = *param_2 == uVar5;\n          puVar11 = puVar13;\n          if (bVar15) break;\nLAB_00105e10:\n          puVar8 = (undefined8 *)puVar8[6];\n          puVar13 = puVar11;\n          if (puVar8 == (undefined8 *)0x0) goto LAB_00105e90;\n        }\n        lVar7 = 5;\n        pbVar9 = (byte *)puVar8[3];\n        pbVar10 = &DAT_00111b98;\n        do {\n          if (lVar7 == 0) break;\n          lVar7 = lVar7 + -1;\n          bVar14 = *pbVar9 < *pbVar10;\n          bVar15 = *pbVar9 == *pbVar10;\n          pbVar9 = pbVar9 + (ulong)bVar16 * -2 + 1;\n          pbVar10 = pbVar10 + (ulong)bVar16 * -2 + 1;\n        } while (bVar15);\n        if (((!bVar14 && !bVar15) == bVar14) ||\n           ((((puVar13 != (undefined8 *)0x0 && ((*(byte *)(puVar13 + 5) & 1) == 0)) &&\n             ((*(byte *)(puVar8 + 5) & 1) != 0)) ||\n            ((iVar2 = stat((char *)puVar8[1],&sStack_d8), iVar2 == 0 &&\n             (puVar11 = puVar8, sStack_d8.st_dev == puVar8[4])))))) goto LAB_00105e10;\n        puVar8[4] = 0xfffffffffffffffe;\n        puVar8 = (undefined8 *)puVar8[6];\n      } while (puVar8 != (undefined8 *)0x0);\nLAB_00105e90:\n      if (puVar13 != (undefined8 *)0x0) {\nLAB_00105e99:\n        get_dev(*puVar13,puVar13[1],param_1,param_1,puVar13[3],*(byte *)(puVar13 + 5) & 1,\n                *(byte *)(puVar13 + 5) >> 1 & 1,0,0);\n        goto LAB_00105ecd;\n      }\n    }\n  }\n  else {\n    if (*__s_00 != '/') {\n      free(__s_00);\n      goto LAB_00105def;\n    }\n    sVar3 = strlen(__s_00);\n    if (puVar8 != (undefined8 *)0x0) {\n      uStack_f0 = 0;\n      bVar14 = true;\n      puVar11 = puVar8;\n      puVar12 = (undefined8 *)0x0;\nLAB_00105f28:\n      do {\n        puVar13 = puVar11;\n        bVar15 = false;\n        lVar7 = 5;\n        pbVar9 = (byte *)puVar13[3];\n        pbVar10 = &DAT_00111b98;\n        do {\n          if (lVar7 == 0) break;\n          lVar7 = lVar7 + -1;\n          bVar15 = *pbVar9 < *pbVar10;\n          bVar14 = *pbVar9 == *pbVar10;\n          pbVar9 = pbVar9 + (ulong)bVar16 * -2 + 1;\n          pbVar10 = pbVar10 + (ulong)bVar16 * -2 + 1;\n        } while (bVar14);\n        if (((!bVar15 && !bVar14) == bVar15) ||\n           (((puVar12 != (undefined8 *)0x0 && ((*(byte *)(puVar12 + 5) & 1) == 0)) &&\n            ((*(byte *)(puVar13 + 5) & 1) != 0)))) {\nLAB_00105fc0:\n          bVar14 = (undefined8 *)puVar13[6] == (undefined8 *)0x0;\n          puVar11 = (undefined8 *)puVar13[6];\n          puVar13 = puVar12;\n          if (bVar14) break;\n          goto LAB_00105f28;\n        }\n        __s = (char *)puVar13[1];\n        __n = strlen(__s);\n        if ((__n < uStack_f0) || (sVar3 < __n)) goto LAB_00105fc0;\n        if (__n != 1) {\n          if (((sVar3 == __n) || (__s_00[__n] == '/')) &&\n             (iVar2 = strncmp(__s,__s_00,__n), iVar2 == 0)) {\n            puVar12 = puVar13;\n            uStack_f0 = __n;\n          }\n          goto LAB_00105fc0;\n        }\n        uStack_f0 = 1;\n        bVar14 = (undefined8 *)puVar13[6] == (undefined8 *)0x0;\n        puVar11 = (undefined8 *)puVar13[6];\n        puVar12 = puVar13;\n      } while (!bVar14);\n      free(__s_00);\n      if (((puVar13 == (undefined8 *)0x0) ||\n          (iVar2 = stat((char *)puVar13[1],&sStack_d8), iVar2 != 0)) ||\n         (sStack_d8.st_dev != *param_2)) goto LAB_00105e00;\n      goto LAB_00105e99;\n    }\n    free(__s_00);\n  }\n  __ptr = (void *)find_mount_point(param_1,param_2);\n  if (__ptr != (void *)0x0) {\n    get_dev(0,__ptr,param_1,0,0,0,0,0,0);\n    free(__ptr);\n  }\nLAB_00105ecd:\n  if (lStack_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108e10": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 * human_readable(ulong param_1,char *param_2,uint param_3,ulong param_4,ulong param_5)\n\n{\n  char *pcVar1;\n  undefined auVar2 [16];\n  undefined auVar3 [16];\n  float fVar4;\n  float fVar5;\n  char cVar6;\n  uint uVar7;\n  uint uVar8;\n  uint uVar9;\n  lconv *plVar10;\n  size_t sVar11;\n  size_t sVar12;\n  undefined8 *puVar13;\n  ulong uVar14;\n  ulong uVar15;\n  long lVar16;\n  uint uVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  undefined8 *puVar21;\n  ulong uVar22;\n  uint uVar23;\n  char *__s;\n  undefined8 *puVar24;\n  ulong uVar25;\n  bool bVar26;\n  undefined8 in_ST0;\n  undefined8 *local_78;\n  uint local_68;\n  \n  uVar7 = param_3 & 3;\n  uVar8 = param_3 & 0x20;\n  plVar10 = localeconv();\n  puVar21 = (undefined8 *)plVar10->decimal_point;\n  uVar20 = (-(uint)(uVar8 == 0) & 0xffffffe8) + 0x400;\n  sVar11 = strlen((char *)puVar21);\n  bVar26 = 0xf < sVar11 - 1;\n  if (bVar26) {\n    puVar21 = (undefined8 *)&DAT_00111fbc;\n  }\n  pcVar1 = plVar10->grouping;\n  __s = plVar10->thousands_sep;\n  if (bVar26) {\n    sVar11 = 1;\n  }\n  sVar12 = strlen(__s);\n  if (0x10 < sVar12) {\n    __s = \"\";\n  }\n  local_78 = (undefined8 *)(param_2 + 0x287);\n  uVar19 = (uint)sVar11;\n  if (param_4 < param_5) {\n    if (param_4 != 0) {\n      auVar3 = ZEXT816(param_5) / ZEXT816(param_4);\n      if (param_5 % param_4 == 0) {\n        uVar22 = SUB168(ZEXT816(param_1) / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        auVar2 = ZEXT816((ulong)(SUB168(ZEXT816(param_1) %\n                                        (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 10));\n        uVar25 = SUB168(auVar2 % (auVar3 & (undefined  [16])0xffffffffffffffff),0) * 2;\n        uVar9 = SUB164(auVar2 / (auVar3 & (undefined  [16])0xffffffffffffffff),0);\n        uVar15 = (ulong)uVar9;\n        if (uVar25 < SUB168(auVar3,0)) {\n          uVar17 = (uint)(uVar25 != 0);\n        }\n        else {\n          uVar17 = (SUB168(auVar3,0) < uVar25) + 2;\n        }\n        goto joined_r0x00109186;\n      }\n    }\nLAB_00108efc:\n    fVar4 = (float)param_4;\n    if ((long)param_4 < 0) {\n      fVar4 = fVar4 + _DAT_001120d8;\n    }\n    if ((long)param_5 < 0) {\n      fVar4 = fVar4 / ((float)param_5 + _DAT_001120d8);\n      if ((long)param_1 < 0) goto LAB_00109030;\nLAB_00108f39:\n      fVar4 = (float)param_1 * fVar4;\n      if ((param_3 & 0x10) != 0) goto LAB_00108f45;\nLAB_00109078:\n      adjust_value(uVar7);\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\");\n      sVar12 = strlen(param_2);\n      uVar23 = 0xffffffff;\n      sVar11 = sVar12;\n    }\n    else {\n      fVar4 = fVar4 / (float)param_5;\n      if (-1 < (long)param_1) goto LAB_00108f39;\nLAB_00109030:\n      fVar4 = ((float)param_1 + _DAT_001120d8) * fVar4;\n      if ((param_3 & 0x10) == 0) goto LAB_00109078;\nLAB_00108f45:\n      uVar23 = 0;\n      fVar5 = (float)uVar20;\n      do {\n        uVar23 = uVar23 + 1;\n        fVar5 = fVar5 * (float)uVar20;\n        if (fVar4 < fVar5) break;\n      } while (uVar23 != 8);\n      adjust_value(uVar7);\n      __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.1Lf\");\n      sVar12 = strlen(param_2);\n      if ((sVar11 + 2 + (ulong)(uVar8 == 0) < sVar12) ||\n         (((param_3 & 8) != 0 && (param_2[sVar12 - 1] == '0')))) {\n        adjust_value(uVar7,in_ST0);\n        __sprintf_chk(param_2,1,0xffffffffffffffff,\"%.0Lf\");\n        sVar12 = strlen(param_2);\n        sVar11 = sVar12;\n      }\n      else {\n        sVar11 = sVar12 - (sVar11 + 1);\n      }\n    }\n    puVar13 = (undefined8 *)memmove((void *)((long)local_78 - sVar12),param_2,sVar12);\n    puVar24 = (undefined8 *)(sVar11 + (long)puVar13);\n  }\n  else {\n    if ((param_4 % param_5 != 0) ||\n       (uVar22 = param_1 * SUB168(ZEXT816(param_4) / ZEXT816(param_5),0),\n       SUB168(ZEXT816(uVar22) /\n              (ZEXT816(param_4) / ZEXT816(param_5) & (undefined  [16])0xffffffffffffffff),0) !=\n       param_1)) goto LAB_00108efc;\n    uVar17 = 0;\n    uVar15 = 0;\n    uVar9 = 0;\njoined_r0x00109186:\n    local_68 = param_3 & 0x10;\n    puVar13 = local_78;\n    if ((param_3 & 0x10) == 0) {\n      uVar23 = 0xffffffff;\nLAB_0010919b:\n      if (uVar7 != 1) goto LAB_001091aa;\n      puVar24 = local_78;\n      if (5 < (int)(uVar9 + (((uint)uVar22 & 1) + uVar17 != 0))) goto LAB_001091ba;\nLAB_001091e8:\n      do {\n        puVar13 = (undefined8 *)((long)puVar13 + -1);\n        *(char *)puVar13 = (char)uVar22 + (char)(uVar22 / 10) * -10 + '0';\n        bVar26 = 9 < uVar22;\n        uVar22 = uVar22 / 10;\n      } while (bVar26);\n    }\n    else {\n      uVar9 = (uint)uVar15;\n      uVar25 = (ulong)uVar20;\n      uVar23 = 0;\n      if (uVar22 < uVar25) goto LAB_0010919b;\n      while( true ) {\n        uVar14 = uVar22 / uVar25;\n        uVar9 = (int)uVar15 + (int)(uVar22 % uVar25) * 10;\n        uVar15 = (ulong)uVar9 / (ulong)uVar20;\n        uVar18 = ((int)uVar17 >> 1) + (uVar9 % uVar20) * 2;\n        uVar9 = (uint)uVar15;\n        uVar17 = uVar17 + uVar18;\n        if (uVar18 < uVar20) {\n          uVar17 = (uint)(uVar17 != 0);\n        }\n        else {\n          uVar17 = (uVar20 < uVar17) + 2;\n        }\n        uVar23 = uVar23 + 1;\n        uVar22 = uVar14;\n        if (uVar14 < uVar25) break;\n        if (uVar23 == 8) goto LAB_0010919b;\n      }\n      if (9 < uVar14) goto LAB_0010919b;\n      if (uVar7 == 1) {\n        bVar26 = 2 < (uVar9 & 1) + uVar17;\n      }\n      else {\n        bVar26 = uVar17 != 0 && uVar7 == 0;\n      }\n      if (bVar26) {\n        cVar6 = (char)uVar15 + '1';\n        if (uVar9 == 9) {\n          uVar22 = uVar14 + 1;\n          if (uVar14 != 9) {\n            uVar17 = 0;\n            goto LAB_001094af;\n          }\n          goto LAB_001094f3;\n        }\n      }\n      else if (uVar9 == 0) {\nLAB_001094af:\n        if ((param_3 & 8) != 0) goto LAB_001094f5;\n        cVar6 = '0';\n      }\n      else {\n        cVar6 = (char)uVar15 + '0';\n      }\n      param_2[0x286] = cVar6;\n      uVar15 = sVar11 & 0xffffffff;\n      puVar13 = (undefined8 *)(param_2 + (0x286 - sVar11));\n      if (uVar19 < 8) {\n        if ((sVar11 & 4) == 0) {\n          if (((int)uVar15 != 0) &&\n             (*(undefined *)puVar13 = *(undefined *)puVar21, (sVar11 & 2) != 0)) {\n            *(undefined2 *)((long)puVar13 + (uVar15 - 2)) =\n                 *(undefined2 *)((long)puVar21 + (uVar15 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)puVar13 = *(undefined4 *)puVar21;\n          *(undefined4 *)((long)puVar13 + (uVar15 - 4)) =\n               *(undefined4 *)((long)puVar21 + (uVar15 - 4));\n        }\n      }\n      else {\n        *puVar13 = *puVar21;\n        *(undefined8 *)((long)puVar13 + ((sVar11 & 0xffffffff) - 8)) =\n             *(undefined8 *)((long)puVar21 + ((sVar11 & 0xffffffff) - 8));\n        lVar16 = (long)puVar13 - ((ulong)(puVar13 + 1) & 0xfffffffffffffff8);\n        uVar9 = (int)lVar16 + uVar19 & 0xfffffff8;\n        if (7 < uVar9) {\n          uVar17 = 0;\n          do {\n            uVar15 = (ulong)uVar17;\n            uVar17 = uVar17 + 8;\n            *(undefined8 *)(((ulong)(puVar13 + 1) & 0xfffffffffffffff8) + uVar15) =\n                 *(undefined8 *)((long)puVar21 + (uVar15 - lVar16));\n          } while (uVar17 < uVar9);\n        }\n      }\nLAB_001094f3:\n      uVar17 = 0;\nLAB_001094f5:\n      puVar24 = puVar13;\n      if (uVar7 == 1) goto LAB_001091e8;\n      uVar9 = 0;\nLAB_001091aa:\n      puVar24 = puVar13;\n      if ((uVar7 != 0) || ((int)(uVar17 + uVar9) < 1)) goto LAB_001091e8;\nLAB_001091ba:\n      uVar22 = uVar22 + 1;\n      puVar13 = puVar24;\n      if (((local_68 == 0) || (uVar20 != uVar22)) || (uVar23 == 8)) goto LAB_001091e8;\n      uVar23 = uVar23 + 1;\n      if ((param_3 & 8) == 0) {\n        *(undefined *)((long)puVar24 + -1) = 0x30;\n        puVar24 = (undefined8 *)((long)puVar24 + ~sVar11);\n        uVar22 = sVar11 & 0xffffffff;\n        if (uVar19 < 8) {\n          if ((sVar11 & 4) == 0) {\n            if (((int)uVar22 != 0) &&\n               (*(undefined *)puVar24 = *(undefined *)puVar21, (sVar11 & 2) != 0)) {\n              *(undefined2 *)((long)puVar24 + (uVar22 - 2)) =\n                   *(undefined2 *)((long)puVar21 + (uVar22 - 2));\n            }\n          }\n          else {\n            *(undefined4 *)puVar24 = *(undefined4 *)puVar21;\n            *(undefined4 *)((long)puVar24 + (uVar22 - 4)) =\n                 *(undefined4 *)((long)puVar21 + (uVar22 - 4));\n          }\n        }\n        else {\n          *puVar24 = *puVar21;\n          *(undefined8 *)((long)puVar24 + ((sVar11 & 0xffffffff) - 8)) =\n               *(undefined8 *)((long)puVar21 + ((sVar11 & 0xffffffff) - 8));\n          lVar16 = (long)puVar24 - ((ulong)(puVar24 + 1) & 0xfffffffffffffff8);\n          uVar7 = (int)lVar16 + uVar19 & 0xfffffff8;\n          if (7 < uVar7) {\n            uVar19 = 0;\n            do {\n              uVar22 = (ulong)uVar19;\n              uVar19 = uVar19 + 8;\n              *(undefined8 *)(((ulong)(puVar24 + 1) & 0xfffffffffffffff8) + uVar22) =\n                   *(undefined8 *)((long)puVar21 + (uVar22 - lVar16));\n            } while (uVar19 < uVar7);\n          }\n        }\n      }\n      *(undefined *)((long)puVar24 + -1) = 0x31;\n      puVar13 = (undefined8 *)((long)puVar24 + -1);\n    }\n  }\n  if ((param_3 & 4) != 0) {\n    puVar13 = (undefined8 *)group_number(puVar13,(long)puVar24 - (long)puVar13,pcVar1,__s);\n  }\n  puVar21 = local_78;\n  if ((param_3 & 0x80) == 0) goto LAB_0010910f;\n  if (uVar23 == 0xffffffff) {\n    if (param_5 < 2) {\n      uVar23 = 0;\n      goto LAB_001090fc;\n    }\n    uVar23 = 1;\n    uVar22 = 1;\n    do {\n      uVar22 = uVar22 * uVar20;\n      if (param_5 <= uVar22) break;\n      uVar23 = uVar23 + 1;\n    } while (uVar23 != 8);\n    if ((param_3 & 0x40) != 0) goto LAB_00109371;\nLAB_0010938f:\n    puVar21 = (undefined8 *)((long)local_78 + 1);\n    if ((uVar23 == 1) && (uVar8 == 0)) {\n      *(undefined *)local_78 = 0x6b;\n      goto joined_r0x00109465;\n    }\n    *(undefined1 *)local_78 = power_letter[(int)uVar23];\n    if ((param_3 & 0x100) == 0) goto LAB_0010910f;\n    if (uVar8 != 0) {\n      *(undefined *)((long)local_78 + 1) = 0x69;\n      puVar21 = (undefined8 *)((long)local_78 + 2);\n    }\n  }\n  else {\nLAB_001090fc:\n    if ((param_3 & 0x100 | uVar23) == 0) goto LAB_0010910f;\n    if ((param_3 & 0x40) != 0) {\nLAB_00109371:\n      local_78 = (undefined8 *)(param_2 + 0x288);\n      param_2[0x287] = ' ';\n    }\n    puVar21 = local_78;\n    if (uVar23 != 0) goto LAB_0010938f;\njoined_r0x00109465:\n    if ((param_3 & 0x100) == 0) goto LAB_0010910f;\n  }\n  *(undefined *)puVar21 = 0x42;\n  puVar21 = (undefined8 *)((long)puVar21 + 1);\nLAB_0010910f:\n  local_78 = puVar21;\n  *(undefined *)local_78 = 0;\n  return puVar13;\n}\n\n", 
    "0010bd30": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "001035d0": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_00117d08)();\n  return;\n}\n\n", 
    "001036f0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00117d98)();\n  return;\n}\n\n", 
    "001069c0": "\nulong find_mount_point(char *param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  uint *puVar3;\n  char *pcVar4;\n  size_t sVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  ulong uVar8;\n  long lVar9;\n  undefined8 extraout_RDX;\n  undefined *puVar10;\n  undefined *puVar12;\n  undefined *puVar13;\n  undefined *puVar14;\n  ulong uVar15;\n  long *plVar16;\n  long in_FS_OFFSET;\n  undefined local_178 [16];\n  undefined4 local_168;\n  undefined4 uStack_164;\n  undefined4 uStack_160;\n  undefined4 uStack_15c;\n  undefined4 local_158;\n  undefined4 uStack_154;\n  __mode_t _Stack_150;\n  __uid_t _Stack_14c;\n  __gid_t local_148;\n  int iStack_144;\n  undefined4 uStack_140;\n  undefined4 uStack_13c;\n  undefined4 local_138;\n  undefined4 uStack_134;\n  undefined4 uStack_130;\n  undefined4 uStack_12c;\n  undefined4 local_128;\n  undefined4 uStack_124;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 local_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 local_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 local_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 local_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 local_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  __mode_t _Stack_c0;\n  __uid_t _Stack_bc;\n  __gid_t local_b8;\n  int iStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 local_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 local_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 local_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 local_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined4 local_68;\n  undefined4 uStack_64;\n  undefined4 uStack_60;\n  undefined4 uStack_5c;\n  undefined4 local_58;\n  undefined4 uStack_54;\n  undefined4 uStack_50;\n  undefined4 uStack_4c;\n  long local_40;\n  undefined *puVar11;\n  \n  puVar11 = local_178;\n  puVar10 = local_178;\n  puVar14 = local_178;\n  puVar13 = local_178;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = save_cwd(local_178);\n  puVar3 = (uint *)__errno_location();\n  if (iVar1 != 0) {\n    uVar8 = 0;\n    uVar6 = dcgettext(0,\"cannot get current directory\",5);\n    error(0,*puVar3,uVar6);\n    goto LAB_00106cd8;\n  }\n  if ((param_2[6] & 0xf000) == 0x4000) {\n    local_168 = *param_2;\n    uStack_164 = param_2[1];\n    uStack_160 = param_2[2];\n    uStack_15c = param_2[3];\n    local_158 = param_2[4];\n    uStack_154 = param_2[5];\n    _Stack_150 = param_2[6];\n    _Stack_14c = param_2[7];\n    local_148 = param_2[8];\n    iStack_144 = param_2[9];\n    uStack_140 = param_2[10];\n    uStack_13c = param_2[0xb];\n    local_138 = param_2[0xc];\n    uStack_134 = param_2[0xd];\n    uStack_130 = param_2[0xe];\n    uStack_12c = param_2[0xf];\n    local_128 = param_2[0x10];\n    uStack_124 = param_2[0x11];\n    uStack_120 = param_2[0x12];\n    uStack_11c = param_2[0x13];\n    local_118 = param_2[0x14];\n    uStack_114 = param_2[0x15];\n    uStack_110 = param_2[0x16];\n    uStack_10c = param_2[0x17];\n    local_108 = param_2[0x18];\n    uStack_104 = param_2[0x19];\n    uStack_100 = param_2[0x1a];\n    uStack_fc = param_2[0x1b];\n    local_f8 = param_2[0x1c];\n    uStack_f4 = param_2[0x1d];\n    uStack_f0 = param_2[0x1e];\n    uStack_ec = param_2[0x1f];\n    local_e8 = param_2[0x20];\n    uStack_e4 = param_2[0x21];\n    uStack_e0 = param_2[0x22];\n    uStack_dc = param_2[0x23];\n    iVar1 = chdir(param_1);\n    puVar13 = local_178;\n    if (iVar1 < 0) goto LAB_00106d53;\nLAB_00106b8e:\n    puVar12 = puVar13;\n    while( true ) {\n      *(undefined8 *)(puVar12 + -8) = 0x106c66;\n      iVar1 = stat(\"..\",(stat *)&local_d8);\n      if (iVar1 < 0) break;\n      if ((CONCAT44(uStack_d4,local_d8) != CONCAT44(uStack_164,local_168)) ||\n         (CONCAT44(uStack_cc,uStack_d0) == CONCAT44(uStack_15c,uStack_160))) {\n        *(undefined8 *)(puVar12 + -8) = 0x106cb5;\n        uVar8 = xgetcwd();\n        goto LAB_00106cb8;\n      }\n      *(undefined8 *)(puVar12 + -8) = 0x106bd8;\n      iVar1 = chdir(\"..\");\n      if (iVar1 < 0) {\n        *(undefined8 *)(puVar12 + -8) = 0x106d11;\n        uVar6 = quotearg_style(4,&DAT_00111fbb);\n        pcVar4 = \"cannot change to directory %s\";\n        goto LAB_00106c8e;\n      }\n      local_168 = local_d8;\n      uStack_164 = uStack_d4;\n      uStack_160 = uStack_d0;\n      uStack_15c = uStack_cc;\n      local_158 = local_c8;\n      uStack_154 = uStack_c4;\n      _Stack_150 = _Stack_c0;\n      _Stack_14c = _Stack_bc;\n      local_148 = local_b8;\n      iStack_144 = iStack_b4;\n      uStack_140 = uStack_b0;\n      uStack_13c = uStack_ac;\n      local_138 = local_a8;\n      uStack_134 = uStack_a4;\n      uStack_130 = uStack_a0;\n      uStack_12c = uStack_9c;\n      local_128 = local_98;\n      uStack_124 = uStack_94;\n      uStack_120 = uStack_90;\n      uStack_11c = uStack_8c;\n      local_118 = local_88;\n      uStack_114 = uStack_84;\n      uStack_110 = uStack_80;\n      uStack_10c = uStack_7c;\n      local_108 = local_78;\n      uStack_104 = uStack_74;\n      uStack_100 = uStack_70;\n      uStack_fc = uStack_6c;\n      local_f8 = local_68;\n      uStack_f4 = uStack_64;\n      uStack_f0 = uStack_60;\n      uStack_ec = uStack_5c;\n      local_e8 = local_58;\n      uStack_e4 = uStack_54;\n      uStack_e0 = uStack_50;\n      uStack_dc = uStack_4c;\n    }\n    *(undefined8 *)(puVar12 + -8) = 0x106c7f;\n    uVar6 = quotearg_style(4,&DAT_00111fbb);\n    pcVar4 = \"cannot stat %s\";\nLAB_00106c8e:\n    *(undefined8 *)(puVar12 + -8) = 0x106c95;\n    uVar7 = dcgettext(0,pcVar4,5);\n    uVar2 = *puVar3;\n    uVar8 = 0;\n    *(undefined8 *)(puVar12 + -8) = 0x106cab;\n    error(0,uVar2,uVar7,uVar6);\n  }\n  else {\n    pcVar4 = (char *)dir_name(param_1);\n    sVar5 = strlen(pcVar4);\n    puVar13 = local_178;\n    while (puVar11 != local_178 + -(sVar5 + 0x18 & 0xfffffffffffff000)) {\n      puVar10 = puVar13 + -0x1000;\n      *(undefined8 *)(puVar13 + -8) = *(undefined8 *)(puVar13 + -8);\n      puVar11 = puVar13 + -0x1000;\n      puVar13 = puVar13 + -0x1000;\n    }\n    uVar8 = (ulong)((uint)(sVar5 + 0x18) & 0xff0);\n    lVar9 = -uVar8;\n    puVar12 = puVar10 + lVar9;\n    puVar14 = puVar10 + lVar9;\n    if (uVar8 != 0) {\n      *(undefined8 *)(puVar10 + -8) = *(undefined8 *)(puVar10 + -8);\n    }\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106a96;\n    param_1 = (char *)memcpy((void *)((ulong)(puVar10 + lVar9 + 0xf) & 0xfffffffffffffff0),pcVar4,\n                             sVar5 + 1);\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106aa1;\n    free(pcVar4);\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106aa9;\n    iVar1 = chdir(param_1);\n    if (iVar1 < 0) {\nLAB_00106d53:\n      *(undefined8 *)(puVar14 + -8) = 0x106d5d;\n      uVar6 = quotearg_style(4,param_1);\n      *(undefined8 *)(puVar14 + -8) = 0x106d73;\n      uVar7 = dcgettext(0,\"cannot change to directory %s\",5);\n      uVar2 = *puVar3;\n      uVar8 = 0;\n      *(undefined8 *)(puVar14 + -8) = 0x106d89;\n      error(0,uVar2,uVar7,uVar6);\n      puVar13 = puVar14;\n      goto LAB_00106cd8;\n    }\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106ac4;\n    iVar1 = stat(\".\",(stat *)&local_168);\n    puVar13 = puVar10 + lVar9;\n    if (-1 < iVar1) goto LAB_00106b8e;\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106ad9;\n    uVar6 = quotearg_style(4,param_1);\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106aef;\n    uVar7 = dcgettext(0,\"cannot stat current directory (now %s)\",5);\n    uVar2 = *puVar3;\n    uVar8 = 0;\n    *(undefined8 *)(puVar10 + lVar9 + -8) = 0x106b05;\n    error(0,uVar2,uVar7,uVar6);\n  }\nLAB_00106cb8:\n  uVar2 = *puVar3;\n  *(undefined8 *)(puVar12 + -8) = 0x106cc4;\n  iVar1 = restore_cwd(local_178);\n  if (iVar1 != 0) {\n    *(undefined8 *)(puVar12 + -8) = 0x106dab;\n    uVar6 = dcgettext(0,\"failed to return to initial working directory\",5);\n    uVar15 = (ulong)*puVar3;\n    plVar16 = (long *)0x1;\n    *(undefined8 *)(puVar12 + -8) = 0x106dbe;\n    error(1,uVar15,uVar6);\n    *(uint **)(puVar12 + -8) = puVar3;\n    *(ulong *)(puVar12 + -0x10) = uVar8;\n    *(undefined **)(puVar12 + -0x18) = &stack0xfffffffffffffff8;\n    *(ulong *)(puVar12 + -0x20) = (ulong)uVar2;\n    lVar9 = *plVar16;\n    if (lVar9 == 0) {\n      *(undefined8 *)(puVar12 + -0x30) = 0x106e31;\n      lVar9 = hash_initialize(7,0,triple_hash,triple_compare_ino_str,triple_free);\n      *plVar16 = lVar9;\n      if (lVar9 == 0) {\n                    /* WARNING: Subroutine does not return */\n        *(undefined **)(puVar12 + -0x30) = &UNK_00106e41;\n        xalloc_die(0);\n      }\n    }\n    *(undefined8 *)(puVar12 + -0x30) = 0x106de6;\n    uVar2 = seen_file(lVar9,uVar15,extraout_RDX);\n    if ((char)uVar2 == '\\0') {\n      lVar9 = *plVar16;\n      *(undefined8 *)(puVar12 + -0x30) = 0x106dfb;\n      record_file(lVar9,uVar15,extraout_RDX);\n    }\n    return (ulong)uVar2;\n  }\n  *(undefined8 *)(puVar12 + -8) = 0x106cd4;\n  free_cwd(local_178);\n  *puVar3 = uVar2;\n  puVar13 = puVar12;\nLAB_00106cd8:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar8;\n  }\n                    /* WARNING: Subroutine does not return */\n  *(undefined8 *)(puVar13 + -8) = 0x106d98;\n  __stack_chk_fail();\n}\n\n", 
    "00107d30": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid hash_print_statistics(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = hash_get_n_entries();\n  uVar2 = hash_get_n_buckets();\n  uVar3 = hash_get_n_buckets_used();\n  uVar4 = hash_get_max_bucket_length();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_00111f70) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "00107e50": "\nlong hash_lookup(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "00107f70": "\nvoid hash_get_entries(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "00103a90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00117f68)();\n  return;\n}\n\n", 
    "0010e830": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00104fa0": "\nlong me_for_dev(void)\n\n{\n  long lVar1;\n  \n  lVar1 = devlist_for_dev();\n  if (lVar1 != 0) {\n    lVar1 = *(long *)(lVar1 + 8);\n  }\n  return lVar1;\n}\n\n", 
    "00103b5e": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d710": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d830": "\nundefined8 dev_from_mount_options_isra_0(void)\n\n{\n  return 0xffffffffffffffff;\n}\n\n", 
    "0010e920": "\nvoid open_safer(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001036a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_readlink_00117d70)();\n  return sVar1;\n}\n\n", 
    "001037c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00117e00)();\n  return _Var1;\n}\n\n", 
    "00103b68": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00117e90)();\n  return iVar1;\n}\n\n", 
    "0010bf30": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103b63": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103a40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_00117f40)();\n  return pFVar1;\n}\n\n", 
    "00103b4f": "\nvoid hash_insert_if_absent_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d600": "\nundefined8 get_fs_usage(char *param_1,undefined8 param_2,long *param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  statfs local_98;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = statvfs_works();\n  if (iVar1 == 0) {\n    uVar2 = 0;\n    iVar1 = statfs(param_1,&local_98);\n    if (iVar1 < 0) {\n      uVar2 = 0xffffffff;\n    }\n    else {\n      *param_3 = local_98.f_frsize;\n      param_3[1] = local_98.f_blocks;\n      param_3[2] = local_98.f_bfree;\n      param_3[3] = local_98.f_bavail;\n      *(byte *)(param_3 + 4) = (byte)(local_98.f_bavail >> 0x3f);\n      param_3[5] = local_98.f_files;\n      param_3[6] = local_98.f_ffree;\n    }\n  }\n  else {\n    uVar2 = 0xffffffff;\n    iVar1 = statvfs(param_1,(statvfs *)&local_98);\n    if (-1 < iVar1) {\n      if (local_98.f_bsize == 0) {\n        local_98.f_bsize = local_98.f_type;\n      }\n      uVar2 = 0;\n      *param_3 = local_98.f_bsize;\n      param_3[1] = local_98.f_blocks;\n      param_3[2] = local_98.f_bfree;\n      param_3[3] = local_98.f_bavail;\n      *(byte *)(param_3 + 4) = (byte)(local_98.f_bavail >> 0x3f);\n      param_3[5] = local_98.f_files;\n      param_3[6] = local_98.f_ffree;\n    }\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103b4a": "\nvoid hash_rehash_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e810": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00107870": "\nlong safe_hasher(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104480": "\nvoid alloc_table_row(void)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 uVar3;\n  \n  nrows = nrows + 1;\n  table = xnrealloc(table,nrows,8);\n  lVar1 = table + -8;\n  lVar2 = nrows * 8;\n  uVar3 = xnmalloc(ncolumns,8);\n  *(undefined8 *)(lVar1 + lVar2) = uVar3;\n  return;\n}\n\n", 
    "00103b59": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001037b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint uname(utsname *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_uname_00117df8)();\n  return iVar1;\n}\n\n", 
    "0010be30": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint statfs(char *__file,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_statfs_00117e88)();\n  return iVar1;\n}\n\n", 
    "001039f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00117f18)();\n  return pvVar1;\n}\n\n", 
    "00103b54": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103a30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00117f38)();\n  return iVar1;\n}\n\n", 
    "00109720": "\nvoid mbs_align_pad(undefined *param_1,undefined *param_2,long param_3)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  puVar1 = param_1;\n  if ((param_1 < param_2) && (puVar2 = param_1, param_3 != 0)) {\n    do {\n      puVar1 = puVar2 + 1;\n      *puVar2 = 0x20;\n      if (param_1 + (param_3 - (long)puVar1) == (undefined *)0x0) break;\n      puVar2 = puVar1;\n    } while (puVar1 < param_2);\n  }\n  *puVar1 = 0;\n  return;\n}\n\n", 
    "0010d840": "\nvoid free_mount_entry(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1[1]);\n  free(param_1[2]);\n  if ((*(byte *)(param_1 + 5) & 4) == 0) {\n    free(param_1);\n    return;\n  }\n  free(param_1[3]);\n  free(param_1);\n  return;\n}\n\n", 
    "0010a210": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010c0f0": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "00107540": "\nvoid dir_name(void)\n\n{\n  long lVar1;\n  \n  lVar1 = mdir_name();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001190f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001190f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstatat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "0010bf10": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "001036c0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00117d80)();\n  return;\n}\n\n", 
    "001037e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00117e10)();\n  return pvVar1;\n}\n\n", 
    "00106e50": "\nchar * canonicalize_filename_mode(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *__s_00;\n  size_t sVar7;\n  int *piVar8;\n  uint uVar9;\n  char *__dest;\n  long lVar10;\n  char *pcVar11;\n  char *pcVar12;\n  char cVar13;\n  char *pcVar14;\n  long in_FS_OFFSET;\n  void *local_108;\n  char *local_100;\n  ulong local_f0;\n  long local_e0;\n  stat local_d8;\n  long local_40;\n  \n  uVar9 = param_2 & 3;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_e0 = 0;\n  if (((uVar9 & uVar9 - 1) != 0) || (param_1 == (char *)0x0)) {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 0x16;\n    goto LAB_00107090;\n  }\n  if (*param_1 == '\\0') {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 2;\n    goto LAB_00107090;\n  }\n  if (*param_1 == '/') {\n    __s = (char *)xmalloc(0x1000);\n    *__s = '/';\n    pcVar12 = __s + 0x1000;\n    __dest = __s + 1;\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') {\nLAB_00106ef1:\n      local_f0 = 0;\n      local_108 = (void *)0x0;\n      local_100 = param_1;\n      do {\n        pcVar11 = param_1;\n        cVar13 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            cVar13 = param_1[1];\n            param_1 = param_1 + 1;\n          } while (cVar13 == '/');\n          pcVar11 = param_1;\n          if (cVar13 == '\\0') break;\n        }\n        do {\n          pcVar14 = param_1;\n          cVar4 = pcVar14[1];\n          param_1 = pcVar14 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar11) break;\n        sVar6 = (long)param_1 - (long)pcVar11;\n        if (sVar6 == 1) {\n          if (cVar13 != '.') goto LAB_00106f8d;\n        }\n        else {\n          if (((sVar6 != 2) || (cVar13 != '.')) || (pcVar11[1] != '.')) {\nLAB_00106f8d:\n            if (__dest[-1] != '/') {\n              *__dest = '/';\n              __dest = __dest + 1;\n            }\n            if (pcVar12 <= __dest + sVar6) {\n              lVar10 = (long)__dest - (long)__s;\n              lVar3 = 0x1000 - (long)__s;\n              if (0xfff < (long)sVar6) {\n                lVar3 = (sVar6 + 1) - (long)__s;\n              }\n              __s = (char *)xrealloc(__s,pcVar12 + lVar3);\n              pcVar12 = __s + (long)(pcVar12 + lVar3);\n              __dest = __s + lVar10;\n            }\n            memcpy(__dest,pcVar11,sVar6);\n            __dest = __dest + sVar6;\n            *__dest = '\\0';\n            pcVar11 = __dest;\n            if ((uVar9 == 2) && ((param_2 & 4) != 0)) {\nLAB_00107010:\n              local_d8.st_mode = 0;\nLAB_00107018:\n              if ((*param_1 == '\\0') || (uVar9 == 2)) {\nLAB_0010702a:\n                cVar4 = *param_1;\n                __dest = pcVar11;\n                goto LAB_00107032;\n              }\n              piVar8 = __errno_location();\n              iVar5 = 0x14;\n            }\n            else {\n              if ((param_2 & 4) == 0) {\n                iVar5 = lstat(__s,&local_d8);\n              }\n              else {\n                iVar5 = stat(__s,&local_d8);\n              }\n              if (iVar5 == 0) {\n                if ((local_d8.st_mode & 0xf000) != 0xa000) {\n                  if ((local_d8.st_mode & 0xf000) != 0x4000) goto LAB_00107018;\n                  goto LAB_0010702a;\n                }\n                cVar4 = seen_triple(&local_e0,local_100,&local_d8);\n                if (cVar4 == '\\0') {\n                  __s_00 = (char *)areadlink_with_size(__s,local_d8.st_size);\n                  if (__s_00 != (char *)0x0) {\n                    sVar6 = strlen(__s_00);\n                    sVar7 = strlen(param_1);\n                    uVar1 = sVar6 + 1 + sVar7;\n                    if (local_f0 == 0) {\n                      local_f0 = 0x1000;\n                      if (0xfff < uVar1) {\n                        local_f0 = uVar1;\n                      }\n                      local_108 = (void *)xmalloc(local_f0);\n                    }\n                    else if (local_f0 < uVar1) {\n                      local_108 = (void *)xrealloc(local_108,uVar1);\n                      local_f0 = uVar1;\n                    }\n                    memmove((void *)((long)local_108 + sVar6),param_1,sVar7 + 1);\n                    param_1 = (char *)memcpy(local_108,__s_00,sVar6);\n                    pcVar11 = __s + 1;\n                    if (*__s_00 == '/') {\n                      *__s = '/';\n                    }\n                    else {\n                      bVar2 = pcVar11 < __dest;\n                      pcVar11 = __dest;\n                      if ((bVar2) && (pcVar11 = __dest + -1, __s < pcVar11)) {\n                        do {\n                          if (pcVar11[-1] == '/') break;\n                          pcVar11 = pcVar11 + -1;\n                        } while (__s != pcVar11);\n                      }\n                    }\n                    free(__s_00);\n                    local_100 = param_1;\n                    goto LAB_0010702a;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = *piVar8;\n                  if ((uVar9 == 2) && (iVar5 != 0xc)) goto LAB_0010716c;\n                }\n                else {\n                  if (uVar9 == 2) {\nLAB_0010716c:\n                    cVar4 = pcVar14[1];\n                    goto LAB_00107032;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = 0x28;\n                }\n              }\n              else {\n                piVar8 = __errno_location();\n                iVar5 = *piVar8;\n                if ((param_2 & 3) != 0) {\n                  if (uVar9 != 1) goto LAB_00107010;\n                  sVar6 = strspn(param_1,\"/\");\n                  if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_0010716c;\n                }\n              }\n            }\n            free(local_108);\n            free(__s);\n            if (local_e0 != 0) {\n              hash_free();\n            }\n            *piVar8 = iVar5;\n            __s = (char *)0x0;\n            goto LAB_00107090;\n          }\n          if ((__s + 1 < __dest) && (__dest = __dest + -1, __s < __dest)) {\n            do {\n              if (__dest[-1] == '/') break;\n              __dest = __dest + -1;\n            } while (__dest != __s);\n          }\n        }\nLAB_00107032:\n      } while (cVar4 != '\\0');\n      goto LAB_00107040;\n    }\n    local_108 = (void *)0x0;\n    pcVar11 = __dest;\nLAB_00107053:\n    __dest = pcVar11 + 1;\n  }\n  else {\n    __s = (char *)xgetcwd();\n    if (__s == (char *)0x0) goto LAB_00107090;\n    sVar6 = strlen(__s);\n    if (sVar6 < 0x1000) {\n      __s = (char *)xrealloc(__s,0x1000);\n      __dest = __s + sVar6;\n      pcVar12 = __s + 0x1000;\n    }\n    else {\n      __dest = __s + sVar6;\n      pcVar12 = __dest;\n    }\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') goto LAB_00106ef1;\n    local_108 = (void *)0x0;\nLAB_00107040:\n    pcVar11 = __dest;\n    if ((__dest <= __s + 1) || (__dest[-1] != '/')) goto LAB_00107053;\n    pcVar11 = __dest + -1;\n  }\n  *pcVar11 = '\\0';\n  if (__dest != pcVar12) {\n    __s = (char *)xrealloc(__s,pcVar11 + (1 - (long)__s));\n  }\n  free(local_108);\n  if (local_e0 != 0) {\n    hash_free();\n  }\nLAB_00107090:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return __s;\n}\n\n", 
    "00103b80": "\nint main(ulong param_1,undefined8 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  int *piVar8;\n  char *pcVar9;\n  undefined *puVar10;\n  char cVar11;\n  char **ppcVar12;\n  char **ppcVar13;\n  long lVar14;\n  long in_FS_OFFSET;\n  long local_50;\n  undefined4 local_44;\n  long local_40;\n  \n  lVar14 = 0;\n  param_1 = param_1 & 0xffffffff;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  atexit(close_stdout);\n  fs_select_list = (char **)0x0;\n  fs_exclude_list = (char **)0x0;\n  show_all_fs = '\\0';\n  show_listed_fs = 0;\n  human_output_opts = 0xffffffff;\n  print_type = '\\0';\n  file_systems_processed = '\\0';\n  exit_status = 0;\n  print_grand_total = '\\0';\n  grand_fsu._0_8_ = 1;\n  uVar4 = dcgettext(0,\"options %s and %s are mutually exclusive\",5);\nswitchD_00103cbb_caseD_76:\n  local_44 = 0xffffffff;\n  iVar1 = getopt_long(param_1,param_2,\"aB:iF:hHklmPTt:vx:\",long_options,&local_44);\n  if (iVar1 == -1) {\nLAB_00103ebb:\n    if (human_output_opts != 0xffffffff) goto LAB_00103ec8;\n    if ((char)lVar14 == '\\0') goto LAB_001042c0;\n    human_output_opts = 0;\n    pcVar9 = getenv(\"POSIXLY_CORRECT\");\n    output_block_size = (ulong)(-(uint)(pcVar9 == (char *)0x0) & 0x200) + 0x200;\n    goto LAB_00103ec8;\n  }\n  if (0x83 < iVar1) goto switchD_00103cbb_caseD_43;\n  if (iVar1 < 0x42) {\n    if (iVar1 == -0x83) {\n      version_etc(stdout,&DAT_00111b9d,\"GNU coreutils\",Version,\"Torbjorn Granlund\",\"David MacKenzie\"\n                  ,\"Paul Eggert\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (iVar1 == -0x82) {\n      usage(0);\n      goto LAB_00103ebb;\n    }\n    goto switchD_00103cbb_caseD_43;\n  }\n  switch(iVar1) {\n  case 0x42:\n    iVar1 = human_options(optarg,&human_output_opts,&output_block_size);\n    if (iVar1 != 0) {\n      xstrtol_fatal(iVar1,local_44,0x42,long_options,optarg);\n      goto switchD_00103cbb_caseD_6d;\n    }\n    goto switchD_00103cbb_caseD_76;\n  default:\n    goto switchD_00103cbb_caseD_43;\n  case 0x46:\n  case 0x74:\n    add_fs_type(optarg);\n    goto switchD_00103cbb_caseD_76;\n  case 0x48:\n    human_output_opts = 0x90;\n    output_block_size = 1;\n    goto switchD_00103cbb_caseD_76;\n  case 0x50:\n    if (header_mode == 4) goto LAB_0010434e;\n    lVar14 = 1;\n    goto switchD_00103cbb_caseD_76;\n  case 0x54:\n    if (header_mode != 4) {\n      print_type = '\\x01';\n      goto switchD_00103cbb_caseD_76;\n    }\nLAB_0010429a:\n    puVar10 = &DAT_00111c8d;\n    break;\n  case 0x61:\n    show_all_fs = '\\x01';\n    goto switchD_00103cbb_caseD_76;\n  case 0x68:\n    human_output_opts = 0xb0;\n    output_block_size = 1;\n    goto switchD_00103cbb_caseD_76;\n  case 0x69:\n    if (header_mode != 4) {\n      header_mode = 1;\n      goto switchD_00103cbb_caseD_76;\n    }\nLAB_00104361:\n    puVar10 = &DAT_00111c8a;\n    break;\n  case 0x6b:\n    human_output_opts = 0;\n    output_block_size = 0x400;\n    goto switchD_00103cbb_caseD_76;\n  case 0x6c:\n    show_local_fs = '\\x01';\n    goto switchD_00103cbb_caseD_76;\n  case 0x6d:\nswitchD_00103cbb_caseD_6d:\n    human_output_opts = 0;\n    output_block_size = 0x100000;\n  case 0x76:\n    goto switchD_00103cbb_caseD_76;\n  case 0x78:\n    add_excluded_fs_type(optarg);\n    goto switchD_00103cbb_caseD_76;\n  case 0x80:\n    require_sync = '\\0';\n    goto switchD_00103cbb_caseD_76;\n  case 0x81:\n    require_sync = '\\x01';\n    goto switchD_00103cbb_caseD_76;\n  case 0x82:\n    print_grand_total = '\\x01';\n    goto switchD_00103cbb_caseD_76;\n  case 0x83:\n    if (header_mode == 1) goto LAB_00104361;\n    if ((header_mode != 0) || ((char)lVar14 == '\\0')) {\n      if (print_type != '\\0') goto LAB_0010429a;\n      header_mode = 4;\n      if (optarg != 0) {\n        decode_output_arg();\n      }\n      goto switchD_00103cbb_caseD_76;\n    }\n    error(0,0,uVar4,&DAT_00111c90,\"--output\");\n    usage(1);\nLAB_0010434e:\n    puVar10 = &DAT_00111c90;\n  }\n  error(0,0,uVar4,puVar10,\"--output\");\nswitchD_00103cbb_caseD_43:\n  usage(1);\nLAB_001042c0:\n  pcVar9 = getenv(\"DF_BLOCK_SIZE\");\n  human_options(pcVar9,&human_output_opts,&output_block_size);\nLAB_00103ec8:\n  if ((header_mode != 1) && (header_mode != 4)) {\n    if ((human_output_opts & 0x10) == 0) goto LAB_001040d4;\n    header_mode = 2;\n  }\n  do {\n    if (fs_select_list != (char **)0x0) {\n      lVar14 = 0;\n      ppcVar13 = fs_select_list;\n      do {\n        if (fs_exclude_list != (char **)0x0) {\n          pcVar9 = *ppcVar13;\n          ppcVar12 = fs_exclude_list;\n          do {\n            iVar1 = strcmp(pcVar9,*ppcVar12);\n            if (iVar1 == 0) {\n              lVar14 = 1;\n              uVar4 = quote(pcVar9);\n              uVar5 = dcgettext(0,\"file system type %s both selected and excluded\",5);\n              error(0,0,uVar5,uVar4);\n              break;\n            }\n            ppcVar12 = (char **)ppcVar12[1];\n          } while (ppcVar12 != (char **)0x0);\n        }\n        ppcVar13 = (char **)ppcVar13[1];\n      } while (ppcVar13 != (char **)0x0);\n      if ((char)lVar14 != '\\0') {\n        iVar1 = 1;\n        goto LAB_00104047;\n      }\n    }\n    iVar1 = (int)param_1;\n    if ((int)optind < iVar1) {\n      local_50 = xnmalloc((long)(int)(iVar1 - optind),0x90);\n      for (lVar14 = (long)(int)optind; iVar2 = (int)lVar14, iVar2 < iVar1; lVar14 = lVar14 + 1) {\n        iVar3 = stat((char *)param_2[lVar14],(stat *)((long)(int)(iVar2 - optind) * 0x90 + local_50)\n                    );\n        if (iVar3 == 0) {\n          if (((*(uint *)(local_50 + 0x18 + (long)(int)(iVar2 - optind) * 0x90) & 0xf000) != 0x1000)\n             && (iVar2 = open((char *)param_2[lVar14],0x100), -1 < iVar2)) {\n            close(iVar2);\n          }\n        }\n        else {\n          uVar4 = quotearg_n_style_colon(0,3,param_2[lVar14]);\n          piVar8 = __errno_location();\n          error(0,*piVar8,&DAT_00113027,uVar4);\n          param_2[lVar14] = 0;\n          exit_status = 1;\n        }\n      }\n    }\n    cVar11 = '\\x01';\n    if ((((fs_select_list == (char **)0x0) && (fs_exclude_list == (char **)0x0)) &&\n        (print_type == '\\0')) && (field_data[92] == '\\0')) {\n      cVar11 = show_local_fs;\n    }\n    mount_list = read_file_system_list(cVar11);\n    if (mount_list == 0) {\n      lVar14 = 1;\n      pcVar9 = \"\";\n      if ((((int)optind < iVar1) && (show_all_fs == '\\0')) &&\n         ((show_local_fs == '\\0' &&\n          ((fs_select_list == (char **)0x0 && (fs_exclude_list == (char **)0x0)))))) {\n        lVar14 = 0;\n        pcVar9 = (char *)dcgettext(0,\"Warning: \",5);\n      }\n      uVar4 = dcgettext(0,\"cannot read table of mounted file systems\",5);\n      piVar8 = __errno_location();\n      error(lVar14,*piVar8,&DAT_00111ce9,pcVar9,uVar4);\n    }\n    if (require_sync != '\\0') {\n      sync();\n    }\n    get_field_list();\n    get_header();\n    if ((int)optind < iVar1) {\n      show_listed_fs = 1;\n      uVar7 = (long)(int)optind + 1;\n      param_1 = (iVar1 + ~optind) + uVar7;\n      uVar6 = (long)(int)optind;\n      while( true ) {\n        if (param_2[uVar6] != 0) {\n          get_entry(param_2[uVar6],(long)(int)((int)uVar6 - optind) * 0x90 + local_50);\n        }\n        if (param_1 == uVar7) break;\n        uVar6 = uVar7;\n        uVar7 = uVar7 + 1;\n      }\n    }\n    else {\n      uVar7 = get_all_entries();\n    }\n    if (file_systems_processed != '\\0') {\n      if (print_grand_total != '\\0') {\n        pcVar9 = \"-\";\n        if (field_data[44] == '\\0') {\n          pcVar9 = \"total\";\n        }\n        get_dev(\"total\",pcVar9,0,0,0,0,0,grand_fsu,0,uVar7);\n      }\n      print_table();\n      iVar1 = exit_status;\nLAB_00104047:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return iVar1;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    iVar1 = exit_status;\n    if (exit_status != 0) goto LAB_00104047;\n    uVar4 = dcgettext(0,\"no file systems processed\",5);\n    error(1,0,uVar4);\nLAB_001040d4:\n    if ((char)lVar14 != '\\0') {\n      header_mode = 3;\n    }\n  } while( true );\n}\n\n", 
    "00103a60": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00117f50)();\n  return;\n}\n\n", 
    "0010fee0": "\nundefined8 printf_fetchargs(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  undefined1 *puVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  long *plVar9;\n  char **ppcVar10;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar10 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar10 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar10 + 1;\n        }\n        pcVar6 = *ppcVar10;\n        if (pcVar6 == (char *)0x0) {\n          pcVar6 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar6;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          plVar9 = (long *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          plVar9 = *(long **)(param_1 + 2);\n          *(long **)(param_1 + 2) = plVar9 + 1;\n        }\n        puVar5 = (undefined1 *)*plVar9;\n        if (puVar5 == (undefined1 *)0x0) {\n          puVar5 = wide_null_string_2831;\n        }\n        *(undefined1 **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "0010a540": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0011218f;\n      }\n      else {\n        pcVar2 = &DAT_0011218c;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00112193;\n    }\n    else {\n      pcVar2 = &DAT_00112188;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00103b6d": "\nvoid xstrtol_error_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105230": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid get_dev(char *param_1,char *param_2,undefined *param_3,char *param_4,undefined *param_5,\n            char param_6,char param_7,undefined8 *param_8,char param_9)\n\n{\n  long lVar1;\n  uint uVar2;\n  uint *puVar3;\n  char cVar4;\n  int iVar5;\n  undefined *puVar6;\n  long lVar7;\n  int *piVar8;\n  undefined8 uVar9;\n  void *pvVar10;\n  char **ppcVar11;\n  undefined8 *puVar12;\n  long lVar13;\n  undefined8 uVar14;\n  ulong uVar15;\n  long lVar16;\n  ulong extraout_RDX;\n  ulong uVar17;\n  ulong uVar18;\n  undefined uVar19;\n  undefined8 uVar20;\n  long in_FS_OFFSET;\n  double dVar21;\n  double dVar22;\n  void *local_450;\n  undefined8 *local_440;\n  char *local_430;\n  undefined8 local_428;\n  long lStack_420;\n  undefined8 local_418;\n  undefined8 uStack_410;\n  undefined local_408 [16];\n  undefined8 local_3f8;\n  undefined8 local_3e8 [8];\n  undefined8 local_3a8 [2];\n  undefined8 local_398;\n  undefined8 local_390;\n  stat local_368;\n  undefined local_2d8 [664];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((((param_7 != '\\0') && (show_local_fs != '\\0')) ||\n       ((param_6 != '\\0' && ((show_all_fs == '\\0' && (show_listed_fs == '\\0')))))) ||\n      (cVar4 = selected_fstype(param_5), cVar4 == '\\0')) ||\n     (cVar4 = excluded_fstype(param_5), cVar4 != '\\0')) goto LAB_001053b8;\n  if ((param_2 == (char *)0x0) || (param_8 != (undefined8 *)0x0)) {\n    if ((param_4 == (char *)0x0) && (param_4 = param_2, param_2 == (char *)0x0)) {\n      param_4 = param_1;\n    }\n    if (param_8 == (undefined8 *)0x0) goto LAB_001052fd;\n    local_428 = *param_8;\n    lStack_420 = param_8[1];\n    local_418 = param_8[2];\n    uStack_410 = param_8[3];\n    local_408 = *(undefined (*) [16])(param_8 + 4);\n    local_3f8 = param_8[6];\n    if (((lStack_420 == 0) && (show_all_fs == '\\0')) && (show_listed_fs == '\\0')) goto LAB_001053b8;\n  }\n  else {\n    if (*param_2 != '/') goto LAB_001053b8;\n    if (param_4 == (char *)0x0) {\n      param_4 = param_2;\n    }\nLAB_001052fd:\n    iVar5 = get_fs_usage(param_4,param_1,&local_428);\n    if (iVar5 == 0) {\n      if (param_9 == '\\0') {\n        if ((lStack_420 == 0) && (show_all_fs == '\\0')) {\nLAB_0010533b:\n          if (show_listed_fs == '\\0') goto LAB_001053b8;\n          if (param_8 != (undefined8 *)0x0) goto LAB_001053f2;\n        }\n      }\n      else if (show_all_fs == '\\0') {\n        if (lStack_420 == 0) goto LAB_0010533b;\n      }\n      else {\n        iVar5 = stat(param_4,&local_368);\n        if ((iVar5 == 0) &&\n           (ppcVar11 = (char **)me_for_dev(local_368.st_dev), ppcVar11 != (char **)0x0)) {\n          iVar5 = strcmp(*ppcVar11,param_1);\n          if ((iVar5 != 0) && (((*(byte *)(ppcVar11 + 5) & 2) == 0 || (param_7 == '\\0'))))\n          goto LAB_001059db;\n        }\n      }\n    }\n    else {\n      piVar8 = __errno_location();\n      if ((param_9 == '\\0') || ((*piVar8 != 0xd && (*piVar8 != 2)))) {\n        uVar9 = quotearg_n_style_colon(0,3,param_4);\n        error(0,*piVar8,&DAT_00113027,uVar9);\n        exit_status = 1;\n        goto LAB_001053b8;\n      }\n      if (show_all_fs == '\\0') goto LAB_001053b8;\nLAB_001059db:\n      local_408._0_8_ = local_408._0_8_ & 0xffffffffffffff00;\n      param_5 = &DAT_00112c9e;\n      local_3f8 = 0xffffffffffffffff;\n      local_408 = CONCAT88(0xffffffffffffffff,local_408._0_8_);\n      uStack_410 = 0xffffffffffffffff;\n      local_418 = 0xffffffffffffffff;\n      lStack_420 = -1;\n      local_428 = 0xffffffffffffffff;\n    }\n    file_systems_processed = 1;\n  }\nLAB_001053f2:\n  local_440 = &local_428;\n  alloc_table_row();\n  if (param_1 == (char *)0x0) {\n    param_1 = \"-\";\n  }\n  puVar6 = &DAT_00112c9e;\n  if (param_3 != (undefined *)0x0) {\n    puVar6 = param_3;\n  }\n  local_450 = (void *)xstrdup(param_1);\n  if (((param_9 != '\\0') && (cVar4 = has_uuid_suffix(local_450), cVar4 != '\\0')) &&\n     (pvVar10 = (void *)canonicalize_filename_mode(local_450,0), pvVar10 != (void *)0x0)) {\n    free(local_450);\n    local_450 = pvVar10;\n  }\n  if (param_5 == (undefined *)0x0) {\n    param_5 = &DAT_00112c9e;\n  }\n  get_field_values(local_3e8,local_3a8,local_440);\n  if ((print_grand_total != '\\0') && (param_8 == (undefined8 *)0x0)) {\n    add_to_grand_total_isra_0(local_3e8,local_398,local_390);\n  }\n  uVar18 = 0;\n  lVar16 = columns;\n  if (ncolumns != 0) {\n    do {\n      puVar3 = *(uint **)(lVar16 + uVar18 * 8);\n      lVar1 = uVar18 * 8;\n      uVar2 = puVar3[4];\n      puVar12 = local_3a8;\n      if (uVar2 != 1) {\n        if (uVar2 == 2) {\n          puVar12 = (undefined8 *)0x0;\n        }\n        else {\n          puVar12 = local_3e8;\n          if (uVar2 != 0) {\n                    /* WARNING: Subroutine does not return */\n            __assert_fail(\"!\\\"bad field_type\\\"\",\"src/df.c\",0x435,\"get_dev\");\n          }\n        }\n      }\n      if (0xb < *puVar3) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"unhandled field\\\"\",\"src/df.c\",0x49b,\"get_dev\");\n      }\n      switch(*puVar3) {\n      case 0:\n        local_430 = (char *)xstrdup(local_450);\n        break;\n      case 1:\n        local_430 = (char *)xstrdup(param_5);\n        break;\n      default:\n        uVar9 = puVar12[2];\n        uVar20 = puVar12[1];\n        uVar19 = 0;\n        uVar14 = *puVar12;\n        goto LAB_001055af;\n      case 3:\n      case 7:\n        uVar9 = puVar12[6];\n        uVar19 = *(undefined *)(puVar12 + 7);\n        goto LAB_001055a8;\n      case 4:\n      case 8:\n        uVar9 = puVar12[3];\n        uVar19 = *(undefined *)(puVar12 + 4);\nLAB_001055a8:\n        uVar20 = puVar12[1];\n        uVar14 = *puVar12;\nLAB_001055af:\n        uVar9 = df_readable(uVar19,uVar9,local_2d8,uVar14,uVar20);\n        local_430 = (char *)xstrdup(uVar9);\n        break;\n      case 5:\n      case 9:\n        cVar4 = known_value(puVar12[6]);\n        if (cVar4 == '\\0') {\nLAB_001054f4:\n          local_430 = strdup(\"-\");\n        }\n        else {\n          uVar17 = puVar12[3];\n          cVar4 = known_value(uVar17);\n          if (cVar4 == '\\0') goto LAB_001054f4;\n          if (*(char *)(puVar12 + 7) == '\\0') {\n            if (0x28f5c28f5c28f5c < extraout_RDX) {\nLAB_00105735:\n              if ((long)extraout_RDX < 0) {\n                dVar21 = (double)(extraout_RDX >> 1 | (ulong)((uint)extraout_RDX & 1));\n                dVar21 = dVar21 + dVar21;\n              }\n              else {\n                dVar21 = (double)extraout_RDX;\n              }\n              goto LAB_00105747;\n            }\n            uVar15 = extraout_RDX + uVar17;\n            if ((uVar15 == 0) || ((bool)*(char *)(puVar12 + 4) != CARRY8(extraout_RDX,uVar17)))\n            goto LAB_00105735;\n            uVar17 = (ulong)((extraout_RDX * 100) % uVar15 != 0) + (extraout_RDX * 100) / uVar15;\n            if ((long)uVar17 < 0) {\n              dVar21 = (double)(uVar17 >> 1 | (ulong)((uint)uVar17 & 1));\n              dVar21 = dVar21 + dVar21;\n            }\n            else {\n              dVar21 = (double)uVar17;\n            }\n          }\n          else {\n            uVar15 = -extraout_RDX;\n            if ((long)extraout_RDX < 1) {\n              dVar21 = (double)uVar15;\n            }\n            else {\n              dVar21 = (double)(uVar15 >> 1 | (ulong)((uint)uVar15 & 1));\n              dVar21 = dVar21 + dVar21;\n            }\n            dVar21 = (double)((ulong)dVar21 ^ _DAT_00111f60);\nLAB_00105747:\n            if (*(char *)(puVar12 + 4) == '\\0') {\n              if ((long)uVar17 < 0) {\n                dVar22 = (double)(uVar17 >> 1 | (ulong)((uint)uVar17 & 1));\n                dVar22 = dVar22 + dVar22;\n              }\n              else {\n                dVar22 = (double)uVar17;\n              }\n            }\n            else {\n              uVar15 = -uVar17;\n              if ((long)uVar17 < 1) {\n                dVar22 = (double)uVar15;\n              }\n              else {\n                dVar22 = (double)(uVar15 >> 1 | (ulong)((uint)uVar15 & 1));\n                dVar22 = dVar22 + dVar22;\n              }\n              dVar22 = (double)((ulong)dVar22 ^ _DAT_00111f60);\n            }\n            if (dVar22 + dVar21 == 0.0) goto LAB_001054f4;\n            dVar21 = (dVar21 * _DAT_00111f70) / (dVar22 + dVar21);\n            dVar22 = (double)(long)dVar21;\n            if (((dVar22 - _DAT_00111f78 < dVar21) && (dVar21 <= _DAT_00111f78 + dVar22)) &&\n               (dVar21 = _DAT_00111f78 + dVar22, dVar21 <= dVar22)) {\n              dVar21 = dVar22 + 0.0;\n            }\n          }\n          if (dVar21 < 0.0) goto LAB_001054f4;\n          iVar5 = rpl_asprintf(&local_430,\"%.0f%%\");\n          if (iVar5 == -1) {\n            local_430 = (char *)0x0;\n            goto LAB_00105801;\n          }\n        }\n        if (local_430 == (char *)0x0) {\nLAB_00105801:\n                    /* WARNING: Subroutine does not return */\n          xalloc_die();\n        }\n        goto LAB_00105518;\n      case 10:\n        local_430 = (char *)xstrdup(param_2);\n        break;\n      case 0xb:\n        local_430 = (char *)xstrdup(puVar6);\n      }\n      if (local_430 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"empty cell\\\"\",\"src/df.c\",0x49f,\"get_dev\");\n      }\nLAB_00105518:\n      hide_problematic_chars();\n      uVar17 = *(ulong *)(*(long *)(columns + lVar1) + 0x20);\n      iVar5 = gnu_mbswidth(local_430,0);\n      if ((ulong)(long)iVar5 < uVar17) {\n        lVar13 = *(long *)(columns + lVar1);\n        lVar7 = *(long *)(lVar13 + 0x20);\n      }\n      else {\n        iVar5 = gnu_mbswidth(local_430,0);\n        lVar7 = (long)iVar5;\n        lVar13 = *(long *)(columns + lVar1);\n      }\n      lVar16 = columns;\n      *(long *)(lVar13 + 0x20) = lVar7;\n      uVar17 = ncolumns;\n      uVar18 = uVar18 + 1;\n      *(char **)(*(long *)(table + -8 + nrows * 8) + lVar1) = local_430;\n    } while (uVar18 < uVar17);\n  }\n  free(local_450);\nLAB_001053b8:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104380": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00117fc8)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001048c0": "\nvoid get_header(void)\n\n{\n  int iVar1;\n  char *__s;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  long lVar4;\n  ulong uVar5;\n  long lVar6;\n  uint uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  ulong uVar11;\n  ulong uVar12;\n  long in_FS_OFFSET;\n  char *local_2d0;\n  undefined local_2c8 [664];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  alloc_table_row();\n  if (ncolumns != 0) {\n    uVar9 = 0;\n    lVar8 = columns;\n    do {\n      lVar6 = uVar9 * 8;\n      local_2d0 = (char *)0x0;\n      __s = (char *)dcgettext(0,*(undefined8 *)(*(int **)(lVar8 + lVar6) + 6),5);\n      if (**(int **)(lVar8 + lVar6) != 2) goto LAB_00104910;\n      if (header_mode == 0) {\nLAB_00104a78:\n        uVar11 = output_block_size;\n        uVar12 = output_block_size;\n        do {\n          uVar5 = (ulong)((uint)uVar12 & 0x3ff);\n          uVar10 = uVar11 + ((uVar11 >> 3) / 0x7d) * -1000;\n          uVar11 = (uVar11 >> 3) / 0x7d;\n          uVar12 = uVar12 >> 10;\n        } while ((uVar10 | uVar5) == 0);\n        if ((uVar10 == 0) < (uVar5 == 0)) {\n          uVar7 = human_output_opts & 0x124 | 0xb8;\nLAB_00104ae2:\n          if ((uVar7 & 0x20) == 0) goto LAB_00104b56;\n        }\n        else {\n          if ((uVar10 == 0) <= (uVar5 == 0)) {\n            uVar7 = human_output_opts & 0x124 | 0x98;\n            goto LAB_00104ae2;\n          }\n          uVar7 = human_output_opts & 0x104 | 0x98;\nLAB_00104b56:\n          uVar7 = (uint)CONCAT11(1,(char)uVar7);\n        }\n        uVar2 = human_readable(output_block_size,local_2c8,uVar7,1,1);\n        __s = (char *)dcgettext(0,\"blocks\",5);\nLAB_001049ff:\n        uVar3 = dcgettext(0,\"%s-%s\",5);\n        iVar1 = rpl_asprintf(&local_2d0,uVar3,uVar2,__s);\n        if (iVar1 == -1) {\n          local_2d0 = (char *)0x0;\n        }\n      }\n      else {\n        if (header_mode == 4) {\n          if ((human_output_opts & 0x10) == 0) goto LAB_00104a78;\n        }\n        else if (header_mode == 3) {\n          uVar2 = umaxtostr(output_block_size,local_2c8);\n          goto LAB_001049ff;\n        }\nLAB_00104910:\n        local_2d0 = strdup(__s);\n      }\n      if (local_2d0 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n        xalloc_die();\n      }\n      hide_problematic_chars();\n      *(char **)(*(long *)(table + -8 + nrows * 8) + lVar6) = local_2d0;\n      uVar11 = *(ulong *)(*(long *)(columns + lVar6) + 0x20);\n      iVar1 = gnu_mbswidth(local_2d0,0);\n      if ((ulong)(long)iVar1 < uVar11) {\n        lVar6 = *(long *)(columns + lVar6);\n        lVar4 = *(long *)(lVar6 + 0x20);\n      }\n      else {\n        iVar1 = gnu_mbswidth(local_2d0,0);\n        lVar4 = (long)iVar1;\n        lVar6 = *(long *)(columns + lVar6);\n      }\n      lVar8 = columns;\n      uVar11 = ncolumns;\n      uVar9 = uVar9 + 1;\n      *(long *)(lVar6 + 0x20) = lVar4;\n    } while (uVar9 < uVar11);\n  }\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001036b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00117d78)();\n  return iVar1;\n}\n\n", 
    "0010bf20": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "001037d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00117e08)();\n  return;\n}\n\n", 
    "001038f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid sync(void)\n\n{\n  (*(code *)PTR_sync_00117e98)();\n  return;\n}\n\n", 
    "00103a50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_00117f48)();\n  return uVar1;\n}\n\n", 
    "00103b72": "\nvoid vasnprintf_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010ebc0": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "0010a670": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_0010aaf7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_0010ab19;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_0010b0b6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010aa6f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_0010aaf7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010aa6f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_001121a5,param_5);\n      local_78 = (char *)gettext_quote(&DAT_00112eb7);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_0010a7c0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_0010b020_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010afbb;\n          goto LAB_0010adab;\n        default:\nswitchD_0010aed0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_0010b2a8;\n              }\n              if (lVar10 == -2) goto joined_r0x0010b6ba;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_0010ac90;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_0010b2a8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_0010aa31;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_0010af78;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_0010af78;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_0010af78:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_0010ac87;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_0010ac74;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_0010ac74:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_0010a998;\n          goto LAB_0010ac87;\n        case 0x23:\n        case 0x7e:\nLAB_0010ac6b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_0010ac74;\n          goto LAB_0010a995;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_0010aed0_caseD_25;\n        case 0x27:\nswitchD_0010aed0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_0010a998;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010a9bb;\n          }\n          goto LAB_0010ac90;\n        case 0x3f:\nswitchD_0010aed0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010b61e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_0010a998;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010a9bb;\n          }\n          goto LAB_0010ac90;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_0010a8c8_caseD_5c;\n          if (!bVar20) {\nLAB_0010af08:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_0010af20;\n          }\n          goto LAB_0010ac90;\n        case 0x7b:\n        case 0x7d:\nswitchD_0010aed0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010ac6b;\nLAB_0010a995:\n          bVar23 = false;\n          goto LAB_0010a998;\n        }\nLAB_0010ada0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010adab:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_0010a9b8;\n          goto LAB_0010a8e0;\n        }\nLAB_0010ade0:\n        bVar21 = false;\n        goto joined_r0x0010adf1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_0010b000;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_0010a8c8_caseD_0;\n          default:\n            goto switchD_0010aed0_caseD_1;\n          case 7:\n            goto switchD_0010b020_caseD_7;\n          case 8:\n            goto switchD_0010b020_caseD_8;\n          case 9:\n            goto switchD_0010a8c8_caseD_9;\n          case 10:\n            goto switchD_0010b020_caseD_a;\n          case 0xb:\n            goto switchD_0010b020_caseD_b;\n          case 0xc:\n            goto switchD_0010b020_caseD_c;\n          case 0xd:\n            goto switchD_0010b020_caseD_d;\n          case 0x20:\n            goto LAB_0010b049;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_0010a8c8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_0010b031;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_0010a8d8;\n          case 0x27:\n            goto switchD_0010aed0_caseD_27;\n          case 0x3f:\n            goto switchD_0010aed0_caseD_3f;\n          case 0x5c:\n            goto switchD_0010a8c8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_0010aed0_caseD_7b;\n          }\n        }\n        goto LAB_0010ac9e;\n      }\nLAB_0010b000:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_0010b020_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_0010a8c8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010a9bb;\n            }\nLAB_0010b45b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010b45b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_0010b498;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010a9bb;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_0010ac90;\n      default:\n        bVar23 = false;\n        goto switchD_0010aed0_caseD_1;\n      case 7:\nswitchD_0010b020_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_0010b020_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_0010a8c8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_0010ada0;\n      case 10:\nswitchD_0010b020_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_0010ade0;\n      case 0xb:\nswitchD_0010b020_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_0010ade0;\n      case 0xc:\nswitchD_0010b020_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_0010b020_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_0010ade0;\n      case 0x20:\n        bVar5 = false;\nLAB_0010b049:\n        uVar15 = 0x20;\n        goto LAB_0010a8d8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_0010a8c8_caseD_21:\n        bVar22 = false;\n        goto LAB_0010a995;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_0010b031:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_0010a998;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_0010a8e0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_0010a8d8:\n        bVar22 = false;\n        goto LAB_0010a8e0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_0010aed0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_0010aed0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_0010a8c8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_0010af08;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_0010ada0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_0010aed0_caseD_7b;\n      }\n      if (bVar20) goto LAB_0010ae00;\n      bVar21 = false;\n      goto LAB_0010a956;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_0010ac87:\n      param_5 = 2;\nLAB_0010ac90:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010ac9e:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_0010acd8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_0010b725:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_0010acd8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_0010acd8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_0010b725;\nLAB_0010b0b6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_0010ab19:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010afbb:\n  uVar13 = uVar13 + 1;\n  goto LAB_0010a7c0;\nswitchD_0010b61e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_0010b498:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010a9bb;\n    goto LAB_0010a8e0;\n  }\n  goto LAB_0010ac9e;\njoined_r0x0010b6ba:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_0010b2a8:\n  if (1 < uVar17) {\nLAB_0010b2b2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_0010ac90;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_0010a968;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_0010af20;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_0010aa31:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_0010b2b2;\n  }\nswitchD_0010aed0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_0010a998:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_0010a8e0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010a9bb;\n  }\n  else {\nLAB_0010a9b8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010a9bb:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_0010af20:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_0010a968;\n    }\n  }\njoined_r0x0010adf1:\n  if (bVar20) {\nLAB_0010ae00:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_0010ac90;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_0010a956:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_0010a968:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_0010a7c0;\n}\n\n", 
    "00103000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00117fd0;\n  if (PTR___gmon_start___00117fd0 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00117fd0)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00107840": "\nulong raw_hasher(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = rotr_sz(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "001191f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104690": "\nulong excluded_fstype(char *param_1)\n\n{\n  char **ppcVar1;\n  int iVar2;\n  char **ppcVar3;\n  bool bVar4;\n  ulong unaff_R12;\n  \n  bVar4 = param_1 == (char *)0x0 || fs_exclude_list == (char **)0x0;\n  ppcVar3 = fs_exclude_list;\n  if (bVar4) {\n    return 0;\n  }\n  do {\n    iVar2 = strcmp(param_1,*ppcVar3);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    ppcVar1 = ppcVar3 + 1;\n    ppcVar3 = (char **)*ppcVar1;\n  } while ((char **)*ppcVar1 != (char **)0x0);\n  return unaff_R12 & 0xffffff00 | (ulong)bVar4;\n}\n\n", 
    "001190d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010c0d0": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00107af0": "\nundefined8 transfer_entries(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00107b20:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)safe_hasher(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          free_entry_isra_0(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_00107b90;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_00107b90:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00107b20;\n    plVar3 = (long *)safe_hasher(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "001191f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __isoc99_sscanf(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __isoc99_sscanf@@GLIBC_2.7 */\n  halt_baddata();\n}\n\n", 
    "001190d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001038a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00117e70)();\n  return pvVar1;\n}\n\n", 
    "001039c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00117f00)();\n  return pcVar1;\n}\n\n", 
    "00103b20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00117fb0)();\n  return ppuVar1;\n}\n\n", 
    "00103a00": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00117f20)();\n  return;\n}\n\n", 
    "001080b0": "\nvoid ** hash_initialize(undefined8 param_1,undefined1 *param_2,code *param_3,code *param_4,\n                       void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = raw_hasher;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = raw_comparator;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined1 *)0x0) {\n      param_2 = default_tuning;\n    }\n    __ptr[5] = param_2;\n    cVar1 = check_tuning_isra_0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)compute_bucket_size_isra_0\n                                  (*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "0010c0e0": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001190e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001190e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001039b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00117ef8)();\n  return pvVar1;\n}\n\n", 
    "00103b10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strstr_00117fa8)();\n  return pcVar1;\n}\n\n", 
    "001081c0": "\nvoid hash_clear(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010825b;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010825b:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "00109800": "\nlong mbsalign(char *param_1,long param_2,long param_3,ulong *param_4,int param_5,uint param_6)\n\n{\n  char cVar1;\n  int iVar2;\n  ulong uVar3;\n  ulong uVar4;\n  size_t sVar5;\n  void *pvVar6;\n  size_t __n;\n  wchar_t *__pwcs;\n  size_t sVar7;\n  char *__s;\n  ulong uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long lVar11;\n  char *local_60;\n  \n  uVar3 = strlen(param_1);\n  uVar9 = uVar3;\n  if (((param_6 & 2) == 0) && (sVar5 = __ctype_get_mb_cur_max(), 1 < sVar5)) {\n    sVar5 = mbstowcs((wchar_t *)0x0,param_1,0);\n    if (sVar5 == 0xffffffffffffffff) {\n      if ((param_6 & 1) == 0) {\nLAB_0010991b:\n        __pwcs = (wchar_t *)0x0;\n        __s = (char *)0x0;\n        lVar11 = -1;\n        goto LAB_00109893;\n      }\n      goto LAB_00109839;\n    }\n    __n = sVar5 + 1;\n    __pwcs = (wchar_t *)malloc(__n * 4);\n    local_60 = param_1;\n    if (__pwcs == (wchar_t *)0x0) {\n      if ((param_6 & 1) == 0) goto LAB_0010991b;\n      __s = (char *)0x0;\n      goto LAB_00109842;\n    }\n    __s = (char *)0x0;\n    sVar7 = mbstowcs(__pwcs,param_1,__n);\n    if (sVar7 == 0) goto LAB_00109842;\n    __pwcs[sVar5] = L'\\0';\n    cVar1 = wc_ensure_printable(__pwcs);\n    iVar2 = wcswidth(__pwcs,__n);\n    uVar9 = (ulong)iVar2;\n    if (cVar1 != '\\0') {\n      sVar5 = wcstombs((char *)0x0,__pwcs,0);\nLAB_00109a4e:\n      __s = (char *)malloc(sVar5 + 1);\n      if (__s == (char *)0x0) {\n        if ((param_6 & 1) == 0) {\n          lVar11 = -1;\n          goto LAB_00109893;\n        }\n      }\n      else {\n        uVar9 = wc_truncate(__pwcs,*param_4);\n        uVar3 = wcstombs(__s,__pwcs,sVar5 + 1);\n        local_60 = __s;\n      }\n      goto LAB_00109842;\n    }\n    uVar4 = *param_4;\n    sVar5 = uVar3;\n    if (uVar4 < uVar9) goto LAB_00109a4e;\nLAB_001098b8:\n    uVar10 = uVar9;\n    uVar8 = uVar3;\n    if (uVar4 <= uVar9) goto LAB_00109850;\n    uVar4 = uVar4 - uVar9;\n    *param_4 = uVar9;\n    if (param_5 != 0) goto LAB_00109859;\nLAB_001098d3:\n    uVar9 = 0;\n    uVar10 = uVar4;\n  }\n  else {\nLAB_00109839:\n    __pwcs = (wchar_t *)0x0;\n    __s = (char *)0x0;\n    local_60 = param_1;\nLAB_00109842:\n    uVar4 = *param_4;\n    uVar10 = uVar4;\n    uVar8 = uVar4;\n    if (uVar9 <= uVar4) goto LAB_001098b8;\nLAB_00109850:\n    uVar4 = 0;\n    *param_4 = uVar10;\n    uVar3 = uVar8;\n    if (param_5 == 0) goto LAB_001098d3;\nLAB_00109859:\n    uVar9 = uVar4;\n    uVar10 = 0;\n    if (param_5 != 1) {\n      uVar9 = (ulong)((uint)uVar4 & 1) + (uVar4 >> 1);\n      uVar10 = uVar4 >> 1;\n    }\n  }\n  uVar4 = uVar9 + uVar3;\n  if ((param_6 & 4) != 0) {\n    uVar9 = 0;\n    uVar4 = uVar3;\n  }\n  if ((param_6 & 8) != 0) {\n    uVar10 = 0;\n  }\n  if (param_3 != 0) {\n    param_3 = param_2 + -1 + param_3;\n    pvVar6 = (void *)mbs_align_pad(param_2,param_3,uVar9);\n    uVar9 = param_3 - (long)pvVar6;\n    if (uVar3 < (ulong)(param_3 - (long)pvVar6)) {\n      uVar9 = uVar3;\n    }\n    pvVar6 = mempcpy(pvVar6,local_60,uVar9);\n    mbs_align_pad(pvVar6,param_3,uVar10);\n  }\n  lVar11 = uVar4 + uVar10;\nLAB_00109893:\n  free(__pwcs);\n  free(__s);\n  return lVar11;\n}\n\n", 
    "0010b830": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "001191d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getmntent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001190b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __lxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104470": "\nundefined4 to_uchar(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00107860": "\nbool raw_comparator(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00117cf8)();\n  return;\n}\n\n", 
    "0010d2c0": "\nint chdir_long(char *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  ulong uVar5;\n  size_t sVar6;\n  undefined *puVar7;\n  char *__s;\n  long in_FS_OFFSET;\n  int local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = chdir(param_1);\n  if ((iVar2 == 0) || (piVar3 = __errno_location(), *piVar3 != 0x24)) goto LAB_0010d2fe;\n  sVar4 = strlen(param_1);\n  uVar5 = cdb_init_isra_0(&local_44);\n  if (uVar5 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 < len\",\"lib/chdir-long.c\",0x7e,\"chdir_long\");\n  }\n  if (uVar5 < 0x1000) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"4096 <= len\",\"lib/chdir-long.c\",0x7f,\"chdir_long\");\n  }\n  sVar6 = strspn(param_1,\"/\");\n  if (sVar6 == 2) {\n    puVar7 = (undefined *)memchr(param_1 + 3,0x2f,sVar4 - 3);\n    if (puVar7 == (undefined *)0x0) {\nLAB_0010d4a0:\n      *piVar3 = 0x24;\n      iVar2 = -1;\n      goto LAB_0010d2fe;\n    }\n    *puVar7 = 0;\n    iVar2 = cdb_advance_fd(&local_44,param_1);\n    *puVar7 = 0x2f;\n    if (iVar2 != 0) goto LAB_0010d480;\n    __s = (char *)find_non_slash(puVar7 + 1);\nLAB_0010d37d:\n    if (*__s == '/') {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"*dir != \\'/\\'\",\"lib/chdir-long.c\",0xa2,\"chdir_long\");\n    }\n    param_1 = param_1 + sVar4;\n    if (param_1 < __s) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"dir <= dir_end\",\"lib/chdir-long.c\",0xa3,\"chdir_long\");\n    }\n    while (0xfff < (long)param_1 - (long)__s) {\n      puVar7 = (undefined *)memrchr(__s,0x2f,0x1000);\n      if (puVar7 == (undefined *)0x0) goto LAB_0010d4a0;\n      *puVar7 = 0;\n      if (0xfff < (long)puVar7 - (long)__s) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"slash - dir < 4096\",\"lib/chdir-long.c\",0xb3,\"chdir_long\");\n      }\n      iVar2 = cdb_advance_fd(&local_44,__s);\n      *puVar7 = 0x2f;\n      if (iVar2 != 0) goto LAB_0010d480;\n      __s = (char *)find_non_slash(puVar7 + 1);\n    }\n    if (((param_1 <= __s) || (iVar2 = cdb_advance_fd(&local_44,__s), iVar2 == 0)) &&\n       (iVar2 = cdb_fchdir_isra_0(local_44), iVar2 == 0)) {\n      cdb_free_isra_0(local_44);\n      goto LAB_0010d2fe;\n    }\n  }\n  else {\n    __s = param_1;\n    if (sVar6 == 0) goto LAB_0010d37d;\n    iVar2 = cdb_advance_fd(&local_44,&DAT_00112186);\n    if (iVar2 == 0) {\n      __s = param_1 + sVar6;\n      goto LAB_0010d37d;\n    }\n  }\nLAB_0010d480:\n  iVar1 = *piVar3;\n  iVar2 = -1;\n  cdb_free_isra_0(local_44);\n  *piVar3 = iVar1;\nLAB_0010d2fe:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar2;\n}\n\n", 
    "001191d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001190b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001038c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00117e80)();\n  return iVar1;\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_mempcpy_00117f10)();\n  return pvVar1;\n}\n\n", 
    "0010e5f0": "\nulong rotr64(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "001037a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00117df0)();\n  return pcVar1;\n}\n\n", 
    "00107f00": "\nlong hash_get_next(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "00103b45": "\nvoid hash_get_first_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103b40": "\nvoid safe_hasher_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104c30": "\nvoid filter_mount_list(char param_1)\n\n{\n  char *__s1;\n  char cVar1;\n  char **ppcVar2;\n  char **ppcVar3;\n  long lVar4;\n  char *pcVar5;\n  ulong uVar6;\n  ulong uVar7;\n  char **ppcVar8;\n  int iVar9;\n  char *pcVar10;\n  char *pcVar11;\n  char **ppcVar12;\n  long in_FS_OFFSET;\n  bool bVar13;\n  byte bVar14;\n  stat local_d8;\n  long local_40;\n  \n  bVar14 = 0;\n  iVar9 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  ppcVar2 = mount_list;\n  if (mount_list != (char **)0x0) {\n    do {\n      ppcVar2 = (char **)ppcVar2[6];\n      iVar9 = iVar9 + 1;\n    } while (ppcVar2 != (char **)0x0);\n  }\n  devlist_table = hash_initialize((long)iVar9,0,devlist_hash,devlist_compare,devlist_free);\n  if (devlist_table == 0) {\nLAB_00104f95:\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  if (mount_list == (char **)0x0) {\n    if (param_1 != '\\0') goto LAB_00104eda;\n  }\n  else {\n    ppcVar8 = (char **)0x0;\n    ppcVar2 = mount_list;\n    do {\n      if ((((*(byte *)(ppcVar2 + 5) & 2) == 0) || (show_local_fs == '\\0')) &&\n         (((*(byte *)(ppcVar2 + 5) & 1) == 0 || ((show_all_fs != '\\0' || (show_listed_fs != '\\0'))))\n         )) {\n        pcVar10 = ppcVar2[3];\n        cVar1 = selected_fstype(pcVar10);\n        if ((cVar1 == '\\0') ||\n           ((cVar1 = excluded_fstype(pcVar10), cVar1 != '\\0' ||\n            (iVar9 = stat(ppcVar2[1],&local_d8), iVar9 == -1)))) goto LAB_00104cc8;\n        lVar4 = devlist_for_dev(local_d8.st_dev);\n        if (lVar4 == 0) goto LAB_00104cd1;\n        ppcVar3 = *(char ***)(lVar4 + 8);\n        if ((ppcVar3[2] == (char *)0x0) || (ppcVar2[2] == (char *)0x0)) {\n          bVar13 = false;\n        }\n        else {\n          uVar6 = 0xffffffffffffffff;\n          pcVar10 = ppcVar3[2];\n          do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            cVar1 = *pcVar10;\n            pcVar10 = pcVar10 + (ulong)bVar14 * -2 + 1;\n          } while (cVar1 != '\\0');\n          uVar7 = 0xffffffffffffffff;\n          pcVar10 = ppcVar2[2];\n          do {\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            cVar1 = *pcVar10;\n            pcVar10 = pcVar10 + (ulong)bVar14 * -2 + 1;\n          } while (cVar1 != '\\0');\n          bVar13 = ~uVar6 - 1 < ~uVar7 - 1;\n        }\n        pcVar10 = *ppcVar2;\n        if ((((print_grand_total == '\\0') && ((*(byte *)(ppcVar2 + 5) & 2) != 0)) &&\n            ((*(byte *)(ppcVar3 + 5) & 2) != 0)) && (iVar9 = strcmp(*ppcVar3,pcVar10), iVar9 != 0))\n        goto LAB_00104cd1;\n        pcVar5 = strchr(pcVar10,0x2f);\n        if ((pcVar5 == (char *)0x0) || (pcVar5 = strchr(*ppcVar3,0x2f), pcVar5 != (char *)0x0)) {\n          pcVar5 = ppcVar3[1];\n          __s1 = ppcVar2[1];\n          uVar6 = 0xffffffffffffffff;\n          pcVar11 = pcVar5;\n          do {\n            if (uVar6 == 0) break;\n            uVar6 = uVar6 - 1;\n            cVar1 = *pcVar11;\n            pcVar11 = pcVar11 + (ulong)bVar14 * -2 + 1;\n          } while (cVar1 != '\\0');\n          uVar7 = 0xffffffffffffffff;\n          pcVar11 = __s1;\n          do {\n            if (uVar7 == 0) break;\n            uVar7 = uVar7 - 1;\n            cVar1 = *pcVar11;\n            pcVar11 = pcVar11 + (ulong)bVar14 * -2 + 1;\n          } while (cVar1 != '\\0');\n          if (((!bVar13) && (~uVar7 - 1 < ~uVar6 - 1)) ||\n             ((iVar9 = strcmp(*ppcVar3,pcVar10), ppcVar12 = ppcVar2, iVar9 != 0 &&\n              (iVar9 = strcmp(__s1,pcVar5), iVar9 == 0)))) goto LAB_00104e6c;\n        }\n        else {\nLAB_00104e6c:\n          *(char ***)(lVar4 + 8) = ppcVar2;\n          ppcVar12 = ppcVar3;\n        }\n        ppcVar2 = (char **)ppcVar2[6];\n        ppcVar3 = ppcVar8;\n        if (param_1 == '\\0') {\n          free_mount_entry(ppcVar12);\n        }\n      }\n      else {\nLAB_00104cc8:\n        local_d8.st_dev = (__dev_t)ppcVar2[4];\nLAB_00104cd1:\n        ppcVar3 = (char **)xmalloc(0x18);\n        lVar4 = devlist_table;\n        ppcVar3[1] = (char *)ppcVar2;\n        ppcVar3[2] = (char *)ppcVar8;\n        *ppcVar3 = (char *)local_d8.st_dev;\n        lVar4 = hash_insert(lVar4,ppcVar3);\n        if (lVar4 == 0) goto LAB_00104f95;\n        ppcVar2 = (char **)ppcVar2[6];\n      }\n      ppcVar8 = ppcVar3;\n    } while (ppcVar2 != (char **)0x0);\n    if (param_1 != '\\0') goto LAB_00104eda;\n    mount_list = (char **)0x0;\n    while (ppcVar3 != (char **)0x0) {\n      mount_list = (char **)ppcVar3[1];\n      ppcVar3 = (char **)ppcVar3[2];\n      mount_list[6] = (char *)ppcVar2;\n      ppcVar2 = mount_list;\n    }\n  }\n  hash_free(devlist_table);\n  devlist_table = 0;\nLAB_00104eda:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103a20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00117f30)();\n  return iVar1;\n}\n\n", 
    "0010c930": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00107610": "\nchar * last_component(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "001190c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chdir(char *__path)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* chdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107730": "\nulong seen_file(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = 0;\n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = hash_lookup(param_1,&local_28);\n    uVar1 = uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104460": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001191e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010c0c0": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00110dd0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001190c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* openat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001039d0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00117f08)();\n  return;\n}\n\n", 
    "001191e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid setmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setmntent@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_00117e78)();\n  return iVar1;\n}\n\n", 
    "00103a10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memrchr_00117f28)();\n  return pvVar1;\n}\n\n", 
    "00103b30": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00117fb8)();\n  return;\n}\n\n", 
    "00110de0": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "00109bb0": "\nint mbsnwidth(byte *param_1,long param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  ushort **ppuVar6;\n  long lVar7;\n  int iVar8;\n  long in_FS_OFFSET;\n  wchar_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  pbVar1 = param_1 + param_2;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar4 = __ctype_get_mb_cur_max();\n  if (sVar4 < 2) {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      ppuVar6 = __ctype_b_loc();\n      iVar8 = 0;\n      do {\n        bVar2 = *param_1;\n        param_1 = param_1 + 1;\n        if (((*ppuVar6)[bVar2] & 0x4000) == 0) {\n          if ((param_3 & 2) != 0) goto LAB_00109d90;\n          if (((*ppuVar6)[bVar2] & 2) == 0) goto LAB_00109d69;\n        }\n        else {\nLAB_00109d69:\n          if (iVar8 == 0x7fffffff) break;\n          iVar8 = iVar8 + 1;\n        }\n      } while (pbVar1 != param_1);\n    }\n  }\n  else {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      do {\n        bVar2 = *param_1;\n        if ((char)bVar2 < '`') {\n          if ('@' < (char)bVar2) goto LAB_00109ce3;\n          if ('#' < (char)bVar2) {\n            if (0x1a < (byte)(bVar2 - 0x25)) goto LAB_00109c2c;\n            goto LAB_00109ce3;\n          }\n          if ('\\x1f' < (char)bVar2) goto LAB_00109ce3;\nLAB_00109c2c:\n          local_48 = (mbstate_t)0x0;\n          do {\n            lVar5 = rpl_mbrtowc(&local_4c,param_1,(long)pbVar1 - (long)param_1,&local_48);\n            if (lVar5 == -1) {\n              if ((param_3 & 1) != 0) goto LAB_00109d90;\n              goto LAB_00109ce3;\n            }\n            if (lVar5 == -2) {\n              if ((param_3 & 1) != 0) goto LAB_00109d90;\n              iVar8 = iVar8 + 1;\n              param_1 = pbVar1;\n              break;\n            }\n            lVar7 = 1;\n            if (lVar5 != 0) {\n              lVar7 = lVar5;\n            }\n            iVar3 = wcwidth(local_4c);\n            if (iVar3 < 0) {\n              if ((param_3 & 2) != 0) goto LAB_00109d90;\n              iVar3 = iswcntrl(local_4c);\n              if (iVar3 == 0) {\n                if (iVar8 == 0x7fffffff) goto LAB_00109db8;\n                iVar8 = iVar8 + 1;\n              }\n            }\n            else {\n              if (0x7fffffff - iVar8 < iVar3) {\nLAB_00109db8:\n                iVar8 = 0x7fffffff;\n                goto LAB_00109cf8;\n              }\n              iVar8 = iVar8 + iVar3;\n            }\n            param_1 = param_1 + lVar7;\n            iVar3 = mbsinit(&local_48);\n          } while (iVar3 == 0);\n        }\n        else {\n          if (0x1d < (byte)(bVar2 + 0x9f)) goto LAB_00109c2c;\nLAB_00109ce3:\n          param_1 = param_1 + 1;\n          iVar8 = iVar8 + 1;\n        }\n      } while (param_1 < pbVar1);\n    }\n  }\nLAB_00109cf8:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar8;\nLAB_00109d90:\n  iVar8 = -1;\n  goto LAB_00109cf8;\n}\n\n", 
    "0010cbe0": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,&DAT_00113027,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010baf0": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00107920": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong compute_bucket_size_isra_0(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_001120d8 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_001120dc) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_001120dc) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = next_prime(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "001191b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* wcwidth@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001192d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __sprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00103680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n  lconv *plVar1;\n  \n  plVar1 = (lconv *)(*(code *)PTR_localeconv_00117d60)();\n  return plVar1;\n}\n\n", 
    "001191b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid sync(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sync@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010c2d0": "\nint save_cwd(int *param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  \n  *(undefined8 *)(param_1 + 2) = 0;\n  iVar1 = open_safer();\n  *param_1 = iVar1;\n  if (-1 < iVar1) {\n    return 0;\n  }\n  pcVar2 = getcwd((char *)0x0,0);\n  *(char **)(param_1 + 2) = pcVar2;\n  return -(uint)(pcVar2 == (char *)0x0);\n}\n\n", 
    "001192d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "001084f0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 hash_insert_if_absent(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010853e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    check_tuning_isra_0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_0010859a;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_001120d8) {\n      if (_DAT_001120dc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_001120dc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = hash_rehash(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = hash_insert_if_absent_cold();\n          return uVar5;\n        }\n        goto LAB_0010859a;\n      }\n    }\n  }\n  else {\nLAB_0010859a:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010853e;\n    }\n    plVar3 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010853e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010853e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104640": "\nulong selected_fstype(char *param_1)\n\n{\n  char **ppcVar1;\n  int iVar2;\n  char **ppcVar3;\n  ulong unaff_R12;\n  bool bVar4;\n  \n  bVar4 = fs_select_list == (char **)0x0;\n  ppcVar3 = fs_select_list;\n  if (param_1 != (char *)0x0 && !bVar4) {\n    do {\n      iVar2 = strcmp(param_1,*ppcVar3);\n      if (iVar2 == 0) {\n        return 1;\n      }\n      ppcVar1 = ppcVar3 + 1;\n      ppcVar3 = (char **)*ppcVar1;\n    } while ((char **)*ppcVar1 != (char **)0x0);\n  }\n  return unaff_R12 & 0xffffff00 | (ulong)(param_1 == (char *)0x0 || bVar4);\n}\n\n", 
    "001190a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001191c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcswidth(wchar_t *__s,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcswidth_00117d58)();\n  return iVar1;\n}\n\n", 
    "00103790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_00117de8)();\n  return iVar1;\n}\n\n", 
    "0010c0a0": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001190a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001192e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001191c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e5e0": "\nulong rotl64(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00109dd0": "\nvoid gnu_mbswidth(char *param_1,undefined4 param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  mbsnwidth(param_1,sVar1,param_2);\n  return;\n}\n\n", 
    "00108aa0": "\n/* WARNING: Removing unreachable block (ram,0x00108b0d) */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid adjust_value(void)\n\n{\n  return;\n}\n\n", 
    "0010cbc0": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0010ea70": "\nuint fd_safer(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = dup_safer();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "001192b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid hasmntopt(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* hasmntopt@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e6d0": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "001039a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00117ef0)();\n  return iVar1;\n}\n\n", 
    "001192b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107ad0": "\nvoid allocate_entry_isra_0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "0010c2b0": "\nvoid same_name(undefined8 param_1,undefined8 param_2)\n\n{\n  same_nameat(0xffffff9c,param_1,0xffffff9c,param_2);\n  return;\n}\n\n", 
    "00103b00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulonglong gnu_dev_makedev(uint __major,uint __minor)\n\n{\n  ulonglong uVar1;\n  \n  uVar1 = (*(code *)PTR_gnu_dev_makedev_00117fa0)();\n  return uVar1;\n}\n\n", 
    "00109ec0": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104420": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00117fe0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001192c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strstr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001191a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbstowcs(wchar_t *__pwcs,char *__s,size_t __n)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbstowcs_00117d68)();\n  return sVar1;\n}\n\n", 
    "001192c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulonglong gnu_dev_makedev(uint __major,uint __minor)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* gnu_dev_makedev@@GLIBC_2.3.3 */\n  halt_baddata();\n}\n\n", 
    "001191a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint statfs(char *__file,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* statfs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e6e0": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "0010bab0": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107800": "\nulong next_prime(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = is_prime(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "00103760": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00117dd0)();\n  return;\n}\n\n", 
    "00103880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00117e60)();\n  return iVar1;\n}\n\n", 
    "00103640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00117d40)();\n  return;\n}\n\n", 
    "0010e7d0": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010e6b0": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010a0b0": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010e160": "\nchar * areadlink_with_size(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n", 
    "00104720": "\nvoid add_excluded_fs_type(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)xmalloc(0x10);\n  *puVar1 = param_1;\n  puVar1[1] = fs_exclude_list;\n  fs_exclude_list = puVar1;\n  return;\n}\n\n", 
    "0010cdb0": "\nuint xstrtoumax(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0010ceab;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010ceec:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_0010cf40_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_0010ce72;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_0010cf16_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_0010cf16_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = bkm_scale(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_0010cf40_caseD_43;\n        case 0x45:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = bkm_scale_by_power(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = bkm_scale(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = bkm_scale(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_0010ce72;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010ceec;\n      }\n    }\n  }\nLAB_0010ceab:\n  uVar10 = 4;\nLAB_0010ce72:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00117e58)();\n  return pvVar1;\n}\n\n", 
    "0010eb80": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00103990": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint statvfs(char *__file,statvfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_statvfs_00117ee8)();\n  return iVar1;\n}\n\n", 
    "00103630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00117d38)();\n  return iVar1;\n}\n\n", 
    "00103750": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00117dc8)();\n  return;\n}\n\n", 
    "001192a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strdup(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strdup@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e7e0": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00108080": "\nvoid hash_reset_tuning(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "00108ca0": "\nundefined8 humblock(char *param_1,undefined8 *param_2,uint *param_3)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  long in_FS_OFFSET;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (((param_1 == (char *)0x0) && (param_1 = getenv(\"BLOCK_SIZE\"), param_1 == (char *)0x0)) &&\n     (param_1 = getenv(\"BLOCKSIZE\"), param_1 == (char *)0x0)) {\n    uVar4 = default_block_size();\n    uVar5 = 0;\n    *param_2 = uVar4;\n  }\n  else {\n    uVar5 = 0;\n    if (*param_1 == '\\'') {\n      param_1 = param_1 + 1;\n      uVar5 = 4;\n    }\n    iVar3 = argmatch(param_1,block_size_args,&block_size_opts,4);\n    if (iVar3 < 0) {\n      uVar4 = xstrtoumax(param_1,&local_38,0,param_2,\"eEgGkKmMpPtTyYzZ0\");\n      if ((int)uVar4 != 0) {\n        *param_3 = 0;\n        goto LAB_00108d18;\n      }\n      cVar2 = *param_1;\n      while (9 < (byte)(cVar2 - 0x30U)) {\n        if (local_38 == param_1) {\n          if (local_38[-1] == 'B') {\n            uVar5 = uVar5 | 0x180;\n            if (local_38[-2] != 'i') break;\n          }\n          else {\n            uVar5 = uVar5 | 0x80;\n          }\n          uVar5 = uVar5 | 0x20;\n          break;\n        }\n        pcVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        cVar2 = *pcVar1;\n      }\n    }\n    else {\n      *param_2 = 1;\n      uVar5 = uVar5 | *(uint *)((long)&block_size_opts + (long)iVar3 * 4);\n    }\n  }\n  *param_3 = uVar5;\n  uVar4 = 0;\nLAB_00108d18:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00117d30)();\n  return piVar1;\n}\n\n", 
    "001192a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104750": "\nvoid alloc_field(int param_1,long param_2)\n\n{\n  long lVar1;\n  \n  ncolumns = ncolumns + 1;\n  columns = xnrealloc(columns,ncolumns,8);\n  lVar1 = (long)param_1 * 0x30;\n  *(undefined1 **)(columns + -8 + ncolumns * 8) = field_data + lVar1;\n  if (param_2 != 0) {\n    *(long *)(field_data + lVar1 + 0x18) = param_2;\n  }\n  lVar1 = (long)param_1 * 0x30;\n  if (field_data[lVar1 + 0x2c] == '\\0') {\n    field_data[lVar1 + 0x2c] = 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"!\\\"field used\\\"\",\"src/df.c\",0x164,\"alloc_field\");\n}\n\n", 
    "00108a80": "\nvoid triple_free(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n", 
    "00119090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswcntrl_00117d50)();\n  return iVar1;\n}\n\n", 
    "00104870": "\nchar * hide_problematic_chars(char *param_1)\n\n{\n  byte bVar1;\n  ushort **ppuVar2;\n  undefined *extraout_RDX;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  if (cVar3 != '\\0') {\n    ppuVar2 = __ctype_b_loc();\n    do {\n      bVar1 = to_uchar((int)cVar3);\n      if ((*(byte *)(*ppuVar2 + bVar1) & 2) != 0) {\n        *extraout_RDX = 0x3f;\n      }\n      cVar3 = extraout_RDX[1];\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "0010fd60": "\nulong xmax(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "00103780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00117de0)();\n  return pcVar1;\n}\n\n", 
    "0010ca90": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010caeb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010caeb:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010e9f0": "\nulong hash_pjw(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n", 
    "00105af0": "\nbyte get_disk(char *param_1)\n\n{\n  int iVar1;\n  char *__ptr;\n  char *__ptr_00;\n  char *__s1;\n  size_t sVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  char **ppcVar5;\n  char *__s1_00;\n  byte bVar6;\n  char *pcVar7;\n  long in_FS_OFFSET;\n  size_t local_108;\n  char **local_f8;\n  byte local_eb;\n  stat local_d8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = canonicalize_file_name(param_1);\n  __s1_00 = param_1;\n  if ((__ptr != (char *)0x0) && (__s1_00 = __ptr, *__ptr != '/')) {\n    __s1_00 = param_1;\n  }\n  if (mount_list == (char **)0x0) {\n    bVar6 = 0;\n    free(__ptr);\n  }\n  else {\n    local_108 = 0xffffffffffffffff;\n    bVar6 = 0;\n    local_eb = 0;\n    local_f8 = (char **)0x0;\n    ppcVar5 = mount_list;\n    do {\n      pcVar7 = *ppcVar5;\n      __ptr_00 = canonicalize_file_name(pcVar7);\n      if ((__ptr_00 != (char *)0x0) && (*__ptr_00 == '/')) {\n        pcVar7 = __ptr_00;\n      }\n      iVar1 = strcmp(__s1_00,pcVar7);\n      if (iVar1 == 0) {\n        __s1 = (char *)last_device_for_mount(ppcVar5[1]);\n        if ((__s1 == (char *)0x0) || (iVar1 = strcmp(__s1,pcVar7), iVar1 == 0)) {\n          pcVar7 = ppcVar5[1];\n          sVar2 = strlen(pcVar7);\n          bVar6 = local_eb ^ 1 | sVar2 < local_108;\n          if (bVar6 == 0) {\n            local_eb = 1;\n          }\n          else {\n            iVar1 = stat(pcVar7,&local_d8);\n            if (iVar1 == 0) {\nLAB_00105c52:\n              local_108 = sVar2;\n              local_f8 = ppcVar5;\n              local_eb = bVar6;\n              if (sVar2 == 1) {\n                free(__s1);\n                free(__ptr_00);\n                free(__ptr);\n                goto LAB_00105cf0;\n              }\n            }\n            else if (((local_eb ^ 1) != 0) && (sVar2 < local_108)) {\n              bVar6 = 0;\n              goto LAB_00105c52;\n            }\n            bVar6 = 0;\n          }\n        }\n        else {\n          bVar6 = 1;\n        }\n        free(__s1);\n      }\n      free(__ptr_00);\n      ppcVar5 = (char **)ppcVar5[6];\n    } while (ppcVar5 != (char **)0x0);\n    free(__ptr);\n    if (local_f8 == (char **)0x0) {\n      if (bVar6 != 0) {\n        uVar3 = quotearg_style(4,param_1);\n        uVar4 = dcgettext(0,\"cannot access %s: over-mounted by another device\",5);\n        error(0,0,uVar4,uVar3);\n        exit_status = 1;\n      }\n    }\n    else {\nLAB_00105cf0:\n      bVar6 = 1;\n      get_dev(*local_f8,local_f8[1],param_1,0,local_f8[3],*(byte *)(local_f8 + 5) & 1,\n              *(byte *)(local_f8 + 5) >> 1 & 1,0,0);\n    }\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return bVar6;\n}\n\n", 
    "0010e7b0": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "0010ea30": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "0010a2d0": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e260": "\nlong argmatch(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "0010c080": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001061d0": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_00111ba0;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'd' || (pcVar2[1] != 'f')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_00111b9d;\n        goto LAB_0010640e;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_00111b9d;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_00111b9d);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010640e:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_00111b9d);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_00111b9d);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_00111b9d) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104500": "\nvoid get_field_values(undefined8 *param_1,undefined8 *param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  char cVar3;\n  undefined8 *extraout_RDX;\n  undefined8 *extraout_RDX_00;\n  undefined8 *puVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  uVar5 = *(ulong *)(param_3 + 0x28);\n  uVar6 = *(ulong *)(param_3 + 0x30);\n  *(undefined *)(param_2 + 4) = 0;\n  param_2[1] = 1;\n  *param_2 = 1;\n  param_2[2] = uVar5;\n  param_2[5] = uVar6;\n  param_2[3] = uVar6;\n  param_2[6] = 0xffffffffffffffff;\n  *(undefined *)(param_2 + 7) = 0;\n  cVar3 = known_value(uVar5);\n  puVar4 = extraout_RDX;\n  if (cVar3 != '\\0') {\n    cVar3 = known_value(uVar6);\n    puVar4 = extraout_RDX_00;\n    if (cVar3 != '\\0') {\n      param_2[6] = uVar5 - uVar6;\n      *(bool *)(param_2 + 7) = uVar5 < uVar6;\n    }\n  }\n  uVar5 = puVar4[1];\n  uVar1 = puVar4[3];\n  uVar6 = puVar4[2];\n  *param_1 = *puVar4;\n  uVar2 = output_block_size;\n  param_1[2] = uVar5;\n  param_1[1] = uVar2;\n  cVar3 = *(char *)(puVar4 + 4);\n  param_1[3] = uVar1;\n  param_1[5] = uVar6;\n  if (cVar3 != '\\0') {\n    cVar3 = known_value();\n  }\n  *(char *)(param_1 + 4) = cVar3;\n  param_1[6] = 0xffffffffffffffff;\n  *(undefined *)(param_1 + 7) = 0;\n  cVar3 = known_value(uVar5);\n  if (cVar3 != '\\0') {\n    cVar3 = known_value(uVar6);\n    if (cVar3 != '\\0') {\n      param_1[6] = uVar5 - uVar6;\n      *(bool *)(param_1 + 7) = uVar5 < uVar6;\n    }\n  }\n  return;\n}\n\n", 
    "0010bdc0": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106800": "\nundefined8 get_field_list(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uStack_8;\n  \n  switch(header_mode) {\n  case 0:\n    alloc_field(0,0);\n    if (print_type != '\\0') {\n      alloc_field(1,0);\n    }\n    alloc_field(2,0);\n    alloc_field(3,0);\n    pcVar2 = (char *)0x0;\n    break;\n  case 1:\n    alloc_field(0,0);\n    if (print_type != '\\0') {\n      alloc_field(1,0);\n    }\n    alloc_field(6,0);\n    alloc_field(7,0);\n    alloc_field(8,0);\n    pcVar2 = (char *)0x0;\n    uVar1 = 9;\n    goto LAB_0010686e;\n  case 2:\n    alloc_field(0,0);\n    if (print_type != '\\0') {\n      alloc_field(1,0);\n    }\n    alloc_field(2,&DAT_00111c2b);\n    alloc_field(3,0);\n    pcVar2 = \"Avail\";\n    break;\n  case 3:\n    alloc_field(0,0);\n    if (print_type != '\\0') {\n      alloc_field(1,0);\n    }\n    alloc_field(2,0);\n    alloc_field(3,0);\n    alloc_field(4,0);\n    pcVar2 = \"Capacity\";\n    goto LAB_00106869;\n  case 4:\n    if (ncolumns == 0) {\n      uVar1 = decode_output_arg(\"source,fstype,itotal,iused,iavail,ipcent,size,used,avail,pcent,file,target\"\n                                ,param_2,uStack_8);\n      return uVar1;\n    }\n    return uStack_8;\n  default:\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"!\\\"invalid header_mode\\\"\",\"src/df.c\",0x1f0,\"get_field_list\");\n  }\n  alloc_field(4,pcVar2);\n  pcVar2 = (char *)0x0;\nLAB_00106869:\n  uVar1 = 5;\nLAB_0010686e:\n  alloc_field(uVar1,pcVar2);\n  uVar1 = alloc_field(10,0);\n  return uVar1;\n}\n\n", 
    "00103650": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00117d48)();\n  return;\n}\n\n", 
    "00103770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00117dd8)();\n  return sVar1;\n}\n\n", 
    "0010eb60": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "0010fd70": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint rpl_fcntl(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010fdf4;\n  }\n  if (have_dupfd_cloexec_3397 < 0) {\n    iVar2 = rpl_fcntl(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, have_dupfd_cloexec_3397 != -1)) goto LAB_0010fdf4;\nLAB_0010fe31:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010fdf4;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = rpl_fcntl(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010fdf4;\n        have_dupfd_cloexec_3397 = -1;\n        __fd = iVar2;\n        goto LAB_0010fe31;\n      }\n    }\n    have_dupfd_cloexec_3397 = 1;\n  }\nLAB_0010fdf4:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103890": "\nvoid __memcpy_chk(void)\n\n{\n  (*(code *)PTR___memcpy_chk_00117e68)();\n  return;\n}\n\n", 
    "00107cc0": "\nbool hash_table_ok(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00107ce0:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00107ce0;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "001096c0": "\nchar * umaxtostr(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00104610": "\nvoid emit_size_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010bef0": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00119190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00117ed0)();\n  return pcVar1;\n}\n\n", 
    "00107eb0": "\nlong hash_get_first(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = hash_get_first_cold();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = hash_get_first_cold();\n  return lVar1;\n}\n\n", 
    "00106dc0": "\nundefined4 seen_triple(long *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined4 uVar1;\n  long lVar2;\n  \n  lVar2 = *param_1;\n  if (lVar2 == 0) {\n    lVar2 = hash_initialize(7,0,triple_hash,triple_compare_ino_str,triple_free);\n    *param_1 = lVar2;\n    if (lVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(0);\n    }\n  }\n  uVar1 = seen_file(lVar2,param_2,param_3);\n  if ((char)uVar1 == '\\0') {\n    record_file(*param_1,param_2,param_3);\n  }\n  return uVar1;\n}\n\n", 
    "00104be0": "\nvoid devlist_for_dev(undefined8 param_1)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_28 [3];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (devlist_table != 0) {\n    local_28[0] = param_1;\n    hash_lookup(devlist_table,local_28);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010cb90": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00103af0": "\nvoid hasmntopt(void)\n\n{\n  (*(code *)PTR_hasmntopt_00117f98)();\n  return;\n}\n\n", 
    "0010fd40": "\nvoid xsum4(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = xsum();\n  uVar1 = xsum(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  xsum(uVar1,in_RCX);\n  return;\n}\n\n", 
    "0010c7f0": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* readlink@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001064d0": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = program_name;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Show information about the file system on which each FILE resides,\\nor all file systems by default.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_mandatory_arg_note();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -a, --all             include pseudo, duplicate, inaccessible file systems\\n  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\\n                           \\'-BM\\' prints sizes in units of 1,048,576 bytes;\\n                           see SIZE format below\\n  -h, --human-readable  print sizes in powers of 1024 (e.g., 1023M)\\n  -H, --si              print sizes in powers of 1000 (e.g., 1.1G)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -i, --inodes          list inode information instead of block usage\\n  -k                    like --block-size=1K\\n  -l, --local           limit listing to local file systems\\n      --no-sync         do not invoke sync before getting usage info (default)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,\\n                               or print all fields if FIELD_LIST is omitted.\\n  -P, --portability     use the POSIX output format\\n      --sync            invoke sync before getting usage info\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --total           elide all entries insignificant to available space,\\n                          and produce a grand total\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -t, --type=TYPE       limit listing to file systems of type TYPE\\n  -T, --print-type      print file system type\\n  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE\\n  -v                    (ignored)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_blocksize_note_constprop_0();\n    emit_size_note();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nFIELD_LIST is a comma-separated list of columns to be included.  Valid\\nfield names are: \\'source\\', \\'fstype\\', \\'itotal\\', \\'iused\\', \\'iavail\\', \\'ipcent\\',\\n\\'size\\', \\'used\\', \\'avail\\', \\'pcent\\', \\'file\\' and \\'target\\' (see info page).\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00119198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_00117e38)();\n  return pvVar1;\n}\n\n", 
    "00103950": "\nvoid setmntent(void)\n\n{\n  (*(code *)PTR_setmntent_00117ec8)();\n  return;\n}\n\n", 
    "00104800": "\nundefined * df_readable(uint param_1,long param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  undefined *puVar3;\n  long extraout_RDX;\n  ulong uVar4;\n  \n  uVar4 = (ulong)param_1;\n  cVar1 = known_value(param_2);\n  if (cVar1 == '\\0') {\n    if ((char)uVar4 == '\\0') {\n      return &DAT_00112c9e;\n    }\n    lVar2 = extraout_RDX + 1;\n  }\n  else {\n    lVar2 = (uVar4 & 0xff) + extraout_RDX;\n    if ((char)uVar4 == '\\0') {\n      puVar3 = (undefined *)human_readable();\n      return puVar3;\n    }\n  }\n  lVar2 = human_readable(-param_2,lVar2,human_output_opts);\n  *(undefined *)(lVar2 + -1) = 0x2d;\n  return (undefined *)(lVar2 + -1);\n}\n\n", 
    "00119070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbstowcs(wchar_t *__pwcs,char *__s,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbstowcs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00117da8)();\n  return sVar1;\n}\n\n", 
    "00119080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fcntl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107fc0": "\nlong hash_do_for_each(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "00103ae0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00117f90)();\n  return iVar1;\n}\n\n", 
    "00108040": "\nulong hash_string(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "0010e370": "\nvoid argmatch_invalid(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = quote_n(1,param_1);\n  uVar3 = quotearg_n_style(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "0010e250": "\nvoid __argmatch_die(void)\n\n{\n  usage(1);\n  return;\n}\n\n", 
    "001087c0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong hash_delete(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = hash_find_entry(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_00108803;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_0010893a;\nLAB_00108854:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_00108854;\nLAB_0010893a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    check_tuning_isra_0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_001120dc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_001120dc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = hash_rehash(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_00108803:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e8b0": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010c070": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "0010d280": "\nundefined8 cdb_advance_fd(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  iVar1 = openat(*param_1,param_2,0x10900);\n  if (iVar1 < 0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    cdb_free_isra_0(*param_1);\n    *param_1 = iVar1;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n", 
    "00119088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103940": "\nvoid getmntent(void)\n\n{\n  (*(code *)PTR_getmntent_00117ec0)();\n  return;\n}\n\n", 
    "00103700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00117da0)();\n  return sVar1;\n}\n\n", 
    "00103820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_00117e30)();\n  return sVar1;\n}\n\n", 
    "00103980": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00117ee0)();\n  return;\n}\n\n", 
    "00103740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chdir(char *__path)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_chdir_00117dc0)();\n  return iVar1;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00117e50)();\n  return iVar1;\n}\n\n", 
    "00108a40": "\nulong triple_compare_ino_str(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n", 
    "00110d60": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010c7d0": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "0010fd20": "\nvoid xsum3(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = xsum();\n  xsum(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "0010a3a0": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e580": "\nlong argmatch_to_argument(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00119058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswcntrl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e9a0": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00119298": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __memcpy_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __memcpy_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00103610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00117d28)();\n  return;\n}\n\n", 
    "00119050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_00117db8)();\n  return iVar1;\n}\n\n", 
    "00119290": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00119170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00117e48)();\n  return iVar1;\n}\n\n", 
    "00108b70": "\nvoid * group_number(long param_1,size_t param_2,byte *param_3,char *param_4)\n\n{\n  byte bVar1;\n  size_t __n;\n  void *pvVar2;\n  undefined *__src;\n  size_t __n_00;\n  ulong uVar3;\n  ulong uVar4;\n  long in_FS_OFFSET;\n  undefined auStack_78 [56];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __n = strlen(param_4);\n  __memcpy_chk(auStack_78,param_1,param_2,0x29);\n  pvVar2 = (void *)(param_1 + param_2);\n  __n_00 = 0xffffffffffffffff;\n  while( true ) {\n    bVar1 = *param_3;\n    if (bVar1 == 0) {\n      if (param_2 < __n_00) {\n        __n_00 = param_2;\n      }\n      uVar4 = param_2 - __n_00;\n      __src = auStack_78 + uVar4;\n    }\n    else {\n      if (bVar1 < 0x7f) {\n        uVar3 = (ulong)bVar1;\n        if (param_2 < bVar1) {\n          uVar3 = param_2;\n        }\n        uVar4 = param_2 - uVar3;\n        __src = auStack_78 + uVar4;\n        param_2 = uVar3;\n      }\n      else {\n        uVar4 = 0;\n        __src = auStack_78;\n      }\n      param_3 = param_3 + 1;\n      __n_00 = param_2;\n    }\n    pvVar2 = memcpy((void *)((long)pvVar2 - __n_00),__src,__n_00);\n    if (uVar4 == 0) break;\n    pvVar2 = memcpy((void *)((long)pvVar2 - __n),param_4,__n);\n    param_2 = uVar4;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pvVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103970": "\nvoid __isoc99_sscanf(void)\n\n{\n  (*(code *)PTR___isoc99_sscanf_00117ed8)();\n  return;\n}\n\n", 
    "0010ca60": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "0010ba90": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001097a0": "\nulong wc_truncate(wchar_t *param_1,ulong param_2)\n\n{\n  int iVar1;\n  ulong uVar2;\n  wchar_t __c;\n  ulong uVar3;\n  \n  __c = *param_1;\n  if (__c == L'\\0') {\n    uVar3 = 0;\n  }\n  else {\n    uVar3 = 0;\n    do {\n      iVar1 = wcwidth(__c);\n      if (iVar1 == -1) {\n        *param_1 = L'\ufffd';\n        uVar2 = uVar3 + 1;\n      }\n      else {\n        uVar2 = (long)iVar1 + uVar3;\n      }\n      if (param_2 < uVar2) break;\n      __c = param_1[1];\n      param_1 = param_1 + 1;\n      uVar3 = uVar2;\n    } while (__c != L'\\0');\n  }\n  *param_1 = L'\\0';\n  return uVar3;\n}\n\n", 
    "0010ec40": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * vasnprintf(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = printf_parse(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_0010f473;\n  }\n  iVar5 = printf_fetchargs(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_0010f473;\n  }\n  uVar6 = xsum4(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_0010ed01:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_0010edf6;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x10ed5c;\n      __n = (int *)xsum(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_0010ede7;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_0010ed85;\n        }\ncode_r0x0010f854:\n        *(undefined8 *)(puVar18 + -8) = 0x10f859;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_0010f2f9;\nLAB_0010f2ec:\n        if (pvVar12 == (void *)0x0) goto LAB_0010f2f9;\n        goto LAB_0010f2f1;\n      }\n      piVar19 = (int *)0xc;\nLAB_0010ed85:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010f854;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10f7cc;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x0010f854;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x10f816;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10edcd;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_0010fccc;\n      }\nLAB_0010ede7:\n      *(undefined8 *)(puVar18 + -8) = 0x10edf6;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_0010edf6:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x10fba9;\n          piVar9 = (int *)xsum(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x0010f854;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010f854;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10fc94;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010f854;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10fcb7;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10fbfb;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_0010fccc;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x10fc83;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x10fc32;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10fc4a;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10fc62;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_0010f473;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_00103b77;\n          *(undefined8 *)(puVar18 + -8) = 0x10f707;\n          piVar9 = (int *)xsum(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x0010f854;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010f854;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10fae8;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010f854;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10fb21;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10f75f;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_0010fccc;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_00103b77:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_00103b7c;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nvasnprintf_cold:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x103b77;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x10ef26;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x10ef5d;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_00103b77;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_00103b77;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x10f0a7;\n            piVar9 = (int *)xsum(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x0010f854;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010f854;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x10fa9e;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010f854;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10fad0;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x10f0f5;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010f854;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x10f10b;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_0010f134:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto vasnprintf_cold;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_0010f588;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_0010f1ea:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x10f20b;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x0010f21c;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_0010f5d4;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x10f544;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x0010f21c;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10f948;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x0010f21c;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_0010f1ea;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x10f8e1;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x0010f21c;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_0010f5db;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_0010f588:\n              uVar11 = (ulong)local_3c0[0];\nLAB_0010f392:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10f3b3;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_0010f392;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_0010f5d4:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_0010f5db:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x10f603;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x0010f21c:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_0010f23c;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f423;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f437;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f44f;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f467;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_0010f473;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_0010f134;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_00103b77;\n            if (local_3c4 < iVar5) {\nLAB_0010f23c:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10fa36;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10fa4a;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10fa62;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10fa7a;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_0010f473;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x10f27a;\n              uVar10 = xsum(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x10f285;\n              piVar13 = (int *)xmax(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x10f680;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x10f6a3;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_0010f134;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x10f2d0;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_0010f134;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_0010f2f9;\n                goto LAB_0010f2ec;\n              }\n              goto LAB_0010f134;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_0010ed01;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0010f30d;\nLAB_0010fccc:\n  *(undefined8 *)(puVar18 + -8) = 0x10fcd1;\n  local_3e0 = __errno_location();\nLAB_0010f2f1:\n  *(undefined8 *)(puVar18 + -8) = 0x10f2f9;\n  free(pvVar12);\nLAB_0010f2f9:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x10f30d;\n    free(puVar15);\n  }\nLAB_0010f30d:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10f325;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10f33d;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_0010f473:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x10fccc;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "0010d7a0": "\nvoid unescape_tab(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  char *pcVar3;\n  ulong uVar4;\n  \n  sVar2 = strlen(param_1);\n  uVar4 = 0;\n  pcVar3 = param_1;\n  do {\n    uVar1 = uVar4 + 1;\n    if ((((param_1[uVar4] == '\\\\') && (uVar4 + 4 < sVar2 + 1)) &&\n        ((byte)(param_1[uVar1] - 0x30U) < 4)) &&\n       (((byte)(param_1[uVar4 + 2] - 0x30U) < 8 && ((byte)(param_1[uVar4 + 3] - 0x30U) < 8)))) {\n      *pcVar3 = param_1[uVar4 + 3] + 'P' + (param_1[uVar4 + 2] + param_1[uVar1] * '\\b') * '\\b';\n      uVar4 = uVar4 + 4;\n    }\n    else {\n      *pcVar3 = param_1[uVar4];\n      uVar4 = uVar1;\n      if (sVar2 + 1 <= uVar1) {\n        return;\n      }\n    }\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n", 
    "00119188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "001051b0": "\nvoid add_to_grand_total_isra_0(long *param_1,long param_2)\n\n{\n  char cVar1;\n  undefined8 extraout_RDX;\n  long extraout_RDX_00;\n  long extraout_RDX_01;\n  long extraout_RDX_02;\n  long lVar2;\n  ulong uVar3;\n  \n  cVar1 = known_value(param_2);\n  if (cVar1 != '\\0') {\n    grand_fsu._40_8_ = grand_fsu._40_8_ + param_2;\n  }\n  cVar1 = known_value(extraout_RDX);\n  if (cVar1 != '\\0') {\n    grand_fsu._48_8_ = grand_fsu._48_8_ + extraout_RDX_00;\n  }\n  cVar1 = known_value(param_1[2]);\n  if (cVar1 != '\\0') {\n    grand_fsu._8_8_ = grand_fsu._8_8_ + extraout_RDX_01 * *param_1;\n  }\n  cVar1 = known_value(param_1[5]);\n  if (cVar1 != '\\0') {\n    grand_fsu._16_8_ = grand_fsu._16_8_ + extraout_RDX_02 * *param_1;\n  }\n  lVar2 = param_1[3];\n  cVar1 = known_value();\n  if (cVar1 == '\\0') {\n    return;\n  }\n  uVar3 = lVar2 * *param_1;\n  cVar1 = *(char *)(param_1 + 4);\n  if (grand_fsu[32] != cVar1) {\n    if (grand_fsu[32] != '\\0') {\n      grand_fsu._24_8_ = -grand_fsu._24_8_;\n    }\n    if (cVar1 != '\\0') {\n      uVar3 = -uVar3;\n    }\n    if (uVar3 < grand_fsu._24_8_) {\n      grand_fsu._24_8_ = grand_fsu._24_8_ - uVar3;\n    }\n    else {\n      grand_fsu._24_8_ = uVar3 - grand_fsu._24_8_;\n      grand_fsu[32] = cVar1;\n    }\n    if (grand_fsu[32] != '\\0') {\n      grand_fsu._24_8_ = -grand_fsu._24_8_;\n    }\n    return;\n  }\n  grand_fsu._24_8_ = uVar3 + grand_fsu._24_8_;\n  return;\n}\n\n", 
    "00119068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* localeconv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d140": "\nvoid rpl_asprintf(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  long local_c0;\n  undefined local_b8 [16];\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d0 = &stack0x00000008;\n  local_d8 = 0x10;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  rpl_vasprintf(param_9,param_10,&local_d8);\n  if (local_c0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00117db0)();\n  return iVar1;\n}\n\n", 
    "0010bfd0": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00117e40)();\n  return iVar1;\n}\n\n", 
    "00119180": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strverscmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strverscmp_00117d20)();\n  return iVar1;\n}\n\n", 
    "00119060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcswidth(wchar_t *__s,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* wcswidth@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}