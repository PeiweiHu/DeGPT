{
    "00103000": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010dfc0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00106fc0": "\nssize_t safe_read(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7ff00001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00107840": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00104de0": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106870": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107960": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "00108130": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00107af0": "\nvoid call_freefun(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00107afe. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x40))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00107b03. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x40))(param_2);\n  return;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010df78)();\n  return;\n}\n\n", 
    "00102825": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001044f0": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "0010f090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001030a0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_0010dfe0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001031c0": "\nundefined4 * get_input_fstatus(long param_1,char **param_2)\n\n{\n  char **ppcVar1;\n  char *__file;\n  int iVar2;\n  undefined4 *puVar3;\n  stat *__buf;\n  long lVar4;\n  \n  lVar4 = 1;\n  if (param_1 != 0) {\n    lVar4 = param_1;\n  }\n  puVar3 = (undefined4 *)xnmalloc(lVar4,0x98);\n  if ((param_1 == 0) ||\n     ((param_1 == 1 &&\n      ((uint)print_lines + (uint)print_words + (uint)print_chars + (uint)print_bytes +\n       (uint)print_linelength == 1)))) {\n    *puVar3 = 1;\n  }\n  else {\n    __buf = (stat *)(puVar3 + 2);\n    ppcVar1 = param_2 + param_1;\n    do {\n      __file = *param_2;\n      if ((__file == (char *)0x0) || ((*__file == '-' && (__file[1] == '\\0')))) {\n        iVar2 = fstat(0,__buf);\n      }\n      else {\n        iVar2 = stat(__file,__buf);\n      }\n      param_2 = param_2 + 1;\n      *(int *)(__buf[-1].__unused + 2) = iVar2;\n      __buf = (stat *)&__buf[1].st_ino;\n    } while (ppcVar1 != param_2);\n  }\n  return puVar3;\n}\n\n", 
    "00102700": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010df20)();\n  return;\n}\n\n", 
    "00107a40": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001081d0": "\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __xstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "0010f098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106b90": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102820": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107710": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00104680": "\nvoid mb_copy(void **param_1,void **param_2)\n\n{\n  char cVar1;\n  void **__src;\n  void *pvVar2;\n  void *__n;\n  \n  __src = (void **)*param_2;\n  __n = param_2[1];\n  if (__src == param_2 + 3) {\n    pvVar2 = memcpy(param_1 + 3,__src,(size_t)__n);\n    __n = param_2[1];\n    *param_1 = pvVar2;\n  }\n  else {\n    *param_1 = __src;\n  }\n  cVar1 = *(char *)(param_2 + 2);\n  param_1[1] = __n;\n  *(char *)(param_1 + 2) = cVar1;\n  if (cVar1 != '\\0') {\n    *(undefined4 *)((long)param_1 + 0x14) = *(undefined4 *)((long)param_2 + 0x14);\n  }\n  return;\n}\n\n", 
    "00106860": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010ddb8)();\n  return;\n}\n\n", 
    "00107030": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010a0db,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001072f9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_001072f9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010739b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010739b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010714d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010714d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getpagesize_0010df70)();\n  return iVar1;\n}\n\n", 
    "00104d20": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001065a0": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001078d0": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010793f;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010793f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "001043c0": "\nvoid argv_iter_init_stream(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x30);\n  if (puVar1 != (undefined8 *)0x0) {\n    *puVar1 = param_1;\n    puVar1[2] = 0;\n    puVar1[3] = 0;\n    puVar1[1] = 0;\n    puVar1[4] = 0;\n  }\n  return;\n}\n\n", 
    "00103f90": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_001095c9;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'w' || (pcVar2[1] != 'c')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_001095c6;\n        goto LAB_001041ce;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_001095c6;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_001095c6);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_001041ce:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_001095c6);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_001095c6);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_001095c6) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001044e0": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010dfa8)();\n  return ppuVar1;\n}\n\n", 
    "001080a0": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00106b80": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00107fb0": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00104bc0": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00107740": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010779b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010779b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00104aa0": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00107980": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00106770": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00108030": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001027d0": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010df88)();\n  return;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010def8)();\n  return pcVar1;\n}\n\n", 
    "001076c0": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "001077e0": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010f190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102840": "\nuint main(ulong param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 *__ptr;\n  char *__s1;\n  undefined8 uVar4;\n  char *__s1_00;\n  int *piVar5;\n  ulong uVar6;\n  FILE *__stream;\n  long lVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  long lVar10;\n  undefined8 *puVar11;\n  uint uVar12;\n  long in_FS_OFFSET;\n  double dVar13;\n  double dVar14;\n  double dVar15;\n  char local_209;\n  int local_1fc;\n  ulong local_1f8;\n  undefined8 *local_1f0;\n  stat local_d8;\n  long local_40;\n  \n  param_1 = param_1 & 0xffffffff;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\");\n  textdomain(\"coreutils\");\n  atexit(close_stdout);\n  iVar2 = getpagesize();\n  page_size = (long)iVar2;\n  setvbuf(stdout,(char *)0x0,1,0);\n  print_bytes = '\\0';\n  print_chars = '\\0';\n  print_words = '\\0';\n  print_lines = '\\0';\n  print_linelength = '\\0';\n  max_line_length = 0;\n  total_bytes = 0;\n  total_chars = 0;\n  total_words = 0;\n  total_lines = 0;\n  __s1_00 = (char *)0x0;\n  while (iVar2 = getopt_long(param_1,param_2,\"clLmw\",longopts,0), iVar2 != -1) {\n    if (0x80 < iVar2) goto switchD_00102980_caseD_64;\n    if (iVar2 < 99) {\n      if (iVar2 == -0x82) {\n        lVar7 = usage(0);\n        goto LAB_00102f51;\n      }\n      if (iVar2 != 0x4c) {\n        if (iVar2 != -0x83) goto switchD_00102980_caseD_64;\n        goto LAB_001029e8;\n      }\n      print_linelength = '\\x01';\n    }\n    else {\n      switch(iVar2) {\n      case 99:\n        print_bytes = '\\x01';\n        break;\n      default:\n        goto switchD_00102980_caseD_64;\n      case 0x6c:\n        print_lines = '\\x01';\n        break;\n      case 0x6d:\n        print_chars = '\\x01';\n        break;\n      case 0x77:\n        print_words = '\\x01';\n        break;\n      case 0x80:\n        __s1_00 = optarg;\n      }\n    }\n  }\n  if ((print_lines == '\\0') && (print_words == '\\0')) goto LAB_00102ddf;\n  do {\n    lVar7 = (long)optind;\n    iVar2 = (int)param_1;\n    if (__s1_00 == (char *)0x0) {\n      if (iVar2 <= optind) goto LAB_00102ea0;\n      puVar11 = param_2 + optind;\n      param_1 = (ulong)(iVar2 - optind);\nLAB_00102e31:\n      param_2 = (undefined8 *)argv_iter_init_argv(puVar11);\n      local_209 = '\\0';\n    }\n    else {\n      if (optind < iVar2) {\nLAB_00102f51:\n        uVar8 = quotearg_style(4,param_2[lVar7]);\n        uVar9 = dcgettext(0,\"extra operand %s\",5);\n        error(0,0,uVar9,uVar8);\n        uVar8 = dcgettext(0,\"file operands cannot be combined with --files0-from\",5);\n        __fprintf_chk(stderr,1,\"%s\\n\",uVar8);\nswitchD_00102980_caseD_64:\n        usage(1);\nLAB_001029e8:\n        version_etc(stdout,&DAT_001095c6,\"GNU coreutils\",Version,\"Paul Rubin\",\"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      iVar2 = strcmp(__s1_00,\"-\");\n      __stream = stdin;\n      if ((iVar2 != 0) && (__stream = fopen(__s1_00,\"r\"), __stream == (FILE *)0x0)) {\n        uVar8 = quotearg_style(4,__s1_00);\n        __s1_00 = (char *)dcgettext(0,\"cannot open %s for reading\",5);\n        piVar5 = __errno_location();\n        error(1,*piVar5,__s1_00,uVar8);\nLAB_00102ea0:\n        puVar11 = &stdin_only_8144;\n        param_1 = 1;\n        goto LAB_00102e31;\n      }\n      iVar2 = fileno(__stream);\n      iVar2 = fstat(iVar2,&local_d8);\n      if ((iVar2 == 0) && ((local_d8.st_mode & 0xf000) == 0x8000)) {\n        dVar15 = (double)local_d8.st_size;\n        dVar13 = (double)physmem_available();\n        dVar14 = DAT_001098e8;\n        if (DAT_001098f0 * dVar13 <= DAT_001098e8) {\n          dVar14 = (double)physmem_available();\n          dVar14 = dVar14 * DAT_001098f0;\n        }\n        if (dVar14 < dVar15) goto LAB_00102aa4;\n        readtokens0_init(&local_1f8);\n        local_209 = readtokens0(__stream,&local_1f8);\n        if ((local_209 == '\\0') ||\n           (iVar2 = rpl_fclose(__stream), puVar11 = local_1f0, param_1 = local_1f8, iVar2 != 0)) {\n          uVar8 = quotearg_style(4,__s1_00);\n          uVar9 = dcgettext(0,\"cannot read file names from %s\",5);\n          error(1,0,uVar9,uVar8);\n          goto LAB_00102ff3;\n        }\n        param_2 = (undefined8 *)argv_iter_init_argv(local_1f0);\n      }\n      else {\nLAB_00102aa4:\n        puVar11 = (undefined8 *)0x0;\n        param_1 = 0;\n        param_2 = (undefined8 *)argv_iter_init_stream(__stream);\n        local_209 = '\\0';\n      }\n    }\n    if (param_2 == (undefined8 *)0x0) {\nLAB_00102ff8:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    lVar7 = 0;\n    __ptr = (undefined4 *)get_input_fstatus(param_1,puVar11);\n    uVar12 = 1;\n    number_width = compute_number_width(param_1,__ptr);\n    while (__s1 = (char *)argv_iter(param_2,&local_1fc), __s1 != (char *)0x0) {\n      if (__s1_00 == (char *)0x0) {\n        if (*__s1 == '\\0') {\n          uVar8 = dcgettext(0,\"invalid zero-length file name\",5);\n          error(0,0,\"%s\",uVar8);\nLAB_00102bb1:\n          uVar12 = 0;\n        }\n        else {\nLAB_00102b32:\n          lVar10 = 0;\n          if (param_1 != 0) {\n            lVar10 = lVar7 * 0x98;\n          }\n          uVar3 = wc_file(__s1,lVar10 + (long)__ptr);\n          uVar12 = uVar12 & uVar3;\n        }\n      }\n      else {\n        if (((*__s1_00 == '-') && (__s1_00[1] == '\\0')) && (iVar2 = strcmp(__s1,\"-\"), iVar2 == 0)) {\n          uVar8 = quotearg_style(4,__s1);\n          uVar9 = dcgettext(0,\"when reading file names from stdin, no file name of %s allowed\",5);\n          error(0,0,uVar9,uVar8);\n          if (*__s1 != '\\0') goto LAB_00102bb1;\n        }\n        else if (*__s1 != '\\0') goto LAB_00102b32;\n        uVar8 = argv_iter_n_args(param_2);\n        uVar9 = dcgettext(0,\"invalid zero-length file name\",5);\n        uVar4 = quotearg_n_style_colon(0,3,__s1_00);\n        error(0,0,\"%s:%lu: %s\",uVar4,uVar8,uVar9);\n        uVar12 = 0;\n      }\n      if (param_1 == 0) {\n        *__ptr = 1;\n      }\n      lVar7 = lVar7 + 1;\n    }\n    if (local_1fc == 3) goto LAB_00102ff8;\n    if (local_1fc == 4) {\n      uVar8 = quotearg_n_style_colon(0,3,__s1_00);\n      __s1_00 = (char *)dcgettext(0,\"%s: read error\",5);\n      piVar5 = __errno_location();\n      error(0,*piVar5,__s1_00,uVar8);\n      uVar12 = 0;\n    }\n    else {\n      if (local_1fc != 2) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"!\\\"unexpected error code from argv_iter\\\"\",\"src/wc.c\",0x32a,\n                      (char *)&__PRETTY_FUNCTION___8154);\n      }\n      bVar1 = __s1_00 == (char *)0x0 & (byte)uVar12;\n      param_1 = (ulong)(uint)bVar1;\n      if ((bVar1 != 0) && (lVar7 = argv_iter_n_args(param_2), uVar12 = (uint)bVar1, lVar7 == 0)) {\n        uVar12 = wc_file(0,__ptr);\n      }\n    }\n    if (local_209 != '\\0') {\n      readtokens0_free(&local_1f8);\n    }\n    uVar6 = argv_iter_n_args(param_2);\n    if (1 < uVar6) {\n      uVar8 = dcgettext(0,\"total\",5);\n      write_counts(total_lines,total_words,total_chars,total_bytes,max_line_length,uVar8);\n    }\n    argv_iter_free(param_2);\n    free(__ptr);\n    if ((have_read_stdin == '\\0') || (iVar2 = close(0), iVar2 == 0)) {\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return (uVar12 ^ 1) & 0xff;\n      }\nLAB_00102ff3:\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    piVar5 = __errno_location();\n    error(1,*piVar5,&DAT_0010969b);\nLAB_00102ddf:\n    if (((print_chars == '\\0') && (print_bytes == '\\0')) && (print_linelength == '\\0')) {\n      print_bytes = '\\x01';\n      print_words = '\\x01';\n      print_lines = '\\x01';\n    }\n  } while( true );\n}\n\n", 
    "001081f0": "\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstat(1,__fd,__buf);\n  return iVar1;\n}\n\n", 
    "0010f198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswspace(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswspace_0010df30)();\n  return iVar1;\n}\n\n", 
    "0010f078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010dea0)();\n  return iVar1;\n}\n\n", 
    "00106520": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "0010282f": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010282a": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001027c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010df80)();\n  return sVar1;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010def0)();\n  return iVar1;\n}\n\n", 
    "001077d0": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "001065c0": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102839": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _obstack_free_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102834": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_0010df28)();\n  return iVar1;\n}\n\n", 
    "00104650": "\nuint mb_width_aux(wchar_t param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = wcwidth(param_1);\n  if (-1 < (int)uVar1) {\n    return uVar1;\n  }\n  iVar2 = iswcntrl(param_1);\n  return (uint)(iVar2 == 0);\n}\n\n", 
    "00106950": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fgetc_0010de68)();\n  return iVar1;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ddd8)();\n  return;\n}\n\n", 
    "00106ae0": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107480": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "00105180": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00105607:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00105629;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00105bc6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010557f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00105607;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010557f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_001099b1,param_5);\n      local_78 = (char *)gettext_quote(&DAT_001099a1);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_001052d0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00105b30_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00105acb;\n          goto LAB_001058bb;\n        default:\nswitchD_001059e0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105db8;\n              }\n              if (lVar10 == -2) goto joined_r0x001061ca;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_001057a0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105db8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00105541;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00105a88;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00105a88;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00105a88:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00105797;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00105784;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00105784:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_001054a8;\n          goto LAB_00105797;\n        case 0x23:\n        case 0x7e:\nLAB_0010577b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00105784;\n          goto LAB_001054a5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_001059e0_caseD_25;\n        case 0x27:\nswitchD_001059e0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_001054a8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x001054cb;\n          }\n          goto LAB_001057a0;\n        case 0x3f:\nswitchD_001059e0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010612e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_001054a8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x001054cb;\n          }\n          goto LAB_001057a0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_001053d8_caseD_5c;\n          if (!bVar20) {\nLAB_00105a18:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00105a30;\n          }\n          goto LAB_001057a0;\n        case 0x7b:\n        case 0x7d:\nswitchD_001059e0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010577b;\nLAB_001054a5:\n          bVar23 = false;\n          goto LAB_001054a8;\n        }\nLAB_001058b0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_001058bb:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_001054c8;\n          goto LAB_001053f0;\n        }\nLAB_001058f0:\n        bVar21 = false;\n        goto joined_r0x00105901;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00105b10;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_001053d8_caseD_0;\n          default:\n            goto switchD_001059e0_caseD_1;\n          case 7:\n            goto switchD_00105b30_caseD_7;\n          case 8:\n            goto switchD_00105b30_caseD_8;\n          case 9:\n            goto switchD_001053d8_caseD_9;\n          case 10:\n            goto switchD_00105b30_caseD_a;\n          case 0xb:\n            goto switchD_00105b30_caseD_b;\n          case 0xc:\n            goto switchD_00105b30_caseD_c;\n          case 0xd:\n            goto switchD_00105b30_caseD_d;\n          case 0x20:\n            goto LAB_00105b59;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_001053d8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00105b41;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001053e8;\n          case 0x27:\n            goto switchD_001059e0_caseD_27;\n          case 0x3f:\n            goto switchD_001059e0_caseD_3f;\n          case 0x5c:\n            goto switchD_001053d8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_001059e0_caseD_7b;\n          }\n        }\n        goto LAB_001057ae;\n      }\nLAB_00105b10:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00105b30_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_001053d8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x001054cb;\n            }\nLAB_00105f6b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00105f6b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105fa8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x001054cb;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_001057a0;\n      default:\n        bVar23 = false;\n        goto switchD_001059e0_caseD_1;\n      case 7:\nswitchD_00105b30_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00105b30_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_001053d8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_001058b0;\n      case 10:\nswitchD_00105b30_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_001058f0;\n      case 0xb:\nswitchD_00105b30_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_001058f0;\n      case 0xc:\nswitchD_00105b30_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00105b30_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_001058f0;\n      case 0x20:\n        bVar5 = false;\nLAB_00105b59:\n        uVar15 = 0x20;\n        goto LAB_001053e8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_001053d8_caseD_21:\n        bVar22 = false;\n        goto LAB_001054a5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00105b41:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_001054a8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001053f0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001053e8:\n        bVar22 = false;\n        goto LAB_001053f0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_001059e0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_001059e0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_001053d8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00105a18;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_001058b0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_001059e0_caseD_7b;\n      }\n      if (bVar20) goto LAB_00105910;\n      bVar21 = false;\n      goto LAB_00105466;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00105797:\n      param_5 = 2;\nLAB_001057a0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_001057ae:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_001057e8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00106235:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001057e8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001057e8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00106235;\nLAB_00105bc6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00105629:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00105acb:\n  uVar13 = uVar13 + 1;\n  goto LAB_001052d0;\nswitchD_0010612e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105fa8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x001054cb;\n    goto LAB_001053f0;\n  }\n  goto LAB_001057ae;\njoined_r0x001061ca:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105db8:\n  if (1 < uVar17) {\nLAB_00105dc2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_001057a0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00105478;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00105a30;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00105541:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105dc2;\n  }\nswitchD_001059e0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_001054a8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001053f0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x001054cb;\n  }\n  else {\nLAB_001054c8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x001054cb:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00105a30:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00105478;\n    }\n  }\njoined_r0x00105901:\n  if (bVar20) {\nLAB_00105910:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_001057a0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00105466:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00105478:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_001052d0;\n}\n\n", 
    "0010f050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001079c0": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001068d0": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a30": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "0010f058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107d60": "\nvoid _obstack_free(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  while( true ) {\n    if (puVar1 == (ulong *)0x0) {\n      if (param_2 == (ulong *)0x0) {\n        return;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    if ((puVar1 < param_2) && (puVar2 = (ulong *)*puVar1, param_2 <= puVar2)) break;\n    puVar1 = (ulong *)puVar1[1];\n    call_freefun(param_1);\n    *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 2;\n  }\n  *(ulong **)(param_1 + 0x18) = param_2;\n  *(ulong **)(param_1 + 0x10) = param_2;\n  *(ulong **)(param_1 + 0x20) = puVar2;\n  *(ulong **)(param_1 + 8) = puVar1;\n  return;\n}\n\n", 
    "00107e80": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "0010f178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00104eb0": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106940": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106820": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "00104400": "\nFILE * argv_iter(FILE **param_1,int *param_2)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  __ssize_t _Var3;\n  FILE *pFVar4;\n  \n  if (*param_1 == (FILE *)0x0) {\n    pFVar1 = param_1[5];\n    pFVar4 = *(FILE **)pFVar1;\n    if (pFVar4 != (FILE *)0x0) {\n      *param_2 = 1;\n      param_1[5] = (FILE *)&pFVar1->_IO_read_ptr;\n      return pFVar4;\n    }\n    *param_2 = 2;\n  }\n  else {\n    _Var3 = getdelim((char **)(param_1 + 2),(size_t *)(param_1 + 3),0,*param_1);\n    if (_Var3 < 0) {\n      iVar2 = feof(*param_1);\n      *param_2 = (-(uint)(iVar2 == 0) & 2) + 2;\n      pFVar4 = (FILE *)0x0;\n    }\n    else {\n      *param_2 = 1;\n      pFVar4 = param_1[2];\n      param_1[1] = (FILE *)((long)&param_1[1]->_flags + 1);\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "00108204": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010de60)();\n  return pvVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010ddd0)();\n  return iVar1;\n}\n\n", 
    "00106bf0": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00105050": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00109999;\n      }\n      else {\n        pcVar2 = &DAT_00109996;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010999d;\n    }\n    else {\n      pcVar2 = &DAT_00109992;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "001045c0": "\nvoid fadvise(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    fdadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n", 
    "001046e0": "\nuint is_basic(byte param_1)\n\n{\n  return *(uint *)(is_basic_table + (ulong)(param_1 >> 5) * 4) >> (param_1 & 0x1f) & 1;\n}\n\n", 
    "001044a0": "\nlong argv_iter_n_args(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    return param_1[1];\n  }\n  return param_1[5] - param_1[4] >> 3;\n}\n\n", 
    "00107b10": "\nundefined8\n_obstack_begin_worker\n          (long *param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5,\n          undefined8 param_6)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  if (param_3 == 0) {\n    lVar5 = 0xf;\n    param_3 = 0x10;\n  }\n  else {\n    lVar5 = param_3 + -1;\n  }\n  param_1[6] = lVar5;\n  if (param_2 == 0) {\n    param_2 = 0xfe0;\n  }\n  *param_1 = param_2;\n  plVar1 = (long *)call_chunkfun(param_1);\n  param_1[1] = (long)plVar1;\n  if (plVar1 != (long *)0x0) {\n    uVar4 = -param_3 & (long)plVar1 + lVar5 + 0x10;\n    lVar5 = *param_1;\n    param_1[2] = uVar4;\n    param_1[3] = uVar4;\n    *plVar1 = lVar5 + (long)plVar1;\n    param_1[4] = lVar5 + (long)plVar1;\n    plVar1[1] = 0;\n    *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xf9;\n    return 1;\n  }\n  uVar2 = (*(code *)obstack_alloc_failed_handler)();\n  uVar3 = dcgettext(0,\"memory exhausted\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar3,param_5,param_6,uVar2);\n                    /* WARNING: Subroutine does not return */\n  exit(exit_failure);\n}\n\n", 
    "0010f180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setvbuf@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a20": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00107c30": "\nulong * _obstack_newchunk(ulong **param_1,ulong param_2)\n\n{\n  ulong *puVar1;\n  ulong **ppuVar2;\n  ulong *puVar3;\n  ulong *puVar4;\n  ulong **ppuVar5;\n  ulong __n;\n  \n  __n = (long)param_1[3] - (long)param_1[2];\n  puVar1 = param_1[1];\n  puVar4 = (ulong *)(param_2 + __n + (long)param_1[6]);\n  puVar3 = (ulong *)((long)puVar4 + (__n >> 3) + 100);\n  if (puVar4 <= *param_1) {\n    puVar4 = *param_1;\n  }\n  if (puVar3 <= puVar4) {\n    puVar3 = puVar4;\n  }\n  ppuVar5 = param_1;\n  if ((CARRY8(param_2,__n) == false) && (CARRY8(param_2 + __n,(ulong)param_1[6]) == false)) {\n    puVar4 = puVar3;\n    ppuVar2 = (ulong **)call_chunkfun();\n    if (ppuVar2 != (ulong **)0x0) {\n      param_1[1] = (ulong *)ppuVar2;\n      ppuVar2[1] = puVar1;\n      param_1[4] = (ulong *)((long)ppuVar2 + (long)puVar3);\n      *ppuVar2 = (ulong *)((long)ppuVar2 + (long)puVar3);\n      puVar4 = (ulong *)((long)(ppuVar2 + 2) + (long)param_1[6] & ~(ulong)param_1[6]);\n      puVar3 = (ulong *)memcpy(puVar4,param_1[2],__n);\n      if ((*(byte *)(param_1 + 10) & 2) == 0) {\n        puVar3 = (ulong *)(~(ulong)param_1[6] & (long)(puVar1 + 2) + (long)param_1[6]);\n        if (param_1[2] == puVar3) {\n          ppuVar2[1] = (ulong *)puVar1[1];\n          puVar3 = (ulong *)call_freefun(param_1,puVar1);\n        }\n      }\n      *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xfd;\n      param_1[2] = puVar4;\n      param_1[3] = (ulong *)(__n + (long)puVar4);\n      return puVar3;\n    }\n  }\n  (*(code *)obstack_alloc_failed_handler)();\n  puVar3 = ppuVar5[1];\n  if (puVar3 != (ulong *)0x0) {\n    while ((puVar4 <= puVar3 || ((ulong *)*puVar3 < puVar4))) {\n      puVar3 = (ulong *)puVar3[1];\n      if (puVar3 == (ulong *)0x0) {\n        return (ulong *)0x0;\n      }\n    }\n    return (ulong *)0x1;\n  }\n  return puVar3;\n}\n\n", 
    "0010f060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106d80": "\nvoid readtokens0_free(long param_1)\n\n{\n  _obstack_free(param_1 + 0x18,0);\n  _obstack_free(param_1 + 0x70,0);\n  _obstack_free(param_1 + 200,0);\n  return;\n}\n\n", 
    "00107f90": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010f188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswspace(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswspace@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103100": "\nint compute_number_width(long param_1,int *param_2)\n\n{\n  bool bVar1;\n  ulong uVar2;\n  int iVar3;\n  int *piVar4;\n  int iVar5;\n  \n  if ((param_1 != 0) && (*param_2 < 1)) {\n    uVar2 = 0;\n    iVar5 = 1;\n    piVar4 = param_2 + param_1 * 0x26;\n    do {\n      if (*param_2 == 0) {\n        if ((param_2[8] & 0xf000U) == 0x8000) {\n          uVar2 = uVar2 + *(long *)(param_2 + 0xe);\n        }\n        else {\n          iVar5 = 7;\n        }\n      }\n      param_2 = param_2 + 0x26;\n    } while (piVar4 != param_2);\n    iVar3 = 1;\n    if (9 < uVar2) {\n      do {\n        iVar3 = iVar3 + 1;\n        bVar1 = 99 < uVar2;\n        uVar2 = uVar2 / 10;\n      } while (bVar1);\n    }\n    if (iVar3 <= iVar5) {\n      iVar3 = iVar5;\n    }\n    return iVar3;\n  }\n  return 1;\n}\n\n", 
    "0010f0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106850": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_0010dde8)();\n  return iVar1;\n}\n\n", 
    "00106970": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103460": "\nundefined wc(undefined4 param_1,long param_2,int *param_3,long param_4)\n\n{\n  char *pcVar1;\n  char cVar2;\n  ushort uVar3;\n  undefined *puVar4;\n  char cVar5;\n  byte bVar6;\n  int iVar7;\n  size_t sVar8;\n  long lVar9;\n  ushort **ppuVar10;\n  ulong uVar11;\n  __off_t _Var12;\n  undefined8 uVar13;\n  int *piVar14;\n  ulong uVar15;\n  char *pcVar16;\n  void *pvVar18;\n  long lVar19;\n  long *extraout_RDX;\n  long lVar20;\n  undefined *puVar21;\n  ulong uVar22;\n  char *pcVar23;\n  wchar_t __c;\n  long in_FS_OFFSET;\n  bool bVar24;\n  undefined local_4030 [16384];\n  char *pcVar17;\n  \n  puVar4 = &stack0xffffffffffffffd0;\n  do {\n    puVar21 = puVar4;\n    *(undefined8 *)(puVar21 + -0x1000) = *(undefined8 *)(puVar21 + -0x1000);\n    puVar4 = puVar21 + -0x1000;\n  } while (puVar21 + -0x1000 != local_4030);\n  *(undefined4 *)(puVar21 + -0x1040) = param_1;\n  *(long *)(puVar21 + -0x1038) = param_2;\n  *(undefined8 *)(puVar21 + 0x2ff0) = *(undefined8 *)(in_FS_OFFSET + 0x28);\n  *(long *)(puVar21 + -0x1030) = param_2;\n  if (param_2 == 0) {\n    *(undefined8 *)(puVar21 + -0x1090) = 0x103adf;\n    uVar13 = dcgettext(0,\"standard input\",5);\n    *(undefined8 *)(puVar21 + -0x1030) = uVar13;\n  }\n  *(undefined8 *)(puVar21 + -0x1090) = 0x1034bf;\n  sVar8 = __ctype_get_mb_cur_max();\n  bVar6 = print_bytes;\n  if (sVar8 < 2) {\n    puVar21[-0x1039] = 0;\n    if (print_bytes == 0) {\n      bVar6 = print_chars;\n    }\n  }\n  else {\n    puVar21[-0x1039] = print_chars;\n  }\n  if ((print_words == '\\0') && (puVar21[-0x1070] = print_linelength, print_linelength == '\\0')) {\n    if ((bVar6 == 1) && (puVar21[-0x1039] == '\\0')) {\n      if (print_lines != '\\0') {\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103ec4;\n        fdadvise(*(int *)(puVar21 + -0x1040),0,0,2);\nLAB_00103d33:\n        if (print_lines != '\\0') {\nLAB_00103d40:\n          *(undefined8 *)(puVar21 + -0x1050) = 0;\n          bVar24 = false;\n          pcVar23 = puVar21 + -0x1018;\n          *(undefined8 *)(puVar21 + -0x1080) = 0;\n          while( true ) {\n            *(undefined8 *)(puVar21 + -0x1090) = 0x103d79;\n            uVar11 = safe_read(*(undefined4 *)(puVar21 + -0x1040),pcVar23,0x4000);\n            if (uVar11 == 0) break;\n            if (uVar11 == 0xffffffffffffffff) {\n              uVar22 = 0;\n              uVar11 = 0;\n              *(undefined8 *)(puVar21 + -0x1090) = 0x103e6d;\n              uVar13 = quotearg_n_style_colon(0,3,*(undefined8 *)(puVar21 + -0x1030));\n              *(undefined8 *)(puVar21 + -0x1090) = 0x103e75;\n              piVar14 = __errno_location();\n              iVar7 = *piVar14;\n              lVar20 = 0;\n              *(undefined8 *)(puVar21 + -0x1090) = 0x103e8d;\n              error(0,iVar7,\"%s\",uVar13);\n              goto LAB_00103b10;\n            }\n            *(ulong *)(puVar21 + -0x1050) = *(long *)(puVar21 + -0x1050) + uVar11;\n            pcVar1 = pcVar23 + uVar11;\n            if (bVar24) {\n              lVar20 = *(long *)(puVar21 + -0x1080);\n              pcVar17 = pcVar23;\n              while( true ) {\n                *(undefined8 *)(puVar21 + -0x1090) = 0x103e10;\n                pvVar18 = memchr(pcVar17,10,(long)pcVar1 - (long)pcVar17);\n                if (pvVar18 == (void *)0x0) break;\n                pcVar17 = (char *)((long)pvVar18 + 1);\n                lVar20 = lVar20 + 1;\n              }\n              lVar9 = *(long *)(puVar21 + -0x1080);\n              *(long *)(puVar21 + -0x1080) = lVar20;\n              bVar24 = (ulong)(lVar20 - lVar9) <= uVar11 / 0xf;\n            }\n            else if (pcVar1 == pcVar23) {\n              bVar24 = true;\n            }\n            else {\n              lVar20 = *(long *)(puVar21 + -0x1080);\n              pcVar17 = pcVar23;\n              do {\n                pcVar16 = pcVar17 + 1;\n                lVar20 = lVar20 + (ulong)(*pcVar17 == '\\n');\n                pcVar17 = pcVar16;\n              } while (pcVar1 != pcVar16);\n              lVar9 = *(long *)(puVar21 + -0x1080);\n              *(long *)(puVar21 + -0x1080) = lVar20;\n              bVar24 = (ulong)(lVar20 - lVar9) <= uVar11 / 0xf;\n            }\n          }\n          puVar21[-0x1070] = 1;\n          uVar22 = 0;\n          lVar20 = 0;\n          goto LAB_00103b10;\n        }\n      }\n      iVar7 = *param_3;\n      if (0 < iVar7) {\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103c51;\n        iVar7 = fstat(*(int *)(puVar21 + -0x1040),(stat *)(param_3 + 2));\n        *param_3 = iVar7;\n      }\n      if (iVar7 == 0) {\n        iVar7 = param_3[8];\n        *(undefined8 *)(puVar21 + -0x1090) = 0x1038d9;\n        bVar6 = usable_st_size_isra_0(iVar7);\n        uVar11 = page_size;\n        if ((bVar6 == 0) || (uVar22 = *(ulong *)(param_3 + 0xe), (long)uVar22 < 0))\n        goto LAB_00103528;\n        *(ulong *)(puVar21 + -0x1050) = uVar22;\n        if (param_4 == -1) {\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103ccf;\n          uVar15 = lseek(*(int *)(puVar21 + -0x1040),0,1);\n          if (uVar22 % uVar11 != 0) {\n            if (*(ulong *)(puVar21 + -0x1050) <= uVar15 && uVar15 != *(ulong *)(puVar21 + -0x1050))\n            {\n              puVar21[-0x1070] = bVar6;\n              uVar22 = 0;\n              uVar11 = 0;\n              lVar20 = 0;\n              *(undefined8 *)(puVar21 + -0x1050) = 0;\n              *(undefined8 *)(puVar21 + -0x1080) = 0;\n              goto LAB_00103b10;\n            }\n            *(ulong *)(puVar21 + -0x1050) = *(long *)(puVar21 + -0x1050) - uVar15;\n            goto LAB_00103ca5;\n          }\n          bVar6 = (byte)~(byte)(uVar15 >> 0x38) >> 7;\n        }\n        else {\n          uVar15 = 0;\n          if (uVar22 % page_size != 0) {\nLAB_00103ca5:\n            puVar21[-0x1070] = bVar6;\n            uVar22 = 0;\n            uVar11 = 0;\n            lVar20 = 0;\n            *(undefined8 *)(puVar21 + -0x1080) = 0;\n            goto LAB_00103b10;\n          }\n        }\n        uVar11 = 0x201;\n        if (*(long *)(param_3 + 0x10) - 1U < 0x2000000000000000) {\n          uVar11 = *(long *)(param_3 + 0x10) + 1;\n        }\n        lVar20 = uVar22 - uVar22 % uVar11;\n        if ((lVar20 <= (long)uVar15) || (bVar6 == 0)) goto LAB_00103528;\n        *(undefined8 *)(puVar21 + -0x1090) = 0x10396a;\n        _Var12 = lseek(*(int *)(puVar21 + -0x1040),lVar20,1);\n        if (_Var12 < 0) goto LAB_00103528;\n        *(ulong *)(puVar21 + -0x1050) = lVar20 - uVar15;\n      }\n      else {\nLAB_00103528:\n        *(undefined8 *)(puVar21 + -0x1050) = 0;\n      }\n      iVar7 = *(int *)(puVar21 + -0x1040);\n      *(undefined8 *)(puVar21 + -0x1090) = 0x10354a;\n      fdadvise(iVar7,0,0,2);\n      lVar20 = *(long *)(puVar21 + -0x1050);\n      while( true ) {\n        *(undefined8 *)(puVar21 + -0x1090) = 0x1038ac;\n        uVar11 = safe_read(iVar7,puVar21 + -0x1018,0x4000);\n        if (uVar11 == 0) break;\n        if (uVar11 == 0xffffffffffffffff) {\n          uVar22 = 0;\n          *(long *)(puVar21 + -0x1050) = lVar20;\n          uVar11 = 0;\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103c72;\n          uVar13 = quotearg_n_style_colon(0,3,*(undefined8 *)(puVar21 + -0x1030));\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103c7a;\n          piVar14 = __errno_location();\n          iVar7 = *piVar14;\n          lVar20 = 0;\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103c92;\n          error(0,iVar7,\"%s\",uVar13);\n          *(undefined8 *)(puVar21 + -0x1080) = 0;\n          goto LAB_00103b10;\n        }\n        lVar20 = lVar20 + uVar11;\n      }\n      *(long *)(puVar21 + -0x1050) = lVar20;\n      uVar22 = 0;\n      lVar20 = 0;\n      *(undefined8 *)(puVar21 + -0x1080) = 0;\n      puVar21[-0x1070] = 1;\n      goto LAB_00103b10;\n    }\n    *(undefined8 *)(puVar21 + -0x1090) = 0x103d1f;\n    fdadvise(*(int *)(puVar21 + -0x1040),0,0,2);\n    if (puVar21[-0x1039] != '\\x01') {\n      if (bVar6 != 0) goto LAB_00103d33;\n      if (puVar21[-0x1039] == '\\0') goto LAB_00103d40;\n    }\n  }\n  else {\n    *(undefined8 *)(puVar21 + -0x1090) = 0x10356a;\n    fdadvise(*(int *)(puVar21 + -0x1040),0,0,2);\n  }\n  *(undefined8 *)(puVar21 + -0x1090) = 0x10356f;\n  sVar8 = __ctype_get_mb_cur_max();\n  if (sVar8 < 2) {\n    *(undefined8 *)(puVar21 + -0x1050) = 0;\n    uVar22 = 0;\n    uVar11 = 0;\n    *(undefined8 *)(puVar21 + -0x1080) = 0;\n    lVar20 = 0;\n    pcVar23 = puVar21 + -0x1018;\n    uVar15 = uVar22;\n    while( true ) {\n      *(undefined8 *)(puVar21 + -0x1090) = 0x103799;\n      lVar9 = safe_read(*(undefined4 *)(puVar21 + -0x1040),pcVar23,0x4000);\n      if (lVar9 == 0) break;\n      if (lVar9 == -1) {\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103c20;\n        uVar13 = quotearg_n_style_colon(0,3,*(undefined8 *)(puVar21 + -0x1030));\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103c28;\n        piVar14 = __errno_location();\n        iVar7 = *piVar14;\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103c3d;\n        error(0,iVar7,\"%s\",uVar13);\n        puVar21[-0x1070] = 0;\n        goto LAB_00103bee;\n      }\n      *(long *)(puVar21 + -0x1050) = *(long *)(puVar21 + -0x1050) + lVar9;\n      pcVar1 = pcVar23 + lVar9;\n      *(char **)(puVar21 + -0x1078) = pcVar23;\n      do {\n        cVar2 = *pcVar23;\n        pcVar23 = pcVar23 + 1;\n        switch(cVar2) {\n        case '\\t':\n          uVar22 = (uVar22 & 0xfffffffffffffff8) + 8;\n          break;\n        case '\\n':\n          *(long *)(puVar21 + -0x1080) = *(long *)(puVar21 + -0x1080) + 1;\n        case '\\f':\n        case '\\r':\n          if (uVar11 < uVar22) {\n            uVar11 = uVar22;\n          }\n          uVar22 = 0;\n          break;\n        case '\\v':\n          break;\n        default:\n          *(ulong *)(puVar21 + -0x1088) = uVar11;\n          *(undefined8 *)(puVar21 + -0x1090) = 0x1037f9;\n          ppuVar10 = __ctype_b_loc();\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103804;\n          bVar6 = to_uchar((int)cVar2);\n          uVar11 = *(ulong *)(puVar21 + -0x1088);\n          if (((*ppuVar10)[bVar6] & 0x4000) != 0) {\n            uVar22 = uVar22 + 1;\n            if (((*ppuVar10)[bVar6] & 0x2000) != 0) break;\n            lVar20 = 1;\n          }\n          goto LAB_00103830;\n        case ' ':\n          uVar22 = uVar22 + 1;\n        }\n        uVar15 = uVar15 + lVar20;\n        lVar20 = 0;\nLAB_00103830:\n      } while (pcVar1 != pcVar23);\n      pcVar23 = *(char **)(puVar21 + -0x1078);\n    }\n    puVar21[-0x1070] = 1;\nLAB_00103bee:\n    if (uVar22 <= uVar11) {\n      uVar22 = uVar11;\n    }\n    lVar20 = uVar15 + lVar20;\n    uVar11 = 0;\n  }\n  else {\n    puVar21[-0x1088] = 0;\n    lVar20 = 0;\n    *(undefined8 *)(puVar21 + -0x1020) = 0;\n    bVar24 = false;\n    *(undefined8 *)(puVar21 + -0x1078) = 0;\n    *(undefined8 *)(puVar21 + -0x1058) = 0;\n    *(undefined8 *)(puVar21 + -0x1050) = 0;\n    *(undefined8 *)(puVar21 + -0x1060) = 0;\n    *(undefined8 *)(puVar21 + -0x1080) = 0;\n    *(undefined8 *)(puVar21 + -0x1068) = 0;\n    *(undefined **)(puVar21 + -0x1048) = puVar21 + -0x1018;\nLAB_001035d0:\n    *(undefined8 *)(puVar21 + -0x1090) = 0x1035ea;\n    lVar9 = safe_read(*(undefined4 *)(puVar21 + -0x1040),*(long *)(puVar21 + -0x1048) + lVar20,\n                      0x4000 - lVar20);\n    if (lVar9 != 0) {\n      if (lVar9 == -1) {\n        uVar11 = *(ulong *)(puVar21 + -0x1068);\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103bb2;\n        uVar13 = quotearg_n_style_colon(0,3,*(undefined8 *)(puVar21 + -0x1030));\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103bba;\n        piVar14 = __errno_location();\n        iVar7 = *piVar14;\n        *(undefined8 *)(puVar21 + -0x1090) = 0x103bcf;\n        error(0,iVar7,\"%s\",uVar13);\n        puVar21[-0x1070] = 0;\n        goto LAB_00103af3;\n      }\n      *(long *)(puVar21 + -0x1050) = *(long *)(puVar21 + -0x1050) + lVar9;\n      pcVar23 = *(char **)(puVar21 + -0x1048);\n      lVar20 = lVar20 + lVar9;\n      do {\n        if (bVar24) {\nLAB_00103980:\n          uVar13 = *(undefined8 *)(puVar21 + -0x1020);\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103998;\n          lVar9 = rpl_mbrtowc(puVar21 + -0x1024,pcVar23,lVar20,(mbstate_t *)(puVar21 + -0x1020));\n          if (lVar9 != -2) {\n            if (lVar9 != -1) {\n              *(long *)(puVar21 + -0x1070) = lVar9;\n              *(undefined8 *)(puVar21 + -0x1090) = 0x1039b9;\n              iVar7 = mbsinit((mbstate_t *)(puVar21 + -0x1020));\n              lVar9 = *(long *)(puVar21 + -0x1070);\n              bVar24 = iVar7 == 0;\n              if (lVar9 == 0) {\n                *(undefined4 *)(puVar21 + -0x1024) = 0;\n                __c = L'\\0';\n                lVar9 = 1;\n              }\n              else {\n                __c = *(wchar_t *)(puVar21 + -0x1024);\n                switch(__c) {\n                case L'\\t':\n                  goto switchD_00103a44_caseD_9;\n                case L'\\n':\n                  goto switchD_00103a44_caseD_a;\n                case L'\\v':\n                  goto switchD_00103a44_caseD_b;\n                case L'\\f':\n                case L'\\r':\n                  goto switchD_00103a44_caseD_c;\n                case L' ':\n                  goto switchD_00103a44_caseD_20;\n                }\n              }\n              *(long *)(puVar21 + -0x1070) = lVar9;\n              *(undefined8 *)(puVar21 + -0x1090) = 0x1039e5;\n              iVar7 = iswprint(__c);\n              lVar9 = *(long *)(puVar21 + -0x1070);\n              if (iVar7 != 0) {\n                if (print_linelength != '\\0') {\n                  *(undefined8 *)(puVar21 + -0x1090) = 0x103aac;\n                  iVar7 = wcwidth(__c);\n                  lVar9 = *(long *)(puVar21 + -0x1070);\n                  lVar19 = (long)iVar7 + *(long *)(puVar21 + -0x1078);\n                  if (iVar7 < 1) {\n                    lVar19 = *(long *)(puVar21 + -0x1078);\n                  }\n                  *(long *)(puVar21 + -0x1078) = lVar19;\n                }\n                *(long *)(puVar21 + -0x1070) = lVar9;\n                *(undefined8 *)(puVar21 + -0x1090) = 0x103a0d;\n                iVar7 = iswspace(*(wint_t *)(puVar21 + -0x1024));\n                lVar9 = *(long *)(puVar21 + -0x1070);\n                if (iVar7 != 0) goto switchD_00103a44_caseD_b;\n                puVar21[-0x1088] = 1;\n              }\n              goto LAB_001036c0;\n            }\n            pcVar23 = pcVar23 + 1;\n            lVar9 = -1;\n            bVar24 = true;\n            goto LAB_001036cc;\n          }\n          *(undefined8 *)(puVar21 + -0x1020) = uVar13;\n          if (lVar20 != 0) {\n            if (lVar20 == 0x4000) {\n              pcVar23 = pcVar23 + 1;\n              lVar20 = 0x3fff;\n            }\n            *(undefined8 *)(puVar21 + -0x1090) = 0x103a99;\n            __memmove_chk(*(undefined8 *)(puVar21 + -0x1048),pcVar23,lVar20,0x4001);\n          }\n          bVar24 = true;\n          break;\n        }\n        cVar2 = *pcVar23;\n        iVar7 = (int)cVar2;\n        *(undefined8 *)(puVar21 + -0x1090) = 0x10362d;\n        cVar5 = is_basic(iVar7);\n        if (cVar5 == '\\0') goto LAB_00103980;\n        *(int *)(puVar21 + -0x1024) = iVar7;\n        switch(cVar2) {\n        case '\\t':\n          lVar9 = 1;\nswitchD_00103a44_caseD_9:\n          *(ulong *)(puVar21 + -0x1078) = (*(ulong *)(puVar21 + -0x1078) & 0xfffffffffffffff8) + 8;\n          break;\n        case '\\n':\n          lVar9 = 1;\nswitchD_00103a44_caseD_a:\n          *(long *)(puVar21 + -0x1080) = *(long *)(puVar21 + -0x1080) + 1;\n          goto switchD_00103a44_caseD_c;\n        case '\\v':\n          lVar9 = 1;\n          break;\n        case '\\f':\n        case '\\r':\n          lVar9 = 1;\nswitchD_00103a44_caseD_c:\n          uVar11 = *(ulong *)(puVar21 + -0x1078);\n          *(undefined8 *)(puVar21 + -0x1078) = 0;\n          if (uVar11 <= *(ulong *)(puVar21 + -0x1058)) {\n            uVar11 = *(ulong *)(puVar21 + -0x1058);\n          }\n          *(ulong *)(puVar21 + -0x1058) = uVar11;\n          break;\n        default:\n          puVar21[-0x1070] = cVar5;\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103689;\n          __ctype_b_loc();\n          *(undefined8 *)(puVar21 + -0x1090) = 0x103694;\n          bVar6 = to_uchar(iVar7);\n          uVar3 = *(ushort *)(*extraout_RDX + (ulong)bVar6 * 2);\n          lVar9 = 1;\n          if ((uVar3 & 0x4000) != 0) {\n            *(long *)(puVar21 + -0x1078) = *(long *)(puVar21 + -0x1078) + 1;\n            if ((uVar3 & 0x2000) != 0) break;\n            puVar21[-0x1088] = puVar21[-0x1070];\n          }\n          goto LAB_001036c0;\n        case ' ':\n          lVar9 = 1;\nswitchD_00103a44_caseD_20:\n          *(long *)(puVar21 + -0x1078) = *(long *)(puVar21 + -0x1078) + 1;\n        }\nswitchD_00103a44_caseD_b:\n        bVar6 = puVar21[-0x1088];\n        puVar21[-0x1088] = 0;\n        *(ulong *)(puVar21 + -0x1060) = *(long *)(puVar21 + -0x1060) + (ulong)bVar6;\nLAB_001036c0:\n        *(long *)(puVar21 + -0x1068) = *(long *)(puVar21 + -0x1068) + 1;\n        pcVar23 = pcVar23 + lVar9;\n        lVar9 = -lVar9;\nLAB_001036cc:\n        lVar20 = lVar20 + lVar9;\n      } while (lVar20 != 0);\n      goto LAB_001035d0;\n    }\n    puVar21[-0x1070] = 1;\n    uVar11 = *(ulong *)(puVar21 + -0x1068);\nLAB_00103af3:\n    uVar22 = *(ulong *)(puVar21 + -0x1078);\n    if (*(ulong *)(puVar21 + -0x1078) <= *(ulong *)(puVar21 + -0x1058)) {\n      uVar22 = *(ulong *)(puVar21 + -0x1058);\n    }\n    lVar20 = (ulong)(byte)puVar21[-0x1088] + *(long *)(puVar21 + -0x1060);\n  }\nLAB_00103b10:\n  uVar15 = *(ulong *)(puVar21 + -0x1050);\n  lVar9 = *(long *)(puVar21 + -0x1080);\n  if ((byte)puVar21[-0x1039] < print_chars) {\n    uVar11 = uVar15;\n  }\n  *(undefined8 *)(puVar21 + -0x1090) = 0x103b42;\n  write_counts(lVar9,lVar20,uVar11,uVar15,uVar22,*(undefined8 *)(puVar21 + -0x1038));\n  total_lines = total_lines + lVar9;\n  total_words = total_words + lVar20;\n  total_chars = total_chars + uVar11;\n  total_bytes = total_bytes + uVar15;\n  if (max_line_length < uVar22) {\n    max_line_length = uVar22;\n  }\n  if (*(long *)(puVar21 + 0x2ff0) == *(long *)(in_FS_OFFSET + 0x28)) {\n    return puVar21[-0x1070];\n  }\n                    /* WARNING: Subroutine does not return */\n  *(undefined8 *)(puVar21 + -0x1090) = 0x103ece;\n  __stack_chk_fail();\n}\n\n", 
    "0010f0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107ad0": "\nvoid call_chunkfun(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x00107ade. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x38))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00107ae3. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x38))(param_2);\n  return;\n}\n\n", 
    "00107bf0": "\nvoid _obstack_begin(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                   undefined8 param_5)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) & 0xfe;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  _obstack_begin_worker();\n  return;\n}\n\n", 
    "0010f150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001045f0": "\nchar * umaxtostr(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getdelim(char **__lineptr,size_t *__n,int __delimiter,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getdelim_0010dfa0)();\n  return _Var1;\n}\n\n", 
    "001081b0": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "0010f158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswcntrl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___0010dfc8;\n  if (PTR___gmon_start___0010dfc8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___0010dfc8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00106600": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00106840": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00102480": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010dde0)();\n  return;\n}\n\n", 
    "00103450": "\nbool usable_st_size_isra_0(uint param_1)\n\n{\n  return (param_1 & 0xd000) == 0x8000;\n}\n\n", 
    "0010f0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f160": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001044c0": "\nvoid argv_iter_free(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    free((void *)param_1[2]);\n  }\n  (*(code *)PTR_free_0010dfb0)(param_1);\n  return;\n}\n\n", 
    "0010f040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001081a0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "0010f168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a40": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107800": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010ded8)();\n  return iVar1;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010de48)();\n  return pcVar1;\n}\n\n", 
    "0010f1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00102430": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010dfe0)();\n  return;\n}\n\n", 
    "0010f0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* posix_fadvise@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sysinfo(sysinfo *__info)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sysinfo_0010df68)();\n  return iVar1;\n}\n\n", 
    "00107dd0": "\nlong _obstack_memory_used(long param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  \n  lVar2 = 0;\n  for (plVar1 = *(long **)(param_1 + 8); plVar1 != (long *)0x0; plVar1 = (long *)plVar1[1]) {\n    lVar2 = lVar2 + (*plVar1 - (long)plVar1);\n  }\n  return lVar2;\n}\n\n", 
    "0010f1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010de98)();\n  return iVar1;\n}\n\n", 
    "001024d0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010de08)();\n  return;\n}\n\n", 
    "0010f130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107d20": "\nulong * _obstack_allocated_p(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  if (puVar1 == (ulong *)0x0) {\n    return puVar1;\n  }\n  while ((param_2 <= puVar1 || ((ulong *)*puVar1 < param_2))) {\n    puVar1 = (ulong *)puVar1[1];\n    if (puVar1 == (ulong *)0x0) {\n      return (ulong *)0x0;\n    }\n  }\n  return (ulong *)0x1;\n}\n\n", 
    "00107f60": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "0010f138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102780": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010df60)();\n  return;\n}\n\n", 
    "0010f1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_0010ded0)();\n  return iVar1;\n}\n\n", 
    "0010f0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* read@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0010de40)();\n  return pcVar1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010dfd0)();\n  return pvVar1;\n}\n\n", 
    "00106340": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "00106bb0": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00107ee0": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00107670": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "0010f1f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103190": "\nvoid emit_stdin_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010f0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010de90)();\n  return iVar1;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010de00)();\n  return iVar1;\n}\n\n", 
    "0010f140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* wcwidth@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107e30": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00104a40": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00107f50": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010f148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010dfb0)();\n  return;\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010ddc8)();\n  return piVar1;\n}\n\n", 
    "00103ed0": "\nulong wc_file(char *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  \n  if ((param_1 != (char *)0x0) && ((*param_1 != '-' || (param_1[1] != '\\0')))) {\n    iVar1 = open(param_1,0);\n    if (iVar1 != -1) {\n      uVar2 = wc(iVar1,param_1,param_2,0);\n      iVar1 = close(iVar1);\n      if (iVar1 == 0) {\n        return (ulong)uVar2;\n      }\n    }\n    uVar4 = quotearg_n_style_colon(0,3,param_1);\n    piVar5 = __errno_location();\n    error(0,*piVar5,\"%s\",uVar4);\n    return 0;\n  }\n  have_read_stdin = 1;\n  uVar3 = wc(0,param_1,param_2,0xffffffffffffffff);\n  return uVar3;\n}\n\n", 
    "0010f1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sysinfo(sysinfo *__info)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sysinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f118": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcwidth_0010dee8)();\n  return iVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0010de58)();\n  return;\n}\n\n", 
    "00106be0": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010f1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getpagesize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001045b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fdadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = posix_fadvise(__fd,__offset,__len,__advise);\n  return iVar1;\n}\n\n", 
    "0010f1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010de18)();\n  return sVar1;\n}\n\n", 
    "00107e60": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00104500": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00104588;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00104588:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "0010f110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* feof@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010de50)();\n  return _Var1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010ddc0)();\n  return;\n}\n\n", 
    "0010f1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fgetc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107ba0": "\nvoid print_and_abort(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  exit(exit_failure);\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_0010dee0)();\n  return iVar1;\n}\n\n", 
    "00106bd0": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00107690": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "0010f1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024e0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010de10)();\n  return;\n}\n\n", 
    "001047e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble physmem_available(void)\n\n{\n  int iVar1;\n  long lVar2;\n  long in_FS_OFFSET;\n  double dVar3;\n  double dVar4;\n  sysinfo local_88;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = sysconf(0x56);\n  dVar3 = (double)lVar2;\n  lVar2 = sysconf(0x1e);\n  if ((dVar3 < 0.0) || (dVar4 = (double)lVar2, dVar4 < 0.0)) {\n    iVar1 = sysinfo(&local_88);\n    if (iVar1 != 0) {\n      dVar3 = (double)physmem_total();\n      dVar3 = dVar3 * _DAT_00109948;\n      goto LAB_00104889;\n    }\n    if ((long)local_88.freeram < 0) {\n      dVar3 = (double)(local_88.freeram >> 1 | (ulong)((uint)local_88.freeram & 1));\n      dVar3 = dVar3 + dVar3;\n      if ((long)local_88.bufferram < 0) goto LAB_001048e3;\nLAB_0010486b:\n      dVar4 = (double)local_88.bufferram;\n    }\n    else {\n      dVar3 = (double)local_88.freeram;\n      if (-1 < (long)local_88.bufferram) goto LAB_0010486b;\nLAB_001048e3:\n      dVar4 = (double)(local_88.bufferram >> 1 | (ulong)((uint)local_88.bufferram & 1));\n      dVar4 = dVar4 + dVar4;\n    }\n    dVar3 = dVar3 + dVar4;\n    dVar4 = (double)(ulong)local_88.mem_unit;\n  }\n  dVar3 = dVar3 * dVar4;\nLAB_00104889:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return dVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106a00": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00107c10": "\nvoid _obstack_begin_1(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                     undefined8 param_5,undefined8 param_6)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 1;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  *(undefined8 *)(param_1 + 0x48) = param_6;\n  _obstack_begin_worker();\n  return;\n}\n\n", 
    "00107e50": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0010f120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "0010f000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104fa0": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010df48)();\n  return iVar1;\n}\n\n", 
    "00107eb0": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00104250": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = program_name;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n\",5\n                     );\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Print newline, word, and byte counts for each FILE, and a total line if\\nmore than one FILE is specified.  A word is a non-zero-length sequence of\\ncharacters delimited by white space.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_stdin_note();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nThe options below may be used to select which counts are printed, always in\\nthe following order: newline, word, character, byte, maximum line length.\\n  -c, --bytes            print the byte counts\\n  -m, --chars            print the character counts\\n  -l, --lines            print the newline counts\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --files0-from=F    read input from the files specified by\\n                           NUL-terminated names in file F;\\n                           If F is - then read names from standard input\\n  -L, --max-line-length  print the maximum display width\\n  -w, --words            print the word counts\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00107fd0": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010f218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103280": "\nvoid write_counts(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,char *param_6)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  undefined5 *puVar3;\n  undefined5 *puVar4;\n  long in_FS_OFFSET;\n  undefined auStack_58 [24];\n  long local_40;\n  \n  puVar3 = (undefined5 *)0x1098d9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (print_lines != '\\0') {\n    uVar2 = umaxtostr(param_1,auStack_58);\n    puVar3 = &format_sp_int_8000;\n    __printf_chk(1,0x1098d9,number_width,uVar2);\n  }\n  puVar4 = puVar3;\n  if (print_words != '\\0') {\n    uVar2 = umaxtostr(param_2,auStack_58);\n    puVar4 = &format_sp_int_8000;\n    __printf_chk(1,puVar3,number_width,uVar2);\n  }\n  puVar3 = puVar4;\n  if (print_chars != '\\0') {\n    uVar2 = umaxtostr(param_3,auStack_58);\n    puVar3 = &format_sp_int_8000;\n    __printf_chk(1,puVar4,number_width,uVar2);\n  }\n  puVar4 = puVar3;\n  if (print_bytes != '\\0') {\n    uVar2 = umaxtostr(param_4,auStack_58);\n    puVar4 = &format_sp_int_8000;\n    __printf_chk(1,puVar3,number_width,uVar2);\n  }\n  if (print_linelength != '\\0') {\n    uVar2 = umaxtostr(param_5,auStack_58);\n    __printf_chk(1,puVar4,number_width,uVar2);\n  }\n  if (param_6 != (char *)0x0) {\n    pcVar1 = strchr(param_6,10);\n    if (pcVar1 != (char *)0x0) {\n      param_6 = (char *)quotearg_n_style_colon(0,3,param_6);\n    }\n    __printf_chk(1,\" %s\",param_6);\n  }\n  putchar_unlocked(10);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0010de78)();\n  return iVar1;\n}\n\n", 
    "001049d0": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010df98)();\n  return iVar1;\n}\n\n", 
    "00107e00": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "001026d0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010df08)();\n  return;\n}\n\n", 
    "00104b30": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "001074a0": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001030e0": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0010df40)();\n  return iVar1;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0010deb0)();\n  return iVar1;\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010de20)();\n  return sVar1;\n}\n\n", 
    "001080f0": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "0010f210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107ea0": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00103030": "\n/* WARNING: Removing unreachable block (ram,0x00103043) */\n/* WARNING: Removing unreachable block (ram,0x0010304f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00106540": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "00106db0": "\nulong readtokens0(FILE *param_1,long param_2)\n\n{\n  long lVar1;\n  ulong uVar2;\n  int iVar3;\n  undefined *puVar4;\n  ulong uVar5;\n  undefined4 extraout_var;\n  undefined8 *puVar6;\n  \nLAB_00106dde:\n  do {\n    iVar3 = fgetc(param_1);\n    puVar4 = *(undefined **)(param_2 + 0x30);\n    if (iVar3 == -1) {\n      if (puVar4 != *(undefined **)(param_2 + 0x28)) {\n        if (puVar4 == *(undefined **)(param_2 + 0x38)) {\n          _obstack_newchunk(param_2 + 0x18,1);\n          puVar4 = *(undefined **)(param_2 + 0x30);\n        }\n        *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n        *puVar4 = 0;\n        save_token(param_2);\n      }\n      puVar6 = *(undefined8 **)(param_2 + 0x88);\n      if ((ulong)(*(long *)(param_2 + 0x90) - (long)puVar6) < 8) {\n        _obstack_newchunk(param_2 + 0x70,8);\n        puVar6 = *(undefined8 **)(param_2 + 0x88);\n      }\n      *puVar6 = 0;\n      lVar1 = *(long *)(param_2 + 0x88) + 8;\n      if (lVar1 == *(long *)(param_2 + 0x80)) {\n        *(byte *)(param_2 + 0xc0) = *(byte *)(param_2 + 0xc0) | 2;\n      }\n      uVar5 = lVar1 + *(ulong *)(param_2 + 0xa0) & ~*(ulong *)(param_2 + 0xa0);\n      uVar2 = *(ulong *)(param_2 + 0x90);\n      *(ulong *)(param_2 + 0x88) = uVar5;\n      if (uVar2 - *(long *)(param_2 + 0x78) < uVar5 - *(long *)(param_2 + 0x78)) {\n        *(ulong *)(param_2 + 0x88) = uVar2;\n        uVar5 = uVar2;\n      }\n      *(long *)(param_2 + 8) = *(long *)(param_2 + 0x80);\n      lVar1 = *(long *)(param_2 + 0xd8);\n      *(ulong *)(param_2 + 0x80) = uVar5;\n      if (*(long *)(param_2 + 0xe0) == lVar1) {\n        *(byte *)(param_2 + 0x118) = *(byte *)(param_2 + 0x118) | 2;\n      }\n      uVar5 = *(long *)(param_2 + 0xe0) + *(ulong *)(param_2 + 0xf8) & ~*(ulong *)(param_2 + 0xf8);\n      uVar2 = *(ulong *)(param_2 + 0xe8);\n      *(ulong *)(param_2 + 0xe0) = uVar5;\n      if (uVar2 - *(long *)(param_2 + 0xd0) < uVar5 - *(long *)(param_2 + 0xd0)) {\n        *(ulong *)(param_2 + 0xe0) = uVar2;\n        uVar5 = uVar2;\n      }\n      *(ulong *)(param_2 + 0xd8) = uVar5;\n      *(long *)(param_2 + 0x10) = lVar1;\n      iVar3 = ferror(param_1);\n      return CONCAT44(extraout_var,iVar3) & 0xffffffffffffff00 | (ulong)(iVar3 == 0);\n    }\n    if (*(undefined **)(param_2 + 0x38) != puVar4) goto LAB_00106dd0;\n    _obstack_newchunk(param_2 + 0x18,1);\n    puVar4 = *(undefined **)(param_2 + 0x30);\n    *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n    *puVar4 = (char)iVar3;\n  } while (iVar3 != 0);\n  goto LAB_00106e20;\nLAB_00106dd0:\n  *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n  *puVar4 = (char)iVar3;\n  if (iVar3 == 0) {\nLAB_00106e20:\n    save_token(param_2);\n  }\n  goto LAB_00106dde;\n}\n\n", 
    "00106780": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "00107870": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0010f108": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __memmove_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __memmove_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_0010df00)();\n  return iVar1;\n}\n\n", 
    "0010f1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong sysconf(int __name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* sysconf@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010de70)();\n  return iVar1;\n}\n\n", 
    "00106d00": "\nvoid readtokens0_init(undefined8 *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  puVar2 = PTR_malloc_0010dfd0;\n  puVar1 = PTR_free_0010dfb0;\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  _obstack_begin(param_1 + 3,0,0,puVar2,puVar1);\n  _obstack_begin(param_1 + 0xe,0,0,puVar2,puVar1);\n  _obstack_begin(param_1 + 0x19,0,0,puVar2,puVar1);\n  return;\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010df90)();\n  return iVar1;\n}\n\n", 
    "001076d0": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "0010f1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102730": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010df38)();\n  return;\n}\n\n", 
    "0010f220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010dea8)();\n  return pvVar1;\n}\n\n", 
    "00104910": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010f100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong sysconf(int __name)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_sysconf_0010df58)();\n  return lVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010dec8)();\n  return pvVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010de38)();\n  return sVar1;\n}\n\n", 
    "00107ed0": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00104390": "\nvoid argv_iter_init_argv(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)malloc(0x30);\n  if (puVar1 != (undefined8 *)0x0) {\n    *puVar1 = 0;\n    puVar1[4] = param_1;\n    puVar1[5] = param_1;\n  }\n  return;\n}\n\n", 
    "00103060": "\n/* WARNING: Removing unreachable block (ram,0x00103084) */\n/* WARNING: Removing unreachable block (ram,0x00103090) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010df18)();\n  return pcVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0010de88)();\n  return sVar1;\n}\n\n", 
    "001024b0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ddf8)();\n  return;\n}\n\n", 
    "00106c10": "\nvoid save_token(long *param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  lVar1 = param_1[6];\n  lVar2 = param_1[5];\n  if (lVar1 == lVar2) {\n    *(byte *)(param_1 + 0xd) = *(byte *)(param_1 + 0xd) | 2;\n  }\n  uVar3 = param_1[7];\n  uVar4 = lVar1 + param_1[9] & ~param_1[9];\n  param_1[6] = uVar4;\n  if (uVar3 - param_1[4] < uVar4 - param_1[4]) {\n    param_1[6] = uVar3;\n    uVar4 = uVar3;\n  }\n  param_1[5] = uVar4;\n  plVar5 = (long *)param_1[0x11];\n  if ((ulong)(param_1[0x12] - (long)plVar5) < 8) {\n    _obstack_newchunk(param_1 + 0xe,8);\n    plVar5 = (long *)param_1[0x11];\n  }\n  *plVar5 = lVar2;\n  plVar5 = (long *)param_1[0x1c];\n  param_1[0x11] = param_1[0x11] + 8;\n  if ((ulong)(param_1[0x1d] - (long)plVar5) < 8) {\n    _obstack_newchunk(param_1 + 0x19,8);\n    plVar5 = (long *)param_1[0x1c];\n  }\n  *plVar5 = (lVar1 - lVar2) + -1;\n  param_1[0x1c] = param_1[0x1c] + 8;\n  *param_1 = *param_1 + 1;\n  return;\n}\n\n", 
    "001075e0": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00104c70": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102520": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010de30)();\n  return;\n}\n\n", 
    "00104700": "\ndouble physmem_total(void)\n\n{\n  int iVar1;\n  long lVar2;\n  long in_FS_OFFSET;\n  double dVar3;\n  double dVar4;\n  sysinfo local_88;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = sysconf(0x55);\n  dVar3 = (double)lVar2;\n  lVar2 = sysconf(0x1e);\n  if ((dVar3 < 0.0) || (dVar4 = (double)lVar2, dVar4 < 0.0)) {\n    iVar1 = sysinfo(&local_88);\n    dVar3 = DAT_00109940;\n    if (iVar1 != 0) goto LAB_00104776;\n    if ((long)local_88.totalram < 0) {\n      dVar3 = (double)(local_88.totalram >> 1 | (ulong)((uint)local_88.totalram & 1));\n      dVar3 = dVar3 + dVar3;\n    }\n    else {\n      dVar3 = (double)local_88.totalram;\n    }\n    dVar4 = (double)(ulong)local_88.mem_unit;\n  }\n  dVar3 = dVar3 * dVar4;\nLAB_00104776:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return dVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0010df50)();\n  return pFVar1;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_feof_0010dec0)();\n  return iVar1;\n}\n\n", 
    "00107530": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107ec0": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106560": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "0010f208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00107890": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106680": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswcntrl_0010ddf0)();\n  return iVar1;\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010df10)();\n  return pvVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_0010de80)();\n  return pvVar1;\n}\n\n", 
    "00106c00": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "00104a20": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00107f30": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "001064e0": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001030f0": "\nundefined4 to_uchar(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00102630": "\nvoid __memmove_chk(void)\n\n{\n  (*(code *)PTR___memmove_chk_0010deb8)();\n  return;\n}\n\n", 
    "00102510": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010de28)();\n  return;\n}\n\n", 
    "0010f200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getdelim(char **__lineptr,size_t *__n,int __delimiter,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getdelim@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}