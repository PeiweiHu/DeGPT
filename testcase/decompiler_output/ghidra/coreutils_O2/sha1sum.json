{
    "00103000": "\nundefined8 bsd_split_3(char *param_1,long param_2,char **param_3,char **param_4,char param_5)\n\n{\n  char cVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long lVar4;\n  char *pcVar5;\n  \n  if (param_2 == 0) {\n    return 0;\n  }\n  for (param_2 = param_2 + -1; param_2 != 0; param_2 = param_2 + -1) {\n    pcVar5 = param_1 + param_2;\n    if (param_1[param_2] == ')') goto LAB_00103031;\n  }\n  if (*param_1 == ')') {\n    param_2 = 0;\n    pcVar5 = param_1;\nLAB_00103031:\n    *param_4 = param_1;\n    if ((param_5 == '\\0') || (lVar4 = filename_unescape(param_1,param_2), lVar4 != 0)) {\n      *pcVar5 = '\\0';\n      cVar1 = param_1[param_2 + 1];\n      param_2 = param_2 + 1;\n      if (cVar1 != ' ') goto LAB_0010305d;\n      do {\n        do {\n          param_2 = param_2 + 1;\n          cVar1 = param_1[param_2];\n        } while (cVar1 == ' ');\nLAB_0010305d:\n      } while (cVar1 == '\\t');\n      if (cVar1 == '=') {\n        pcVar5 = param_1 + param_2 + 1;\n        if ((*pcVar5 == ' ') || (*pcVar5 == '\\t')) {\n          pcVar2 = param_1 + param_2 + 2;\n          do {\n            do {\n              pcVar5 = pcVar2;\n              pcVar2 = pcVar5 + 1;\n            } while (*pcVar5 == ' ');\n          } while (*pcVar5 == '\\t');\n        }\n        *param_3 = pcVar5;\n        uVar3 = hex_digits(pcVar5);\n        return uVar3;\n      }\n    }\n  }\n  return 0;\n}\n\n", 
    "00107840": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00108d80": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00108b40": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00102390": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010dff0)();\n  return;\n}\n\n", 
    "00107af0": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "001077c0": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "001089d0": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "0010f090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102705": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102d90": "\n/* WARNING: Removing unreachable block (ram,0x00102db4) */\n/* WARNING: Removing unreachable block (ram,0x00102dc0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00102700": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00108800": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint rpl_fcntl(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00108884;\n  }\n  if (have_dupfd_cloexec_3397 < 0) {\n    iVar2 = rpl_fcntl(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, have_dupfd_cloexec_3397 != -1)) goto LAB_00108884;\nLAB_001088c1:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00108884;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = rpl_fcntl(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00108884;\n        have_dupfd_cloexec_3397 = -1;\n        __fd = iVar2;\n        goto LAB_001088c1;\n      }\n    }\n    have_dupfd_cloexec_3397 = 1;\n  }\nLAB_00108884:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108c70": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010de18)();\n  return;\n}\n\n", 
    "00107ae0": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00108480": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00108ae0": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00108710": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00105dd0": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00108e80": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00107860": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104110": "\nvoid sha1_init_ctx(undefined8 *param_1)\n\n{\n  param_1[3] = 0;\n  *param_1 = 0xefcdab8967452301;\n  param_1[1] = 0x1032547698badcfe;\n  param_1[2] = 0xc3d2e1f0;\n  return;\n}\n\n", 
    "00108c40": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010dfa8)();\n  return iVar1;\n}\n\n", 
    "001077e0": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "0010f190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00102720": "\nbyte main(uint param_1,undefined8 *param_2)\n\n{\n  undefined *puVar1;\n  bool bVar2;\n  bool bVar3;\n  byte bVar4;\n  int iVar5;\n  int iVar6;\n  undefined8 uVar7;\n  int *piVar8;\n  long lVar9;\n  char **ppcVar10;\n  char *pcVar11;\n  ulong uVar12;\n  char *__s;\n  uint *puVar13;\n  undefined *unaff_R15;\n  long in_FS_OFFSET;\n  undefined auVar14 [16];\n  char **local_80;\n  byte local_72;\n  undefined4 local_70;\n  int local_6c;\n  undefined local_59;\n  undefined local_58 [24];\n  long local_40;\n  \n  puVar13 = &switchD_00102801::switchdataD_00109bc0;\n  __s = (char *)(ulong)param_1;\n  iVar6 = -1;\n  bVar2 = false;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\");\n  textdomain(\"coreutils\");\n  atexit(close_stdout);\n  setvbuf(stdout,(char *)0x0,1,0);\n  bVar3 = false;\n  do {\n    iVar5 = getopt_long(__s,param_2,\"bctwz\",long_options,0);\n    if (iVar5 == -1) {\nLAB_001028f3:\n      min_digest_line_length = 0x2a;\n      digest_hex_bytes = 0x28;\n      if ((iVar6 == 0) && (bVar3)) {\n        pcVar11 = \"--tag does not support --text mode\";\n        goto LAB_001029a0;\n      }\n      if (delim == 10) {\n        if ((bVar2) && (pcVar11 = \"the --tag option is meaningless when verifying checksums\", bVar3)\n           ) goto LAB_001029a0;\n        if (iVar6 < 0) goto LAB_001029bf;\n        pcVar11 = \"the --binary and --text options are meaningless when verifying checksums\";\n        if (!bVar2) goto LAB_001029bf;\n        goto LAB_001029a0;\n      }\n      pcVar11 = \"the --zero option is not supported when verifying checksums\";\n      if (bVar2) goto LAB_001029a0;\n      if (ignore_missing != '\\0') goto LAB_00102cdf;\n      if (status_only != '\\0') goto LAB_00102d16;\n      goto LAB_0010294c;\n    }\n    if (0x84 < iVar5) break;\n    if (iVar5 < 0x62) {\n      if (iVar5 == -0x83) {\n        version_etc(stdout,\"sha1sum\",\"GNU coreutils\",Version,\"Ulrich Drepper\",\"Scott Miller\",\n                    \"David Madore\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar5 != -0x82) break;\n      usage(0);\n      goto LAB_001028f3;\n    }\n    switch(iVar5) {\n    case 0x62:\n      iVar6 = 1;\n      break;\n    case 99:\n      bVar2 = true;\n      break;\n    default:\n      goto switchD_00102801_caseD_64;\n    case 0x74:\n      iVar6 = 0;\n      break;\n    case 0x77:\n      status_only = '\\0';\n      warn = '\\x01';\n      quiet = '\\0';\n      break;\n    case 0x7a:\n      delim = 0;\n      break;\n    case 0x80:\n      ignore_missing = '\\x01';\n      break;\n    case 0x81:\n      status_only = '\\x01';\n      warn = '\\0';\n      quiet = '\\0';\n      break;\n    case 0x82:\n      status_only = '\\0';\n      warn = '\\0';\n      quiet = '\\x01';\n      break;\n    case 0x83:\n      strict = '\\x01';\n      break;\n    case 0x84:\n      bVar3 = true;\n      iVar6 = 1;\n    }\n  } while( true );\nswitchD_00102801_caseD_64:\n  usage(1);\nLAB_001029bf:\n  if (ignore_missing == '\\0') {\n    if (status_only == '\\0') {\nLAB_0010294c:\n      if (warn == '\\0') {\n        if ((quiet == '\\x01') &&\n           (pcVar11 = \"the --quiet option is meaningful only when verifying checksums\", !bVar2))\n        goto LAB_001029a0;\n        goto LAB_001029dd;\n      }\n      pcVar11 = \"the --warn option is meaningful only when verifying checksums\";\n      goto joined_r0x00102cca;\n    }\n    if (bVar2) goto LAB_001029d4;\nLAB_00102d16:\n    pcVar11 = \"the --status option is meaningful only when verifying checksums\";\n  }\n  else if (bVar2) {\nLAB_001029d4:\n    if (warn != '\\0') {\nLAB_001029f6:\n      lVar9 = (long)(int)optind;\n      ppcVar10 = (char **)(param_2 + (int)param_1);\n      local_80 = ppcVar10;\n      if (optind == param_1) {\n        local_80 = ppcVar10 + 1;\n        auVar14 = bad_cast_constprop_0();\n        lVar9 = SUB168(auVar14 >> 0x40,0);\n        *ppcVar10 = SUB168(auVar14,0);\n      }\n      ppcVar10 = (char **)(param_2 + lVar9);\n      if (local_80 <= ppcVar10) {\n        local_72 = 1;\n        goto LAB_00102aaa;\n      }\n      unaff_R15 = &DAT_00109b58;\n      puVar13 = (uint *)ptr_align_constprop_0(local_58);\n      local_72 = 1;\n      local_6c = 0x20;\n      if (iVar6 == 1) {\n        local_6c = 0x2a;\n      }\n      do {\n        __s = *ppcVar10;\n        if (bVar2) {\n          bVar4 = digest_check(__s);\n          bVar4 = local_72 & bVar4;\n        }\n        else {\n          bVar4 = digest_file_isra_0(__s,puVar13,&local_59);\n          if (bVar4 != 0) {\n            pcVar11 = strchr(__s,0x5c);\n            if (pcVar11 == (char *)0x0) goto LAB_00102c8a;\n            goto LAB_00102afe;\n          }\n        }\n        while (local_72 = bVar4, ppcVar10 = ppcVar10 + 1, local_80 <= ppcVar10) {\nLAB_00102aaa:\n          if ((have_read_stdin == '\\0') || (iVar6 = rpl_fclose(stdin), iVar6 != -1)) {\n            if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n              __stack_chk_fail();\n            }\n            return local_72 ^ 1;\n          }\n          uVar7 = dcgettext(0,\"standard input\",5);\n          piVar8 = __errno_location();\n          error(1,*piVar8,uVar7);\nLAB_00102c8a:\n          pcVar11 = strchr(__s,10);\n          if (pcVar11 == (char *)0x0) {\nLAB_00102b0b:\n            if (!bVar3) {\n              local_70 = 0;\n              goto joined_r0x00102c1f;\n            }\n            local_70 = 0;\nLAB_00102b80:\n            fwrite_unlocked(&DAT_001099fe,1,4,stdout);\n            fwrite_unlocked(&DAT_00109b5d,1,2,stdout);\n            print_filename(__s,local_70);\n            fwrite_unlocked(&DAT_00109b60,1,4,stdout);\n            if (digest_hex_bytes >> 1 != 0) goto LAB_00102b2a;\n          }\n          else {\nLAB_00102afe:\n            if (delim != 10) goto LAB_00102b0b;\n            if (bVar3) {\n              putchar_unlocked(0x5c);\n              local_70 = 1;\n              goto LAB_00102b80;\n            }\n            putchar_unlocked(0x5c);\n            local_70 = 1;\njoined_r0x00102c1f:\n            if (digest_hex_bytes >> 1 != 0) {\nLAB_00102b2a:\n              uVar12 = 0;\n              do {\n                puVar1 = (undefined *)((long)puVar13 + uVar12);\n                uVar12 = uVar12 + 1;\n                __printf_chk(1,unaff_R15,*puVar1);\n              } while (uVar12 < digest_hex_bytes >> 1);\n              if (bVar3) goto LAB_00102b62;\n            }\n            putchar_unlocked(0x20);\n            putchar_unlocked(local_6c);\n            print_filename(__s,local_70);\n          }\nLAB_00102b62:\n          putchar_unlocked((uint)delim);\n          bVar4 = local_72;\n        }\n      } while( true );\n    }\nLAB_001029dd:\n    if (strict == '\\0') goto LAB_001029f6;\n    pcVar11 = \"the --strict option is meaningful only when verifying checksums\";\njoined_r0x00102cca:\n    if (bVar2) goto LAB_001029f6;\n  }\n  else {\nLAB_00102cdf:\n    pcVar11 = \"the --ignore-missing option is meaningful only when verifying checksums\";\n  }\nLAB_001029a0:\n  uVar7 = dcgettext(0,pcVar11,5);\n  error(0,0,uVar7);\n  goto switchD_00102801_caseD_64;\n}\n\n", 
    "0010f078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00102600": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010df50)();\n  return;\n}\n\n", 
    "00104100": "\nundefined8 afalg_stream_isra_0(void)\n\n{\n  return 0xffffff9f;\n}\n\n", 
    "00108e90": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "0010270f": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108b30": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0010270a": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001026a0": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010dfa0)();\n  return;\n}\n\n", 
    "00106080": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001054d0": "\nvoid sha1_finish_ctx(long param_1,undefined8 param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  long lVar4;\n  ulong uVar5;\n  long extraout_RDX;\n  long lVar6;\n  undefined8 *puVar7;\n  int iVar8;\n  undefined8 *puVar9;\n  long lVar10;\n  uint uVar11;\n  long lVar12;\n  byte bVar13;\n  \n  bVar13 = 0;\n  uVar1 = *(uint *)(param_1 + 0x1c);\n  lVar10 = (-(ulong)(uVar1 < 0x38) & 0xffffffffffffffc0) + 0x80;\n  lVar4 = (-(ulong)(uVar1 < 0x38) & 0xffffffffffffffc0) + 0x78;\n  lVar6 = (-(ulong)(uVar1 < 0x38) & 0xfffffffffffffff0) + 0x1f;\n  lVar12 = (-(ulong)(uVar1 < 0x38) & 0xfffffffffffffff0) + 0x1e;\n  uVar2 = *(uint *)(param_1 + 0x14);\n  uVar11 = uVar1 + *(uint *)(param_1 + 0x14);\n  *(uint *)(param_1 + 0x14) = uVar11;\n  iVar8 = *(int *)(param_1 + 0x18);\n  if (CARRY4(uVar1,uVar2)) {\n    iVar8 = iVar8 + 1;\n    *(int *)(param_1 + 0x18) = iVar8;\n  }\n  uVar3 = __bswap_32(iVar8 << 3 | uVar11 >> 0x1d);\n  *(undefined4 *)(param_1 + 0x20 + lVar12 * 4) = uVar3;\n  uVar3 = __bswap_32(uVar11 * 8);\n  uVar5 = lVar4 - extraout_RDX;\n  *(undefined4 *)(param_1 + 0x20 + lVar6 * 4) = uVar3;\n  puVar9 = (undefined8 *)(param_1 + 0x20 + extraout_RDX);\n  if (uVar5 < 8) {\n    if ((uVar5 & 4) == 0) {\n      if ((uVar5 != 0) && (*(char *)puVar9 = (char)fillbuf._0_4_, (uVar5 & 2) != 0)) {\n        *(undefined2 *)((long)puVar9 + (uVar5 - 2)) = *(undefined2 *)(&DAT_00109c7e + uVar5);\n      }\n    }\n    else {\n      *(undefined4 *)puVar9 = fillbuf._0_4_;\n      *(undefined4 *)((long)puVar9 + (uVar5 - 4)) = *(undefined4 *)(&DAT_00109c7c + uVar5);\n    }\n  }\n  else {\n    *puVar9 = CONCAT44(fillbuf._4_4_,fillbuf._0_4_);\n    *(undefined8 *)((long)puVar9 + (uVar5 - 8)) = *(undefined8 *)(&DAT_00109c78 + uVar5);\n    lVar4 = (long)puVar9 - (long)(undefined8 *)((ulong)(puVar9 + 1) & 0xfffffffffffffff8);\n    puVar7 = (undefined8 *)(fillbuf + -lVar4);\n    puVar9 = (undefined8 *)((ulong)(puVar9 + 1) & 0xfffffffffffffff8);\n    for (uVar5 = uVar5 + lVar4 >> 3; uVar5 != 0; uVar5 = uVar5 - 1) {\n      *puVar9 = *puVar7;\n      puVar7 = puVar7 + (ulong)bVar13 * -2 + 1;\n      puVar9 = puVar9 + (ulong)bVar13 * -2 + 1;\n    }\n  }\n  sha1_process_block(param_1 + 0x20,lVar10,param_1);\n  sha1_read_ctx(param_1,param_2);\n  return;\n}\n\n", 
    "0010f080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102714": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107b70": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107920": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00103440": "\nundefined * bad_cast_constprop_0(void)\n\n{\n  return &DAT_00109a03;\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010df18)();\n  return iVar1;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010de88)();\n  return sVar1;\n}\n\n", 
    "00108570": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "00106150": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001032a0": "\nchar digest_file_isra_0(byte *param_1,undefined8 param_2,undefined *param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  long lVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  \n  uVar2 = *param_1 - 0x2d;\n  if (uVar2 == 0) {\n    uVar2 = (uint)param_1[1];\n  }\n  *param_3 = 0;\n  lVar4 = stdin;\n  if (uVar2 == 0) {\n    have_read_stdin = 1;\n    fadvise(stdin,2);\n    iVar3 = sha1_stream(lVar4,param_2);\n    if (iVar3 != 0) {\nLAB_00103390:\n      uVar5 = quotearg_n_style_colon(0,3,param_1);\n      piVar6 = __errno_location();\n      error(0,*piVar6,\"%s\",uVar5);\n      if (stdin == lVar4) {\n        return '\\0';\n      }\n      rpl_fclose(lVar4);\n      return '\\0';\n    }\n  }\n  else {\n    lVar4 = fopen_safer(param_1,\"r\");\n    if (lVar4 == 0) {\n      piVar6 = __errno_location();\n      cVar1 = ignore_missing;\n      if ((ignore_missing != '\\0') && (*piVar6 == 2)) {\n        *param_3 = 1;\n        return cVar1;\n      }\n      uVar5 = quotearg_n_style_colon(0,3,param_1);\n      error(0,*piVar6,\"%s\",uVar5);\n      return '\\0';\n    }\n    fadvise(lVar4,2);\n    iVar3 = sha1_stream(lVar4,param_2);\n    if (iVar3 != 0) goto LAB_00103390;\n    iVar3 = rpl_fclose(lVar4);\n    if (iVar3 != 0) {\n      uVar5 = quotearg_n_style_colon(0,3,param_1);\n      piVar6 = __errno_location();\n      error(0,*piVar6,\"%s\",uVar5);\n      return '\\0';\n    }\n  }\n  return '\\x01';\n}\n\n", 
    "001078a0": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "0010f050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023f0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010de48)();\n  return;\n}\n\n", 
    "00108bb0": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010f170": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcngettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcngettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001083d0": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107e80": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010f178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105610": "\nvoid sha1_process_bytes(undefined8 *param_1,ulong param_2,long param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  uint uVar4;\n  long lVar5;\n  uint uVar6;\n  ulong uVar7;\n  undefined8 *puVar8;\n  uint uVar9;\n  ulong uVar10;\n  void *__dest;\n  \n  if (*(uint *)(param_3 + 0x1c) != 0) {\n    uVar10 = (ulong)*(uint *)(param_3 + 0x1c);\n    lVar5 = param_3 + 0x20;\n    uVar3 = 0x80 - uVar10;\n    if (param_2 < 0x80 - uVar10) {\n      uVar3 = param_2;\n    }\n    memcpy((void *)(lVar5 + uVar10),param_1,uVar3);\n    uVar9 = *(int *)(param_3 + 0x1c) + (int)uVar3;\n    *(uint *)(param_3 + 0x1c) = uVar9;\n    if (0x40 < uVar9) {\n      sha1_process_block(lVar5,uVar9 & 0xffffffc0,param_3);\n      uVar9 = *(uint *)(param_3 + 0x1c);\n      puVar8 = (undefined8 *)((uVar10 + uVar3 & 0xffffffffffffffc0) + lVar5);\n      uVar6 = uVar9 & 0x3f;\n      uVar10 = (ulong)uVar6;\n      *(uint *)(param_3 + 0x1c) = uVar6;\n      if (uVar6 < 8) {\n        if ((uVar9 & 4) == 0) {\n          if ((uVar6 != 0) &&\n             (*(undefined *)(param_3 + 0x20) = *(undefined *)puVar8, (uVar9 & 2) != 0)) {\n            *(undefined2 *)(param_3 + 0x1e + uVar10) = *(undefined2 *)((long)puVar8 + (uVar10 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)(param_3 + 0x20) = *(undefined4 *)puVar8;\n          *(undefined4 *)(param_3 + 0x1c + uVar10) = *(undefined4 *)((long)puVar8 + (uVar10 - 4));\n        }\n      }\n      else {\n        *(undefined8 *)(param_3 + 0x20) = *puVar8;\n        *(undefined8 *)(param_3 + 0x18 + uVar10) = *(undefined8 *)((long)puVar8 + (uVar10 - 8));\n        uVar10 = param_3 + 0x28U & 0xfffffffffffffff8;\n        lVar5 = lVar5 - uVar10;\n        uVar9 = (int)lVar5 + uVar6 & 0xfffffff8;\n        if (7 < uVar9) {\n          uVar7 = 0;\n          do {\n            uVar6 = (int)uVar7 + 8;\n            *(undefined8 *)(uVar10 + uVar7) = *(undefined8 *)((long)puVar8 + (uVar7 - lVar5));\n            uVar7 = (ulong)uVar6;\n          } while (uVar6 < uVar9);\n        }\n      }\n    }\n    param_1 = (undefined8 *)((long)param_1 + uVar3);\n    param_2 = param_2 - uVar3;\n  }\n  puVar8 = param_1;\n  if (0x3f < param_2) {\n    if (((ulong)param_1 & 3) != 0) {\n      if (param_2 != 0x40) {\n        uVar3 = param_2 - 0x41 >> 6;\n        do {\n          uVar2 = param_1[1];\n          puVar8 = param_1 + 8;\n          *(undefined8 *)(param_3 + 0x20) = *param_1;\n          *(undefined8 *)(param_3 + 0x28) = uVar2;\n          uVar2 = param_1[3];\n          *(undefined8 *)(param_3 + 0x30) = param_1[2];\n          *(undefined8 *)(param_3 + 0x38) = uVar2;\n          uVar2 = param_1[5];\n          *(undefined8 *)(param_3 + 0x40) = param_1[4];\n          *(undefined8 *)(param_3 + 0x48) = uVar2;\n          uVar2 = param_1[7];\n          *(undefined8 *)(param_3 + 0x50) = param_1[6];\n          *(undefined8 *)(param_3 + 0x58) = uVar2;\n          sha1_process_block((undefined8 *)(param_3 + 0x20),0x40,param_3);\n          param_1 = puVar8;\n        } while (puVar8 != param_1 + (uVar3 + 1) * 8);\n        param_2 = (param_2 - 0x40) + uVar3 * -0x40;\n        puVar8 = param_1 + (uVar3 + 1) * 8;\n      }\n      goto LAB_001056c2;\n    }\n    puVar8 = (undefined8 *)((long)param_1 + (param_2 & 0xffffffffffffffc0));\n    sha1_process_block(param_1,param_2 & 0xffffffffffffffc0,param_3);\n    param_2 = (ulong)((uint)param_2 & 0x3f);\n  }\n  if (param_2 == 0) {\n    return;\n  }\nLAB_001056c2:\n  __dest = (void *)(param_3 + 0x20);\n  uVar9 = *(uint *)(param_3 + 0x1c);\n  puVar1 = (undefined8 *)((long)__dest + (ulong)uVar9);\n  uVar6 = (uint)param_2;\n  if (uVar6 < 8) {\n    if ((param_2 & 4) == 0) {\n      if ((uVar6 != 0) && (*(undefined *)puVar1 = *(undefined *)puVar8, (param_2 & 2) != 0)) {\n        *(undefined2 *)((long)puVar1 + ((param_2 & 0xffffffff) - 2)) =\n             *(undefined2 *)((long)puVar8 + ((param_2 & 0xffffffff) - 2));\n      }\n    }\n    else {\n      *(undefined4 *)puVar1 = *(undefined4 *)puVar8;\n      *(undefined4 *)((long)puVar1 + ((param_2 & 0xffffffff) - 4)) =\n           *(undefined4 *)((long)puVar8 + ((param_2 & 0xffffffff) - 4));\n    }\n  }\n  else {\n    *puVar1 = *puVar8;\n    *(undefined8 *)((long)puVar1 + ((param_2 & 0xffffffff) - 8)) =\n         *(undefined8 *)((long)puVar8 + ((param_2 & 0xffffffff) - 8));\n    lVar5 = (long)puVar1 - ((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n    uVar6 = (int)lVar5 + uVar6 & 0xfffffff8;\n    if (7 < uVar6) {\n      uVar3 = 0;\n      do {\n        uVar4 = (int)uVar3 + 8;\n        *(undefined8 *)(((ulong)(puVar1 + 1) & 0xfffffffffffffff8) + uVar3) =\n             *(undefined8 *)((long)puVar8 + (uVar3 - lVar5));\n        uVar3 = (ulong)uVar4;\n      } while (uVar4 < uVar6);\n    }\n  }\n  param_2 = param_2 + uVar9;\n  if (0x3f < param_2) {\n    param_2 = param_2 - 0x40;\n    sha1_process_block(__dest,0x40,param_3);\n    memcpy(__dest,(void *)(param_3 + 0x60),param_2);\n  }\n  *(int *)(param_3 + 0x1c) = (int)param_2;\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010df10)();\n  return pvVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010de80)();\n  return sVar1;\n}\n\n", 
    "00108320": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "00108c30": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00108b10": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00107ce0": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108560": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "00108680": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00103e30": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = program_name;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\nPrint or check %s (%d-bit) checksums.\\n\",5\n                     );\n    __printf_chk(1,uVar2,uVar4,&DAT_001099fe,0xa0);\n    emit_stdin_note();\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"\\n  -b, --binary         read in binary mode\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    uVar4 = dcgettext(0,\"  -c, --check          read %s sums from the FILEs and check them\\n\",5);\n    __printf_chk(1,uVar4,&DAT_001099fe);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --tag            create a BSD-style checksum\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  -t, --text           read in text mode (default)\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -z, --zero           end each output line with NUL, not newline,\\n                       and disable file name escaping\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nThe following five options are useful only when verifying checksums:\\n      --ignore-missing  don\\'t fail or report status for missing files\\n      --quiet          don\\'t print OK for each successfully verified file\\n      --status         don\\'t output anything, status code shows success\\n      --strict         exit non-zero for improperly formatted checksum lines\\n  -w, --warn           warn about improperly formatted checksum lines\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    uVar4 = dcgettext(0,\n                      \"\\nThe sums are computed as described in %s.  When checking, the input\\nshould be a former output of this program.  The default mode is to print a\\nline with checksum, a space, a character indicating input mode (\\'*\\' for binary,\\n\\' \\' for text or where binary is insignificant), and name for each FILE.\\n\"\n                      ,5);\n    __printf_chk(1,uVar4,\"FIPS-180-1\");\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00107b10": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108bc0": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010f180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getline@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010de40)();\n  return;\n}\n\n", 
    "0010f060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107e70": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "0010f188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102490": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010de98)();\n  return;\n}\n\n", 
    "0010f0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107bf0": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010f150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setvbuf@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00108dd0": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00107a20": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "00108cb0": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010f158": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fcntl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107d80": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___0010dfe0;\n  if (PTR___gmon_start___0010dfe0 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___0010dfe0)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00105fc0": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00105990": "\nundefined8 sha1_stream(FILE *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  void *__ptr;\n  size_t sVar3;\n  long lVar4;\n  long in_FS_OFFSET;\n  undefined auStack_e8 [168];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = afalg_stream_isra_0();\n  if ((int)uVar2 != -5) {\n    if ((int)uVar2 == 0) goto LAB_00105a4f;\n    __ptr = malloc(0x8048);\n    if (__ptr != (void *)0x0) {\n      sha1_init_ctx(auStack_e8);\n      do {\n        lVar4 = 0;\nLAB_00105a29:\n        iVar1 = feof_unlocked(param_1);\n        if (iVar1 != 0) goto LAB_00105a35;\n        sVar3 = fread_unlocked((void *)((long)__ptr + lVar4),1,0x8000 - lVar4,param_1);\n        lVar4 = lVar4 + sVar3;\n        if (lVar4 != 0x8000) goto code_r0x00105a24;\n        sha1_process_block(__ptr,0x8000,auStack_e8);\n      } while( true );\n    }\n  }\n  uVar2 = 1;\nLAB_00105a4f:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\ncode_r0x00105a24:\n  if (sVar3 == 0) {\n    iVar1 = ferror_unlocked(param_1);\n    if (iVar1 == 0) {\nLAB_00105a35:\n      if (lVar4 != 0) {\n        sha1_process_bytes(__ptr,lVar4,auStack_e8);\n      }\n      sha1_finish_ctx(auStack_e8,param_2);\n      free(__ptr);\n      uVar2 = 0;\n    }\n    else {\n      free(__ptr);\n      uVar2 = 1;\n    }\n    goto LAB_00105a4f;\n  }\n  goto LAB_00105a29;\n}\n\n", 
    "00102480": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010de90)();\n  return;\n}\n\n", 
    "00103450": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x109a87;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_00109a0d;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 8;\n    pbVar7 = (byte *)\"sha1sum\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"sha1sum\";\n        goto LAB_0010366e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"sha1sum\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"sha1sum\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010366e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"sha1sum\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"sha1sum\");\n    if (pcVar4 != \"sha1sum\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "00107ac0": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "00108340": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108c10": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00107be0": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010f0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105f10": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010f160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fread_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102d60": "\n/* WARNING: Removing unreachable block (ram,0x00102d73) */\n/* WARNING: Removing unreachable block (ram,0x00102d7f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00107a10": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00108ba0": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010f168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107e90": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00107800": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_0010df88)();\n  return _Var1;\n}\n\n", 
    "00102ee0": "\nvoid print_filename(char *param_1,char param_2)\n\n{\n  char cVar1;\n  \n  if (param_2 == '\\0') {\n    fputs_unlocked(param_1,stdout);\n    return;\n  }\n  cVar1 = *param_1;\n  do {\n    while( true ) {\n      if (cVar1 == '\\0') {\n        return;\n      }\n      if (cVar1 != '\\n') break;\n      fwrite_unlocked(&DAT_001099f8,1,2,stdout);\nLAB_00102f0d:\n      cVar1 = param_1[1];\n      param_1 = param_1 + 1;\n    }\n    if (cVar1 != '\\\\') {\n      putchar_unlocked((int)cVar1);\n      goto LAB_00102f0d;\n    }\n    param_1 = param_1 + 1;\n    fwrite_unlocked(&DAT_001099fb,1,2,stdout);\n    cVar1 = *param_1;\n  } while( true );\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010def8)();\n  return pvVar1;\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010de68)();\n  return iVar1;\n}\n\n", 
    "0010f0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00108530": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00108770": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_001087df;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_001087df:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00105ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fdadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = posix_fadvise(__fd,__offset,__len,__advise);\n  return iVar1;\n}\n\n", 
    "0010f0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010df48)();\n  return pcVar1;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010deb8)();\n  return _Var1;\n}\n\n", 
    "001023b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010de28)();\n  return;\n}\n\n", 
    "00102e30": "\nlong filename_unescape(long param_1,ulong param_2)\n\n{\n  char cVar1;\n  undefined *puVar2;\n  undefined *puVar3;\n  ulong uVar4;\n  \n  uVar4 = 0;\n  puVar2 = (undefined *)(param_1 + 1);\n  if (param_2 != 0) {\n    do {\n      puVar3 = puVar2;\n      cVar1 = *(char *)(param_1 + uVar4);\n      if (cVar1 == '\\0') {\n        return 0;\n      }\n      if (cVar1 == '\\\\') {\n        if (param_2 - 1 == uVar4) {\n          return 0;\n        }\n        uVar4 = uVar4 + 1;\n        if (*(char *)(param_1 + uVar4) == '\\\\') {\n          puVar3[-1] = 0x5c;\n        }\n        else {\n          if (*(char *)(param_1 + uVar4) != 'n') {\n            return 0;\n          }\n          puVar3[-1] = 10;\n        }\n      }\n      else {\n        puVar3[-1] = cVar1;\n      }\n      uVar4 = uVar4 + 1;\n      puVar2 = puVar3 + 1;\n    } while (uVar4 < param_2);\n    if (puVar3 < (undefined *)(param_2 + param_1)) {\n      *puVar3 = 0;\n    }\n  }\n  return param_1;\n}\n\n", 
    "0010f130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001040f0": "\nvoid set_uint32(undefined4 *param_1,undefined4 param_2)\n\n{\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010f138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fdopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102660": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010df80)();\n  return;\n}\n\n", 
    "0010f0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010def0)();\n  return pvVar1;\n}\n\n", 
    "00102420": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010de60)();\n  return;\n}\n\n", 
    "00107ca0": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "0010f0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00108d10": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00102e20": "\nundefined8 select_plural(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0010df40)();\n  return pFVar1;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010deb0)();\n  return pcVar1;\n}\n\n", 
    "0010f140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010de20)();\n  return;\n}\n\n", 
    "0010f020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107e30": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001086e0": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "0010f148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "001040e0": "\nuint __bswap_32(uint param_1)\n\n{\n  return param_1 >> 0x18 | (param_1 & 0xff0000) >> 8 | (param_1 & 0xff00) << 8 | param_1 << 0x18;\n}\n\n", 
    "0010f028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_unlocked_0010de58)();\n  return sVar1;\n}\n\n", 
    "00105920": "\nvoid sha1_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_c8 [168];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  sha1_init_ctx(auStack_c8);\n  sha1_process_bytes(param_1);\n  sha1_finish_ctx(auStack_c8,param_3);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102450": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010de78)();\n  return;\n}\n\n", 
    "0010f1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_tolower_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "0010f118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010df98)();\n  return sVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010df08)();\n  return iVar1;\n}\n\n", 
    "00107cd0": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00108670": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "0010f1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "0010f0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001023d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010de38)();\n  return iVar1;\n}\n\n", 
    "00102d30": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010dfd8)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010f1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* feof_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107b00": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010dec8)();\n  return iVar1;\n}\n\n", 
    "001062f0": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00109d09;\n      }\n      else {\n        pcVar2 = &DAT_00109d06;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00109d0d;\n    }\n    else {\n      pcVar2 = &DAT_00109d02;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "0010f110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_0010df00)();\n  return iVar1;\n}\n\n", 
    "00102dd0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_0010dff0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00102440": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010de70)();\n  return;\n}\n\n", 
    "0010f1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010df90)();\n  return;\n}\n\n", 
    "00107cc0": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00105ae0": "\nvoid fadvise(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    fdadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n", 
    "00106240": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00108e10": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010f0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* posix_fadvise@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010dec0)();\n  return pvVar1;\n}\n\n", 
    "001023c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010de30)();\n  return piVar1;\n}\n\n", 
    "001036f0": "\nundefined8 ptr_align_constprop_0(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "0010f0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107c10": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107e50": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00105c70": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001085e0": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010863b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010863b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010f120": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00108b80": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00105bb0": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00107eb0": "\nvoid dup_safer(undefined8 param_1)\n\n{\n  rpl_fcntl(param_1,0,3);\n  return;\n}\n\n", 
    "00108730": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(exit_failure,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108970": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "00104010": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "001025b0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010df28)();\n  return;\n}\n\n", 
    "0010f1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_feof_unlocked_0010dfb8)();\n  return iVar1;\n}\n\n", 
    "00105d40": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00105e60": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001030e0": "\nulong split_3(byte *param_1,long param_2,byte **param_3,uint *param_4,byte **param_5)\n\n{\n  ulong uVar1;\n  byte bVar2;\n  long lVar3;\n  long lVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  \n  uVar1 = 0;\n  bVar2 = *param_1;\n  if ((bVar2 == 9) || (bVar2 == 0x20)) {\n    do {\n      do {\n        uVar1 = uVar1 + 1;\n        bVar2 = param_1[uVar1];\n      } while (bVar2 == 0x20);\n    } while (bVar2 == 9);\n  }\n  bVar8 = bVar2 < 0x5c;\n  bVar9 = bVar2 == 0x5c;\n  bVar10 = bVar9;\n  if (bVar9) {\n    bVar8 = 0xfffffffffffffffe < uVar1;\n    uVar1 = uVar1 + 1;\n    bVar10 = uVar1 == 0;\n  }\n  pbVar7 = param_1 + uVar1;\n  lVar3 = 4;\n  pbVar5 = pbVar7;\n  pbVar6 = &DAT_001099fe;\n  do {\n    if (lVar3 == 0) break;\n    lVar3 = lVar3 + -1;\n    bVar8 = *pbVar5 < *pbVar6;\n    bVar10 = *pbVar5 == *pbVar6;\n    pbVar5 = pbVar5 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while (bVar10);\n  if ((!bVar8 && !bVar10) == bVar8) {\n    bVar2 = param_1[uVar1 + 4];\n    lVar3 = uVar1 + 4;\n    if (bVar2 == 0x20) {\n      bVar2 = param_1[uVar1 + 5];\n      lVar3 = uVar1 + 5;\n    }\n    if (bVar2 == 0x28) {\n      *param_4 = 0;\n      uVar1 = bsd_split_3(param_1 + lVar3 + 1,param_2 - (lVar3 + 1),param_3,param_5,bVar9);\n      return uVar1;\n    }\n  }\n  else {\n    if (param_2 - uVar1 < (ulong)(*pbVar7 == 0x5c) + min_digest_line_length) {\n      return 0;\n    }\n    lVar3 = uVar1 + digest_hex_bytes;\n    *param_3 = pbVar7;\n    bVar2 = param_1[lVar3];\n    if ((bVar2 != 0x20) && (bVar2 != 9)) {\n      return 0;\n    }\n    param_1[lVar3] = 0;\n    uVar1 = hex_digits(*param_3);\n    if ((char)uVar1 == '\\0') {\n      return 0;\n    }\n    lVar4 = lVar3 + 1;\n    if (param_2 - lVar4 != 1) {\n      pbVar7 = param_1 + lVar4;\n      bVar2 = *pbVar7;\n      if ((bVar2 == 0x20) || (bVar2 == 0x2a)) {\n        if (bsd_reversed != 1) {\n          lVar4 = lVar3 + 2;\n          bsd_reversed = 0;\n          pbVar7 = param_1 + lVar4;\n          *param_4 = (uint)(bVar2 == 0x2a);\n        }\n        goto LAB_0010320d;\n      }\n    }\n    if (bsd_reversed != 0) {\n      bsd_reversed = 1;\n      pbVar7 = param_1 + lVar4;\nLAB_0010320d:\n      *param_5 = pbVar7;\n      if (bVar9) {\n        uVar1 = filename_unescape(pbVar7,param_2 - lVar4);\n        return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n      }\n      return uVar1;\n    }\n  }\n  return 0;\n}\n\n", 
    "00102620": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010df60)();\n  return;\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0010ded0)();\n  return iVar1;\n}\n\n", 
    "00108b90": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00107ea0": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "00105cc0": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00106420": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_001068a7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001068c9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00106e66;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010681f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_001068a7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010681f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_00109d21,param_5);\n      local_78 = (char *)gettext_quote(&DAT_00109d11);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00106570:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00106dd0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00106d6b;\n          goto LAB_00106b5b;\n        default:\nswitchD_00106c80_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00107058;\n              }\n              if (lVar10 == -2) goto joined_r0x0010746a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00106a40;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00107058;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_001067e1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00106d28;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00106d28;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00106d28:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00106a37;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00106a24;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00106a24:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00106748;\n          goto LAB_00106a37;\n        case 0x23:\n        case 0x7e:\nLAB_00106a1b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00106a24;\n          goto LAB_00106745;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00106c80_caseD_25;\n        case 0x27:\nswitchD_00106c80_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00106748;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010676b;\n          }\n          goto LAB_00106a40;\n        case 0x3f:\nswitchD_00106c80_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001073ce_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00106748;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010676b;\n          }\n          goto LAB_00106a40;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00106678_caseD_5c;\n          if (!bVar20) {\nLAB_00106cb8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00106cd0;\n          }\n          goto LAB_00106a40;\n        case 0x7b:\n        case 0x7d:\nswitchD_00106c80_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00106a1b;\nLAB_00106745:\n          bVar23 = false;\n          goto LAB_00106748;\n        }\nLAB_00106b50:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00106b5b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00106768;\n          goto LAB_00106690;\n        }\nLAB_00106b90:\n        bVar21 = false;\n        goto joined_r0x00106ba1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00106db0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00106678_caseD_0;\n          default:\n            goto switchD_00106c80_caseD_1;\n          case 7:\n            goto switchD_00106dd0_caseD_7;\n          case 8:\n            goto switchD_00106dd0_caseD_8;\n          case 9:\n            goto switchD_00106678_caseD_9;\n          case 10:\n            goto switchD_00106dd0_caseD_a;\n          case 0xb:\n            goto switchD_00106dd0_caseD_b;\n          case 0xc:\n            goto switchD_00106dd0_caseD_c;\n          case 0xd:\n            goto switchD_00106dd0_caseD_d;\n          case 0x20:\n            goto LAB_00106df9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00106678_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00106de1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00106688;\n          case 0x27:\n            goto switchD_00106c80_caseD_27;\n          case 0x3f:\n            goto switchD_00106c80_caseD_3f;\n          case 0x5c:\n            goto switchD_00106678_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00106c80_caseD_7b;\n          }\n        }\n        goto LAB_00106a4e;\n      }\nLAB_00106db0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00106dd0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00106678_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010676b;\n            }\nLAB_0010720b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010720b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00107248;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010676b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00106a40;\n      default:\n        bVar23 = false;\n        goto switchD_00106c80_caseD_1;\n      case 7:\nswitchD_00106dd0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00106dd0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00106678_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00106b50;\n      case 10:\nswitchD_00106dd0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00106b90;\n      case 0xb:\nswitchD_00106dd0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00106b90;\n      case 0xc:\nswitchD_00106dd0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00106dd0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00106b90;\n      case 0x20:\n        bVar5 = false;\nLAB_00106df9:\n        uVar15 = 0x20;\n        goto LAB_00106688;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00106678_caseD_21:\n        bVar22 = false;\n        goto LAB_00106745;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00106de1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00106748;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00106690;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00106688:\n        bVar22 = false;\n        goto LAB_00106690;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00106c80_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00106c80_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00106678_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00106cb8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00106b50;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00106c80_caseD_7b;\n      }\n      if (bVar20) goto LAB_00106bb0;\n      bVar21 = false;\n      goto LAB_00106706;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00106a37:\n      param_5 = 2;\nLAB_00106a40:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00106a4e:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_00106a88;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_001074d5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00106a88:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00106a88;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_001074d5;\nLAB_00106e66:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001068c9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00106d6b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00106570;\nswitchD_001073ce_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00107248:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010676b;\n    goto LAB_00106690;\n  }\n  goto LAB_00106a4e;\njoined_r0x0010746a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00107058:\n  if (1 < uVar17) {\nLAB_00107062:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00106a40;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00106718;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00106cd0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_001067e1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00107062;\n  }\nswitchD_00106c80_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00106748:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00106690:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010676b;\n  }\n  else {\nLAB_00106768:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010676b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00106cd0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00106718;\n    }\n  }\njoined_r0x00106ba1:\n  if (bVar20) {\nLAB_00106bb0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00106a40;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00106706:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00106718:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00106570;\n}\n\n", 
    "0010f108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010dfb0)();\n  return iVar1;\n}\n\n", 
    "0010f1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010df20)();\n  return pcVar1;\n}\n\n", 
    "001086a0": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001041c0": "\nvoid sha1_process_block(ulong param_1,ulong param_2,uint *param_3)\n\n{\n  undefined4 uVar1;\n  uint uVar2;\n  ulong uVar3;\n  uint uVar4;\n  long lVar5;\n  ulong extraout_RDX;\n  uint uVar6;\n  uint *puVar7;\n  uint uVar8;\n  uint uVar9;\n  uint uVar10;\n  uint uVar11;\n  uint uVar12;\n  uint uVar13;\n  uint uVar14;\n  uint uVar15;\n  uint uVar16;\n  uint uVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  uint uVar21;\n  uint uVar22;\n  uint uVar23;\n  uint uVar24;\n  uint uVar25;\n  uint uVar26;\n  uint uVar27;\n  uint uVar28;\n  uint uVar29;\n  uint uVar30;\n  long in_FS_OFFSET;\n  uint local_e4;\n  uint local_e0;\n  uint local_dc;\n  uint local_b8;\n  uint local_b4;\n  uint local_88;\n  uint local_84;\n  uint local_80;\n  uint local_7c;\n  uint local_78;\n  uint local_74;\n  uint local_70;\n  uint local_6c;\n  uint local_68;\n  uint local_64;\n  uint local_60;\n  uint local_5c;\n  uint local_58;\n  uint local_54;\n  uint local_50;\n  uint local_4c;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar3 = (param_2 & 0xfffffffffffffffc) + param_1;\n  local_b8 = *param_3;\n  local_e4 = param_3[1];\n  local_e0 = param_3[2];\n  local_dc = param_3[3];\n  local_b4 = param_3[4];\n  uVar2 = param_3[5];\n  param_3[5] = (uint)param_2 + param_3[5];\n  param_3[6] = param_3[6] + (int)(param_2 >> 0x20) + (uint)CARRY4((uint)param_2,uVar2);\n  if (param_1 < uVar3) {\n    do {\n      lVar5 = 0;\n      puVar7 = &local_88;\n      do {\n        uVar1 = __bswap_32(*(undefined4 *)(param_1 + lVar5));\n        *(undefined4 *)((long)puVar7 + lVar5) = uVar1;\n        lVar5 = lVar5 + 4;\n        param_1 = extraout_RDX;\n      } while (lVar5 != 0x40);\n      param_1 = extraout_RDX + 0x40;\n      uVar4 = local_e4 >> 2 | local_e4 << 0x1e;\n      uVar13 = ((local_e0 ^ local_dc) & local_e4 ^ local_dc) +\n               (local_b8 << 5 | local_b8 >> 0x1b) + local_88 + 0x5a827999 + local_b4;\n      uVar10 = (uVar13 * 0x20 | uVar13 >> 0x1b) +\n               local_84 + 0x5a827999 + local_dc + ((local_e0 ^ uVar4) & local_b8 ^ local_e0);\n      uVar2 = local_b8 >> 2 | local_b8 << 0x1e;\n      uVar14 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar13 = ((uVar4 ^ uVar2) & uVar13 ^ uVar4) + local_80 + 0x5a827999 + local_e0 +\n               (uVar10 * 0x20 | uVar10 >> 0x1b);\n      uVar11 = uVar10 >> 2 | uVar10 * 0x40000000;\n      uVar10 = ((uVar2 ^ uVar14) & uVar10 ^ uVar2) + local_7c + 0x5a827999 + uVar4 +\n               (uVar13 * 0x20 | uVar13 >> 0x1b);\n      uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar4 = ((uVar14 ^ uVar11) & uVar13 ^ uVar14) + local_78 + 0x5a827999 + uVar2 +\n              (uVar10 * 0x20 | uVar10 >> 0x1b);\n      uVar13 = uVar10 >> 2 | uVar10 * 0x40000000;\n      uVar2 = ((uVar11 ^ uVar8) & uVar10 ^ uVar11) + local_74 + 0x5a827999 + uVar14 +\n              (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar11 = ((uVar8 ^ uVar13) & uVar4 ^ uVar8) + local_70 + 0x5a827999 + uVar11 +\n               (uVar2 * 0x20 | uVar2 >> 0x1b);\n      uVar4 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar2 = ((uVar13 ^ uVar10) & uVar2 ^ uVar13) + local_6c + 0x5a827999 + uVar8 +\n              (uVar11 * 0x20 | uVar11 >> 0x1b);\n      uVar14 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar13 = ((uVar10 ^ uVar4) & uVar11 ^ uVar10) + local_68 + 0x5a827999 + uVar13 +\n               (uVar2 * 0x20 | uVar2 >> 0x1b);\n      uVar11 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar2 = ((uVar4 ^ uVar14) & uVar2 ^ uVar4) + local_64 + 0x5a827999 + uVar10 +\n              (uVar13 * 0x20 | uVar13 >> 0x1b);\n      uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar4 = ((uVar14 ^ uVar11) & uVar13 ^ uVar14) + local_60 + 0x5a827999 + uVar4 +\n              (uVar2 * 0x20 | uVar2 >> 0x1b);\n      uVar13 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar2 = ((uVar11 ^ uVar8) & uVar2 ^ uVar11) + local_5c + 0x5a827999 + uVar14 +\n              (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar11 = ((uVar8 ^ uVar13) & uVar4 ^ uVar8) + local_58 + 0x5a827999 + uVar11 +\n               (uVar2 * 0x20 | uVar2 >> 0x1b);\n      uVar4 = ((uVar13 ^ uVar10) & uVar2 ^ uVar13) + local_54 + 0x5a827999 + uVar8 +\n              (uVar11 * 0x20 | uVar11 >> 0x1b);\n      uVar2 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar8 = local_88 ^ local_80 ^ local_68 ^ local_54;\n      uVar18 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar8 = local_84 ^ local_7c ^ local_64 ^ local_50;\n      uVar15 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar17 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar13 = ((uVar10 ^ uVar2) & uVar11 ^ uVar10) + local_50 + 0x5a827999 + uVar13 +\n               (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar14 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar4 = ((uVar2 ^ uVar15) & uVar4 ^ uVar2) + local_4c + 0x5a827999 + uVar10 +\n              (uVar13 * 0x20 | uVar13 >> 0x1b);\n      uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar10 = ((uVar15 ^ uVar14) & uVar13 ^ uVar15) + uVar18 + 0x5a827999 + uVar2 +\n               (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar11 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar13 = uVar10 >> 2 | uVar10 * 0x40000000;\n      uVar2 = ((uVar14 ^ uVar8) & uVar4 ^ uVar14) + uVar17 + 0x5a827999 + uVar15 +\n              (uVar10 * 0x20 | uVar10 >> 0x1b);\n      uVar4 = local_80 ^ local_78 ^ local_60 ^ local_4c;\n      uVar16 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar4 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar14 = ((uVar8 ^ uVar11) & uVar10 ^ uVar8) + uVar16 + 0x5a827999 + uVar14 +\n               (uVar2 * 0x20 | uVar2 >> 0x1b);\n      uVar10 = local_7c ^ local_74 ^ local_5c ^ uVar18;\n      uVar12 = uVar10 << 1 | (uint)((int)uVar10 < 0);\n      uVar2 = ((uVar11 ^ uVar13) & uVar2 ^ uVar11) + uVar12 + 0x5a827999 + uVar8 +\n              (uVar14 * 0x20 | uVar14 >> 0x1b);\n      uVar10 = local_58 ^ local_78 ^ local_70 ^ uVar17;\n      uVar9 = uVar10 << 1 | (uint)((int)uVar10 < 0);\n      uVar19 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar8 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar11 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               uVar9 + 0x6ed9eba1 + uVar11 + (uVar13 ^ uVar4 ^ uVar14);\n      uVar10 = local_54 ^ local_74 ^ local_6c ^ uVar16;\n      uVar6 = uVar10 << 1 | (uint)((int)uVar10 < 0);\n      uVar13 = (uVar11 * 0x20 | uVar11 >> 0x1b) +\n               uVar6 + 0x6ed9eba1 + uVar13 + (uVar4 ^ uVar19 ^ uVar2);\n      uVar2 = local_50 ^ local_70 ^ local_68 ^ uVar12;\n      uVar10 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar27 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar11 = (uVar13 * 0x20 | uVar13 >> 0x1b) +\n               uVar10 + 0x6ed9eba1 + uVar4 + (uVar19 ^ uVar8 ^ uVar11);\n      uVar2 = local_4c ^ local_6c ^ local_64 ^ uVar9;\n      uVar2 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar15 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar14 = (uVar11 * 0x20 | uVar11 >> 0x1b) +\n               uVar2 + 0x6ed9eba1 + uVar19 + (uVar8 ^ uVar27 ^ uVar13);\n      uVar4 = local_68 ^ local_60 ^ uVar18 ^ uVar6;\n      uVar20 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar19 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar13 = (uVar14 * 0x20 | uVar14 >> 0x1b) +\n               uVar20 + 0x6ed9eba1 + uVar8 + (uVar27 ^ uVar15 ^ uVar11);\n      uVar4 = local_64 ^ local_5c ^ uVar17 ^ uVar10;\n      uVar11 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar23 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar27 = (uVar13 * 0x20 | uVar13 >> 0x1b) +\n               (uVar15 ^ uVar19 ^ uVar14) + uVar11 + 0x6ed9eba1 + uVar27;\n      uVar4 = local_60 ^ local_58 ^ uVar16 ^ uVar2;\n      uVar14 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar8 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar4 = (uVar19 ^ uVar23 ^ uVar13) + uVar14 + 0x6ed9eba1 + uVar15 +\n              (uVar27 * 0x20 | uVar27 >> 0x1b);\n      uVar13 = local_5c ^ local_54 ^ uVar12 ^ uVar20;\n      uVar15 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar28 = uVar27 >> 2 | uVar27 * 0x40000000;\n      uVar27 = (uVar4 * 0x20 | uVar4 >> 0x1b) +\n               (uVar23 ^ uVar8 ^ uVar27) + uVar15 + 0x6ed9eba1 + uVar19;\n      uVar13 = local_58 ^ local_50 ^ uVar9 ^ uVar11;\n      uVar19 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar24 = (uVar27 * 0x20 | uVar27 >> 0x1b) +\n               (uVar8 ^ uVar28 ^ uVar4) + uVar19 + 0x6ed9eba1 + uVar23;\n      uVar4 = local_54 ^ local_4c ^ uVar6 ^ uVar14;\n      uVar23 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar21 = (uVar24 * 0x20 | uVar24 >> 0x1b) +\n               (uVar28 ^ uVar13 ^ uVar27) + uVar23 + 0x6ed9eba1 + uVar8;\n      uVar26 = uVar27 >> 2 | uVar27 * 0x40000000;\n      uVar4 = uVar18 ^ local_50 ^ uVar10 ^ uVar15;\n      uVar27 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar25 = uVar24 >> 2 | uVar24 * 0x40000000;\n      uVar8 = (uVar13 ^ uVar26 ^ uVar24) + uVar27 + 0x6ed9eba1 + uVar28 +\n              (uVar21 * 0x20 | uVar21 >> 0x1b);\n      uVar4 = local_4c ^ uVar17 ^ uVar2 ^ uVar19;\n      uVar29 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar22 = uVar21 >> 2 | uVar21 * 0x40000000;\n      uVar18 = uVar18 ^ uVar16 ^ uVar20 ^ uVar23;\n      uVar4 = uVar29 + 0x6ed9eba1 + uVar13 + (uVar26 ^ uVar25 ^ uVar21) +\n              (uVar8 * 0x20 | uVar8 >> 0x1b);\n      uVar30 = uVar18 << 1 | (uint)((int)uVar18 < 0);\n      uVar18 = uVar8 >> 2 | uVar8 * 0x40000000;\n      uVar24 = (uVar25 ^ uVar22 ^ uVar8) + uVar30 + 0x6ed9eba1 + uVar26 +\n               (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar13 = uVar17 ^ uVar12 ^ uVar11 ^ uVar27;\n      uVar28 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar13 = uVar16 ^ uVar9 ^ uVar14 ^ uVar29;\n      uVar26 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar8 = uVar12 ^ uVar6 ^ uVar15 ^ uVar30;\n      uVar13 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar21 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar8 = uVar9 ^ uVar10 ^ uVar19 ^ uVar28;\n      uVar4 = (uVar22 ^ uVar18 ^ uVar4) + uVar28 + 0x6ed9eba1 + uVar25 +\n              (uVar24 * 0x20 | uVar24 >> 0x1b);\n      uVar25 = uVar24 >> 2 | uVar24 * 0x40000000;\n      uVar16 = (uVar18 ^ uVar13 ^ uVar24) + uVar26 + 0x6ed9eba1 + uVar22 +\n               (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar24 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar18 = (uVar13 ^ uVar25 ^ uVar4) + uVar21 + 0x6ed9eba1 + uVar18 +\n               (uVar16 * 0x20 | uVar16 >> 0x1b);\n      uVar12 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar4 = uVar6 ^ uVar2 ^ uVar23 ^ uVar26;\n      uVar9 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n      uVar8 = (uVar25 ^ uVar24 ^ uVar16) + uVar12 + 0x6ed9eba1 + uVar13 +\n              (uVar18 * 0x20 | uVar18 >> 0x1b);\n      uVar16 = uVar18 >> 2 | uVar18 * 0x40000000;\n      uVar4 = uVar10 ^ uVar20 ^ uVar27 ^ uVar21;\n      uVar13 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar10 = (uVar24 ^ uVar17 ^ uVar18) + uVar9 + 0x6ed9eba1 + uVar25 +\n               (uVar8 * 0x20 | uVar8 >> 0x1b);\n      uVar6 = uVar8 >> 2 | uVar8 * 0x40000000;\n      uVar2 = uVar2 ^ uVar11 ^ uVar29 ^ uVar12;\n      uVar4 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar8 = (uVar17 ^ uVar16 ^ uVar8) + uVar13 + 0x6ed9eba1 + uVar24 +\n              (uVar10 * 0x20 | uVar10 >> 0x1b);\n      uVar18 = uVar10 >> 2 | uVar10 * 0x40000000;\n      uVar17 = (uVar8 * 0x20 | uVar8 >> 0x1b) +\n               (uVar16 ^ uVar6 ^ uVar10) + uVar4 + 0x6ed9eba1 + uVar17;\n      uVar2 = uVar20 ^ uVar14 ^ uVar30 ^ uVar9;\n      uVar10 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar2 = uVar15 ^ uVar11 ^ uVar28 ^ uVar13;\n      uVar20 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar2 = uVar8 >> 2 | uVar8 * 0x40000000;\n      uVar25 = uVar17 >> 2 | uVar17 * 0x40000000;\n      uVar11 = uVar10 + 0x8f1bbcdc + uVar16 + (uVar17 * 0x20 | uVar17 >> 0x1b) +\n               ((uVar8 | uVar18) & uVar6 | uVar8 & uVar18);\n      uVar8 = uVar19 ^ uVar14 ^ uVar26 ^ uVar4;\n      uVar16 = (uVar11 * 0x20 | uVar11 >> 0x1b) +\n               (uVar17 & uVar2 | (uVar17 | uVar2) & uVar18) + uVar20 + 0x8f1bbcdc + uVar6;\n      uVar14 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar24 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar11 = uVar14 + 0x8f1bbcdc + uVar18 + (uVar16 * 0x20 | uVar16 >> 0x1b) +\n               ((uVar11 | uVar25) & uVar2 | uVar11 & uVar25);\n      uVar8 = uVar15 ^ uVar23 ^ uVar21 ^ uVar10;\n      uVar18 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n      uVar8 = uVar19 ^ uVar27 ^ uVar12 ^ uVar20;\n      uVar6 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar2 = (uVar11 * 0x20 | uVar11 >> 0x1b) +\n              (uVar16 & uVar24 | (uVar16 | uVar24) & uVar25) + uVar18 + 0x8f1bbcdc + uVar2;\n      uVar25 = uVar6 + 0x8f1bbcdc + uVar25 + (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               ((uVar11 | uVar17) & uVar24 | uVar11 & uVar17);\n      uVar19 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar11 = uVar9 ^ uVar23 ^ uVar29 ^ uVar14;\n      uVar8 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar15 = uVar11 << 1 | (uint)((int)uVar11 < 0);\n      uVar11 = uVar27 ^ uVar30 ^ uVar13 ^ uVar18;\n      uVar16 = (uVar25 * 0x20 | uVar25 >> 0x1b) +\n               (uVar2 & uVar19 | (uVar2 | uVar19) & uVar17) + uVar15 + 0x8f1bbcdc + uVar24;\n      uVar23 = uVar11 << 1 | (uint)((int)uVar11 < 0);\n      uVar24 = uVar25 >> 2 | uVar25 * 0x40000000;\n      uVar27 = uVar23 + 0x8f1bbcdc + uVar17 + (uVar16 * 0x20 | uVar16 >> 0x1b) +\n               ((uVar25 | uVar8) & uVar19 | uVar25 & uVar8);\n      uVar2 = uVar4 ^ uVar29 ^ uVar28 ^ uVar6;\n      uVar25 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar2 = uVar30 ^ uVar26 ^ uVar10 ^ uVar15;\n      uVar30 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar17 = uVar16 >> 2 | uVar16 * 0x40000000;\n      uVar11 = (uVar27 * 0x20 | uVar27 >> 0x1b) +\n               (uVar16 & uVar24 | (uVar16 | uVar24) & uVar8) + uVar25 + 0x8f1bbcdc + uVar19;\n      uVar16 = uVar27 >> 2 | uVar27 * 0x40000000;\n      uVar2 = uVar30 + 0x8f1bbcdc + uVar8 + (uVar11 * 0x20 | uVar11 >> 0x1b) +\n              ((uVar27 | uVar17) & uVar24 | uVar27 & uVar17);\n      uVar8 = uVar28 ^ uVar21 ^ uVar20 ^ uVar23;\n      uVar27 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar29 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar11 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               (uVar11 & uVar16 | (uVar11 | uVar16) & uVar17) + uVar29 + 0x8f1bbcdc + uVar24;\n      uVar8 = uVar12 ^ uVar26 ^ uVar14 ^ uVar25;\n      uVar24 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar8 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar2 = ((uVar2 | uVar27) & uVar16 | uVar2 & uVar27) +\n              uVar24 + 0x8f1bbcdc + uVar17 + (uVar11 * 0x20 | uVar11 >> 0x1b);\n      uVar17 = uVar18 ^ uVar21 ^ uVar9 ^ uVar30;\n      uVar19 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar22 = uVar17 << 1 | (uint)((int)uVar17 < 0);\n      uVar12 = uVar12 ^ uVar13 ^ uVar6 ^ uVar29;\n      uVar12 = uVar12 << 1 | (uint)((int)uVar12 < 0);\n      uVar16 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               (uVar11 & uVar8 | (uVar11 | uVar8) & uVar27) + uVar22 + 0x8f1bbcdc + uVar16;\n      uVar17 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar2 = ((uVar2 | uVar19) & uVar8 | uVar2 & uVar19) +\n              uVar12 + 0x8f1bbcdc + uVar27 + (uVar16 * 0x20 | uVar16 >> 0x1b);\n      uVar11 = uVar15 ^ uVar9 ^ uVar4 ^ uVar24;\n      uVar21 = uVar16 >> 2 | uVar16 * 0x40000000;\n      uVar9 = uVar11 << 1 | (uint)((int)uVar11 < 0);\n      uVar13 = uVar13 ^ uVar10 ^ uVar23 ^ uVar22;\n      uVar11 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               (uVar16 & uVar17 | (uVar16 | uVar17) & uVar19) + uVar9 + 0x8f1bbcdc + uVar8;\n      uVar8 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar27 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar13 = uVar8 + 0x8f1bbcdc + uVar19 + (uVar11 * 0x20 | uVar11 >> 0x1b) +\n               ((uVar2 | uVar21) & uVar17 | uVar2 & uVar21);\n      uVar2 = uVar4 ^ uVar20 ^ uVar25 ^ uVar12;\n      uVar4 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar16 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar17 = (uVar13 * 0x20 | uVar13 >> 0x1b) +\n               (uVar11 & uVar27 | (uVar11 | uVar27) & uVar21) + uVar4 + 0x8f1bbcdc + uVar17;\n      uVar2 = uVar20 ^ uVar18 ^ uVar29 ^ uVar8;\n      uVar26 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar2 = uVar10 ^ uVar14 ^ uVar30 ^ uVar9;\n      uVar10 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar11 = uVar13 >> 2 | uVar13 * 0x40000000;\n      uVar2 = ((uVar13 | uVar16) & uVar27 | uVar13 & uVar16) +\n              uVar10 + 0x8f1bbcdc + uVar21 + (uVar17 * 0x20 | uVar17 >> 0x1b);\n      uVar13 = uVar14 ^ uVar6 ^ uVar24 ^ uVar4;\n      uVar19 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar21 = uVar17 >> 2 | uVar17 * 0x40000000;\n      uVar14 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               (uVar17 & uVar11 | (uVar17 | uVar11) & uVar16) + uVar26 + 0x8f1bbcdc + uVar27;\n      uVar13 = uVar6 ^ uVar23 ^ uVar12 ^ uVar26;\n      uVar17 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar28 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar2 = ((uVar2 | uVar21) & uVar11 | uVar2 & uVar21) +\n              uVar19 + 0x8f1bbcdc + uVar16 + (uVar14 * 0x20 | uVar14 >> 0x1b);\n      uVar13 = uVar18 ^ uVar15 ^ uVar22 ^ uVar10;\n      uVar13 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar27 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar11 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               (uVar14 & uVar17 | (uVar14 | uVar17) & uVar21) + uVar13 + 0x8f1bbcdc + uVar11;\n      uVar18 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar14 = (uVar11 * 0x20 | uVar11 >> 0x1b) +\n               (uVar17 ^ uVar27 ^ uVar2) + uVar28 + 0xca62c1d6 + uVar21;\n      uVar2 = uVar9 ^ uVar15 ^ uVar25 ^ uVar19;\n      uVar6 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar21 = uVar11 >> 2 | uVar11 * 0x40000000;\n      uVar2 = uVar23 ^ uVar30 ^ uVar8 ^ uVar13;\n      uVar15 = (uVar14 * 0x20 | uVar14 >> 0x1b) +\n               uVar6 + 0xca62c1d6 + uVar17 + (uVar27 ^ uVar18 ^ uVar11);\n      uVar23 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar17 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar2 = uVar30 ^ uVar24 ^ uVar10 ^ uVar6;\n      local_88 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar14 = (uVar15 * 0x20 | uVar15 >> 0x1b) +\n               (uVar18 ^ uVar21 ^ uVar14) + uVar23 + 0xca62c1d6 + uVar27;\n      uVar2 = uVar4 ^ uVar25 ^ uVar29 ^ uVar28;\n      uVar11 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar16 = uVar15 >> 2 | uVar15 * 0x40000000;\n      uVar2 = (uVar14 * 0x20 | uVar14 >> 0x1b) +\n              (uVar21 ^ uVar17 ^ uVar15) + uVar11 + 0xca62c1d6 + uVar18;\n      uVar18 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar15 = uVar29 ^ uVar22 ^ uVar26 ^ uVar23;\n      local_84 = uVar15 << 1 | (uint)((int)uVar15 < 0);\n      uVar14 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               local_88 + 0xca62c1d6 + uVar21 + (uVar17 ^ uVar16 ^ uVar14);\n      uVar27 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar15 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar2 = (uVar16 ^ uVar18 ^ uVar2) + local_84 + 0xca62c1d6 + uVar17 +\n              (uVar14 * 0x20 | uVar14 >> 0x1b);\n      uVar17 = uVar24 ^ uVar12 ^ uVar19 ^ uVar11;\n      local_80 = uVar17 << 1 | (uint)((int)uVar17 < 0);\n      uVar16 = (uVar2 * 0x20 | uVar2 >> 0x1b) +\n               local_80 + 0xca62c1d6 + uVar16 + (uVar18 ^ uVar27 ^ uVar14);\n      uVar14 = uVar13 ^ uVar22 ^ uVar9 ^ local_88;\n      local_7c = uVar14 << 1 | (uint)((int)uVar14 < 0);\n      uVar17 = (uVar16 * 0x20 | uVar16 >> 0x1b) +\n               local_7c + 0xca62c1d6 + uVar18 + (uVar27 ^ uVar15 ^ uVar2);\n      uVar2 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar14 = uVar28 ^ uVar12 ^ uVar8 ^ local_84;\n      local_78 = uVar14 << 1 | (uint)((int)uVar14 < 0);\n      uVar18 = uVar16 >> 2 | uVar16 * 0x40000000;\n      uVar12 = (uVar17 * 0x20 | uVar17 >> 0x1b) +\n               local_78 + 0xca62c1d6 + uVar27 + (uVar15 ^ uVar2 ^ uVar16);\n      uVar14 = uVar6 ^ uVar9 ^ uVar4 ^ local_80;\n      local_74 = uVar14 << 1 | (uint)((int)uVar14 < 0);\n      uVar14 = uVar17 >> 2 | uVar17 * 0x40000000;\n      uVar16 = uVar12 >> 2 | uVar12 * 0x40000000;\n      uVar27 = (uVar12 * 0x20 | uVar12 >> 0x1b) +\n               local_74 + 0xca62c1d6 + uVar15 + (uVar2 ^ uVar18 ^ uVar17);\n      uVar8 = uVar8 ^ uVar10 ^ uVar23 ^ local_7c;\n      local_70 = uVar8 << 1 | (uint)((int)uVar8 < 0);\n      uVar15 = (uVar27 * 0x20 | uVar27 >> 0x1b) +\n               local_70 + 0xca62c1d6 + uVar2 + (uVar18 ^ uVar14 ^ uVar12);\n      uVar2 = uVar11 ^ uVar4 ^ uVar26 ^ local_78;\n      uVar9 = uVar27 >> 2 | uVar27 * 0x40000000;\n      local_6c = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar2 = uVar19 ^ uVar10 ^ local_88 ^ local_74;\n      local_68 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar4 = (uVar15 * 0x20 | uVar15 >> 0x1b) +\n              local_6c + 0xca62c1d6 + uVar18 + (uVar14 ^ uVar16 ^ uVar27);\n      uVar27 = uVar15 >> 2 | uVar15 * 0x40000000;\n      uVar8 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar10 = (uVar16 ^ uVar9 ^ uVar15) + local_68 + 0xca62c1d6 + uVar14 +\n               (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar2 = uVar26 ^ uVar13 ^ local_84 ^ local_70;\n      local_64 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar4 = (uVar9 ^ uVar27 ^ uVar4) + local_64 + 0xca62c1d6 + uVar16 +\n              (uVar10 * 0x20 | uVar10 >> 0x1b);\n      uVar2 = local_80 ^ uVar19 ^ uVar28 ^ local_6c;\n      local_60 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar14 = local_60 + 0xca62c1d6 + uVar9 + (uVar27 ^ uVar8 ^ uVar10) +\n               (uVar4 * 0x20 | uVar4 >> 0x1b);\n      uVar15 = uVar10 >> 2 | uVar10 * 0x40000000;\n      uVar2 = local_68 ^ local_7c ^ uVar13 ^ uVar6;\n      local_5c = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar10 = uVar4 >> 2 | uVar4 * 0x40000000;\n      uVar13 = local_64 ^ local_78 ^ uVar28 ^ uVar23;\n      uVar2 = (uVar8 ^ uVar15 ^ uVar4) + local_5c + 0xca62c1d6 + uVar27 +\n              (uVar14 * 0x20 | uVar14 >> 0x1b);\n      local_58 = uVar13 << 1 | (uint)((int)uVar13 < 0);\n      uVar19 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar14 = (uVar15 ^ uVar10 ^ uVar14) + local_58 + 0xca62c1d6 + uVar8 +\n               (uVar2 * 0x20 | uVar2 >> 0x1b);\n      uVar4 = local_60 ^ local_74 ^ uVar6 ^ uVar11;\n      local_54 = uVar4 << 1 | (uint)((int)uVar4 < 0);\n      uVar8 = uVar2 >> 2 | uVar2 * 0x40000000;\n      uVar13 = (uVar10 ^ uVar19 ^ uVar2) + local_54 + 0xca62c1d6 + uVar15 +\n               (uVar14 * 0x20 | uVar14 >> 0x1b);\n      uVar2 = local_5c ^ local_70 ^ uVar23 ^ local_88;\n      local_50 = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      uVar15 = uVar14 >> 2 | uVar14 * 0x40000000;\n      uVar4 = (uVar19 ^ uVar8 ^ uVar14) + local_50 + 0xca62c1d6 + uVar10 +\n              (uVar13 * 0x20 | uVar13 >> 0x1b);\n      local_e4 = local_e4 + uVar4;\n      uVar2 = local_6c ^ local_84 ^ uVar11 ^ local_58;\n      local_4c = uVar2 << 1 | (uint)((int)uVar2 < 0);\n      local_e0 = local_e0 + (uVar13 >> 2 | uVar13 * 0x40000000);\n      local_b8 = uVar19 + local_4c + 0xca62c1d6 + local_b8 + (uVar8 ^ uVar15 ^ uVar13) +\n                 (uVar4 * 0x20 | uVar4 >> 0x1b);\n      *param_3 = local_b8;\n      param_3[1] = local_e4;\n      param_3[2] = local_e0;\n      local_dc = local_dc + uVar15;\n      local_b4 = local_b4 + uVar8;\n      param_3[3] = local_dc;\n      param_3[4] = local_b4;\n    } while (param_1 < uVar3);\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0010f1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_0010df58)();\n  return iVar1;\n}\n\n", 
    "00103700": "\nulong digest_check(byte *param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  long lVar3;\n  __ssize_t _Var4;\n  char *pcVar5;\n  undefined8 uVar6;\n  FILE *__stream;\n  int *piVar7;\n  __int32_t **pp_Var8;\n  undefined8 uVar9;\n  ulong uVar10;\n  undefined1 *puVar11;\n  char **ppcVar12;\n  char *pcVar13;\n  char **in_R8;\n  undefined1 *in_R9;\n  undefined1 *puVar14;\n  ulong uVar15;\n  long in_FS_OFFSET;\n  long local_c8;\n  byte *local_b8;\n  char local_b0;\n  ulong local_a8;\n  ulong local_a0;\n  uint local_98;\n  char local_91;\n  char local_7d;\n  undefined local_7c [4];\n  char *local_78;\n  size_t local_70;\n  char *local_68;\n  long local_60;\n  undefined local_58 [24];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = ptr_align_constprop_0(local_58);\n  local_98 = *param_1 - 0x2d;\n  if ((local_98 != 0) || (local_98 = (uint)param_1[1], local_98 != 0)) {\n    __stream = (FILE *)fopen_safer(param_1,\"r\");\n    local_b8 = param_1;\n    if (__stream != (FILE *)0x0) goto LAB_00103781;\nLAB_00103a0d:\n    uVar15 = 0;\n    uVar6 = quotearg_n_style_colon(0,3,local_b8);\n    piVar7 = __errno_location();\n    error(0,*piVar7,\"%s\",uVar6);\n    goto LAB_001039ba;\n  }\n  have_read_stdin = 1;\n  local_b8 = (byte *)dcgettext(0,\"standard input\",5);\n  __stream = stdin;\nLAB_00103781:\n  local_c8 = 0;\n  ppcVar12 = (char **)0x1;\n  uVar15 = 0;\n  local_78 = (char *)0x0;\n  local_70 = 0;\n  local_a0 = 0;\n  local_a8 = 0;\n  local_91 = '\\0';\n  while (_Var4 = getline(&local_78,&local_70,__stream), 0 < _Var4) {\n    if (*local_78 != '#') {\n      if (local_78[_Var4 + -1] == '\\n') {\n        local_78[_Var4 + -1] = '\\0';\n        _Var4 = _Var4 + -1;\n      }\n      in_R8 = &local_68;\n      uVar1 = split_3(local_78,_Var4,&local_60,local_7c);\n      pcVar13 = local_68;\n      uVar10 = (ulong)uVar1;\n      if (((char)uVar1 != '\\0') &&\n         (((local_98 != 0 || (*local_68 != '-')) || (local_68[1] != '\\0')))) {\n        uVar15 = 0;\n        if (status_only == '\\0') {\n          pcVar5 = strchr(local_68,10);\n          uVar15 = (ulong)(pcVar5 != (char *)0x0);\n        }\n        uVar1 = digest_file_isra_0(pcVar13,lVar3,&local_7d);\n        in_R8 = (char **)(ulong)uVar1;\n        puVar14 = in_R9;\n        if ((byte)uVar1 == 0) {\n          local_a8 = local_a8 + 1;\n          if (status_only != '\\0') goto LAB_00103922;\n          if ((int)uVar15 != 0) {\n            putchar_unlocked(0x5c);\n          }\n          print_filename(local_68,uVar15);\n          pcVar13 = \"FAILED open or read\";\n          goto LAB_00103905;\n        }\n        if ((ignore_missing != '\\0') && (local_7d != '\\0')) goto LAB_00103922;\n        in_R9 = (undefined1 *)(digest_hex_bytes >> 1);\n        puVar14 = in_R9;\n        if (in_R9 == (undefined1 *)0x0) goto LAB_00103e18;\n        in_R8 = (char **)(ulong)(byte)uVar1;\n        pp_Var8 = __ctype_tolower_loc();\n        puVar11 = (undefined1 *)0x0;\n        while (((int)\"0123456789abcdef8.30\"[(byte)puVar11[lVar3] >> 4] ==\n                (*pp_Var8)[*(byte *)(local_60 + (long)puVar11 * 2)] &&\n               ((int)\"0123456789abcdef8.30\"[(byte)puVar11[lVar3] & 0xf] ==\n                (*pp_Var8)[*(byte *)(local_60 + 1 + (long)puVar11 * 2)]))) {\n          puVar11 = puVar11 + 1;\n          if (in_R9 == puVar11) goto LAB_00103bf3;\n        }\n        local_a0 = local_a0 + 1;\n        if (status_only != '\\0') goto LAB_00103922;\n        if ((int)uVar15 != 0) goto LAB_00103cb1;\n        goto LAB_00103b45;\n      }\n      local_c8 = local_c8 + 1;\n      if (warn != '\\0') {\n        uVar6 = quotearg_n_style_colon(0,3,local_b8);\n        uVar9 = dcgettext(0,\"%s: %lu: improperly formatted %s checksum line\",5);\n        in_R9 = &DAT_001099fe;\n        in_R8 = ppcVar12;\n        error(0,0,uVar9,uVar6);\n      }\n    }\n    iVar2 = feof_unlocked(__stream);\n    while( true ) {\n      if ((iVar2 != 0) || (iVar2 = ferror_unlocked(__stream), iVar2 != 0)) goto LAB_00103938;\n      ppcVar12 = (char **)((long)ppcVar12 + 1);\n      if (ppcVar12 != (char **)0x0) break;\n      uVar10 = quotearg_n_style_colon(0,3,local_b8);\n      uVar6 = dcgettext(0,\"%s: too many checksum lines\",5);\n      error(1,0,uVar6,uVar10);\n      puVar14 = in_R9;\nLAB_00103e18:\n      in_R9 = (undefined1 *)0x0;\nLAB_00103bf3:\n      local_91 = status_only;\n      if ((status_only == '\\0') && (local_91 = quiet, quiet == '\\0')) {\n        local_91 = (char)in_R8;\n        puVar11 = in_R9;\n        if ((int)uVar15 == 0) {\n          in_R8 = (char **)((ulong)in_R8 & 0xff);\n          print_filename(local_68,0);\n          local_b0 = (char)in_R8;\n          local_91 = local_b0;\n          in_R9 = puVar14;\nLAB_00103c3e:\n          puVar14 = in_R9;\n          if (quiet != '\\0') goto LAB_00103922;\n          pcVar13 = \"OK\";\n        }\n        else {\nLAB_00103cb1:\n          putchar_unlocked(0x5c);\n          in_R9 = puVar14;\nLAB_00103b45:\n          print_filename(local_68,uVar15);\n          if (in_R9 == puVar11) goto LAB_00103c3e;\n          pcVar13 = \"FAILED\";\n        }\nLAB_00103905:\n        uVar6 = dcgettext(0,pcVar13,5);\n        __printf_chk(1,\": %s\\n\",uVar6);\n        puVar14 = in_R9;\n      }\nLAB_00103922:\n      uVar15 = uVar10 & 0xffffffff;\n      iVar2 = feof_unlocked(__stream);\n      in_R9 = puVar14;\n    }\n  }\nLAB_00103938:\n  free(local_78);\n  iVar2 = ferror_unlocked(__stream);\n  if (iVar2 == 0) {\n    if ((local_98 != 0) && (iVar2 = rpl_fclose(__stream), iVar2 != 0)) goto LAB_00103a0d;\n    if ((char)uVar15 == '\\0') {\n      uVar6 = quotearg_n_style_colon(0,3,local_b8);\n      uVar9 = dcgettext(0,\"%s: no properly formatted %s checksum lines found\",5);\n      error(0,0,uVar9,uVar6,&DAT_001099fe);\n      goto LAB_001039ba;\n    }\n    if (status_only == '\\0') {\n      if (local_c8 != 0) {\n        uVar6 = select_plural(local_c8);\n        uVar6 = dcngettext(0,\"WARNING: %lu line is improperly formatted\",\n                           \"WARNING: %lu lines are improperly formatted\",uVar6,5);\n        error(0,0,uVar6,local_c8);\n      }\n      if (local_a8 != 0) {\n        uVar6 = select_plural(local_a8);\n        uVar6 = dcngettext(0,\"WARNING: %lu listed file could not be read\",\n                           \"WARNING: %lu listed files could not be read\",uVar6,5);\n        error(0,0,uVar6,local_a8);\n      }\n      if (local_a0 != 0) {\n        uVar6 = select_plural(local_a0);\n        uVar6 = dcngettext(0,\"WARNING: %lu computed checksum did NOT match\",\n                           \"WARNING: %lu computed checksums did NOT match\",uVar6,5);\n        error(0,0,uVar6,local_a0);\n      }\n      if (ignore_missing == '\\0') goto LAB_001039a0;\n      if (local_91 == '\\0') {\n        uVar6 = quotearg_n_style_colon(0,3,local_b8);\n        pcVar13 = \"%s: no file was verified\";\n        goto LAB_00103dc0;\n      }\n    }\n    else {\nLAB_001039a0:\n      if (local_91 == '\\0') goto LAB_001039b7;\n    }\n    if ((local_a8 | local_a0) == 0) {\n      uVar15 = (ulong)(strict ^ 1 | (uint)(local_c8 == 0));\n      goto LAB_001039ba;\n    }\n  }\n  else {\n    uVar6 = quotearg_n_style_colon(0,3,local_b8);\n    pcVar13 = \"%s: read error\";\nLAB_00103dc0:\n    uVar9 = dcgettext(0,pcVar13,5);\n    error(0,0,uVar9,uVar6);\n  }\nLAB_001039b7:\n  uVar15 = 0;\nLAB_001039ba:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar15;\n}\n\n", 
    "0010f100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00102fa0": "\nulong hex_digits(byte *param_1)\n\n{\n  ulong uVar1;\n  ulong in_RAX;\n  ushort **ppuVar2;\n  \n  uVar1 = digest_hex_bytes;\n  if (digest_hex_bytes != 0) {\n    ppuVar2 = __ctype_b_loc();\n    in_RAX = 0;\n    do {\n      if ((*(byte *)((long)*ppuVar2 + (ulong)*param_1 * 2 + 1) & 0x10) == 0) {\n        return 0;\n      }\n      in_RAX = (ulong)((int)in_RAX + 1);\n      param_1 = param_1 + 1;\n    } while (in_RAX < uVar1);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(*param_1 == 0);\n}\n\n", 
    "00108ea4": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00102650": "\nvoid dcngettext(void)\n\n{\n  (*(code *)PTR_dcngettext_0010df78)();\n  return;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010dee8)();\n  return iVar1;\n}\n\n", 
    "00108b60": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00108510": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "00104030": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = quotearg_colon();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_001040b8;\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_001040b8:\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "00107ed0": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010a45b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00108199;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00108199:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010823b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010823b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00107fed;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00107fed:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00107780": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00108990": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00104150": "\nlong sha1_read_ctx(undefined4 *param_1,long param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined4 uVar1;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  long extraout_RDX_01;\n  long extraout_RDX_02;\n  \n  uVar1 = __bswap_32(*param_1,param_2,param_1,param_4,param_2);\n  set_uint32(param_2,uVar1);\n  uVar1 = __bswap_32(*(undefined4 *)(extraout_RDX + 4));\n  set_uint32(param_2 + 4,uVar1);\n  uVar1 = __bswap_32(*(undefined4 *)(extraout_RDX_00 + 8));\n  set_uint32(param_2 + 8,uVar1);\n  uVar1 = __bswap_32(*(undefined4 *)(extraout_RDX_01 + 0xc));\n  set_uint32(param_2 + 0xc,uVar1);\n  uVar1 = __bswap_32(*(undefined4 *)(extraout_RDX_02 + 0x10));\n  set_uint32(param_2 + 0x10,uVar1);\n  return param_2;\n}\n\n", 
    "00102e10": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010dfc8)();\n  return ppuVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010df38)();\n  return pvVar1;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0010dea8)();\n  return pcVar1;\n}\n\n", 
    "00107e20": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "001085b0": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001075e0": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010dee0)();\n  return iVar1;\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0010de50)();\n  return iVar1;\n}\n\n", 
    "00102eb0": "\nvoid emit_stdin_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00108c90": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0010df70)();\n  return pFVar1;\n}\n\n", 
    "00108a50": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104020": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "00105ce0": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010dea0)();\n  return sVar1;\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_0010dfc0)();\n  return pp_Var1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_0010df30)();\n  return sVar1;\n}\n\n", 
    "00105b10": "\nFILE * fopen_safer(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = dup_safer(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      rpl_fclose(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = rpl_fclose(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010df68)();\n  return iVar1;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010ded8)();\n  return iVar1;\n}\n\n"
}