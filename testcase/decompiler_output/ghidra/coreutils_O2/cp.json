{
    "00103bd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid rewinddir(DIR *__dirp)\n\n{\n  (*(code *)PTR_rewinddir_00122d58)();\n  return;\n}\n\n", 
    "001176f0": "\nlong randread_new(long param_1,ulong param_2)\n\n{\n  FILE *__stream;\n  long lVar1;\n  size_t __n;\n  \n  if (param_2 == 0) {\n    lVar1 = simple_new(0,0);\n    return lVar1;\n  }\n  if (param_1 != 0) {\n    __stream = (FILE *)fopen_safer(param_1,&DAT_0011c3ec);\n    if (__stream == (FILE *)0x0) {\n      lVar1 = 0;\n    }\n    else {\n      lVar1 = simple_new(__stream,param_1);\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      setvbuf(__stream,(char *)(lVar1 + 0x18),0,__n);\n    }\n    return lVar1;\n  }\n  lVar1 = simple_new(0,0);\n  *(undefined8 *)(lVar1 + 0x18) = 0;\n  get_nonce_constprop_0(lVar1 + 0x20,param_2);\n  isaac_seed(lVar1 + 0x20);\n  return lVar1;\n}\n\n", 
    "00103ab0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getuid_00122cc8)();\n  return _Var1;\n}\n\n", 
    "001174b0": "\n/* WARNING: Type propagation algorithm not settling */\n\nvoid get_nonce_constprop_0(__uid_t *param_1,size_t param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  ssize_t sVar2;\n  ulong uVar3;\n  __uid_t *p_Var4;\n  undefined *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  byte bVar8;\n  undefined local_58 [8];\n  __uid_t _Stack_50;\n  __uid_t _Stack_4c;\n  long local_40;\n  \n  bVar8 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    *param_1 = local_58._0_4_;\n    param_1[1] = local_58._4_4_;\n    param_1[2] = _Stack_50;\n    param_1[3] = _Stack_4c;\n    local_58._0_4_ = getpid();\n    uVar1 = 0;\n    do {\n      uVar7 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar7 + 0x10) = *(undefined *)((long)local_58 + uVar7);\n    } while (uVar1 < 4);\n    uVar7 = 0x14;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    sVar2 = read(__fd,param_1,param_2);\n    close(__fd);\n    if (0x7ff < sVar2) goto LAB_0011751f;\n    if (sVar2 < 0) {\n      sVar2 = 0;\n    }\n    uVar7 = 0x800 - sVar2;\n    if (0x10 < uVar7) {\n      uVar7 = 0x10;\n    }\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    uVar3 = sVar2 + uVar7;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + sVar2);\n    for (uVar7 = uVar7 & 0xffffffff; uVar7 != 0; uVar7 = uVar7 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar3) goto LAB_0011751f;\n    uVar6 = 0x800 - uVar3;\n    if (4 < uVar6) {\n      uVar6 = 4;\n    }\n    local_58._0_4_ = getpid();\n    uVar7 = uVar6 + uVar3;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + uVar3);\n    for (uVar6 = uVar6 & 0xffffffff; uVar6 != 0; uVar6 = uVar6 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar7) goto LAB_0011751f;\n  }\n  uVar3 = 0x800 - uVar7;\n  if (4 < uVar3) {\n    uVar3 = 4;\n  }\n  local_58._0_4_ = getppid();\n  if ((uint)uVar3 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar6 + uVar7) = *(undefined *)((long)local_58 + uVar6);\n    } while (uVar1 < (uint)uVar3);\n  }\n  uVar3 = uVar3 + uVar7;\n  if (uVar3 < 0x800) {\n    uVar7 = 0x800 - uVar3;\n    if (4 < uVar7) {\n      uVar7 = 4;\n    }\n    local_58._0_4_ = getuid();\n    if ((uint)uVar7 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n      } while (uVar1 < (uint)uVar7);\n    }\n    uVar3 = uVar3 + uVar7;\n    if (uVar3 < 0x800) {\n      local_58._0_4_ = getgid();\n      uVar7 = 0x800 - uVar3;\n      if (4 < uVar7) {\n        uVar7 = 4;\n      }\n      if ((uint)uVar7 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n        } while (uVar1 < (uint)uVar7);\n      }\n    }\n  }\nLAB_0011751f:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00103cf0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkfifo(char *__path,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkfifo_00122de8)();\n  return iVar1;\n}\n\n", 
    "00111540": "\nvoid quotearg_char_mem(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = default_quoting_options._0_8_;\n  uStack_40 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._16_8_;\n  uStack_30 = default_quoting_options._24_8_;\n  local_28 = default_quoting_options._32_8_;\n  uStack_20 = default_quoting_options._40_8_;\n  local_18 = default_quoting_options._48_8_;\n  set_char_quoting(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  quotearg_n_options(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111420": "\nvoid quotearg(undefined8 param_1)\n\n{\n  quotearg_n(0,param_1);\n  return;\n}\n\n", 
    "0010ee50": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 hash_insert_if_absent(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010ee9e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    check_tuning_isra_0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_0010eefa;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_0011b768) {\n      if (_DAT_0011b76c <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0011b76c) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = hash_rehash(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = hash_find_entry(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = hash_insert_if_absent_cold();\n          return uVar5;\n        }\n        goto LAB_0010eefa;\n      }\n    }\n  }\n  else {\nLAB_0010eefa:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010ee9e;\n    }\n    plVar3 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010ee9e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010ee9e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010dc40": "\nvoid open_safer(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106190": "\nuint errno_unsupported(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x5f) |\n         param_3 & 0xffffff00 | (uint)(param_1 == 0x3d);\n}\n\n", 
    "0010c8c0": "\nlong argmatch_to_argument(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00116ef0": "\nundefined4 i_ring_push(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar3 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar4 = *(int *)(param_1 + 0x14) + uVar3 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar4 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar4;\n  if (*(uint *)(param_1 + 0x18) == uVar4) {\n    *(uint *)(param_1 + 0x18) = uVar3 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n", 
    "0010e200": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 check_tuning_isra_0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)default_tuning) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0011b754 < fVar1) && (fVar1 < DAT_0011b758)) && (_DAT_0011b75c < pfVar2[3])) &&\n     (_DAT_0011b760 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0011b754;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0011b764)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)default_tuning;\n  return 0;\n}\n\n", 
    "00103910": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00122bf8)();\n  return;\n}\n\n", 
    "00106a70": "\nulong is_nul(char *param_1,size_t param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  char *__s2;\n  \n  __s2 = param_1;\n  if (param_2 == 0) {\n    return 1;\n  }\n  while( true ) {\n    if (*__s2 != '\\0') {\n      return 0;\n    }\n    __s2 = __s2 + 1;\n    param_2 = param_2 - 1;\n    if (param_2 == 0) break;\n    if ((param_2 & 0xf) == 0) {\n      iVar1 = memcmp(param_1,__s2,param_2);\n      return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n    }\n  }\n  return 1;\n}\n\n", 
    "00103aa0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00122cc0)();\n  return;\n}\n\n", 
    "001140d0": "\nint rpl_fseeko(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00103ce0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong syscall(long __sysno,...)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_syscall_00122de0)();\n  return lVar1;\n}\n\n", 
    "00103bc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00122d50)();\n  return iVar1;\n}\n\n", 
    "00112400": "\nulong dev_info_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00107030": "\nulong create_hard_link(undefined8 param_1,undefined8 param_2,undefined param_3,byte param_4,\n                      char param_5)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  ulong unaff_R12;\n  \n  iVar1 = force_linkat(0xffffff9c,param_1,0xffffff9c,param_2,(ulong)(param_5 != '\\0') << 10,param_3)\n  ;\n  if (iVar1 < 0) {\n    uVar2 = quotearg_n_style(1,4,param_1);\n    uVar3 = quotearg_n_style(0,4,param_2);\n    uVar4 = dcgettext(0,\"cannot create hard link %s to %s\",5);\n    piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar5,uVar4,uVar3,uVar2);\n  }\n  param_4 = 0 < iVar1 & param_4;\n  if (param_4 == 0) {\n    return 1;\n  }\n  uVar2 = quotearg_style(4,param_2);\n  uVar3 = dcgettext(0,\"removed %s\\n\",5);\n  __printf_chk(1,uVar3,uVar2);\n  return unaff_R12 & 0xffffff00 | (ulong)param_4;\n}\n\n", 
    "00111430": "\nvoid quotearg_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106180": "\nbool is_ENOTSUP(int param_1)\n\n{\n  return param_1 == 0x5f;\n}\n\n", 
    "001141f0": "\nlong fts_maxarglen(char **param_1)\n\n{\n  size_t sVar1;\n  ulong uVar2;\n  char *__s;\n  \n  __s = *param_1;\n  if (__s != (char *)0x0) {\n    uVar2 = 0;\n    do {\n      sVar1 = strlen(__s);\n      if (uVar2 < sVar1) {\n        uVar2 = sVar1;\n      }\n      __s = param_1[1];\n      param_1 = param_1 + 1;\n    } while (__s != (char *)0x0);\n    return uVar2 + 1;\n  }\n  return 1;\n}\n\n", 
    "0010db30": "\nchar * last_component(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "0010d9c0": "\nDIR * opendir_safer(char *param_1)\n\n{\n  uint uVar1;\n  int __fd;\n  DIR *__dirp;\n  int *piVar2;\n  DIR *pDVar3;\n  int iVar4;\n  \n  __dirp = opendir(param_1);\n  if (__dirp != (DIR *)0x0) {\n    uVar1 = dirfd(__dirp);\n    if (uVar1 < 3) {\n      __fd = rpl_fcntl(uVar1,0x406,3);\n      piVar2 = __errno_location();\n      if (__fd < 0) {\n        iVar4 = *piVar2;\n        pDVar3 = (DIR *)0x0;\n      }\n      else {\n        pDVar3 = fdopendir(__fd);\n        iVar4 = *piVar2;\n        if (pDVar3 == (DIR *)0x0) {\n          close(__fd);\n        }\n      }\n      closedir(__dirp);\n      *piVar2 = iVar4;\n      return pDVar3;\n    }\n  }\n  return __dirp;\n}\n\n", 
    "0010b5a0": "\nundefined8 extent_need_sync(void)\n\n{\n  return 1;\n}\n\n", 
    "0010e690": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid hash_print_statistics(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = hash_get_n_entries();\n  uVar2 = hash_get_n_buckets();\n  uVar3 = hash_get_n_buckets_used();\n  uVar4 = hash_get_max_bucket_length();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_0011b770) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "00111440": "\nvoid quotearg_n_style(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_58);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00116ba0": "\nulong c_isxdigit(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00117ff0": "\nint fstat(int __fd,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstat(1,__fd,__buf);\n  return iVar1;\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_00122bf0)();\n  return pcVar1;\n}\n\n", 
    "0010d000": "\nundefined4 get_version(undefined8 param_1,char *param_2)\n\n{\n  long lVar1;\n  \n  if (param_2 == (char *)0x0) {\n    return 2;\n  }\n  if (*param_2 == '\\0') {\n    return 2;\n  }\n  lVar1 = __xargmatch_internal(param_1,param_2,backup_args,backup_types,4,argmatch_die);\n  return *(undefined4 *)(backup_types + lVar1 * 4);\n}\n\n", 
    "00118074": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "0010d120": "\nundefined4 seen_triple(long *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined4 uVar1;\n  long lVar2;\n  \n  lVar2 = *param_1;\n  if (lVar2 == 0) {\n    lVar2 = hash_initialize(7,0,triple_hash,triple_compare_ino_str,triple_free);\n    *param_1 = lVar2;\n    if (lVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(0);\n    }\n  }\n  uVar1 = seen_file(lVar2,param_2,param_3);\n  if ((char)uVar1 == '\\0') {\n    record_file(*param_1,param_2,param_3);\n  }\n  return uVar1;\n}\n\n", 
    "0010e450": "\nundefined8 transfer_entries(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_0010e480:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)safe_hasher(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          free_entry_isra_0(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0010e4f0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0010e4f0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_0010e480;\n    plVar3 = (long *)safe_hasher(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)allocate_entry_isra_0(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "0010e330": "\nlong hash_find_entry(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)safe_hasher();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_0010e3d1:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            free_entry_isra_0(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_0010e3d1;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        free_entry_isra_0(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010f540": "\nundefined4 qset_acl(undefined8 param_1,undefined4 param_2,undefined4 param_3)\n\n{\n  undefined4 uVar1;\n  long in_FS_OFFSET;\n  undefined4 local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_24 = param_3;\n  uVar1 = set_permissions(&local_24,param_1,param_2);\n  free_permission_context(&local_24);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001140a0": "\nlong freadahead(uint *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if ((*(ulong *)(param_1 + 10) < *(ulong *)(param_1 + 8) ||\n       *(ulong *)(param_1 + 10) == *(ulong *)(param_1 + 8)) &&\n     (lVar1 = *(long *)(param_1 + 4) - *(long *)(param_1 + 2), (*param_1 & 0x100) != 0)) {\n    lVar1 = lVar1 + (*(long *)(param_1 + 0x16) - *(long *)(param_1 + 0x12));\n  }\n  return lVar1;\n}\n\n", 
    "001141c0": "\nulong fts_compare_ino(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n", 
    "00107fb0": "\n__mode_t cached_umask(void)\n\n{\n  __mode_t __mask;\n  \n  if (mask_8322 != 0xffffffff) {\n    return mask_8322;\n  }\n  __mask = umask(0);\n  mask_8322 = __mask;\n  umask(__mask);\n  return __mask;\n}\n\n", 
    "00103bf0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_closedir_00122d68)();\n  return iVar1;\n}\n\n", 
    "00104ce0": "\nundefined8\nmake_dir_parents_private\n          (char *param_1,long param_2,long param_3,long *param_4,char *param_5,long param_6)\n\n{\n  undefined uVar1;\n  undefined4 uVar2;\n  long lVar3;\n  long lVar4;\n  undefined *puVar5;\n  char cVar6;\n  int iVar7;\n  int iVar8;\n  uint uVar9;\n  size_t sVar10;\n  char *pcVar11;\n  undefined8 uVar12;\n  uint *puVar13;\n  undefined4 *puVar14;\n  undefined8 uVar15;\n  int *piVar16;\n  uint uVar17;\n  ulong uVar18;\n  undefined *puVar19;\n  undefined *puVar21;\n  char *pcVar23;\n  uint uVar24;\n  char *__file;\n  char *__file_00;\n  long in_FS_OFFSET;\n  undefined auStack_198 [8];\n  long local_190;\n  long *local_188;\n  undefined4 *local_180;\n  stat *local_178;\n  char *local_170;\n  stat local_168;\n  undefined4 local_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  __nlink_t local_c8;\n  uint uStack_c0;\n  __uid_t _Stack_bc;\n  undefined8 local_b8;\n  __dev_t _Stack_b0;\n  __off_t local_a8;\n  __blksize_t _Stack_a0;\n  __blkcnt_t local_98;\n  __time_t _Stack_90;\n  long local_88;\n  __time_t _Stack_80;\n  long local_78;\n  __time_t _Stack_70;\n  long local_68;\n  long lStack_60;\n  long local_58;\n  long lStack_50;\n  long local_40;\n  undefined *puVar20;\n  undefined *puVar22;\n  \n  puVar19 = auStack_198;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_190 = param_3;\n  local_188 = param_4;\n  local_170 = param_5;\n  sVar10 = strlen(param_1);\n  puVar20 = auStack_198;\n  puVar22 = auStack_198;\n  while (puVar20 != auStack_198 + -(sVar10 + 0x18 & 0xfffffffffffff000)) {\n    puVar19 = puVar22 + -0x1000;\n    *(undefined8 *)(puVar22 + -8) = *(undefined8 *)(puVar22 + -8);\n    puVar20 = puVar22 + -0x1000;\n    puVar22 = puVar22 + -0x1000;\n  }\n  uVar18 = (ulong)((uint)(sVar10 + 0x18) & 0xff0);\n  lVar4 = -uVar18;\n  puVar21 = puVar19 + lVar4;\n  puVar22 = puVar19 + lVar4;\n  if (uVar18 != 0) {\n    *(undefined8 *)(puVar19 + -8) = *(undefined8 *)(puVar19 + -8);\n  }\n  *(undefined8 *)(puVar19 + lVar4 + -8) = 0x104d84;\n  pcVar11 = (char *)memcpy((void *)((ulong)(puVar19 + lVar4 + 0xf) & 0xfffffffffffffff0),param_1,\n                           sVar10 + 1);\n  *(undefined8 *)(puVar19 + lVar4 + -8) = 0x104d8f;\n  sVar10 = dir_len(pcVar11);\n  puVar5 = puVar19 + lVar4;\n  while (puVar21 != puVar19 + (lVar4 - (sVar10 + 0x18 & 0xfffffffffffff000))) {\n    puVar22 = puVar5 + -0x1000;\n    *(undefined8 *)(puVar5 + -8) = *(undefined8 *)(puVar5 + -8);\n    puVar21 = puVar5 + -0x1000;\n    puVar5 = puVar5 + -0x1000;\n  }\n  uVar18 = (ulong)((uint)(sVar10 + 0x18) & 0xff0);\n  lVar4 = -uVar18;\n  if (uVar18 != 0) {\n    *(undefined8 *)(puVar22 + -8) = *(undefined8 *)(puVar22 + -8);\n  }\n  __file = (char *)((ulong)(puVar22 + lVar4 + 0xf) & 0xfffffffffffffff0);\n  *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104def;\n  memcpy(__file,pcVar11,sVar10);\n  __file[sVar10] = '\\0';\n  *local_188 = 0;\n  local_178 = &local_168;\n  *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104e1c;\n  iVar7 = stat(__file,local_178);\n  if (iVar7 == 0) {\n    if ((local_168.st_mode & 0xf000) != 0x4000) {\nLAB_00105253:\n      *(undefined8 *)(puVar22 + lVar4 + -8) = 0x10525d;\n      uVar12 = quotearg_style(4,__file);\n      *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105273;\n      uVar15 = dcgettext(0,\"%s exists but is not a directory\",5);\n                    /* WARNING: Subroutine does not return */\n      *(undefined **)(puVar22 + lVar4 + -8) = &UNK_00105284;\n      error(0,0,uVar15,uVar12);\n    }\n    *local_170 = '\\0';\n  }\n  else {\n    __file_00 = pcVar11 + param_2;\n    cVar6 = *__file_00;\n    pcVar23 = __file_00;\n    while (cVar6 == '/') {\n      pcVar23 = pcVar23 + 1;\n      cVar6 = *pcVar23;\n    }\n    while( true ) {\n      *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104e9a;\n      pcVar23 = strchr(pcVar23,0x2f);\n      if (pcVar23 == (char *)0x0) break;\n      *pcVar23 = '\\0';\n      *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104eb4;\n      iVar7 = stat(pcVar11,local_178);\n      if ((iVar7 != 0) || ((*(uint *)(param_6 + 0x1c) & 0xffffff00) != 0)) {\n        *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104f4f;\n        iVar8 = stat(__file_00,(stat *)&local_d8);\n        if (iVar8 == 0) {\n          if ((uStack_c0 & 0xf000) != 0x4000) {\n            uVar9 = 0x14;\n            goto LAB_00105174;\n          }\n        }\n        else {\n          *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104f5c;\n          puVar13 = (uint *)__errno_location();\n          uVar9 = *puVar13;\n          if (uVar9 != 0) {\nLAB_00105174:\n            local_170 = (char *)((ulong)local_170 & 0xffffffff00000000 | (ulong)uVar9);\n            *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105188;\n            uVar12 = quotearg_style(4,__file_00);\n            *(undefined8 *)(puVar22 + lVar4 + -8) = 0x10519e;\n            uVar15 = dcgettext(0,\"failed to get attributes of %s\",5);\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar22 + lVar4 + -8) = &UNK_001051b7;\n            error(0,(ulong)local_170 & 0xffffffff,uVar15,uVar12);\n          }\n        }\n        *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104f72;\n        puVar14 = (undefined4 *)xmalloc(0xa8);\n        *puVar14 = local_d8;\n        puVar14[1] = uStack_d4;\n        puVar14[2] = uStack_d0;\n        puVar14[3] = uStack_cc;\n        *(__nlink_t *)(puVar14 + 4) = local_c8;\n        *(ulong *)(puVar14 + 6) = CONCAT44(_Stack_bc,uStack_c0);\n        *(undefined8 *)(puVar14 + 8) = local_b8;\n        *(__dev_t *)(puVar14 + 10) = _Stack_b0;\n        *(__off_t *)(puVar14 + 0xc) = local_a8;\n        *(__blksize_t *)(puVar14 + 0xe) = _Stack_a0;\n        *(__blkcnt_t *)(puVar14 + 0x10) = local_98;\n        *(__time_t *)(puVar14 + 0x12) = _Stack_90;\n        *(long *)(puVar14 + 0x14) = local_88;\n        *(__time_t *)(puVar14 + 0x16) = _Stack_80;\n        *(long *)(puVar14 + 0x18) = local_78;\n        *(__time_t *)(puVar14 + 0x1a) = _Stack_70;\n        *(long *)(puVar14 + 0x1c) = local_68;\n        *(long *)(puVar14 + 0x1e) = lStack_60;\n        *(long *)(puVar14 + 0x20) = local_58;\n        *(long *)(puVar14 + 0x22) = lStack_50;\n        *(undefined *)(puVar14 + 0x24) = 0;\n        *(long *)(puVar14 + 0x26) = (long)pcVar23 - (long)pcVar11;\n        lVar3 = *local_188;\n        *local_188 = (long)puVar14;\n        *(long *)(puVar14 + 0x28) = lVar3;\n        if (iVar7 == 0) goto LAB_00104eca;\n        uVar2 = puVar14[6];\n        *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105027;\n        local_180 = puVar14;\n        cVar6 = set_process_security_ctx(__file_00,pcVar11,uVar2,1,param_6);\n        if (cVar6 != '\\0') {\n          *local_170 = '\\x01';\n          uVar9 = local_180[6];\n          if (*(char *)(param_6 + 0x1d) == '\\0') {\n            if (*(char *)(param_6 + 0x1e) == '\\0') {\n              uVar24 = 0;\n              uVar17 = 0xffffffff;\n            }\n            else {\n              uVar24 = uVar9 & 0x12;\n              uVar17 = ~uVar24;\n            }\n          }\n          else {\n            uVar24 = uVar9 & 0x3f;\n            uVar17 = ~uVar24;\n          }\n          if (*(char *)(param_6 + 0x20) != '\\0') {\n            uVar9 = 0x1ff;\n          }\n          *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105081;\n          iVar7 = mkdir(pcVar11,uVar9 & uVar17 & 0xfff);\n          if (iVar7 != 0) {\n            *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105298;\n            uVar12 = quotearg_style(4,pcVar11);\n            pcVar11 = \"cannot make directory %s\";\n            goto LAB_001052a7;\n          }\n          if (local_190 != 0) {\n            *(undefined8 *)(puVar22 + lVar4 + -8) = 0x1050b5;\n            __printf_chk(1,local_190,__file_00,pcVar11);\n          }\n          *(undefined8 *)(puVar22 + lVar4 + -8) = 0x1050d2;\n          iVar7 = lstat(pcVar11,local_178);\n          if (iVar7 != 0) {\n            *(undefined8 *)(puVar22 + lVar4 + -8) = 0x1052db;\n            uVar12 = quotearg_style(4,pcVar11);\n            pcVar11 = \"failed to get attributes of %s\";\n            goto LAB_001052a7;\n          }\n          if (*(char *)(param_6 + 0x1e) == '\\0') {\n            if ((~local_168.st_mode & uVar24) != 0) {\n              *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105229;\n              uVar9 = cached_umask();\n              uVar24 = uVar24 & ~uVar9;\n              if ((~local_168.st_mode & uVar24) == 0) goto LAB_001050fc;\nLAB_0010510c:\n              *(undefined *)(local_180 + 0x24) = 1;\n              local_180[6] = uVar24 | local_168.st_mode;\n              goto LAB_0010511b;\n            }\nLAB_001050fc:\n            if ((local_168.st_mode & 0x1c0) != 0x1c0) goto LAB_0010510c;\n          }\n          else {\nLAB_0010511b:\n            if ((local_168.st_mode & 0x1c0) != 0x1c0) {\n              *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105137;\n              iVar7 = chmod(pcVar11,local_168.st_mode | 0x1c0);\n              if (iVar7 != 0) {\n                *(undefined8 *)(puVar22 + lVar4 + -8) = 0x10530c;\n                uVar12 = quotearg_style(4,pcVar11);\n                pcVar11 = \"setting permissions for %s\";\nLAB_001052a7:\n                *(undefined8 *)(puVar22 + lVar4 + -8) = 0x1052ae;\n                uVar15 = dcgettext(0,pcVar11,5);\n                *(undefined8 *)(puVar22 + lVar4 + -8) = 0x1052b6;\n                piVar16 = __errno_location();\n                iVar7 = *piVar16;\n                    /* WARNING: Subroutine does not return */\n                *(undefined **)(puVar22 + lVar4 + -8) = &UNK_001052c7;\n                error(0,iVar7,uVar15,uVar12);\n              }\n            }\n          }\n          if (*local_170 == '\\0') goto LAB_00104f04;\n          goto LAB_00104f19;\n        }\nLAB_00105207:\n        uVar12 = 0;\n        goto LAB_00104e45;\n      }\nLAB_00104eca:\n      *(undefined8 *)(puVar22 + lVar4 + -8) = 0x104edc;\n      cVar6 = set_process_security_ctx(__file_00,pcVar11,0,0,param_6);\n      if (cVar6 == '\\0') goto LAB_00105207;\n      __file = pcVar11;\n      if ((local_168.st_mode & 0xf000) != 0x4000) goto LAB_00105253;\n      *local_170 = '\\0';\nLAB_00104f04:\n      if ((*(ulong *)(param_6 + 0x20) & 0xff000000ff00) != 0) {\n        uVar1 = *(undefined *)(param_6 + 0x25);\n        *(undefined8 *)(puVar22 + lVar4 + -8) = 0x1051f3;\n        cVar6 = set_file_security_ctx(pcVar11,uVar1,0);\n        if ((cVar6 == '\\0') && (*(char *)(param_6 + 0x26) != '\\0')) goto LAB_00105207;\n      }\nLAB_00104f19:\n      cVar6 = pcVar23[1];\n      *pcVar23 = '/';\n      pcVar23 = pcVar23 + 1;\n      while (cVar6 == '/') {\n        pcVar23 = pcVar23 + 1;\n        cVar6 = *pcVar23;\n      }\n    }\n  }\n  uVar12 = 1;\nLAB_00104e45:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar22 + lVar4 + -8) = 0x105322;\n    __stack_chk_fail();\n  }\n  return uVar12;\n}\n\n", 
    "00103ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00122cd8)();\n  return sVar1;\n}\n\n", 
    "001177f0": "\nundefined8 randread_free(long *param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (lVar1 != 0) {\n    uVar2 = rpl_fclose(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "00111520": "\nvoid quotearg_style_mem(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_style_mem(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001240e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rmdir(char *__path)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* rmdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00111760": "\nvoid quotearg_custom(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_n_custom(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00107180": "\nundefined8 is_ancestor_isra_0(long *param_1,long *param_2,long *param_3)\n\n{\n  if (param_3 != (long *)0x0) {\n    do {\n      if ((param_3[1] == *param_2) && (param_3[2] == *param_1)) {\n        return 1;\n      }\n      param_3 = (long *)*param_3;\n    } while (param_3 != (long *)0x0);\n  }\n  return 0;\n}\n\n", 
    "001240e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* stpcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b8d0": "\nvoid try_link(char *param_1,int *param_2)\n\n{\n  linkat(*param_2,*(char **)(param_2 + 2),param_2[4],param_1,param_2[5]);\n  return;\n}\n\n", 
    "001077e0": "\nuint abandon_move(long param_1,undefined8 param_2,long param_3)\n\n{\n  int iVar1;\n  char cVar2;\n  uint uVar3;\n  \n  uVar3 = (uint)*(byte *)(param_1 + 0x18);\n  if (*(byte *)(param_1 + 0x18) == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"x->move_mode\",\"src/copy.c\",0x6d2,\"abandon_move\");\n  }\n  iVar1 = *(int *)(param_1 + 8);\n  if (iVar1 != 2) {\n    if ((iVar1 == 3) ||\n       (((iVar1 == 4 && (*(char *)(param_1 + 0x2f) != '\\0')) &&\n        (cVar2 = writable_destination(param_2,*(undefined4 *)(param_3 + 0x18)), cVar2 == '\\0')))) {\n      uVar3 = overwrite_ok_isra_0(param_1,param_2,param_3 + 0x18);\n      return uVar3 ^ 1;\n    }\n    uVar3 = 0;\n  }\n  return uVar3;\n}\n\n", 
    "00103930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkdir_00122c08)();\n  return iVar1;\n}\n\n", 
    "00103ac0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00122cd0)();\n  return;\n}\n\n", 
    "00103be0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_00122d60)();\n  return sVar1;\n}\n\n", 
    "00111410": "\nvoid quotearg_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00114920": "\nuint restore_initial_cwd(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      cwd_advance_fd(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  fd_ring_clear(param_1 + 0x60);\n  return uVar2;\n}\n\n", 
    "00107170": "\nundefined  [16] get_stat_mtime_isra_0(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "0010b8f0": "\nvoid * samedir_template(void *param_1,void *param_2)\n\n{\n  ulong __size;\n  long lVar1;\n  undefined8 *puVar2;\n  \n  lVar1 = last_component();\n  __size = (lVar1 - (long)param_1) + 9;\n  if ((0x100 < __size) && (param_2 = malloc(__size), param_2 == (void *)0x0)) {\n    return (void *)0x0;\n  }\n  puVar2 = (undefined8 *)mempcpy(param_2,param_1,lVar1 - (long)param_1);\n  *puVar2 = simple_pattern._0_8_;\n  *(undefined *)(puVar2 + 1) = simple_pattern[8];\n  return param_2;\n}\n\n", 
    "0010dd50": "\nulong seen_file(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = 0;\n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = hash_lookup(param_1,&local_28);\n    uVar1 = uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111780": "\nvoid quotearg_custom_mem(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4\n                        )\n\n{\n  quotearg_n_custom_mem(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00117fd0": "\nint stat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __xstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00116dc0": "\nvoid gettime(timespec *param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  timeval local_28;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = clock_gettime(0,param_1);\n  if (iVar1 != 0) {\n    gettimeofday(&local_28,(__timezone_ptr_t)0x0);\n    param_1->tv_sec = local_28.tv_sec;\n    param_1->tv_nsec = local_28.tv_usec * 1000;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001240f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_get_mb_cur_max@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001055f0": "\nvoid emit_ancillary_info_constprop_0(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_0011a753;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'c' || (pcVar2[1] != 'p')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_0011a750;\n        goto LAB_0010582e;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_0011a750;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0011a750);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010582e:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_0011a750);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0011a750);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_0011a750) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00116ee0": "\nundefined i_ring_empty(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n", 
    "0010e310": "\nvoid free_entry_isra_0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010f400": "\nvoid set_program_name(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    program_name = pcVar1 + 1;\n    uVar3 = (long)program_name - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_0011b7b0;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = program_name;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  program_name = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010c370": "\nint copy_acl(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = qcopy_acl();\n  if (iVar1 == -2) {\n    uVar2 = quote(param_1);\n    piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar4,&DAT_0011b616,uVar2);\n  }\n  if (iVar1 == -1) {\n    uVar2 = quote(param_3);\n    uVar3 = dcgettext(0,\"preserving permissions for %s\",5);\n    piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar4,uVar3,uVar2);\n  }\n  return iVar1;\n}\n\n", 
    "00117080": "\nundefined8 randint_all_new(void)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = randread_new();\n  if (lVar1 != 0) {\n    uVar2 = randint_new(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "00103920": "\nvoid context_type_get(void)\n\n{\n  (*(code *)PTR_context_type_get_00122c00)();\n  return;\n}\n\n", 
    "00118050": "\nint mknod(char *__path,__mode_t __mode,__dev_t __dev)\n\n{\n  int iVar1;\n  __dev_t local_10 [2];\n  \n  local_10[0] = __dev;\n  iVar1 = __xmknod(0,__path,__mode,local_10);\n  return iVar1;\n}\n\n", 
    "001240f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dcgettext@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e430": "\nvoid allocate_entry_isra_0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "001177d0": "\nvoid randread(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    readsource();\n    return;\n  }\n  readisaac(param_1 + 3);\n  return;\n}\n\n", 
    "00103dd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00122e58)();\n  return iVar1;\n}\n\n", 
    "00103cb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00122dc8)();\n  return iVar1;\n}\n\n", 
    "00103ef0": "\nvoid __explicit_bzero_chk(void)\n\n{\n  (*(code *)PTR___explicit_bzero_chk_00122ee8)();\n  return;\n}\n\n", 
    "001141a0": "\nulong dev_type_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "001241e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010dc00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fdadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = posix_fadvise(__fd,__offset,__len,__advise);\n  return iVar1;\n}\n\n", 
    "001240c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fclose@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104090": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint futimesat(int __fd,char *__file,timeval *__tvp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_futimesat_00122fb8)();\n  return iVar1;\n}\n\n", 
    "00117fa0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001241e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* read@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001240c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_new(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113be0": "\nvoid x2nrealloc(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00113c3b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00113c3b:\n                    /* WARNING: Subroutine does not return */\n      xalloc_die(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  xrealloc(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00107d60": "\nvoid cp_options_default(undefined (*param_1) [16])\n\n{\n  __uid_t _Var1;\n  \n  *param_1 = (undefined  [16])0x0;\n  param_1[1] = (undefined  [16])0x0;\n  param_1[2] = (undefined  [16])0x0;\n  param_1[3] = (undefined  [16])0x0;\n  param_1[4] = (undefined  [16])0x0;\n  _Var1 = geteuid();\n  *(undefined4 *)(param_1[3] + 4) = 0xffffffff;\n  param_1[1][0xb] = _Var1 == 0;\n  param_1[1][10] = _Var1 == 0;\n  return;\n}\n\n", 
    "00117050": "\nvoid randint_new(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)xmalloc(0x18);\n  *puVar1 = param_1;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  return;\n}\n\n", 
    "0010f610": "\nundefined8 strcaseeq8(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq9(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00103ca0": "\nvoid lgetfilecon(void)\n\n{\n  (*(code *)PTR_lgetfilecon_00122dc0)();\n  return;\n}\n\n", 
    "001141b0": "\nulong dev_type_compare(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00103ee0": "\nvoid fsetfilecon(void)\n\n{\n  (*(code *)PTR_fsetfilecon_00122ee0)();\n  return;\n}\n\n", 
    "001131e0": "\nvoid utimens(undefined8 param_1,undefined8 param_2)\n\n{\n  fdutimens(0xffffffff,param_1,param_2);\n  return;\n}\n\n", 
    "00103dc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00122e50)();\n  return pvVar1;\n}\n\n", 
    "00107230": "\nchar extent_copy(ulong param_1,int param_2,undefined8 param_3,undefined8 param_4,undefined8 param_5,\n                long param_6,int param_7,undefined8 param_8,undefined8 param_9,undefined *param_10)\n\n{\n  long *plVar1;\n  char cVar2;\n  byte bVar3;\n  int iVar4;\n  ulong uVar5;\n  __off_t _Var6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  int *piVar9;\n  long __offset;\n  long lVar10;\n  long lVar11;\n  char *pcVar12;\n  long lVar13;\n  long lVar14;\n  long in_FS_OFFSET;\n  int local_d8;\n  byte local_81;\n  long local_80;\n  undefined local_78 [24];\n  ulong local_60;\n  char local_58;\n  char local_57;\n  long local_50 [2];\n  long local_40;\n  \n  bVar3 = 1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  extent_scan_init(param_1,local_78);\n  lVar13 = 0;\n  lVar14 = 0;\n  __offset = 0;\n  *param_10 = 0;\n  do {\n    cVar2 = extent_scan_read(local_78);\n    if (cVar2 == '\\0') {\n      if (local_57 == '\\0') {\n        if (local_58 == '\\0') {\n          uVar7 = quotearg_n_style_colon(0,3,param_8);\n          uVar8 = dcgettext(0,\"%s: failed to get extents info\",5);\n          piVar9 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n          error(0,*piVar9,uVar8,uVar7);\n        }\n        *param_10 = 1;\n        cVar2 = local_57;\n        goto LAB_00107435;\n      }\n      break;\n    }\n    if (local_60 != 0) {\n      uVar5 = 0;\n      lVar10 = __offset;\n      lVar11 = lVar14;\n      do {\n        plVar1 = (long *)(local_50[0] + uVar5 * 0x18);\n        __offset = *plVar1;\n        lVar14 = plVar1[1];\n        if (param_6 < __offset + lVar14) {\n          if (param_6 < __offset) {\n            __offset = param_6;\n          }\n          lVar14 = param_6 - __offset;\n        }\n        bVar3 = 0;\n        lVar11 = (__offset - lVar10) - lVar11;\n        if (lVar11 != 0) {\n          local_d8 = (int)(param_1 & 0xffffffff);\n          _Var6 = lseek(local_d8,__offset,0);\n          if (_Var6 < 0) {\n            uVar7 = quotearg_style(4,param_8);\n            pcVar12 = \"cannot lseek %s\";\nLAB_001074fb:\n            uVar8 = dcgettext(0,pcVar12,5);\n            piVar9 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n            error(0,*piVar9,uVar8,uVar7);\n          }\n          if (param_7 == 1) {\n            cVar2 = write_zeros(param_2,lVar11);\n            if (cVar2 == '\\0') {\n              uVar7 = quotearg_n_style_colon(0,3,param_9);\n              pcVar12 = \"%s: write failed\";\n              goto LAB_001074fb;\n            }\n            uVar7 = 0;\n            goto LAB_00107314;\n          }\n          bVar3 = create_hole(param_2,param_9,param_7 == 3);\n          if (bVar3 != 0) goto LAB_00107300;\nLAB_00107420:\n          extent_scan_free_isra_0(&local_60,local_50);\n          cVar2 = '\\0';\n          goto LAB_00107435;\n        }\nLAB_00107300:\n        uVar7 = 0;\n        if (param_7 == 3) {\n          uVar7 = param_5;\n        }\nLAB_00107314:\n        cVar2 = sparse_copy(param_1 & 0xffffffff,param_2,param_3,param_4,uVar7,1,param_8,param_9,\n                            lVar14,&local_80,&local_81);\n        if (cVar2 == '\\0') goto LAB_00107420;\n        lVar13 = local_80 + __offset;\n        if (local_80 != 0) {\n          bVar3 = local_81;\n        }\n        if (param_6 == lVar13) {\n          local_57 = '\\x01';\n          break;\n        }\n        uVar5 = (ulong)((int)uVar5 + 1);\n        lVar10 = __offset;\n        lVar11 = lVar14;\n      } while (uVar5 < local_60);\n    }\n    extent_scan_free_isra_0(&local_60,local_50);\n  } while (local_57 == '\\0');\n  if ((param_6 <= lVar13) && (bVar3 == 0)) {\nLAB_001074c3:\n    cVar2 = '\\x01';\nLAB_00107435:\n    if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    return cVar2;\n  }\n  if (param_7 == 1) {\n    cVar2 = write_zeros(param_2,param_6 - lVar13);\n    if (cVar2 != '\\0') goto LAB_001074c3;\n  }\n  else {\n    iVar4 = ftruncate(param_2,param_6);\n    if (iVar4 == 0) {\n      if (((param_7 != 3) || (param_6 <= lVar13)) ||\n         (iVar4 = punch_hole(param_2,lVar13,param_6 - lVar13), -1 < iVar4)) goto LAB_001074c3;\n      uVar7 = quotearg_style(4,param_9);\n      pcVar12 = \"error deallocating %s\";\n      goto LAB_001075e8;\n    }\n  }\n  uVar7 = quotearg_style(4,param_9);\n  pcVar12 = \"failed to extend %s\";\nLAB_001075e8:\n  uVar8 = dcgettext(0,pcVar12,5);\n  piVar9 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar9,uVar8,uVar7);\n}\n\n", 
    "001240d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* bindtextdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010dc10": "\nvoid fadvise(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    fdadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n", 
    "00111510": "\nvoid quotearg_style(undefined4 param_1,undefined8 param_2)\n\n{\n  quotearg_n_style(0,param_1,param_2);\n  return;\n}\n\n", 
    "001241f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fallocate(int __fd,int __mode,__off_t __offset,__off_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fallocate@@GLIBC_2.10 */\n  halt_baddata();\n}\n\n", 
    "00111750": "\nvoid quotearg_n_custom(void)\n\n{\n  quotearg_n_custom_mem();\n  return;\n}\n\n", 
    "00104080": "\nvoid mode_to_security_class(void)\n\n{\n  (*(code *)PTR_mode_to_security_class_00122fb0)();\n  return;\n}\n\n", 
    "0010df70": "\nvoid * mfile_name_concat(void *param_1,char *param_2,void **param_3)\n\n{\n  size_t __n;\n  long lVar1;\n  long lVar2;\n  size_t __n_00;\n  void *__dest;\n  undefined *puVar3;\n  ulong uVar4;\n  undefined local_41;\n  \n  lVar1 = last_component();\n  lVar2 = base_len(lVar1);\n  __n = (lVar1 - (long)param_1) + lVar2;\n  __n_00 = strlen(param_2);\n  if (lVar2 == 0) {\n    local_41 = 0x2e;\n    if (*param_2 != '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 == '/');\n  }\n  else if (*(char *)((long)param_1 + (__n - 1)) == '/') {\n    local_41 = 0;\n    uVar4 = 0;\n  }\n  else {\n    local_41 = 0x2f;\n    if (*param_2 == '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 != '/');\n  }\n  __dest = malloc(__n + 1 + __n_00 + uVar4);\n  if (__dest != (void *)0x0) {\n    puVar3 = (undefined *)mempcpy(__dest,param_1,__n);\n    *puVar3 = local_41;\n    if (param_3 != (void **)0x0) {\n      *param_3 = puVar3 + uVar4;\n    }\n    puVar3 = (undefined *)mempcpy(puVar3 + uVar4,param_2,__n_00);\n    *puVar3 = 0;\n  }\n  return __dest;\n}\n\n", 
    "00116a90": "\nbool c_isascii(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00114aa0": "\nulong setup_dir_isra_0(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_1 & 0x102) != 0) {\n    pvVar1 = (void *)hash_initialize(0x1f,0,AD_hash,AD_compare,PTR_free_00122fc8);\n    *param_2 = pvVar1;\n    return (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  pvVar1 = malloc(0x20);\n  *param_2 = pvVar1;\n  if (pvVar1 != (void *)0x0) {\n    cycle_check_init(pvVar1);\n    return 1;\n  }\n  return 0;\n}\n\n", 
    "001240d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * opendir(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* opendir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116ec0": "\nvoid i_ring_init(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n", 
    "001241f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00117fb0": "\nint atexit(__func *__func)\n\n{\n  int iVar1;\n  \n  iVar1 = __cxa_atexit(__func,0,__dso_handle);\n  return iVar1;\n}\n\n", 
    "00113ad0": "\nulong can_write_any_file(void)\n\n{\n  __uid_t _Var1;\n  undefined4 extraout_var;\n  \n  if (initialized_3173 != '\\0') {\n    return (ulong)can_write_3174;\n  }\n  _Var1 = geteuid();\n  initialized_3173 = 1;\n  can_write_3174 = _Var1 == 0;\n  return CONCAT44(extraout_var,_Var1) & 0xffffffffffffff00 | (ulong)(_Var1 == 0);\n}\n\n", 
    "00107c30": "\nulong set_file_security_ctx(undefined8 param_1,undefined param_2,undefined param_3,long param_4)\n\n{\n  char cVar1;\n  uint uVar2;\n  ulong uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  \n  if ((*(char *)(param_4 + 0x23) == '\\0') || (*(char *)(param_4 + 0x26) != '\\0')) {\n    cVar1 = restorecon(param_1,param_3,param_2);\n    if (cVar1 == '\\0') {\n      piVar4 = __errno_location();\n      goto LAB_00107cb0;\n    }\n  }\n  else {\n    if (*(char *)(param_4 + 0x29) != '\\0') {\n      uVar3 = restorecon(param_1,param_3,param_2);\n      return uVar3;\n    }\n    uVar2 = restorecon(param_1,param_3,param_2);\n    if ((char)uVar2 == '\\0') {\n      piVar4 = __errno_location();\n      cVar1 = errno_unsupported(*piVar4);\n      if (cVar1 != '\\0') {\n        return (ulong)uVar2;\n      }\nLAB_00107cb0:\n      uVar5 = quotearg_n_style(0,4,param_1);\n      uVar6 = dcgettext(0,\"failed to set the security context of %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar4,uVar6,uVar5);\n    }\n  }\n  return 1;\n}\n\n", 
    "00118030": "\nint fstatat(int __fd,char *__file,stat *__buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = __fxstatat(1,__fd,__file,__buf,__flag);\n  return iVar1;\n}\n\n", 
    "0010c590": "\nvoid __argmatch_die(void)\n\n{\n  usage(1);\n  return;\n}\n\n", 
    "00103bb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * canonicalize_file_name(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_canonicalize_file_name_00122d48)();\n  return pcVar1;\n}\n\n", 
    "001110f0": "\nundefined4 get_quoting_style(undefined1 *param_1)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  return *(undefined4 *)param_1;\n}\n\n", 
    "001177b0": "\nvoid randread_set_handler(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n", 
    "00103df0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00122e68)();\n  return iVar1;\n}\n\n", 
    "00103cd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rpmatch(char *__response)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_rpmatch_00122dd8)();\n  return iVar1;\n}\n\n", 
    "0010df40": "\nvoid filemodestring(long param_1)\n\n{\n  strmode(*(undefined4 *)(param_1 + 0x18));\n  return;\n}\n\n", 
    "00107140": "\nlong io_blksize_isra_0(long param_1)\n\n{\n  if (0x1ffffffffffe0000 < param_1 - 0x20000U) {\n    param_1 = 0x20000;\n  }\n  return param_1;\n}\n\n", 
    "0010de20": "\nvoid strmode(uint param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  char cVar3;\n  ulong uVar4;\n  \n  uVar4 = (ulong)param_1;\n  uVar2 = ftypelet();\n  *param_2 = uVar2;\n  param_2[1] = (-((uVar4 & 0x100) == 0) & 0xbbU) + 0x72;\n  param_2[2] = (-((uVar4 & 0x80) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 0x40) == 0);\n  if ((uVar4 & 0x800) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[3] = cVar3;\n  param_2[4] = (-((uVar4 & 0x20) == 0) & 0xbbU) + 0x72;\n  param_2[5] = (-((uVar4 & 0x10) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 8) == 0);\n  if ((uVar4 & 0x400) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[6] = cVar3;\n  param_2[7] = (-((uVar4 & 4) == 0) & 0xbbU) + 0x72;\n  param_2[8] = (-((uVar4 & 2) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 1) == 0);\n  if ((uVar4 & 0x200) != 0) {\n    param_2[9] = (bVar1 & 0xe0) + 0x74;\n    *(undefined2 *)(param_2 + 10) = 0x20;\n    return;\n  }\n  param_2[9] = (bVar1 & 0xb5) + 0x78;\n  *(undefined2 *)(param_2 + 10) = 0x20;\n  return;\n}\n\n", 
    "001241c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid matchpathcon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001242e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113900": "\nvoid version_etc_va(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  version_etc_arn();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001240a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fread_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00111600": "\nvoid quotearg_colon_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_char_mem(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "001241c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* closedir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001242e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __freading@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001240a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getpid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113ce0": "\nvoid xmemdup(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)xmalloc(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "0010e860": "\nlong hash_get_next(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "0010b470": "\nlong src_to_dest_lookup(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_28 = param_1;\n  local_20 = param_2;\n  lVar1 = hash_lookup(src_to_dest,&local_28);\n  if (lVar1 != 0) {\n    lVar1 = *(long *)(lVar1 + 0x10);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00117270": "\nvoid simple_new(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)xmalloc(0x1038);\n  *puVar1 = param_1;\n  puVar1[1] = randread_error;\n  puVar1[2] = param_2;\n  return;\n}\n\n", 
    "0010e620": "\nbool hash_table_ok(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0010e640:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0010e640;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010b590": "\nvoid forget_all(void)\n\n{\n  hash_free(src_to_dest);\n  return;\n}\n\n", 
    "00117390": "\nvoid readisaac(ulong *param_1,void *param_2,ulong param_3)\n\n{\n  ulong *puVar1;\n  ulong uVar2;\n  void *pvVar3;\n  ulong *__src;\n  ulong uVar4;\n  \n  __src = param_1 + 0x104;\n  puVar1 = param_1 + 1;\n  uVar4 = *param_1;\n  pvVar3 = param_2;\n  if (param_3 <= uVar4) {\n    __src = (ulong *)((long)__src + (0x800 - uVar4));\nLAB_00117450:\n    memcpy(param_2,__src,param_3);\n    *param_1 = uVar4 - param_3;\n    return;\n  }\n  while( true ) {\n    param_2 = (void *)((long)pvVar3 + uVar4);\n    param_3 = param_3 - uVar4;\n    memcpy(pvVar3,(void *)((0x800 - uVar4) + (long)__src),uVar4);\n    if (((ulong)param_2 & 7) == 0) break;\n    uVar4 = 0x800;\n    isaac_refill(puVar1,__src);\n    pvVar3 = param_2;\n    if (param_3 < 0x801) goto LAB_0011744a;\n  }\n  uVar2 = (ulong)((uint)param_3 & 0x7ff);\n  uVar4 = param_3;\n  while (pvVar3 = (void *)((long)param_2 + (param_3 - uVar4)), uVar4 != uVar2) {\n    isaac_refill(puVar1,pvVar3);\n    uVar4 = uVar4 - 0x800;\n    if (uVar4 == 0) {\n      *param_1 = 0;\n      return;\n    }\n  }\n  isaac_refill(puVar1,__src);\n  param_3 = uVar2;\n  param_2 = pvVar3;\nLAB_0011744a:\n  uVar4 = 0x800;\n  goto LAB_00117450;\n}\n\n", 
    "001177c0": "\nvoid randread_set_handler_arg(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n", 
    "00103cc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dirfd_00122dd0)();\n  return iVar1;\n}\n\n", 
    "00103ba0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getcwd_00122d40)();\n  return pcVar1;\n}\n\n", 
    "00103de0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00122e60)();\n  return pcVar1;\n}\n\n", 
    "0010df50": "\nvoid file_name_concat(void)\n\n{\n  long lVar1;\n  \n  lVar1 = mfile_name_concat();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001242f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fdopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116a70": "\nbool c_isalpha(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106160": "\nlong ptr_align(long param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (param_2 - 1) + param_1;\n  return uVar1 - uVar1 % param_2;\n}\n\n", 
    "001240b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong pathconf(char *__path,int __name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* pathconf@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001241d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getcon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111610": "\nvoid quotearg_n_style_colon(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  set_char_quoting(puVar1,0x3a,1);\n  quotearg_n_options(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00116b90": "\nbool c_isupper(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00116fc0": "\nvoid openat_safer(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_3 & 0x40) != 0) {\n    uVar3 = param_4 & 0xffffffff;\n  }\n  iVar2 = openat(param_1,param_2,param_3,uVar3);\n  fd_safer(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001242f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* realloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001079d0": "\nchar set_process_security_ctx\n               (undefined8 param_1,undefined8 param_2,undefined4 param_3,byte param_4,long param_5)\n\n{\n  char cVar1;\n  char cVar2;\n  int iVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  long in_FS_OFFSET;\n  undefined8 local_38;\n  long local_30;\n  \n  cVar2 = *(char *)(param_5 + 0x25);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (cVar2 == '\\0') {\n    if (((param_4 & *(byte *)(param_5 + 0x21)) != 0) &&\n       (iVar3 = defaultcon(param_2,param_3), iVar3 < 0)) {\n      piVar4 = __errno_location();\n      cVar2 = errno_unsupported(*piVar4);\n      if (cVar2 == '\\0') {\n        uVar5 = quotearg_style(4,param_2);\n        uVar6 = dcgettext(0,\"failed to set default file creation context for %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar4,uVar6,uVar5);\n      }\n    }\n    cVar2 = '\\x01';\n    goto LAB_00107a70;\n  }\n  if ((*(char *)(param_5 + 0x23) == '\\0') || (*(char *)(param_5 + 0x26) != '\\0')) {\n    iVar3 = rpl_lgetfilecon(param_1,&local_38);\n    if (iVar3 < 0) {\n      piVar4 = __errno_location();\nLAB_00107a2a:\n      uVar5 = quotearg_style(4,param_1);\n      uVar6 = dcgettext(0,\"failed to get security context of %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar4,uVar6,uVar5);\n    }\n    iVar3 = setfscreatecon(local_38);\n    if (iVar3 < 0) {\n      piVar4 = __errno_location();\nLAB_00107be0:\n      uVar5 = quote(local_38);\n      uVar6 = dcgettext(0,\"failed to set default file creation context to %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar4,uVar6,uVar5);\n    }\n  }\n  else if (*(char *)(param_5 + 0x29) == '\\0') {\n    iVar3 = rpl_lgetfilecon(param_1,&local_38);\n    if (iVar3 < 0) {\n      piVar4 = __errno_location();\n      cVar1 = errno_unsupported(*piVar4);\n      if (cVar1 == '\\0') goto LAB_00107a2a;\n      goto LAB_00107a60;\n    }\n    iVar3 = setfscreatecon(local_38);\n    if (iVar3 < 0) {\n      piVar4 = __errno_location();\n      cVar1 = errno_unsupported(*piVar4);\n      if (cVar1 == '\\0') goto LAB_00107be0;\n      goto LAB_00107ad0;\n    }\n  }\n  else {\n    iVar3 = rpl_lgetfilecon(param_1,&local_38);\n    if (iVar3 < 0) {\nLAB_00107a60:\n      if (*(char *)(param_5 + 0x26) == '\\0') goto LAB_00107a70;\nLAB_00107ae0:\n      cVar2 = '\\0';\n      goto LAB_00107a70;\n    }\n    iVar3 = setfscreatecon(local_38);\n    if (iVar3 < 0) {\nLAB_00107ad0:\n      if (*(char *)(param_5 + 0x26) != '\\0') {\n        freecon(local_38);\n        goto LAB_00107ae0;\n      }\n    }\n  }\n  freecon(local_38);\nLAB_00107a70:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return cVar2;\n}\n\n", 
    "001240b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* textdomain@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001241d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* posix_fadvise@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00117040": "\nlong shift_left(long param_1)\n\n{\n  return param_1 << 8;\n}\n\n", 
    "0010f840": "\nundefined8\nstrcaseeq4(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq5(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00118010": "\nint lstat(char *__file,stat *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = __lxstat(1,__file,__buf);\n  return iVar1;\n}\n\n", 
    "00103fd0": "\nvoid freecon(void)\n\n{\n  (*(code *)PTR_freecon_00122f58)();\n  return;\n}\n\n", 
    "0010e0f0": "\nulong is_prime(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "00103eb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_mempcpy_00122ec8)();\n  return pvVar1;\n}\n\n", 
    "0010f0c0": "\nundefined8 hash_insert(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = hash_insert_if_absent(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107200": "\nvoid extent_scan_free_isra_0(undefined8 *param_1,void **param_2)\n\n{\n  free(*param_2);\n  *param_2 = (void *)0x0;\n  *param_1 = 0;\n  return;\n}\n\n", 
    "00117b30": "\nvoid isaac_seed(ulong *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long lVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong *puVar14;\n  ulong *puVar15;\n  ulong uVar16;\n  ulong uVar17;\n  long lVar18;\n  undefined auVar19 [16];\n  \n  uVar2 = 0x98f5704f6c44c0ab;\n  uVar4 = 0x82f053db8355e0ce;\n  uVar9 = 0xb29b2e824a595524;\n  uVar12 = 0x8c0ea5053d4712a0;\n  uVar7 = 0xb9f8b322c73ac862;\n  uVar10 = 0x647c4677a2884b7c;\n  uVar16 = 0xae985bf2cbfc89ed;\n  uVar6 = 0x48fe4a0fa5a09315;\n  puVar5 = param_1;\n  puVar14 = param_1;\n  do {\n    lVar3 = uVar2 + puVar14[7];\n    uVar2 = puVar14[5];\n    uVar1 = puVar14[6];\n    lVar11 = uVar10 + (*puVar14 - (uVar4 + puVar14[4]));\n    uVar4 = just(lVar3);\n    uVar17 = uVar4 >> 9 ^ uVar6 + uVar2;\n    lVar8 = uVar7 + (puVar14[1] - uVar17);\n    uVar10 = lVar11 + lVar8;\n    uVar4 = uVar16 + uVar1 ^ lVar11 << 9;\n    lVar13 = uVar12 + (puVar14[2] - uVar4);\n    uVar6 = just(lVar8);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar11;\n    lVar11 = uVar9 + (puVar14[3] - uVar2);\n    uVar12 = lVar13 + lVar11;\n    uVar10 = uVar10 ^ lVar13 << 0xf;\n    auVar19 = just(lVar11);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar9 = lVar11 + lVar3;\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar8 + lVar13;\n    lVar11 = uVar17 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar8 = uVar4 - uVar12;\n    puVar15 = puVar14 + 8;\n    uVar4 = just(lVar11);\n    uVar6 = lVar11 + lVar8;\n    *puVar14 = uVar10;\n    uVar9 = uVar9 ^ uVar4 >> 0x11;\n    uVar4 = lVar8 * 0x4000 ^ lVar3 + lVar11;\n    puVar14[1] = uVar7;\n    uVar2 = uVar2 - uVar9;\n    puVar14[2] = uVar12;\n    uVar16 = lVar8 + uVar2;\n    puVar14[3] = uVar9;\n    puVar14[4] = uVar4;\n    puVar14[5] = uVar6;\n    puVar14[6] = uVar16;\n    puVar14[7] = uVar2;\n    puVar14 = puVar15;\n  } while (param_1 + 0x100 != puVar15);\n  do {\n    lVar3 = uVar2 + puVar5[7];\n    uVar2 = puVar5[5];\n    uVar1 = puVar5[6];\n    lVar8 = uVar10 + (*puVar5 - (uVar4 + puVar5[4]));\n    uVar4 = just(lVar3);\n    uVar4 = uVar4 >> 9 ^ uVar6 + uVar2;\n    uVar16 = uVar16 + uVar1 ^ lVar8 << 9;\n    lVar13 = (puVar5[1] - uVar4) + uVar7;\n    lVar11 = uVar12 + (puVar5[2] - uVar16);\n    uVar10 = lVar8 + lVar13;\n    uVar6 = just(lVar13);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar8;\n    uVar10 = uVar10 ^ lVar11 << 0xf;\n    lVar18 = (puVar5[3] - uVar2) + uVar9;\n    uVar12 = lVar11 + lVar18;\n    auVar19 = just(lVar18);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar13 + lVar11;\n    lVar8 = uVar4 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar11 = uVar16 - uVar12;\n    uVar9 = just(lVar8);\n    uVar6 = lVar8 + lVar11;\n    *puVar5 = uVar10;\n    puVar14 = puVar5 + 8;\n    uVar4 = lVar11 * 0x4000 ^ lVar3 + lVar8;\n    puVar5[1] = uVar7;\n    uVar9 = uVar9 >> 0x11 ^ lVar18 + lVar3;\n    puVar5[2] = uVar12;\n    uVar2 = uVar2 - uVar9;\n    puVar5[3] = uVar9;\n    uVar16 = lVar11 + uVar2;\n    puVar5[4] = uVar4;\n    puVar5[5] = uVar6;\n    puVar5[6] = uVar16;\n    puVar5[7] = uVar2;\n    puVar5 = puVar14;\n  } while (param_1 + 0x100 != puVar14);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n", 
    "001120a0": "\nint try_nocreate(char *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  long in_FS_OFFSET;\n  stat sStack_a8;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = lstat(param_1,&sStack_a8);\n  piVar2 = __errno_location();\n  if (iVar1 != 0) {\n    if (*piVar2 != 0x4b) {\n      iVar1 = -(uint)(*piVar2 != 2);\n      goto LAB_001120f3;\n    }\n  }\n  *piVar2 = 0x11;\n  iVar1 = -1;\nLAB_001120f3:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00117e90": "\nFILE * fopen_safer(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = dup_safer(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      rpl_fclose(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = rpl_fclose(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "001243e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fprintf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00116a40": "\nulong c_isalnum(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00104050": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint symlinkat(char *__from,int __tofd,char *__to)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_symlinkat_00122f98)();\n  return iVar1;\n}\n\n", 
    "001241a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* close@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010bc20": "\nundefined4 computecon(undefined8 param_1,undefined4 param_2,undefined8 param_3)\n\n{\n  short sVar1;\n  int iVar2;\n  undefined4 uVar3;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_30 = 0;\n  local_28 = 0;\n  __ptr = (void *)dir_name();\n  if (__ptr != (void *)0x0) {\n    iVar2 = getcon(&local_30);\n    if (-1 < iVar2) {\n      iVar2 = rpl_getfilecon(__ptr,&local_28);\n      if (-1 < iVar2) {\n        sVar1 = mode_to_security_class(param_2);\n        if (sVar1 != 0) {\n          uVar3 = security_compute_create(local_30,local_28,sVar1,param_3);\n          goto LAB_0010bca6;\n        }\n      }\n    }\n  }\n  uVar3 = 0xffffffff;\nLAB_0010bca6:\n  free(__ptr);\n  freecon(local_30);\n  freecon(local_28);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001242c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* nl_langinfo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001048f0": "\n/* WARNING: Removing unreachable block (ram,0x00104903) */\n/* WARNING: Removing unreachable block (ram,0x0010490f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00111ae0": "\nbool same_nameat(int param_1,undefined8 param_2,int param_3,undefined8 param_4)\n\n{\n  int iVar1;\n  void *__s1;\n  void *__s2;\n  size_t __n;\n  size_t sVar2;\n  char *pcVar3;\n  int *piVar4;\n  bool bVar5;\n  long in_FS_OFFSET;\n  stat local_168;\n  stat local_d8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s1 = (void *)last_component(param_2);\n  __s2 = (void *)last_component(param_4);\n  __n = base_len(__s1);\n  sVar2 = base_len(__s2);\n  bVar5 = false;\n  if (__n == sVar2) {\n    iVar1 = memcmp(__s1,__s2,__n);\n    if (iVar1 == 0) {\n      pcVar3 = (char *)dir_name(param_2);\n      iVar1 = fstatat(param_1,pcVar3,&local_168,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar4,&DAT_0011b616,pcVar3);\n      }\n      free(pcVar3);\n      pcVar3 = (char *)dir_name(param_4);\n      iVar1 = fstatat(param_3,pcVar3,&local_d8,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar4,&DAT_0011b616,pcVar3);\n      }\n      bVar5 = local_168.st_ino == local_d8.st_ino && local_168.st_dev == local_d8.st_dev;\n      free(pcVar3);\n    }\n    else {\n      bVar5 = false;\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001243e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001241a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * canonicalize_file_name(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* canonicalize_file_name@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001242c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fflush@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106f90": "\nvoid emit_verbose(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  \n  uVar1 = quotearg_n_style(1,4,param_2);\n  uVar2 = quotearg_n_style(0,4,param_1);\n  __printf_chk(1,\"%s -> %s\",uVar2,uVar1);\n  if (param_3 != 0) {\n    uVar1 = quotearg_style(4,param_3);\n    uVar2 = dcgettext(0,\" (backup: %s)\",5);\n    __printf_chk(1,uVar2,uVar1);\n  }\n  putchar_unlocked(10);\n  return;\n}\n\n", 
    "00103a80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00122cb0)();\n  return iVar1;\n}\n\n", 
    "0010c420": "\nundefined4 set_acl(undefined8 param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = qset_acl();\n  if (iVar1 == 0) {\n    return 0;\n  }\n  uVar2 = quote(param_1);\n  uVar3 = dcgettext(0,\"setting permissions for %s\",5);\n  piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar4,uVar3,uVar2);\n}\n\n", 
    "00103ea0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_chmod_00122ec0)();\n  return iVar1;\n}\n\n", 
    "00103fc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint renameat(int __oldfd,char *__old,int __newfd,char *__new)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_renameat_00122f50)();\n  return iVar1;\n}\n\n", 
    "001167d0": "\nuint map_to_failure(uint param_1,byte **param_2)\n\n{\n  int *piVar1;\n  long lVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  bool bVar5;\n  bool bVar6;\n  \n  if (param_1 == 0) {\n    piVar1 = __errno_location();\n    *piVar1 = 0x5f;\n    return 0xffffffff;\n  }\n  bVar5 = param_1 < 10;\n  bVar6 = param_1 == 10;\n  if (bVar6) {\n    lVar2 = 10;\n    pbVar3 = *param_2;\n    pbVar4 = (byte *)\"unlabeled\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar5 = *pbVar3 < *pbVar4;\n      bVar6 = *pbVar3 == *pbVar4;\n      pbVar3 = pbVar3 + 1;\n      pbVar4 = pbVar4 + 1;\n    } while (bVar6);\n    if ((!bVar5 && !bVar6) == bVar5) {\n      freecon(*param_2);\n      *param_2 = (byte *)0x0;\n      piVar1 = __errno_location();\n      *piVar1 = 0x3d;\n      return 0xffffffff;\n    }\n  }\n  return param_1;\n}\n\n", 
    "0010f700": "\nundefined8 strcaseeq6(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq7(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00116b70": "\nbool c_isspace(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "001243f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getfscreatecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104040": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00122f90)();\n  return iVar1;\n}\n\n", 
    "001242d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint lchown(char *__file,__uid_t __owner,__gid_t __group)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lchown@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010cd20": "\nvoid * backupfile_internal(void *param_1,int param_2,char param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  char *__s;\n  size_t sVar3;\n  size_t sVar4;\n  ulong __n;\n  int *piVar5;\n  void *pvVar6;\n  ulong uVar7;\n  long lVar8;\n  long in_FS_OFFSET;\n  void *local_50;\n  DIR *local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s = (char *)last_component();\n  sVar3 = strlen(__s);\n  lVar8 = (long)__s - (long)param_1;\n  lVar1 = lVar8 + sVar3;\n  if (simple_backup_suffix == (char *)0x0) {\n    set_simple_backup_suffix();\n  }\n  sVar4 = strlen(simple_backup_suffix);\n  sVar3 = lVar1 + 1;\n  __n = sVar4 + 1;\n  uVar7 = 9;\n  if (8 < __n) {\n    uVar7 = __n;\n  }\n  local_50 = malloc(uVar7 + sVar3);\n  pvVar6 = local_50;\n  if (local_50 == (void *)0x0) {\nLAB_0010cec8:\n    if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    return pvVar6;\n  }\n  local_48 = (DIR *)0x0;\n  memcpy(local_50,param_1,sVar3);\n  if (param_2 == 1) goto LAB_0010ce7c;\nLAB_0010cdd6:\n  iVar2 = numbered_backup(&local_50,uVar7 + sVar3,lVar1,lVar8,&local_48);\n  if (iVar2 == 2) {\n    if (param_2 == 2) {\n      param_2 = 1;\n      memcpy((void *)((long)local_50 + lVar1),simple_backup_suffix,__n);\n    }\n    check_extension_constprop_0(local_50,lVar1);\n  }\n  else {\n    if (iVar2 == 3) {\n      free(local_50);\n      piVar5 = __errno_location();\n      *piVar5 = 0xc;\n      pvVar6 = (void *)0x0;\n      goto LAB_0010cec8;\n    }\n    if (iVar2 == 1) {\n      check_extension_constprop_0(local_50,lVar1);\n    }\n  }\n  do {\n    if (param_3 == '\\0') {\nLAB_0010ceb5:\n      pvVar6 = local_50;\n      if (local_48 != (DIR *)0x0) {\n        closedir(local_48);\n        pvVar6 = local_50;\n      }\n      goto LAB_0010cec8;\n    }\n    if ((local_48 == (DIR *)0x0) || (iVar2 = dirfd(local_48), iVar2 < 0)) {\n      iVar2 = -100;\n      lVar8 = 0;\n    }\n    iVar2 = renameat2(0xffffff9c,param_1,iVar2,lVar8 + (long)local_50,param_2 != 1);\n    if (iVar2 == 0) goto LAB_0010ceb5;\n    piVar5 = __errno_location();\n    iVar2 = *piVar5;\n    if (iVar2 != 0x11) {\n      if (local_48 != (DIR *)0x0) {\n        closedir(local_48);\n      }\n      free(local_50);\n      *piVar5 = iVar2;\n      pvVar6 = (void *)0x0;\n      goto LAB_0010cec8;\n    }\n    memcpy(local_50,param_1,sVar3);\n    if (param_2 != 1) goto LAB_0010cdd6;\nLAB_0010ce7c:\n    memcpy((void *)((long)local_50 + lVar1),simple_backup_suffix,__n);\n  } while( true );\n}\n\n", 
    "001241b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strspn@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001058b0": "\nvoid usage(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = program_name;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\n                      \"Usage: %s [OPTION]... [-T] SOURCE DEST\\n  or:  %s [OPTION]... SOURCE... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY SOURCE...\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_mandatory_arg_note();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -a, --archive                same as -dR --preserve=all\\n      --attributes-only        don\\'t copy the file data, just the attributes\\n      --backup[=CONTROL]       make a backup of each existing destination file\\n  -b                           like --backup but does not accept an argument\\n      --copy-contents          copy contents of special files when recursive\\n  -d                           same as --no-dereference --preserve=links\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -f, --force                  if an existing destination file cannot be\\n                                 opened, remove it and try again (this option\\n                                 is ignored when the -n option is also used)\\n  -i, --interactive            prompt before overwrite (overrides a previous -n\\n                                  option)\\n  -H                           follow command-line symbolic links in SOURCE\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -l, --link                   hard link files instead of copying\\n  -L, --dereference            always follow symbolic links in SOURCE\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -n, --no-clobber             do not overwrite an existing file (overrides\\n                                 a previous -i option)\\n  -P, --no-dereference         never follow symbolic links in SOURCE\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -p                           same as --preserve=mode,ownership,timestamps\\n      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\\n                                 mode,ownership,timestamps), if possible\\n                                 additional attributes: context, links, xattr,\\n                                 all\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --no-preserve=ATTR_LIST  don\\'t preserve the specified attributes\\n      --parents                use full source file name under DIRECTORY\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -R, -r, --recursive          copy directories recursively\\n      --reflink[=WHEN]         control clone/CoW copies. See below\\n      --remove-destination     remove each existing destination file before\\n                                 attempting to open it (contrast with --force)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --sparse=WHEN            control creation of sparse files. See below\\n      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\\n                                 argument\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -s, --symbolic-link          make symbolic links instead of copying\\n  -S, --suffix=SUFFIX          override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  copy all SOURCE arguments into DIRECTORY\\n  -T, --no-target-directory    treat DEST as a normal file\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -u, --update                 copy only when the SOURCE file is newer\\n                                 than the destination file or when the\\n                                 destination file is missing\\n  -v, --verbose                explain what is being done\\n  -x, --one-file-system        stay on this file system\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -Z                           set SELinux security context of destination\\n                                 file to default type\\n      --context[=CTX]          like -Z, or if CTX is specified then set the\\n                                 SELinux or SMACK security context to CTX\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nBy default, sparse SOURCE files are detected by a crude heuristic and the\\ncorresponding DEST file is made sparse as well.  That is the behavior\\nselected by --sparse=auto.  Specify --sparse=always to create a sparse DEST\\nfile whenever the SOURCE file contains a long enough sequence of zero bytes.\\nUse --sparse=never to inhibit creation of sparse files.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nWhen --reflink[=always] is specified, perform a lightweight copy, where the\\ndata blocks are copied only when modified.  If this is not possible the copy\\nfails, or if --reflink=auto is specified, fall back to a standard copy.\\nUse --reflink=never to ensure a standard copy is performed.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_backup_suffix_note();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nAs a special case, cp makes a backup of SOURCE when the force and backup\\noptions are given and SOURCE and DEST are the same name for an existing,\\nregular file.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    emit_ancillary_info_constprop_0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001069a0": "\nundefined8 create_hole(int param_1,undefined8 param_2,char param_3,long param_4)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  char *pcVar6;\n  \n  _Var2 = lseek(param_1,param_4,1);\n  if (_Var2 < 0) {\n    uVar3 = quotearg_style(4,param_2);\n    pcVar6 = \"cannot lseek %s\";\nLAB_00106a34:\n    uVar4 = dcgettext(0,pcVar6,5);\n    piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar5,uVar4,uVar3);\n  }\n  if (param_3 != '\\0') {\n    iVar1 = punch_hole(param_1,_Var2 - param_4,param_4);\n    if (iVar1 < 0) {\n      uVar3 = quotearg_style(4,param_2);\n      pcVar6 = \"error deallocating %s\";\n      goto LAB_00106a34;\n    }\n  }\n  return 1;\n}\n\n", 
    "001243f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113bb0": "\nvoid xnrealloc(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    xrealloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "001242d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001241b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid rewinddir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* rewinddir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104a40": "\nuint target_directory_operand(char *param_1,stat *param_2,undefined *param_3,char param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  \n  uVar2 = stat(param_1,param_2);\n  if (uVar2 == 0) {\n    if ((param_2->st_mode & 0xf000) == 0x4000) {\n      return 1;\n    }\n  }\n  else {\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 != 0) {\n      if (iVar1 == 2) {\n        *param_3 = 1;\n        return 0;\n      }\n      if (param_4 != '\\0') {\n        param_2->st_mode = 0;\n        return 0;\n      }\n      uVar4 = quotearg_style(4,param_1);\n      uVar5 = dcgettext(0,\"failed to access %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,iVar1,uVar5,uVar4);\n    }\n    uVar2 = (uint)((param_2->st_mode & 0xf000) == 0x4000);\n  }\n  return uVar2 & 1;\n}\n\n", 
    "00103a70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00122ca8)();\n  return sVar1;\n}\n\n", 
    "00103b90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ioctl_00122d38)();\n  return iVar1;\n}\n\n", 
    "00103fb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_00122f48)();\n  return _Var1;\n}\n\n", 
    "00110f10": "\nundefined1 *\nquotearg_n_options(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  ulong uVar5;\n  int *piVar6;\n  undefined1 (*pauVar7) [16];\n  ulong uVar8;\n  undefined1 *__ptr;\n  \n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pauVar7 = (undefined1 (*) [16])slotvec;\n  if (nslots <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n    if (slotvec == slotvec0) {\n      pauVar7 = (undefined1 (*) [16])xrealloc(0);\n      slotvec = (undefined *)pauVar7;\n      *pauVar7 = slotvec0;\n    }\n    else {\n      pauVar7 = (undefined1 (*) [16])xrealloc(slotvec);\n      slotvec = (undefined *)pauVar7;\n    }\n    memset(pauVar7[nslots],0,(long)((param_1 + 1) - nslots) << 4);\n    nslots = param_1 + 1;\n  }\n  uVar3 = param_4[1];\n  pauVar7 = pauVar7[param_1];\n  uVar5 = *(ulong *)*pauVar7;\n  __ptr = *(undefined1 **)(*pauVar7 + 8);\n  uVar8 = quotearg_buffer_restyled\n                    (__ptr,uVar5,param_2,param_3,*param_4,uVar3 | 1,param_4 + 2,\n                     *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar5 <= uVar8) {\n    lVar1 = uVar8 + 1;\n    *(long *)*pauVar7 = lVar1;\n    if (__ptr != slot0) {\n      free(__ptr);\n    }\n    __ptr = (undefined1 *)xcharalloc(lVar1);\n    uVar4 = *param_4;\n    *(undefined1 **)(*pauVar7 + 8) = __ptr;\n    quotearg_buffer_restyled\n              (__ptr,lVar1,param_2,param_3,uVar4,uVar3 | 1,param_4 + 2,*(undefined8 *)(param_4 + 10)\n               ,*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar6 = iVar2;\n  return __ptr;\n}\n\n", 
    "00103db0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00122e48)();\n  return iVar1;\n}\n\n", 
    "00103ff0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getppid_00122f68)();\n  return _Var1;\n}\n\n", 
    "001169e0": "\nvoid rotl_sz(void)\n\n{\n  rotl64();\n  return;\n}\n\n", 
    "00103ed0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00122ed8)();\n  return;\n}\n\n", 
    "00116a20": "\nuint rotl8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "001145c0": "\nvoid fts_lfree(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n", 
    "001111d0": "\nvoid quotearg_buffer(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                    undefined1 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if ((undefined4 *)param_5 == (undefined4 *)0x0) {\n    param_5 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  quotearg_buffer_restyled\n            (param_1,param_2,param_3,param_4,*(undefined4 *)param_5,\n             *(undefined4 *)((long)param_5 + 4),(undefined4 *)((long)param_5 + 8),\n             *(undefined8 *)((long)param_5 + 0x28),*(undefined8 *)((long)param_5 + 0x30));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001110b0": "\nvoid clone_quoting_options(undefined1 *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  xmemdup(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00104070": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00122fa8)();\n  return iVar1;\n}\n\n", 
    "00106130": "\nbool dot_or_dotdot(char *param_1)\n\n{\n  if (*param_1 != '.') {\n    return false;\n  }\n  return param_1[(ulong)(param_1[1] == '.') + 1] == '\\0' ||\n         param_1[(ulong)(param_1[1] == '.') + 1] == '/';\n}\n\n", 
    "00111800": "\nulong renameat2(uint param_1,char *param_2,uint param_3,char *param_4,uint param_5)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  ulong uVar4;\n  int *piVar5;\n  size_t sVar6;\n  size_t sVar7;\n  ulong uVar8;\n  long in_FS_OFFSET;\n  undefined local_168 [24];\n  uint local_150;\n  undefined local_d8 [24];\n  uint local_c0;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar4 = syscall(0x13c,(ulong)param_1,param_2,(ulong)param_3,param_4,(ulong)param_5);\n  uVar8 = uVar4 & 0xffffffff;\n  if (-1 < (int)uVar4) goto LAB_001118c8;\n  uVar8 = uVar4 & 0xffffffff;\n  piVar5 = __errno_location();\n  bVar1 = (*piVar5 - 0x16U & 0xffffffef) != 0 && *piVar5 != 0x5f;\n  if (bVar1) goto LAB_001118c8;\n  if (param_5 == 0) {\nLAB_00111900:\n    sVar6 = strlen(param_2);\n    sVar7 = strlen(param_4);\n    if (((sVar6 != 0) && (sVar7 != 0)) &&\n       ((param_2[sVar6 - 1] == '/' || (param_4[sVar7 - 1] == '/')))) {\n      iVar2 = lstatat(param_1,param_2,local_168);\n      if (iVar2 != 0) goto LAB_001118bf;\n      if (bVar1) {\n        if ((local_150 & 0xf000) != 0x4000) {\n          uVar3 = errno_fail(2);\n          uVar8 = (ulong)uVar3;\n          goto LAB_001118c8;\n        }\n      }\n      else {\n        iVar2 = lstatat(param_3,param_4,local_d8);\n        if (iVar2 == 0) {\n          if ((local_c0 & 0xf000) != 0x4000) {\n            uVar3 = errno_fail(0x14);\n            uVar8 = (ulong)uVar3;\n            goto LAB_001118c8;\n          }\n          if ((local_150 & 0xf000) != 0x4000) {\n            uVar3 = errno_fail(0x15);\n            uVar8 = (ulong)uVar3;\n            goto LAB_001118c8;\n          }\n        }\n        else if ((*piVar5 != 2) || ((local_150 & 0xf000) != 0x4000)) goto LAB_001118bf;\n      }\n    }\n    uVar3 = renameat(param_1,param_2,param_3,param_4);\n    uVar8 = (ulong)uVar3;\n  }\n  else {\n    if ((param_5 & 0xfffffffe) != 0) {\n      uVar3 = errno_fail(0x5f);\n      uVar8 = (ulong)uVar3;\n      goto LAB_001118c8;\n    }\n    iVar2 = lstatat(param_3,param_4,local_d8);\n    if ((iVar2 == 0) || (*piVar5 == 0x4b)) {\n      uVar3 = errno_fail(0x11);\n      uVar8 = (ulong)uVar3;\n      goto LAB_001118c8;\n    }\n    if (*piVar5 == 2) {\n      bVar1 = true;\n      goto LAB_00111900;\n    }\nLAB_001118bf:\n    uVar8 = 0xffffffff;\n  }\nLAB_001118c8:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar8;\n}\n\n", 
    "001242a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid setfscreatecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001243c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getpagesize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001068b0": "\nundefined8 write_zeros(undefined4 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  \n  if ((zeros_7995 == (undefined1 *)0x0) &&\n     (zeros_7995 = (undefined1 *)calloc(nz_7996,1), zeros_7995 == (undefined1 *)0x0)) {\n    nz_7996 = 0x400;\n    zeros_7995 = fallback_7997;\n  }\n  if (param_2 != 0) {\n    do {\n      uVar2 = param_2;\n      if (nz_7996 <= param_2) {\n        uVar2 = nz_7996;\n      }\n      uVar1 = full_write(param_1,zeros_7995,uVar2);\n      if (uVar1 != uVar2) {\n        return 0;\n      }\n      param_2 = param_2 - uVar1;\n    } while (param_2 != 0);\n  }\n  return 1;\n}\n\n", 
    "00113dc0": "\nbool cycle_warning_required(long param_1,long param_2)\n\n{\n  uint uVar1;\n  bool bVar2;\n  \n  bVar2 = true;\n  uVar1 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar1 != 0x10) && (bVar2 = false, uVar1 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar2;\n}\n\n", 
    "00113ca0": "\nvoid xcalloc(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00117230": "\nundefined4 randint_all_free(undefined8 *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  \n  uVar2 = randread_free(*param_1);\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  randint_free(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "001242a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* readdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001243c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid freecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b550": "\nvoid hash_init(void)\n\n{\n  src_to_dest = hash_initialize(0x67,0,src_to_dest_hash,src_to_dest_compare,src_to_dest_free);\n  if (src_to_dest != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00103ec0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00122ed0)();\n  return pvVar1;\n}\n\n", 
    "001123f0": "\nulong dev_info_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "00103da0": "\nvoid setfscreatecon(void)\n\n{\n  (*(code *)PTR_setfscreatecon_00122e40)();\n  return;\n}\n\n", 
    "001169f0": "\nvoid rotr_sz(void)\n\n{\n  rotr64();\n  return;\n}\n\n", 
    "00103fe0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getpagesize_00122f60)();\n  return iVar1;\n}\n\n", 
    "00116a30": "\nuint rotr8(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "001122d0": "\nvoid gen_tempname_len(undefined8 param_1,undefined8 param_2,undefined4 param_3,int param_4)\n\n{\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if (param_4 == 1) {\n    try_tempname_len(param_1,param_2,local_c,try_dir);\n    return;\n  }\n  if (param_4 != 2) {\n    if (param_4 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! \\\"invalid KIND in __gen_tempname\\\"\",\"lib/tempname.c\",0x147,\"gen_tempname_len\"\n                   );\n    }\n    try_tempname_len(param_1,param_2,local_c,try_file);\n    return;\n  }\n  try_tempname_len(param_1,param_2,local_c,try_nocreate);\n  return;\n}\n\n", 
    "00104060": "\nvoid context_str(void)\n\n{\n  (*(code *)PTR_context_str_00122fa0)();\n  return;\n}\n\n", 
    "00107690": "\nvoid overwrite_ok_isra_0(long param_1,undefined8 param_2,uint *param_3)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  char cVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  undefined local_3c;\n  undefined local_3b [9];\n  undefined local_32;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar3 = writable_destination(param_2,*param_3);\n  if (cVar3 == '\\0') {\n    strmode(*param_3,&local_3c);\n    uVar1 = *param_3;\n    local_32 = 0;\n    uVar4 = quotearg_style(4,param_2);\n    uVar2 = program_name;\n    if ((*(char *)(param_1 + 0x18) == '\\0') && ((*(uint *)(param_1 + 0x14) & 0xffff00) == 0)) {\n      uVar5 = dcgettext(0,\"%s: unwritable %s (mode %04lo, %s); try anyway? \",5);\n    }\n    else {\n      uVar5 = dcgettext(0,\"%s: replace %s, overriding mode %04lo (%s)? \",5);\n    }\n    __fprintf_chk(stderr,1,uVar5,uVar2,uVar4,uVar1 & 0xfff,local_3b);\n  }\n  else {\n    uVar4 = quotearg_style(4,param_2);\n    uVar2 = program_name;\n    uVar5 = dcgettext(0,\"%s: overwrite %s? \",5);\n    __fprintf_chk(stderr,1,uVar5,uVar2,uVar4);\n  }\n  yesno();\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00116c70": "\nulong close_stream(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = rpl_fclose(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001242b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001068a0": "\nvoid clone_file(int param_1,ulong param_2)\n\n{\n  ioctl(param_1,0x40049409,param_2 & 0xffffffff);\n  return;\n}\n\n", 
    "001243d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00114ec0": "\nundefined8 enter_dir_isra_0(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = cycle_check(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)hash_insert(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n", 
    "001242b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putc_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107d30": "\nvoid src_info_init(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = hash_initialize(0x3d,0,triple_hash_no_name,triple_compare,triple_free);\n  *(undefined8 *)(param_1 + 0x48) = uVar1;\n  return;\n}\n\n", 
    "00112bc0": "\nint validate_timespec(undefined8 *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  int *piVar4;\n  char cVar5;\n  uint uVar6;\n  \n  uVar1 = param_1[1];\n  if ((uVar1 - 0x3ffffffe < 2) || (uVar1 < 1000000000)) {\n    uVar2 = param_1[3];\n    if ((uVar2 - 0x3ffffffe < 2) || (uVar2 < 1000000000)) {\n      bVar3 = uVar1 - 0x3ffffffe < 2;\n      if (bVar3) {\n        *param_1 = 0;\n      }\n      cVar5 = bVar3 && uVar1 == 0x3ffffffe;\n      uVar6 = (uint)bVar3;\n      if (uVar2 - 0x3ffffffe < 2) {\n        param_1[2] = 0;\n        uVar6 = 1;\n        cVar5 = cVar5 + (uVar2 == 0x3ffffffe);\n      }\n      return (cVar5 == '\\x01') + uVar6;\n    }\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0x16;\n  return -1;\n}\n\n", 
    "001243d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getppid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103a90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_00122cb8)();\n  return iVar1;\n}\n\n", 
    "00104b80": "\nvoid decode_preserve_arg(undefined8 param_1,undefined8 param_2,char param_3)\n\n{\n  char *__s;\n  char *pcVar1;\n  char *pcVar2;\n  long lVar3;\n  char *pcVar4;\n  \n  __s = (char *)xstrdup();\n  pcVar1 = \"--no-preserve\";\n  if (param_3 != '\\0') {\n    pcVar1 = \"--preserve\";\n  }\n  pcVar4 = __s;\n  pcVar2 = strchr(__s,0x2c);\n  if (pcVar2 != (char *)0x0) {\n    *pcVar2 = '\\0';\n  }\n  lVar3 = __xargmatch_internal\n                    (pcVar1,__s,preserve_args_7801,preserve_vals_7800,4,argmatch_die,pcVar1,pcVar4);\n  if (*(uint *)(preserve_vals_7800 + lVar3 * 4) < 7) {\n                    /* WARNING: Could not recover jumptable at 0x00104c2b. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (*(code *)(&DAT_0011a9d0 +\n              *(int *)(&DAT_0011a9d0 + (ulong)*(uint *)(preserve_vals_7800 + lVar3 * 4) * 4)))();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b410": "\nvoid forget_created(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_18 = 0;\n  local_28 = param_1;\n  local_20 = param_2;\n  lVar1 = hash_delete(src_to_dest,&local_28);\n  if (lVar1 != 0) {\n    src_to_dest_free(lVar1);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e1d0": "\nlong safe_hasher(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f3e0": "\nvoid triple_free(void **param_1)\n\n{\n  free(*param_1);\n  (*(code *)PTR_free_00122fc8)(param_1);\n  return;\n}\n\n", 
    "001146c0": "\nlong filesystem_type(long param_1,int param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 *__ptr;\n  undefined8 *puVar5;\n  long in_FS_OFFSET;\n  undefined8 local_b8 [2];\n  statfs local_a8;\n  long local_30;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(lVar3 + 0x49) & 2) != 0) {\n    lVar4 = *(long *)(lVar3 + 0x50);\n    if (lVar4 == 0) {\n      lVar4 = hash_initialize(0xd,0,dev_type_hash,dev_type_compare,PTR_free_00122fc8);\n      *(long *)(lVar3 + 0x50) = lVar4;\n      if (lVar4 != 0) goto LAB_001146fc;\n    }\n    else {\nLAB_001146fc:\n      local_b8[0] = *(undefined8 *)(param_1 + 0x78);\n      lVar3 = hash_lookup(lVar4,local_b8);\n      if (lVar3 != 0) {\n        lVar3 = *(long *)(lVar3 + 8);\n        goto LAB_0011476b;\n      }\n    }\n    if ((-1 < param_2) && (iVar2 = fstatfs(param_2,&local_a8), lVar3 = local_a8.f_type, iVar2 == 0))\n    {\n      if ((lVar4 != 0) && (__ptr = (undefined8 *)malloc(0x10), __ptr != (undefined8 *)0x0)) {\n        uVar1 = *(undefined8 *)(param_1 + 0x78);\n        __ptr[1] = lVar3;\n        *__ptr = uVar1;\n        puVar5 = (undefined8 *)hash_insert(lVar4,__ptr);\n        if (puVar5 == (undefined8 *)0x0) {\n          free(__ptr);\n          lVar3 = local_a8.f_type;\n        }\n        else {\n          lVar3 = local_a8.f_type;\n          if (__ptr != puVar5) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n        }\n      }\n      goto LAB_0011476b;\n    }\n  }\n  lVar3 = 0;\nLAB_0011476b:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar3;\n}\n\n", 
    "00106310": "\nuint same_file_ok(char *param_1,stat *param_2,char *param_3,stat *param_4,int *param_5,\n                 undefined *param_6)\n\n{\n  bool bVar1;\n  char cVar2;\n  uint uVar3;\n  int iVar4;\n  char *__ptr;\n  char cVar5;\n  stat *__buf;\n  long in_FS_OFFSET;\n  byte local_178;\n  undefined4 local_168;\n  undefined4 uStack_164;\n  undefined4 uStack_160;\n  undefined4 uStack_15c;\n  undefined4 local_158;\n  undefined4 uStack_154;\n  __mode_t _Stack_150;\n  __uid_t _Stack_14c;\n  __gid_t local_148;\n  int iStack_144;\n  undefined4 uStack_140;\n  undefined4 uStack_13c;\n  undefined4 local_138;\n  undefined4 uStack_134;\n  undefined4 uStack_130;\n  undefined4 uStack_12c;\n  undefined4 local_128;\n  undefined4 uStack_124;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 local_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 local_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 local_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined4 local_e8;\n  undefined4 uStack_e4;\n  undefined4 uStack_e0;\n  undefined4 uStack_dc;\n  undefined4 local_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  __mode_t _Stack_c0;\n  __uid_t _Stack_bc;\n  __gid_t local_b8;\n  int iStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 local_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 local_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 local_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 local_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined4 local_68;\n  undefined4 uStack_64;\n  undefined4 uStack_60;\n  undefined4 uStack_5c;\n  undefined4 local_58;\n  undefined4 uStack_54;\n  undefined4 uStack_50;\n  undefined4 uStack_4c;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2->st_ino == param_4->st_ino) && (param_2->st_dev == param_4->st_dev)) {\n    *param_6 = 0;\n    cVar2 = *(char *)((long)param_5 + 0x17);\n    if (cVar2 != '\\0') {\nLAB_00106530:\n      *param_6 = 1;\n      uVar3 = 1;\n      goto LAB_00106360;\n    }\n    if (param_5[1] == 2) {\n      cVar2 = '\\x01';\n      bVar1 = true;\n      goto LAB_00106395;\n    }\n    param_4 = (stat *)&local_168;\n    iVar4 = lstat(param_3,param_4);\n    if (iVar4 == 0) {\n      __buf = (stat *)&local_d8;\n      iVar4 = lstat(param_1,__buf);\n      if (iVar4 == 0) {\n        if (CONCAT44(uStack_cc,uStack_d0) == CONCAT44(uStack_15c,uStack_160)) {\n          cVar2 = CONCAT44(uStack_d4,local_d8) == CONCAT44(uStack_164,local_168);\n        }\n        if ((((_Stack_c0 & 0xf000) != 0xa000) || ((_Stack_150 & 0xf000) != 0xa000)) ||\n           (*(char *)((long)param_5 + 0x15) == '\\0')) goto LAB_001063ad;\n      }\n    }\n  }\n  else {\n    iVar4 = param_5[1];\n    *param_6 = 0;\n    if (iVar4 != 2) goto LAB_0010635b;\n    cVar2 = '\\0';\n    bVar1 = false;\nLAB_00106395:\n    __buf = param_2;\n    if (((param_2->st_mode & 0xf000) != 0xa000) || ((param_4->st_mode & 0xf000) != 0xa000)) {\nLAB_001063ad:\n      if (*param_5 == 0) {\n        cVar5 = *(char *)(param_5 + 6);\n        if ((cVar5 == '\\0') && (*(char *)((long)param_5 + 0x15) == '\\0')) {\n          if ((__buf->st_mode & 0xf000) != 0xa000) {\nLAB_001065b0:\n            if ((param_4->st_mode & 0xf000) != 0xa000) {\nLAB_00106509:\n              if ((__buf->st_ino != param_4->st_ino) || (__buf->st_dev != param_4->st_dev))\n              goto LAB_0010635b;\n              if (*(char *)((long)param_5 + 0x17) != '\\0') goto LAB_00106530;\n            }\nLAB_001065c3:\n            cVar5 = *(char *)(param_5 + 6);\n            goto LAB_001065c7;\n          }\n        }\n        else {\n          if ((param_4->st_mode & 0xf000) == 0xa000) goto LAB_0010635b;\n          if ((cVar2 != '\\0') && (1 < param_4->st_nlink)) {\n            cVar2 = same_name(param_1,param_3);\n            if (cVar2 == '\\0') {\n              uVar3 = *(byte *)(param_5 + 6) ^ 1;\n              goto LAB_00106360;\n            }\n            if ((__buf->st_mode & 0xf000) != 0xa000) goto LAB_001065b0;\n            goto LAB_001065c3;\n          }\n          if ((__buf->st_mode & 0xf000) != 0xa000) goto LAB_00106509;\nLAB_001065c7:\n          if ((((cVar5 != '\\0') && ((param_2->st_mode & 0xf000) == 0xa000)) &&\n              (1 < param_4->st_nlink)) &&\n             (__ptr = canonicalize_file_name(param_1), __ptr != (char *)0x0)) {\n            local_178 = same_name(__ptr,param_3);\n            local_178 = local_178 ^ 1;\n            free(__ptr);\n            uVar3 = (uint)local_178;\n            goto LAB_00106360;\n          }\n        }\n        if ((*(char *)(param_5 + 0xb) != '\\0') && ((param_4->st_mode & 0xf000) == 0xa000))\n        goto LAB_0010635b;\n        if (param_5[1] == 2) {\n          if ((__buf->st_mode & 0xf000) == 0xa000) {\n            iVar4 = stat(param_1,(stat *)&local_d8);\n            if (iVar4 != 0) goto LAB_0010635b;\n          }\n          else {\n            local_d8 = *(undefined4 *)&__buf->st_dev;\n            uStack_d4 = *(undefined4 *)((long)&__buf->st_dev + 4);\n            uStack_d0 = *(undefined4 *)&__buf->st_ino;\n            uStack_cc = *(undefined4 *)((long)&__buf->st_ino + 4);\n            local_c8 = *(undefined4 *)&__buf->st_nlink;\n            uStack_c4 = *(undefined4 *)((long)&__buf->st_nlink + 4);\n            _Stack_c0 = __buf->st_mode;\n            _Stack_bc = __buf->st_uid;\n            local_b8 = __buf->st_gid;\n            iStack_b4 = __buf->__pad0;\n            uStack_b0 = *(undefined4 *)&__buf->st_rdev;\n            uStack_ac = *(undefined4 *)((long)&__buf->st_rdev + 4);\n            local_a8 = *(undefined4 *)&__buf->st_size;\n            uStack_a4 = *(undefined4 *)((long)&__buf->st_size + 4);\n            uStack_a0 = *(undefined4 *)&__buf->st_blksize;\n            uStack_9c = *(undefined4 *)((long)&__buf->st_blksize + 4);\n            local_98 = *(undefined4 *)&__buf->st_blocks;\n            uStack_94 = *(undefined4 *)((long)&__buf->st_blocks + 4);\n            uStack_90 = *(undefined4 *)&(__buf->st_atim).tv_sec;\n            uStack_8c = *(undefined4 *)((long)&(__buf->st_atim).tv_sec + 4);\n            local_88 = *(undefined4 *)&(__buf->st_atim).tv_nsec;\n            uStack_84 = *(undefined4 *)((long)&(__buf->st_atim).tv_nsec + 4);\n            uStack_80 = *(undefined4 *)&(__buf->st_mtim).tv_sec;\n            uStack_7c = *(undefined4 *)((long)&(__buf->st_mtim).tv_sec + 4);\n            local_78 = *(undefined4 *)&(__buf->st_mtim).tv_nsec;\n            uStack_74 = *(undefined4 *)((long)&(__buf->st_mtim).tv_nsec + 4);\n            uStack_70 = *(undefined4 *)&(__buf->st_ctim).tv_sec;\n            uStack_6c = *(undefined4 *)((long)&(__buf->st_ctim).tv_sec + 4);\n            local_68 = *(undefined4 *)&(__buf->st_ctim).tv_nsec;\n            uStack_64 = *(undefined4 *)((long)&(__buf->st_ctim).tv_nsec + 4);\n            uStack_60 = *(undefined4 *)__buf->__unused;\n            uStack_5c = *(undefined4 *)((long)__buf->__unused + 4);\n            local_58 = *(undefined4 *)(__buf->__unused + 1);\n            uStack_54 = *(undefined4 *)((long)__buf->__unused + 0xc);\n            uStack_50 = *(undefined4 *)(__buf->__unused + 2);\n            uStack_4c = *(undefined4 *)((long)__buf->__unused + 0x14);\n          }\n          if ((param_4->st_mode & 0xf000) == 0xa000) {\n            iVar4 = stat(param_3,(stat *)&local_168);\n            if (iVar4 != 0) goto LAB_0010635b;\n          }\n          else {\n            local_168 = *(undefined4 *)&param_4->st_dev;\n            uStack_164 = *(undefined4 *)((long)&param_4->st_dev + 4);\n            uStack_160 = *(undefined4 *)&param_4->st_ino;\n            uStack_15c = *(undefined4 *)((long)&param_4->st_ino + 4);\n            local_158 = *(undefined4 *)&param_4->st_nlink;\n            uStack_154 = *(undefined4 *)((long)&param_4->st_nlink + 4);\n            _Stack_150 = param_4->st_mode;\n            _Stack_14c = param_4->st_uid;\n            local_148 = param_4->st_gid;\n            iStack_144 = param_4->__pad0;\n            uStack_140 = *(undefined4 *)&param_4->st_rdev;\n            uStack_13c = *(undefined4 *)((long)&param_4->st_rdev + 4);\n            local_138 = *(undefined4 *)&param_4->st_size;\n            uStack_134 = *(undefined4 *)((long)&param_4->st_size + 4);\n            uStack_130 = *(undefined4 *)&param_4->st_blksize;\n            uStack_12c = *(undefined4 *)((long)&param_4->st_blksize + 4);\n            local_128 = *(undefined4 *)&param_4->st_blocks;\n            uStack_124 = *(undefined4 *)((long)&param_4->st_blocks + 4);\n            uStack_120 = *(undefined4 *)&(param_4->st_atim).tv_sec;\n            uStack_11c = *(undefined4 *)((long)&(param_4->st_atim).tv_sec + 4);\n            local_118 = *(undefined4 *)&(param_4->st_atim).tv_nsec;\n            uStack_114 = *(undefined4 *)((long)&(param_4->st_atim).tv_nsec + 4);\n            uStack_110 = *(undefined4 *)&(param_4->st_mtim).tv_sec;\n            uStack_10c = *(undefined4 *)((long)&(param_4->st_mtim).tv_sec + 4);\n            local_108 = *(undefined4 *)&(param_4->st_mtim).tv_nsec;\n            uStack_104 = *(undefined4 *)((long)&(param_4->st_mtim).tv_nsec + 4);\n            uStack_100 = *(undefined4 *)&(param_4->st_ctim).tv_sec;\n            uStack_fc = *(undefined4 *)((long)&(param_4->st_ctim).tv_sec + 4);\n            local_f8 = *(undefined4 *)&(param_4->st_ctim).tv_nsec;\n            uStack_f4 = *(undefined4 *)((long)&(param_4->st_ctim).tv_nsec + 4);\n            uStack_f0 = *(undefined4 *)param_4->__unused;\n            uStack_ec = *(undefined4 *)((long)param_4->__unused + 4);\n            local_e8 = *(undefined4 *)(param_4->__unused + 1);\n            uStack_e4 = *(undefined4 *)((long)param_4->__unused + 0xc);\n            uStack_e0 = *(undefined4 *)(param_4->__unused + 2);\n            uStack_dc = *(undefined4 *)((long)param_4->__unused + 0x14);\n          }\n          if ((CONCAT44(uStack_cc,uStack_d0) != CONCAT44(uStack_15c,uStack_160)) ||\n             (CONCAT44(uStack_d4,local_d8) != CONCAT44(uStack_164,local_168))) goto LAB_0010635b;\n          uVar3 = (uint)*(byte *)((long)param_5 + 0x17);\n          if (*(byte *)((long)param_5 + 0x17) != 0) {\n            *param_6 = (param_4->st_mode & 0xf000) != 0xa000;\n            goto LAB_00106360;\n          }\n        }\n      }\n      else {\n        if (cVar2 != '\\0') {\n          uVar3 = same_name(param_1,param_3);\n          uVar3 = uVar3 ^ 1;\n          goto LAB_00106360;\n        }\n        if ((((*(char *)(param_5 + 6) != '\\0') || (param_5[1] == 2)) ||\n            ((__buf->st_mode & 0xf000) != 0xa000)) || ((param_4->st_mode & 0xf000) == 0xa000))\n        goto LAB_0010635b;\n      }\n      uVar3 = 0;\n      goto LAB_00106360;\n    }\n    cVar2 = same_name(param_1,param_3);\n    uVar3 = 0;\n    if (cVar2 != '\\0') goto LAB_00106360;\n    if ((*param_5 == 0) && (bVar1)) {\n      *param_6 = 1;\n      uVar3 = *(byte *)(param_5 + 6) ^ 1;\n      goto LAB_00106360;\n    }\n  }\nLAB_0010635b:\n  uVar3 = 1;\nLAB_00106360:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar3;\n}\n\n", 
    "0010e920": "\nlong hash_do_for_each(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "001113f0": "\nvoid quotearg_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quotearg_n_options(param_1,param_2,0xffffffffffffffff,default_quoting_options);\n  return;\n}\n\n", 
    "00116a00": "\nuint rotl16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00104010": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00122f78)();\n  return sVar1;\n}\n\n", 
    "00105340": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 re_protect(char *param_1,long param_2,long param_3,long param_4)\n\n{\n  __gid_t _Var1;\n  __uid_t __owner;\n  undefined4 uVar2;\n  __mode_t __mode;\n  long lVar3;\n  undefined *puVar4;\n  char cVar5;\n  int iVar6;\n  size_t sVar7;\n  char *pcVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  int *piVar11;\n  ulong uVar12;\n  undefined *puVar13;\n  long in_FS_OFFSET;\n  undefined auVar15 [16];\n  undefined auStack_78 [15];\n  char local_69;\n  undefined local_68 [16];\n  undefined local_58 [24];\n  long local_40;\n  undefined *puVar14;\n  \n  puVar13 = auStack_78;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar7 = strlen(param_1);\n  puVar14 = auStack_78;\n  puVar4 = auStack_78;\n  while (puVar14 != auStack_78 + -(sVar7 + 0x18 & 0xfffffffffffff000)) {\n    puVar13 = puVar4 + -0x1000;\n    *(undefined8 *)(puVar4 + -8) = *(undefined8 *)(puVar4 + -8);\n    puVar14 = puVar4 + -0x1000;\n    puVar4 = puVar4 + -0x1000;\n  }\n  uVar12 = (ulong)((uint)(sVar7 + 0x18) & 0xff0);\n  lVar3 = -uVar12;\n  if (uVar12 != 0) {\n    *(undefined8 *)(puVar13 + -8) = *(undefined8 *)(puVar13 + -8);\n  }\n  *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1053cf;\n  pcVar8 = (char *)memcpy((void *)((ulong)(puVar13 + lVar3 + 0xf) & 0xfffffffffffffff0),param_1,\n                          sVar7 + 1);\n  if (param_3 != 0) {\n    do {\n      cVar5 = *(char *)(param_4 + 0x1f);\n      pcVar8[*(long *)(param_3 + 0x98)] = '\\0';\n      if (cVar5 != '\\0') {\n        uVar9 = *(undefined8 *)(param_3 + 0x48);\n        uVar10 = *(undefined8 *)(param_3 + 0x50);\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x10544a;\n        auVar15 = get_stat_mtime_isra_0(uVar9,uVar10);\n        uVar9 = *(undefined8 *)(param_3 + 0x58);\n        uVar10 = *(undefined8 *)(param_3 + 0x60);\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x10545f;\n        local_68 = auVar15;\n        auVar15 = get_stat_mtime_isra_0(uVar9,uVar10);\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x105472;\n        local_58._0_16_ = auVar15;\n        iVar6 = utimens(pcVar8,local_68);\n        if (iVar6 != 0) {\n          *(undefined8 *)(puVar13 + lVar3 + -8) = 0x105487;\n          uVar9 = quotearg_style(4,pcVar8);\n          *(undefined8 *)(puVar13 + lVar3 + -8) = 0x10549d;\n          uVar10 = dcgettext(0,\"failed to preserve times for %s\",5);\n          *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1054a5;\n          piVar11 = __errno_location();\n          iVar6 = *piVar11;\n                    /* WARNING: Subroutine does not return */\n          *(undefined **)(puVar13 + lVar3 + -8) = &UNK_001054b6;\n          error(0,iVar6,uVar10,uVar9);\n        }\n      }\n      if (*(char *)(param_4 + 0x1d) == '\\0') {\nLAB_001053f3:\n        cVar5 = *(char *)(param_4 + 0x1e);\n        if (cVar5 != '\\0') goto LAB_00105508;\nLAB_00105401:\n        if (*(char *)(param_3 + 0x90) != '\\0') {\n          __mode = *(__mode_t *)(param_3 + 0x18);\n          *(undefined8 *)(puVar13 + lVar3 + -8) = 0x10553f;\n          local_69 = cVar5;\n          iVar6 = chmod(pcVar8,__mode);\n          if (iVar6 != 0) {\n            *(undefined8 *)(puVar13 + lVar3 + -8) = 0x105554;\n            uVar9 = quotearg_style(4,pcVar8);\n            pcVar8 = \"failed to preserve permissions for %s\";\nLAB_00105563:\n            *(undefined8 *)(puVar13 + lVar3 + -8) = 0x10556a;\n            uVar10 = dcgettext(0,pcVar8,5);\n            *(undefined8 *)(puVar13 + lVar3 + -8) = 0x105572;\n            piVar11 = __errno_location();\n            iVar6 = *piVar11;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar13 + lVar3 + -8) = &UNK_00105583;\n            error(0,iVar6,uVar10,uVar9);\n          }\n        }\n      }\n      else {\n        _Var1 = *(__gid_t *)(param_3 + 0x20);\n        __owner = *(__uid_t *)(param_3 + 0x1c);\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1054ce;\n        iVar6 = lchown(pcVar8,__owner,_Var1);\n        if (iVar6 == 0) goto LAB_001053f3;\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1054de;\n        cVar5 = chown_failure_ok(param_4);\n        if (cVar5 == '\\0') {\n          *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1055d2;\n          local_69 = cVar5;\n          uVar9 = quotearg_style(4,pcVar8);\n          pcVar8 = \"failed to preserve ownership for %s\";\n          goto LAB_00105563;\n        }\n        _Var1 = *(__gid_t *)(param_3 + 0x20);\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1054f6;\n        lchown(pcVar8,0xffffffff,_Var1);\n        cVar5 = *(char *)(param_4 + 0x1e);\n        if (cVar5 == '\\0') goto LAB_00105401;\nLAB_00105508:\n        uVar2 = *(undefined4 *)(param_3 + 0x18);\n        *(undefined8 *)(puVar13 + lVar3 + -8) = 0x105521;\n        iVar6 = copy_acl(pcVar8 + param_2,0xffffffff,pcVar8,0xffffffff,uVar2);\n        if (iVar6 != 0) {\n          uVar9 = 0;\n          goto LAB_00105596;\n        }\n      }\n      pcVar8[*(long *)(param_3 + 0x98)] = '/';\n      param_3 = *(long *)(param_3 + 0xa0);\n    } while (param_3 != 0);\n  }\n  uVar9 = 1;\nLAB_00105596:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar13 + lVar3 + -8) = 0x1055e8;\n    __stack_chk_fail();\n  }\n  return uVar9;\n}\n\n", 
    "00116b20": "\nulong c_ispunct(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00116e80": "\nulong hash_pjw(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n", 
    "001243a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_atexit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00122be0)();\n  return iVar1;\n}\n\n", 
    "00106f50": "\nvoid restore_default_fscreatecon_or_die(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  \n  iVar1 = setfscreatecon(0);\n  if (iVar1 == 0) {\n    return;\n  }\n  uVar2 = dcgettext(0,\"failed to restore the default file creation context\",5);\n  piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(1,*piVar3,uVar2);\n}\n\n", 
    "001243a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid security_compute_create(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00122d20)();\n  return;\n}\n\n", 
    "00111ce0": "\nundefined * streamsavedir(DIR *param_1,uint param_2)\n\n{\n  ulong __n;\n  char cVar1;\n  int iVar2;\n  __compar_fn_t __compar;\n  int *piVar3;\n  dirent *pdVar4;\n  size_t sVar5;\n  char *pcVar6;\n  char *pcVar7;\n  undefined *__ptr;\n  char **__ptr_00;\n  char **ppcVar8;\n  char **ppcVar9;\n  size_t __nmemb;\n  ulong uVar10;\n  undefined *puVar11;\n  long in_FS_OFFSET;\n  size_t local_60;\n  size_t local_58;\n  size_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __compar = *(__compar_fn_t *)(comparison_function_table + (ulong)param_2 * 8);\n  if (param_1 == (DIR *)0x0) {\n    puVar11 = (undefined *)0x0;\n  }\n  else {\n    __ptr_00 = (char **)0x0;\n    piVar3 = __errno_location();\n    __ptr = (undefined *)0x0;\n    local_58 = 0;\n    local_60 = 0;\n    __nmemb = 0;\n    uVar10 = 0;\n    while( true ) {\n      *piVar3 = 0;\n      pdVar4 = readdir(param_1);\n      if (pdVar4 == (dirent *)0x0) break;\n      pcVar6 = pdVar4->d_name;\n      cVar1 = pdVar4->d_name[0];\n      if (cVar1 == '.') {\n        if (pdVar4->d_name[1] == '.') {\n          cVar1 = pdVar4->d_name[2];\n        }\n        else {\n          cVar1 = pdVar4->d_name[1];\n        }\n      }\n      if (cVar1 != '\\0') {\n        sVar5 = strlen(pcVar6);\n        __n = sVar5 + 1;\n        sVar5 = uVar10 + __n;\n        if (__compar == (__compar_fn_t)0x0) {\n          if (local_60 - uVar10 <= __n) {\n            local_48 = sVar5;\n            if (CARRY8(uVar10,__n) != false) {\n                    /* WARNING: Subroutine does not return */\n              xalloc_die();\n            }\n            __ptr = (undefined *)x2nrealloc(__ptr,&local_48,1);\n            local_60 = local_48;\n          }\n          memcpy(__ptr + uVar10,pcVar6,__n);\n          uVar10 = sVar5;\n        }\n        else {\n          if (__nmemb == local_58) {\n            local_48 = __nmemb;\n            __ptr_00 = (char **)x2nrealloc(__ptr_00,&local_48,0x10);\n            local_58 = local_48;\n          }\n          pcVar6 = (char *)xstrdup(pcVar6);\n          __ptr_00[__nmemb * 2] = pcVar6;\n          (__ptr_00 + __nmemb * 2)[1] = (char *)pdVar4->d_ino;\n          __nmemb = __nmemb + 1;\n          uVar10 = sVar5;\n        }\n      }\n    }\n    iVar2 = *piVar3;\n    if (iVar2 == 0) {\n      if (__compar == (__compar_fn_t)0x0) {\n        if (local_60 == uVar10) {\n          __ptr = (undefined *)xrealloc(__ptr,local_60 + 1);\n          puVar11 = __ptr + local_60;\n        }\n        else {\n          puVar11 = __ptr + uVar10;\n        }\n      }\n      else {\n        if (__nmemb == 0) {\n          __ptr = (undefined *)xmalloc(uVar10 + 1);\n          puVar11 = __ptr;\n        }\n        else {\n          qsort(__ptr_00,__nmemb,0x10,__compar);\n          pcVar6 = (char *)0x0;\n          __ptr = (undefined *)xmalloc(uVar10 + 1);\n          ppcVar8 = __ptr_00;\n          do {\n            ppcVar9 = ppcVar8 + 2;\n            pcVar7 = stpcpy(__ptr + (long)pcVar6,*ppcVar8);\n            pcVar6 = pcVar7 + (long)(pcVar6 + (1 - (long)(__ptr + (long)pcVar6)));\n            free(*ppcVar8);\n            ppcVar8 = ppcVar9;\n          } while (__ptr_00 + __nmemb * 2 != ppcVar9);\n          puVar11 = __ptr + (long)pcVar6;\n        }\n        free(__ptr_00);\n      }\n      *puVar11 = 0;\n      puVar11 = __ptr;\n    }\n    else {\n      free(__ptr_00);\n      puVar11 = (undefined *)0x0;\n      free(__ptr);\n      *piVar3 = iVar2;\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return puVar11;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103a40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rmdir(char *__path)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_rmdir_00122c90)();\n  return iVar1;\n}\n\n", 
    "00103c80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00122db0)();\n  return iVar1;\n}\n\n", 
    "0010c740": "\nvoid argmatch_valid(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = quote(lVar1);\n      __fprintf_chk(stderr,1,&DAT_0011b614,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "0010ebd0": "\nvoid hash_free(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010ec7c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0010ec3f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0010ec3f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010ec7c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  (*(code *)PTR_free_00122fc8)(param_1);\n  return;\n}\n\n", 
    "001169c0": "\nuint rotl32(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00114060": "\nvoid rpl_fflush(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      clear_ungetc_buffer_preserving_position(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001168a0": "\nsize_t rpl_mbrtowc(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = hard_locale(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114180": "\nulong AD_hash(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "001169d0": "\nuint rotr32(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00105330": "\nundefined  [16] get_stat_mtime_isra_0(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "0010e810": "\nlong hash_get_first(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = hash_get_first_cold();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = hash_get_first_cold();\n  return lVar1;\n}\n\n", 
    "00104000": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00122f70)();\n  return;\n}\n\n", 
    "00107870": "\nbool source_is_dst_backup_isra_0(char *param_1,__dev_t *param_2,__ino_t *param_3,char *param_4)\n\n{\n  char *pcVar1;\n  int iVar2;\n  size_t sVar3;\n  char *pcVar4;\n  size_t __n;\n  size_t sVar5;\n  char *__dest;\n  long in_FS_OFFSET;\n  bool bVar6;\n  stat local_d8;\n  long local_40;\n  \n  bVar6 = false;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar3 = strlen(param_1);\n  pcVar4 = (char *)last_component(param_4);\n  __n = strlen(pcVar4);\n  pcVar1 = simple_backup_suffix;\n  sVar5 = strlen(simple_backup_suffix);\n  if (((sVar3 == sVar5 + __n) && (iVar2 = memcmp(param_1,pcVar4,__n), iVar2 == 0)) &&\n     (iVar2 = strcmp(param_1 + __n,pcVar1), iVar2 == 0)) {\n    sVar3 = strlen(param_4);\n    pcVar4 = (char *)xmalloc(sVar5 + 1 + sVar3);\n    pcVar1 = simple_backup_suffix;\n    __dest = (char *)mempcpy(pcVar4,param_4,sVar3);\n    strcpy(__dest,pcVar1);\n    iVar2 = stat(pcVar4,&local_d8);\n    free(pcVar4);\n    bVar6 = false;\n    if ((iVar2 == 0) && (*param_3 == local_d8.st_ino)) {\n      bVar6 = *param_2 == local_d8.st_dev;\n    }\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return bVar6;\n}\n\n", 
    "001147f0": "\nulong dirent_inode_sort_may_be_useful(void)\n\n{\n  ulong uVar1;\n  \n  uVar1 = filesystem_type();\n  if ((uVar1 != 0x1021994) && (uVar1 != 0xff534d42)) {\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0x6969);\n  }\n  return 0;\n}\n\n", 
    "00116a10": "\nuint rotr16(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "001049c0": "\nvoid emit_mandatory_arg_note(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001243b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint renameat(int __oldfd,char *__old,int __newfd,char *__new)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* renameat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unlink_00122bd8)();\n  return iVar1;\n}\n\n", 
    "001039f0": "\nvoid context_new(void)\n\n{\n  (*(code *)PTR_context_new_00122c68)();\n  return;\n}\n\n", 
    "00113ed0": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint rpl_fcntl(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00113f54;\n  }\n  if (have_dupfd_cloexec_3397 < 0) {\n    iVar2 = rpl_fcntl(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, have_dupfd_cloexec_3397 != -1)) goto LAB_00113f54;\nLAB_00113f91:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00113f54;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = rpl_fcntl(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00113f54;\n        have_dupfd_cloexec_3397 = -1;\n        __fd = iVar2;\n        goto LAB_00113f91;\n      }\n    }\n    have_dupfd_cloexec_3397 = 1;\n  }\nLAB_00113f54:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103a30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_stpcpy_00122c88)();\n  return pcVar1;\n}\n\n", 
    "00112ba0": "\nvoid utimecmp(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined4 param_4)\n\n{\n  utimecmpat(0xffffff9c,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001243b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getline@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103c70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint utimes(char *__file,timeval *__tvp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_utimes_00122da8)();\n  return iVar1;\n}\n\n", 
    "00103b50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_gettimeofday_00122d18)();\n  return iVar1;\n}\n\n", 
    "00103d90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n  dirent *pdVar1;\n  \n  pdVar1 = (dirent *)(*(code *)PTR_readdir_00122e38)();\n  return pdVar1;\n}\n\n", 
    "00115040": "\nvoid * fts_build(long *param_1,int param_2)\n\n{\n  long lVar1;\n  DIR *__dirp;\n  long lVar2;\n  long lVar3;\n  bool bVar4;\n  void *pvVar5;\n  undefined *puVar6;\n  char cVar7;\n  undefined2 uVar8;\n  int iVar9;\n  int *piVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__ptr;\n  uint uVar13;\n  uint uVar14;\n  undefined4 uVar15;\n  DIR *__dirp_00;\n  ulong uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  ulong local_a0;\n  void *local_98;\n  void *local_90;\n  undefined *local_70;\n  ulong local_68;\n  ulong local_60;\n  char local_4b;\n  char local_4a;\n  int local_44;\n  long local_40;\n  \n  lVar1 = *param_1;\n  __dirp = *(DIR **)(lVar1 + 0x18);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__dirp == (DIR *)0x0) {\n    uVar14 = *(uint *)(param_1 + 9);\n    uVar13 = uVar14 & 0x10;\n    if ((uVar13 != 0) && (uVar13 = 0x20000, (uVar14 & 1) != 0)) {\n      uVar13 = (uint)(*(long *)(lVar1 + 0x58) != 0) << 0x11;\n    }\n    uVar15 = 0xffffff9c;\n    if ((uVar14 & 0x204) == 0x200) {\n      uVar15 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    local_90 = (void *)opendirat(uVar15,*(undefined8 *)(lVar1 + 0x30),(uVar14 & 0x800) << 7 | uVar13\n                                 ,&local_44);\n    *(void **)(lVar1 + 0x18) = local_90;\n    if (local_90 == (void *)0x0) {\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n        goto LAB_00115553;\n      }\n      goto LAB_0011584d;\n    }\n    if (*(short *)(lVar1 + 0x70) == 0xb) {\n      uVar8 = fts_stat(param_1,lVar1,0);\n      *(undefined2 *)(lVar1 + 0x70) = uVar8;\n    }\n    else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n      leave_dir_isra_0(*(uint *)(param_1 + 9),param_1 + 0xb,lVar1);\n      fts_stat(param_1,lVar1,0);\n      cVar7 = enter_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar1);\n      if (cVar7 == '\\0') {\n        piVar10 = __errno_location();\n        local_90 = (void *)0x0;\n        *piVar10 = 0xc;\n        goto LAB_00115553;\n      }\n    }\n    local_68 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n    if (param_2 == 2) {\nLAB_00115770:\n      bVar19 = false;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n    else {\n      if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar1 + 0x88) == 2)) &&\n         (iVar9 = leaf_optimization(lVar1,local_44), iVar9 != 0)) {\n        if (param_2 != 3) goto LAB_00115770;\n        bVar4 = false;\n        bVar19 = true;\n      }\n      else {\n        bVar19 = param_2 == 3;\n        bVar4 = true;\n      }\n      if ((*(byte *)((long)param_1 + 0x49) & 2) != 0) {\n        local_44 = rpl_fcntl(local_44,0x406,3);\n      }\n      if ((-1 < local_44) && (iVar9 = fts_safe_changedir(param_1,lVar1,local_44,0), iVar9 == 0))\n      goto LAB_0011509f;\n      if ((bVar19) && (bVar4)) {\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\n      *(ushort *)(lVar1 + 0x72) = *(ushort *)(lVar1 + 0x72) | 1;\n      closedir(*(DIR **)(lVar1 + 0x18));\n      uVar14 = *(uint *)(param_1 + 9);\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (((uVar14 & 0x200) != 0) && (-1 < local_44)) {\n        close(local_44);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      bVar19 = false;\n    }\n  }\n  else {\n    local_44 = dirfd(__dirp);\n    if (local_44 < 0) {\n      closedir(*(DIR **)(lVar1 + 0x18));\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\nLAB_0011584d:\n      local_90 = (void *)0x0;\n      goto LAB_00115553;\n    }\n    if (param_1[8] == 0) {\n      local_68 = 100000;\n      uVar14 = *(uint *)(param_1 + 9);\n      bVar19 = true;\n    }\n    else {\n      local_68 = 0xffffffffffffffff;\nLAB_0011509f:\n      bVar19 = true;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n  }\n  uVar18 = *(ulong *)(lVar1 + 0x48);\n  local_a0 = uVar18;\n  local_60 = uVar18 - 1;\n  if (*(char *)(*(long *)(lVar1 + 0x38) + -1 + uVar18) != '/') {\n    local_a0 = uVar18 + 1;\n    local_60 = uVar18;\n  }\n  local_70 = (undefined *)0x0;\n  if ((uVar14 & 4) != 0) {\n    local_70 = (undefined *)(local_60 + param_1[4]) + 1;\n    *(undefined *)(local_60 + param_1[4]) = 0x2f;\n  }\n  __dirp_00 = *(DIR **)(lVar1 + 0x18);\n  lVar2 = *(long *)(lVar1 + 0x58);\n  uVar18 = param_1[6] - local_a0;\n  if (__dirp_00 == (DIR *)0x0) {\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      local_90 = (void *)0x0;\n      uVar16 = 0;\n      local_4a = '\\0';\nLAB_00115634:\n      local_70 = local_70 + -1;\n      goto LAB_0011563a;\n    }\n    local_90 = (void *)0x0;\n    if ((bool)(bVar19 & __dirp == (DIR *)0x0)) {\n      local_4a = '\\0';\n      uVar16 = 0;\n      goto LAB_001156c0;\n    }\nLAB_001156e9:\n    if (((param_2 == 3) && (*(short *)(lVar1 + 0x70) != 7)) && (*(short *)(lVar1 + 0x70) != 4)) {\n      *(undefined2 *)(lVar1 + 0x70) = 6;\n    }\n    fts_lfree(local_90);\n    local_90 = (void *)0x0;\n  }\n  else {\n    piVar10 = __errno_location();\n    local_4a = '\\0';\n    local_4b = '\\0';\n    local_98 = (void *)0x0;\n    local_90 = (void *)0x0;\n    uVar17 = 0;\n    do {\n      while( true ) {\n        *piVar10 = 0;\n        pdVar11 = readdir(__dirp_00);\n        uVar16 = uVar17;\n        if (pdVar11 == (dirent *)0x0) {\n          if (*piVar10 != 0) {\n            *(int *)(lVar1 + 0x40) = *piVar10;\n            *(ushort *)(lVar1 + 0x70) = (-(ushort)(((ulong)__dirp | uVar17) == 0) & 0xfffd) + 7;\n          }\n          if (*(DIR **)(lVar1 + 0x18) != (DIR *)0x0) {\n            closedir(*(DIR **)(lVar1 + 0x18));\n            *(undefined8 *)(lVar1 + 0x18) = 0;\n          }\n          goto LAB_00115604;\n        }\n        if ((((*(byte *)(param_1 + 9) & 0x20) != 0) || (pdVar11->d_name[0] != '.')) ||\n           ((pdVar11->d_name[1] != '\\0' && (*(short *)(pdVar11->d_name + 1) != 0x2e)))) break;\nLAB_00115173:\n        __dirp_00 = *(DIR **)(lVar1 + 0x18);\n        uVar17 = uVar16;\n        if (__dirp_00 == (DIR *)0x0) goto LAB_00115604;\n      }\n      sVar12 = strlen(pdVar11->d_name);\n      __ptr = (void *)fts_alloc(param_1,pdVar11->d_name,sVar12);\n      if (__ptr == (void *)0x0) {\nLAB_00115500:\n        iVar9 = *piVar10;\n        free(__ptr);\n        fts_lfree(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = iVar9;\n        goto LAB_00115553;\n      }\n      if (uVar18 <= sVar12) {\n        lVar3 = param_1[4];\n        cVar7 = fts_palloc_isra_0(param_1 + 4,param_1 + 6,local_60 + 2 + sVar12);\n        if (cVar7 == '\\0') goto LAB_00115500;\n        puVar6 = local_70;\n        if ((param_1[4] != lVar3) &&\n           (local_4b = cVar7, puVar6 = (undefined *)(param_1[4] + local_a0),\n           (*(byte *)(param_1 + 9) & 4) == 0)) {\n          puVar6 = local_70;\n        }\n        local_70 = puVar6;\n        uVar18 = param_1[6] - local_a0;\n      }\n      if (CARRY8(sVar12,local_a0)) {\n        free(__ptr);\n        fts_lfree(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = 0x24;\n        goto LAB_00115553;\n      }\n      *(long *)((long)__ptr + 0x58) = lVar2 + 1;\n      lVar3 = *param_1;\n      *(size_t *)((long)__ptr + 0x48) = sVar12 + local_a0;\n      *(long *)((long)__ptr + 8) = lVar3;\n      *(__ino_t *)((long)__ptr + 0x80) = pdVar11->d_ino;\n      uVar14 = *(uint *)(param_1 + 9);\n      if ((uVar14 & 4) == 0) {\n        *(void **)((long)__ptr + 0x30) = (void *)((long)__ptr + 0x108);\n      }\n      else {\n        *(undefined8 *)((long)__ptr + 0x30) = *(undefined8 *)((long)__ptr + 0x38);\n        memmove(local_70,(void *)((long)__ptr + 0x108),*(long *)((long)__ptr + 0x60) + 1);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      if ((param_1[8] == 0) || ((uVar14 & 0x400) != 0)) {\n        uVar16 = 1;\n        if ((uVar14 & 0x18) == 0x18) {\n          uVar16 = (ulong)((pdVar11->d_type & 0xfb) == 0);\n        }\n        *(undefined2 *)((long)__ptr + 0x70) = 0xb;\n        set_stat_type_isra_0((long)__ptr + 0x90);\n        fts_set_stat_required(__ptr,uVar16 & 0xffffffff);\n      }\n      else {\n        uVar8 = fts_stat(param_1,__ptr,0);\n        *(undefined2 *)((long)__ptr + 0x70) = uVar8;\n      }\n      *(undefined8 *)((long)__ptr + 0x10) = 0;\n      pvVar5 = __ptr;\n      if (local_90 != (void *)0x0) {\n        *(void **)((long)local_98 + 0x10) = __ptr;\n        pvVar5 = local_90;\n      }\n      local_90 = pvVar5;\n      uVar16 = uVar17 + 1;\n      local_98 = __ptr;\n      if (uVar17 != 10000) {\n        if (uVar16 < local_68) goto LAB_00115173;\n        break;\n      }\n      if (param_1[8] == 0) {\n        local_4a = dirent_inode_sort_may_be_useful(lVar1,local_44);\n      }\n      uVar16 = 0x2711;\n      __dirp_00 = *(DIR **)(lVar1 + 0x18);\n      uVar17 = uVar16;\n    } while (__dirp_00 != (DIR *)0x0);\nLAB_00115604:\n    if (local_4b != '\\0') {\n      fts_padjust_isra_0(param_1[1],param_1[4],local_90);\n    }\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      if ((param_1[6] == local_a0) || (uVar16 == 0)) goto LAB_00115634;\nLAB_0011563a:\n      *local_70 = 0;\n    }\n    if ((__dirp == (DIR *)0x0) && (bVar19)) {\n      if ((param_2 == 1) || (uVar16 == 0)) {\nLAB_001156c0:\n        if (*(long *)(lVar1 + 0x58) == 0) {\n          iVar9 = restore_initial_cwd(param_1);\n        }\n        else {\n          iVar9 = fts_safe_changedir(param_1,*(undefined8 *)(lVar1 + 8),0xffffffff,&DAT_0011c32a);\n        }\n        if (iVar9 != 0) {\n          *(undefined2 *)(lVar1 + 0x70) = 7;\n          *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n          fts_lfree(local_90);\n          local_90 = (void *)0x0;\n          goto LAB_00115553;\n        }\n        goto LAB_001156e0;\n      }\n    }\n    else {\nLAB_001156e0:\n      if (uVar16 == 0) goto LAB_001156e9;\n    }\n    if (local_4a == '\\0') {\n      if ((param_1[8] != 0) && (uVar16 != 1)) {\n        local_90 = (void *)fts_sort(param_1,local_90,uVar16);\n      }\n    }\n    else {\n      param_1[8] = (long)fts_compare_ino;\n      local_90 = (void *)fts_sort(param_1,local_90,uVar16);\n      param_1[8] = 0;\n    }\n  }\nLAB_00115553:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_90;\n}\n\n", 
    "00116b00": "\nbool c_islower(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010c840": "\nlong __xargmatch_internal\n               (undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = argmatch(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    argmatch_invalid(param_1,param_2,lVar1);\n    argmatch_valid(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "00114b60": "\nint fts_safe_changedir(long param_1,long param_2,int param_3,char *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  byte bVar7;\n  uint uVar8;\n  long in_FS_OFFSET;\n  stat local_d8;\n  long local_40;\n  \n  uVar8 = *(uint *)(param_1 + 0x48);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar4 = param_3;\n  if ((((param_4 == (char *)0x0) || (cVar1 = *param_4, cVar1 != '.')) || (param_4[1] != '.')) ||\n     (param_4[2] != '\\0')) {\n    if ((uVar8 & 4) == 0) {\n      if (param_3 < 0) {\n        bVar2 = 0;\nLAB_00114c77:\n        iVar4 = diropen_isra_0(*(undefined4 *)(param_1 + 0x2c),uVar8,param_4);\n        if (iVar4 < 0) {\n          iVar3 = -1;\n          goto LAB_00114c00;\n        }\n        uVar8 = *(uint *)(param_1 + 0x48);\n      }\n      else {\n        bVar2 = 0;\n      }\n      iVar3 = param_3;\n      if ((uVar8 & 2) == 0) {\n        bVar7 = bVar2;\n        if (param_4 != (char *)0x0) {\n          cVar1 = *param_4;\nLAB_00114bd1:\n          bVar2 = bVar7;\n          bVar7 = bVar2;\n          if (((cVar1 == '.') && (param_4[1] == '.')) && (iVar3 = param_3, param_4[2] == '\\0'))\n          goto LAB_00114cb0;\n        }\nLAB_00114bda:\n        if ((uVar8 & 0x200) != 0) {\n          iVar3 = 0;\n          cwd_advance_fd(param_1,iVar4,bVar7 ^ 1);\n          goto LAB_00114c00;\n        }\n        iVar3 = fchdir(iVar4);\n      }\n      else {\nLAB_00114cb0:\n        iVar5 = fstat(iVar4,&local_d8);\n        param_3 = iVar3;\n        if (iVar5 == 0) {\n          if ((*(__dev_t *)(param_2 + 0x78) == local_d8.st_dev) &&\n             (*(__ino_t *)(param_2 + 0x80) == local_d8.st_ino)) {\n            uVar8 = *(uint *)(param_1 + 0x48);\n            bVar7 = bVar2;\n            goto LAB_00114bda;\n          }\n          piVar6 = __errno_location();\n          *piVar6 = 2;\n        }\n        iVar3 = -1;\n      }\n      if (param_3 < 0) {\n        piVar6 = __errno_location();\n        iVar5 = *piVar6;\n        close(iVar4);\n        *piVar6 = iVar5;\n      }\n      goto LAB_00114c00;\n    }\n  }\n  else if ((uVar8 & 4) == 0) {\n    if (param_3 < 0) {\n      if ((uVar8 & 0x200) == 0) {\nLAB_00114d88:\n        bVar2 = 1;\n        goto LAB_00114c77;\n      }\n      bVar2 = i_ring_empty(param_1 + 0x60);\n      if (bVar2 != 0) goto LAB_00114c77;\n      iVar3 = i_ring_pop(param_1 + 0x60);\n      uVar8 = *(uint *)(param_1 + 0x48);\n      if (iVar3 < 0) goto LAB_00114d88;\n      bVar2 = 1;\n      param_3 = iVar3;\n      iVar4 = iVar3;\n      bVar7 = 1;\n      if ((uVar8 & 2) != 0) goto LAB_00114cb0;\n      goto LAB_00114bda;\n    }\n    bVar2 = 1;\n    iVar3 = param_3;\n    bVar7 = 1;\n    if ((uVar8 & 2) == 0) goto LAB_00114bd1;\n    goto LAB_00114cb0;\n  }\n  if (((uVar8 & 0x200) == 0) || (param_3 < 0)) {\n    iVar3 = 0;\n  }\n  else {\n    iVar3 = 0;\n    close(param_3);\n  }\nLAB_00114c00:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "00124088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fcntl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00104030": "\nvoid getfscreatecon(void)\n\n{\n  (*(code *)PTR_getfscreatecon_00122f88)();\n  return;\n}\n\n", 
    "00116f80": "\nchar * locale_charset(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00111cb0": "\nulong direntry_cmp_inode(long param_1,long param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar1 = *(ulong *)(param_2 + 8);\n  uVar2 = 0xffffffff;\n  bVar3 = uVar1 <= *(ulong *)(param_1 + 8);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(param_1 + 8) != uVar1);\n  }\n  return uVar2;\n}\n\n", 
    "00124080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* readlink@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107d00": "\nvoid dest_info_init(long param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = hash_initialize(0x3d,0,triple_hash,triple_compare,triple_free);\n  *(undefined8 *)(param_1 + 0x40) = uVar1;\n  return;\n}\n\n", 
    "001049f0": "\nvoid emit_backup_suffix_note(void)\n\n{\n  char *pcVar1;\n  FILE *pFVar2;\n  \n  pFVar2 = stdout;\n  pcVar1 = (char *)dcgettext(0,\n                             \"\\nThe backup suffix is \\'~\\', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar1,pFVar2);\n  pFVar2 = stdout;\n  pcVar1 = (char *)dcgettext(0,\n                             \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\"\n                             ,5);\n  fputs_unlocked(pcVar1,pFVar2);\n  return;\n}\n\n", 
    "00114040": "\nvoid clear_ungetc_buffer_preserving_position(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  rpl_fseeko(param_1,0,1);\n  return;\n}\n\n", 
    "00117310": "\nvoid readsource(FILE **param_1,void *param_2,size_t param_3)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  int iVar5;\n  \n  piVar3 = __errno_location();\n  while( true ) {\n    sVar4 = fread_unlocked(param_2,1,param_3,*param_1);\n    iVar5 = *piVar3;\n    param_2 = (void *)((long)param_2 + sVar4);\n    param_3 = param_3 - sVar4;\n    if (param_3 == 0) break;\n    iVar2 = ferror_unlocked(*param_1);\n    pFVar1 = param_1[2];\n    if (iVar2 == 0) {\n      iVar5 = 0;\n    }\n    *piVar3 = iVar5;\n    (*(code *)param_1[1])(pFVar1);\n  }\n  return;\n}\n\n", 
    "00103b80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t geteuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_geteuid_00122d30)();\n  return _Var1;\n}\n\n", 
    "00103a60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00122ca0)();\n  return sVar1;\n}\n\n", 
    "0010dac0": "\nundefined * mdir_name(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = dir_len();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n", 
    "001169a0": "\nulong rotl64(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00103fa0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00122f40)();\n  return;\n}\n\n", 
    "00104020": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00122f80)();\n  return;\n}\n\n", 
    "00106200": "\nundefined8 valid_options(uint *param_1)\n\n{\n  if (param_1 == (uint *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"co != NULL\",\"src/copy.c\",0xb85,\"valid_options\");\n  }\n  if (3 < *param_1) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"VALID_BACKUP_TYPE (co->backup_type)\",\"src/copy.c\",0xb86,\"valid_options\");\n  }\n  if (2 < param_1[3] - 1) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"VALID_SPARSE_MODE (co->sparse_mode)\",\"src/copy.c\",0xb87,\"valid_options\");\n  }\n  if (param_1[0xe] < 3) {\n    if ((*(char *)((long)param_1 + 0x17) != '\\0') && (*(char *)(param_1 + 0xb) != '\\0')) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"!(co->hard_link && co->symbolic_link)\",\"src/copy.c\",0xb89,\"valid_options\");\n    }\n    if ((param_1[0xe] == 2) && (param_1[3] != 2)) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\",\n                    \"src/copy.c\",0xb8a,\"valid_options\");\n    }\n    return 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"VALID_REFLINK_MODE (co->reflink_mode)\",\"src/copy.c\",0xb88,\"valid_options\");\n}\n\n", 
    "00124098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* write@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116b10": "\nbool c_isprint(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010e1c0": "\nbool raw_comparator(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "001048c0": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00122fd8)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00124090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* clock_gettime@@GLIBC_2.17 */\n  halt_baddata();\n}\n\n", 
    "001038f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00122be8)();\n  return;\n}\n\n", 
    "00111cd0": "\nvoid direntry_cmp_name(char **param_1,char **param_2)\n\n{\n  strcmp(*param_1,*param_2);\n  return;\n}\n\n", 
    "00103a50": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00122c98)();\n  return;\n}\n\n", 
    "00117200": "\nvoid randint_free(undefined8 param_1)\n\n{\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  (*(code *)PTR_free_00122fc8)(param_1);\n  return;\n}\n\n", 
    "00103c90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00122db8)();\n  return pvVar1;\n}\n\n", 
    "00103b70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00122d28)();\n  return pvVar1;\n}\n\n", 
    "001169b0": "\nulong rotr64(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "0010d910": "\nvoid close_stdout(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = close_stream(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((ignore_EPIPE == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (file_name != 0) {\n        uVar4 = quotearg_colon();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,&DAT_0011b616,uVar3);\n    }\n  }\n  iVar1 = close_stream(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(exit_failure);\n}\n\n", 
    "00103000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00122fe0;\n  if (PTR___gmon_start___00122fe0 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00122fe0)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00117f30": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001115f0": "\nvoid quotearg_colon(undefined8 param_1)\n\n{\n  quotearg_char(param_1,0x3a);\n  return;\n}\n\n", 
    "00113b70": "\nvoid * xrealloc(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return pvVar1;\n}\n\n", 
    "00124068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlinkat(int __fd,char *__name,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* unlinkat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00124188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t geteuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* geteuid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d0a0": "\nulong buffer_lcm(ulong param_1,ulong param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  if (param_1 == 0) {\n    param_1 = 0x2000;\n    if (param_2 != 0) {\n      param_1 = param_2;\n    }\n  }\n  else {\n    uVar3 = param_1;\n    uVar1 = param_2;\n    if (param_2 != 0) {\n      do {\n        uVar2 = uVar1;\n        uVar1 = uVar3 % uVar2;\n        uVar3 = uVar2;\n      } while (uVar1 != 0);\n      uVar3 = param_2 * (param_1 / uVar2);\n      if ((uVar3 < param_3 || uVar3 - param_3 == 0) && (uVar3 / param_2 == param_1 / uVar2)) {\n        return uVar3;\n      }\n    }\n  }\n  if (param_1 <= param_3) {\n    param_3 = param_1;\n  }\n  return param_3;\n}\n\n", 
    "001038a0": "\nvoid is_selinux_enabled(void)\n\n{\n  (*(code *)PTR_is_selinux_enabled_00122bc0)();\n  return;\n}\n\n", 
    "0010f4c0": "\nundefined4\nqcopy_acl(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined4 param_4,\n         undefined4 param_5)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  long in_FS_OFFSET;\n  undefined local_24 [4];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = get_permissions(param_1,param_2,param_5,local_24);\n  if (iVar1 == 0) {\n    uVar2 = set_permissions(local_24,param_3,param_4);\n    free_permission_context(local_24);\n  }\n  else {\n    uVar2 = 0xfffffffe;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00124060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mkdir@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001039c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_unlocked_00122c50)();\n  return sVar1;\n}\n\n", 
    "0010f3a0": "\nulong triple_compare_ino_str(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n", 
    "00124180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103b20": "\nvoid fgetfilecon(void)\n\n{\n  (*(code *)PTR_fgetfilecon_00122d00)();\n  return;\n}\n\n", 
    "00103a00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00122c70)();\n  return iVar1;\n}\n\n", 
    "00103d60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00122e20)();\n  return iVar1;\n}\n\n", 
    "00103c40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00122d90)();\n  return iVar1;\n}\n\n", 
    "00103e80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchmod(int __fd,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchmod_00122eb0)();\n  return iVar1;\n}\n\n", 
    "00124058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_type_get(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010cbf0": "\nvoid check_extension_constprop_0(char *param_1,long param_2)\n\n{\n  undefined2 uVar1;\n  undefined2 *puVar2;\n  ulong uVar3;\n  int *piVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  puVar2 = (undefined2 *)last_component();\n  uVar3 = base_len(puVar2);\n  if (0xe < uVar3) {\n    uVar1 = *puVar2;\n    *puVar2 = 0x2e;\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    uVar5 = pathconf(param_1,3);\n    if ((-1 < (long)uVar5) || (uVar6 = 0xff, *piVar4 == 0)) {\n      uVar6 = uVar5;\n    }\n    *puVar2 = uVar1;\n    if (uVar6 < uVar3) {\n      param_1 = param_1 + param_2;\n      if ((ulong)((long)param_1 - (long)puVar2) < uVar6) {\n        uVar6 = ((long)param_1 - (long)puVar2) + 1;\n      }\n      else {\n        param_1 = (char *)((long)puVar2 + (uVar6 - 1));\n      }\n      *param_1 = '~';\n      *(undefined *)((long)puVar2 + uVar6) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n", 
    "00112080": "\nulong check_x_suffix(char *param_1,ulong param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strspn(param_1,\"X\");\n  return sVar1 & 0xffffffffffffff00 | (ulong)(param_2 <= sVar1);\n}\n\n", 
    "0010b970": "\nint force_linkat(int param_1,char *param_2,int param_3,char *param_4,int param_5,char param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  char *__old;\n  long in_FS_OFFSET;\n  int local_168 [2];\n  char *local_160;\n  int local_158;\n  int local_154;\n  char local_148 [264];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = linkat(param_1,param_2,param_3,param_4,param_5);\n  if ((param_6 == '\\x01') && (iVar1 != 0)) {\n    piVar3 = __errno_location();\n    if (*piVar3 == 0x11) {\n      __old = (char *)samedir_template(param_4,local_148);\n      if (__old == (char *)0x0) {\n        iVar1 = -1;\n      }\n      else {\n        local_168[0] = param_1;\n        local_160 = param_2;\n        local_158 = param_3;\n        local_154 = param_5;\n        iVar1 = try_tempname_len(__old,0,local_168,try_link,6);\n        if (iVar1 == 0) {\n          iVar2 = renameat(param_3,__old,param_3,param_4);\n          if (iVar2 != 0) {\n            iVar2 = *piVar3;\n          }\n          unlinkat(param_3,__old,0);\n        }\n        else {\n          iVar2 = *piVar3;\n        }\n        if (__old != local_148) {\n          free(__old);\n        }\n        iVar1 = 1;\n        if (iVar2 != 0) {\n          *piVar3 = iVar2;\n          iVar1 = -1;\n        }\n      }\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010dbc0": "\nbool strip_trailing_slashes(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  char *pcVar3;\n  \n  pcVar3 = (char *)last_component();\n  if (*pcVar3 == '\\0') {\n    pcVar3 = param_1;\n  }\n  lVar2 = base_len(pcVar3);\n  cVar1 = pcVar3[lVar2];\n  pcVar3[lVar2] = '\\0';\n  return cVar1 != '\\0';\n}\n\n", 
    "00116c10": "\nint c_strcasecmp(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = c_tolower(*param_1);\n      bVar2 = c_tolower(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00124198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getcwd@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00114a30": "\nundefined8 fts_palloc_isra_0(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n", 
    "00124078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* qsort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f5f0": "\nbool strcaseeq9(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = c_strcasecmp(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00124190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ioctl@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001039b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getpid_00122c48)();\n  return _Var1;\n}\n\n", 
    "0010e1a0": "\nulong raw_hasher(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = rotr_sz(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "001149db": "\nvoid FUN_001149db(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00124070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid lsetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106f00": "\nvoid fchmod_or_lchmod(int param_1,char *param_2,__mode_t param_3)\n\n{\n  if (param_1 < 0) {\n    chmod(param_2,param_3);\n    return;\n  }\n  fchmod(param_1,param_3);\n  return;\n}\n\n", 
    "00103c30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_00122d88)();\n  return sVar1;\n}\n\n", 
    "00103b10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00122cf8)();\n  return pcVar1;\n}\n\n", 
    "00114150": "\nulong AD_compare(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00103e70": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00122ea8)();\n  return;\n}\n\n", 
    "00103d50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xmknod(int __ver,char *__path,__mode_t __mode,__dev_t *__dev)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xmknod_00122e18)();\n  return iVar1;\n}\n\n", 
    "00103f90": "\nvoid security_compute_create(void)\n\n{\n  (*(code *)PTR_security_compute_create_00122f38)();\n  return;\n}\n\n", 
    "00114270": "\nint fts_stat(long param_1,long param_2,char param_3)\n\n{\n  stat *__buf;\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  ulong uVar4;\n  undefined8 *puVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  __buf = (stat *)(param_2 + 0x78);\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar1 = stat(*(char **)(param_2 + 0x30),__buf);\n    if (iVar1 == 0) {\nLAB_001142fc:\n      uVar2 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar2 == 0x4000) {\n        uVar4 = *(ulong *)(param_2 + 0x88);\n        if ((uVar4 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar4 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar4 = uVar4 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar4;\n        iVar1 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar1 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar2 == 0xa000) {\n        iVar1 = 0xc;\n      }\n      else {\n        iVar1 = (uint)(uVar2 == 0x8000) * 5 + 3;\n      }\n      return iVar1;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    if (iVar1 == 2) {\n      iVar1 = lstat(*(char **)(param_2 + 0x30),__buf);\n      if (iVar1 == 0) {\n        *piVar3 = 0;\n        return 0xd;\n      }\n      iVar1 = *piVar3;\n    }\n  }\n  else {\n    iVar1 = fstatat(*(int *)(param_1 + 0x2c),*(char **)(param_2 + 0x30),__buf,0x100);\n    if (iVar1 == 0) goto LAB_001142fc;\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n  }\n  *(int *)(param_2 + 0x40) = iVar1;\n  puVar5 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar4 = (ulong)(((int)__buf - (int)puVar5) + 0x90U >> 3);\n  for (; uVar4 != 0; uVar4 = uVar4 - 1) {\n    *puVar5 = 0;\n    puVar5 = puVar5 + (ulong)bVar6 * -2 + 1;\n  }\n  return 10;\n}\n\n", 
    "0010ecc0": "\nundefined4 hash_rehash(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)compute_bucket_size_isra_0\n                              (*(undefined4 *)((long)pvVar1 + 8),param_2,\n                               *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_0010edcc;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = transfer_entries(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = transfer_entries(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = transfer_entries(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_0010edcc;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_0010edcc;\n    }\n  }\n  uVar3 = 0;\nLAB_0010edcc:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c920": "\nbyte numbered_backup(void **param_1,ulong param_2,long param_3,long param_4,DIR **param_5)\n\n{\n  char *pcVar1;\n  undefined4 *puVar2;\n  char cVar3;\n  undefined2 uVar4;\n  byte bVar5;\n  ulong uVar6;\n  int iVar7;\n  long lVar8;\n  dirent *pdVar9;\n  size_t sVar10;\n  void *pvVar11;\n  undefined2 *puVar12;\n  void *pvVar13;\n  DIR *__dirp;\n  int *piVar14;\n  char *pcVar15;\n  ulong __n;\n  bool bVar16;\n  ulong local_60;\n  ulong local_50;\n  \n  pvVar13 = *param_1;\n  __dirp = *param_5;\n  puVar12 = (undefined2 *)((long)pvVar13 + param_4);\n  lVar8 = base_len(puVar12);\n  if (__dirp == (DIR *)0x0) {\n    uVar4 = *puVar12;\n    *puVar12 = 0x2e;\n    __dirp = (DIR *)opendir_safer(pvVar13);\n    puVar2 = (undefined4 *)((long)puVar12 + lVar8);\n    if (__dirp == (DIR *)0x0) {\n      piVar14 = __errno_location();\n      iVar7 = *piVar14;\n      *puVar12 = uVar4;\n      *puVar2 = 0x7e317e2e;\n      *(undefined *)(puVar2 + 1) = 0;\n      return (iVar7 == 0xc) + 2;\n    }\n    *puVar12 = uVar4;\n    *puVar2 = 0x7e317e2e;\n    *(undefined *)(puVar2 + 1) = 0;\n    *param_5 = __dirp;\n  }\n  else {\n    rewinddir(__dirp);\n  }\n  local_60 = 1;\n  bVar5 = 2;\n  local_50 = param_2;\n  do {\n    pdVar9 = readdir(__dirp);\n    uVar6 = local_50;\n    while( true ) {\n      if (pdVar9 == (dirent *)0x0) {\n        *param_1 = pvVar13;\n        return bVar5;\n      }\n      pcVar15 = pdVar9->d_name;\n      sVar10 = strlen(pcVar15);\n      local_50 = uVar6;\n      if (sVar10 < lVar8 + 4U) break;\n      iVar7 = memcmp((void *)((long)pvVar13 + param_4),pcVar15,lVar8 + 2U);\n      if (iVar7 != 0) break;\n      pcVar15 = pcVar15 + lVar8 + 2U;\n      if (8 < (byte)(*pcVar15 - 0x31U)) break;\n      bVar16 = *pcVar15 == '9';\n      __n = 1;\n      cVar3 = pcVar15[1];\n      while ((int)cVar3 - 0x30U < 10) {\n        __n = __n + 1;\n        bVar16 = (bool)(cVar3 == '9' & bVar16);\n        cVar3 = pcVar15[__n];\n      }\n      if (((cVar3 != '~') || (pcVar15[__n + 1] != '\\0')) ||\n         ((__n <= local_60 &&\n          ((__n != local_60 ||\n           (iVar7 = memcmp((void *)((long)pvVar13 + param_3 + 2),pcVar15,__n), 0 < iVar7))))))\n      break;\n      local_60 = bVar16 + __n;\n      local_50 = local_60 + 4 + param_3;\n      pvVar11 = pvVar13;\n      if (uVar6 < local_50) {\n        if ((-1 < (long)(local_50 * 2)) && (-1 < (long)local_50)) {\n          local_50 = local_50 * 2;\n        }\n        pvVar11 = realloc(pvVar13,local_50);\n        uVar6 = local_50;\n        if (pvVar11 == (void *)0x0) {\n          *param_1 = pvVar13;\n          return 3;\n        }\n      }\n      local_50 = uVar6;\n      puVar12 = (undefined2 *)(param_3 + (long)pvVar11);\n      *puVar12 = 0x7e2e;\n      *(undefined *)(puVar12 + 1) = 0x30;\n      pvVar13 = memcpy((void *)((long)puVar12 + (ulong)bVar16 + 2),pcVar15,__n + 2);\n      pcVar15 = (char *)((long)pvVar13 + (__n - 1));\n      cVar3 = *(char *)((long)pvVar13 + (__n - 1));\n      while (cVar3 == '9') {\n        *pcVar15 = '0';\n        pcVar1 = pcVar15 + -1;\n        pcVar15 = pcVar15 + -1;\n        cVar3 = *pcVar1;\n      }\n      *pcVar15 = cVar3 + '\\x01';\n      pdVar9 = readdir(__dirp);\n      pvVar13 = pvVar11;\n      uVar6 = local_50;\n      bVar5 = bVar16;\n    }\n  } while( true );\n}\n\n", 
    "00124040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* _exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ftruncate@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010b950": "\nvoid try_symlink(char *param_1,char **param_2)\n\n{\n  symlinkat(*param_2,*(int *)(param_2 + 1),param_1);\n  return;\n}\n\n", 
    "00113c70": "\nvoid x2realloc(undefined8 param_1,undefined8 param_2)\n\n{\n  x2nrealloc(param_1,param_2,1);\n  return;\n}\n\n", 
    "00104110": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte main(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  byte bVar3;\n  int iVar4;\n  long lVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  int *piVar8;\n  char *pcVar9;\n  undefined uVar10;\n  undefined uVar11;\n  long in_FS_OFFSET;\n  char *local_150;\n  char *local_140;\n  char *local_138;\n  char *local_130;\n  undefined4 local_128;\n  int local_124;\n  int local_120;\n  int local_11c;\n  undefined local_114;\n  undefined local_113;\n  undefined local_112;\n  char local_111;\n  undefined local_10c;\n  undefined local_10b;\n  undefined2 local_10a;\n  char local_107;\n  undefined local_106;\n  undefined local_105;\n  undefined local_104;\n  char local_103;\n  char local_102;\n  undefined local_101;\n  char local_100;\n  undefined2 local_ff;\n  char local_fc;\n  undefined local_fb;\n  undefined local_fa;\n  int local_f0;\n  stat local_d8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  set_program_name(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  atexit(close_stdin);\n  iVar4 = is_selinux_enabled();\n  selinux_enabled = 0 < iVar4;\n  uVar10 = 0;\n  uVar11 = 0;\n  cp_option_init(&local_128);\n  bVar1 = false;\n  local_130 = (char *)0x0;\n  local_150 = (char *)0x0;\n  local_140 = (char *)0x0;\n  local_138 = (char *)0x0;\n  pcVar9 = local_140;\n  pcVar2 = local_130;\n  while (local_130 = pcVar2, local_140 = pcVar9,\n        iVar4 = getopt_long(param_1,param_2,\"abdfHilLnprst:uvxPRS:TZ\",long_opts,0), iVar4 != -1) {\n    if (0x88 < iVar4) {\nswitchD_0010421f_caseD_49:\n      usage(1);\n      goto LAB_001046f0;\n    }\n    pcVar9 = local_140;\n    pcVar2 = local_130;\n    if (iVar4 < 0x48) {\n      if (iVar4 == -0x83) {\n        version_etc(stdout,&DAT_0011a750,\"GNU coreutils\",Version,\"Torbjorn Granlund\",\n                    \"David MacKenzie\",\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar4 != -0x82) goto switchD_0010421f_caseD_49;\n      usage(0);\nLAB_00104552:\n      decode_preserve_arg();\n      local_104 = 1;\n    }\n    else {\n      switch(iVar4) {\n      case 0x48:\n        local_124 = 3;\n        break;\n      default:\n        goto switchD_0010421f_caseD_49;\n      case 0x4c:\n        local_124 = 4;\n        break;\n      case 0x50:\n        local_124 = 2;\n        break;\n      case 0x52:\n      case 0x72:\n        local_ff = CONCAT11(1,(undefined)local_ff);\n        break;\n      case 0x53:\n        local_138 = optarg;\n        bVar1 = true;\n        break;\n      case 0x54:\n        uVar10 = 1;\n        break;\n      case 0x5a:\n        if (selinux_enabled == '\\0') {\n          if (optarg != (char *)0x0) {\n            uVar6 = dcgettext(0,\"warning: ignoring --context; it requires an SELinux-enabled kernel\"\n                              ,5);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,uVar6);\n          }\n        }\n        else {\n          pcVar2 = optarg;\n          if (optarg == (char *)0x0) {\n            local_107 = '\\x01';\n            pcVar2 = local_130;\n          }\n        }\n        break;\n      case 0x61:\n        local_124 = 2;\n        local_106 = 1;\n        local_10b = 1;\n        local_10a = 0x101;\n        local_104 = 1;\n        if (selinux_enabled != '\\0') {\n          local_103 = '\\x01';\n        }\n        local_101 = 1;\n        local_ff = 0x101;\n        break;\n      case 0x62:\n        bVar1 = true;\n        pcVar9 = optarg;\n        if (optarg == (char *)0x0) {\n          pcVar9 = local_140;\n        }\n        break;\n      case 100:\n        local_106 = 1;\n        local_124 = 2;\n        break;\n      case 0x66:\n        local_112 = 1;\n        break;\n      case 0x69:\n        local_120 = 3;\n        break;\n      case 0x6c:\n        local_111 = '\\x01';\n        break;\n      case 0x6e:\n        local_120 = 2;\n        break;\n      case 0x73:\n        local_fc = '\\x01';\n        break;\n      case 0x74:\n        if (local_150 != (char *)0x0) {\n          uVar6 = dcgettext(0,\"multiple target directories specified\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar6);\n        }\n        iVar4 = stat(optarg,&local_d8);\n        if (iVar4 != 0) {\n          uVar6 = quotearg_style(4,optarg);\n          uVar7 = dcgettext(0,\"failed to access %s\",5);\n          piVar8 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar8,uVar7,uVar6);\n        }\n        local_150 = optarg;\n        if ((local_d8.st_mode & 0xf000) != 0x4000) {\n          uVar6 = quotearg_style(4,optarg);\n          uVar7 = dcgettext(0,\"target %s is not a directory\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar7,uVar6);\n        }\n        break;\n      case 0x75:\n        local_fb = 1;\n        break;\n      case 0x76:\n        local_fa = 1;\n        break;\n      case 0x78:\n        local_10c = 1;\n        break;\n      case 0x80:\n        local_105 = 0;\n        break;\n      case 0x81:\n        uVar11 = 1;\n        break;\n      case 0x82:\n        decode_preserve_arg(optarg,&local_128,0);\n        break;\n      case 0x83:\n        parents_option = 1;\n        break;\n      case 0x84:\n        if (optarg != (char *)0x0) goto LAB_00104552;\n      case 0x70:\n        local_10b = 1;\n        local_10a = 0x101;\n        local_104 = 1;\n        break;\n      case 0x85:\n        if (optarg == (char *)0x0) {\n          local_f0 = 2;\n        }\n        else {\n          lVar5 = __xargmatch_internal\n                            (\"--reflink\",optarg,reflink_type_string,reflink_type,4,argmatch_die);\n          local_f0 = *(int *)(reflink_type + lVar5 * 4);\n        }\n        break;\n      case 0x86:\n        lVar5 = __xargmatch_internal\n                          (\"--sparse\",optarg,sparse_type_string,sparse_type,4,argmatch_die);\n        local_11c = *(int *)(sparse_type + lVar5 * 4);\n        break;\n      case 0x87:\n        remove_trailing_slashes = 1;\n        break;\n      case 0x88:\n        local_113 = 1;\n      }\n    }\n  }\n  if (local_111 != '\\0') {\nLAB_001046f0:\n    if (local_fc != '\\0') {\n      pcVar9 = \"cannot make both hard and symbolic links\";\n      goto LAB_001046d1;\n    }\n  }\n  if (local_120 == 2) {\n    local_fb = 0;\n    if (bVar1) {\n      pcVar9 = \"options --backup and --no-clobber are mutually exclusive\";\n      goto LAB_001046d1;\n    }\nLAB_00104719:\n    local_128 = 0;\n    if ((local_f0 == 2) && (local_11c != 2)) {\nLAB_001046c5:\n      pcVar9 = \"--reflink can be used only with --sparse=auto\";\nLAB_001046d1:\n      uVar6 = dcgettext(0,pcVar9,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar6);\n    }\n  }\n  else {\n    if (!bVar1) goto LAB_00104719;\n    if ((local_f0 == 2) && (local_11c != 2)) goto LAB_001046c5;\n    uVar6 = dcgettext(0,\"backup type\",5);\n    local_128 = xget_version(uVar6,local_140);\n  }\n  set_simple_backup_suffix(local_138);\n  if (local_124 == 1) {\n    if ((local_ff._1_1_ == '\\0') || (local_111 != '\\0')) {\n      local_124 = 4;\n      goto LAB_0010460a;\n    }\n    local_124 = 2;\nLAB_00104782:\n    local_114 = uVar11;\n  }\n  else {\nLAB_0010460a:\n    if (local_ff._1_1_ != '\\0') goto LAB_00104782;\n  }\n  if ((local_107 == '\\0') && (local_130 == (char *)0x0)) {\n    if ((local_102 != '\\0') && (selinux_enabled == '\\0')) {\nLAB_00104748:\n      uVar6 = dcgettext(0,\"cannot preserve security context without an SELinux-enabled kernel\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar6);\n    }\n  }\n  else {\n    if (local_102 == '\\0') {\n      local_103 = '\\0';\n    }\n    else {\n      if (local_103 != '\\0') {\n        uVar6 = dcgettext(0,\"cannot set target context and preserve it\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar6);\n      }\n      if (selinux_enabled == '\\0') goto LAB_00104748;\n    }\n    if (local_130 != (char *)0x0) {\n      uVar6 = se_const();\n      iVar4 = setfscreatecon(uVar6);\n      if (iVar4 < 0) {\n        uVar6 = quote(local_130);\n        uVar7 = dcgettext(0,\"failed to set default file creation context to %s\",5);\n        piVar8 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar8,uVar7,uVar6);\n      }\n    }\n  }\n  if (local_100 != '\\0') {\n    uVar6 = dcgettext(0,\"cannot preserve extended attributes, cp is built without xattr support\",5);\n                    /* WARNING: Subroutine does not return */\n    error(1,0,uVar6);\n  }\n  hash_init();\n  bVar3 = do_copy(param_1 - optind,param_2 + optind,local_150,uVar10,&local_128);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar3 ^ 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00124288": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fileno@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00122ba8)();\n  return;\n}\n\n", 
    "0010fa80": "\nundefined8\nstrcaseeq1(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq2(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001038c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00122bd0)();\n  return piVar1;\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong pathconf(char *__path,int __name)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_pathconf_00122c60)();\n  return lVar1;\n}\n\n", 
    "00124280": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xmknod(int __ver,char *__path,__mode_t __mode,__dev_t *__dev)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xmknod@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001049b0": "\nundefined8 se_const(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00114240": "\nvoid fts_set_stat_required(long param_1,char param_2)\n\n{\n  if (*(short *)(param_1 + 0x70) == 0xb) {\n    *(ulong *)(param_1 + 0xa8) = (ulong)(param_2 != '\\0') + 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00112060": "\nvoid statat(int param_1,char *param_2,stat *param_3)\n\n{\n  fstatat(param_1,param_2,param_3,0);\n  return;\n}\n\n", 
    "00103b40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00122d10)();\n  return _Var1;\n}\n\n", 
    "00103a20": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00122c80)();\n  return;\n}\n\n", 
    "00103d80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00122e30)();\n  return iVar1;\n}\n\n", 
    "00103c60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00122da0)();\n  return iVar1;\n}\n\n", 
    "00124158": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid fgetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00124278": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bae0": "\nint force_symlinkat(char *param_1,int param_2,char *param_3,char param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *__old;\n  long in_FS_OFFSET;\n  char *local_158;\n  int local_150;\n  char local_148 [264];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = symlinkat(param_1,param_2,param_3);\n  if ((param_4 != '\\x01') || (iVar1 == 0)) goto LAB_0010bb32;\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x11) goto LAB_0010bb32;\n  __old = (char *)samedir_template(param_3,local_148);\n  if (__old == (char *)0x0) {\n    iVar1 = -1;\n    goto LAB_0010bb32;\n  }\n  local_158 = param_1;\n  local_150 = param_2;\n  iVar1 = try_tempname_len(__old,0,&local_158,try_symlink,6);\n  if (iVar1 == 0) {\n    iVar1 = renameat(param_2,__old,param_2,param_3);\n    if (iVar1 != 0) {\n      iVar1 = *piVar2;\n      unlinkat(param_2,__old,0);\n      goto LAB_0010bba5;\n    }\n    if (__old != local_148) {\n      free(__old);\n    }\n  }\n  else {\n    iVar1 = *piVar2;\nLAB_0010bba5:\n    if (__old != local_148) {\n      free(__old);\n    }\n    if (iVar1 != 0) {\n      *piVar2 = iVar1;\n      iVar1 = -1;\n      goto LAB_0010bb32;\n    }\n  }\n  iVar1 = 1;\nLAB_0010bb32:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001115d0": "\nvoid quotearg_char(undefined8 param_1,char param_2)\n\n{\n  quotearg_char_mem(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00124038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010dcc0": "\nvoid record_file(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)xmalloc(0x18);\n  uVar2 = xstrdup(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)hash_insert(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      triple_free(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00116d10": "\nundefined8 cycle_check(long *param_1,long *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  long *extraout_RDX;\n  long *extraout_RDX_00;\n  long *plVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  if (param_1[2] == 0) {\n    param_1[2] = 1;\n    cVar1 = is_zero_or_power_of_two(1);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    lVar4 = param_2[1];\n    plVar3 = extraout_RDX_00;\n  }\n  else {\n    lVar4 = param_2[1];\n    if ((lVar4 == *param_1) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    lVar2 = param_1[2] + 1;\n    param_1[2] = lVar2;\n    cVar1 = is_zero_or_power_of_two(lVar2);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    plVar3 = extraout_RDX;\n    if (lVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar2 = *param_2;\n  *plVar3 = lVar4;\n  plVar3[1] = lVar2;\n  return 0;\n}\n\n", 
    "00104100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid randread_error_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00116e30": "\nbool hard_locale(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00124050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fpending@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00117e00": "\nint rpl_fclose(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00117e6f;\n    }\n    iVar1 = rpl_fflush(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00117e6f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00113c80": "\nvoid xzalloc(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)xmalloc();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00113b60": "\nvoid xcharalloc(void)\n\n{\n  xmalloc();\n  return;\n}\n\n", 
    "00113a40": "\nvoid emit_bug_reporting_address(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00124178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __assert_fail@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d900": "\nvoid close_stdout_set_ignore_EPIPE(undefined param_1)\n\n{\n  ignore_EPIPE = param_1;\n  return;\n}\n\n", 
    "00124298": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __xstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010d1b0": "\nchar * canonicalize_filename_mode(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *__s_00;\n  size_t sVar7;\n  int *piVar8;\n  uint uVar9;\n  char *__dest;\n  long lVar10;\n  char *pcVar11;\n  char *pcVar12;\n  char cVar13;\n  char *pcVar14;\n  long in_FS_OFFSET;\n  void *local_108;\n  char *local_100;\n  ulong local_f0;\n  long local_e0;\n  stat local_d8;\n  long local_40;\n  \n  uVar9 = param_2 & 3;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_e0 = 0;\n  if (((uVar9 & uVar9 - 1) != 0) || (param_1 == (char *)0x0)) {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 0x16;\n    goto LAB_0010d3f0;\n  }\n  if (*param_1 == '\\0') {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 2;\n    goto LAB_0010d3f0;\n  }\n  if (*param_1 == '/') {\n    __s = (char *)xmalloc(0x1000);\n    *__s = '/';\n    pcVar12 = __s + 0x1000;\n    __dest = __s + 1;\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') {\nLAB_0010d251:\n      local_f0 = 0;\n      local_108 = (void *)0x0;\n      local_100 = param_1;\n      do {\n        pcVar11 = param_1;\n        cVar13 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            cVar13 = param_1[1];\n            param_1 = param_1 + 1;\n          } while (cVar13 == '/');\n          pcVar11 = param_1;\n          if (cVar13 == '\\0') break;\n        }\n        do {\n          pcVar14 = param_1;\n          cVar4 = pcVar14[1];\n          param_1 = pcVar14 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar11) break;\n        sVar6 = (long)param_1 - (long)pcVar11;\n        if (sVar6 == 1) {\n          if (cVar13 != '.') goto LAB_0010d2ed;\n        }\n        else {\n          if (((sVar6 != 2) || (cVar13 != '.')) || (pcVar11[1] != '.')) {\nLAB_0010d2ed:\n            if (__dest[-1] != '/') {\n              *__dest = '/';\n              __dest = __dest + 1;\n            }\n            if (pcVar12 <= __dest + sVar6) {\n              lVar10 = (long)__dest - (long)__s;\n              lVar3 = 0x1000 - (long)__s;\n              if (0xfff < (long)sVar6) {\n                lVar3 = (sVar6 + 1) - (long)__s;\n              }\n              __s = (char *)xrealloc(__s,pcVar12 + lVar3);\n              pcVar12 = __s + (long)(pcVar12 + lVar3);\n              __dest = __s + lVar10;\n            }\n            memcpy(__dest,pcVar11,sVar6);\n            __dest = __dest + sVar6;\n            *__dest = '\\0';\n            pcVar11 = __dest;\n            if ((uVar9 == 2) && ((param_2 & 4) != 0)) {\nLAB_0010d370:\n              local_d8.st_mode = 0;\nLAB_0010d378:\n              if ((*param_1 == '\\0') || (uVar9 == 2)) {\nLAB_0010d38a:\n                cVar4 = *param_1;\n                __dest = pcVar11;\n                goto LAB_0010d392;\n              }\n              piVar8 = __errno_location();\n              iVar5 = 0x14;\n            }\n            else {\n              if ((param_2 & 4) == 0) {\n                iVar5 = lstat(__s,&local_d8);\n              }\n              else {\n                iVar5 = stat(__s,&local_d8);\n              }\n              if (iVar5 == 0) {\n                if ((local_d8.st_mode & 0xf000) != 0xa000) {\n                  if ((local_d8.st_mode & 0xf000) != 0x4000) goto LAB_0010d378;\n                  goto LAB_0010d38a;\n                }\n                cVar4 = seen_triple(&local_e0,local_100,&local_d8);\n                if (cVar4 == '\\0') {\n                  __s_00 = (char *)areadlink_with_size(__s,local_d8.st_size);\n                  if (__s_00 != (char *)0x0) {\n                    sVar6 = strlen(__s_00);\n                    sVar7 = strlen(param_1);\n                    uVar1 = sVar6 + 1 + sVar7;\n                    if (local_f0 == 0) {\n                      local_f0 = 0x1000;\n                      if (0xfff < uVar1) {\n                        local_f0 = uVar1;\n                      }\n                      local_108 = (void *)xmalloc(local_f0);\n                    }\n                    else if (local_f0 < uVar1) {\n                      local_108 = (void *)xrealloc(local_108,uVar1);\n                      local_f0 = uVar1;\n                    }\n                    memmove((void *)((long)local_108 + sVar6),param_1,sVar7 + 1);\n                    param_1 = (char *)memcpy(local_108,__s_00,sVar6);\n                    pcVar11 = __s + 1;\n                    if (*__s_00 == '/') {\n                      *__s = '/';\n                    }\n                    else {\n                      bVar2 = pcVar11 < __dest;\n                      pcVar11 = __dest;\n                      if ((bVar2) && (pcVar11 = __dest + -1, __s < pcVar11)) {\n                        do {\n                          if (pcVar11[-1] == '/') break;\n                          pcVar11 = pcVar11 + -1;\n                        } while (__s != pcVar11);\n                      }\n                    }\n                    free(__s_00);\n                    local_100 = param_1;\n                    goto LAB_0010d38a;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = *piVar8;\n                  if ((uVar9 == 2) && (iVar5 != 0xc)) goto LAB_0010d4cc;\n                }\n                else {\n                  if (uVar9 == 2) {\nLAB_0010d4cc:\n                    cVar4 = pcVar14[1];\n                    goto LAB_0010d392;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = 0x28;\n                }\n              }\n              else {\n                piVar8 = __errno_location();\n                iVar5 = *piVar8;\n                if ((param_2 & 3) != 0) {\n                  if (uVar9 != 1) goto LAB_0010d370;\n                  sVar6 = strspn(param_1,\"/\");\n                  if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_0010d4cc;\n                }\n              }\n            }\n            free(local_108);\n            free(__s);\n            if (local_e0 != 0) {\n              hash_free();\n            }\n            *piVar8 = iVar5;\n            __s = (char *)0x0;\n            goto LAB_0010d3f0;\n          }\n          if ((__s + 1 < __dest) && (__dest = __dest + -1, __s < __dest)) {\n            do {\n              if (__dest[-1] == '/') break;\n              __dest = __dest + -1;\n            } while (__dest != __s);\n          }\n        }\nLAB_0010d392:\n      } while (cVar4 != '\\0');\n      goto LAB_0010d3a0;\n    }\n    local_108 = (void *)0x0;\n    pcVar11 = __dest;\nLAB_0010d3b3:\n    __dest = pcVar11 + 1;\n  }\n  else {\n    __s = (char *)xgetcwd();\n    if (__s == (char *)0x0) goto LAB_0010d3f0;\n    sVar6 = strlen(__s);\n    if (sVar6 < 0x1000) {\n      __s = (char *)xrealloc(__s,0x1000);\n      __dest = __s + sVar6;\n      pcVar12 = __s + 0x1000;\n    }\n    else {\n      __dest = __s + sVar6;\n      pcVar12 = __dest;\n    }\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') goto LAB_0010d251;\n    local_108 = (void *)0x0;\nLAB_0010d3a0:\n    pcVar11 = __dest;\n    if ((__dest <= __s + 1) || (__dest[-1] != '/')) goto LAB_0010d3b3;\n    pcVar11 = __dest + -1;\n  }\n  *pcVar11 = '\\0';\n  if (__dest != pcVar12) {\n    __s = (char *)xrealloc(__s,pcVar11 + (1 - (long)__s));\n  }\n  free(local_108);\n  if (local_e0 != 0) {\n    hash_free();\n  }\nLAB_0010d3f0:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return __s;\n}\n\n", 
    "001039d0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00122c58)();\n  return;\n}\n\n", 
    "001049a0": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00124170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* gettimeofday@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00122bc8)();\n  return;\n}\n\n", 
    "00124290": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getgid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103a10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * opendir(char *__name)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_opendir_00122c78)();\n  return pDVar1;\n}\n\n", 
    "00106f20": "\nint utimens_symlink(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  iVar1 = lutimens();\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0x26) {\n      iVar1 = 0;\n    }\n  }\n  return iVar1;\n}\n\n", 
    "00104b00": "\nvoid cp_option_init(long param_1)\n\n{\n  char *pcVar1;\n  \n  cp_options_default();\n  *(undefined4 *)(param_1 + 0x38) = 0;\n  *(undefined8 *)(param_1 + 8) = 0x200000004;\n  *(undefined8 *)(param_1 + 0x10) = 0x100000000;\n  *(undefined4 *)(param_1 + 4) = 1;\n  *(undefined2 *)(param_1 + 0x18) = 0;\n  *(undefined4 *)(param_1 + 0x1c) = 0;\n  *(undefined8 *)(param_1 + 0x20) = 0x1000000;\n  *(undefined8 *)(param_1 + 0x28) = 0;\n  pcVar1 = getenv(\"POSIXLY_CORRECT\");\n  *(undefined8 *)(param_1 + 0x40) = 0;\n  *(undefined8 *)(param_1 + 0x48) = 0;\n  *(bool *)(param_1 + 0x30) = pcVar1 != (char *)0x0;\n  return;\n}\n\n", 
    "00103c50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fallocate(int __fd,int __mode,__off_t __offset,__off_t __len)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fallocate_00122d98)();\n  return iVar1;\n}\n\n", 
    "00111ff0": "\nvoid * savedir(undefined8 param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  DIR *__dirp;\n  void *__ptr;\n  int *piVar2;\n  \n  __dirp = (DIR *)opendir_safer();\n  if (__dirp == (DIR *)0x0) {\n    return (void *)0x0;\n  }\n  __ptr = (void *)streamsavedir(__dirp,param_2);\n  iVar1 = closedir(__dirp);\n  if (iVar1 == 0) {\n    return __ptr;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  free(__ptr);\n  *piVar2 = iVar1;\n  return (void *)0x0;\n}\n\n", 
    "00103b30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ftruncate_00122d08)();\n  return iVar1;\n}\n\n", 
    "00103e90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_00122eb8)();\n  return iVar1;\n}\n\n", 
    "00103d70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getgid_00122e28)();\n  return _Var1;\n}\n\n", 
    "00124048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001148b0": "\nvoid cwd_advance_fd(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\nLAB_001148fc:\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = i_ring_push(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      goto LAB_001148fc;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n", 
    "00124168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* lseek@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001138e0": "\nvoid version_etc_ar(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  version_etc_arn();\n  return;\n}\n\n", 
    "00112070": "\nvoid lstatat(int param_1,char *param_2,stat *param_3)\n\n{\n  fstatat(param_1,param_2,param_3,0x100);\n  return;\n}\n\n", 
    "001159a0": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  uint uVar4;\n  int iVar5;\n  long *__ptr;\n  ulong uVar6;\n  char *__ptr_00;\n  long lVar7;\n  size_t sVar8;\n  long lVar9;\n  long lVar10;\n  int *piVar11;\n  char *__s;\n  ulong uVar12;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar11 = __errno_location();\n    *piVar11 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  uVar4 = param_2 & 0xfffffdff | 4;\n  if ((param_2 & 2) == 0) {\n    uVar4 = param_2;\n  }\n  *(uint *)(__ptr + 9) = uVar4;\n  uVar6 = fts_maxarglen(param_1);\n  uVar12 = 0x1000;\n  if (0xfff < uVar6) {\n    uVar12 = uVar6;\n  }\n  local_42 = fts_palloc_isra_0(__ptr + 4,__ptr + 6,uVar12);\n  if (local_42 == 0) goto LAB_00115c52;\n  __ptr_00 = *param_1;\n  if (__ptr_00 == (char *)0x0) {\n    if (param_3 != 0) {\n      __s = (char *)0x0;\nLAB_00115a98:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_00115aa7;\n    }\nLAB_00115ce7:\n    lVar9 = 0;\nLAB_00115bbf:\n    lVar10 = fts_alloc(__ptr,\"\",0);\n    *__ptr = lVar10;\n    if (lVar10 != 0) {\n      *(long *)(lVar10 + 0x10) = lVar9;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar10 + 0x70) = 9;\n      *(undefined8 *)(lVar10 + 0x58) = 1;\n      cVar2 = setup_dir_isra_0(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar5 = diropen_isra_0(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                                 &DAT_0011c32b);\n          *(int *)(__ptr + 5) = iVar5;\n          if (iVar5 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        i_ring_init(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00115c38:\n    fts_lfree(lVar9);\n    free(__ptr_00);\n  }\n  else {\n    __ptr_00 = (char *)fts_alloc(__ptr,\"\",0);\n    if (__ptr_00 != (char *)0x0) {\n      *(undefined8 *)(__ptr_00 + 0x58) = 0xffffffffffffffff;\n      __s = *param_1;\n      *(undefined8 *)(__ptr_00 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_00115a98;\nLAB_00115aa7:\n      if (__s == (char *)0x0) goto LAB_00115ce7;\n      local_40 = 0;\n      uVar12 = 0;\n      lVar10 = 0;\n      do {\n        sVar8 = strlen(__s);\n        if (((2 < sVar8) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) && (__s[sVar8 - 1] == '/')) {\n          do {\n            if (__s[sVar8 - 2] != '/') break;\n            sVar8 = sVar8 - 1;\n          } while (sVar8 != 1);\n        }\n        lVar7 = fts_alloc(__ptr);\n        lVar9 = lVar10;\n        if (lVar7 == 0) goto LAB_00115c38;\n        *(undefined8 *)(lVar7 + 0x58) = 0;\n        *(char **)(lVar7 + 8) = __ptr_00;\n        *(long *)(lVar7 + 0x30) = lVar7 + 0x108;\n        lVar9 = lVar7;\n        if ((lVar10 == 0) || (local_42 == 0)) {\n          uVar3 = fts_stat(__ptr,lVar7,0);\n          *(undefined2 *)(lVar7 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00115b35;\n          *(undefined8 *)(lVar7 + 0x10) = 0;\n          if (lVar10 != 0) goto LAB_00115ca8;\n        }\n        else {\n          *(undefined2 *)(lVar7 + 0x70) = 0xb;\n          fts_set_stat_required(lVar7,1);\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar7 + 0x10) = 0;\nLAB_00115ca8:\n            *(long *)(local_40 + 0x10) = lVar7;\n            lVar9 = lVar10;\n          }\n          else {\nLAB_00115b35:\n            *(long *)(lVar7 + 0x10) = lVar10;\n            lVar7 = local_40;\n          }\n        }\n        local_40 = lVar7;\n        uVar12 = uVar12 + 1;\n        __s = param_1[uVar12];\n        lVar10 = lVar9;\n      } while (__s != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar12)) {\n        lVar9 = fts_sort(__ptr,lVar9,uVar12);\n      }\n      goto LAB_00115bbf;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_00115c52:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n", 
    "00113b30": "\nvoid xnmalloc(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    xmalloc();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00124260": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_free(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00124380": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fdopendir@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00111a70": "\nssize_t safe_write(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = write(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7ff00001) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00112c80": "\nundefined  [16] get_stat_mtime_isra_0(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00124020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __errno_location@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00113d70": "\nvoid xfts_open(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n", 
    "0010f5a0": "\nint * quoting_options_from_style(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00122e00)();\n  return pvVar1;\n}\n\n", 
    "00103c00": "\nvoid matchpathcon(void)\n\n{\n  (*(code *)PTR_matchpathcon_00122d70)();\n  return;\n}\n\n", 
    "00117850": "\nundefined8 ind(long param_1,uint param_2)\n\n{\n  return *(undefined8 *)(param_1 + (ulong)(param_2 & 0x7f8));\n}\n\n", 
    "00103f60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint futimens(int __fd,timespec *__times)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_futimens_00122f20)();\n  return iVar1;\n}\n\n", 
    "00103e40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_00122e90)();\n  return pFVar1;\n}\n\n", 
    "00113490": "\nundefined8\nversion_etc_arn(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5\n               ,undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0011bfb2,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00113759;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00113759:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_001137fb;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_001137fb:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001135ad;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_001135ad:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00116880": "\nvoid rpl_fgetfilecon(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = fgetfilecon();\n  map_to_failure(uVar1,param_2);\n  return;\n}\n\n", 
    "00124378": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rename(char *__old,char *__new)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* rename@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001071c0": "\nundefined8 copy_attr_isra_0(void)\n\n{\n  return 1;\n}\n\n", 
    "00124138": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_type_set(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00124258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__mode_t umask(__mode_t __mask)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* umask@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00111190": "\nvoid set_custom_quoting(undefined1 *param_1,long param_2,long param_3)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)((long)param_1 + 0x28) = param_2;\n    *(long *)((long)param_1 + 0x30) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00124018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* abort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00115d20": "\nundefined4 fts_close(void **param_1)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  void *pvVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar3 = *(long *)((long)__ptr + 0x58);\n    while (-1 < lVar3) {\n      pvVar2 = *(void **)((long)__ptr + 0x10);\n      if (pvVar2 == (void *)0x0) {\n        pvVar2 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n      else {\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n    }\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    fts_lfree();\n  }\n  ppvVar1 = param_1 + 0xc;\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar4 = fchdir(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\n        iVar4 = *piVar6;\n        iVar5 = close(*(int *)(param_1 + 5));\n        if (iVar5 == 0) goto LAB_00115e6d;\n        if (iVar4 == 0) goto LAB_00115e28;\n        fd_ring_clear(ppvVar1);\n        if (param_1[10] == (void *)0x0) {\n          free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          free(param_1);\n          goto LAB_00115edf;\n        }\n        goto LAB_00115dcc;\n      }\n      iVar4 = close(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\nLAB_00115e28:\n        iVar4 = *piVar6;\n        goto LAB_00115e6d;\n      }\n    }\nLAB_00115db7:\n    iVar4 = 0;\n    fd_ring_clear(ppvVar1);\n    if (param_1[10] == (void *)0x0) {\n      free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n      free(param_1);\n      return 0;\n    }\nLAB_00115dcc:\n    hash_free();\n  }\n  else {\n    if ((*(int *)((long)param_1 + 0x2c) < 0) ||\n       (iVar4 = close(*(int *)((long)param_1 + 0x2c)), iVar4 == 0)) goto LAB_00115db7;\n    piVar6 = __errno_location();\n    iVar4 = *piVar6;\nLAB_00115e6d:\n    fd_ring_clear(ppvVar1);\n    if (param_1[10] != (void *)0x0) goto LAB_00115dcc;\n  }\n  free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n  free(param_1);\n  if (iVar4 == 0) {\n    return 0;\n  }\n  piVar6 = __errno_location();\nLAB_00115edf:\n  *piVar6 = iVar4;\n  return 0xffffffff;\n}\n\n", 
    "00116f30": "\nundefined4 i_ring_pop(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  char cVar4;\n  \n  cVar4 = i_ring_empty();\n  if (cVar4 != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n", 
    "00124150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strrchr@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00114b10": "\nvoid diropen_isra_0(undefined4 param_1,uint param_2,undefined8 param_3)\n\n{\n  if ((param_2 & 0x200) != 0) {\n    openat_safer(param_1,param_3);\n    return;\n  }\n  open_safer(param_3,(param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900);\n  return;\n}\n\n", 
    "00124270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00112c90": "\nundefined8 update_timespec(long param_1,undefined (**param_2) [16])\n\n{\n  undefined (*pauVar1) [16];\n  long lVar2;\n  undefined auVar3 [16];\n  \n  pauVar1 = *param_2;\n  lVar2 = *(long *)(pauVar1[1] + 8);\n  if (*(long *)(*pauVar1 + 8) == 0x3ffffffe) {\n    if (lVar2 == 0x3ffffffe) {\n      return 1;\n    }\n    auVar3 = get_stat_mtime_isra_0(*(undefined8 *)(param_1 + 0x48),*(undefined8 *)(param_1 + 0x50));\n    *pauVar1 = auVar3;\n  }\n  else {\n    if (*(long *)(*pauVar1 + 8) == 0x3fffffff) {\n      if (lVar2 == 0x3fffffff) {\n        *param_2 = (undefined (*) [16])0x0;\n        return 0;\n      }\n      gettime(pauVar1);\n      lVar2 = *(long *)(pauVar1[1] + 8);\n    }\n    if (lVar2 == 0x3ffffffe) {\n      auVar3 = get_stat_mtime_isra_0\n                         (*(undefined8 *)(param_1 + 0x58),*(undefined8 *)(param_1 + 0x60));\n      pauVar1[1] = auVar3;\n      return 0;\n    }\n  }\n  if (lVar2 != 0x3fffffff) {\n    return 0;\n  }\n  gettime(pauVar1[1]);\n  return 0;\n}\n\n", 
    "00124030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strncmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124398": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fstatfs@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00106ad0": "\nulong sparse_copy(int param_1,undefined4 param_2,void *param_3,ulong param_4,ulong param_5,\n                 undefined param_6,undefined8 param_7,undefined8 param_8,ulong param_9,\n                 long *param_10,byte *param_11)\n\n{\n  bool bVar1;\n  byte bVar2;\n  uint uVar3;\n  ulong uVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  ulong uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  byte bVar11;\n  ulong uVar12;\n  byte bVar13;\n  void *pvVar14;\n  ulong local_b8;\n  void *local_a8;\n  ulong local_78;\n  \n  *param_11 = 0;\n  local_78 = param_9;\n  *param_10 = 0;\n  if (param_9 != 0) {\n    uVar9 = param_5;\n    if (param_5 == 0) {\n      uVar9 = param_4;\n    }\n    uVar12 = 0;\n    bVar2 = 0;\n    do {\n      while( true ) {\n        uVar4 = local_78;\n        if (param_4 <= local_78) {\n          uVar4 = param_4;\n        }\n        uVar4 = read(param_1,param_3,uVar4);\n        if (-1 < (long)uVar4) break;\n        piVar5 = __errno_location();\n        if (*piVar5 != 4) {\n          uVar6 = quotearg_style(4,param_7);\n          uVar7 = dcgettext(0,\"error reading %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(0,*piVar5,uVar7,uVar6);\n        }\n      }\n      if (uVar4 == 0) break;\n      *param_10 = *param_10 + uVar4;\n      uVar10 = uVar9;\n      local_b8 = uVar4;\n      pvVar14 = param_3;\n      local_a8 = param_3;\n      bVar13 = bVar2;\nLAB_00106c38:\n      do {\n        if (local_b8 < uVar10) {\n          uVar10 = local_b8;\n        }\n        if (uVar10 != 0 && param_5 != 0) {\n          bVar2 = is_nul(pvVar14,uVar10);\n          bVar11 = (bVar2 ^ bVar13) & uVar12 != 0;\n          if ((bVar2 == 1) || (uVar10 != local_b8)) {\n            if (bVar11 == 0) goto LAB_00106d99;\n            bVar1 = false;\n          }\n          else {\n            if (bVar11 == 0) {\n              bVar2 = 0;\n              goto LAB_00106d23;\n            }\n            bVar1 = true;\n            bVar2 = 0;\n          }\njoined_r0x00106d32:\n          if (bVar13 == 0) {\n            uVar8 = full_write(param_2,local_a8,uVar12);\n            if (uVar12 != uVar8) {\n              uVar6 = quotearg_style(4,param_8);\n              uVar7 = dcgettext(0,\"error writing %s\",5);\n              piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n              error(0,*piVar5,uVar7,uVar6);\n            }\n          }\n          else {\n            uVar3 = create_hole(param_2,param_8,param_6,uVar12);\n            if ((char)uVar3 == '\\0') {\n              return (ulong)uVar3;\n            }\n          }\n          uVar12 = uVar10;\n          local_a8 = pvVar14;\n          bVar13 = bVar2;\n          if (bVar1) {\n            if (uVar10 == 0) {\n              if (bVar11 != 0) {\n                uVar12 = 0;\n                break;\n              }\n              local_b8 = 0;\n            }\n            else if (bVar11 != 0) {\n              uVar10 = 0;\n              goto LAB_00106c38;\n            }\n            local_b8 = local_b8 - uVar10;\n            uVar12 = 0;\n          }\n          else {\n            local_b8 = local_b8 - uVar10;\n          }\n        }\n        else {\n          if (((bVar13 != 1) && (bVar2 = uVar10 != 0 && param_5 != 0, uVar10 == local_b8)) ||\n             (bVar2 = bVar13, uVar10 == 0)) {\nLAB_00106d23:\n            uVar12 = uVar12 + uVar10;\n            bVar1 = true;\n            bVar11 = 0;\n            goto joined_r0x00106d32;\n          }\nLAB_00106d99:\n          if (0x7fffffffffffffff - uVar10 < uVar12) {\n            uVar6 = quotearg_style(4,param_7);\n            uVar7 = dcgettext(0,\"overflow reading %s\",5);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,uVar7,uVar6);\n          }\n          uVar12 = uVar12 + uVar10;\n          local_b8 = local_b8 - uVar10;\n          bVar13 = bVar2;\n        }\n        pvVar14 = (void *)((long)pvVar14 + uVar10);\n        bVar2 = bVar13;\n      } while (local_b8 != 0);\n      local_78 = local_78 - uVar4;\n      *param_11 = bVar2;\n    } while (local_78 != 0);\n    if (bVar2 != 0) {\n      uVar9 = create_hole(param_2,param_8,param_6,uVar12);\n      return uVar9;\n    }\n  }\n  return 1;\n}\n\n", 
    "0010b0d0": "\nint copy(EVP_PKEY_CTX *dst,EVP_PKEY_CTX *src)\n\n{\n  long lVar1;\n  char cVar2;\n  int iVar3;\n  undefined in_DL;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar2 = valid_options();\n  if (cVar2 == '\\0') {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"valid_options (options)\",\"src/copy.c\",0xb9e,(char *)&__PRETTY_FUNCTION___8308);\n  }\n  top_level_dst_name = src;\n  top_level_src_name = dst;\n  iVar3 = copy_internal(dst,src,in_DL,0,0);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00124390": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint euidaccess(char *__name,int __type)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* euidaccess@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103e30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00122e88)();\n  return pvVar1;\n}\n\n", 
    "00103d10": "\nvoid context_free(void)\n\n{\n  (*(code *)PTR_context_free_00122df8)();\n  return;\n}\n\n", 
    "00103f50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_00122f18)();\n  return pDVar1;\n}\n\n", 
    "00117860": "\nvoid isaac_refill(long *param_1,long *param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long *plVar6;\n  long *plVar7;\n  undefined auVar8 [16];\n  undefined auVar9 [16];\n  \n  plVar6 = param_1 + 0x80;\n  lVar4 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar4 + 1;\n  lVar4 = lVar4 + 1 + param_1[0x101];\n  plVar5 = param_1;\n  plVar7 = param_2;\n  do {\n    uVar3 = param_1[0x80] + ~(uVar3 ^ uVar3 << 0x15);\n    lVar1 = *param_1;\n    auVar8 = ind(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = ind();\n    lVar1 = just(lVar4 + lVar1);\n    *param_2 = lVar1;\n    auVar8 = just(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + 0x408);\n    auVar8 = ind(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = ind();\n    auVar8 = just(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    param_2[1] = SUB168(auVar8,0);\n    uVar3 = *(long *)(lVar4 + 0x410) + (uVar3 ^ uVar3 << 0xc);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = ind(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = ind();\n    lVar1 = just(lVar1 + lVar4);\n    param_2[2] = lVar1;\n    auVar8 = just(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + 0x418);\n    auVar8 = ind(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = ind();\n    auVar8 = just(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    param_2[3] = lVar4;\n    param_2 = param_2 + 4;\n  } while (param_1 != plVar6);\n  plVar7 = plVar7 + 0x80;\n  plVar6 = plVar5 + 0x100;\n  do {\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + param_1[-0x80];\n    lVar1 = *param_1;\n    auVar8 = ind(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = ind();\n    lVar1 = just(lVar4 + lVar1);\n    *plVar7 = lVar1;\n    auVar8 = just(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + -0x3f8);\n    auVar8 = ind(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = ind();\n    auVar8 = just(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    plVar7[1] = SUB168(auVar8,0);\n    uVar3 = (uVar3 ^ uVar3 << 0xc) + *(long *)(lVar4 + -0x3f0);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = ind(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = ind();\n    lVar1 = just(lVar1 + lVar4);\n    plVar7[2] = lVar1;\n    auVar8 = just(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + -1000);\n    auVar8 = ind(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = ind();\n    auVar8 = just(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    plVar7[3] = lVar4;\n    plVar7 = plVar7 + 4;\n  } while (param_1 != plVar6);\n  plVar5[0x100] = uVar3;\n  plVar5[0x101] = lVar4;\n  return;\n}\n\n", 
    "00116650": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        fts_lfree();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                              &DAT_0011c32b);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = fts_build(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            cwd_advance_fd(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = fts_build(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "001114a0": "\nvoid quotearg_n_style_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  quoting_options_from_style(auStack_68);\n  quotearg_n_options(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00124268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcpy@@GLIBC_2.14 */\n  halt_baddata();\n}\n\n", 
    "00124388": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint futimens(int __fd,timespec *__times)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* futimens@@GLIBC_2.6 */\n  halt_baddata();\n}\n\n", 
    "00124028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* unlink@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001061e0": "\nbyte should_dereference(long param_1,byte param_2)\n\n{\n  byte bVar1;\n  \n  bVar1 = 1;\n  if (*(int *)(param_1 + 4) != 4) {\n    bVar1 = *(int *)(param_1 + 4) == 3 & param_2;\n  }\n  return bVar1;\n}\n\n", 
    "00124148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __fxstatat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "001149b0": "\nvoid fts_padjust_isra_0(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00112d80": "\nint fdutimens(int param_1,char *param_2,__time_t *param_3)\n\n{\n  bool bVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  int *piVar5;\n  long lVar6;\n  long lVar7;\n  timespec *ptVar8;\n  timeval *__tvp;\n  long in_FS_OFFSET;\n  bool bVar9;\n  timespec tVar10;\n  timespec *local_130;\n  timespec local_128;\n  __time_t local_118;\n  __time_t _Stack_110;\n  timeval local_108;\n  __time_t local_f8;\n  long lStack_f0;\n  timeval local_e8;\n  __time_t local_d8;\n  __suseconds_t _Stack_d0;\n  stat local_c8;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 == (__time_t *)0x0) {\n    local_130 = (timespec *)0x0;\n    iVar3 = 0;\nLAB_00112de0:\n    if ((-1 < param_1) || (param_2 != (char *)0x0)) {\n      if (-1 < utimensat_works_really) {\n        ptVar8 = local_130;\n        if (iVar3 == 2) {\n          if (param_1 < 0) {\n            iVar3 = stat(param_2,&local_c8);\n          }\n          else {\n            iVar3 = fstat(param_1,&local_c8);\n          }\n          if (iVar3 != 0) goto LAB_0011317b;\n          ptVar8 = local_130;\n          if (local_130->tv_nsec == 0x3ffffffe) {\n            iVar3 = 3;\n            tVar10 = (timespec)\n                     get_stat_mtime_isra_0(local_c8.st_atim.tv_sec,local_c8.st_atim.tv_nsec);\n            *ptVar8 = tVar10;\n          }\n          else {\n            iVar3 = 3;\n            if (local_130[1].tv_nsec == 0x3ffffffe) {\n              tVar10 = (timespec)\n                       get_stat_mtime_isra_0(local_c8.st_mtim.tv_sec,local_c8.st_mtim.tv_nsec);\n              ptVar8[1] = tVar10;\n            }\n          }\n        }\n        if (param_1 < 0) {\n          iVar4 = utimensat(-100,param_2,ptVar8,0);\n        }\n        else {\n          iVar4 = futimens(param_1,ptVar8);\n        }\n        if (iVar4 < 1) {\n          if ((iVar4 == 0) || (piVar5 = __errno_location(), *piVar5 != 0x26)) {\n            utimensat_works_really = 1;\n            goto LAB_00112f2a;\n          }\n        }\n        else {\n          piVar5 = __errno_location();\n          *piVar5 = 0x26;\n        }\n      }\n      utimensat_works_really = -1;\n      lutimensat_works_really = 0xffffffff;\n      if (iVar3 == 0) {\nLAB_00112e91:\n        if (local_130 == (timespec *)0x0) goto LAB_00112f58;\n        local_108.tv_sec = local_130->tv_sec;\n        __tvp = &local_108;\n        local_f8 = local_130[1].tv_sec;\n        local_108.tv_usec = local_130->tv_nsec / 1000;\n        lStack_f0 = local_130[1].tv_nsec / 1000;\n      }\n      else {\n        if (iVar3 != 3) {\n          if (param_1 < 0) {\n            iVar3 = stat(param_2,&local_c8);\n          }\n          else {\n            iVar3 = fstat(param_1,&local_c8);\n          }\n          if (iVar3 != 0) goto LAB_0011317b;\n        }\n        if (local_130 != (timespec *)0x0) {\n          iVar4 = 0;\n          cVar2 = update_timespec(&local_c8,&local_130);\n          if (cVar2 != '\\0') goto LAB_00112f2a;\n          goto LAB_00112e91;\n        }\nLAB_00112f58:\n        __tvp = (timeval *)0x0;\n      }\n      if (param_1 < 0) {\n        iVar4 = futimesat(-100,param_2,__tvp);\n        goto LAB_00112f2a;\n      }\n      iVar4 = futimesat(param_1,(char *)0x0,__tvp);\n      if (iVar4 != 0) {\n        iVar4 = -1;\n        if (param_2 != (char *)0x0) {\n          iVar4 = utimes(param_2,__tvp);\n        }\n        goto LAB_00112f2a;\n      }\n      if (__tvp == (timeval *)0x0) goto LAB_00112f2a;\n      bVar1 = __tvp->tv_usec < 500000;\n      lVar7 = __tvp[1].tv_usec;\n      if (((bVar1) && (lVar7 < 500000)) || (iVar3 = fstat(param_1,&local_c8), iVar3 != 0))\n      goto LAB_00112f2a;\n      local_e8.tv_sec = __tvp->tv_sec;\n      local_e8.tv_usec = __tvp->tv_usec;\n      local_d8 = __tvp[1].tv_sec;\n      _Stack_d0 = __tvp[1].tv_usec;\n      bVar9 = local_c8.st_mtim.tv_sec - __tvp[1].tv_sec == 1;\n      if (((local_c8.st_atim.tv_sec - __tvp->tv_sec != 1) || (bVar1)) ||\n         (lVar6 = get_stat_mtime_ns_isra_0(local_c8.st_atim.tv_nsec), lVar6 != 0)) {\n        if ((499999 < lVar7 && bVar9) &&\n           (lVar7 = get_stat_mtime_ns_isra_0(local_c8.st_mtim.tv_nsec), lVar7 == 0))\n        goto LAB_001131c7;\n      }\n      else {\n        local_e8.tv_usec = 0;\n        if ((499999 < lVar7 && bVar9) &&\n           (lVar7 = get_stat_mtime_ns_isra_0(local_c8.st_mtim.tv_nsec), lVar7 == 0)) {\nLAB_001131c7:\n          _Stack_d0 = 0;\n        }\n        futimesat(param_1,(char *)0x0,&local_e8);\n      }\n      iVar4 = 0;\n      goto LAB_00112f2a;\n    }\n    piVar5 = __errno_location();\n    *piVar5 = 9;\n  }\n  else {\n    local_128.tv_sec = *param_3;\n    local_128.tv_nsec = param_3[1];\n    local_118 = param_3[2];\n    _Stack_110 = param_3[3];\n    local_130 = &local_128;\n    iVar3 = validate_timespec();\n    if (-1 < iVar3) goto LAB_00112de0;\n  }\nLAB_0011317b:\n  iVar4 = -1;\nLAB_00112f2a:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106850": "\nulong writable_destination(char *param_1,uint param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined4 extraout_var;\n  \n  if ((param_2 & 0xf000) == 0xa000) {\n    return 1;\n  }\n  cVar1 = can_write_any_file();\n  if (cVar1 != '\\0') {\n    return 1;\n  }\n  iVar2 = euidaccess(param_1,2);\n  return CONCAT44(extraout_var,iVar2) & 0xffffffffffffff00 | (ulong)(iVar2 == 0);\n}\n\n", 
    "00111c90": "\nvoid same_name(undefined8 param_1,undefined8 param_2)\n\n{\n  same_nameat(0xffffff9c,param_1,0xffffff9c,param_2);\n  return;\n}\n\n", 
    "00113b10": "\nvoid xmalloc(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    xalloc_die();\n  }\n  return;\n}\n\n", 
    "00124240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong syscall(long __sysno,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* syscall@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124360": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fseeko@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getenv@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getuid@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001039a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_write_00122c40)();\n  return sVar1;\n}\n\n", 
    "0010e5b0": "\nundefined8 hash_get_n_entries(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "00103b00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_00122cf0)();\n  return iVar1;\n}\n\n", 
    "00116860": "\nvoid rpl_lgetfilecon(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = lgetfilecon();\n  map_to_failure(uVar1,param_2);\n  return;\n}\n\n", 
    "00103d40": "\nvoid getfilecon(void)\n\n{\n  (*(code *)PTR_getfilecon_00122e10)();\n  return;\n}\n\n", 
    "00116620": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n", 
    "00103c20": "\nvoid getcon(void)\n\n{\n  (*(code *)PTR_getcon_00122d80)();\n  return;\n}\n\n", 
    "00111170": "\nundefined4 set_quoting_flags(undefined1 *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00112380": "\nvoid try_tempname(void)\n\n{\n  try_tempname_len();\n  return;\n}\n\n", 
    "00103f80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fstatfs_00122f30)();\n  return iVar1;\n}\n\n", 
    "00103e60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00122ea0)();\n  return pcVar1;\n}\n\n", 
    "001117d0": "\nvoid quote(undefined8 param_1)\n\n{\n  quote_n(0,param_1);\n  return;\n}\n\n", 
    "001116b0": "\nvoid quotearg_n_custom_mem\n               (undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n               undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = default_quoting_options._0_8_;\n  uStack_60 = default_quoting_options._8_8_;\n  local_38 = default_quoting_options._48_8_;\n  local_58 = default_quoting_options._16_8_;\n  uStack_50 = default_quoting_options._24_8_;\n  local_48 = default_quoting_options._32_8_;\n  uStack_40 = default_quoting_options._40_8_;\n  set_custom_quoting(&local_68);\n  quotearg_n_options(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00124358": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* open@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124118": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00124238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rpmatch(char *__response)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* rpmatch@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124370": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fopen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010fb70": "\nundefined8\nstrcaseeq0_constprop_0\n          (byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = strcaseeq1(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                       (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00112c70": "\nundefined8 get_stat_mtime_ns_isra_0(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00106960": "\nint punch_hole(int param_1,__off_t param_2,__off_t param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  int extraout_EDX;\n  \n  iVar2 = fallocate(param_1,3,param_2,param_3);\n  if (iVar2 < 0) {\n    piVar3 = __errno_location();\n    cVar1 = is_ENOTSUP(*piVar3);\n    if ((extraout_EDX == 0x26) || (cVar1 != '\\0')) {\n      return 0;\n    }\n  }\n  return iVar2;\n}\n\n", 
    "00124130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbrtowc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124250": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00124010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid is_selinux_enabled(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114f70": "\nvoid leave_dir_isra_0(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto leave_dir_isra_0_cold;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = *(long *)(lVar1 + 0x80);\n      }\n    }\n  }\n  else {\n    local_28 = *(undefined8 *)(param_3 + 0x78);\n    local_20 = *(undefined8 *)(param_3 + 0x80);\n    __ptr = (void *)hash_delete(*param_2,&local_28);\n    if (__ptr == (void *)0x0) {\nleave_dir_isra_0_cold:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    free(__ptr);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e5c0": "\nulong hash_get_max_bucket_length(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010f8f0": "\nundefined8\nstrcaseeq3(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq4(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00103c10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_00122d78)();\n  return iVar1;\n}\n\n", 
    "00112150": "\nint try_tempname_len(char *param_1,int param_2,undefined8 param_3,code *param_4,long param_5)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  long lVar8;\n  char *pcVar9;\n  char *pcVar10;\n  int local_40;\n  \n  piVar3 = __errno_location();\n  iVar7 = *piVar3;\n  sVar4 = strlen(param_1);\n  if ((ulong)(param_2 + param_5) <= sVar4) {\n    lVar8 = sVar4 - (param_2 + param_5);\n    cVar1 = check_x_suffix(param_1 + lVar8,param_5);\n    if (cVar1 != '\\0') {\n      lVar5 = randint_all_new(0,param_5);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      local_40 = 0x3a2f8;\n      while( true ) {\n        pcVar9 = param_1 + lVar8;\n        if (param_5 != 0) {\n          do {\n            pcVar10 = pcVar9 + 1;\n            lVar6 = randint_genmax(lVar5,0x3d);\n            *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar9 = pcVar10;\n          } while (param_1 + lVar8 + param_5 != pcVar10);\n        }\n        iVar2 = (*param_4)(param_1,param_3);\n        if (-1 < iVar2) break;\n        if (*piVar3 != 0x11) {\n          iVar2 = -1;\n          iVar7 = *piVar3;\n          goto LAB_00112276;\n        }\n        local_40 = local_40 + -1;\n        if (local_40 == 0) {\n          randint_all_free(lVar5);\n          *piVar3 = 0x11;\n          return -1;\n        }\n      }\n      *piVar3 = iVar7;\nLAB_00112276:\n      randint_all_free(lVar5);\n      *piVar3 = iVar7;\n      return iVar2;\n    }\n  }\n  *piVar3 = 0x16;\n  return -1;\n}\n\n", 
    "00117840": "\nundefined8 just(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00103e50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint linkat(int __fromfd,char *__from,int __tofd,char *__to,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_linkat_00122e98)();\n  return iVar1;\n}\n\n", 
    "00112390": "\nuint fd_safer(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = dup_safer();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00103d30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_00122e08)();\n  return iVar1;\n}\n\n", 
    "00103f70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint euidaccess(char *__name,int __type)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_euidaccess_00122f28)();\n  return iVar1;\n}\n\n", 
    "0010e070": "\nlong full_write(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = safe_write(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0x1c;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n", 
    "0010ddb0": "\nundefined8 ftypelet(uint param_1)\n\n{\n  undefined8 uVar1;\n  \n  param_1 = param_1 & 0xf000;\n  uVar1 = 0x2d;\n  if ((((param_1 != 0x8000) && (uVar1 = 100, param_1 != 0x4000)) &&\n      (uVar1 = 0x62, param_1 != 0x6000)) &&\n     (((uVar1 = 99, param_1 != 0x2000 && (uVar1 = 0x6c, param_1 != 0xa000)) &&\n      ((uVar1 = 0x70, param_1 != 0x1000 && (uVar1 = 0x3f, param_1 == 0xc000)))))) {\n    uVar1 = 0x73;\n  }\n  return uVar1;\n}\n\n", 
    "0010bcf0": "\nint restorecon_private(char *param_1,char param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  int *piVar6;\n  long in_FS_OFFSET;\n  undefined8 local_d8;\n  long local_d0;\n  stat local_c8;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d8 = 0;\n  local_d0 = 0;\n  if (param_2 != '\\0') {\n    iVar1 = getfscreatecon(&local_d0);\n    if (iVar1 < 0) {\n      iVar1 = -1;\n    }\n    else if (local_d0 == 0) {\n      piVar6 = __errno_location();\n      iVar1 = -1;\n      *piVar6 = 0x3d;\n    }\n    else {\n      iVar1 = lsetfilecon(param_1);\n      freecon(local_d0);\n    }\n    goto LAB_0010bd5f;\n  }\n  iVar1 = open(param_1,0x20000);\n  if (iVar1 == -1) {\n    piVar6 = __errno_location();\n    if ((*piVar6 == 0x28) && (iVar2 = lstat(param_1,&local_c8), -1 < iVar2)) goto LAB_0010bdbc;\n    lVar4 = 0;\n    lVar3 = 0;\n  }\n  else {\n    iVar2 = fstat(iVar1,&local_c8);\n    if (iVar2 < 0) {\n      lVar4 = 0;\n      lVar3 = 0;\n      iVar2 = -1;\n    }\n    else {\nLAB_0010bdbc:\n      iVar2 = matchpathcon(param_1,local_c8.st_mode,&local_d8);\n      if (iVar2 < 0) {\n        piVar6 = __errno_location();\n        if (*piVar6 != 2) goto LAB_0010beae;\n        *piVar6 = 0x3d;\n        lVar4 = 0;\n        lVar3 = 0;\nLAB_0010beb3:\n        if (iVar1 == -1) goto LAB_0010be77;\n      }\n      else {\n        lVar3 = context_new(local_d8);\n        if (lVar3 == 0) {\nLAB_0010beae:\n          lVar4 = 0;\n          lVar3 = 0;\n          goto LAB_0010beb3;\n        }\n        if (iVar1 == -1) {\n          lVar4 = 0;\n          iVar2 = rpl_lgetfilecon(param_1,&local_d0);\n          if ((((iVar2 < 0) || (lVar4 = context_new(local_d0), lVar4 == 0)) ||\n              (lVar5 = context_type_get(lVar3), lVar5 == 0)) ||\n             (iVar2 = context_type_set(lVar4,lVar5), iVar2 != 0)) goto LAB_0010be77;\nLAB_0010be3d:\n          lVar5 = context_str(lVar4);\n          if (lVar5 == 0) goto LAB_0010beb3;\n          if (iVar1 == -1) {\n            iVar1 = lsetfilecon(param_1,lVar5);\n            goto LAB_0010be77;\n          }\n          iVar2 = fsetfilecon(iVar1);\n          goto LAB_0010bebf;\n        }\n        iVar2 = rpl_fgetfilecon(iVar1);\n        if (iVar2 < 0) {\n          lVar4 = 0;\n          iVar2 = -1;\n          goto LAB_0010bebf;\n        }\n        lVar4 = context_new(local_d0);\n        if (((lVar4 != 0) && (lVar5 = context_type_get(lVar3), lVar5 != 0)) &&\n           (iVar2 = context_type_set(lVar4,lVar5), iVar2 == 0)) goto LAB_0010be3d;\n      }\n      iVar2 = -1;\n    }\nLAB_0010bebf:\n    close(iVar1);\n    iVar1 = iVar2;\n  }\nLAB_0010be77:\n  context_free(lVar3);\n  context_free(lVar4);\n  freecon(local_d8);\n  freecon(local_d0);\nLAB_0010bd5f:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar1;\n}\n\n", 
    "001071d0": "\nulong owner_failure_ok_isra_0(byte *param_1)\n\n{\n  bool bVar1;\n  int *piVar2;\n  ulong uVar3;\n  \n  piVar2 = __errno_location();\n  bVar1 = *piVar2 == 1 || *piVar2 == 0x16;\n  uVar3 = (ulong)piVar2 & 0xffffffffffffff00 | (ulong)bVar1;\n  if (bVar1) {\n    uVar3 = (ulong)(*param_1 ^ 1);\n  }\n  return uVar3;\n}\n\n", 
    "00124248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkfifo(char *__path,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mkfifo@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001117e0": "\nundefined8 errno_fail(int param_1)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  *piVar1 = param_1;\n  return 0xffffffff;\n}\n\n", 
    "00124368": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchown(int __fd,__uid_t __owner,__gid_t __group)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchown@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* utimensat@@GLIBC_2.6 */\n  halt_baddata();\n}\n\n", 
    "00124128": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* getopt_long@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010ccc0": "\nvoid set_simple_backup_suffix(char *param_1)\n\n{\n  char *pcVar1;\n  \n  if ((((param_1 != (char *)0x0) ||\n       (param_1 = getenv(\"SIMPLE_BACKUP_SUFFIX\"), param_1 != (char *)0x0)) && (*param_1 != '\\0')) &&\n     (pcVar1 = (char *)last_component(param_1), param_1 == pcVar1)) {\n    simple_backup_suffix = param_1;\n    return;\n  }\n  simple_backup_suffix = &DAT_0011b619;\n  return;\n}\n\n", 
    "0010da80": "\nvoid dir_len(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  \n  cVar1 = *param_1;\n  lVar2 = last_component();\n  uVar3 = lVar2 - (long)param_1;\n  do {\n    if (uVar3 <= (cVar1 == '/')) {\n      return;\n    }\n    lVar2 = uVar3 - 1;\n    uVar3 = uVar3 - 1;\n  } while (param_1[lVar2] == '/');\n  return;\n}\n\n", 
    "00103880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_00122bb0)();\n  return pcVar1;\n}\n\n", 
    "00113d30": "\nvoid xalloc_die(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(exit_failure,0,&DAT_0011b616,uVar1);\n}\n\n", 
    "001040ec": "\nvoid cwd_advance_fd_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00124220": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid lgetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00124340": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* error@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00107dd0": "\nint set_owner(long param_1,char *param_2,int param_3,long param_4,char param_5,long param_6)\n\n{\n  __uid_t __owner;\n  __gid_t __group;\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  uint uVar6;\n  uint uVar7;\n  char *pcVar8;\n  \n  __owner = *(__uid_t *)(param_4 + 0x1c);\n  __group = *(__gid_t *)(param_4 + 0x20);\n  if (param_5 == '\\0') {\n    if ((*(ulong *)(param_1 + 0x18) & 0xff0000000000ff) == 0) {\n      if (*(char *)(param_1 + 0x2b) == '\\0') goto LAB_00107e40;\n      uVar7 = *(uint *)(param_6 + 0x18);\n      uVar6 = *(uint *)(param_1 + 0x10);\n    }\n    else {\n      uVar7 = *(uint *)(param_6 + 0x18);\n      uVar6 = *(uint *)(param_4 + 0x18);\n    }\n    if ((((ushort)(~(ushort)uVar6 | 0xe00) & uVar7 & 0xfff) != 0) &&\n       (iVar2 = qset_acl(param_2,param_3,uVar6 & uVar7 & 0x1c0), iVar2 != 0)) {\n      cVar1 = owner_failure_ok_isra_0(param_1 + 0x1b);\n      if (cVar1 != '\\0') {\n        return -(uint)*(byte *)(param_1 + 0x24);\n      }\n      uVar4 = quotearg_style(4,param_2);\n      pcVar8 = \"clearing permissions for %s\";\n      goto LAB_00107f2c;\n    }\n  }\nLAB_00107e40:\n  if (param_3 == -1) {\n    iVar2 = lchown(param_2,__owner,__group);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    piVar3 = __errno_location();\n    iVar2 = *piVar3;\n    if ((iVar2 == 1) || (iVar2 == 0x16)) {\n      lchown(param_2,0xffffffff,__group);\n      *piVar3 = iVar2;\n    }\n  }\n  else {\n    iVar2 = fchown(param_3,__owner,__group);\n    if (iVar2 == 0) {\n      return 1;\n    }\n    piVar3 = __errno_location();\n    iVar2 = *piVar3;\n    if ((iVar2 == 1) || (iVar2 == 0x16)) {\n      fchown(param_3,0xffffffff,__group);\n      *piVar3 = iVar2;\n    }\n  }\n  cVar1 = chown_failure_ok(param_1);\n  if (cVar1 != '\\0') {\n    return 0;\n  }\n  uVar4 = quotearg_style(4,param_2);\n  pcVar8 = \"failed to preserve ownership for %s\";\nLAB_00107f2c:\n  uVar5 = dcgettext(0,pcVar8,5);\n  piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar3,uVar5,uVar4);\n}\n\n", 
    "00124100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001170b0": "\nundefined8 randint_get_source(undefined8 *param_1)\n\n{\n  return *param_1;\n}\n\n", 
    "00103f20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchown(int __fd,__uid_t __owner,__gid_t __group)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchown_00122f00)();\n  return iVar1;\n}\n\n", 
    "00103e00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint lchown(char *__file,__uid_t __owner,__gid_t __group)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_lchown_00122e70)();\n  return iVar1;\n}\n\n", 
    "0010e280": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong compute_bucket_size_isra_0(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_0011b768 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_0011b76c) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_0011b76c) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = next_prime(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "0010e160": "\nulong next_prime(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = is_prime(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "0010f370": "\nundefined8 triple_compare(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = same_name(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00116840": "\nvoid rpl_getfilecon(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = getfilecon();\n  map_to_failure(uVar1,param_2);\n  return;\n}\n\n", 
    "00114420": "\nlong fts_sort(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_00114475:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_00114475;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n", 
    "001040f6": "\nvoid fts_read_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00112120": "\nvoid try_dir(char *param_1)\n\n{\n  mkdir(param_1,0x1c0);\n  return;\n}\n\n", 
    "00116af0": "\nbool c_isgraph(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00108db0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong copy_internal(char *param_1,char *param_2,byte param_3,char **param_4,char *param_5,\n                   uint *param_6,uint param_7,char *param_8,undefined *param_9,undefined *param_10)\n\n{\n  undefined uVar1;\n  undefined uVar2;\n  char **ppcVar3;\n  __uid_t __owner;\n  __gid_t __group;\n  char cVar4;\n  byte bVar5;\n  byte bVar6;\n  int iVar7;\n  uint uVar8;\n  int iVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  long lVar13;\n  int *piVar14;\n  uint *puVar15;\n  char *pcVar16;\n  size_t sVar17;\n  uint uVar18;\n  stat *__buf;\n  undefined *puVar19;\n  undefined *puVar20;\n  undefined *puVar21;\n  undefined *puVar22;\n  undefined *puVar23;\n  undefined *puVar24;\n  undefined *puVar25;\n  char *pcVar26;\n  ulong uVar27;\n  long in_FS_OFFSET;\n  byte bVar28;\n  bool bVar29;\n  undefined auStack_2f8 [4];\n  uint local_2f4;\n  ulong local_2f0;\n  char *local_2e8;\n  char **local_2e0;\n  undefined *local_2d8;\n  char *local_2d0;\n  undefined8 local_2c8;\n  char **local_2c0;\n  undefined *local_2b8;\n  undefined local_2ad;\n  uint local_2ac;\n  char *local_2a8;\n  uint local_2a0;\n  byte local_29c [19];\n  char local_289;\n  stat local_288;\n  stat local_1f8;\n  stat local_168;\n  undefined local_d8 [16];\n  undefined local_c8 [136];\n  long local_40;\n  \n  bVar28 = 0;\n  puVar21 = auStack_2f8;\n  puVar22 = auStack_2f8;\n  puVar20 = auStack_2f8;\n  puVar23 = auStack_2f8;\n  puVar25 = auStack_2f8;\n  uVar18 = param_6[0xd];\n  local_2ac = param_7;\n  local_2d0 = param_8;\n  local_2d8 = param_9;\n  local_2b8 = param_10;\n  local_2c0 = (char **)((ulong)local_2c0 & 0xffffffffffffff00 | (ulong)(byte)param_7);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  *param_9 = 0;\n  local_2e0 = param_4;\n  local_2c8 = param_5;\n  local_2a8 = param_1;\n  local_29c[0] = param_3;\n  if (*(char *)(param_6 + 6) != '\\0') {\n    if (-1 < (int)uVar18) {\nLAB_00108e3b:\n      local_29c[0] = uVar18 == 0;\n      if (local_2b8 != (undefined *)0x0) {\n        *local_2b8 = local_29c[0];\n      }\n      goto LAB_00108e55;\n    }\n    iVar7 = renameat2(0xffffff9c,param_1,0xffffff9c,param_2,1);\n    if (iVar7 != 0) {\n      puVar15 = (uint *)__errno_location();\n      uVar18 = *puVar15;\n      goto LAB_00108e3b;\n    }\n    local_29c[0] = 1;\n    if (local_2b8 != (undefined *)0x0) {\n      *local_2b8 = 1;\n    }\nLAB_00109030:\n    if (*(char *)((long)param_6 + 0x31) != '\\0') {\n      uVar18 = 0;\n      goto joined_r0x00109052;\n    }\n    uVar18 = 0;\n    pcVar26 = param_2;\nLAB_00108e6f:\n    if (param_6[1] == 2) {\n      iVar7 = lstat(pcVar26,&local_288);\n    }\n    else {\n      iVar7 = stat(pcVar26,&local_288);\n    }\n    puVar19 = auStack_2f8;\n    if (iVar7 == 0) {\n      local_2a0 = local_288.st_mode;\n      if (((local_288.st_mode & 0xf000) != 0x4000) || (*(char *)((long)param_6 + 0x2a) != '\\0'))\n      goto LAB_00108eb7;\n      uVar10 = quotearg_style(4,local_2a8);\n      if (*(char *)((long)param_6 + 0x19) == '\\0') {\n        uVar11 = dcgettext(0,\"-r not specified; omitting directory %s\",5);\n        goto LAB_0010998a;\n      }\n      pcVar26 = \"omitting directory %s\";\nLAB_0010a440:\n      uVar11 = dcgettext(0,pcVar26,5);\nLAB_0010998a:\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar11,uVar10);\n    }\nLAB_001096f5:\n    *(undefined8 *)(puVar19 + -8) = 0x1096ff;\n    uVar10 = quotearg_style(4,pcVar26);\n    pcVar26 = \"cannot stat %s\";\n    puVar21 = puVar19;\nLAB_0010970e:\n    *(undefined8 *)(puVar21 + -8) = 0x109715;\n    uVar11 = dcgettext(0,pcVar26,5);\n    *(undefined8 *)(puVar21 + -8) = 0x10971d;\n    piVar14 = __errno_location();\n    iVar7 = *piVar14;\n                    /* WARNING: Subroutine does not return */\n    *(undefined **)(puVar21 + -8) = &UNK_0010972e;\n    error(0,iVar7,uVar11,uVar10);\n  }\nLAB_00108e55:\n  if (uVar18 == 0) goto LAB_00109030;\n  pcVar26 = local_2a8;\n  if ((uVar18 != 0x11) || (param_6[2] != 2)) goto LAB_00108e6f;\nLAB_00108eb7:\njoined_r0x00109052:\n  if ((byte)local_2ac == '\\0') {\n    local_2ad = should_dereference(param_6,0);\n    if (local_29c[0] == 0) goto LAB_00109240;\n    local_2e8 = (char *)0x0;\n    goto LAB_00109080;\n  }\n  lVar13 = *(long *)(param_6 + 0x12);\n  if (lVar13 != 0) {\n    if (((local_2a0 & 0xf000) != 0x4000) && (*param_6 == 0)) {\n      cVar4 = seen_file(lVar13,local_2a8,&local_288);\n      if (cVar4 != '\\0') {\n        uVar10 = quotearg_style(4,local_2a8);\n        pcVar26 = \"warning: source file %s specified more than once\";\n        goto LAB_0010a440;\n      }\n      lVar13 = *(long *)(param_6 + 0x12);\n    }\n    record_file(lVar13,local_2a8,&local_288);\n  }\n  local_2ad = should_dereference(param_6,1);\n  if (local_29c[0] == 0) {\nLAB_00109240:\n    if ((uVar18 != 0x11) || (param_6[2] != 2)) {\n      uVar8 = local_2a0 & 0xf000;\n      if (uVar8 == 0x8000) {\nLAB_00109888:\n        bVar5 = *(byte *)(param_6 + 6);\n        iVar7 = 0x100;\n        if ((((bVar5 == 0) && (bVar5 = *(byte *)(param_6 + 0xb), bVar5 == 0)) &&\n            (bVar5 = *(byte *)((long)param_6 + 0x17), bVar5 == 0)) && (bVar5 = 1, *param_6 == 0)) {\n          bVar5 = *(byte *)((long)param_6 + 0x15);\n          iVar7 = (uint)(bVar5 != 0) << 8;\n        }\n      }\n      else {\n        iVar7 = 0x100;\n        bVar5 = *(byte *)(param_6 + 5) ^ 1 | (uVar8 == 0xa000 || uVar8 == 0x4000);\n        if (bVar5 == 0) goto LAB_00109888;\n      }\n      iVar7 = fstatat(-100,param_2,&local_1f8,iVar7);\n      if (iVar7 == 0) {\nLAB_001092f0:\n        local_289 = '\\0';\n        if ((param_6[2] != 2) &&\n           (cVar4 = same_file_ok(local_2a8,&local_288,param_2,&local_1f8,param_6), cVar4 == '\\0')) {\n          uVar10 = quotearg_n_style(1,4,param_2);\n          uVar11 = quotearg_n_style(0,4,local_2a8);\n          pcVar26 = \"%s and %s are the same file\";\n          goto LAB_00108fc8;\n        }\n        goto LAB_0010932d;\n      }\n      piVar14 = __errno_location();\n      if (*piVar14 == 0x28) {\n        if (*(char *)((long)param_6 + 0x16) == '\\0') goto LAB_00109e22;\n      }\n      else {\n        if (*piVar14 != 2) {\nLAB_00109e22:\n          uVar10 = quotearg_style(4,param_2);\n          uVar11 = dcgettext(0,\"cannot stat %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(0,*piVar14,uVar11,uVar10);\n        }\n        local_29c[0] = 1;\n      }\n      local_2e8 = (char *)0x0;\n      bVar5 = 0;\n      puVar21 = auStack_2f8;\n      if (uVar18 == 0x11) goto LAB_001092f0;\nLAB_001092dd:\n      if ((byte)local_2ac == '\\0') goto LAB_00109080;\n      goto LAB_00108f2f;\n    }\n    local_289 = '\\0';\n    bVar5 = 0;\nLAB_0010932d:\n    if (*(char *)((long)param_6 + 0x2d) == '\\0') {\n      if (*(char *)(param_6 + 6) != '\\0') goto LAB_00109eb1;\n      if ((local_2a0 & 0xf000) != 0x4000) {\nLAB_00109353:\n        puVar25 = auStack_2f8;\n        if ((param_6[2] == 2) ||\n           ((param_6[2] == 3 &&\n            (cVar4 = overwrite_ok_isra_0(param_6,param_2,&local_1f8.st_mode), puVar25 = auStack_2f8,\n            cVar4 == '\\0')))) goto LAB_00109500;\n      }\nLAB_00109368:\n      puVar25 = auStack_2f8;\n      if (local_289 == '\\0') {\n        uVar18 = local_2a0 & 0xf000;\n        if ((local_1f8.st_mode & 0xf000) == 0x4000) {\njoined_r0x0010a40e:\n          if (uVar18 == 0x4000) {\nLAB_00109404:\n            uVar18 = *param_6;\nLAB_00109406:\n            if (*(char *)(param_6 + 6) == '\\0') {\n              local_2f0._0_4_ = local_1f8.st_mode;\n              if (uVar18 != 0) goto LAB_0010a852;\n              goto LAB_0010941e;\n            }\n          }\n          else if ((*(char *)(param_6 + 6) == '\\0') || (uVar18 = *param_6, uVar18 == 0)) {\n            uVar10 = quotearg_style(4,param_2);\n            pcVar26 = \"cannot overwrite directory %s with non-directory\";\n            goto LAB_0010a440;\n          }\nLAB_0010a110:\n          if (((local_288.st_mode & 0xf000) == 0x4000) && ((local_1f8.st_mode & 0xf000) != 0x4000))\n          {\n            if (uVar18 == 0) {\n              uVar10 = quotearg_n_style_colon(0,3,param_2);\n              uVar11 = quotearg_n_style_colon(0,3,local_2a8);\n              pcVar26 = \"cannot move directory onto non-directory: %s -> %s\";\n              puVar25 = auStack_2f8;\n              goto LAB_00108fc8;\n            }\n          }\n          else if (uVar18 == 0) goto LAB_0010a12e;\n          local_2e8 = (char *)((ulong)local_2e8 & 0xffffffff00000000 | (ulong)uVar18);\n          uVar10 = last_component(local_2a8);\n          cVar4 = dot_or_dotdot(uVar10);\n          if (cVar4 != '\\0') goto LAB_0010a12e;\nLAB_0010a680:\n          if (((int)local_2e8 != 3) && (cVar4 = source_is_dst_backup_isra_0(), cVar4 != '\\0')) {\n            if (*(char *)(param_6 + 6) == '\\0') {\n              uVar10 = dcgettext(0,\"backing up %s might destroy source;  %s not copied\",5);\n            }\n            else {\n              uVar10 = dcgettext(0,\"backing up %s might destroy source;  %s not moved\",5);\n            }\n            uVar11 = quotearg_n_style(1,4,local_2a8);\n            uVar12 = quotearg_n_style(0,4,param_2);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,uVar10,uVar12,uVar11);\n          }\n          local_2e8 = (char *)backup_file_rename(param_2,*param_6);\n          if (local_2e8 == (char *)0x0) {\n            piVar14 = __errno_location();\n            if (*piVar14 != 2) {\n              uVar10 = quotearg_style(4,param_2);\n              pcVar26 = \"cannot backup %s\";\nLAB_0010ad75:\n              uVar11 = dcgettext(0,pcVar26,5);\n                    /* WARNING: Subroutine does not return */\n              error(0,*piVar14,uVar11,uVar10);\n            }\n          }\n          else {\n            sVar17 = strlen(local_2e8);\n            pcVar26 = local_2e8;\n            puVar25 = auStack_2f8;\n            while (puVar22 != auStack_2f8 + -(sVar17 + 0x18 & 0xfffffffffffff000)) {\n              puVar20 = puVar25 + -0x1000;\n              *(undefined8 *)(puVar25 + -8) = *(undefined8 *)(puVar25 + -8);\n              puVar22 = puVar25 + -0x1000;\n              puVar25 = puVar25 + -0x1000;\n            }\n            uVar27 = (ulong)((uint)(sVar17 + 0x18) & 0xff0);\n            lVar13 = -uVar27;\n            puVar23 = puVar20 + lVar13;\n            if (uVar27 != 0) {\n              *(undefined8 *)(puVar20 + -8) = *(undefined8 *)(puVar20 + -8);\n            }\n            *(undefined8 *)(puVar20 + lVar13 + -8) = 0x10a72c;\n            pcVar16 = (char *)memcpy((void *)((ulong)(puVar20 + lVar13 + 0xf) & 0xfffffffffffffff0),\n                                     local_2e8,sVar17 + 1);\n            *(undefined8 *)(puVar20 + lVar13 + -8) = 0x10a737;\n            free(pcVar26);\n            local_2e8 = pcVar16;\n          }\n          local_29c[0] = 1;\n        }\n        else {\n          if (uVar18 == 0x4000) {\n            if ((*(char *)(param_6 + 6) == '\\0') || (uVar18 = *param_6, uVar18 == 0)) {\n              uVar10 = quotearg_n_style(1,4,local_2a8);\n              uVar11 = quotearg_n_style(0,4,param_2);\n              pcVar26 = \"cannot overwrite non-directory %s with directory %s\";\n              puVar25 = auStack_2f8;\n              goto LAB_00108fc8;\n            }\n            if ((byte)local_2ac != '\\0') goto LAB_001093b4;\n            goto LAB_0010a110;\n          }\n          uVar18 = *param_6;\n          if ((byte)local_2ac == '\\0') goto LAB_00109406;\nLAB_001093b4:\n          local_2e8 = (char *)((ulong)local_2e8 & 0xffffffff00000000 |\n                              (ulong)local_2a0 & 0xffffffff0000f000);\n          if (uVar18 != 3) {\n            cVar4 = seen_file(*(undefined8 *)(param_6 + 0x10),param_2,&local_1f8);\n            if (cVar4 != '\\0') {\n              uVar10 = quotearg_n_style(1,4,local_2a8);\n              uVar11 = quotearg_n_style(0,4,param_2);\n              pcVar26 = \"will not overwrite just-created %s with %s\";\n              puVar25 = auStack_2f8;\n              goto LAB_00108fc8;\n            }\n            if ((int)local_2e8 != 0x4000) {\n              uVar18 = local_1f8.st_mode & 0xf000;\n              goto joined_r0x0010a40e;\n            }\n            goto LAB_00109404;\n          }\n          if (*(char *)(param_6 + 6) != '\\0') goto LAB_0010a110;\nLAB_0010a852:\n          local_2f0 = local_2f0 & 0xffffffff00000000 | (ulong)local_1f8.st_mode;\n          local_2e8 = (char *)((ulong)local_2e8 & 0xffffffff00000000 | (ulong)uVar18);\n          uVar10 = last_component(local_2a8);\n          cVar4 = dot_or_dotdot(uVar10);\n          if (cVar4 == '\\0') {\n            if (((uint)local_2f0 & 0xf000) == 0x4000) goto LAB_0010a12e;\n            goto LAB_0010a680;\n          }\nLAB_0010941e:\n          if ((((uint)local_2f0 & 0xf000) != 0x4000) &&\n             (((*(char *)((long)param_6 + 0x15) != '\\0' ||\n               ((*(char *)((long)param_6 + 0x22) != '\\0' && (1 < local_1f8.st_nlink)))) ||\n              ((param_6[1] == 2 && ((local_288.st_mode & 0xf000) != 0x8000)))))) {\n            iVar7 = unlink(param_2);\n            if ((iVar7 != 0) && (piVar14 = __errno_location(), *piVar14 != 2)) {\n              uVar10 = quotearg_style(4,param_2);\n              pcVar26 = \"cannot remove %s\";\n              goto LAB_0010ad75;\n            }\n            local_29c[0] = 1;\n            if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n              uVar10 = quotearg_style(4,param_2);\n              uVar11 = dcgettext(0,\"removed %s\\n\",5);\n              __printf_chk(1,uVar11,uVar10);\n            }\n          }\nLAB_0010a12e:\n          local_2e8 = (char *)0x0;\n          puVar23 = auStack_2f8;\n        }\n        uVar18 = 0x11;\n        puVar21 = puVar23;\n        goto LAB_001092dd;\n      }\nLAB_00109500:\n      uVar27 = 1;\n      puVar19 = puVar25;\n      goto LAB_001096b3;\n    }\n    if ((local_2a0 & 0xf000) == 0x4000) {\n      if (*(char *)(param_6 + 6) == '\\0') goto LAB_00109368;\nLAB_00109eb1:\n      uVar18 = abandon_move(param_6,param_2,&local_1f8);\n      uVar27 = (ulong)uVar18;\n      if ((char)uVar18 == '\\0') goto LAB_00109368;\n      puVar25 = auStack_2f8;\n      if (local_2b8 != (undefined *)0x0) {\n        *local_2b8 = 1;\n        puVar19 = auStack_2f8;\n        goto LAB_001096b3;\n      }\n      goto LAB_00109500;\n    }\n    bVar29 = false;\n    if ((*(char *)((long)param_6 + 0x1f) != '\\0') && (bVar29 = true, *(char *)(param_6 + 6) != '\\0')\n       ) {\n      bVar29 = local_1f8.st_dev != local_288.st_dev;\n    }\n    iVar7 = utimecmp(param_2,&local_1f8,&local_288,bVar29);\n    if (iVar7 < 0) {\n      if (*(char *)(param_6 + 6) == '\\0') goto LAB_00109353;\n      goto LAB_00109eb1;\n    }\n    if (local_2b8 != (undefined *)0x0) {\n      *local_2b8 = 1;\n    }\n    lVar13 = remember_copied(param_2,local_288.st_ino,local_288.st_dev);\n    puVar25 = auStack_2f8;\n    if (lVar13 == 0) goto LAB_00109500;\n    cVar4 = create_hard_link(lVar13,param_2,1,*(undefined *)((long)param_6 + 0x2e),local_2ad);\n    puVar25 = auStack_2f8;\n    if (cVar4 != '\\0') goto LAB_00109500;\n    puVar19 = auStack_2f8;\n    if (*(char *)((long)param_6 + 0x25) != '\\0') {\n      restore_default_fscreatecon_or_die();\n      puVar19 = auStack_2f8;\n    }\n    goto LAB_001096b0;\n  }\n  local_2e8 = (char *)0x0;\n  bVar5 = 0;\n  puVar21 = auStack_2f8;\nLAB_00108f2f:\n  if ((*(long *)(param_6 + 0x10) == 0) || (*(char *)(param_6 + 6) != '\\0')) {\nLAB_00109080:\n    if ((*(char *)((long)param_6 + 0x2e) != '\\0') && (*(char *)(param_6 + 6) == '\\0')) {\nLAB_00109760:\n      pcVar16 = local_2a8;\n      pcVar26 = local_2e8;\n      if ((local_2a0 & 0xf000) != 0x4000) {\n        *(undefined8 *)(puVar21 + -8) = 0x10978c;\n        emit_verbose(pcVar16,param_2,pcVar26);\n      }\n    }\n    if (uVar18 != 0) goto LAB_00109099;\n    if (*(char *)(param_6 + 6) == '\\0') {\nLAB_00109528:\n      local_2f0 = 0;\n      goto LAB_0010953a;\n    }\n    goto LAB_001094c6;\n  }\n  if (*param_6 == 0) {\n    __buf = &local_1f8;\n    if (bVar5 == 0) {\n      __buf = (stat *)local_d8;\n      *(undefined8 *)(puVar21 + -8) = 0x10a2fa;\n      iVar7 = lstat(param_2,__buf);\n      if (iVar7 != 0) goto LAB_00109080;\n    }\n    if ((__buf->st_mode & 0xf000) == 0xa000) {\n      uVar10 = *(undefined8 *)(param_6 + 0x10);\n      *(undefined8 *)(puVar21 + -8) = 0x108f83;\n      cVar4 = seen_file(uVar10,param_2);\n      if (cVar4 != '\\0') {\n        *(undefined8 *)(puVar21 + -8) = 0x108f9d;\n        uVar10 = quotearg_n_style(1,4,param_2);\n        pcVar26 = local_2a8;\n        *(undefined8 *)(puVar21 + -8) = 0x108fb3;\n        uVar11 = quotearg_n_style(0,4,pcVar26);\n        pcVar26 = \"will not copy %s through just-created symlink %s\";\n        puVar25 = puVar21;\nLAB_00108fc8:\n        *(undefined8 *)(puVar25 + -8) = 0x108fcf;\n        uVar12 = dcgettext(0,pcVar26,5);\n                    /* WARNING: Subroutine does not return */\n        *(undefined **)(puVar25 + -8) = &UNK_00108fe3;\n        error(0,0,uVar12,uVar11,uVar10);\n      }\n    }\n    goto LAB_00109080;\n  }\n  if (*(char *)((long)param_6 + 0x2e) != '\\0') goto LAB_00109760;\n  if (uVar18 == 0) goto LAB_00109528;\nLAB_00109099:\n  pcVar16 = (char *)local_288.st_ino;\n  pcVar26 = (char *)local_288.st_dev;\n  if ((*(char *)((long)param_6 + 0x2a) == '\\0') || ((local_2a0 & 0xf000) != 0x4000)) {\n    cVar4 = *(char *)(param_6 + 6);\n    if (cVar4 != '\\0') {\n      if (local_288.st_nlink == 1) {\n        *(undefined8 *)(puVar21 + -8) = 0x10a5a3;\n        local_2f0 = src_to_dest_lookup(pcVar16,pcVar26);\n        goto LAB_0010a01d;\n      }\n      if ((*(char *)((long)param_6 + 0x22) != '\\0') && (*(char *)((long)param_6 + 0x17) == '\\0'))\n      goto LAB_001098e0;\n      local_2f0 = 0;\n      goto LAB_00109195;\n    }\n    if (*(char *)((long)param_6 + 0x22) == '\\0') goto LAB_00109528;\n    local_2f0 = 0;\n    if (*(char *)((long)param_6 + 0x17) != '\\0') goto LAB_0010953a;\nLAB_001098e0:\n    if ((local_288.st_nlink < 2) &&\n       ((((byte)local_2ac == '\\0' || (param_6[1] != 3)) && (local_2f0 = 0, param_6[1] != 4))))\n    goto LAB_00109917;\n    *(undefined8 *)(puVar21 + -8) = 0x10a016;\n    local_2f0 = remember_copied(param_2,pcVar16,pcVar26);\nLAB_0010a01d:\n    uVar1 = local_2ad;\n    uVar27 = local_2f0;\n    if (local_2f0 == 0) goto LAB_00109140;\n    if ((local_2a0 & 0xf000) == 0x4000) goto LAB_001090ed;\n    uVar2 = *(undefined *)((long)param_6 + 0x2e);\n    *(undefined8 *)(puVar21 + -8) = 0x10a061;\n    cVar4 = create_hard_link(uVar27,param_2,1,uVar2,uVar1);\n    puVar25 = puVar21;\n    if (cVar4 != '\\0') goto LAB_00109500;\n    if (*(char *)((long)param_6 + 0x25) != '\\0') goto LAB_0010a073;\nLAB_00109ab8:\n    pcVar26 = local_2e8;\n    puVar19 = puVar21;\n    if (local_2e8 != (char *)0x0) {\n      *(undefined8 *)(puVar21 + -8) = 0x109ad3;\n      iVar7 = rename(pcVar26,param_2);\n      if (iVar7 != 0) {\n        *(undefined8 *)(puVar21 + -8) = 0x10a55d;\n        uVar10 = quotearg_style(4,param_2);\n        pcVar26 = \"cannot un-backup %s\";\n        goto LAB_0010970e;\n      }\n      if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n        *(undefined8 *)(puVar21 + -8) = 0x109af7;\n        uVar10 = quotearg_n_style(1,4,param_2);\n        pcVar26 = local_2e8;\n        *(undefined8 *)(puVar21 + -8) = 0x109b0d;\n        uVar11 = quotearg_n_style(0,4,pcVar26);\n        *(undefined8 *)(puVar21 + -8) = 0x109b23;\n        uVar12 = dcgettext(0,\"%s -> %s (unbackup)\\n\",5);\n        *(undefined8 *)(puVar21 + -8) = 0x109b38;\n        __printf_chk(1,uVar12,uVar11,uVar10);\n      }\n    }\n  }\n  else {\n    if ((byte)local_2ac == '\\0') {\n      *(undefined8 *)(puVar21 + -8) = 0x1090dc;\n      local_2f0 = src_to_dest_lookup(pcVar16,pcVar26);\n    }\n    else {\n      *(undefined8 *)(puVar21 + -8) = 0x109fab;\n      local_2f0 = remember_copied(param_2,pcVar16);\n    }\n    if (local_2f0 != 0) {\nLAB_001090ed:\n      pcVar26 = local_2a8;\n      uVar27 = local_2f0;\n      *(undefined8 *)(puVar21 + -8) = 0x109100;\n      cVar4 = same_name(pcVar26,uVar27);\n      uVar27 = local_2f0;\n      if (cVar4 != '\\0') {\n        *(undefined8 *)(puVar21 + -8) = 0x10ab96;\n        uVar10 = quotearg_n_style(1,4,top_level_dst_name);\n        *(undefined8 *)(puVar21 + -8) = 0x10abac;\n        uVar11 = quotearg_n_style(0,4,top_level_src_name);\n        *(undefined8 *)(puVar21 + -8) = 0x10abc2;\n        uVar12 = dcgettext(0,\"cannot copy a directory, %s, into itself, %s\",5);\n                    /* WARNING: Subroutine does not return */\n        *(undefined **)(puVar21 + -8) = &UNK_0010abd6;\n        error(0,0,uVar12,uVar11,uVar10);\n      }\n      *(undefined8 *)(puVar21 + -8) = 0x109117;\n      cVar4 = same_name(param_2,uVar27);\n      uVar27 = local_2f0;\n      if (cVar4 != '\\0') {\n        *(undefined8 *)(puVar21 + -8) = 0x10ae2d;\n        uVar10 = quotearg_style(4,top_level_src_name);\n        *(undefined8 *)(puVar21 + -8) = 0x10ae43;\n        uVar11 = dcgettext(0,\"warning: source directory %s specified more than once\",5);\n                    /* WARNING: Subroutine does not return */\n        *(undefined **)(puVar21 + -8) = &UNK_0010ae54;\n        error(0,0,uVar11,uVar10);\n      }\n      if ((param_6[1] != 4) && ((param_6[1] != 3 || ((byte)local_2ac == '\\0')))) {\n        *(undefined8 *)(puVar21 + -8) = 0x10ac8b;\n        uVar10 = quotearg_n_style(1,4,uVar27);\n        *(undefined8 *)(puVar21 + -8) = 0x10ac9d;\n        uVar11 = quotearg_n_style(0,4,param_2);\n        *(undefined8 *)(puVar21 + -8) = 0x10acb3;\n        uVar12 = dcgettext(0,\"will not create hard link %s to directory %s\",5);\n                    /* WARNING: Subroutine does not return */\n        *(undefined **)(puVar21 + -8) = &UNK_0010acc7;\n        error(0,0,uVar12,uVar11,uVar10);\n      }\n    }\nLAB_00109140:\n    cVar4 = *(char *)(param_6 + 6);\nLAB_00109917:\n    if (cVar4 != '\\0') {\nLAB_00109195:\n      pcVar26 = local_2a8;\n      if (uVar18 == 0x11) {\n        *(undefined8 *)(puVar21 + -8) = 0x109e7f;\n        iVar7 = rename(pcVar26,param_2);\n        if (iVar7 != 0) {\n          *(undefined8 *)(puVar21 + -8) = 0x109e8c;\n          puVar15 = (uint *)__errno_location();\n          uVar18 = *puVar15;\n          if (uVar18 != 0) goto LAB_0010919f;\n        }\nLAB_001094c6:\n        if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n          *(undefined8 *)(puVar21 + -8) = 0x10a3b3;\n          uVar10 = dcgettext(0,\"renamed \",5);\n          *(undefined8 *)(puVar21 + -8) = 0x10a3c2;\n          __printf_chk(1,uVar10);\n          pcVar16 = local_2a8;\n          pcVar26 = local_2e8;\n          *(undefined8 *)(puVar21 + -8) = 0x10a3d8;\n          emit_verbose(pcVar16,param_2,pcVar26);\n        }\n        if (*(char *)((long)param_6 + 0x21) != '\\0') {\n          *(undefined8 *)(puVar21 + -8) = 0x10a392;\n          set_file_security_ctx(param_2,0,1,param_6);\n        }\n        if (local_2b8 != (undefined *)0x0) {\n          *local_2b8 = 1;\n        }\n        puVar25 = puVar21;\n        if (((byte)local_2ac != '\\0') && (*(char *)((long)param_6 + 0x31) == '\\0')) {\n          uVar10 = *(undefined8 *)(param_6 + 0x10);\n          *(undefined8 *)(puVar21 + -8) = 0x10a323;\n          record_file(uVar10,param_2,&local_288);\n          uVar27 = (ulong)(byte)local_2ac;\n          puVar19 = puVar21;\n          goto LAB_001096b3;\n        }\n        goto LAB_00109500;\n      }\nLAB_0010919f:\n      if (uVar18 == 0x16) {\n        *(undefined8 *)(puVar21 + -8) = 0x10a606;\n        uVar10 = quotearg_n_style(1,4,top_level_dst_name);\n        *(undefined8 *)(puVar21 + -8) = 0x10a61c;\n        uVar11 = quotearg_n_style(0,4,top_level_src_name);\n        *(undefined8 *)(puVar21 + -8) = 0x10a632;\n        uVar12 = dcgettext(0,\"cannot move %s to a subdirectory of itself, %s\",5);\n                    /* WARNING: Subroutine does not return */\n        *(undefined **)(puVar21 + -8) = &UNK_0010a646;\n        error(0,0,uVar12,uVar11,uVar10);\n      }\n      if (uVar18 != 0x12) {\n        *(undefined8 *)(puVar21 + -8) = 0x10a342;\n        uVar10 = quotearg_n_style(1,4,param_2);\n        pcVar26 = local_2a8;\n        *(undefined8 *)(puVar21 + -8) = 0x10a358;\n        uVar11 = quotearg_n_style(0,4,pcVar26);\n        *(undefined8 *)(puVar21 + -8) = 0x10a36e;\n        uVar12 = dcgettext(0,\"cannot move %s to %s\",5);\n        goto LAB_00109f6b;\n      }\n      uVar18 = local_2a0 & 0xf000;\n      if (uVar18 == 0x4000) {\n        *(undefined8 *)(puVar21 + -8) = 0x10a3e5;\n        iVar7 = rmdir(param_2);\n        if (iVar7 != 0) {\n          *(undefined8 *)(puVar21 + -8) = 0x10a3f2;\n          puVar15 = (uint *)__errno_location();\n          if (*puVar15 != 2) goto LAB_00109f21;\n        }\n      }\n      else {\n        *(undefined8 *)(puVar21 + -8) = 0x1091d6;\n        iVar7 = unlink(param_2);\n        if (iVar7 != 0) {\n          *(undefined8 *)(puVar21 + -8) = 0x109f15;\n          puVar15 = (uint *)__errno_location();\n          if (*puVar15 != 2) {\nLAB_00109f21:\n            *(undefined8 *)(puVar21 + -8) = 0x109f33;\n            uVar10 = quotearg_n_style(1,4,param_2);\n            pcVar26 = local_2a8;\n            *(undefined8 *)(puVar21 + -8) = 0x109f49;\n            uVar11 = quotearg_n_style(0,4,pcVar26);\n            *(undefined8 *)(puVar21 + -8) = 0x109f5f;\n            uVar12 = dcgettext(0,\"inter-device move failed: %s to %s; unable to remove target\",5);\n            uVar18 = *puVar15;\nLAB_00109f6b:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar21 + -8) = &UNK_00109f74;\n            error(0,uVar18,uVar12,uVar11,uVar10);\n          }\n        }\n        if ((*(char *)((long)param_6 + 0x2e) != '\\0') && (uVar18 != 0x4000)) {\n          *(undefined8 *)(puVar21 + -8) = 0x109200;\n          uVar10 = dcgettext(0,\"copied \",5);\n          *(undefined8 *)(puVar21 + -8) = 0x10920f;\n          __printf_chk(1,uVar10);\n          pcVar16 = local_2a8;\n          pcVar26 = local_2e8;\n          *(undefined8 *)(puVar21 + -8) = 0x109225;\n          emit_verbose(pcVar16,param_2,pcVar26);\n        }\n      }\n      local_29c[0] = 1;\n    }\nLAB_0010953a:\n    bVar5 = local_29c[0];\n    uVar8 = local_2a0;\n    pcVar26 = local_2a8;\n    uVar18 = local_2a0;\n    if (*(char *)((long)param_6 + 0x2b) != '\\0') {\n      uVar18 = param_6[4];\n    }\n    puVar19 = puVar21;\n    if (*(char *)((long)param_6 + 0x1d) == '\\0') {\n      if ((local_2a0 & 0xf000) == 0x4000) {\n        *(undefined8 *)(puVar21 + -8) = 0x1099b8;\n        cVar4 = set_process_security_ctx(pcVar26,param_2,uVar8,bVar5,param_6);\n        if (cVar4 != '\\0') {\n          local_2b8 = (undefined *)\n                      ((ulong)local_2b8 & 0xffffffff00000000 | (ulong)uVar18 & 0xffffffff00000012);\n          goto LAB_001099cc;\n        }\n      }\n      else {\n        *(undefined8 *)(puVar21 + -8) = 0x10969b;\n        cVar4 = set_process_security_ctx(pcVar26,param_2,uVar8,bVar5,param_6);\n        local_2b8 = (undefined *)((ulong)local_2b8 & 0xffffffff00000000);\n        if (cVar4 != '\\0') goto LAB_001095a7;\n      }\n    }\n    else {\n      *(undefined8 *)(puVar21 + -8) = 0x10957f;\n      cVar4 = set_process_security_ctx(pcVar26,param_2,uVar8,bVar5,param_6);\n      if (cVar4 != '\\0') {\n        local_2b8 = (undefined *)\n                    ((ulong)local_2b8 & 0xffffffff00000000 | (ulong)uVar18 & 0xffffffff0000003f);\n        if ((uVar8 & 0xf000) == 0x4000) {\nLAB_001099cc:\n          pcVar26 = local_2c8;\n          *(undefined8 *)(puVar21 + -8) = 0x1099e9;\n          bVar28 = is_ancestor_isra_0(&local_288,&local_288.st_ino,pcVar26);\n          pcVar26 = local_2a8;\n          puVar20 = puVar21;\n          if (bVar28 != 0) {\n            *(undefined8 *)(puVar21 + -8) = 0x10a8d9;\n            uVar10 = quotearg_style(4,pcVar26);\n            pcVar26 = \"cannot copy cyclic symbolic link %s\";\n            goto LAB_00109645;\n          }\n          for (; puVar20 != puVar21; puVar20 = puVar20 + -0x1000) {\n            *(undefined8 *)(puVar20 + -8) = *(undefined8 *)(puVar20 + -8);\n          }\n          puVar19 = puVar20 + -0x20;\n          puVar23 = puVar20 + -0x20;\n          puVar24 = puVar20 + -0x20;\n          puVar21 = puVar20 + -0x20;\n          puVar25 = puVar20 + -0x20;\n          *(undefined8 *)(puVar20 + -8) = *(undefined8 *)(puVar20 + -8);\n          local_2c0 = (char **)((ulong)(puVar20 + -0x11) & 0xfffffffffffffff0);\n          *local_2c0 = local_2c8;\n          local_2c0[1] = (char *)local_288.st_ino;\n          local_2c0[2] = (char *)local_288.st_dev;\n          local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00 | (ulong)local_29c[0]);\n          if ((local_29c[0] == 0) && ((local_1f8.st_mode & 0xf000) == 0x4000)) {\n            local_2b8 = (undefined *)((ulong)local_2b8 & 0xffffffff00000000);\n            uVar18 = 0xff00;\n            bVar5 = 0;\n            if ((*(ulong *)(param_6 + 8) & 0xff000000ff00) != 0) {\n              uVar1 = *(undefined *)((long)param_6 + 0x25);\n              *(undefined8 *)(puVar20 + -0x28) = 0x10a921;\n              uVar18 = set_file_security_ctx(param_2,uVar1,0,param_6);\n              if (((char)uVar18 == '\\0') && (*(char *)((long)param_6 + 0x26) != '\\0'))\n              goto LAB_00109aa0;\n              local_2b8 = (undefined *)((ulong)local_2b8 & 0xffffffff00000000);\n              bVar5 = local_29c[0];\n            }\n          }\n          else {\n            *(undefined8 *)(puVar20 + -0x28) = 0x10a1bf;\n            iVar7 = mkdir(param_2,~(uint)local_2b8 & uVar18 & 0xfff);\n            if (iVar7 != 0) {\n              *(undefined8 *)(puVar20 + -0x28) = 0x10a80d;\n              uVar10 = quotearg_style(4,param_2);\n              pcVar26 = \"cannot create directory %s\";\n              goto LAB_0010a81c;\n            }\n            *(undefined8 *)(puVar20 + -0x28) = 0x10a1d6;\n            iVar7 = lstat(param_2,&local_1f8);\n            uVar18 = local_1f8.st_mode;\n            if (iVar7 != 0) {\n              *(undefined8 *)(puVar20 + -0x28) = 0x10ac44;\n              uVar10 = quotearg_style(4,param_2);\n              pcVar26 = \"cannot stat %s\";\n              puVar25 = puVar20 + -0x20;\n              goto LAB_0010a81c;\n            }\n            local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00);\n            if ((local_1f8.st_mode & 0x1c0) != 0x1c0) {\n              uVar8 = local_1f8.st_mode | 0x1c0;\n              *(undefined8 *)(puVar20 + -0x28) = 0x10a20c;\n              iVar7 = chmod(param_2,uVar8);\n              local_2f4 = uVar18;\n              local_2c8 = (char *)CONCAT71(local_2c8._1_7_,1);\n              if (iVar7 != 0) {\n                *(undefined8 *)(puVar20 + -0x28) = 0x10af20;\n                uVar10 = quotearg_style(4,param_2);\n                pcVar26 = \"setting permissions for %s\";\n                puVar25 = puVar20 + -0x20;\n                goto LAB_0010a81c;\n              }\n            }\n            if (*local_2d0 == '\\0') {\n              *(undefined8 *)(puVar20 + -0x28) = 0x10ac28;\n              remember_copied(param_2,local_1f8.st_ino,local_1f8.st_dev);\n              *local_2d0 = '\\x01';\n            }\n            pcVar26 = local_2a8;\n            pcVar16 = local_2d0;\n            if (*(char *)((long)param_6 + 0x2e) != '\\0') {\n              if (*(char *)(param_6 + 6) == '\\0') {\n                *(undefined8 *)(puVar20 + -0x28) = 0x10ac69;\n                uVar18 = emit_verbose(pcVar26,param_2,0);\n                bVar5 = local_29c[0];\n                goto LAB_0010a27e;\n              }\n              *(undefined8 *)(puVar20 + -0x28) = 0x10a24f;\n              uVar10 = quotearg_style(4,param_2);\n              *(undefined8 *)(puVar20 + -0x28) = 0x10a265;\n              uVar11 = dcgettext(0,\"created directory %s\\n\",5);\n              *(undefined8 *)(puVar20 + -0x28) = 0x10a277;\n              pcVar16 = (char *)__printf_chk(1,uVar11,uVar10);\n            }\n            uVar18 = (uint)pcVar16;\n            bVar5 = local_29c[0];\n          }\nLAB_0010a27e:\n          bVar6 = local_2e0 != (char **)0x0 & *(byte *)(param_6 + 7);\n          uVar18 = uVar18 & 0xffffff00 | (uint)bVar6;\n          if ((bVar6 == 0) || (*local_2e0 == (char *)local_288.st_dev)) {\n            *(undefined **)(puVar20 + -0x28) = local_2d8;\n            pcVar26 = local_2a8;\n            *(char **)(puVar20 + -0x30) = local_2d0;\n            ppcVar3 = local_2c0;\n            *(undefined8 *)(puVar20 + -0x38) = 0x10a2bf;\n            uVar18 = copy_dir(pcVar26,param_2,bVar5,&local_288,ppcVar3);\n          }\n          uVar27 = (ulong)uVar18;\n          if ((byte)local_2ac != '\\0') {\n            local_2c0 = (char **)((ulong)local_2c0 & 0xffffffffffffff00 | (ulong)(byte)uVar18);\n            local_2d0._0_1_ = 0;\n            local_2c8._0_1_ = 0;\nLAB_00109bb8:\n            local_2ac._0_1_ = (byte)local_2c8;\n            if (*(long *)(param_6 + 0x10) != 0) {\n              local_2d0 = (char *)((ulong)local_2d0 & 0xffffffffffffff00 | (ulong)(byte)local_2d0);\n              local_2ac = local_2ac & 0xffffff00 | (uint)(byte)local_2c8;\n              *(undefined8 *)(puVar23 + -8) = 0x109bdf;\n              iVar7 = lstat(param_2,(stat *)local_d8);\n              if (iVar7 == 0) {\n                uVar10 = *(undefined8 *)(param_6 + 0x10);\n                *(undefined8 *)(puVar23 + -8) = 0x109c02;\n                record_file(uVar10,param_2,(stat *)local_d8);\n              }\n            }\n            uVar27 = (ulong)local_2c0 & 0xff;\n            local_2c0 = (char **)((ulong)local_2c0 & 0xffffffffffffff00 | (ulong)local_2c8 & 0xff);\n            puVar24 = puVar23;\n            goto LAB_00109c2d;\n          }\n          if (*(char *)((long)param_6 + 0x1f) != '\\0') {\n            *(undefined8 *)(puVar20 + -0x28) = 0x10a77b;\n            local_d8 = get_stat_mtime_isra_0(local_288.st_atim.tv_sec,local_288.st_atim.tv_nsec);\n            local_d8._0_8_ = SUB168(local_d8,0);\n            local_d8._8_8_ = SUB168(local_d8 >> 0x40,0);\n            *(undefined8 *)(puVar20 + -0x28) = 0x10a79c;\n            local_c8._0_16_ =\n                 get_stat_mtime_isra_0(local_288.st_mtim.tv_sec,local_288.st_mtim.tv_nsec);\n            local_2ac._0_1_ = 0;\n            local_c8._0_8_ = SUB168(local_c8._0_16_,0);\n            local_c8._8_8_ = SUB168(local_c8._0_16_ >> 0x40,0);\n            local_2c0 = (char **)((ulong)local_2c0 & 0xffffffffffffff00 | (ulong)local_2c8 & 0xff);\nLAB_0010a7ba:\n            local_2ac = local_2ac & 0xffffff00 | (uint)(byte)local_2ac;\n            *(undefined8 *)(puVar24 + -8) = 0x10a7d0;\n            iVar7 = utimens(param_2,local_d8);\n            goto LAB_00109cc5;\n          }\n          local_2c0 = (char **)((ulong)local_2c0 & 0xffffffffffffff00 | (ulong)local_2c8 & 0xff);\nLAB_00109d29:\n          bVar28 = local_29c[0];\n          if ((*(char *)((long)param_6 + 0x1d) != '\\0') &&\n             (((local_29c[0] != 0 || (local_288.st_uid != local_1f8.st_uid)) ||\n              (local_288.st_gid != local_1f8.st_gid)))) {\n            *(undefined8 *)(puVar19 + -8) = 0x109d6c;\n            iVar7 = set_owner(param_6,param_2,0xffffffff,&local_288,bVar28,&local_1f8);\n            if (iVar7 == -1) goto LAB_001096b0;\n            if (iVar7 == 0) {\n              local_2a0 = local_2a0 & 0xfffff1ff;\n            }\n          }\n          if (*(char *)((long)param_6 + 0x27) != '\\0') {\n            *(undefined8 *)(puVar19 + -8) = 0x109d93;\n            cVar4 = copy_attr_isra_0();\n            if ((cVar4 == '\\0') && (*(char *)(param_6 + 10) != '\\0')) goto LAB_001096b0;\n          }\n          uVar18 = local_2a0;\n          pcVar26 = local_2a8;\n          if ((*(ulong *)(param_6 + 6) & 0xff0000000000ff) == 0) {\n            if (*(char *)((long)param_6 + 0x2b) == '\\0') {\n              if ((*(char *)(param_6 + 8) == '\\0') || (local_29c[0] == 0)) {\n                if ((uint)local_2b8 == 0) {\nLAB_0010a98e:\n                  if ((char)local_2c0 == '\\0') goto LAB_001096b3;\n                }\n                else {\n                  *(undefined8 *)(puVar19 + -8) = 0x10adbe;\n                  uVar18 = cached_umask();\n                  local_2b8 = (undefined *)\n                              ((ulong)local_2b8 & 0xffffffff00000000 |\n                              (ulong)((uint)local_2b8 & ~uVar18));\n                  if (((uint)local_2b8 & ~uVar18) == 0) goto LAB_0010a98e;\n                  if ((char)local_2c0 != '\\x01') {\n                    if (local_29c[0] != 0) {\n                      *(undefined8 *)(puVar19 + -8) = 0x10b04f;\n                      iVar7 = lstat(param_2,&local_1f8);\n                      pcVar26 = param_2;\n                      if (iVar7 != 0) goto LAB_001096f5;\n                    }\n                    local_2f4 = local_1f8.st_mode;\n                    if (((uint)local_2b8 & ~local_1f8.st_mode) == 0) goto LAB_001096b3;\n                  }\n                }\n                local_2b8._0_4_ = local_2f4 | (uint)local_2b8;\n                *(undefined8 *)(puVar19 + -8) = 0x10a9af;\n                iVar7 = chmod(param_2,(uint)local_2b8);\n                if (iVar7 != 0) {\n                  *(undefined8 *)(puVar19 + -8) = 0x10a9c4;\n                  uVar10 = quotearg_style(4,param_2);\n                  *(undefined8 *)(puVar19 + -8) = 0x10a9da;\n                  uVar11 = dcgettext(0,\"preserving permissions for %s\",5);\n                  *(undefined8 *)(puVar19 + -8) = 0x10a9e2;\n                  piVar14 = __errno_location();\n                  iVar7 = *piVar14;\n                    /* WARNING: Subroutine does not return */\n                  *(undefined8 *)(puVar19 + -8) = 0x10a9f3;\n                  error(0,iVar7,uVar11,uVar10);\n                }\n                goto LAB_001096b3;\n              }\n              uVar18 = 0x1b6;\n              if ((local_2a0 & 0x7000) == 0x4000) {\n                uVar18 = 0x1ff;\n              }\n              *(undefined8 *)(puVar19 + -8) = 0x109df2;\n              uVar8 = cached_umask();\n              uVar18 = ~uVar8 & uVar18;\n            }\n            else {\n              uVar18 = param_6[4];\n            }\n            *(undefined8 *)(puVar19 + -8) = 0x109e05;\n            iVar7 = set_acl(param_2,0xffffffff,uVar18);\n            if (iVar7 == 0) goto LAB_001096b3;\n            goto LAB_001096b0;\n          }\n          *(undefined8 *)(puVar19 + -8) = 0x10aa80;\n          iVar7 = copy_acl(pcVar26,0xffffffff,param_2,0xffffffff,uVar18);\n          if (iVar7 == 0) goto LAB_001096b3;\n          cVar4 = *(char *)(param_6 + 9);\n        }\n        else {\nLAB_001095a7:\n          pcVar26 = local_2a8;\n          uVar1 = local_2ad;\n          uVar8 = uVar8 & 0xf000;\n          if (*(char *)(param_6 + 0xb) == '\\0') {\n            if (*(char *)((long)param_6 + 0x17) == '\\0') {\n              if ((uVar8 != 0x8000) && ((*(char *)(param_6 + 5) == '\\0' || (uVar8 == 0xa000)))) {\n                puVar25 = puVar21;\n                if (uVar8 == 0x1000) {\n                  local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00);\n                  uVar18 = ~(uint)local_2b8 & local_2a0;\n                  *(undefined8 *)(puVar21 + -8) = 0x10acf1;\n                  iVar7 = mknod(param_2,uVar18,0);\n                  local_2d0._0_1_ = (byte)local_2c8;\n                  if (iVar7 != 0) {\n                    *(undefined8 *)(puVar21 + -8) = 0x10ad12;\n                    iVar7 = mkfifo(param_2,uVar18 & 0xffffefff);\n                    local_2d0._0_1_ = (byte)local_2c8;\n                    if (iVar7 != 0) {\n                      *(undefined8 *)(puVar21 + -8) = 0x10ad2f;\n                      uVar10 = quotearg_style(4,param_2);\n                      pcVar26 = \"cannot create fifo %s\";\n                      goto LAB_0010a81c;\n                    }\n                  }\n                }\n                else {\n                  if (((uVar8 >> 8 & 0xbf) != 0x20) && (uVar8 != 0xc000)) {\n                    if (uVar8 != 0xa000) {\n                      *(undefined8 *)(puVar21 + -8) = 0x10ada5;\n                      uVar10 = quotearg_style(4,pcVar26);\n                      pcVar26 = \"%s has unknown file type\";\n                      goto LAB_00109645;\n                    }\n                    *(undefined8 *)(puVar21 + -8) = 0x10a49b;\n                    pcVar16 = (char *)areadlink_with_size(pcVar26,local_288.st_size);\n                    pcVar26 = local_2a8;\n                    if (pcVar16 == (char *)0x0) {\n                      *(undefined8 *)(puVar21 + -8) = 0x10b013;\n                      uVar10 = quotearg_style(4,pcVar26);\n                      pcVar26 = \"cannot read symbolic link %s\";\n                      goto LAB_0010a81c;\n                    }\n                    *(undefined8 *)(puVar21 + -8) = 0x10a4bb;\n                    iVar7 = force_symlinkat(pcVar16,0xffffff9c,param_2);\n                    if (iVar7 < 0) {\n                      *(undefined8 *)(puVar21 + -8) = 0x10af70;\n                      piVar14 = __errno_location();\n                      iVar7 = *piVar14;\n                      if (iVar7 != 0) {\n                        if (((*(char *)((long)param_6 + 0x2d) == '\\0') || (local_29c[0] != 0)) ||\n                           ((local_1f8.st_mode & 0xf000) != 0xa000)) {\nLAB_0010afa1:\n                          *(undefined8 *)(puVar21 + -8) = 0x10afa9;\n                          free(pcVar16);\n                          *(undefined8 *)(puVar21 + -8) = 0x10afb6;\n                          uVar10 = quotearg_style(4,param_2);\n                          *(undefined8 *)(puVar21 + -8) = 0x10afcc;\n                          uVar11 = dcgettext(0,\"cannot create symbolic link %s\",5);\n                    /* WARNING: Subroutine does not return */\n                          *(undefined **)(puVar21 + -8) = &UNK_0010afde;\n                          error(0,iVar7,uVar11,uVar10);\n                        }\n                        uVar27 = 0xffffffffffffffff;\n                        pcVar26 = pcVar16;\n                        do {\n                          if (uVar27 == 0) break;\n                          uVar27 = uVar27 - 1;\n                          cVar4 = *pcVar26;\n                          pcVar26 = pcVar26 + (ulong)bVar28 * -2 + 1;\n                        } while (cVar4 != '\\0');\n                        if (local_1f8.st_size != ~uVar27 - 1) goto LAB_0010afa1;\n                        *(undefined8 *)(puVar21 + -8) = 0x10b091;\n                        pcVar26 = (char *)areadlink_with_size(param_2);\n                        if (pcVar26 == (char *)0x0) goto LAB_0010afa1;\n                        local_2c8 = pcVar26;\n                        *(undefined8 *)(puVar21 + -8) = 0x10b0ac;\n                        iVar9 = strcmp(pcVar26,pcVar16);\n                        pcVar26 = local_2c8;\n                        if (iVar9 != 0) {\n                          *(undefined8 *)(puVar21 + -8) = 0x10b0c6;\n                          free(pcVar26);\n                          goto LAB_0010afa1;\n                        }\n                        *(undefined8 *)(puVar21 + -8) = 0x10b0bc;\n                        free(pcVar26);\n                      }\n                    }\n                    *(undefined8 *)(puVar21 + -8) = 0x10a4cb;\n                    free(pcVar16);\n                    if (*(char *)((long)param_6 + 0x25) != '\\0') {\n                      *(undefined8 *)(puVar21 + -8) = 0x10affd;\n                      restore_default_fscreatecon_or_die();\n                    }\n                    __group = local_288.st_gid;\n                    __owner = local_288.st_uid;\n                    if (*(char *)((long)param_6 + 0x1d) != '\\0') {\n                      *(undefined8 *)(puVar21 + -8) = 0x10a4f3;\n                      iVar7 = lchown(param_2,__owner,__group);\n                      if (iVar7 != 0) {\n                        *(undefined8 *)(puVar21 + -8) = 0x10a503;\n                        cVar4 = chown_failure_ok(param_6);\n                        if (cVar4 == '\\0') {\n                          *(undefined8 *)(puVar21 + -8) = 0x10a51e;\n                          uVar10 = dcgettext(0,\"failed to preserve ownership for %s\",5);\n                          *(undefined8 *)(puVar21 + -8) = 0x10a526;\n                          piVar14 = __errno_location();\n                          iVar7 = *piVar14;\n                    /* WARNING: Subroutine does not return */\n                          *(undefined **)(puVar21 + -8) = &UNK_0010a537;\n                          error(0,iVar7,uVar10,param_2);\n                        }\n                      }\n                    }\n                    goto LAB_00109b72;\n                  }\n                  local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00);\n                  uVar18 = ~(uint)local_2b8 & local_2a0;\n                  *(undefined8 *)(puVar21 + -8) = 0x10aab4;\n                  iVar7 = mknod(param_2,uVar18,local_288.st_rdev);\n                  local_2d0._0_1_ = (byte)local_2c8;\n                  if (iVar7 != 0) {\n                    *(undefined8 *)(puVar21 + -8) = 0x10aad1;\n                    uVar10 = quotearg_style(4,param_2);\n                    pcVar26 = \"cannot create special file %s\";\nLAB_0010a81c:\n                    *(undefined8 *)(puVar25 + -8) = 0x10a823;\n                    uVar11 = dcgettext(0,pcVar26,5);\n                    *(undefined8 *)(puVar25 + -8) = 0x10a82b;\n                    piVar14 = __errno_location();\n                    iVar7 = *piVar14;\n                    /* WARNING: Subroutine does not return */\n                    *(undefined **)(puVar25 + -8) = &UNK_0010a83c;\n                    error(0,iVar7,uVar11,uVar10);\n                  }\n                }\nLAB_0010a5e4:\n                local_2c8._0_1_ = 0;\n                goto LAB_00109b7b;\n              }\n              uVar27 = (ulong)local_2b8 & 0xffffffff;\n              *(stat **)(puVar21 + -0x10) = &local_288;\n              local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00);\n              *(undefined8 *)(puVar21 + -0x18) = 0x109a82;\n              local_2d0._0_1_ = copy_reg(pcVar26,param_2,param_6,uVar18 & 0x1ff,uVar27,local_29c);\n              if ((byte)local_2d0 != 0) goto LAB_00109b7b;\n            }\n            else {\n              uVar2 = *(undefined *)((long)param_6 + 0x16);\n              local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00);\n              *(undefined8 *)(puVar21 + -8) = 0x10a5d4;\n              cVar4 = create_hard_link(pcVar26,param_2,uVar2,0,uVar1);\n              local_2d0._0_1_ = (byte)local_2c8;\n              if (cVar4 != '\\0') goto LAB_0010a5e4;\n            }\nLAB_00109aa0:\n            if (*(char *)((long)param_6 + 0x25) != '\\0') {\nLAB_0010a073:\n              *(undefined8 *)(puVar21 + -8) = 0x10a078;\n              restore_default_fscreatecon_or_die();\n            }\n            if (local_2f0 == 0) {\n              *(undefined8 *)(puVar21 + -8) = 0x10a58b;\n              forget_created(local_288.st_ino,local_288.st_dev);\n            }\n            goto LAB_00109ab8;\n          }\n          if (*local_2a8 != '/') {\n            *(undefined8 *)(puVar21 + -8) = 0x1095cd;\n            pcVar26 = (char *)dir_name(param_2);\n            if ((*pcVar26 != '.') || (pcVar26[1] != '\\0')) {\n              *(undefined8 *)(puVar21 + -8) = 0x1095ec;\n              iVar7 = stat(\".\",&local_168);\n              if (iVar7 == 0) {\n                *(undefined8 *)(puVar21 + -8) = 0x109603;\n                iVar7 = stat(pcVar26,(stat *)local_d8);\n                if ((iVar7 == 0) &&\n                   ((local_168.st_ino != local_d8._8_8_ || (local_168.st_dev != local_d8._0_8_)))) {\n                  *(undefined8 *)(puVar21 + -8) = 0x109627;\n                  free(pcVar26);\n                  *(undefined8 *)(puVar21 + -8) = 0x109636;\n                  uVar10 = quotearg_n_style_colon(0,3,param_2);\n                  pcVar26 = \"%s: can make relative symbolic links only in current directory\";\nLAB_00109645:\n                  *(undefined8 *)(puVar21 + -8) = 0x10964c;\n                  uVar11 = dcgettext(0,pcVar26,5);\n                    /* WARNING: Subroutine does not return */\n                  *(undefined **)(puVar21 + -8) = &UNK_0010965d;\n                  error(0,0,uVar11,uVar10);\n                }\n              }\n            }\n            *(undefined8 *)(puVar21 + -8) = 0x109b52;\n            free(pcVar26);\n          }\n          pcVar26 = local_2a8;\n          uVar1 = *(undefined *)((long)param_6 + 0x16);\n          *(undefined8 *)(puVar21 + -8) = 0x109b6a;\n          iVar7 = force_symlinkat(pcVar26,0xffffff9c,param_2,uVar1);\n          pcVar26 = local_2a8;\n          if (iVar7 < 0) {\n            *(undefined8 *)(puVar21 + -8) = 0x10aafb;\n            uVar10 = quotearg_n_style(1,4,pcVar26);\n            *(undefined8 *)(puVar21 + -8) = 0x10ab0d;\n            uVar11 = quotearg_n_style(0,4,param_2);\n            *(undefined8 *)(puVar21 + -8) = 0x10ab23;\n            uVar12 = dcgettext(0,\"cannot create symbolic link %s to %s\",5);\n            *(undefined8 *)(puVar21 + -8) = 0x10ab2b;\n            piVar14 = __errno_location();\n            iVar7 = *piVar14;\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar21 + -8) = &UNK_0010ab3f;\n            error(0,iVar7,uVar12,uVar11,uVar10);\n          }\nLAB_00109b72:\n          local_2c8._0_1_ = 1;\n          local_2d0._0_1_ = 0;\nLAB_00109b7b:\n          bVar28 = uVar8 != 0x4000;\n          if (((local_29c[0] == 0) && (bVar5 = (*(byte *)(param_6 + 5) ^ 1) & bVar28, bVar5 != 0))\n             && (bVar28 = bVar5, (*(ulong *)(param_6 + 8) & 0xff000000ff00) != 0)) {\n            uVar1 = *(undefined *)((long)param_6 + 0x25);\n            local_2d0 = (char *)((ulong)local_2d0 & 0xffffffffffffff00 | (ulong)(byte)local_2d0);\n            local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00 | (ulong)(byte)local_2c8);\n            *(undefined8 *)(puVar21 + -8) = 0x10a0b6;\n            bVar28 = set_file_security_ctx(param_2,uVar1,0,param_6);\n            if ((bVar28 == 0) && (bVar28 = bVar5, *(char *)((long)param_6 + 0x26) != '\\0'))\n            goto LAB_00109aa0;\n          }\n          bVar29 = (byte)local_2ac != '\\0';\n          uVar27 = 1;\n          puVar24 = puVar21;\n          local_2ac._0_1_ = (byte)local_2c8;\n          if (bVar29) {\n            local_2c8 = (char *)((ulong)local_2c8 & 0xffffffffffffff00);\n            puVar23 = puVar21;\n            goto LAB_00109bb8;\n          }\nLAB_00109c2d:\n          puVar19 = puVar24;\n          if (((*(char *)((long)param_6 + 0x17) != '\\0') && (bVar28 != 0)) || ((byte)local_2d0 != 0)\n             ) goto LAB_001096b3;\n          if (*(char *)((long)param_6 + 0x1f) != '\\0') {\n            local_2ac = local_2ac & 0xffffff00 | (uint)(byte)local_2ac;\n            *(undefined8 *)(puVar24 + -8) = 0x109c69;\n            local_d8 = get_stat_mtime_isra_0(local_288.st_atim.tv_sec,local_288.st_atim.tv_nsec);\n            local_d8._0_8_ = SUB168(local_d8,0);\n            local_d8._8_8_ = SUB168(local_d8 >> 0x40,0);\n            *(undefined8 *)(puVar24 + -8) = 0x109c8a;\n            local_c8._0_16_ =\n                 get_stat_mtime_isra_0(local_288.st_mtim.tv_sec,local_288.st_mtim.tv_nsec);\n            local_c8._0_8_ = SUB168(local_c8._0_16_,0);\n            local_c8._8_8_ = SUB168(local_c8._0_16_ >> 0x40,0);\n            if ((byte)local_2ac == 0) goto LAB_0010a7ba;\n            *(undefined8 *)(puVar24 + -8) = 0x109cb8;\n            iVar7 = utimens_symlink(param_2,local_d8);\nLAB_00109cc5:\n            puVar19 = puVar24;\n            if (iVar7 != 0) {\n              local_2ac = local_2ac & 0xffffff00 | (uint)(byte)local_2ac;\n              *(undefined8 *)(puVar24 + -8) = 0x109cdd;\n              uVar10 = quotearg_style(4,param_2);\n              *(undefined8 *)(puVar24 + -8) = 0x109cf3;\n              uVar11 = dcgettext(0,\"preserving times for %s\",5);\n              *(undefined8 *)(puVar24 + -8) = 0x109cfb;\n              piVar14 = __errno_location();\n              iVar7 = *piVar14;\n                    /* WARNING: Subroutine does not return */\n              *(undefined **)(puVar24 + -8) = &UNK_00109d0c;\n              error(0,iVar7,uVar11,uVar10);\n            }\n          }\n          if ((byte)local_2ac == 0) goto LAB_00109d29;\n          if (*(char *)((long)param_6 + 0x27) == '\\0') goto LAB_001096b3;\n          *(undefined8 *)(puVar19 + -8) = 0x109ef7;\n          cVar4 = copy_attr_isra_0();\n          if (cVar4 != '\\0') goto LAB_001096b3;\n          cVar4 = *(char *)(param_6 + 10);\n        }\n        if (cVar4 == '\\0') goto LAB_001096b3;\n      }\n    }\n  }\nLAB_001096b0:\n  uVar27 = 0;\nLAB_001096b3:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar27;\n  }\n                    /* WARNING: Subroutine does not return */\n  *(undefined8 *)(puVar19 + -8) = 0x10b064;\n  __stack_chk_fail();\n}\n\n", 
    "001040f1": "\nvoid leave_dir_isra_0_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00124338": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memmove@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00115f10": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  long lVar10;\n  void *pvVar11;\n  void *pvVar12;\n  uint uVar13;\n  \n  pvVar11 = *param_1;\n  if (pvVar11 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar13 = *(uint *)(param_1 + 9);\n  if ((uVar13 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar11 + 0x74);\n  *(undefined2 *)((long)pvVar11 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = fts_stat(param_1,pvVar11,0);\n    *(undefined2 *)((long)pvVar11 + 0x70) = uVar6;\n    return pvVar11;\n  }\n  sVar2 = *(short *)((long)pvVar11 + 0x70);\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_0011607f;\n      goto LAB_00115fa0;\n    }\n    sVar7 = fts_stat(param_1,pvVar11,1);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar11;\n      if (sVar7 != 0xb) {\n        return pvVar11;\n      }\n      goto LAB_00116249;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                             &DAT_0011c32b);\n      *(int *)((long)pvVar11 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n        *(int *)((long)pvVar11 + 0x40) = iVar8;\n        *param_1 = pvVar11;\n        return pvVar11;\n      }\n      *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\nLAB_0011619a:\n      *param_1 = pvVar11;\n      if (sVar7 == 0xb) goto LAB_00116249;\n      goto LAB_001161a8;\n    }\n    *param_1 = pvVar11;\nLAB_001161b2:\n    if (*(long *)((long)pvVar11 + 0x58) != 0) goto LAB_001161c3;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_0011611a;\nLAB_0011607f:\n      if (((uVar13 & 0x40) != 0) && (*(void **)((long)pvVar11 + 0x78) != param_1[3])) {\nLAB_0011611a:\n        if ((*(byte *)((long)pvVar11 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar11 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          fts_lfree();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar11 + 0x70) = 6;\n        leave_dir_isra_0(uVar3,param_1 + 0xb,pvVar11);\n        return pvVar11;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_00116298:\n        pvVar12 = (void *)fts_build(param_1,3);\n        param_1[1] = pvVar12;\n        if (pvVar12 == (void *)0x0) {\n          uVar13 = *(uint *)(param_1 + 9);\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar11 + 0x40) != 0) && (*(short *)((long)pvVar11 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n          }\n          leave_dir_isra_0(uVar13,param_1 + 0xb,pvVar11);\n          return pvVar11;\n        }\n      }\n      else {\n        if ((uVar13 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar13 & 0xffffdfff;\n          fts_lfree();\n          param_1[1] = (void *)0x0;\n          goto LAB_00116298;\n        }\n        iVar8 = fts_safe_changedir(param_1,pvVar11,0xffffffff,*(undefined8 *)((long)pvVar11 + 0x30))\n        ;\n        if (iVar8 == 0) {\n          pvVar12 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 1;\n          *(int *)((long)pvVar11 + 0x40) = iVar8;\n          pvVar12 = param_1[1];\n          for (pvVar11 = pvVar12; pvVar11 != (void *)0x0; pvVar11 = *(void **)((long)pvVar11 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar11 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar11 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n    }\n    else {\nLAB_00115fa0:\n      do {\n        pvVar12 = *(void **)((long)pvVar11 + 0x10);\n        if (pvVar12 == (void *)0x0) {\n          pvVar12 = *(void **)((long)pvVar11 + 8);\n          if (*(long *)((long)pvVar12 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar12 + 0x48);\n            *param_1 = pvVar12;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar12 = (void *)fts_build(param_1,3);\n            if (pvVar12 != (void *)0x0) {\n              free(pvVar11);\n              goto LAB_001161fa;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar12 = *(void **)((long)pvVar11 + 8);\n          }\n          *param_1 = pvVar12;\n          free(pvVar11);\n          if (*(long *)((long)pvVar12 + 0x58) == -1) {\n            free(pvVar12);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar12 + 0x70) == 0xb) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          *(undefined *)((long)param_1[4] + *(long *)((long)pvVar12 + 0x48)) = 0;\n          if (*(long *)((long)pvVar12 + 0x58) == 0) {\n            iVar8 = restore_initial_cwd(param_1);\n            if (iVar8 == 0) goto LAB_0011600b;\nLAB_001163bf:\n            piVar9 = __errno_location();\n            uVar13 = *(uint *)(param_1 + 9) | 0x4000;\n            sVar7 = *(short *)((long)pvVar12 + 0x70);\n            *(int *)((long)pvVar12 + 0x40) = *piVar9;\n            *(uint *)(param_1 + 9) = uVar13;\n            if (sVar7 == 2) {\n              return (void *)0x0;\n            }\n          }\n          else {\n            if ((*(ushort *)((long)pvVar12 + 0x72) & 2) == 0) {\n              if (((*(ushort *)((long)pvVar12 + 0x72) & 1) == 0) &&\n                 (iVar8 = fts_safe_changedir(param_1,*(undefined8 *)((long)pvVar12 + 8),0xffffffff,\n                                             &DAT_0011c32a), iVar8 != 0)) goto LAB_001163bf;\nLAB_0011600b:\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            else {\n              iVar8 = *(int *)((long)pvVar12 + 0x44);\n              if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                  iVar8 = fchdir(iVar8);\n                  if (iVar8 != 0) {\n                    piVar9 = __errno_location();\n                    *(int *)((long)pvVar12 + 0x40) = *piVar9;\n                    *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                  }\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n                else {\n                  cwd_advance_fd(param_1,iVar8,1);\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n              }\n              close(iVar8);\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            if (*(short *)((long)pvVar12 + 0x70) == 2) goto LAB_0011603b;\n          }\n          if (*(int *)((long)pvVar12 + 0x40) == 0) {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 6;\n            leave_dir_isra_0(uVar13,param_1 + 0xb,pvVar12);\n            uVar13 = *(uint *)(param_1 + 9);\n          }\n          else {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n          }\nLAB_0011603b:\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          return pvVar12;\n        }\n        *param_1 = pvVar12;\n        free(pvVar11);\n        pvVar11 = pvVar12;\n        if (*(long *)((long)pvVar12 + 0x58) == 0) {\n          iVar8 = restore_initial_cwd(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          free_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          fts_load_isra_0(param_1 + 4,pvVar12);\n          setup_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar12 + 0x70);\n          goto LAB_0011619a;\n        }\n      } while (*(short *)((long)pvVar12 + 0x74) == 4);\n      if (*(short *)((long)pvVar12 + 0x74) == 2) {\n        sVar7 = fts_stat(param_1,pvVar12,1);\n        *(short *)((long)pvVar12 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = diropen_isra_0(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                                 &DAT_0011c32b);\n          *(int *)((long)pvVar12 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n            *(int *)((long)pvVar12 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar12 + 0x72) = *(ushort *)((long)pvVar12 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar12 + 0x74) = 3;\n      }\n    }\nLAB_001161fa:\n    lVar4 = *(long *)(*(long *)((long)pvVar12 + 8) + 0x48);\n    lVar10 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar12 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar10 = lVar4;\n    }\n    pvVar11 = param_1[4];\n    *(undefined *)(lVar10 + (long)pvVar11) = 0x2f;\n    memmove((undefined *)(lVar10 + (long)pvVar11) + 1,(void *)((long)pvVar12 + 0x108),\n            *(long *)((long)pvVar12 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar12 + 0x70);\n    *param_1 = pvVar12;\n    pvVar11 = pvVar12;\n    if (sVar7 != 0xb) {\nLAB_001161a8:\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_001161b2;\n    }\nLAB_00116249:\n    if (*(long *)((long)pvVar11 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar11 + 0xa8) != 1) {\n        pvVar11 = (void *)fts_read_cold();\n        return pvVar11;\n      }\n      return pvVar11;\n    }\n    lVar4 = *(long *)((long)pvVar11 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = leaf_optimization(lVar4,*(undefined4 *)((long)param_1 + 0x2c)), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\n      goto LAB_001161a8;\n    }\n    sVar7 = fts_stat(param_1,pvVar11,0);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar11 + 0x90) & 0xf000) != 0x4000) goto LAB_001161a8;\n    if (*(long *)((long)pvVar11 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_001161c3;\n    }\n    if (sVar7 != 1) {\n      return pvVar11;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar11 + 0x78);\nLAB_001161c3:\n  cVar5 = enter_dir_isra_0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar11);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar11 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar11;\n}\n\n", 
    "001117b0": "\nvoid quote_mem(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(0,param_1,param_2);\n  return;\n}\n\n", 
    "00124218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103870": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00122ff0)();\n  return;\n}\n\n", 
    "00112d70": "\nvoid lutimensat(int param_1,char *param_2,timespec *param_3)\n\n{\n  utimensat(param_1,param_2,param_3,0x100);\n  return;\n}\n\n", 
    "00103990": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_clock_gettime_00122c38)();\n  return iVar1;\n}\n\n", 
    "00114e30": "\nvoid fts_load_isra_0(void **param_1,long param_2)\n\n{\n  char *__s;\n  void *pvVar1;\n  char *pcVar2;\n  size_t sVar3;\n  \n  __s = (char *)(param_2 + 0x108);\n  pvVar1 = *param_1;\n  *(long *)(param_2 + 0x48) = *(long *)(param_2 + 0x60);\n  memmove(pvVar1,__s,*(long *)(param_2 + 0x60) + 1);\n  pcVar2 = strrchr(__s,0x2f);\n  if ((pcVar2 != (char *)0x0) && ((__s != pcVar2 || (*(char *)(param_2 + 0x109) != '\\0')))) {\n    sVar3 = strlen(pcVar2 + 1);\n    memmove(__s,pcVar2 + 1,sVar3 + 1);\n    *(size_t *)(param_2 + 0x60) = sVar3;\n  }\n  pvVar1 = *param_1;\n  *(void **)(param_2 + 0x38) = pvVar1;\n  *(void **)(param_2 + 0x30) = pvVar1;\n  return;\n}\n\n", 
    "00124350": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __explicit_bzero_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __explicit_bzero_chk@@GLIBC_2.25 */\n  halt_baddata();\n}\n\n", 
    "00104960": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00122ff0 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00124110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* openat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00124230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* dirfd@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001040dd": "\nvoid version_etc_arn_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b3f0": "\nvoid src_to_dest_free(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x10));\n  (*(code *)PTR_free_00122fc8)(param_1);\n  return;\n}\n\n", 
    "0010e5a0": "\nundefined8 hash_get_n_buckets_used(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "001170c0": "\nulong randint_genmax(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  undefined auVar8 [16];\n  undefined local_48 [8];\n  long local_40;\n  \n  uVar1 = param_2 + 1;\n  uVar6 = param_1[1];\n  uVar7 = param_1[2];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *param_1;\n  while( true ) {\n    uVar5 = uVar7;\n    uVar3 = uVar6;\n    if (uVar7 < param_2) {\n      do {\n        lVar4 = shift_left(uVar5);\n        uVar5 = lVar4 + 0xffU;\n      } while (lVar4 + 0xffU < param_2);\n      randread(uVar2,local_48);\n      do {\n        auVar8 = shift_left(uVar6);\n        uVar6 = (ulong)*SUB168(auVar8 >> 0x40,0) + SUB168(auVar8,0);\n        lVar4 = shift_left(uVar7);\n        uVar7 = lVar4 + 0xff;\n        uVar3 = uVar6;\n      } while (uVar7 < param_2);\n    }\n    if (uVar7 == param_2) break;\n    uVar5 = (uVar7 - param_2) % uVar1;\n    uVar6 = uVar3 % uVar1;\n    if (uVar3 <= uVar7 - uVar5) {\n      param_1[1] = uVar3 / uVar1;\n      param_1[2] = (uVar7 - param_2) / uVar1;\nLAB_001171b7:\n      if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      return uVar6;\n    }\n    uVar7 = uVar5 - 1;\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  uVar6 = uVar3;\n  goto LAB_001171b7;\n}\n\n", 
    "00103f10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00122ef8)();\n  return iVar1;\n}\n\n", 
    "001040e7": "\nvoid filesystem_type_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00112370": "\nvoid gen_tempname(void)\n\n{\n  gen_tempname_len();\n  return;\n}\n\n", 
    "00116970": "\nint set_permissions(undefined4 *param_1,undefined8 param_2,undefined4 param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = chmod_or_fchmod(param_2,param_3,*param_1);\n  return -(uint)(iVar1 != 0);\n}\n\n", 
    "001040e2": "\nvoid fts_set_stat_required_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00112130": "\nvoid try_file(char *param_1,uint *param_2)\n\n{\n  open(param_1,*param_2 & 0xffffff3c | 0xc2,0x180);\n  return;\n}\n\n", 
    "001061a0": "\nbool is_probably_sparse(long param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  bool bVar3;\n  \n  bVar3 = false;\n  if ((*(uint *)(param_1 + 0x18) & 0xf000) == 0x8000) {\n    lVar1 = *(long *)(param_1 + 0x30);\n    lVar2 = lVar1 + 0x1ff;\n    if (-1 < lVar1) {\n      lVar2 = lVar1;\n    }\n    bVar3 = *(long *)(param_1 + 0x40) < lVar2 >> 9;\n  }\n  return bVar3;\n}\n\n", 
    "001117c0": "\nvoid quote_n(undefined8 param_1,undefined8 param_2)\n\n{\n  quote_n_mem(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00124228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124348": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid fsetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00124108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __lxstat@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010da60": "\nvoid dir_name(void)\n\n{\n  long lVar1;\n  \n  lVar1 = mdir_name();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00113e30": "\nbool yesno(void)\n\n{\n  int iVar1;\n  __ssize_t _Var2;\n  bool bVar3;\n  long in_FS_OFFSET;\n  char *local_20;\n  size_t local_18;\n  long local_10;\n  \n  bVar3 = false;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_20 = (char *)0x0;\n  local_18 = 0;\n  _Var2 = getline(&local_20,&local_18,stdin);\n  if (0 < _Var2) {\n    if (local_20[_Var2 + -1] == '\\n') {\n      local_20[_Var2 + -1] = '\\0';\n    }\n    iVar1 = rpmatch(local_20);\n    bVar3 = 0 < iVar1;\n  }\n  free(local_20);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00124200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fputs_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124320": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setvbuf@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00124440": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010e8d0": "\nvoid hash_get_entries(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "0010e7b0": "\nlong hash_lookup(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)safe_hasher();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "00116930": "\nvoid free_permission_context(void)\n\n{\n  return;\n}\n\n", 
    "00103d00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__mode_t umask(__mode_t __mask)\n\n{\n  __mode_t _Var1;\n  \n  _Var1 = (*(code *)PTR_umask_00122df0)();\n  return _Var1;\n}\n\n", 
    "0010d7e0": "\nvoid close_stdin(void)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  uVar3 = stdin;\n  lVar2 = freadahead(stdin);\n  if (lVar2 == 0) {\n    iVar1 = close_stream(uVar3);\n    if (iVar1 == 0) {\n      close_stdout();\n      return;\n    }\n  }\n  else {\n    iVar1 = rpl_fseeko(uVar3,0,1);\n    if (iVar1 == 0) {\n      iVar1 = rpl_fflush(stdin);\n      if (iVar1 != 0) {\n        close_stream(stdin);\n        goto LAB_0010d840;\n      }\n    }\n    iVar1 = close_stream(stdin);\n    if (iVar1 == 0) {\n      close_stdout();\n      return;\n    }\n  }\nLAB_0010d840:\n  uVar3 = dcgettext(0,\"error closing file\",5);\n  lVar2 = file_name;\n  piVar4 = __errno_location();\n  if (lVar2 != 0) {\n    uVar5 = quotearg_colon(lVar2);\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar4,\"%s: %s\",uVar5,uVar3);\n  }\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar4,&DAT_0011b616,uVar3);\n}\n\n", 
    "0010b3c0": "\nulong src_to_dest_hash(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "00103f40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rename(char *__old,char *__new)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_rename_00122f10)();\n  return iVar1;\n}\n\n", 
    "00103e20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00122e80)();\n  return iVar1;\n}\n\n", 
    "0010f350": "\nulong triple_hash_no_name(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "00116940": "\nundefined8\nget_permissions(undefined8 param_1,undefined8 param_2,undefined4 param_3,undefined4 *param_4)\n\n{\n  *param_4 = param_3;\n  return 0;\n}\n\n", 
    "0010f9b0": "\nundefined8\nstrcaseeq2(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n          char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq3(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00114520": "\nvoid * fts_alloc(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n", 
    "00111250": "\nundefined8\nquotearg_alloc_mem(undefined8 param_1,undefined8 param_2,long *param_3,undefined1 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if ((undefined4 *)param_4 == (undefined4 *)0x0) {\n    param_4 = default_quoting_options;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | *(uint *)((long)param_4 + 4);\n  lVar3 = quotearg_buffer_restyled\n                    (0,0,param_1,param_2,*(undefined4 *)param_4,uVar5,\n                     (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n                     *(undefined8 *)((long)param_4 + 0x30));\n  uVar4 = xcharalloc(lVar3 + 1);\n  quotearg_buffer_restyled\n            (uVar4,lVar3 + 1,param_1,param_2,*(undefined4 *)param_4,uVar5,\n             (undefined4 *)((long)param_4 + 8),*(undefined8 *)((long)param_4 + 0x28),\n             *(undefined8 *)((long)param_4 + 0x30));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00111130": "\nuint set_char_quoting(undefined1 *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined1 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00116bf0": "\nint c_toupper(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00113d10": "\nvoid xstrdup(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  xmemdup(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00124438": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* free@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010cfd0": "\nvoid backup_file_rename(undefined8 param_1,undefined8 param_2)\n\n{\n  backupfile_internal(param_1,param_2,1);\n  return;\n}\n\n", 
    "00114e00": "\nvoid free_dir_isra_0(uint param_1,long param_2)\n\n{\n  if ((param_1 & 0x102) == 0) {\n    (*(code *)PTR_free_00122fc8)(param_2);\n    return;\n  }\n  if (param_2 != 0) {\n    hash_free();\n    return;\n  }\n  return;\n}\n\n", 
    "00124318": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchmod(int __fd,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fchmod@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010db90": "\nvoid base_len(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00124330": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mempcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint utimensat(int __fd,char *__path,timespec *__times,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_utimensat_00122bb8)();\n  return iVar1;\n}\n\n", 
    "00124210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* ferror_unlocked@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001040fb": "\nvoid i_ring_pop_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103e10": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00122e78)();\n  return;\n}\n\n", 
    "0010b3d0": "\nulong src_to_dest_compare(long *param_1,long *param_2)\n\n{\n  if (*param_1 != *param_2) {\n    return 0;\n  }\n  return param_2[1] & 0xffffffffffffff00U | (ulong)(param_1[1] == param_2[1]);\n}\n\n", 
    "00103f30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_00122f08)();\n  return pFVar1;\n}\n\n", 
    "00116950": "\nvoid chmod_or_fchmod(char *param_1,int param_2,__mode_t param_3)\n\n{\n  if (param_2 != -1) {\n    fchmod(param_2,param_3);\n    return;\n  }\n  chmod(param_1,param_3);\n  return;\n}\n\n", 
    "00113200": "\nint lutimens(char *param_1,timespec *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  int *piVar4;\n  long in_FS_OFFSET;\n  timespec tVar5;\n  timespec *local_e0;\n  timespec local_d8;\n  __time_t local_c8;\n  long lStack_c0;\n  stat local_b8;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == (timespec *)0x0) {\n    iVar2 = 0;\n    local_e0 = (timespec *)0x0;\n    if (-1 < lutimensat_works_really) goto LAB_001132b0;\nLAB_0011338b:\n    lutimensat_works_really = -1;\n    iVar2 = lstat(param_1,&local_b8);\n    if (iVar2 == 0) {\nLAB_00113314:\n      if ((local_b8.st_mode & 0xf000) != 0xa000) {\n        iVar3 = fdutimens(0xffffffff,param_1,local_e0);\n        goto LAB_0011333d;\n      }\n      piVar4 = __errno_location();\n      *piVar4 = 0x26;\n    }\n  }\n  else {\n    local_d8.tv_sec = param_2->tv_sec;\n    local_d8.tv_nsec = param_2->tv_nsec;\n    local_c8 = param_2[1].tv_sec;\n    lStack_c0 = param_2[1].tv_nsec;\n    local_e0 = &local_d8;\n    iVar2 = validate_timespec();\n    if (-1 < iVar2) {\n      if (-1 < lutimensat_works_really) {\n        param_2 = local_e0;\n        if (iVar2 == 2) {\n          iVar2 = lstat(param_1,&local_b8);\n          if (iVar2 != 0) goto LAB_001133a0;\n          param_2 = local_e0;\n          if (local_e0->tv_nsec == 0x3ffffffe) {\n            iVar2 = 3;\n            tVar5 = (timespec)\n                    get_stat_mtime_isra_0(local_b8.st_atim.tv_sec,local_b8.st_atim.tv_nsec);\n            *param_2 = tVar5;\n          }\n          else {\n            iVar2 = 3;\n            if (local_e0[1].tv_nsec == 0x3ffffffe) {\n              tVar5 = (timespec)\n                      get_stat_mtime_isra_0(local_b8.st_mtim.tv_sec,local_b8.st_mtim.tv_nsec);\n              param_2[1] = tVar5;\n            }\n          }\n        }\nLAB_001132b0:\n        iVar3 = utimensat(-100,param_1,param_2,0x100);\n        if (iVar3 < 1) {\n          if ((iVar3 == 0) || (piVar4 = __errno_location(), *piVar4 != 0x26)) {\n            utimensat_works_really = 1;\n            lutimensat_works_really = 1;\n            goto LAB_0011333d;\n          }\n        }\n        else {\n          piVar4 = __errno_location();\n          *piVar4 = 0x26;\n        }\n      }\n      lutimensat_works_really = -1;\n      if (iVar2 == 0) goto LAB_0011338b;\n      if ((iVar2 != 3) && (iVar2 = lstat(param_1,&local_b8), iVar2 != 0)) goto LAB_001133a0;\n      if (local_e0 != (timespec *)0x0) {\n        iVar3 = 0;\n        cVar1 = update_timespec(&local_b8,&local_e0);\n        if (cVar1 != '\\0') goto LAB_0011333d;\n      }\n      goto LAB_00113314;\n    }\n  }\nLAB_001133a0:\n  iVar3 = -1;\nLAB_0011333d:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "0010d060": "\nvoid xget_version(char *param_1,char *param_2)\n\n{\n  if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n    param_2 = getenv(\"VERSION_CONTROL\");\n    param_1 = \"$VERSION_CONTROL\";\n  }\n  get_version(param_1,param_2);\n  return;\n}\n\n", 
    "00114650": "\nDIR * opendirat(undefined8 param_1,undefined8 param_2,uint param_3,int *param_4)\n\n{\n  int iVar1;\n  int __fd;\n  DIR *pDVar2;\n  int *piVar3;\n  \n  pDVar2 = (DIR *)0x0;\n  __fd = openat_safer(param_1,param_2,param_3 | 0x90900);\n  if (-1 < __fd) {\n    pDVar2 = fdopendir(__fd);\n    if (pDVar2 == (DIR *)0x0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      close(__fd);\n      *piVar3 = iVar1;\n      return (DIR *)0x0;\n    }\n    *param_4 = __fd;\n  }\n  return pDVar2;\n}\n\n", 
    "00116ae0": "\nbool c_isdigit(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "0010f120": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong hash_delete(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = hash_find_entry(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_0010f163;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_0010f29a;\nLAB_0010f1b4:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_0010f1b4;\nLAB_0010f29a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    check_tuning_isra_0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_0011b76c <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0011b76c) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = hash_rehash(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_0010f163:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010cfe0": "\nvoid find_backup_file_name(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = backupfile_internal(param_1,param_2,0);\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00124208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint utimes(char *__file,timeval *__tvp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* utimes@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001117a0": "\nvoid quote_n_mem(void)\n\n{\n  quotearg_n_options();\n  return;\n}\n\n", 
    "00124328": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* chmod@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00103960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_00122c20)();\n  return;\n}\n\n", 
    "00105bb0": "\nuint do_copy(int param_1,EVP_PKEY_CTX **param_2,EVP_PKEY_CTX *param_3,char param_4,int *param_5)\n\n{\n  int iVar1;\n  EVP_PKEY_CTX *pEVar2;\n  char cVar3;\n  int iVar4;\n  uint uVar5;\n  size_t sVar6;\n  void *pvVar7;\n  EVP_PKEY_CTX *pEVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  undefined *puVar11;\n  long lVar12;\n  ulong uVar13;\n  char *pcVar14;\n  undefined *puVar15;\n  EVP_PKEY_CTX **ppEVar16;\n  int *piVar17;\n  uint uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  byte bVar20;\n  EVP_PKEY_CTX *local_108;\n  EVP_PKEY_CTX **local_100;\n  char local_ea [2];\n  void *local_e8;\n  long local_e0;\n  undefined local_d8 [24];\n  uint local_c0;\n  long local_40;\n  \n  bVar20 = 0;\n  ppEVar16 = &local_108;\n  local_108 = param_3;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  bVar19 = (param_5[5] & 0xffff00U) != 0;\n  local_ea[0] = '\\0';\n  if (param_1 <= (int)(uint)(param_3 == (EVP_PKEY_CTX *)0x0)) {\n    if (param_1 == 1) {\n      uVar9 = quotearg_style(4,*param_2);\n      pcVar14 = \"missing destination file operand after %s\";\nLAB_001060ac:\n      uVar10 = dcgettext(0,pcVar14,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar10,uVar9);\n    }\n    pcVar14 = \"missing file operand\";\n    goto LAB_001060da;\n  }\n  if (param_4 == '\\0') {\n    if (param_3 != (EVP_PKEY_CTX *)0x0) {\nLAB_00105c1d:\n      if (param_1 != 1) {\n        dest_info_init(param_5);\n        src_info_init(param_5);\n      }\n      uVar18 = 1;\n      local_100 = param_2 + (ulong)(param_1 - 1) + 1;\n      ppEVar16 = &local_108;\n      do {\n        pEVar2 = *param_2;\n        local_e0 = 0;\n        if (remove_trailing_slashes != '\\0') {\n          *(undefined8 *)((long)ppEVar16 + -8) = 0x105f98;\n          strip_trailing_slashes(pEVar2);\n        }\n        if (parents_option == '\\0') {\n          *(undefined8 *)((long)ppEVar16 + -8) = 0x105e75;\n          pcVar14 = (char *)last_component();\n          *(undefined8 *)((long)ppEVar16 + -8) = 0x105e80;\n          sVar6 = strlen(pcVar14);\n          for (puVar11 = (undefined *)ppEVar16;\n              puVar11 != (undefined *)((long)ppEVar16 + -(sVar6 + 0x18 & 0xfffffffffffff000));\n              puVar11 = puVar11 + -0x1000) {\n            *(undefined8 *)(puVar11 + -8) = *(undefined8 *)(puVar11 + -8);\n          }\n          uVar13 = (ulong)((uint)(sVar6 + 0x18) & 0xff0);\n          lVar12 = -uVar13;\n          ppEVar16 = (EVP_PKEY_CTX **)(puVar11 + lVar12);\n          if (uVar13 != 0) {\n            *(undefined8 *)(puVar11 + -8) = *(undefined8 *)(puVar11 + -8);\n          }\n          *(undefined8 *)(puVar11 + lVar12 + -8) = 0x105ee0;\n          pcVar14 = (char *)memcpy((void *)((ulong)(puVar11 + lVar12 + 0xf) & 0xfffffffffffffff0),\n                                   pcVar14,sVar6 + 1);\n          *(undefined8 *)(puVar11 + lVar12 + -8) = 0x105eeb;\n          strip_trailing_slashes(pcVar14);\n          if (((*pcVar14 == '.') && (pcVar14[1] == '.')) && (pcVar14[2] == '\\0')) {\n            *(undefined8 *)(puVar11 + lVar12 + -8) = 0x105f0e;\n            pEVar8 = (EVP_PKEY_CTX *)xstrdup(local_108);\n            ppEVar16 = (EVP_PKEY_CTX **)(puVar11 + lVar12);\n          }\n          else {\n            *(undefined8 *)(puVar11 + lVar12 + -8) = 0x105f81;\n            pEVar8 = (EVP_PKEY_CTX *)file_name_concat(local_108,pcVar14,0);\n          }\nLAB_00105f11:\n          *(undefined8 *)((long)ppEVar16 + -8) = 0x105f30;\n          uVar5 = copy(pEVar2,pEVar8);\n          uVar18 = uVar18 & uVar5;\n          if (parents_option != '\\0') {\n            *(undefined8 *)((long)ppEVar16 + -8) = 0x105f5c;\n            uVar5 = re_protect(pEVar8,local_e0 - (long)pEVar8,local_e8,param_5);\n            uVar18 = uVar18 & uVar5;\n            goto LAB_00105d4e;\n          }\n        }\n        else {\n          *(undefined8 *)((long)ppEVar16 + -8) = 0x105c80;\n          sVar6 = strlen((char *)pEVar2);\n          puVar11 = (undefined *)((long)ppEVar16 + -(sVar6 + 0x18 & 0xfffffffffffff000));\n          for (; ppEVar16 != (EVP_PKEY_CTX **)puVar11;\n              ppEVar16 = (EVP_PKEY_CTX **)((long)ppEVar16 + -0x1000)) {\n            *(undefined8 *)((long)ppEVar16 + -8) = *(undefined8 *)((long)ppEVar16 + -8);\n          }\n          uVar13 = (ulong)((uint)(sVar6 + 0x18) & 0xff0);\n          lVar12 = -uVar13;\n          puVar15 = (undefined *)((long)ppEVar16 + lVar12);\n          if (uVar13 != 0) {\n            *(undefined8 *)((long)ppEVar16 + -8) = *(undefined8 *)((long)ppEVar16 + -8);\n          }\n          *(undefined8 *)((long)ppEVar16 + lVar12 + -8) = 0x105ce0;\n          pvVar7 = memcpy((void *)((ulong)((long)ppEVar16 + lVar12 + 0xf) & 0xfffffffffffffff0),\n                          pEVar2,sVar6 + 1);\n          *(undefined8 *)((long)ppEVar16 + lVar12 + -8) = 0x105ceb;\n          strip_trailing_slashes(pvVar7);\n          *(undefined8 *)((long)ppEVar16 + lVar12 + -8) = 0x105d01;\n          pEVar8 = (EVP_PKEY_CTX *)file_name_concat(local_108,pvVar7,&local_e0);\n          pcVar14 = (char *)0x0;\n          if (*(char *)((long)param_5 + 0x2e) != '\\0') {\n            pcVar14 = \"%s -> %s\\n\";\n          }\n          *(undefined8 *)((long)ppEVar16 + lVar12 + -8) = 0x105d3c;\n          cVar3 = make_dir_parents_private\n                            (pEVar8,local_e0 - (long)pEVar8,pcVar14,&local_e8,local_ea,param_5);\n          ppEVar16 = (EVP_PKEY_CTX **)((long)ppEVar16 + lVar12);\n          if (cVar3 != '\\0') goto LAB_00105f11;\n          uVar18 = 0;\n          ppEVar16 = (EVP_PKEY_CTX **)puVar15;\nLAB_00105d4e:\n          pvVar7 = local_e8;\n          if (parents_option != '\\0') {\n            while (local_e8 = pvVar7, pvVar7 != (void *)0x0) {\n              local_e8 = *(void **)((long)pvVar7 + 0xa0);\n              *(undefined8 *)((long)ppEVar16 + -8) = 0x105fc3;\n              free(pvVar7);\n              pvVar7 = local_e8;\n            }\n          }\n        }\n        param_2 = param_2 + 1;\n        *(undefined8 *)((long)ppEVar16 + -8) = 0x105d62;\n        free(pEVar8);\n      } while (local_100 != param_2);\n      goto LAB_00105d6f;\n    }\n    if (param_1 != 1) {\n      cVar3 = target_directory_operand(param_2[(long)param_1 + -1],local_d8,local_ea,bVar19);\n      if (cVar3 == '\\0') {\n        if (param_1 != 2) {\n          uVar9 = quotearg_style(4,param_2[(long)param_1 + -1]);\n          uVar10 = dcgettext(0,\"target %s is not a directory\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,0,uVar10,uVar9);\n        }\n      }\n      else {\n        param_1 = param_1 + -1;\n        local_108 = param_2[param_1];\n        if (param_2[param_1] != (EVP_PKEY_CTX *)0x0) goto LAB_00105c1d;\n      }\n    }\n  }\n  else {\n    if (param_3 != (EVP_PKEY_CTX *)0x0) {\n      uVar9 = dcgettext(0,\"cannot combine --target-directory (-t) and --no-target-directory (-T)\",5)\n      ;\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar9);\n    }\n    if (2 < param_1) {\n      uVar9 = quotearg_style(4,param_2[2]);\n      pcVar14 = \"extra operand %s\";\n      goto LAB_001060ac;\n    }\n    target_directory_operand(param_2[(long)param_1 + -1],local_d8,local_ea,bVar19);\n  }\n  pEVar2 = *param_2;\n  pEVar8 = param_2[1];\n  if (parents_option != '\\0') {\n    pcVar14 = \"with --parents, the destination must be a directory\";\nLAB_001060da:\n    uVar9 = dcgettext(0,pcVar14,5);\n                    /* WARNING: Subroutine does not return */\n    error(0,0,uVar9);\n  }\n  if (((*(char *)((long)param_5 + 0x16) != '\\0') && (iVar1 = *param_5, iVar1 != 0)) &&\n     ((iVar4 = strcmp((char *)pEVar2,(char *)pEVar8), iVar4 == 0 &&\n      ((local_ea[0] == '\\0' && ((local_c0 & 0xf000) == 0x8000)))))) {\n    pEVar8 = (EVP_PKEY_CTX *)find_backup_file_name(pEVar8,iVar1);\n    piVar17 = (int *)x_tmp_7783;\n    for (lVar12 = 0x14; lVar12 != 0; lVar12 = lVar12 + -1) {\n      *piVar17 = *param_5;\n      param_5 = param_5 + (ulong)bVar20 * -2 + 1;\n      piVar17 = piVar17 + (ulong)bVar20 * -2 + 1;\n    }\n    x_tmp_7783._0_4_ = 0;\n  }\n  uVar18 = copy(pEVar2,pEVar8);\nLAB_00105d6f:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)((long)ppEVar16 + -8) = 0x10606b;\n    __stack_chk_fail();\n  }\n  return uVar18;\n}\n\n", 
    "00124420": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid mode_to_security_class(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103af0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00122ce8)();\n  return pcVar1;\n}\n\n", 
    "00114610": "\nvoid fd_ring_clear(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = i_ring_empty(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = i_ring_pop(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n", 
    "0010ea10": "\nvoid ** hash_initialize(undefined8 param_1,undefined1 *param_2,code *param_3,code *param_4,\n                       void *param_5)\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = raw_hasher;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = raw_comparator;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined1 *)0x0) {\n      param_2 = default_tuning;\n    }\n    __ptr[5] = param_2;\n    cVar1 = check_tuning_isra_0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)compute_bucket_size_isra_0\n                                  (*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "0010b5e0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbool extent_scan_read(int *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  int iVar3;\n  ulong uVar4;\n  long lVar5;\n  ulong *puVar6;\n  long lVar7;\n  ulong *puVar8;\n  ulong uVar9;\n  uint uVar10;\n  uint uVar11;\n  long in_FS_OFFSET;\n  bool bVar12;\n  byte bVar13;\n  ulong local_1048;\n  ulong local_1040;\n  int local_1038;\n  uint local_1034;\n  undefined8 local_1030;\n  ulong local_1028 [5];\n  uint local_1000 [1008];\n  long local_40;\n  \n  bVar13 = 0;\n  uVar11 = 0;\n  puVar6 = *(ulong **)(param_1 + 10);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    local_1038 = param_1[4];\n    puVar8 = &local_1048;\n    for (lVar5 = 0x200; lVar5 != 0; lVar5 = lVar5 + -1) {\n      *puVar8 = 0;\n      puVar8 = puVar8 + (ulong)bVar13 * -2 + 1;\n    }\n    local_1048 = *(ulong *)(param_1 + 2);\n    local_1030 = CONCAT44(local_1030._4_4_,0x48);\n    local_1040 = ~local_1048;\n    iVar3 = ioctl(*param_1,0xc020660b,&local_1048);\n    if (iVar3 < 0) {\nLAB_0010b7f8:\n      bVar12 = false;\n      if (*(long *)(param_1 + 2) == 0) {\n        *(undefined *)(param_1 + 8) = 1;\n        bVar12 = false;\n      }\n      goto LAB_0010b790;\n    }\n    if (local_1034 == 0) {\n      bVar12 = *(long *)(param_1 + 2) != 0;\n      *(undefined *)((long)param_1 + 0x21) = 1;\n      goto LAB_0010b790;\n    }\n    if (~(ulong)local_1034 < *(ulong *)(param_1 + 6)) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\",\"src/extent-scan.c\",\n                    0x7e,\"extent_scan_read\");\n    }\n    lVar7 = *(ulong *)(param_1 + 6) + (ulong)local_1034;\n    lVar5 = *(long *)(param_1 + 10);\n    *(long *)(param_1 + 6) = lVar7;\n    lVar7 = xnrealloc(lVar5,lVar7,0x18);\n    *(long *)(param_1 + 10) = lVar7;\n    puVar6 = (ulong *)((long)puVar6 + (lVar7 - lVar5));\n    if (local_1034 != 0) {\n      uVar4 = 0;\n      do {\n        uVar1 = local_1028[uVar4 * 7 + 2];\n        uVar2 = local_1028[uVar4 * 7];\n        if (0x7fffffffffffffff - uVar1 < uVar2) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\",\n                        \"src/extent-scan.c\",0x8c,\"extent_scan_read\");\n        }\n        if (uVar11 == 0) {\n          uVar9 = *(ulong *)(param_1 + 2);\n          if (uVar2 < uVar9) goto LAB_0010b727;\n          uVar10 = local_1000[uVar4 * 0xe];\nLAB_0010b7d1:\n          uVar9 = (ulong)uVar11;\n          uVar4 = (ulong)((int)uVar4 + 1);\n          uVar11 = uVar11 + 1;\n          puVar6 = (ulong *)(lVar7 + uVar9 * 0x18);\n          *puVar6 = uVar2;\n          puVar6[1] = uVar1;\n          *(uint *)(puVar6 + 2) = uVar10;\n        }\n        else {\n          uVar10 = local_1000[uVar4 * 0xe];\n          uVar9 = *puVar6 + puVar6[1];\n          if ((*(uint *)(puVar6 + 2) == (uVar10 & 0xfffffffe)) && (uVar2 == uVar9)) {\n            *(uint *)(puVar6 + 2) = uVar10;\n            uVar4 = (ulong)((int)uVar4 + 1);\n            puVar6[1] = uVar1 + puVar6[1];\n          }\n          else {\n            if (uVar9 <= uVar2) goto LAB_0010b7d1;\nLAB_0010b727:\n            if (uVar9 - uVar2 < uVar1) goto LAB_0010b7f8;\n            local_1028[uVar4 * 7] = uVar9;\n            local_1028[uVar4 * 7 + 2] = (uVar2 + uVar1) - uVar9;\n          }\n        }\n      } while ((uint)uVar4 < local_1034);\n    }\n    if ((*(byte *)(puVar6 + 2) & 1) != 0) {\n      *(undefined *)((long)param_1 + 0x21) = 1;\nLAB_0010b864:\n      *(ulong *)(param_1 + 6) = (ulong)uVar11;\nLAB_0010b786:\n      bVar12 = true;\nLAB_0010b790:\n      if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      return bVar12;\n    }\n    if (0x48 < uVar11) {\n      if (*(char *)((long)param_1 + 0x21) != '\\0') goto LAB_0010b864;\n      uVar4 = (ulong)(uVar11 - 1);\n      *(ulong *)(param_1 + 6) = uVar4;\n      *(long *)(param_1 + 2) =\n           *(long *)(lVar7 + -0x10 + uVar4 * 0x18) + *(long *)(lVar7 + -0x18 + uVar4 * 0x18);\n      goto LAB_0010b786;\n    }\n    *(ulong *)(param_1 + 6) = (ulong)uVar11;\n    if ((*(char *)((long)param_1 + 0x21) != '\\0') ||\n       (*(ulong *)(param_1 + 2) = puVar6[1] + *puVar6, uVar11 == 0x48)) goto LAB_0010b786;\n  } while( true );\n}\n\n", 
    "0010fc20": "\nchar * gettext_quote(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = locale_charset();\n    iVar1 = strcaseeq0_constprop_0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = strcaseeq0_constprop_0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0011b7c1;\n      }\n      else {\n        pcVar2 = &DAT_0011b7be;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0011b7c5;\n    }\n    else {\n      pcVar2 = &DAT_0011b7ba;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00124418": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* iswprint@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001040b5": "\nvoid safe_hasher_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010c5a0": "\nlong argmatch(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "001040b0": "\nvoid decode_preserve_arg_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00111110": "\nvoid set_quoting_style(undefined1 *param_1,undefined4 param_2)\n\n{\n  if ((undefined4 *)param_1 == (undefined4 *)0x0) {\n    param_1 = default_quoting_options;\n  }\n  *(undefined4 *)param_1 = param_2;\n  return;\n}\n\n", 
    "00116bd0": "\nint c_tolower(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00117de0": "\nvoid dup_safer(undefined8 param_1)\n\n{\n  rpl_fcntl(param_1,0,3);\n  return;\n}\n\n", 
    "00111350": "\nvoid quotearg_free(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = slotvec;\n  if (1 < nslots) {\n    ppvVar2 = (void **)(slotvec + 0x18);\n    ppvVar1 = (void **)(slotvec + (ulong)(nslots - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined1 **)(__ptr_00 + 8) != slot0) {\n    free(*(undefined1 **)(__ptr_00 + 8));\n    slotvec0._8_8_ = slot0;\n    slotvec0._0_8_ = 0x100;\n  }\n  if (__ptr_00 != slotvec0) {\n    free(__ptr_00);\n    slotvec = slotvec0;\n  }\n  nslots = 1;\n  return;\n}\n\n", 
    "00116cf0": "\nvoid cycle_check_init(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n", 
    "00124410": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_str(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103950": "\nvoid lsetfilecon(void)\n\n{\n  (*(code *)PTR_lsetfilecon_00122c18)();\n  return;\n}\n\n", 
    "00104920": "\n/* WARNING: Removing unreachable block (ram,0x00104944) */\n/* WARNING: Removing unreachable block (ram,0x00104950) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00124430": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __ctype_b_loc@@GLIBC_2.3 */\n  halt_baddata();\n}\n\n", 
    "00103ae0": "\nvoid context_type_set(void)\n\n{\n  (*(code *)PTR_context_type_set_00122ce0)();\n  return;\n}\n\n", 
    "00124310": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "0010e9e0": "\nvoid hash_reset_tuning(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "0010c4a0": "\nchar * areadlink_with_size(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n", 
    "0010d7d0": "\nvoid close_stdin_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "0010fd50": "\nulong quotearg_buffer_restyled\n                (undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_001101d7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001101f9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00110796;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0011014f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_001101d7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0011014f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)gettext_quote(&DAT_0011b7d9,param_5);\n      local_78 = (char *)gettext_quote(&DAT_0011b7c9);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_0010fea0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00110700_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0011069b;\n          goto LAB_0011048b;\n        default:\nswitchD_001105b0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = rpl_mbrtowc(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00110988;\n              }\n              if (lVar10 == -2) goto joined_r0x00110d9a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00110370;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00110988;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00110111;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00110658;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00110658;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00110658:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00110367;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00110354;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00110354:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00110078;\n          goto LAB_00110367;\n        case 0x23:\n        case 0x7e:\nLAB_0011034b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00110354;\n          goto LAB_00110075;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_001105b0_caseD_25;\n        case 0x27:\nswitchD_001105b0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00110078;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0011009b;\n          }\n          goto LAB_00110370;\n        case 0x3f:\nswitchD_001105b0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00110cfe_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00110078;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0011009b;\n          }\n          goto LAB_00110370;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_0010ffa8_caseD_5c;\n          if (!bVar20) {\nLAB_001105e8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00110600;\n          }\n          goto LAB_00110370;\n        case 0x7b:\n        case 0x7d:\nswitchD_001105b0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0011034b;\nLAB_00110075:\n          bVar23 = false;\n          goto LAB_00110078;\n        }\nLAB_00110480:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0011048b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00110098;\n          goto LAB_0010ffc0;\n        }\nLAB_001104c0:\n        bVar21 = false;\n        goto joined_r0x001104d1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_001106e0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_0010ffa8_caseD_0;\n          default:\n            goto switchD_001105b0_caseD_1;\n          case 7:\n            goto switchD_00110700_caseD_7;\n          case 8:\n            goto switchD_00110700_caseD_8;\n          case 9:\n            goto switchD_0010ffa8_caseD_9;\n          case 10:\n            goto switchD_00110700_caseD_a;\n          case 0xb:\n            goto switchD_00110700_caseD_b;\n          case 0xc:\n            goto switchD_00110700_caseD_c;\n          case 0xd:\n            goto switchD_00110700_caseD_d;\n          case 0x20:\n            goto LAB_00110729;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_0010ffa8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00110711;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_0010ffb8;\n          case 0x27:\n            goto switchD_001105b0_caseD_27;\n          case 0x3f:\n            goto switchD_001105b0_caseD_3f;\n          case 0x5c:\n            goto switchD_0010ffa8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_001105b0_caseD_7b;\n          }\n        }\n        goto LAB_0011037e;\n      }\nLAB_001106e0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00110700_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_0010ffa8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0011009b;\n            }\nLAB_00110b3b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00110b3b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00110b78;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0011009b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00110370;\n      default:\n        bVar23 = false;\n        goto switchD_001105b0_caseD_1;\n      case 7:\nswitchD_00110700_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00110700_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_0010ffa8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00110480;\n      case 10:\nswitchD_00110700_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_001104c0;\n      case 0xb:\nswitchD_00110700_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_001104c0;\n      case 0xc:\nswitchD_00110700_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00110700_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_001104c0;\n      case 0x20:\n        bVar5 = false;\nLAB_00110729:\n        uVar15 = 0x20;\n        goto LAB_0010ffb8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_0010ffa8_caseD_21:\n        bVar22 = false;\n        goto LAB_00110075;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00110711:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00110078;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_0010ffc0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_0010ffb8:\n        bVar22 = false;\n        goto LAB_0010ffc0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_001105b0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_001105b0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_0010ffa8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_001105e8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00110480;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_001105b0_caseD_7b;\n      }\n      if (bVar20) goto LAB_001104e0;\n      bVar21 = false;\n      goto LAB_00110036;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00110367:\n      param_5 = 2;\nLAB_00110370:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0011037e:\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                          local_78);\n      goto LAB_001103b8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00110e05:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001103b8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = quotearg_buffer_restyled\n                         (param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001103b8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00110e05;\nLAB_00110796:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001101f9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0011069b:\n  uVar13 = uVar13 + 1;\n  goto LAB_0010fea0;\nswitchD_00110cfe_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00110b78:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0011009b;\n    goto LAB_0010ffc0;\n  }\n  goto LAB_0011037e;\njoined_r0x00110d9a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00110988:\n  if (1 < uVar17) {\nLAB_00110992:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00110370;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00110048;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00110600;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00110111:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00110992;\n  }\nswitchD_001105b0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00110078:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_0010ffc0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0011009b;\n  }\n  else {\nLAB_00110098:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0011009b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00110600:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00110048;\n    }\n  }\njoined_r0x001104d1:\n  if (bVar20) {\nLAB_001104e0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00110370;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00110036:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00110048:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_0010fea0;\n}\n\n", 
    "0010d8f0": "\nvoid close_stdout_set_file_name(undefined8 param_1)\n\n{\n  file_name = param_1;\n  return;\n}\n\n", 
    "0010b4d0": "\nundefined8 remember_copied(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  undefined8 uVar4;\n  \n  puVar1 = (undefined8 *)xmalloc(0x18);\n  uVar2 = xstrdup(param_1);\n  uVar4 = src_to_dest;\n  *puVar1 = param_2;\n  puVar1[2] = uVar2;\n  puVar1[1] = param_3;\n  puVar3 = (undefined8 *)hash_insert(uVar4,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    uVar4 = 0;\n    if (puVar1 != puVar3) {\n      src_to_dest_free(puVar1);\n      uVar4 = puVar3[2];\n    }\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  xalloc_die();\n}\n\n", 
    "00124308": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* setlocale@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00116ac0": "\nulong c_iscntrl(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001040a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00122fc0)();\n  return ppuVar1;\n}\n\n", 
    "0010c190": "\nuint restorecon(char *param_1,uint param_2,char param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  char *__ptr;\n  long in_FS_OFFSET;\n  char *local_48;\n  undefined8 local_40;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*param_1 == '/') || (param_3 != '\\0')) {\n    local_48 = param_1;\n    __ptr = (char *)0x0;\n  }\n  else {\n    local_48 = (char *)canonicalize_filename_mode(param_1,2);\n    __ptr = local_48;\n    if (local_48 == (char *)0x0) {\n      uVar6 = quotearg_style(4,param_1);\n      uVar7 = dcgettext(0,\"error canonicalizing %s\",5);\n      piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar5,uVar7,uVar6);\n    }\n  }\n  local_40 = 0;\n  if ((char)param_2 == '\\0') {\n    iVar2 = restorecon_private(local_48,param_3);\n    param_2 = param_2 & 0xffffff00 | (uint)(iVar2 != -1);\n    free(__ptr);\n  }\n  else {\n    lVar3 = xfts_open(&local_48,0x10,0);\n    while (lVar4 = fts_read(lVar3), lVar4 != 0) {\n      uVar1 = restorecon_private(*(undefined8 *)(lVar3 + 0x20),param_3);\n      param_2 = param_2 & (uVar1 & 0xffffff00 | (uint)(uVar1 != 0xffffffff));\n    }\n    piVar5 = __errno_location();\n    if (*piVar5 != 0) {\n      uVar6 = dcgettext(0,\"fts_read failed\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar5,uVar6);\n    }\n    iVar2 = fts_close(lVar3);\n    if (iVar2 != 0) {\n      uVar6 = dcgettext(0,\"fts_close failed\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar5,uVar6);\n    }\n    free(__ptr);\n  }\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return param_2;\n}\n\n", 
    "00114990": "\nvoid set_stat_type_isra_0(undefined4 *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_2 - 1U < 0xc) {\n    uVar1 = *(undefined4 *)(CSWTCH_49 + (ulong)(param_2 - 1U) * 4);\n  }\n  *param_1 = uVar1;\n  return;\n}\n\n", 
    "00124300": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint linkat(int __fromfd,char *__from,int __tofd,char *__to,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* linkat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00103940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlinkat(int __fd,char *__name,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unlinkat_00122c10)();\n  return iVar1;\n}\n\n", 
    "00124428": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint futimesat(int __fd,char *__file,timeval *__tvp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* futimesat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00103980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00122c30)();\n  return iVar1;\n}\n\n", 
    "001040ce": "\nvoid quotearg_buffer_restyled_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010bfc0": "\nundefined4 defaultcon(char *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char *pcVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_40 = 0;\n  local_38 = 0;\n  if (*param_1 == '/') {\n    pcVar3 = param_1;\n    __ptr = (char *)0x0;\n  }\n  else {\n    pcVar3 = (char *)canonicalize_filename_mode(param_1,2);\n    __ptr = pcVar3;\n    if (pcVar3 == (char *)0x0) {\n      uVar8 = quotearg_style(4,param_1);\n      uVar9 = dcgettext(0,\"error canonicalizing %s\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar9,uVar8);\n    }\n  }\n  iVar1 = matchpathcon(pcVar3,param_2,&local_40);\n  if (iVar1 < 0) {\n    piVar7 = __errno_location();\n    if (*piVar7 == 2) {\n      *piVar7 = 0x3d;\n    }\n  }\n  else {\n    iVar1 = computecon(pcVar3,param_2,&local_38);\n    if ((-1 < iVar1) && (lVar4 = context_new(local_40), lVar4 != 0)) {\n      lVar5 = context_new(local_38);\n      if ((lVar5 == 0) ||\n         (((lVar6 = context_type_get(lVar4), lVar6 == 0 ||\n           (iVar1 = context_type_set(lVar5,lVar6), iVar1 != 0)) ||\n          (lVar6 = context_str(lVar5), lVar6 == 0)))) {\n        uVar2 = 0xffffffff;\n      }\n      else {\n        uVar2 = setfscreatecon(lVar6);\n      }\n      goto LAB_0010c0ad;\n    }\n  }\n  lVar5 = 0;\n  lVar4 = 0;\n  uVar2 = 0xffffffff;\nLAB_0010c0ad:\n  context_free(lVar4);\n  context_free(lVar5);\n  freecon(local_40);\n  freecon(local_38);\n  free(__ptr);\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00122fc8)();\n  return;\n}\n\n", 
    "00107ff0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint copy_reg(undefined8 param_1,char *param_2,long param_3,uint param_4,uint param_5,char *param_6,\n             __dev_t *param_7)\n\n{\n  char cVar1;\n  char cVar2;\n  byte bVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  uint uVar7;\n  undefined4 uVar8;\n  __uid_t _Var9;\n  uint uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  int *piVar13;\n  long lVar14;\n  ulong uVar15;\n  ulong uVar16;\n  void *__ptr;\n  size_t sVar17;\n  undefined8 uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  uint local_1d8;\n  uint local_1cc;\n  long local_1b0;\n  char local_191;\n  char local_190;\n  undefined7 uStack_18f;\n  undefined local_188 [16];\n  undefined local_178 [16];\n  stat local_168;\n  stat local_d8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar10 = *(uint *)(param_7 + 3);\n  cVar2 = *(char *)(param_3 + 0x23);\n  iVar4 = open_safer(param_1,(ulong)(*(int *)(param_3 + 4) == 2) << 0x11);\n  if (iVar4 < 0) {\n    uVar11 = quotearg_style(4,param_1);\n    uVar12 = dcgettext(0,\"cannot open %s for reading\",5);\n    piVar13 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar13,uVar12,uVar11);\n  }\n  iVar5 = fstat(iVar4,&local_168);\n  if (iVar5 != 0) {\n    uVar11 = quotearg_style(4,param_1);\n    uVar12 = dcgettext(0,\"cannot fstat %s\",5);\n    piVar13 = __errno_location();\n    iVar5 = *piVar13;\n    goto LAB_001080ca;\n  }\n  if ((param_7[1] != local_168.st_ino) || (*param_7 != local_168.st_dev)) {\n    uVar11 = quotearg_style(4,param_1);\n    uVar12 = dcgettext(0,\"skipping file %s, as it was replaced while being copied\",5);\n    iVar5 = 0;\n    goto LAB_001080ca;\n  }\n  cVar1 = *param_6;\n  piVar13 = __errno_location();\n  local_1d8 = param_5;\n  if (cVar1 != '\\0') {\nLAB_00108184:\n    while( true ) {\n      iVar6 = open_safer(param_2,0xc1);\n      iVar5 = *piVar13;\n      bVar3 = -(char)(iVar6 >> 0x1f);\n      if ((iVar5 == 0x11) && (bVar3 != 0)) {\n        iVar5 = 0x11;\n        if (*(char *)(param_3 + 0x18) != '\\0') goto LAB_001081e0;\n        iVar6 = lstat(param_2,&local_d8);\n        iVar5 = 0x11;\n        if ((iVar6 != 0) || (iVar5 = 0x11, (local_d8.st_mode & 0xf000) != 0xa000))\n        goto LAB_001081e0;\n        if (*(char *)(param_3 + 0x30) == '\\0') {\n          uVar11 = quotearg_style(4,param_2,~local_1d8 & param_4);\n          uVar12 = dcgettext(0,\"not writing through dangling symlink %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(0,0,uVar12,uVar11);\n        }\n        iVar6 = open_safer(param_2,0x41);\n        iVar5 = *piVar13;\n        bVar3 = iVar5 == 0x15 & (byte)((uint)iVar6 >> 0x1f);\n      }\n      else {\n        bVar3 = bVar3 & iVar5 == 0x15;\n      }\n      if (bVar3 != 0) {\n        iVar5 = 0x15;\n        if (*param_2 != '\\0') {\n          sVar17 = strlen(param_2);\n          iVar5 = (param_2[sVar17 - 1] != '/') + 0x14;\n        }\n        goto LAB_001081e0;\n      }\n      if (-1 < iVar6) goto LAB_001082f3;\n      if (iVar5 != 2) goto LAB_001081e0;\n      if (*param_6 != '\\0') break;\nLAB_00108660:\n      if (*(char *)(param_3 + 0x18) != '\\0') break;\n      *param_6 = '\\x01';\n    }\n    iVar5 = 2;\nLAB_001081e0:\n    uVar11 = quotearg_style(4,param_2);\n    uVar12 = dcgettext(0,\"cannot create regular file %s\",5);\nLAB_001080ca:\n                    /* WARNING: Subroutine does not return */\n    error(0,iVar5,uVar12,uVar11);\n  }\n  iVar6 = open_safer(param_2,(-(uint)(*(char *)(param_3 + 0x23) == '\\0') & 0xfffffe00) + 0x201);\n  if ((*(ulong *)(param_3 + 0x20) & 0xff000000ff00) != 0) {\n    if (iVar6 < 0) goto LAB_0010862e;\n    uVar7 = set_file_security_ctx(param_2,*(undefined *)(param_3 + 0x25),0,param_3);\n    if (((char)uVar7 != '\\0') || (*(char *)(param_3 + 0x26) == '\\0')) goto LAB_001082dd;\n    __ptr = (void *)0x0;\n    goto LAB_001085c8;\n  }\n  if (iVar6 < 0) {\nLAB_0010862e:\n    iVar5 = *piVar13;\n    if (*(char *)(param_3 + 0x16) != '\\0') {\n      iVar6 = unlink(param_2);\n      if (iVar6 != 0) {\n        uVar11 = quotearg_style(4,param_2);\n        uVar12 = dcgettext(0,\"cannot remove %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar13,uVar12,uVar11);\n      }\n      if (*(char *)(param_3 + 0x2e) != '\\0') {\n        uVar11 = quotearg_style(4,param_2);\n        uVar12 = dcgettext(0,\"removed %s\\n\",5);\n        __printf_chk(1,uVar12,uVar11);\n      }\n      *param_6 = '\\x01';\n      if (*(char *)(param_3 + 0x21) == '\\0') goto LAB_00108184;\n      uVar7 = set_process_security_ctx(param_1,param_2,param_4,1,param_3);\n      if ((char)uVar7 == '\\0') {\n        __ptr = (void *)0x0;\n        goto LAB_001080d9;\n      }\n    }\n    if (*param_6 != '\\0') goto LAB_00108184;\n    local_1d8 = 0;\n    if (iVar5 == 2) goto LAB_00108660;\n    goto LAB_001081e0;\n  }\nLAB_001082dd:\n  if (*param_6 != '\\0') goto LAB_00108184;\n  local_1d8 = 0;\nLAB_001082f3:\n  iVar5 = fstat(iVar6,&local_d8);\n  if (iVar5 != 0) {\n    uVar11 = quotearg_style(4,param_2);\n    uVar12 = dcgettext(0,\"cannot fstat %s\",5);\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar13,uVar12,uVar11);\n  }\n  if (cVar2 == '\\0') {\nLAB_001086e0:\n    __ptr = (void *)0x0;\nLAB_001084c8:\n    if (*(char *)(param_3 + 0x1f) != '\\0') {\n      local_188 = get_stat_mtime_isra_0(param_7[9],param_7[10]);\n      local_178 = get_stat_mtime_isra_0(param_7[0xb],param_7[0xc]);\n      iVar5 = fdutimens(iVar6,param_2,local_188);\n      if (iVar5 != 0) {\n        uVar11 = quotearg_style(4,param_2);\n        uVar12 = dcgettext(0,\"preserving times for %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar13,uVar12,uVar11);\n      }\n    }\n    local_1cc = uVar10;\n    if ((*(char *)(param_3 + 0x1d) != '\\0') &&\n       ((*(__uid_t *)((long)param_7 + 0x1c) != local_d8.st_uid ||\n        (*(__gid_t *)(param_7 + 4) != local_d8.st_gid)))) {\n      uVar7 = 0;\n      iVar5 = set_owner(param_3,param_2,iVar6,param_7,*param_6,&local_d8);\n      if (iVar5 == -1) goto LAB_001085c8;\n      local_1cc = uVar10 & 0xfffff1ff;\n      if (iVar5 != 0) {\n        local_1cc = uVar10;\n      }\n    }\n    if (*(char *)(param_3 + 0x27) == '\\0') {\nLAB_001086f0:\n      uVar7 = 1;\n    }\n    else {\n      uVar7 = copy_attr_isra_0();\n      if ((local_d8.st_mode & 0x80) == 0) {\n        _Var9 = geteuid();\n        if (_Var9 == 0) goto LAB_00108566;\n        iVar5 = fchmod_or_lchmod(iVar6,param_2,0x180);\n        if ((char)uVar7 == '\\0') {\n          uVar7 = *(byte *)(param_3 + 0x28) ^ 1;\n        }\n        if (iVar5 == 0) {\n          fchmod_or_lchmod(iVar6,param_2,~local_1d8 & param_4);\n        }\n      }\n      else {\nLAB_00108566:\n        if ((char)uVar7 != '\\0') goto LAB_001086f0;\n        uVar7 = *(byte *)(param_3 + 0x28) ^ 1;\n      }\n    }\n    if ((*(ulong *)(param_3 + 0x18) & 0xff0000000000ff) == 0) {\n      if (*(char *)(param_3 + 0x2b) == '\\0') {\n        if ((*(char *)(param_3 + 0x20) == '\\0') || (*param_6 == '\\0')) {\n          if (local_1d8 != 0) {\n            uVar10 = cached_umask();\n            if ((local_1d8 & ~uVar10) != 0) {\n              iVar5 = fchmod_or_lchmod(iVar6,param_2,param_4);\n              if (iVar5 != 0) {\n                uVar11 = quotearg_style(4,param_2);\n                uVar12 = dcgettext(0,\"preserving permissions for %s\",5);\n                    /* WARNING: Subroutine does not return */\n                error(0,*piVar13,uVar12,uVar11);\n              }\n            }\n          }\n        }\n        else {\n          uVar10 = cached_umask();\n          iVar5 = set_acl(param_2,iVar6,~uVar10 & 0x1b6);\n          if (iVar5 != 0) {\n            uVar7 = 0;\n          }\n        }\n      }\n      else {\n        iVar5 = set_acl(param_2,iVar6,*(undefined4 *)(param_3 + 0x10));\n        if (iVar5 != 0) {\n          uVar7 = 0;\n        }\n      }\n    }\n    else {\n      iVar5 = copy_acl(param_1,iVar4,param_2,iVar6,local_1cc);\n      if ((iVar5 != 0) && (*(char *)(param_3 + 0x24) != '\\0')) {\n        uVar7 = 0;\n      }\n    }\n  }\n  else {\n    if (*(int *)(param_3 + 0x38) != 0) {\n      iVar5 = clone_file(iVar6,iVar4);\n      if (iVar5 == 0) goto LAB_001086e0;\n      if (*(int *)(param_3 + 0x38) == 2) {\n        uVar11 = quotearg_n_style(1,4,param_1);\n        uVar12 = quotearg_n_style(0,4,param_2);\n        uVar18 = dcgettext(0,\"failed to clone %s from %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar13,uVar18,uVar12,uVar11);\n      }\n    }\n    iVar5 = getpagesize();\n    lVar14 = (long)iVar5;\n    uVar15 = io_blksize_isra_0(local_d8.st_blksize);\n    local_1b0 = 0x200;\n    if (local_d8.st_blksize - 1U < 0x2000000000000000) {\n      local_1b0 = local_d8.st_blksize;\n    }\n    fdadvise(iVar4,0,0,2);\n    cVar1 = is_probably_sparse(&local_168);\n    if ((local_d8.st_mode & 0xf000) == 0x8000) {\n      if (*(int *)(param_3 + 0xc) != 3) {\n        if ((*(int *)(param_3 + 0xc) == 2) && (cVar1 != '\\0')) {\n          __ptr = (void *)xmalloc(lVar14 + uVar15);\n          uVar11 = ptr_align(__ptr,lVar14);\n          goto LAB_00108a5a;\n        }\n        goto LAB_001083af;\n      }\n      __ptr = (void *)xmalloc(lVar14 + uVar15);\n      uVar11 = ptr_align(__ptr,lVar14);\n      if (cVar1 != '\\0') {\nLAB_00108a5a:\n        uVar8 = *(undefined4 *)(param_3 + 0xc);\n        goto LAB_00108a5d;\n      }\n      bVar19 = *(int *)(param_3 + 0xc) == 3;\nLAB_0010847d:\n      cVar2 = sparse_copy(iVar4,iVar6,uVar11,uVar15,local_1b0,bVar19,param_1,param_2,\n                          0xffffffffffffffff,&local_190,&local_191);\n      if (cVar2 != '\\0') {\n        if ((local_191 != '\\0') &&\n           (iVar5 = ftruncate(iVar6,CONCAT71(uStack_18f,local_190)), iVar5 < 0)) {\n          uVar11 = quotearg_style(4,param_2);\n          uVar12 = dcgettext(0,\"failed to extend %s\",5);\n                    /* WARNING: Subroutine does not return */\n          error(0,*piVar13,uVar12,uVar11);\n        }\n        goto LAB_001084c8;\n      }\n    }\n    else {\nLAB_001083af:\n      uVar11 = io_blksize_isra_0(local_168.st_blksize);\n      uVar16 = buffer_lcm(uVar11,uVar15,0x7fffffffffffffffU - lVar14);\n      if (((local_168.st_mode & 0xf000) == 0x8000) && ((ulong)local_168.st_size < uVar15)) {\n        uVar15 = local_168.st_size + 1;\n      }\n      uVar15 = (uVar16 - 1) + uVar15;\n      uVar15 = uVar15 - uVar15 % uVar16;\n      if ((uVar15 == 0) || (0x7fffffffffffffffU - lVar14 < uVar15)) {\n        uVar15 = uVar16;\n      }\n      __ptr = (void *)xmalloc(lVar14 + uVar15);\n      uVar11 = ptr_align(__ptr,lVar14);\n      if (cVar1 == '\\0') {\n        bVar19 = *(int *)(param_3 + 0xc) == 3;\nLAB_00108474:\n        local_1b0 = 0;\n        goto LAB_0010847d;\n      }\n      cVar2 = '\\0';\n      uVar8 = 1;\nLAB_00108a5d:\n      cVar1 = extent_copy(iVar4,iVar6,uVar11,uVar15,local_1b0,local_168.st_size,uVar8,param_1,\n                          param_2,&local_190);\n      if (cVar1 != '\\0') goto LAB_001084c8;\n      if (local_190 != '\\0') {\n        bVar19 = *(int *)(param_3 + 0xc) == 3;\n        if (cVar2 != '\\0') goto LAB_0010847d;\n        goto LAB_00108474;\n      }\n    }\n    uVar7 = 0;\n  }\nLAB_001085c8:\n  iVar5 = close(iVar6);\n  if (iVar5 < 0) {\n    uVar11 = quotearg_style(4,param_2);\n    uVar12 = dcgettext(0,\"failed to close %s\",5);\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar13,uVar12,uVar11);\n  }\nLAB_001080d9:\n  iVar4 = close(iVar4);\n  if (iVar4 < 0) {\n    uVar11 = quotearg_style(4,param_1);\n    uVar12 = dcgettext(0,\"failed to close %s\",5);\n    piVar13 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar13,uVar12,uVar11);\n  }\n  free(__ptr);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar7;\n}\n\n", 
    "00112410": "\nundefined8 get_stat_ctime_ns_isra_0(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00114830": "\nundefined leaf_optimization(void)\n\n{\n  long lVar1;\n  undefined uVar2;\n  \n  lVar1 = filesystem_type();\n  if (lVar1 == 0x52654973) {\n    uVar2 = 2;\n  }\n  else if (lVar1 < 0x52654974) {\n    uVar2 = 0;\n    if ((lVar1 != 0x6969) && (lVar1 != 0x9fa0)) {\n      return lVar1 != 0;\n    }\n  }\n  else {\n    uVar2 = 2;\n    if ((lVar1 != 0x58465342) && (uVar2 = 0, lVar1 != 0xff534d42)) {\n      uVar2 = lVar1 != 0x5346414f;\n    }\n  }\n  return uVar2;\n}\n\n", 
    "00103f00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00122ef0)();\n  return iVar1;\n}\n\n", 
    "001040d8": "\nvoid set_custom_quoting_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b5b0": "\nvoid extent_scan_init(undefined4 param_1,undefined4 *param_2)\n\n{\n  byte bVar1;\n  \n  *param_2 = param_1;\n  *(undefined8 *)(param_2 + 10) = 0;\n  *(undefined8 *)(param_2 + 2) = 0;\n  *(undefined8 *)(param_2 + 6) = 0;\n  *(undefined2 *)(param_2 + 8) = 0;\n  bVar1 = extent_need_sync();\n  param_2[4] = (uint)bVar1;\n  return;\n}\n\n", 
    "0010f790": "\nundefined8\nstrcaseeq5(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq6(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010e9a0": "\nulong hash_string(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "00113990": "\nvoid version_etc(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  version_etc_va();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001040d3": "\nvoid quotearg_n_options_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b190": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte copy_dir(undefined8 param_1,undefined8 param_2,undefined param_3,undefined8 param_4,\n             undefined8 param_5,undefined8 *param_6,byte *param_7,byte *param_8)\n\n{\n  byte bVar1;\n  char *__ptr;\n  size_t sVar2;\n  void *__ptr_00;\n  void *__ptr_01;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  byte bVar6;\n  char *__s;\n  long in_FS_OFFSET;\n  byte local_d5;\n  byte local_9a;\n  byte local_99;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  long local_40;\n  \n  local_98 = *param_6;\n  uStack_90 = param_6[1];\n  local_88 = param_6[2];\n  uStack_80 = param_6[3];\n  local_78 = param_6[4];\n  uStack_70 = param_6[5];\n  local_68 = param_6[6];\n  uStack_60 = param_6[7];\n  local_58 = param_6[8];\n  uStack_50 = param_6[9];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (char *)savedir(param_1,2);\n  if (__ptr == (char *)0x0) {\n    uVar3 = quotearg_style(4,param_1);\n    uVar4 = dcgettext(0,\"cannot access %s\",5);\n    piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(0,*piVar5,uVar4,uVar3);\n  }\n  if (*(int *)((long)param_6 + 4) == 3) {\n    local_98 = CONCAT44(2,(undefined4)local_98);\n  }\n  if (*__ptr == '\\0') {\n    local_d5 = 1;\n    bVar6 = 0;\n  }\n  else {\n    local_d5 = 1;\n    bVar6 = 0;\n    __s = __ptr;\n    do {\n      __ptr_00 = (void *)file_name_concat(param_1,__s,0);\n      __ptr_01 = (void *)file_name_concat(param_2,__s,0);\n      local_99 = *param_7;\n      bVar1 = copy_internal(__ptr_00,__ptr_01,param_3,param_4,param_5,&local_98,0,&local_99,\n                            &local_9a,0);\n      local_d5 = local_d5 & bVar1;\n      *param_8 = *param_8 | local_9a;\n      free(__ptr_01);\n      free(__ptr_00);\n      if (local_9a != 0) break;\n      bVar6 = bVar6 | local_99;\n      sVar2 = strlen(__s);\n      __s = __s + sVar2 + 1;\n    } while (*__s != '\\0');\n  }\n  free(__ptr);\n  *param_7 = bVar6;\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_d5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f670": "\nundefined8 strcaseeq7(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = c_isupper((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = strcaseeq8(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001040bf": "\nvoid hash_rehash_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_readlink_00122c28)();\n  return sVar1;\n}\n\n", 
    "00107da0": "\nulong chown_failure_ok(long param_1)\n\n{\n  bool bVar1;\n  int *piVar2;\n  ulong uVar3;\n  \n  piVar2 = __errno_location();\n  bVar1 = *piVar2 == 1 || *piVar2 == 0x16;\n  uVar3 = (ulong)piVar2 & 0xffffffffffffff00 | (ulong)bVar1;\n  if (bVar1) {\n    uVar3 = (ulong)(*(byte *)(param_1 + 0x1a) ^ 1);\n  }\n  return uVar3;\n}\n\n", 
    "001040ba": "\nvoid hash_get_first_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001172a0": "\nvoid randread_error(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = quote();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n                    /* WARNING: Subroutine does not return */\n    error(exit_failure,*piVar2,uVar3,uVar1);\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00112420": "\nuint utimecmpat(int param_1,char *param_2,long param_3,long param_4,uint param_5)\n\n{\n  ulong uVar1;\n  long lVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  ulong uVar7;\n  undefined8 *puVar8;\n  int iVar9;\n  int iVar10;\n  ulong uVar11;\n  int extraout_EDX;\n  int iVar12;\n  uint uVar13;\n  undefined8 *extraout_RDX;\n  ulong uVar14;\n  uint uVar15;\n  ulong uVar16;\n  uint uVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  undefined8 *local_138;\n  undefined8 local_108;\n  undefined4 local_100;\n  undefined local_fc;\n  timespec local_f8;\n  ulong local_e8;\n  ulong local_e0;\n  undefined local_d8 [88];\n  ulong local_80;\n  long local_78;\n  long local_40;\n  \n  uVar1 = *(ulong *)(param_3 + 0x58);\n  uVar18 = *(ulong *)(param_4 + 0x58);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar3 = get_stat_ctime_ns_isra_0(*(undefined8 *)(param_3 + 0x60));\n  iVar4 = get_stat_ctime_ns_isra_0(*(undefined8 *)(param_4 + 0x60));\n  uVar17 = param_5 & 1;\n  if ((param_5 & 1) == 0) {\nLAB_00112548:\n    if ((long)uVar18 <= (long)uVar1) {\n      uVar17 = 1;\n      if (uVar18 != uVar1) goto LAB_00112562;\n      if (iVar4 <= iVar3) {\n        uVar17 = (uint)(iVar4 < iVar3);\n        goto LAB_00112562;\n      }\n    }\n  }\n  else {\n    bVar19 = uVar1 == uVar18 && iVar3 == iVar4;\n    if (bVar19) {\n      uVar17 = 0;\n      goto LAB_00112562;\n    }\n    if ((long)(uVar18 - 1) <= (long)uVar1) {\n      if ((long)uVar18 < (long)(uVar1 - 1)) goto LAB_00112562;\n      if ((ht_5351 == 0) &&\n         (ht_5351 = hash_initialize(0x10,0,dev_info_hash,dev_info_compare,PTR_free_00122fc8),\n         ht_5351 == 0)) {\nLAB_001125e3:\n        local_138 = &local_108;\n        local_100 = 2000000000;\n        local_fc = 0;\n        iVar6 = 2000000000;\n      }\n      else {\n        lVar2 = ht_5351;\n        puVar8 = new_dst_res_5352;\n        if (new_dst_res_5352 == (undefined8 *)0x0) {\n          puVar8 = (undefined8 *)malloc(0x10);\n          new_dst_res_5352 = puVar8;\n          if (puVar8 != (undefined8 *)0x0) {\n            *(undefined4 *)(puVar8 + 1) = 2000000000;\n            *(undefined *)((long)puVar8 + 0xc) = 0;\n            goto LAB_001124db;\n          }\nLAB_00112a00:\n          local_108 = *extraout_RDX;\n          local_138 = (undefined8 *)hash_lookup(ht_5351,&local_108);\n          if (local_138 == (undefined8 *)0x0) goto LAB_001125e3;\n        }\n        else {\nLAB_001124db:\n          *puVar8 = *extraout_RDX;\n          local_138 = (undefined8 *)hash_insert(lVar2);\n          if (local_138 == (undefined8 *)0x0) {\n            if (ht_5351 == 0) goto LAB_001125e3;\n            goto LAB_00112a00;\n          }\n          if (new_dst_res_5352 == local_138) {\n            new_dst_res_5352 = (undefined8 *)0x0;\n          }\n        }\n        iVar6 = *(int *)(local_138 + 1);\n        if (*(char *)((long)local_138 + 0xc) != '\\0') {\n          uVar18 = uVar18 & (long)(int)~(uint)(iVar6 == 2000000000);\n          iVar4 = iVar4 - iVar4 % iVar6;\n          goto LAB_00112548;\n        }\n      }\n      get_stat_ctime_ns_isra_0(extraout_RDX[10]);\n      iVar5 = get_stat_ctime_ns_isra_0(extraout_RDX[0xe]);\n      iVar10 = extraout_EDX / 10;\n      iVar12 = iVar5 / 10;\n      iVar9 = iVar3 / 10;\n      if ((extraout_EDX % 10 | iVar5 % 10 | iVar3 % 10) == 0) {\n        uVar14 = extraout_RDX[9];\n        uVar7 = uVar18;\n        if (iVar6 < 0xb) {\n          uVar15 = 10;\n          *(undefined4 *)(local_138 + 1) = 10;\n        }\n        else {\n          uVar15 = 10;\n          if ((iVar10 % 10 | iVar12 % 10 | iVar9 % 10) == 0) {\n            iVar5 = 8;\n            do {\n              uVar15 = uVar15 * 10;\n              iVar10 = iVar10 / 10;\n              iVar12 = iVar12 / 10;\n              iVar9 = iVar9 / 10;\n              if ((iVar6 <= (int)uVar15) || ((iVar10 % 10 | iVar12 % 10 | iVar9 % 10) != 0)) {\n                bVar19 = uVar15 == 2000000000;\n                *(uint *)(local_138 + 1) = uVar15;\n                uVar7 = (long)(int)~(uint)bVar19 & uVar18;\n                goto LAB_00112833;\n              }\n              iVar5 = iVar5 + -1;\n            } while (iVar5 != 0);\n            if (((uVar14 | uVar1 | extraout_RDX[0xd]) & 1) == 0) {\n              *(undefined4 *)(local_138 + 1) = 2000000000;\n              uVar15 = 2000000000;\n              bVar19 = true;\n              uVar7 = uVar18 & 0xfffffffffffffffe;\n            }\n            else {\n              *(undefined4 *)(local_138 + 1) = 1000000000;\n              uVar15 = 1000000000;\n            }\n          }\n          else {\n            *(undefined4 *)(local_138 + 1) = 10;\n          }\n        }\nLAB_00112833:\n        if (((long)uVar18 < (long)uVar1) || ((iVar4 <= iVar3 && (uVar1 == uVar18))))\n        goto LAB_00112562;\n        if (((long)uVar1 < (long)uVar7) ||\n           ((uVar1 == uVar7 && (iVar3 < iVar4 - iVar4 % (int)uVar15)))) goto LAB_00112598;\n        local_e8 = bVar19 | uVar1;\n        local_e0 = (ulong)(int)(uVar15 / 9 + iVar3);\n        local_f8.tv_sec = uVar14;\n        local_f8.tv_nsec = (long)extraout_EDX;\n        iVar6 = utimensat(param_1,param_2,&local_f8,0x100);\n        if (iVar6 != 0) {\nLAB_00112aee:\n          uVar17 = 0xfffffffe;\n          goto LAB_00112562;\n        }\n        iVar6 = fstatat(param_1,param_2,(stat *)local_d8,0x100);\n        uVar11 = (ulong)iVar6;\n        uVar16 = local_80 ^ uVar1;\n        uVar14 = local_80;\n        uVar7 = get_stat_ctime_ns_isra_0(local_78);\n        uVar13 = (uint)uVar14;\n        if (((long)iVar3 ^ uVar7 | uVar11 | uVar16) != 0) {\n          local_e8 = uVar1;\n          local_e0 = (long)iVar3;\n          utimensat(param_1,param_2,&local_f8,0x100);\n          if (iVar6 != 0) goto LAB_00112aee;\n          uVar13 = (uint)local_80;\n          uVar7 = get_stat_ctime_ns_isra_0(local_78);\n        }\n        iVar6 = (int)uVar7 + (uVar13 & 1) * 1000000000;\n        uVar13 = iVar6 * -0x33333333 + 0x19999998;\n        if ((uVar13 >> 1 | (uint)((uVar13 & 1) != 0) << 0x1f) < 0x19999999) {\n          if (uVar15 == 10) {\n            uVar17 = 10;\n          }\n          else {\n            iVar10 = 9;\n            uVar17 = 10;\n            do {\n              iVar6 = iVar6 / 10;\n              uVar13 = iVar6 * -0x33333333 + 0x19999998;\n              if (0x19999998 < (uVar13 >> 1 | (uint)((uVar13 & 1) != 0) << 0x1f)) break;\n              iVar10 = iVar10 + -1;\n              if (iVar10 == 0) {\n                uVar17 = 2000000000;\n                break;\n              }\n              uVar17 = uVar17 * 10;\n            } while (uVar17 != uVar15);\n          }\n        }\n        uVar18 = uVar18 & (long)(int)~(uint)(uVar17 == 2000000000);\n        iVar4 = iVar4 - iVar4 % (int)uVar17;\n      }\n      *(uint *)(local_138 + 1) = uVar17;\n      *(undefined *)((long)local_138 + 0xc) = 1;\n      goto LAB_00112548;\n    }\n  }\nLAB_00112598:\n  uVar17 = 0xffffffff;\nLAB_00112562:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar17;\n}\n\n", 
    "001040c9": "\nvoid quoting_options_from_style_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010eb20": "\nvoid hash_clear(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010ebbb;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010ebbb:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "001040c4": "\nvoid hash_insert_if_absent_cold(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e590": "\nundefined8 hash_get_n_buckets(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "0010c6b0": "\nvoid argmatch_invalid(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = quote_n(1,param_1);\n  uVar3 = quotearg_n_style(0,8,param_2);\n                    /* WARNING: Subroutine does not return */\n  error(0,0,uVar1,uVar3,uVar2);\n}\n\n", 
    "00124408": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint symlinkat(char *__from,int __tofd,char *__to)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* symlinkat@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00111340": "\nvoid quotearg_alloc(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  quotearg_alloc_mem(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00116ce0": "\nulong is_zero_or_power_of_two(ulong param_1)\n\n{\n  return param_1 - 1 & 0xffffffffffffff00 | (ulong)((param_1 - 1 & param_1) == 0);\n}\n\n", 
    "00116aa0": "\nuint c_isblank(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00124400": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* mbsinit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "0010f320": "\nulong triple_hash(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = hash_pjw(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n", 
    "00113e00": "\nchar * xgetcwd(void)\n\n{\n  char *pcVar1;\n  int *piVar2;\n  \n  pcVar1 = getcwd((char *)0x0,0);\n  if (pcVar1 == (char *)0x0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      xalloc_die();\n    }\n  }\n  return pcVar1;\n}\n\n"
}