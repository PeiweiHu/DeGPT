{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101340": "\nvoid __list_add(long *param_1,long **param_2,long param_3)\n\n{\n  *(long **)(param_3 + 8) = param_1;\n  *param_1 = param_3;\n  param_1[1] = (long)param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101320": "\nvoid INIT_LIST_HEAD(long param_1)\n\n{\n  *(long *)(param_1 + 8) = param_1;\n  *(long *)param_1 = param_1;\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101380": "\nvoid list_del(undefined8 *param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)__list_del_isra_0(*param_1,param_1[1]);\n  puVar1[1] = 0;\n  *puVar1 = 0;\n  return;\n}\n\n", 
    "00101260": "\n/* WARNING: Removing unreachable block (ram,0x00101273) */\n/* WARNING: Removing unreachable block (ram,0x0010127f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101360": "\nvoid list_add_tail(undefined8 param_1,long param_2)\n\n{\n  __list_add(param_1,*(undefined8 *)(param_2 + 8),param_2);\n  return;\n}\n\n", 
    "001018c8": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fb8)();\n  return iVar1;\n}\n\n", 
    "001013a0": "\nvoid * node_new(long *param_1)\n\n{\n  int iVar1;\n  void *pvVar2;\n  \n  iVar1 = list_empty();\n  if (iVar1 != 0) {\n    pvVar2 = malloc(0x18);\n    return pvVar2;\n  }\n  pvVar2 = (void *)(*param_1 + -8);\n  list_del();\n  return pvVar2;\n}\n\n", 
    "001018c0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001013e0": "\nvoid bfs(long param_1,int param_2,int param_3,long *param_4,undefined8 param_5)\n\n{\n  int iVar1;\n  long lVar2;\n  int iVar3;\n  long lVar4;\n  int *piVar5;\n  long lVar6;\n  \n  while( true ) {\n    iVar3 = list_empty(param_4);\n    if (iVar3 != 0) break;\n    lVar2 = *param_4;\n    *(undefined *)(*(long *)(param_1 + (long)*(int *)(lVar2 + -8) * 8) + (long)*(int *)(lVar2 + -4))\n         = 0x50;\n    iVar3 = *(int *)(lVar2 + -8);\n    lVar6 = (long)iVar3;\n    if (iVar3 < 1) {\n      lVar4 = (long)*(int *)(lVar2 + -4);\n    }\n    else {\n      lVar4 = (long)*(int *)(lVar2 + -4);\n      if (*(char *)(*(long *)(param_1 + -8 + (long)iVar3 * 8) + lVar4) == 'O') {\n        piVar5 = (int *)node_new(param_5);\n        iVar1 = *(int *)(lVar2 + -4);\n        iVar3 = *(int *)(lVar2 + -8) + -1;\n        piVar5[1] = iVar1;\n        *piVar5 = iVar3;\n        *(undefined *)(*(long *)(param_1 + (long)iVar3 * 8) + (long)iVar1) = 0x50;\n        list_add_tail(piVar5 + 2,param_4);\n        lVar4 = (long)*(int *)(lVar2 + -4);\n        lVar6 = (long)*(int *)(lVar2 + -8);\n      }\n    }\n    if ((int)lVar4 < param_3 + -1) {\n      if (*(char *)(*(long *)(param_1 + (long)(int)lVar6 * 8) + 1 + (long)(int)lVar4) == 'O') {\n        piVar5 = (int *)node_new(param_5);\n        iVar1 = *(int *)(lVar2 + -8);\n        iVar3 = *(int *)(lVar2 + -4);\n        *piVar5 = iVar1;\n        iVar3 = iVar3 + 1;\n        lVar6 = *(long *)(param_1 + (long)iVar1 * 8);\n        piVar5[1] = iVar3;\n        *(undefined *)(lVar6 + iVar3) = 0x50;\n        list_add_tail(piVar5 + 2,param_4);\n        lVar6 = (long)*(int *)(lVar2 + -8);\n        lVar4 = (long)*(int *)(lVar2 + -4);\n      }\n    }\n    if ((int)lVar6 < param_2 + -1) {\n      if (*(char *)(*(long *)(param_1 + 8 + lVar6 * 8) + (long)(int)lVar4) == 'O') {\n        piVar5 = (int *)node_new(param_5);\n        iVar1 = *(int *)(lVar2 + -4);\n        iVar3 = *(int *)(lVar2 + -8) + 1;\n        piVar5[1] = iVar1;\n        *piVar5 = iVar3;\n        *(undefined *)(*(long *)(param_1 + (long)iVar3 * 8) + (long)iVar1) = 0x50;\n        list_add_tail(piVar5 + 2,param_4);\n        lVar4 = (long)*(int *)(lVar2 + -4);\n      }\n    }\n    if ((0 < (int)lVar4) &&\n       (*(char *)(*(long *)(param_1 + (long)*(int *)(lVar2 + -8) * 8) + -1 + lVar4) == 'O')) {\n      piVar5 = (int *)node_new(param_5);\n      iVar1 = *(int *)(lVar2 + -8);\n      iVar3 = *(int *)(lVar2 + -4);\n      *piVar5 = iVar1;\n      iVar3 = iVar3 + -1;\n      lVar6 = *(long *)(param_1 + (long)iVar1 * 8);\n      piVar5[1] = iVar3;\n      *(undefined *)(lVar6 + iVar3) = 0x50;\n      list_add_tail(piVar5 + 2,param_4);\n    }\n    list_del(lVar2);\n    list_add(lVar2,param_5);\n  }\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001010c0": "\nundefined8 main(void)\n\n{\n  char **ppcVar1;\n  char *pcVar2;\n  char **ppcVar3;\n  undefined4 *puVar4;\n  int iVar5;\n  long lVar6;\n  char **ppcVar7;\n  \n  ppcVar3 = (char **)malloc(0x28);\n  puVar4 = (undefined4 *)malloc(5);\n  *ppcVar3 = (char *)puVar4;\n  ppcVar1 = ppcVar3 + 5;\n  *puVar4 = 0x58585858;\n  *(undefined *)(puVar4 + 1) = 0x58;\n  puVar4 = (undefined4 *)malloc(5);\n  ppcVar3[1] = (char *)puVar4;\n  *puVar4 = 0x4f4f584f;\n  *(undefined *)(puVar4 + 1) = 0x58;\n  puVar4 = (undefined4 *)malloc(5);\n  ppcVar3[2] = (char *)puVar4;\n  *puVar4 = 0x4f584f4f;\n  *(undefined *)(puVar4 + 1) = 0x58;\n  puVar4 = (undefined4 *)malloc(5);\n  ppcVar3[3] = (char *)puVar4;\n  *puVar4 = 0x584f5858;\n  *(undefined *)(puVar4 + 1) = 0x58;\n  puVar4 = (undefined4 *)malloc(5);\n  iVar5 = 0x58;\n  ppcVar3[4] = (char *)puVar4;\n  *puVar4 = 0x4f4f5858;\n  *(undefined *)(puVar4 + 1) = 0x58;\n  ppcVar7 = ppcVar3;\n  while( true ) {\n    lVar6 = 0;\n    while( true ) {\n      lVar6 = lVar6 + 1;\n      __printf_chk(1,&DAT_00102004,iVar5);\n      if (lVar6 == 5) break;\n      iVar5 = (int)(*ppcVar7)[lVar6];\n    }\n    ppcVar7 = ppcVar7 + 1;\n    putchar(10);\n    if (ppcVar1 == ppcVar7) break;\n    iVar5 = (int)**ppcVar7;\n  }\n  putchar(10);\n  solve(ppcVar3,5,5);\n  do {\n    lVar6 = 0;\n    do {\n      pcVar2 = *ppcVar3 + lVar6;\n      lVar6 = lVar6 + 1;\n      __printf_chk(1,&DAT_00102004,(int)*pcVar2);\n    } while (lVar6 != 5);\n    ppcVar3 = ppcVar3 + 1;\n    putchar(10);\n  } while (ppcVar1 != ppcVar3);\n  return 0;\n}\n\n", 
    "00101310": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00101850": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101350": "\nvoid list_add(undefined8 param_1,undefined8 *param_2)\n\n{\n  __list_add(param_1,param_2,*param_2);\n  return;\n}\n\n", 
    "00101230": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101330": "\nbool list_empty(long *param_1)\n\n{\n  return (long *)*param_1 == param_1;\n}\n\n", 
    "00101370": "\nvoid __list_del_isra_0(long param_1,long *param_2)\n\n{\n  *(long **)(param_1 + 8) = param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fc0)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101290": "\n/* WARNING: Removing unreachable block (ram,0x001012b4) */\n/* WARNING: Removing unreachable block (ram,0x001012c0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001015b0": "\nvoid solve(long *param_1,int param_2,int param_3)\n\n{\n  long *plVar1;\n  int *piVar2;\n  undefined4 *puVar3;\n  ulong uVar4;\n  int extraout_EDX;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  bool bVar6;\n  undefined local_68 [16];\n  undefined local_58 [24];\n  long local_40;\n  \n  uVar4 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  INIT_LIST_HEAD(local_68);\n  INIT_LIST_HEAD(local_58);\n  if (0 < extraout_EDX) {\n    while( true ) {\n      if (*(char *)(*param_1 + uVar4) == 'O') {\n        puVar3 = (undefined4 *)node_new(local_58);\n        *puVar3 = 0;\n        puVar3[1] = (int)uVar4;\n        list_add_tail(puVar3 + 2,local_68);\n        bfs(param_1,param_2,param_3,local_68,local_58);\n      }\n      if (extraout_EDX - 1 == uVar4) break;\n      uVar4 = uVar4 + 1;\n    }\n    uVar4 = 0;\n    while( true ) {\n      if (*(char *)(param_1[(long)param_2 + -1] + uVar4) == 'O') {\n        piVar2 = (int *)node_new(local_58);\n        piVar2[1] = (int)uVar4;\n        *piVar2 = param_2 + -1;\n        list_add_tail(piVar2 + 2,local_68);\n        bfs(param_1,param_2,param_3,local_68,local_58);\n      }\n      if (uVar4 == extraout_EDX - 1) break;\n      uVar4 = uVar4 + 1;\n    }\n  }\n  uVar5 = (ulong)(param_2 - 1);\n  uVar4 = 0;\n  if (0 < param_2) {\n    while( true ) {\n      if (*(char *)param_1[uVar4] == 'O') {\n        puVar3 = (undefined4 *)node_new(local_58);\n        *puVar3 = (int)uVar4;\n        puVar3[1] = 0;\n        list_add_tail(puVar3 + 2,local_68);\n        bfs(param_1,param_2,param_3,local_68,local_58);\n      }\n      if (uVar5 == uVar4) break;\n      uVar4 = uVar4 + 1;\n    }\n    uVar4 = 0;\n    while( true ) {\n      if (*(char *)(param_1[uVar4] + (long)param_3 + -1) == 'O') {\n        puVar3 = (undefined4 *)node_new(local_58);\n        *puVar3 = (int)uVar4;\n        puVar3[1] = param_3 + -1;\n        list_add_tail(puVar3 + 2,local_68);\n        bfs(param_1,param_2,param_3,local_68,local_58);\n      }\n      if (uVar5 == uVar4) break;\n      uVar4 = uVar4 + 1;\n    }\n    plVar1 = param_1 + uVar5 + 1;\n    do {\n      uVar4 = 0;\n      if (0 < param_3) {\n        do {\n          *(char *)(*param_1 + uVar4) = (*(char *)(*param_1 + uVar4) != 'P') * '\\t' + 'O';\n          bVar6 = uVar4 != param_3 - 1;\n          uVar4 = uVar4 + 1;\n        } while (bVar6);\n      }\n      param_1 = param_1 + 1;\n    } while (plVar1 != param_1);\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001012d0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}