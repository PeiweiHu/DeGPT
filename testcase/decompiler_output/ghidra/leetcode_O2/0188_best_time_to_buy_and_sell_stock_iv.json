{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fa0)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101100": "\nundefined8 main(int param_1,long param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined4 uVar3;\n  void *pvVar4;\n  ulong uVar5;\n  bool bVar6;\n  \n  if (1 < param_1) {\n    iVar1 = param_1 + -2;\n    pvVar4 = malloc((long)iVar1 << 2);\n    if (iVar1 != 0) {\n      uVar5 = 0;\n      do {\n        iVar2 = atoi(*(char **)(param_2 + 0x10 + uVar5 * 8));\n        *(int *)((long)pvVar4 + uVar5 * 4) = iVar2;\n        bVar6 = uVar5 != param_1 - 3;\n        uVar5 = uVar5 + 1;\n      } while (bVar6);\n    }\n    iVar2 = atoi(*(char **)(param_2 + 8));\n    uVar3 = maxProfit(iVar2,pvVar4,iVar1);\n    __printf_chk(1,&DAT_0010201e,uVar3);\n    return 0;\n  }\n  fwrite(\"Usage: ./test k n1 n2...\\n\",1,0x19,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101480": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fa8)();\n  return pvVar1;\n}\n\n", 
    "001012a0": "\nint max(int param_1,int param_2)\n\n{\n  if (param_1 <= param_2) {\n    param_1 = param_2;\n  }\n  return param_1;\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "001011e0": "\n/* WARNING: Removing unreachable block (ram,0x001011f3) */\n/* WARNING: Removing unreachable block (ram,0x001011ff) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001010c0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fb8)();\n  return;\n}\n\n", 
    "00101410": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101210": "\n/* WARNING: Removing unreachable block (ram,0x00101234) */\n/* WARNING: Removing unreachable block (ram,0x00101240) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00101250": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atoi(char *__nptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* atoi@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101290": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb0)();\n  return pvVar1;\n}\n\n", 
    "001011b0": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001012b0": "\nint maxProfit(int param_1,int *param_2,int param_3)\n\n{\n  int iVar1;\n  uint uVar2;\n  int **ppiVar3;\n  int *piVar4;\n  int *piVar5;\n  long lVar6;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  int iVar7;\n  ulong uVar8;\n  long lVar9;\n  int **ppiVar10;\n  int **ppiVar11;\n  \n  iVar1 = 0;\n  iVar7 = iVar1;\n  if (param_3 != 0) {\n    if (param_3 >> 1 < param_1) {\n      iVar7 = 0;\n      if (param_3 != 1) {\n        piVar4 = param_2 + (ulong)(param_3 - 2) + 1;\n        do {\n          if (*param_2 < param_2[1]) {\n            iVar1 = (param_2[1] - *param_2) + iVar1;\n          }\n          param_2 = param_2 + 1;\n          iVar7 = iVar1;\n        } while (param_2 != piVar4);\n      }\n    }\n    else {\n      ppiVar3 = (int **)malloc((long)(param_1 + 1) * 8);\n      if (-1 < param_1) {\n        ppiVar10 = ppiVar3;\n        do {\n          ppiVar11 = ppiVar10 + 1;\n          piVar4 = (int *)calloc((long)(param_3 + 1) << 2,1);\n          *ppiVar10 = piVar4;\n          ppiVar10 = ppiVar11;\n        } while (ppiVar11 != ppiVar3 + (long)param_1 + 1);\n      }\n      if (0 < param_1) {\n        iVar7 = *param_2;\n        lVar9 = (ulong)(param_3 - 1) + 1;\n        ppiVar10 = ppiVar3;\n        do {\n          piVar4 = *ppiVar10;\n          piVar5 = ppiVar10[1];\n          lVar6 = 1;\n          uVar8 = (ulong)(uint)(*piVar4 - iVar7);\n          iVar1 = iVar7;\n          while( true ) {\n            iVar1 = max(piVar5[lVar6 + -1],iVar1 + (int)uVar8);\n            piVar5[extraout_RDX] = iVar1;\n            lVar6 = extraout_RDX;\n            if ((int)extraout_RDX < param_3) {\n              uVar2 = max(uVar8 & 0xffffffff,piVar4[extraout_RDX] - param_2[extraout_RDX]);\n              uVar8 = (ulong)uVar2;\n              lVar6 = extraout_RDX_00;\n            }\n            if (lVar9 == lVar6) break;\n            iVar1 = param_2[lVar6];\n            lVar6 = lVar6 + 1;\n          }\n          ppiVar10 = ppiVar10 + 1;\n        } while (ppiVar3 + (ulong)(param_1 - 1) + 1 != ppiVar10);\n      }\n      iVar7 = ppiVar3[(long)(param_1 + 1) + -1][param_3];\n    }\n  }\n  return iVar7;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atoi(char *__nptr)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_atoi_00103fc0)();\n  return iVar1;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101488": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n"
}