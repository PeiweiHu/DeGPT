{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fa0)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101560": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101100": "\nundefined8 main(int param_1,long param_2)\n\n{\n  char cVar1;\n  char *__s;\n  \n  if (param_1 == 3) {\n    cVar1 = isScramble(*(undefined8 *)(param_2 + 8),*(undefined8 *)(param_2 + 0x10));\n    __s = \"true\";\n    if (cVar1 == '\\0') {\n      __s = \"false\";\n    }\n    puts(__s);\n    return 0;\n  }\n  fwrite(\"Usage: ./test s1 s2\\n\",1,0x14,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101260": "\nundefined8 scramble(long param_1,int param_2,int param_3,long param_4,int param_5,int param_6)\n\n{\n  int *piVar1;\n  char cVar2;\n  int iVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  long lVar6;\n  undefined8 *puVar7;\n  int iVar8;\n  char *__s2;\n  char *__s1;\n  long in_FS_OFFSET;\n  byte bVar9;\n  undefined8 local_448 [64];\n  undefined8 local_248 [65];\n  long local_40;\n  \n  bVar9 = 0;\n  uVar5 = param_3 - param_2;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar4 = 0;\n  if (uVar5 == param_6 - param_5) {\n    __s2 = (char *)(param_4 + param_5);\n    __s1 = (char *)(param_1 + param_2);\n    iVar3 = memcmp(__s1,__s2,(long)(int)(uVar5 + 1));\n    uVar4 = 1;\n    if (iVar3 != 0) {\n      puVar7 = local_448;\n      for (lVar6 = 0x40; lVar6 != 0; lVar6 = lVar6 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + (ulong)bVar9 * -2 + 1;\n      }\n      puVar7 = local_248;\n      for (lVar6 = 0x40; lVar6 != 0; lVar6 = lVar6 + -1) {\n        *puVar7 = 0;\n        puVar7 = puVar7 + (ulong)bVar9 * -2 + 1;\n      }\n      if (param_2 <= param_3) {\n        do {\n          cVar2 = *__s1;\n          __s1 = __s1 + 1;\n          piVar1 = (int *)((long)local_448 + (long)cVar2 * 4);\n          *piVar1 = *piVar1 + 1;\n        } while (__s1 != (char *)(param_1 + 1 + (long)param_2 + (ulong)uVar5));\n      }\n      if (param_5 <= param_6) {\n        do {\n          cVar2 = *__s2;\n          __s2 = __s2 + 1;\n          piVar1 = (int *)((long)local_248 + (long)cVar2 * 4);\n          *piVar1 = *piVar1 + 1;\n        } while (__s2 != (char *)(param_4 + 1 + (long)param_5 + (ulong)(uint)(param_6 - param_5)));\n      }\n      iVar3 = memcmp(local_448,local_248,0x200);\n      uVar4 = 0;\n      if ((iVar3 == 0) && (0 < (int)uVar5)) {\n        iVar3 = 1;\n        do {\n          iVar8 = param_2 + -1 + iVar3;\n          cVar2 = scramble(param_1,param_2,iVar8,param_4,param_5,param_5 + -1 + iVar3);\n          if (cVar2 != '\\0') {\n            uVar4 = scramble(param_1,param_2 + iVar3,param_3,param_4,param_5 + iVar3,param_6);\n            if ((char)uVar4 != '\\0') goto LAB_00101478;\n          }\n          cVar2 = scramble(param_1,param_2,iVar8,param_4,(param_6 + 1) - iVar3,param_6);\n          if (cVar2 != '\\0') {\n            uVar4 = scramble(param_1,param_2 + iVar3,param_3,param_4,param_5,param_6 - iVar3);\n            if ((char)uVar4 != '\\0') goto LAB_00101478;\n          }\n          iVar3 = iVar3 + 1;\n        } while (iVar3 <= (int)uVar5);\n        uVar4 = 0;\n      }\n    }\n  }\nLAB_00101478:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar4;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fa8)();\n  return iVar1;\n}\n\n", 
    "001011a0": "\n/* WARNING: Removing unreachable block (ram,0x001011b3) */\n/* WARNING: Removing unreachable block (ram,0x001011bf) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001010e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "001010c0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fb8)();\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101210": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00101170": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101250": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001014b0": "\nvoid isScramble(char *param_1,char *param_2)\n\n{\n  size_t sVar1;\n  size_t sVar2;\n  \n  sVar1 = strlen(param_2);\n  sVar2 = strlen(param_1);\n  scramble(param_1,0,(int)sVar2 + -1,param_2,0,(int)sVar1 + -1);\n  return;\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fb0)();\n  return sVar1;\n}\n\n", 
    "001014f0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00103fc0)();\n  return iVar1;\n}\n\n", 
    "001011d0": "\n/* WARNING: Removing unreachable block (ram,0x001011f4) */\n/* WARNING: Removing unreachable block (ram,0x00101200) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00101568": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* puts@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}