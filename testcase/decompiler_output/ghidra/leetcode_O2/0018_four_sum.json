{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101240": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101280": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001015c8": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_00103fb8)();\n  return;\n}\n\n", 
    "001015c0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001014a0": "\nvoid * fourSum(void *param_1,int param_2,undefined4 param_3,undefined4 *param_4,void **param_5)\n\n{\n  void *pvVar1;\n  void *pvVar2;\n  \n  *param_4 = 0;\n  pvVar1 = malloc(400000);\n  pvVar2 = malloc(200000);\n  *param_5 = pvVar2;\n  if (3 < param_2) {\n    qsort(param_1,(long)param_2,4,compare);\n    pvVar2 = malloc(0x10);\n    k_sum_constprop_0(param_1,0,param_2 + -1,param_3,4,pvVar2,0,pvVar1,param_4,*param_5);\n  }\n  return pvVar1;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001011a0": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001012a0": "\nvoid k_sum_constprop_0(long param_1,int param_2,uint param_3,int param_4,int param_5,\n                      undefined4 *param_6,int param_7,long param_8,int *param_9,long param_10)\n\n{\n  undefined4 *puVar1;\n  int iVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  long lVar7;\n  void *pvVar8;\n  long lVar9;\n  ulong uVar10;\n  int iVar11;\n  ulong uVar12;\n  long lVar13;\n  \n  uVar12 = (ulong)param_3;\n  if (param_5 == 2) {\n    if (param_2 < (int)param_3) {\n      do {\n        iVar6 = *(int *)(param_1 + (long)(int)uVar12 * 4);\n        while( true ) {\n          iVar11 = *(int *)(param_1 + (long)param_2 * 4);\n          iVar6 = iVar6 + iVar11;\n          if (iVar6 < param_4) break;\n          iVar2 = (int)uVar12;\n          if (param_4 < iVar6) {\n            uVar12 = (ulong)(iVar2 - 1U);\n            goto LAB_00101473;\n          }\n          param_6[param_7] = iVar11;\n          param_6[param_7 + 1] = *(undefined4 *)(param_1 + (long)iVar2 * 4);\n          iVar6 = *param_9;\n          pvVar8 = malloc(0x10);\n          *(void **)(param_8 + (long)iVar6 * 8) = pvVar8;\n          uVar3 = param_6[1];\n          uVar4 = param_6[2];\n          uVar5 = param_6[3];\n          puVar1 = *(undefined4 **)(param_8 + (long)*param_9 * 8);\n          *puVar1 = *param_6;\n          puVar1[1] = uVar3;\n          puVar1[2] = uVar4;\n          puVar1[3] = uVar5;\n          *(undefined4 *)(param_10 + (long)*param_9 * 4) = 4;\n          *param_9 = *param_9 + 1;\n          lVar13 = (long)(param_2 + 1);\n          do {\n            param_2 = (int)lVar13;\n            if (iVar2 <= param_2) break;\n            lVar7 = lVar13 * 4;\n            lVar13 = lVar13 + 1;\n          } while (*(int *)(param_1 + lVar7) == *(int *)(param_1 + -8 + lVar13 * 4));\n          uVar10 = (ulong)(int)(iVar2 - 1U);\n          do {\n            uVar12 = uVar10 & 0xffffffff;\n            if ((int)uVar10 <= param_2) {\n              return;\n            }\n            iVar6 = *(int *)(param_1 + uVar10 * 4);\n            uVar10 = uVar10 - 1;\n          } while (iVar6 == *(int *)(param_1 + 8 + uVar10 * 4));\n        }\n        param_2 = param_2 + 1;\nLAB_00101473:\n      } while (param_2 < (int)uVar12);\n    }\n  }\n  else if (param_2 <= (int)((param_3 - param_5) + 1)) {\n    lVar9 = (long)param_2;\n    lVar13 = lVar9 + 1;\n    iVar11 = param_2 + 1;\n    lVar7 = (ulong)(((param_3 - param_5) - param_2) + 1) + lVar13;\n    iVar6 = *(int *)(param_1 + lVar9 * 4);\n    do {\n      param_6[param_7] = iVar6;\n      k_sum_constprop_0(param_1,iVar11,uVar12,param_4 - *(int *)(param_1 + lVar9 * 4),param_5 + -1,\n                        param_6,param_7 + 1,param_8,param_9,param_10);\n      do {\n        lVar9 = lVar13;\n        if (lVar7 == lVar9) {\n          return;\n        }\n        iVar6 = *(int *)(param_1 + lVar9 * 4);\n        lVar13 = lVar9 + 1;\n        iVar11 = (int)lVar9 + 1;\n      } while ((param_2 < (int)lVar9) && (iVar6 == *(int *)(param_1 + -4 + lVar9 * 4)));\n    } while( true );\n  }\n  return;\n}\n\n", 
    "001010c0": "\nundefined8 main(void)\n\n{\n  undefined4 *puVar1;\n  long lVar2;\n  long lVar3;\n  long in_FS_OFFSET;\n  int local_54;\n  undefined local_50 [8];\n  undefined8 local_48;\n  undefined8 local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = 0x100000000;\n  local_38 = 0x500000001;\n  local_40 = 5;\n  local_30 = 0xfffffffc00000005;\n  lVar2 = fourSum(&local_48,8,0xb,&local_54,local_50);\n  if (0 < local_54) {\n    lVar3 = 0;\n    do {\n      puVar1 = *(undefined4 **)(lVar2 + lVar3 * 8);\n      lVar3 = lVar3 + 1;\n      __printf_chk(1,\"%d %d %d %d\\n\",*puVar1,puVar1[1],puVar1[2],puVar1[3]);\n    } while ((int)lVar3 < local_54);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101550": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fc0)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101290": "\nint compare(int *param_1,int *param_2)\n\n{\n  return *param_1 - *param_2;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001011d0": "\n/* WARNING: Removing unreachable block (ram,0x001011e3) */\n/* WARNING: Removing unreachable block (ram,0x001011ef) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00101200": "\n/* WARNING: Removing unreachable block (ram,0x00101224) */\n/* WARNING: Removing unreachable block (ram,0x00101230) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* qsort@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}