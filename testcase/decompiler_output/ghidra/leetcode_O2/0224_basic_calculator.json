{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101120": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb8)();\n  return pvVar1;\n}\n\n", 
    "00101180": "\n/* WARNING: Removing unreachable block (ram,0x001011a4) */\n/* WARNING: Removing unreachable block (ram,0x001011b0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001013a0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001011c0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "00101418": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "001010c0": "\nundefined8 main(int param_1,long param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == 2) {\n    uVar1 = calculator(*(undefined8 *)(param_2 + 8));\n    __printf_chk(1,&DAT_00102052,uVar1);\n    return 0;\n  }\n  fwrite(\"Usage: ./test string\\n\",1,0x15,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "00101410": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101210": "\nint calculator(byte *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  byte bVar3;\n  undefined4 *puVar4;\n  void *pvVar5;\n  long lVar6;\n  uint uVar7;\n  int iVar8;\n  int iVar9;\n  int unaff_R12D;\n  \n  puVar4 = (undefined4 *)malloc(4000);\n  pvVar5 = malloc(1000);\n  bVar3 = *param_1;\n  uVar7 = (uint)bVar3;\n  *puVar4 = 0;\n  if (bVar3 != 0) {\n    iVar9 = 0;\n    iVar8 = 1;\n    do {\n      switch(uVar7 - 0x20 & 0xff) {\n      case 0:\n        uVar7 = (uint)param_1[1];\n        param_1 = param_1 + 1;\n        break;\n      default:\n        unaff_R12D = 0;\n        bVar3 = *param_1;\n        while (uVar7 = (uint)(char)bVar3, (byte)(bVar3 - 0x30) < 10) {\n          param_1 = param_1 + 1;\n          unaff_R12D = (uVar7 - 0x30) + unaff_R12D * 10;\n          bVar3 = *param_1;\n        }\n        if (iVar8 == 1) {\n          iVar8 = 2;\n          lVar6 = 4;\n        }\n        else if (*(char *)((long)pvVar5 + (long)iVar9 + -1) == '(') {\n          lVar6 = (long)iVar8;\n          iVar8 = iVar8 + 1;\n          lVar6 = lVar6 << 2;\n        }\n        else {\n          iVar9 = iVar9 + -1;\n          lVar6 = (long)(iVar8 + -1) * 4;\n          if (*(char *)((long)pvVar5 + (long)iVar9) == '+') {\n            unaff_R12D = unaff_R12D + puVar4[iVar8 + -1];\n          }\n          else {\n            unaff_R12D = puVar4[iVar8 + -1] - unaff_R12D;\n          }\n        }\n        *(int *)((long)puVar4 + lVar6) = unaff_R12D;\n        break;\n      case 8:\n      case 0xb:\n      case 0xd:\n        lVar6 = (long)iVar9;\n        param_1 = param_1 + 1;\n        iVar9 = iVar9 + 1;\n        *(char *)((long)pvVar5 + lVar6) = (char)uVar7;\n        uVar7 = (uint)*param_1;\n        break;\n      case 9:\n        iVar1 = iVar9 + -1;\n        if (((1 < iVar8) && (0 < iVar1)) && (*(char *)((long)pvVar5 + (long)iVar1 + -1) != '(')) {\n          iVar2 = iVar8 + -1;\n          iVar1 = iVar9 + -2;\n          iVar8 = iVar8 + -2;\n          unaff_R12D = puVar4[(long)iVar2 + -1] - puVar4[iVar2];\n          if (*(char *)((long)pvVar5 + (long)iVar1) == '+') {\n            unaff_R12D = puVar4[iVar2] + puVar4[(long)iVar2 + -1];\n          }\n        }\n        iVar9 = iVar1;\n        lVar6 = (long)iVar8;\n        param_1 = param_1 + 1;\n        iVar8 = iVar8 + 1;\n        puVar4[lVar6] = unaff_R12D;\n        uVar7 = (uint)*param_1;\n      }\n    } while ((char)uVar7 != '\\0');\n  }\n  return unaff_R12D;\n}\n\n", 
    "00101150": "\n/* WARNING: Removing unreachable block (ram,0x00101163) */\n/* WARNING: Removing unreachable block (ram,0x0010116f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101090": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fc0)();\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00101200": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}