{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101440": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fb8)();\n  return iVar1;\n}\n\n", 
    "001012c0": "\nundefined4 calculateMinimumHP_constprop_0(long *param_1)\n\n{\n  int *piVar1;\n  undefined4 *puVar2;\n  void **ppvVar3;\n  void *pvVar4;\n  int *piVar5;\n  long lVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  \n  ppvVar3 = (void **)malloc(0x18);\n  pvVar4 = malloc(0xc);\n  *ppvVar3 = pvVar4;\n  pvVar4 = malloc(0xc);\n  ppvVar3[1] = pvVar4;\n  piVar5 = (int *)malloc(0xc);\n  piVar1 = (int *)param_1[2];\n  puVar2 = (undefined4 *)*ppvVar3;\n  lVar6 = param_1[1];\n  ppvVar3[2] = piVar5;\n  iVar7 = 1 - piVar1[2];\n  if (iVar7 < 1) {\n    iVar7 = 1;\n  }\n  piVar5[2] = iVar7;\n  iVar7 = iVar7 - *(int *)(lVar6 + 8);\n  if (iVar7 < 1) {\n    iVar7 = 1;\n  }\n  *(int *)((long)ppvVar3[1] + 8) = iVar7;\n  iVar7 = iVar7 - *(int *)(*param_1 + 8);\n  if (iVar7 < 1) {\n    iVar7 = 1;\n  }\n  puVar2[2] = iVar7;\n  iVar7 = piVar5[2] - piVar1[1];\n  if (iVar7 < 1) {\n    iVar7 = 1;\n  }\n  piVar5[1] = iVar7;\n  iVar8 = iVar7 - *piVar1;\n  if (iVar7 - *piVar1 < 1) {\n    iVar8 = 1;\n  }\n  lVar6 = 8;\n  *piVar5 = iVar8;\n  do {\n    piVar1 = *(int **)((long)ppvVar3 + lVar6 + 8);\n    piVar5 = *(int **)((long)ppvVar3 + lVar6);\n    iVar7 = (*(int **)((long)param_1 + lVar6))[1];\n    iVar8 = **(int **)((long)param_1 + lVar6);\n    iVar9 = piVar1[1] - iVar7;\n    iVar7 = piVar5[2] - iVar7;\n    if (iVar9 < 1) {\n      iVar9 = 1;\n    }\n    if (iVar7 < 1) {\n      iVar7 = 1;\n    }\n    if (iVar7 < iVar9) {\n      iVar9 = iVar7;\n    }\n    piVar5[1] = iVar9;\n    iVar9 = iVar9 - iVar8;\n    iVar8 = *piVar1 - iVar8;\n    if (iVar9 < 1) {\n      iVar9 = 1;\n    }\n    if (iVar8 < 1) {\n      iVar8 = 1;\n    }\n    if (iVar8 < iVar9) {\n      iVar9 = iVar8;\n    }\n    lVar6 = lVar6 + -8;\n    *piVar5 = iVar9;\n  } while (lVar6 != -8);\n  return *puVar2;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001010c0": "\nundefined8 main(void)\n\n{\n  undefined4 *puVar1;\n  undefined8 *puVar2;\n  undefined4 uVar3;\n  void **ppvVar4;\n  void *pvVar5;\n  long lVar6;\n  void **ppvVar7;\n  \n  ppvVar4 = (void **)malloc(0x18);\n  pvVar5 = malloc(0xc);\n  *ppvVar4 = pvVar5;\n  pvVar5 = malloc(0xc);\n  ppvVar4[1] = pvVar5;\n  pvVar5 = malloc(0xc);\n  ppvVar4[2] = pvVar5;\n  puVar2 = (undefined8 *)*ppvVar4;\n  *puVar2 = 0xfffffffd00000001;\n  *(undefined4 *)(puVar2 + 1) = 3;\n  puVar2 = (undefined8 *)ppvVar4[1];\n  *puVar2 = 0xfffffffe00000000;\n  *(undefined4 *)(puVar2 + 1) = 0;\n  puVar2 = (undefined8 *)ppvVar4[2];\n  *puVar2 = 0xfffffffdfffffffd;\n  *(undefined4 *)(puVar2 + 1) = 0xfffffffd;\n  puts(\"dungeon:\");\n  ppvVar7 = ppvVar4;\n  do {\n    lVar6 = 0;\n    do {\n      puVar1 = (undefined4 *)((long)*ppvVar7 + lVar6);\n      lVar6 = lVar6 + 4;\n      __printf_chk(1,&DAT_0010200d,*puVar1);\n    } while (lVar6 != 0xc);\n    ppvVar7 = ppvVar7 + 1;\n    putchar(10);\n  } while (ppvVar4 + 3 != ppvVar7);\n  uVar3 = calculateMinimumHP_constprop_0(ppvVar4);\n  __printf_chk(1,&DAT_00102011,uVar3);\n  return 0;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101230": "\n/* WARNING: Removing unreachable block (ram,0x00101254) */\n/* WARNING: Removing unreachable block (ram,0x00101260) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101270": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* puts@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fc0)();\n  return iVar1;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "001013d0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001012b0": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001011d0": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101448": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00101200": "\n/* WARNING: Removing unreachable block (ram,0x00101213) */\n/* WARNING: Removing unreachable block (ram,0x0010121f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}