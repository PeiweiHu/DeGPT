{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103f78)();\n  return;\n}\n\n", 
    "00105068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_00103f88)();\n  return pcVar1;\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00101140": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fa8)();\n  return pvVar1;\n}\n\n", 
    "00105060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101180": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "001013a0": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "001013e0": "\nvoid list_add(undefined8 param_1,undefined8 *param_2)\n\n{\n  __list_add(param_1,param_2,*param_2);\n  return;\n}\n\n", 
    "001012c0": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001011a0": "\nundefined8 main(int param_1,long param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long in_FS_OFFSET;\n  int local_3c;\n  long local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 3) {\n    fwrite(\"Usage: ./test begin end dict...\\n\",1,0x20,stderr);\n                    /* WARNING: Subroutine does not return */\n    exit(-1);\n  }\n  local_3c = 0;\n  plVar3 = (long *)findLadders(*(undefined8 *)(param_2 + 8),*(undefined8 *)(param_2 + 0x10),\n                               param_2 + 0x18,param_1 + -3,&local_3c,&local_38);\n  if (0 < local_3c) {\n    lVar5 = 0;\n    do {\n      lVar4 = 0;\n      if (0 < *(int *)(local_38 + lVar5 * 4)) {\n        do {\n          lVar1 = lVar4 * 8;\n          lVar4 = lVar4 + 1;\n          __printf_chk(1,&DAT_00102029,*(undefined8 *)(*plVar3 + lVar1));\n          piVar2 = (int *)(local_38 + lVar5 * 4);\n        } while (*piVar2 != (int)lVar4 && (int)lVar4 <= *piVar2);\n      }\n      lVar5 = lVar5 + 1;\n      plVar3 = plVar3 + 1;\n      putchar(10);\n    } while ((int)lVar5 < local_3c);\n  }\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return 0;\n}\n\n", 
    "001014c0": "\nvoid __list_del_isra_0(long param_1,long *param_2)\n\n{\n  *(long **)(param_1 + 8) = param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101130": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00103fa0)();\n  return pvVar1;\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00101170": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fc0)();\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcpy@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001014f0": "\nvoid * findLadders(char *param_1,char *param_2,char **param_3,int param_4,int *param_5,int **param_6\n                  )\n\n{\n  char cVar1;\n  int iVar2;\n  long **pplVar3;\n  long *plVar4;\n  bool bVar5;\n  int iVar6;\n  int iVar7;\n  uint uVar8;\n  int iVar9;\n  size_t sVar10;\n  char *pcVar11;\n  void *pvVar12;\n  void *pvVar13;\n  char **ppcVar14;\n  char **ppcVar15;\n  long lVar16;\n  long **pplVar17;\n  char *pcVar18;\n  long **pplVar19;\n  int *piVar20;\n  int *piVar21;\n  int *piVar22;\n  ulong uVar23;\n  void *pvVar24;\n  uint uVar25;\n  long lVar26;\n  char cVar27;\n  long in_FS_OFFSET;\n  undefined auVar28 [16];\n  long **local_b8;\n  char *local_b0;\n  long local_58 [3];\n  long local_40;\n  \n  iVar2 = param_4 * 2;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar10 = strlen(param_1);\n  iVar6 = (int)sVar10;\n  pcVar11 = (char *)malloc((long)(iVar6 + 1));\n  pvVar12 = malloc((long)iVar2 << 4);\n  pvVar24 = pvVar12;\n  if (0 < iVar2) {\n    do {\n      auVar28 = INIT_LIST_HEAD(pvVar24);\n      pvVar24 = (void *)(SUB168(auVar28 >> 0x40,0) + 0x10);\n    } while (SUB168(auVar28,0) != pvVar24);\n  }\n  pvVar24 = malloc((long)param_4 << 4);\n  if (param_4 < 1) {\n    *param_5 = 0;\n  }\n  else {\n    uVar23 = (ulong)(param_4 - 1);\n    pvVar13 = pvVar24;\n    do {\n      auVar28 = INIT_LIST_HEAD(pvVar13);\n      pvVar13 = (void *)(SUB168(auVar28,0) + 0x10);\n    } while (pvVar13 != SUB168(auVar28 >> 0x40,0));\n    ppcVar15 = param_3 + uVar23 + 1;\n    bVar5 = false;\n    *param_5 = 0;\n    do {\n      ppcVar14 = (char **)malloc(0x40);\n      pcVar18 = *param_3;\n      *(undefined4 *)((long)ppcVar14 + 0x3c) = 0;\n      *ppcVar14 = pcVar18;\n      iVar7 = BKDRHash(pcVar18,iVar2);\n      list_add(ppcVar14 + 1,(void *)((long)iVar7 * 0x10 + (long)pvVar12));\n      iVar7 = strcmp(param_2,*param_3);\n      if (iVar7 == 0) {\n        bVar5 = true;\n      }\n      param_3 = param_3 + 1;\n    } while (ppcVar15 != param_3);\n    if (bVar5) {\n      INIT_LIST_HEAD();\n      ppcVar15 = (char **)malloc(0x48);\n      *ppcVar15 = param_1;\n      ppcVar15[7] = (char *)0x100000001;\n      ppcVar15[8] = (char *)0x0;\n      list_add_tail(ppcVar15 + 3,pvVar24);\n      lVar16 = find(param_1,pvVar12,iVar2,1);\n      if (lVar16 != 0) {\n        *(undefined4 *)(lVar16 + 0x3c) = 1;\n      }\n      while( true ) {\n        pcVar18 = *ppcVar15;\n        iVar7 = strcmp(pcVar18,param_2);\n        if (iVar7 == 0) break;\n        strcpy(pcVar11,pcVar18);\n        local_b0 = pcVar11;\n        if (0 < iVar6) {\n          do {\n            cVar27 = 'a';\n            cVar1 = *local_b0;\nLAB_0010171e:\n            do {\n              if (cVar1 != cVar27) {\n                iVar9 = *(int *)((long)ppcVar15 + 0x3c);\n                *local_b0 = cVar27;\n                iVar7 = iVar9 + 1;\n                pplVar17 = (long **)find(pcVar11,pvVar12,iVar2,iVar7);\n                if (pplVar17 != (long **)0x0) {\n                  pplVar19 = (long **)((long)pvVar24 + (long)iVar9 * 0x10);\n                  pplVar3 = (long **)*pplVar19;\n                  if (pplVar19 != pplVar3) {\n                    do {\n                      if (pplVar3[-3] == *pplVar17) {\n                        iVar7 = *(int *)(pplVar3 + 4);\n                        *(int *)(pplVar3 + 4) = iVar7 + 1;\n                        pplVar3[(long)iVar7 + 5] = (long *)ppcVar15;\n                        goto LAB_00101791;\n                      }\n                      pplVar3 = (long **)*pplVar3;\n                    } while (pplVar19 != pplVar3);\n                  }\n                  *(int *)((long)pplVar17 + 0x3c) = iVar7;\n                  pplVar19 = (long **)malloc(0xb8);\n                  plVar4 = *pplVar17;\n                  *(int *)((long)pplVar19 + 0x3c) = iVar7;\n                  *(undefined4 *)(pplVar19 + 7) = 0;\n                  iVar7 = *(int *)((long)ppcVar15 + 0x3c);\n                  *pplVar19 = plVar4;\n                  lVar16 = list_add_tail(pplVar19 + 3,(void *)((long)iVar7 * 0x10 + (long)pvVar24));\n                  lVar16 = list_add_tail(lVar16 + 0x28,local_58);\n                  iVar7 = *(int *)(lVar16 + 0x38);\n                  *(int *)(lVar16 + 0x38) = iVar7 + 1;\n                  *(char ***)(lVar16 + 0x40 + (long)iVar7 * 8) = ppcVar15;\nLAB_00101791:\n                  cVar27 = cVar27 + '\\x01';\n                  if (cVar27 == '{') break;\n                  goto LAB_0010171e;\n                }\n              }\n              cVar27 = cVar27 + '\\x01';\n            } while (cVar27 != '{');\n            pcVar18 = local_b0 + 1;\n            *local_b0 = cVar1;\n            local_b0 = pcVar18;\n          } while (pcVar11 + (ulong)(iVar6 - 1) + 1 != pcVar18);\n        }\n        iVar7 = list_empty(local_58);\n        if (iVar7 != 0) goto LAB_00101852;\n        ppcVar15 = (char **)(local_58[0] + -0x28);\n        list_del();\n      }\n      iVar2 = *(int *)((long)ppcVar15 + 0x3c);\n      lVar16 = (long)iVar2;\n      local_b0 = (char *)malloc(8000);\n      pvVar12 = calloc(lVar16 * 4,1);\n      pvVar13 = malloc(lVar16 * 8);\n      pplVar17 = (long **)((long)pvVar24 + lVar16 * 0x10 + -0x10);\n      pplVar19 = (long **)*pplVar17;\n      if (pplVar17 == pplVar19) {\n        iVar7 = *param_5;\n      }\n      else {\n        iVar7 = *param_5;\n        uVar8 = iVar2 - 1;\n        do {\n          local_b8 = pplVar19 + -3;\n          iVar9 = strcmp((char *)*local_b8,param_2);\n          if (iVar9 == 0) {\n            while( true ) {\n              pvVar24 = malloc(lVar16 * 8);\n              *(void **)((long)local_b0 + (long)iVar7 * 8) = pvVar24;\n              lVar26 = (long)(int)uVar8;\n              pplVar3 = local_b8;\n              uVar25 = uVar8;\n              while (-1 < (int)uVar25) {\n                pcVar11 = (char *)malloc((long)(iVar6 + 1));\n                *(char **)((long)pvVar24 + lVar26 * 8) = pcVar11;\n                strcpy(pcVar11,(char *)*pplVar3);\n                iVar7 = *(int *)((long)pvVar12 + lVar26 * 4);\n                *(long ***)((long)pvVar13 + lVar26 * 8) = pplVar3;\n                lVar26 = lVar26 + -1;\n                pplVar3 = (long **)pplVar3[(long)iVar7 + 8];\n                uVar25 = (uint)lVar26;\n              }\n              if (iVar2 < 1) break;\n              sVar10 = 0;\n              while( true ) {\n                if (*(int *)((long)pvVar12 + sVar10) <\n                    *(int *)(*(long *)((long)pvVar13 + sVar10 * 2) + 0x38) + -1) break;\n                sVar10 = sVar10 + 4;\n                if ((ulong)uVar8 * 4 + 4 == sVar10) goto LAB_00101a03;\n              }\n              *(int *)((long)pvVar12 + sVar10) = *(int *)((long)pvVar12 + sVar10) + 1;\n              memset(pvVar12,0,sVar10);\n              iVar7 = *param_5 + 1;\n              *param_5 = iVar7;\n            }\nLAB_00101a03:\n            iVar7 = *param_5 + 1;\n            *param_5 = iVar7;\n          }\n          pplVar19 = (long **)*pplVar19;\n        } while (pplVar17 != pplVar19);\n      }\n      piVar20 = (int *)malloc((long)iVar7 * 4);\n      *param_6 = piVar20;\n      iVar6 = *param_5;\n      if (0 < iVar6) {\n        piVar21 = piVar20;\n        do {\n          piVar22 = piVar21 + 1;\n          *piVar21 = iVar2;\n          piVar21 = piVar22;\n        } while (piVar20 + (ulong)(iVar6 - 1) + 1 != piVar22);\n      }\n      goto LAB_0010185b;\n    }\n  }\nLAB_00101852:\n  local_b0 = (char *)0x0;\nLAB_0010185b:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_b0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001013d0": "\nvoid __list_add(long *param_1,long **param_2,long param_3)\n\n{\n  *(long **)(param_3 + 8) = param_1;\n  *param_1 = param_3;\n  param_1[1] = (long)param_2;\n  *param_2 = param_1;\n  return;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103f80)();\n  return iVar1;\n}\n\n", 
    "001012f0": "\n/* WARNING: Removing unreachable block (ram,0x00101303) */\n/* WARNING: Removing unreachable block (ram,0x0010130f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101400": "\nulong BKDRHash(char *param_1,uint param_2)\n\n{\n  char cVar1;\n  uint uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = uVar2 * 0x83 + (int)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return (ulong)uVar2 % (ulong)param_2;\n  }\n  return 0;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101120": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103f98)();\n  return;\n}\n\n", 
    "00101440": "\nchar ** find(char *param_1,long param_2,undefined4 param_3,int param_4)\n\n{\n  undefined8 *puVar1;\n  undefined8 *puVar2;\n  int iVar3;\n  char **ppcVar4;\n  \n  iVar3 = BKDRHash(param_1,param_3);\n  puVar1 = (undefined8 *)(param_2 + (long)iVar3 * 0x10);\n  puVar2 = (undefined8 *)*puVar1;\n  do {\n    if (puVar1 == puVar2) {\n      return (char **)0x0;\n    }\n    ppcVar4 = (char **)(puVar2 + -1);\n    iVar3 = strcmp(*ppcVar4,param_1);\n    if (iVar3 == 0) {\n      if (*(int *)((long)puVar2 + 0x34) == param_4) {\n        return ppcVar4;\n      }\n      if (*(int *)((long)puVar2 + 0x34) == 0) {\n        return ppcVar4;\n      }\n    }\n    puVar2 = (undefined8 *)*puVar2;\n  } while( true );\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101320": "\n/* WARNING: Removing unreachable block (ram,0x00101344) */\n/* WARNING: Removing unreachable block (ram,0x00101350) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101160": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb8)();\n  return pvVar1;\n}\n\n", 
    "00101360": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strcmp@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001013c0": "\nbool list_empty(long *param_1)\n\n{\n  return (long *)*param_1 == param_1;\n}\n\n", 
    "001010e0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101ae8": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103f90)();\n  return sVar1;\n}\n\n", 
    "00105078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101150": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00103fb0)();\n  return iVar1;\n}\n\n", 
    "00101ae0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101190": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00105070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001014d0": "\nvoid list_del(undefined8 *param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)__list_del_isra_0(*param_1,param_1[1]);\n  puVar1[1] = 0;\n  *puVar1 = 0;\n  return;\n}\n\n", 
    "001013b0": "\nvoid INIT_LIST_HEAD(long param_1)\n\n{\n  *(long *)(param_1 + 8) = param_1;\n  *(long *)param_1 = param_1;\n  return;\n}\n\n", 
    "00101a70": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001013f0": "\nvoid list_add_tail(undefined8 param_1,long param_2)\n\n{\n  __list_add(param_1,*(undefined8 *)(param_2 + 8),param_2);\n  return;\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* memset@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}