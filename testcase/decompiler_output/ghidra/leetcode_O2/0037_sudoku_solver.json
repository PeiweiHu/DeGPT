{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fb0)();\n  return;\n}\n\n", 
    "00101340": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fb8)();\n  return iVar1;\n}\n\n", 
    "001013a0": "\n/* WARNING: Removing unreachable block (ram,0x001013c4) */\n/* WARNING: Removing unreachable block (ram,0x001013d0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001017c0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001013e0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc8)();\n  return pvVar1;\n}\n\n", 
    "001010c0": "\nundefined8 main(void)\n\n{\n  char **ppcVar1;\n  char *pcVar2;\n  char **ppcVar3;\n  undefined8 *puVar4;\n  undefined8 *puVar5;\n  int iVar6;\n  long lVar7;\n  char **ppcVar8;\n  \n  ppcVar3 = (char **)malloc(0x48);\n  puVar4 = (undefined8 *)malloc(0x24);\n  ppcVar1 = ppcVar3 + 9;\n  puVar5 = (undefined8 *)malloc(10);\n  *(undefined2 *)(puVar5 + 1) = 0x2e;\n  *puVar5 = 0x2e2e2e372e2e3335;\n  *ppcVar3 = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *puVar5 = 0x2e2e3539312e2e36;\n  *(undefined2 *)(puVar5 + 1) = 0x2e;\n  ppcVar3[1] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *(undefined2 *)(puVar5 + 1) = 0x2e;\n  *puVar5 = 0x362e2e2e2e38392e;\n  ppcVar3[2] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *puVar5 = 0x2e2e2e362e2e2e38;\n  *(undefined2 *)(puVar5 + 1) = 0x33;\n  ppcVar3[3] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *(undefined2 *)(puVar5 + 1) = 0x31;\n  *puVar5 = 0x2e2e332e382e2e34;\n  ppcVar3[4] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *(undefined2 *)(puVar5 + 1) = 0x36;\n  *puVar5 = 0x2e2e2e322e2e2e37;\n  ppcVar3[5] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *puVar5 = 0x38322e2e2e2e362e;\n  *(undefined2 *)(puVar5 + 1) = 0x2e;\n  ppcVar3[6] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *puVar5 = 0x2e2e3931342e2e2e;\n  *(undefined2 *)(puVar5 + 1) = 0x35;\n  ppcVar3[7] = (char *)puVar5;\n  puVar5 = (undefined8 *)malloc(10);\n  *(undefined4 *)(puVar4 + 4) = 9;\n  iVar6 = 0x35;\n  *(undefined2 *)(puVar5 + 1) = 0x39;\n  ppcVar3[8] = (char *)puVar5;\n  *puVar5 = 0x372e2e382e2e2e2e;\n  *puVar4 = 0x900000009;\n  puVar4[1] = 0x900000009;\n  puVar4[2] = 0x900000009;\n  puVar4[3] = 0x900000009;\n  ppcVar8 = ppcVar3;\n  while( true ) {\n    lVar7 = 0;\n    while( true ) {\n      lVar7 = lVar7 + 1;\n      __printf_chk(1,&DAT_00102004,iVar6);\n      if (lVar7 == 9) break;\n      iVar6 = (int)(*ppcVar8)[lVar7];\n    }\n    ppcVar8 = ppcVar8 + 1;\n    putchar(10);\n    if (ppcVar1 == ppcVar8) break;\n    iVar6 = (int)**ppcVar8;\n  }\n  putchar(10);\n  solveSudoku(ppcVar3,9,puVar4);\n  do {\n    lVar7 = 0;\n    do {\n      pcVar2 = *ppcVar3 + lVar7;\n      lVar7 = lVar7 + 1;\n      __printf_chk(1,&DAT_00102004,(int)*pcVar2);\n    } while (lVar7 != 9);\n    ppcVar3 = ppcVar3 + 1;\n    putchar(10);\n  } while (ppcVar1 != ppcVar3);\n  return 0;\n}\n\n", 
    "00101838": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00101830": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* calloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101430": "\nbyte valid(int param_1,int param_2,int param_3,int param_4,long param_5,long param_6,long param_7)\n\n{\n  byte bVar1;\n  long lVar2;\n  \n  lVar2 = (long)param_1;\n  bVar1 = *(byte *)(*(long *)(param_5 + (long)param_2 * 8) + lVar2);\n  if (bVar1 == 0) {\n    if (*(char *)(*(long *)(param_6 + (long)param_3 * 8) + lVar2) == '\\0') {\n      return *(byte *)(*(long *)(param_7 + (long)param_4 * 8) + lVar2) ^ 1;\n    }\n  }\n  else {\n    bVar1 = 0;\n  }\n  return bVar1;\n}\n\n", 
    "00101650": "\nvoid solveSudoku(long param_1,int param_2,long param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  long *plVar4;\n  void *pvVar5;\n  void *pvVar6;\n  void *pvVar7;\n  long lVar8;\n  ulong uVar9;\n  long *plVar10;\n  size_t __size;\n  ulong uVar11;\n  bool bVar12;\n  \n  __size = (long)param_2 << 3;\n  plVar4 = (long *)malloc(__size);\n  pvVar5 = malloc(__size);\n  pvVar6 = malloc(__size);\n  if (0 < param_2) {\n    uVar11 = 0;\n    do {\n      pvVar7 = calloc(10,1);\n      plVar4[uVar11] = (long)pvVar7;\n      pvVar7 = calloc(10,1);\n      *(void **)((long)pvVar5 + uVar11 * 8) = pvVar7;\n      pvVar7 = calloc(10,1);\n      *(void **)((long)pvVar6 + uVar11 * 8) = pvVar7;\n      bVar12 = uVar11 != param_2 - 1;\n      uVar11 = uVar11 + 1;\n    } while (bVar12);\n    plVar10 = plVar4;\n    uVar11 = 0;\n    do {\n      iVar2 = *(int *)(param_3 + uVar11 * 4);\n      if (0 < iVar2) {\n        lVar3 = *(long *)(param_1 + uVar11 * 8);\n        uVar9 = 0;\n        do {\n          cVar1 = *(char *)(lVar3 + uVar9);\n          if (cVar1 != '.') {\n            lVar8 = (long)(cVar1 + -0x30);\n            *(undefined *)(*plVar10 + lVar8) = 1;\n            *(undefined *)(*(long *)((long)pvVar5 + uVar9 * 8) + lVar8) = 1;\n            *(undefined *)\n             (*(long *)((long)pvVar6 +\n                       (long)((int)((uVar9 & 0xffffffff) / 3) + (int)((uVar11 & 0xffffffff) / 3) * 3\n                             ) * 8) + lVar8) = 1;\n          }\n          bVar12 = iVar2 - 1 != uVar9;\n          uVar9 = uVar9 + 1;\n        } while (bVar12);\n      }\n      plVar10 = plVar10 + 1;\n      bVar12 = uVar11 != param_2 - 1;\n      uVar11 = uVar11 + 1;\n    } while (bVar12);\n  }\n  dfs(param_1,0,plVar4,pvVar5,pvVar6);\n  return;\n}\n\n", 
    "00101370": "\n/* WARNING: Removing unreachable block (ram,0x00101383) */\n/* WARNING: Removing unreachable block (ram,0x0010138f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00101470": "\nulong dfs(long param_1,int param_2,long param_3,long param_4,long param_5)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  char cVar4;\n  uint uVar5;\n  long lVar6;\n  long *plVar7;\n  int iVar8;\n  ulong uVar9;\n  int iVar10;\n  long lVar11;\n  ulong uVar12;\n  \n  if (param_2 != 0x51) {\n    do {\n      iVar10 = param_2 % 9;\n      lVar6 = (long)(param_2 / 9) * 8;\n      lVar11 = (long)iVar10;\n      plVar1 = (long *)(param_1 + lVar6);\n      if (*(char *)(*plVar1 + lVar11) == '.') {\n        uVar9 = 0;\n        uVar12 = 1;\n        plVar2 = (long *)(param_4 + lVar11 * 8);\n        iVar8 = (param_2 / 0x1b) * 3 + iVar10 / 3;\n        plVar3 = (long *)(param_5 + (long)iVar8 * 8);\n        plVar7 = (long *)(lVar6 + param_3);\n        do {\n          cVar4 = valid(uVar12 & 0xffffffff,param_2 / 9,iVar10,iVar8,param_3,param_4,param_5);\n          if (cVar4 != '\\0') {\n            *(char *)(*plVar1 + lVar11) = (char)uVar12 + '0';\n            *(undefined *)(*plVar7 + uVar12) = 1;\n            *(undefined *)(*plVar2 + uVar12) = 1;\n            *(undefined *)(*plVar3 + uVar12) = 1;\n            uVar5 = dfs(param_1,param_2 + 1,param_3,param_4,param_5);\n            uVar9 = (ulong)uVar5;\n            if ((char)uVar5 == '\\0') {\n              *(undefined *)(*plVar7 + uVar12) = 0;\n              *(undefined *)(*plVar2 + uVar12) = 0;\n              *(undefined *)(*plVar3 + uVar12) = 0;\n              *(undefined *)(*plVar1 + lVar11) = 0x2e;\n            }\n          }\n          uVar12 = uVar12 + 1;\n        } while (uVar12 != 10);\n        goto LAB_00101636;\n      }\n      param_2 = param_2 + 1;\n    } while (param_2 != 0x51);\n  }\n  uVar9 = 1;\nLAB_00101636:\n  return uVar9 & 0xffffffff;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00103fc0)();\n  return pvVar1;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00101070": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fd0)();\n  return;\n}\n\n", 
    "00101420": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}