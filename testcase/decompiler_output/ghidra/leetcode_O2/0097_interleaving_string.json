{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fa8)();\n  return;\n}\n\n", 
    "00101240": "\nundefined isInterleave(char *param_1,char *param_2,char *param_3)\n\n{\n  void *pvVar1;\n  int iVar2;\n  int iVar3;\n  size_t sVar4;\n  size_t sVar5;\n  void *pvVar6;\n  void **ppvVar7;\n  int iVar8;\n  void **ppvVar9;\n  ulong uVar10;\n  long lVar11;\n  undefined *puVar12;\n  ulong uVar13;\n  long lVar14;\n  char cVar15;\n  bool bVar16;\n  \n  sVar4 = strlen(param_1);\n  sVar5 = strlen(param_2);\n  iVar3 = (int)sVar5;\n  sVar5 = strlen(param_3);\n  iVar2 = (int)sVar4;\n  if (iVar3 + iVar2 != (int)sVar5) {\n    return 0;\n  }\n  iVar8 = iVar2 + 1;\n  pvVar6 = malloc((long)(iVar8 * (iVar3 + 1)));\n  ppvVar7 = (void **)malloc((long)iVar8 * 8);\n  if (iVar2 < 0) {\n    puVar12 = (undefined *)*ppvVar7;\n    *puVar12 = 1;\nLAB_0010143e:\n    if (iVar3 < 1) goto LAB_00101421;\nLAB_0010134f:\n    uVar10 = 0;\n    do {\n      cVar15 = puVar12[uVar10];\n      if (cVar15 != '\\0') {\n        cVar15 = param_2[uVar10] == param_3[uVar10];\n      }\n      puVar12[uVar10 + 1] = cVar15;\n      bVar16 = iVar3 - 1 != uVar10;\n      uVar10 = uVar10 + 1;\n    } while (bVar16);\n    if (iVar2 < 1) goto LAB_00101421;\n    uVar13 = (ulong)(iVar2 - 1);\n  }\n  else {\n    ppvVar9 = ppvVar7;\n    do {\n      *ppvVar9 = pvVar6;\n      ppvVar9 = ppvVar9 + 1;\n      pvVar6 = (void *)((long)pvVar6 + (long)(iVar3 + 1));\n    } while (ppvVar9 != ppvVar7 + (sVar4 & 0xffffffff) + 1);\n    puVar12 = (undefined *)*ppvVar7;\n    *puVar12 = 1;\n    if (iVar2 < 1) goto LAB_0010143e;\n    uVar13 = (ulong)(iVar2 - 1);\n    uVar10 = 0;\n    do {\n                    /* WARNING: Load size is inaccurate */\n      cVar15 = *ppvVar7[uVar10];\n      if (cVar15 != '\\0') {\n        cVar15 = param_1[uVar10] == param_3[uVar10];\n      }\n      *(char *)ppvVar7[uVar10 + 1] = cVar15;\n      bVar16 = uVar10 != uVar13;\n      uVar10 = uVar10 + 1;\n    } while (bVar16);\n    if (0 < iVar3) goto LAB_0010134f;\n  }\n  lVar14 = 1;\n  do {\n    if (0 < iVar3) {\n      pvVar6 = ppvVar7[lVar14 + -1];\n      pvVar1 = ppvVar7[lVar14];\n      lVar11 = 1;\n      do {\n        bVar16 = false;\n        if (*(char *)((long)pvVar6 + lVar11) != '\\0') {\n          bVar16 = param_3[(long)((int)lVar14 + (int)lVar11) + -1] == param_1[lVar14 + -1];\n        }\n        if ((*(char *)((long)pvVar1 + lVar11 + -1) != '\\0') &&\n           (param_2[lVar11 + -1] == param_3[(long)((int)lVar14 + (int)lVar11) + -1])) {\n          bVar16 = true;\n        }\n        *(bool *)((long)pvVar1 + lVar11) = bVar16;\n        *(byte *)((long)pvVar1 + lVar11) = *(byte *)((long)pvVar1 + lVar11) & 1;\n        lVar11 = lVar11 + 1;\n      } while ((ulong)(iVar3 - 1) + 2 != lVar11);\n    }\n    lVar14 = lVar14 + 1;\n  } while (uVar13 + 2 != lVar14);\nLAB_00101421:\n  return *(undefined *)((long)ppvVar7[(long)iVar8 + -1] + (long)iVar3);\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101080": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "00101180": "\n/* WARNING: Removing unreachable block (ram,0x00101193) */\n/* WARNING: Removing unreachable block (ram,0x0010119f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001014c8": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fb8)();\n  return sVar1;\n}\n\n", 
    "001014c0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001010e0": "\nundefined8 main(int param_1,long param_2)\n\n{\n  char cVar1;\n  char *__s;\n  \n  if (param_1 == 4) {\n    cVar1 = isInterleave(*(undefined8 *)(param_2 + 8),*(undefined8 *)(param_2 + 0x10),\n                         *(undefined8 *)(param_2 + 0x18));\n    __s = \"true\";\n    if (cVar1 == '\\0') {\n      __s = \"false\";\n    }\n    puts(__s);\n    return 0;\n  }\n  fwrite(\"Usage: ./test s1 s2 s3\\n\",1,0x17,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101230": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00101450": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101150": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00103fb0)();\n  return iVar1;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fc0)();\n  return pvVar1;\n}\n\n", 
    "001011b0": "\n/* WARNING: Removing unreachable block (ram,0x001011d4) */\n/* WARNING: Removing unreachable block (ram,0x001011e0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001011f0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* puts@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}