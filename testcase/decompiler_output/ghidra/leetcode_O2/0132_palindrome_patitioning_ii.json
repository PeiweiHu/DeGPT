{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103fa8)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101220": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "001013a8": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101140": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101080": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001013a0": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "001010a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb8)();\n  return pvVar1;\n}\n\n", 
    "001011a0": "\n/* WARNING: Removing unreachable block (ram,0x001011c4) */\n/* WARNING: Removing unreachable block (ram,0x001011d0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "001010e0": "\nundefined8 main(int param_1,long param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == 2) {\n    uVar1 = minCut(*(undefined8 *)(param_2 + 8));\n    __printf_chk(1,&DAT_0010201a,uVar1);\n    return 0;\n  }\n  fwrite(\"Usage: ./test string\\n\",1,0x15,stderr);\n                    /* WARNING: Subroutine does not return */\n  exit(-1);\n}\n\n", 
    "001011e0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101230": "\nundefined4 minCut(char *param_1)\n\n{\n  int iVar1;\n  size_t sVar2;\n  void *pvVar3;\n  long lVar4;\n  long lVar5;\n  ulong uVar6;\n  long lVar7;\n  int iVar8;\n  long lVar9;\n  int iVar10;\n  size_t __size;\n  bool bVar11;\n  \n  sVar2 = strlen(param_1);\n  iVar1 = (int)sVar2;\n  if (iVar1 < 2) {\n    return 0;\n  }\n  __size = (long)(iVar1 + 1) * 4;\n  pvVar3 = malloc(__size);\n  uVar6 = 0;\n  do {\n    *(int *)((long)pvVar3 + uVar6 * 4) = (int)uVar6 + -1;\n    bVar11 = (sVar2 & 0xffffffff) != uVar6;\n    uVar6 = uVar6 + 1;\n  } while (bVar11);\n  lVar9 = -1;\n  iVar10 = 0;\n  do {\n    if (iVar10 < iVar1) {\n      lVar7 = lVar9 + 1;\n      lVar4 = lVar9;\n      do {\n        if (param_1[lVar4 + 1] != param_1[lVar7]) break;\n        iVar8 = *(int *)((long)pvVar3 + lVar4 * 4 + 4) + 1;\n        if (iVar8 < *(int *)((long)pvVar3 + lVar7 * 4 + 4)) {\n          *(int *)((long)pvVar3 + lVar7 * 4 + 4) = iVar8;\n        }\n        if ((int)lVar4 < 0) break;\n        lVar7 = lVar7 + 1;\n        lVar4 = lVar4 + -1;\n      } while ((int)lVar7 < iVar1);\n    }\n    iVar10 = iVar10 + 1;\n    if (iVar10 == iVar1) {\n      return *(undefined4 *)((long)pvVar3 + (__size - 4));\n    }\n    lVar7 = lVar9 + 2;\n    lVar4 = lVar9;\n    while (lVar5 = lVar4 + -1, param_1[lVar4 + 1] == param_1[lVar7]) {\n      iVar8 = *(int *)((long)pvVar3 + lVar5 * 4 + 8) + 1;\n      if (iVar8 < *(int *)((long)pvVar3 + lVar7 * 4 + 4)) {\n        *(int *)((long)pvVar3 + lVar7 * 4 + 4) = iVar8;\n      }\n      if (((int)lVar5 < -1) || (lVar7 = lVar7 + 1, lVar4 = lVar5, iVar1 <= (int)lVar7)) break;\n    }\n    lVar9 = lVar9 + 1;\n  } while( true );\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101330": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00101170": "\n/* WARNING: Removing unreachable block (ram,0x00101183) */\n/* WARNING: Removing unreachable block (ram,0x0010118f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101090": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00103fb0)();\n  return sVar1;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fc0)();\n  return;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* strlen@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n"
}