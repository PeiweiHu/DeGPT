{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00103f98)();\n  return;\n}\n\n", 
    "00101240": "\n/* WARNING: Removing unreachable block (ram,0x00101253) */\n/* WARNING: Removing unreachable block (ram,0x0010125f) */\n\nvoid deregister_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* fwrite@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101120": "\nundefined8 main(int param_1,long param_2)\n\n{\n  undefined4 *puVar1;\n  long *plVar2;\n  int iVar3;\n  long *plVar4;\n  long lVar5;\n  long in_FS_OFFSET;\n  undefined local_3c [4];\n  undefined local_38 [8];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 2) {\n    fwrite(\"Usage: ./test n\\n\",1,0x10,stderr);\n                    /* WARNING: Subroutine does not return */\n    exit(-1);\n  }\n  iVar3 = atoi(*(char **)(param_2 + 8));\n  plVar4 = (long *)generateMatrix(iVar3,local_3c,local_38);\n  if (0 < iVar3) {\n    plVar2 = plVar4 + (ulong)(iVar3 - 1) + 1;\n    do {\n      lVar5 = 0;\n      do {\n        puVar1 = (undefined4 *)(*plVar4 + lVar5);\n        lVar5 = lVar5 + 4;\n        __printf_chk(1,&DAT_00102015,*puVar1);\n      } while ((ulong)(iVar3 - 1) * 4 + 4 != lVar5);\n      plVar4 = plVar4 + 1;\n      putchar(10);\n    } while (plVar4 != plVar2);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00101000": "\nint _init(EVP_PKEY_CTX *ctx)\n\n{\n  undefined *puVar1;\n  \n  puVar1 = PTR___gmon_start___00103fe8;\n  if (PTR___gmon_start___00103fe8 != (undefined *)0x0) {\n    puVar1 = (undefined *)(*(code *)PTR___gmon_start___00103fe8)();\n  }\n  return (int)puVar1;\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00103fc8)();\n  return;\n}\n\n", 
    "00101540": "\nvoid __libc_csu_fini(void)\n\n{\n  return;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* putchar@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* exit@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "001010a0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff8)();\n  return;\n}\n\n", 
    "001010e0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00103fb8)();\n  return;\n}\n\n", 
    "001010c0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00103fa8)();\n  return;\n}\n\n", 
    "00105018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __libc_start_main@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atoi(char *__nptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* atoi@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00103fd0)();\n  return sVar1;\n}\n\n", 
    "00101210": "\nvoid _start(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00103fe0)\n            (main,unaff_retaddr,&stack0x00000008,__libc_csu_init,__libc_csu_fini,param_3,auStack_8);\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __cxa_finalize@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n", 
    "00101270": "\n/* WARNING: Removing unreachable block (ram,0x00101294) */\n/* WARNING: Removing unreachable block (ram,0x001012a0) */\n\nvoid register_tm_clones(void)\n\n{\n  return;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __stack_chk_fail@@GLIBC_2.4 */\n  halt_baddata();\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* __printf_chk@@GLIBC_2.3.4 */\n  halt_baddata();\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_00103fa0)();\n  return iVar1;\n}\n\n", 
    "001012b0": "\nvoid __do_global_dtors_aux(void)\n\n{\n  if (completed_8061 == '\\0') {\n    if (PTR___cxa_finalize_00103ff8 != (undefined *)0x0) {\n      __cxa_finalize(__dso_handle);\n    }\n    deregister_tm_clones();\n    completed_8061 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001014d0": "\nvoid __libc_csu_init(EVP_PKEY_CTX *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  _init(param_1);\n  lVar1 = 0;\n  do {\n    (*(code *)(&__frame_dummy_init_array_entry)[lVar1])((ulong)param_1 & 0xffffffff,param_2,param_3)\n    ;\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint atoi(char *__nptr)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_atoi_00103fc0)();\n  return iVar1;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00103fb0)();\n  return pvVar1;\n}\n\n", 
    "001012f0": "\nvoid frame_dummy(void)\n\n{\n  register_tm_clones();\n  return;\n}\n\n", 
    "00101548": "\nvoid _fini(void)\n\n{\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101300": "\nvoid * generateMatrix(int param_1,int *param_2,void **param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  void *pvVar3;\n  void *pvVar4;\n  void *pvVar5;\n  long *plVar6;\n  int *piVar7;\n  uint uVar8;\n  ulong uVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  ulong uVar14;\n  int iVar15;\n  int iVar16;\n  size_t __size;\n  bool bVar17;\n  \n  iVar10 = param_1 * param_1;\n  pvVar3 = malloc((long)param_1 * 8);\n  pvVar4 = malloc((long)iVar10 << 2);\n  *param_2 = param_1;\n  __size = (long)param_1 * 4;\n  pvVar5 = malloc(__size);\n  uVar14 = (ulong)(param_1 - 1);\n  *param_3 = pvVar5;\n  if (0 < param_1) {\n    uVar14 = (ulong)(param_1 - 1);\n    uVar9 = 0;\n    do {\n      *(void **)((long)pvVar3 + uVar9 * 8) = pvVar4;\n      pvVar4 = (void *)((long)pvVar4 + __size);\n      *(int *)((long)pvVar5 + uVar9 * 4) = param_1;\n      bVar17 = uVar9 != uVar14;\n      uVar9 = uVar9 + 1;\n    } while (bVar17);\n  }\n  if (iVar10 != 0) {\n    iVar2 = 0;\n    iVar16 = 0;\n    iVar15 = 0;\n    uVar8 = 0;\n    uVar9 = uVar14;\n    do {\n      iVar12 = (int)uVar14;\n      iVar13 = (int)uVar9;\n      if (uVar8 == 2) {\n        if (iVar16 <= iVar13) {\n          iVar11 = iVar13 + 1 + iVar2;\n          piVar7 = (int *)(*(long *)((long)pvVar3 + (long)iVar12 * 8) + (long)iVar13 * 4);\n          do {\n            iVar2 = iVar2 + 1;\n            *piVar7 = iVar2;\n            piVar7 = piVar7 + -1;\n          } while (iVar2 != iVar11 - iVar16);\n        }\n        uVar14 = (ulong)(iVar12 - 1);\n      }\n      else if (uVar8 < 3) {\n        if (uVar8 == 0) {\n          if (iVar16 <= iVar13) {\n            iVar12 = iVar13 + 1 + iVar2;\n            piVar7 = (int *)(*(long *)((long)pvVar3 + (long)iVar15 * 8) + (long)iVar16 * 4);\n            do {\n              iVar2 = iVar2 + 1;\n              *piVar7 = iVar2;\n              piVar7 = piVar7 + 1;\n            } while (iVar12 - iVar16 != iVar2);\n          }\n          iVar15 = iVar15 + 1;\n        }\n        else if (uVar8 == 1) {\n          if (iVar15 <= iVar12) {\n            iVar12 = iVar12 + 1 + iVar2;\n            plVar6 = (long *)((long)pvVar3 + (long)iVar15 * 8);\n            do {\n              lVar1 = *plVar6;\n              iVar2 = iVar2 + 1;\n              plVar6 = plVar6 + 1;\n              *(int *)(lVar1 + (long)iVar13 * 4) = iVar2;\n            } while (iVar2 != iVar12 - iVar15);\n          }\n          uVar9 = (ulong)(iVar13 - 1);\n        }\n      }\n      else if (uVar8 == 3) {\n        if (iVar15 <= iVar12) {\n          iVar13 = iVar12 + 1 + iVar2;\n          plVar6 = (long *)((long)pvVar3 + (long)iVar12 * 8);\n          do {\n            lVar1 = *plVar6;\n            iVar2 = iVar2 + 1;\n            plVar6 = plVar6 + -1;\n            *(int *)(lVar1 + (long)iVar16 * 4) = iVar2;\n          } while (iVar2 != iVar13 - iVar15);\n        }\n        iVar16 = iVar16 + 1;\n      }\n      uVar8 = uVar8 + 1 & 3;\n    } while (iVar2 < iVar10);\n  }\n  return pvVar3;\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n                    /* malloc@@GLIBC_2.2.5 */\n  halt_baddata();\n}\n\n"
}