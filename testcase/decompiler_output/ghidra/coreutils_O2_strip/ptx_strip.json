{
    "0010bfa0": "\nvoid FUN_0010bfa0(void **param_1,void **param_2)\n\n{\n  char cVar1;\n  void **__src;\n  void *pvVar2;\n  void *__n;\n  \n  __src = (void **)*param_2;\n  __n = param_2[1];\n  if (__src == param_2 + 3) {\n    pvVar2 = memcpy(param_1 + 3,__src,(size_t)__n);\n    __n = param_2[1];\n    *param_1 = pvVar2;\n  }\n  else {\n    *param_1 = __src;\n  }\n  cVar1 = *(char *)(param_2 + 2);\n  param_1[1] = __n;\n  *(char *)(param_1 + 2) = cVar1;\n  if (cVar1 != '\\0') {\n    *(undefined4 *)((long)param_1 + 0x14) = *(undefined4 *)((long)param_2 + 0x14);\n  }\n  return;\n}\n\n", 
    "001140c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106510": "\nvoid FUN_00106510(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0010a8a0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00113890 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00113898 == 0) {\n        error(0,*piVar2,&DAT_0010de0c,uVar3);\n      }\n      else {\n        uVar4 = FUN_00108f70();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00106598;\n    }\n  }\n  iVar1 = FUN_0010a8a0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00106598:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00113048);\n}\n\n", 
    "0010a520": "\nvoid FUN_0010a520(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010a500(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001141e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iconv_close(iconv_t __cd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104cc0": "\nvoid FUN_00104cc0(void)\n\n{\n  __printf_chk(1,&DAT_0010db9d,PTR_DAT_00113028);\n  FUN_001044d0(DAT_001131a0,DAT_001131a8);\n  if (DAT_00113190 != '\\0') {\n    fputs_unlocked(PTR_DAT_00113030,stdout);\n  }\n  putchar_unlocked(0x22);\n  fwrite_unlocked(&DAT_0010dba0,1,2,stdout);\n  if (DAT_00113170 != '\\0') {\n    fputs_unlocked(PTR_DAT_00113030,stdout);\n  }\n  FUN_001044d0(DAT_00113180,DAT_00113188);\n  putchar_unlocked(0x22);\n  fwrite_unlocked(&DAT_0010dba0,1,2,stdout);\n  FUN_001044d0(DAT_00113160,DAT_00113168);\n  if (DAT_00113150 != '\\0') {\n    fputs_unlocked(PTR_DAT_00113030,stdout);\n  }\n  putchar_unlocked(0x22);\n  fwrite_unlocked(&DAT_0010dba0,1,2,stdout);\n  if (DAT_00113130 != '\\0') {\n    fputs_unlocked(PTR_DAT_00113030,stdout);\n  }\n  FUN_001044d0(DAT_00113140,DAT_00113148);\n  putchar_unlocked(0x22);\n  if ((DAT_0011388a != '\\0') || (DAT_00113889 != '\\0')) {\n    fwrite_unlocked(&DAT_0010dba0,1,2,stdout);\n    FUN_001044d0(DAT_00113120,DAT_00113128);\n    putchar_unlocked(0x22);\n  }\n  putchar_unlocked(10);\n  return;\n}\n\n", 
    "00114018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_match(re_pattern_buffer *__buffer,char *__string,int __length,int __start,\n            re_registers *__regs)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c0d0": "\nvoid FUN_0010c0d0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010a6f0": "\nulong FUN_0010a6f0(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001028d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00112f70)();\n  return iVar1;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcwidth_00112ee0)();\n  return iVar1;\n}\n\n", 
    "00114020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001032e0": "\nulong FUN_001032e0(ulong *param_1,ulong *param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_00103210();\n  if ((int)uVar1 == 0) {\n    uVar1 = *param_2;\n    if (*param_1 < uVar1) {\n      uVar1 = 0xffffffff;\n    }\n    else {\n      uVar1 = (ulong)(*param_1 >= uVar1 && *param_1 != uVar1);\n    }\n  }\n  return uVar1;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strnlen(char *__string,size_t __maxlen)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strnlen_00112e88)();\n  return sVar1;\n}\n\n", 
    "0010c020": "\nsize_t FUN_0010c020(char *param_1)\n\n{\n  size_t sVar1;\n  long in_FS_OFFSET;\n  undefined local_68 [4];\n  undefined8 local_64;\n  undefined local_5c;\n  char *local_58;\n  long local_50;\n  char local_48;\n  int local_44;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar1 = __ctype_get_mb_cur_max();\n  if (sVar1 < 2) {\n    sVar1 = strlen(param_1);\n  }\n  else {\n    sVar1 = 0;\n    local_68[0] = 0;\n    local_64 = 0;\n    local_58 = param_1;\n    while( true ) {\n      local_5c = 0;\n      FUN_0010b720(local_68);\n      if ((local_48 != '\\0') && (local_44 == 0)) break;\n      local_58 = local_58 + local_50;\n      sVar1 = sVar1 + 1;\n    }\n  }\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return sVar1;\n}\n\n", 
    "0010c140": "\nvoid FUN_0010c140(void)\n\n{\n  return;\n}\n\n", 
    "001140c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswspace(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strdup(char *__s)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strdup_00112fa8)();\n  return pcVar1;\n}\n\n", 
    "00102820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_search(re_pattern_buffer *__buffer,char *__string,int __length,int __start,int __range,\n             re_registers *__regs)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_re_search_00112f18)();\n  return iVar1;\n}\n\n", 
    "00106500": "\nvoid FUN_00106500(undefined param_1)\n\n{\n  DAT_00113890 = param_1;\n  return;\n}\n\n", 
    "00103110": "\nvoid FUN_00103110(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00112fe0)\n            (FUN_001029e0,unaff_retaddr,&stack0x00000008,FUN_0010c0d0,FUN_0010c140,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00108d90": "\nvoid FUN_00108d90(void)\n\n{\n  FUN_00108890();\n  return;\n}\n\n", 
    "00106620": "\nFILE * FUN_00106620(char *param_1,char *param_2,FILE *param_3)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  FILE *pFVar4;\n  char cVar5;\n  char cVar6;\n  \n  iVar2 = fileno(param_3);\n  piVar3 = __errno_location();\n  if (iVar2 == 1) {\n    iVar2 = dup2(0,0);\n    if (iVar2 == 0) {\nLAB_0010675d:\n      cVar5 = '\\0';\n      cVar6 = '\\0';\n      cVar1 = '\\0';\nLAB_001066dc:\n      pFVar4 = freopen(param_1,param_2,param_3);\n      goto LAB_001066ef;\n    }\n    cVar5 = '\\0';\n    cVar6 = '\\0';\n    cVar1 = FUN_001065c0();\n    if (cVar1 != '\\0') goto LAB_001066dc;\n    iVar2 = *piVar3;\n    pFVar4 = (FILE *)0x0;\n  }\n  else {\n    if (iVar2 == 2) {\n      cVar5 = false;\n    }\n    else {\n      if (iVar2 == 0) goto LAB_0010675d;\n      iVar2 = dup2(2,2);\n      cVar5 = iVar2 != 2;\n    }\n    iVar2 = dup2(1,1);\n    cVar6 = iVar2 != 1;\n    iVar2 = dup2(0,0);\n    if (iVar2 == 0) {\n      cVar1 = '\\0';\nLAB_001066a9:\n      if ((!(bool)cVar6) || (cVar6 = FUN_001065c0(1), cVar6 != '\\0')) {\n        if (((bool)cVar5 == false) || (cVar5 = FUN_001065c0(2), cVar5 != '\\0')) goto LAB_001066dc;\n        iVar2 = *piVar3;\n        pFVar4 = (FILE *)0x0;\n        goto LAB_001067f6;\n      }\n      iVar2 = *piVar3;\n      pFVar4 = (FILE *)0x0;\n      if ((bool)cVar5 != false) {\n        close(2);\n      }\nLAB_001067d8:\n      close(1);\n    }\n    else {\n      cVar1 = FUN_001065c0();\n      if (cVar1 != '\\0') goto LAB_001066a9;\n      cVar1 = '\\x01';\n      pFVar4 = (FILE *)0x0;\nLAB_001066ef:\n      iVar2 = *piVar3;\n      if (cVar5 != '\\0') {\nLAB_001067f6:\n        close(2);\n      }\n      if (cVar6 != '\\0') goto LAB_001067d8;\n    }\n    if (cVar1 == '\\0') goto joined_r0x001067aa;\n  }\n  close(0);\njoined_r0x001067aa:\n  if (pFVar4 == (FILE *)0x0) {\n    *piVar3 = iVar2;\n  }\n  return pFVar4;\n}\n\n", 
    "001140d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108b50": "\nvoid FUN_00108b50(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_001139c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_001076d0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001141f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108a30": "\nvoid FUN_00108a30(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_001139c0;\n  }\n  FUN_00109f50(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00109c40": "\nvoid FUN_00109c40(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00109bb0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010bb90": "\nchar * FUN_0010bb90(char *param_1,iconv_t param_2)\n\n{\n  ulong uVar1;\n  char *__ptr;\n  size_t sVar2;\n  int *piVar3;\n  char *pcVar4;\n  ulong uVar5;\n  long lVar6;\n  long in_FS_OFFSET;\n  char *local_60;\n  size_t local_58;\n  char *local_50;\n  size_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_60 = param_1;\n  local_58 = strlen(param_1);\n  sVar2 = local_58 << 4;\n  if (0xfffffff < local_58) {\n    sVar2 = local_58;\n  }\n  __ptr = (char *)malloc(sVar2 + 1);\n  if (__ptr == (char *)0x0) {\n    piVar3 = __errno_location();\n    *piVar3 = 0xc;\n  }\n  else {\n    iconv(param_2,(char **)0x0,(size_t *)0x0,(char **)0x0,(size_t *)0x0);\n    uVar5 = sVar2 + 1;\n    local_50 = __ptr;\n    local_48 = sVar2;\n    while (sVar2 = iconv(param_2,&local_60,&local_58,&local_50,&local_48),\n          sVar2 == 0xffffffffffffffff) {\n      piVar3 = __errno_location();\n      if (*piVar3 == 0x16) break;\n      if (*piVar3 != 7) goto LAB_0010bd86;\n      uVar1 = uVar5 * 2;\n      lVar6 = (long)local_50 - (long)__ptr;\n      if ((uVar1 <= uVar5) || (pcVar4 = (char *)realloc(__ptr,uVar1), pcVar4 == (char *)0x0)) {\n        *piVar3 = 0xc;\n        goto LAB_0010bd86;\n      }\n      local_50 = pcVar4 + lVar6;\n      local_48 = (uVar1 - 1) - lVar6;\n      uVar5 = uVar1;\n      __ptr = pcVar4;\n    }\nLAB_0010bd33:\n    sVar2 = iconv(param_2,(char **)0x0,(size_t *)0x0,&local_50,&local_48);\n    if (sVar2 != 0xffffffffffffffff) goto code_r0x0010bd4b;\n    piVar3 = __errno_location();\n    if (*piVar3 != 7) goto LAB_0010bd86;\n    uVar1 = uVar5 * 2;\n    lVar6 = (long)local_50 - (long)__ptr;\n    if ((uVar5 < uVar1) && (pcVar4 = (char *)realloc(__ptr,uVar1), pcVar4 != (char *)0x0)) {\n      local_50 = pcVar4 + lVar6;\n      local_48 = (uVar1 - 1) - lVar6;\n      uVar5 = uVar1;\n      __ptr = pcVar4;\n      goto LAB_0010bd33;\n    }\n    *piVar3 = 0xc;\nLAB_0010bd86:\n    free(__ptr);\n    __ptr = (char *)0x0;\n  }\nLAB_0010bd91:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return __ptr;\ncode_r0x0010bd4b:\n  pcVar4 = local_50 + 1;\n  *local_50 = '\\0';\n  local_50 = pcVar4;\n  if (((ulong)((long)pcVar4 - (long)__ptr) < uVar5) &&\n     (pcVar4 = (char *)realloc(__ptr,(long)pcVar4 - (long)__ptr), pcVar4 != (char *)0x0)) {\n    __ptr = pcVar4;\n  }\n  goto LAB_0010bd91;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00112d78)();\n  return;\n}\n\n", 
    "00103350": "\nvoid FUN_00103350(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00114028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\niconv_t iconv_open(char *__tocode,char *__fromcode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_001029e0(uint param_1,undefined8 *param_2)\n\n{\n  char *__s1;\n  char **ppcVar1;\n  int iVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  uint uVar6;\n  long lVar7;\n  ulong uVar8;\n  long lVar9;\n  char *unaff_R13;\n  long unaff_R14;\n  long in_FS_OFFSET;\n  long local_48;\n  long local_40;\n  \n  uVar8 = (ulong)param_1;\n  uVar6 = 0x10d954;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106810(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_0010c150(FUN_00106510);\n  lVar9 = DAT_00113010;\n  lVar7 = DAT_00113018;\nswitchD_00102a9d_caseD_74:\n  DAT_00113018 = lVar7;\n  DAT_00113010 = lVar9;\n  iVar2 = getopt_long(uVar8,param_2,\"AF:GM:ORS:TW:b:i:fg:o:trw:\",&PTR_s_auto_reference_001128c0,0);\n  if (iVar2 == -1) {\nLAB_00102cc2:\n    if (optind == param_1) {\n      DAT_00113308 = (char **)FUN_00109d80(8);\n      DAT_00113300 = FUN_00109d80(8);\n      _DAT_001132f8 = FUN_00109d80(0x10);\n      DAT_00113318 = 1;\n      *DAT_00113308 = (char *)0x0;\n    }\n    else {\n      if (DAT_00113020 == '\\0') {\n        DAT_00113318 = 1;\n        DAT_00113308 = (char **)FUN_00109d80(8);\n        DAT_00113300 = FUN_00109d80(8);\n        _DAT_001132f8 = FUN_00109d80(0x10);\n        uVar6 = optind;\n        unaff_R13 = (char *)param_2[(int)optind];\n        unaff_R14 = (long)(int)optind * 8;\n        if ((*unaff_R13 != '\\0') && (iVar2 = strcmp(unaff_R13,\"-\"), iVar2 != 0)) goto LAB_0010304c;\n        *DAT_00113308 = (char *)0x0;\n        goto LAB_00102e24;\n      }\n      DAT_00113318 = param_1 - optind;\n      DAT_00113308 = (char **)FUN_00109da0((long)DAT_00113318,8);\n      DAT_00113300 = FUN_00109da0((long)DAT_00113318,8);\n      _DAT_001132f8 = FUN_00109da0((long)DAT_00113318,0x10);\n      ppcVar1 = DAT_00113308;\n      if (0 < DAT_00113318) {\n        lVar9 = (long)(int)optind;\n        uVar6 = DAT_00113318 - 1;\n        lVar7 = (long)(int)(optind + 1);\n        do {\n          __s1 = (char *)param_2[lVar7 + -1];\n          if ((*__s1 == '\\0') || (iVar2 = strcmp(__s1,\"-\"), iVar2 == 0)) {\n            ppcVar1[(lVar7 + -1) - lVar9] = (char *)0x0;\n          }\n          else {\n            ppcVar1[(lVar7 + -1) - lVar9] = __s1;\n          }\n          optind = (uint)lVar7;\n          lVar7 = lVar7 + 1;\n        } while (lVar9 + 2 + (ulong)uVar6 != lVar7);\n      }\n    }\n    goto LAB_00102e36;\n  }\n  if (0x77 < iVar2) goto switchD_00102a9d_caseD_b;\n  if (iVar2 < 10) {\n    if (iVar2 == -0x83) {\n      uVar3 = FUN_00106bf0(\"F. Pinard\",&DAT_0010dc87);\n      FUN_00109c40(stdout,&DAT_0010dbad,\"GNU coreutils\",PTR_DAT_00113038,uVar3,0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (iVar2 == -0x82) {\n      FUN_00105fb0(0);\n      goto LAB_00102cc2;\n    }\n    goto switchD_00102a9d_caseD_b;\n  }\n  lVar9 = DAT_00113010;\n  lVar7 = DAT_00113018;\n  switch(iVar2) {\n  case 10:\n    lVar9 = FUN_00106410(\"--format\",optarg,&PTR_DAT_001128a0,&DAT_0010db10,4);\n    DAT_00113884 = *(int *)(&DAT_0010db10 + lVar9 * 4);\n    lVar9 = DAT_00113010;\n    lVar7 = DAT_00113018;\n    goto switchD_00102a9d_caseD_74;\n  default:\n    break;\n  case 0x41:\n    DAT_0011388a = 1;\n    goto switchD_00102a9d_caseD_74;\n  case 0x46:\n    PTR_DAT_00113030 = (undefined *)FUN_001033b0(optarg);\n    lVar9 = DAT_00113010;\n    lVar7 = DAT_00113018;\n    goto switchD_00102a9d_caseD_74;\n  case 0x47:\n    DAT_00113020 = '\\0';\n    goto switchD_00102a9d_caseD_74;\n  case 0x4d:\n    PTR_DAT_00113028 = optarg;\n    goto switchD_00102a9d_caseD_74;\n  case 0x4f:\n    DAT_00113884 = 2;\n    goto switchD_00102a9d_caseD_74;\n  case 0x52:\n    DAT_00113888 = 1;\n    goto switchD_00102a9d_caseD_74;\n  case 0x53:\n    DAT_00113720 = FUN_001033b0(optarg);\n    lVar9 = DAT_00113010;\n    lVar7 = DAT_00113018;\n    goto switchD_00102a9d_caseD_74;\n  case 0x54:\n    DAT_00113884 = 3;\n    goto switchD_00102a9d_caseD_74;\n  case 0x57:\n    DAT_001135c0 = (char *)FUN_001033b0(optarg);\n    lVar9 = DAT_00113010;\n    lVar7 = DAT_00113018;\n    if (*DAT_001135c0 == '\\0') {\n      DAT_001135c0 = (char *)0x0;\n    }\n    goto switchD_00102a9d_caseD_74;\n  case 0x62:\n    DAT_00113878 = optarg;\n    goto switchD_00102a9d_caseD_74;\n  case 0x66:\n    DAT_00113880 = 1;\n    goto switchD_00102a9d_caseD_74;\n  case 0x67:\n    iVar2 = FUN_0010a0f0(optarg,0,0,&local_48);\n    if ((iVar2 != 0) || (lVar9 = local_48, lVar7 = DAT_00113018, local_48 < 1)) {\n      uVar3 = FUN_00109150(optarg);\n      uVar5 = dcgettext(0,\"invalid gap width: %s\",5);\n      error(1,0,uVar5,uVar3);\n      goto LAB_00103091;\n    }\n    goto switchD_00102a9d_caseD_74;\n  case 0x69:\n    DAT_00113868 = optarg;\n    goto switchD_00102a9d_caseD_74;\n  case 0x6f:\n    DAT_00113870 = optarg;\n    goto switchD_00102a9d_caseD_74;\n  case 0x72:\n    DAT_00113889 = 1;\n  case 0x74:\n    goto switchD_00102a9d_caseD_74;\n  case 0x77:\n    iVar2 = FUN_0010a0f0(optarg,0,0,&local_48);\n    if ((iVar2 != 0) || (lVar9 = DAT_00113010, lVar7 = local_48, local_48 < 1)) goto LAB_001030c9;\n    goto switchD_00102a9d_caseD_74;\n  }\nswitchD_00102a9d_caseD_b:\n  param_1 = (uint)uVar8;\n  FUN_00105fb0(1);\nLAB_0010304c:\n  *DAT_00113308 = unaff_R13;\nLAB_00102e24:\n  uVar6 = uVar6 + 1;\n  optind = uVar6;\n  if ((int)param_1 <= (int)uVar6) goto LAB_00102e36;\n  lVar9 = FUN_00106620(*(undefined8 *)((long)param_2 + unaff_R14 + 8),&DAT_0010dcbd,stdout);\n  if (lVar9 == 0) goto LAB_00103091;\n  optind = optind + 1;\n  if ((int)param_1 <= (int)optind) goto LAB_00102e36;\n  uVar8 = FUN_00109150(param_2[(int)optind]);\n  uVar3 = dcgettext(0,\"extra operand %s\",5);\n  error(0,0,uVar3,uVar8);\n  goto switchD_00102a9d_caseD_b;\nLAB_00102e36:\n  if (DAT_00113884 == 0) {\n    DAT_00113884 = ~-(uint)(DAT_00113020 == '\\0') + 2;\n  }\n  FUN_001058e0();\n  if (DAT_00113878 != (undefined *)0x0) {\n    FUN_00105ae0();\n  }\n  if ((DAT_00113868 != (undefined *)0x0) &&\n     (FUN_00105bf0(DAT_00113868,&DAT_00113340), DAT_00113350 == 0)) {\n    DAT_00113868 = (undefined *)0x0;\n  }\n  if ((DAT_00113870 != (undefined *)0x0) &&\n     (FUN_00105bf0(DAT_00113870,&DAT_00113320), DAT_00113330 == 0)) {\n    DAT_00113870 = (undefined *)0x0;\n  }\n  DAT_001132e0 = 0;\n  uVar8 = 0;\n  DAT_00113310 = 0;\n  DAT_00113360 = 0;\n  DAT_00113358 = 0;\n  if (0 < DAT_00113318) {\n    do {\n      lVar9 = uVar8 * 0x10 + _DAT_001132f8;\n      FUN_00105a10(DAT_00113308[uVar8],lVar9,lVar9 + 8);\n      FUN_001051e0(uVar8 & 0xffffffff);\n      DAT_00113310 = DAT_00113310 + 1;\n      *(long *)(DAT_00113300 + uVar8 * 8) = DAT_00113310;\n      uVar8 = uVar8 + 1;\n    } while ((int)uVar8 < DAT_00113318);\n  }\n  FUN_00103670();\n  FUN_001036a0();\n  FUN_001050b0();\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return 0;\n  }\n  goto LAB_001030ff;\nLAB_00103091:\n  uVar3 = FUN_00108f90(0,3,param_2[(int)optind]);\n  piVar4 = __errno_location();\n  error(1,*piVar4,&DAT_0010de0c,uVar3);\nLAB_001030c9:\n  uVar3 = FUN_00109150(optarg);\n  uVar5 = dcgettext(0,\"invalid line width: %s\",5);\n  error(1,0,uVar5,uVar3);\nLAB_001030ff:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107270": "\nundefined8\nFUN_00107270(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001071c0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010a5e0": "\nsize_t FUN_0010a5e0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010a910(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001141f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001028c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00112f68)();\n  return iVar1;\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00112ed8)();\n  return iVar1;\n}\n\n", 
    "0010bf00": "\nlong FUN_0010bf00(ulong param_1)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  long lVar3;\n  \n  if (0xffffffffffffffdf < param_1) {\n    return 0;\n  }\n  pvVar1 = malloc(param_1 + 0x20);\n  if (pvVar1 != (void *)0x0) {\n    uVar2 = (long)pvVar1 + 0x10U & 0xffffffffffffffe0;\n    lVar3 = uVar2 + 0x10;\n    *(char *)(uVar2 + 0xf) = (char)lVar3 - (char)pvVar1;\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "00114030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109cf0": "\nvoid FUN_00109cf0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00114150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114278": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109120": "\nvoid FUN_00109120(void)\n\n{\n  FUN_00108890();\n  return;\n}\n\n", 
    "001031b0": "\nvoid FUN_001031b0(void)\n\n{\n  if (DAT_00113108 == '\\0') {\n    if (PTR___cxa_finalize_00112ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00113008);\n    }\n    FUN_00103140();\n    DAT_00113108 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00112f10)();\n  return iVar1;\n}\n\n", 
    "001029cd": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010c150": "\nvoid FUN_0010c150(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00113008);\n  return;\n}\n\n", 
    "001140d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114270": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * re_compile_pattern(char *__pattern,size_t __length,re_pattern_buffer *__buffer)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_re_compile_pattern_00112fa0)();\n  return pcVar1;\n}\n\n", 
    "001140a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a500": "\nvoid FUN_0010a500(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010a560(param_1,0,1);\n  return;\n}\n\n", 
    "001141c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106410": "\nlong FUN_00106410(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00106170(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00106280(param_1,param_2,lVar1);\n    FUN_00106310(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "00102970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00112fc0)();\n  return ppuVar1;\n}\n\n", 
    "0010a740": "\nbool FUN_0010a740(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00103140": "\n/* WARNING: Removing unreachable block (ram,0x00103153) */\n/* WARNING: Removing unreachable block (ram,0x0010315f) */\n\nvoid FUN_00103140(void)\n\n{\n  return;\n}\n\n", 
    "001093d0": "\nvoid * FUN_001093d0(char *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  FILE *pFVar2;\n  void *__ptr;\n  int *piVar3;\n  int iVar4;\n  \n  pFVar2 = fopen(param_1,\"rb\");\n  if (pFVar2 == (FILE *)0x0) {\n    return (void *)0x0;\n  }\n  __ptr = (void *)FUN_00109160(pFVar2,param_2);\n  piVar3 = __errno_location();\n  iVar4 = *piVar3;\n  iVar1 = FUN_0010a470(pFVar2);\n  if (iVar1 == 0) {\n    return __ptr;\n  }\n  if (__ptr != (void *)0x0) {\n    iVar4 = *piVar3;\n    free(__ptr);\n  }\n  *piVar3 = iVar4;\n  return (void *)0x0;\n}\n\n", 
    "00109e50": "\nvoid FUN_00109e50(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00109eab;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00109eab:\n                    /* WARNING: Subroutine does not return */\n      FUN_00109fa0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00109de0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00114238": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103380": "\nundefined2 * FUN_00103380(void)\n\n{\n  byte *pbVar1;\n  undefined2 *puVar2;\n  byte bVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  size_t sVar6;\n  undefined2 *puVar7;\n  ushort **ppuVar8;\n  undefined uVar9;\n  int iVar10;\n  int iVar11;\n  ulong uVar12;\n  ulong extraout_RDX;\n  byte *pbVar13;\n  undefined2 *puVar14;\n  ulong uVar15;\n  byte *__s;\n  int iVar16;\n  ushort *puVar17;\n  \n  uVar4 = dcgettext(0,\"error in regular expression matcher\",5);\n  piVar5 = __errno_location();\n  __s = (byte *)0x1;\n  error(1,*piVar5,uVar4);\n  sVar6 = strlen((char *)__s);\n  puVar7 = (undefined2 *)FUN_00109d80(sVar6 + 1);\n  bVar3 = *__s;\n  puVar2 = puVar7;\n  uVar15 = (ulong)bVar3;\n  while (bVar3 != 0) {\n    bVar3 = __s[1];\n    uVar12 = (ulong)bVar3;\n    pbVar13 = __s + 1;\n    if ((char)uVar15 == '\\\\') {\n      if (bVar3 == 0) break;\n      switch(bVar3) {\n      case 0x30:\n        bVar3 = __s[2];\n        iVar16 = 0;\n        uVar9 = 0;\n        pbVar13 = __s + 2;\n        while( true ) {\n          uVar12 = (ulong)(uint)(int)(char)bVar3;\n          if (7 < (byte)(bVar3 - 0x30)) break;\n          iVar16 = ((int)(char)bVar3 - 0x30U) + iVar16 * 8;\n          uVar9 = (undefined)iVar16;\n          pbVar1 = pbVar13 + 1;\n          if (__s + 5 == pbVar1) {\n            uVar12 = (ulong)pbVar13[1];\n            pbVar13 = __s + 5;\n            break;\n          }\n          bVar3 = *pbVar1;\n          pbVar13 = pbVar1;\n        }\n        *(undefined *)puVar2 = uVar9;\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        break;\n      default:\n        *(undefined *)puVar2 = 0x5c;\n        uVar12 = (ulong)__s[2];\n        puVar14 = puVar2 + 1;\n        pbVar13 = __s + 2;\n        *(byte *)((long)puVar2 + 1) = bVar3;\n        break;\n      case 0x61:\n        *(undefined *)puVar2 = 7;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 0x62:\n        *(undefined *)puVar2 = 8;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 99:\n        goto switchD_0010341e_caseD_63;\n      case 0x66:\n        *(undefined *)puVar2 = 0xc;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 0x6e:\n        *(undefined *)puVar2 = 10;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 0x72:\n        *(undefined *)puVar2 = 0xd;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 0x74:\n        *(undefined *)puVar2 = 9;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 0x76:\n        *(undefined *)puVar2 = 0xb;\n        uVar12 = (ulong)__s[2];\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n        pbVar13 = __s + 2;\n        break;\n      case 0x78:\n        ppuVar8 = __ctype_b_loc();\n        pbVar13 = __s + 2;\n        iVar16 = 0;\n        uVar15 = 0;\n        puVar17 = *ppuVar8;\n        do {\n          iVar10 = (int)(char)*pbVar13;\n          bVar3 = FUN_00103200(iVar10,uVar15,iVar10);\n          if ((*(byte *)((long)puVar17 + (ulong)bVar3 * 2 + 1) & 0x10) == 0) {\n            if (iVar16 == 0) {\n              puVar14 = puVar2 + 1;\n              *puVar2 = 0x785c;\n              uVar12 = extraout_RDX;\n              goto LAB_001033f4;\n            }\n            break;\n          }\n          if ((byte)((char)extraout_RDX + 0x9fU) < 6) {\n            iVar11 = iVar10 + -0x57;\n          }\n          else {\n            iVar11 = iVar10 + -0x30;\n            if ((byte)((char)extraout_RDX + 0xbfU) < 6) {\n              iVar11 = iVar10 + -0x37;\n            }\n          }\n          iVar16 = iVar16 + 1;\n          uVar15 = (ulong)(uint)((int)uVar15 * 0x10 + iVar11);\n          pbVar13 = pbVar13 + 1;\n        } while (iVar16 != 3);\n        *(char *)puVar2 = (char)uVar15;\n        uVar12 = (ulong)*pbVar13;\n        puVar14 = (undefined2 *)((long)puVar2 + 1);\n      }\n    }\n    else {\n      *(char *)puVar2 = (char)uVar15;\n      puVar14 = (undefined2 *)((long)puVar2 + 1);\n    }\nLAB_001033f4:\n    puVar2 = puVar14;\n    uVar15 = uVar12;\n    __s = pbVar13;\n    bVar3 = (byte)uVar12;\n  }\nLAB_0010342a:\n  *(undefined *)puVar2 = 0;\n  return puVar7;\nswitchD_0010341e_caseD_63:\n  do {\n    pbVar13 = pbVar13 + 1;\n  } while (*pbVar13 != 0);\n  goto LAB_0010342a;\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswalnum(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswalnum_00112ef0)();\n  return iVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00112e60)();\n  return pcVar1;\n}\n\n", 
    "00114118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * re_compile_pattern(char *__pattern,size_t __length,re_pattern_buffer *__buffer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001028f0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00112f80)();\n  return;\n}\n\n", 
    "001075a0": "\nchar * FUN_001075a0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_0010a960();\n    iVar1 = FUN_001074f0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_001074f0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010e0a5;\n      }\n      else {\n        pcVar2 = &DAT_0010e0a2;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010e0a9;\n    }\n    else {\n      pcVar2 = &DAT_0010e09e;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "0010a6c0": "\nbool FUN_0010a6c0(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00108bd0": "\nundefined8 FUN_00108bd0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_001139c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_001076d0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00109d80(lVar3 + 1);\n  FUN_001076d0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00109de0": "\nvoid * FUN_00109de0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109fa0();\n  }\n  return pvVar1;\n}\n\n", 
    "00108ab0": "\nuint FUN_00108ab0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_001139c0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00109330": "\nvoid * FUN_00109330(char *param_1,undefined8 param_2,char *param_3)\n\n{\n  int iVar1;\n  FILE *pFVar2;\n  void *__ptr;\n  int *piVar3;\n  int iVar4;\n  \n  pFVar2 = fopen(param_1,param_3);\n  if (pFVar2 == (FILE *)0x0) {\n    return (void *)0x0;\n  }\n  __ptr = (void *)FUN_00109160(pFVar2,param_2);\n  piVar3 = __errno_location();\n  iVar4 = *piVar3;\n  iVar1 = FUN_0010a470(pFVar2);\n  if (iVar1 == 0) {\n    return __ptr;\n  }\n  if (__ptr != (void *)0x0) {\n    iVar4 = *piVar3;\n    free(__ptr);\n  }\n  *piVar3 = iVar4;\n  return (void *)0x0;\n}\n\n", 
    "00114000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001140a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00112fb8)();\n  return iVar1;\n}\n\n", 
    "00102840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_00112f28)();\n  return sVar1;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_00112e98)();\n  return pvVar1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00112e08)();\n  return iVar1;\n}\n\n", 
    "0010c000": "\nuint FUN_0010c000(byte param_1)\n\n{\n  return *(uint *)(&DAT_0010ede0 + (ulong)(param_1 >> 5) * 4) >> (param_1 & 0x1f) & 1;\n}\n\n", 
    "0010b720": "\nvoid FUN_0010b720(char *param_1)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  char cVar3;\n  int iVar4;\n  size_t sVar5;\n  undefined8 uVar6;\n  long lVar7;\n  \n  if (param_1[0xc] != '\\0') {\n    return;\n  }\n  if (*param_1 == '\\0') {\n    pcVar1 = *(char **)(param_1 + 0x10);\n    cVar3 = FUN_0010c000((int)*pcVar1);\n    if (cVar3 != '\\0') {\n      *(undefined8 *)(param_1 + 0x18) = 1;\n      cVar3 = *pcVar1;\n      param_1[0x20] = '\\x01';\n      *(int *)(param_1 + 0x24) = (int)cVar3;\n      goto LAB_0010b762;\n    }\n    iVar4 = mbsinit((mbstate_t *)(param_1 + 4));\n    if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"mbsinit (&iter->state)\",\"lib/mbuiter.h\",0x96,\"mbuiter_multi_next\");\n    }\n    *param_1 = '\\x01';\n  }\n  sVar5 = __ctype_get_mb_cur_max();\n  uVar2 = *(undefined8 *)(param_1 + 0x10);\n  uVar6 = FUN_0010bec0(uVar2,sVar5);\n  lVar7 = FUN_0010a5e0(param_1 + 0x24,uVar2,uVar6,(mbstate_t *)(param_1 + 4));\n  *(long *)(param_1 + 0x18) = lVar7;\n  if (lVar7 == -1) {\n    *(undefined8 *)(param_1 + 0x18) = 1;\n    param_1[0x20] = '\\0';\n    param_1[0xc] = '\\x01';\n    return;\n  }\n  if (lVar7 == -2) {\n    sVar5 = strlen(*(char **)(param_1 + 0x10));\n    param_1[0x20] = '\\0';\n    *(size_t *)(param_1 + 0x18) = sVar5;\n  }\n  else {\n    if (lVar7 == 0) {\n      *(undefined8 *)(param_1 + 0x18) = 1;\n      if (**(char **)(param_1 + 0x10) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"lib/mbuiter.h\",0xb2,\"mbuiter_multi_next\");\n      }\n      if (*(int *)(param_1 + 0x24) != 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"iter->cur.wc == 0\",\"lib/mbuiter.h\",0xb3,\"mbuiter_multi_next\");\n      }\n    }\n    param_1[0x20] = '\\x01';\n    iVar4 = mbsinit((mbstate_t *)(param_1 + 4));\n    if (iVar4 != 0) {\n      *param_1 = '\\0';\n    }\n  }\nLAB_0010b762:\n  param_1[0xc] = '\\x01';\n  return;\n}\n\n", 
    "001140b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a750": "\nulong FUN_0010a750(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001141d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108e90": "\nvoid FUN_00108e90(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00108dc0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00108d70": "\nvoid FUN_00108d70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108890(param_1,param_2,0xffffffffffffffff,&DAT_001139c0);\n  return;\n}\n\n", 
    "001093e0": "\nuint * FUN_001093e0(char *param_1,int param_2)\n\n{\n  byte bVar1;\n  ushort *puVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint *__dest;\n  size_t sVar6;\n  ushort **ppuVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint *unaff_R13;\n  long in_FS_OFFSET;\n  bool bVar10;\n  char cVar11;\n  uint *local_88;\n  undefined local_80;\n  undefined8 local_7c;\n  undefined local_74;\n  uint *local_70;\n  long local_68;\n  char local_60;\n  wint_t local_5c;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __dest = (uint *)strdup(param_1);\n  if (__dest == (uint *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109fa0();\n  }\n  sVar6 = __ctype_get_mb_cur_max();\n  if (sVar6 < 2) {\n    puVar9 = __dest;\n    if (param_2 != 0) {\n      bVar1 = *(byte *)__dest;\n      if (bVar1 != 0) {\n        ppuVar7 = __ctype_b_loc();\n        do {\n          if ((*(byte *)((long)*ppuVar7 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) break;\n          bVar1 = *(byte *)((long)puVar9 + 1);\n          puVar9 = (uint *)((long)puVar9 + 1);\n        } while (bVar1 != 0);\n      }\n      sVar6 = strlen((char *)puVar9);\n      memmove(__dest,puVar9,sVar6 + 1);\n      puVar9 = __dest;\n      if (param_2 == 1) goto LAB_001095d4;\n    }\n    do {\n      puVar8 = puVar9;\n      uVar3 = *puVar8 + 0xfefefeff & ~*puVar8;\n      uVar4 = uVar3 & 0x80808080;\n      puVar9 = puVar8 + 1;\n    } while (uVar4 == 0);\n    bVar10 = (uVar3 & 0x8080) == 0;\n    if (bVar10) {\n      uVar4 = uVar4 >> 0x10;\n    }\n    if (bVar10) {\n      puVar9 = (uint *)((long)puVar8 + 6);\n    }\n    puVar9 = (uint *)((long)puVar9 + (-4 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n    if (__dest <= puVar9) {\n      ppuVar7 = __ctype_b_loc();\n      puVar2 = *ppuVar7;\n      do {\n        if ((*(byte *)((long)puVar2 + (ulong)*(byte *)puVar9 * 2 + 1) & 0x20) == 0) break;\n        *(byte *)puVar9 = 0;\n        puVar9 = (uint *)((long)puVar9 + -1);\n      } while (__dest <= puVar9);\n    }\n  }\n  else {\n    puVar9 = __dest;\n    local_70 = __dest;\n    if (param_2 != 0) {\n      do {\n        puVar8 = puVar9;\n        uVar3 = *puVar8 + 0xfefefeff & ~*puVar8;\n        uVar4 = uVar3 & 0x80808080;\n        puVar9 = puVar8 + 1;\n      } while (uVar4 == 0);\n      local_80 = 0;\n      bVar10 = (uVar3 & 0x8080) == 0;\n      local_74 = 0;\n      local_7c = 0;\n      if (bVar10) {\n        uVar4 = uVar4 >> 0x10;\n      }\n      local_88 = puVar8 + 1;\n      if (bVar10) {\n        local_88 = (uint *)((long)puVar8 + 6);\n      }\n      local_88 = (uint *)((long)local_88 + (-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n      if (__dest < local_88) {\n        do {\n          local_74 = 0;\n          FUN_0010a9a0(&local_88);\n          if ((local_60 == '\\0') || (iVar5 = iswspace(local_5c), iVar5 == 0)) break;\n          local_70 = (uint *)((long)local_70 + local_68);\n          local_74 = 0;\n        } while (local_70 < local_88);\n      }\n      puVar9 = local_70;\n      sVar6 = strlen((char *)local_70);\n      memmove(__dest,puVar9,sVar6 + 1);\n      puVar9 = __dest;\n      if (param_2 == 1) goto LAB_001095d4;\n    }\n    do {\n      puVar8 = puVar9;\n      uVar3 = *puVar8 + 0xfefefeff & ~*puVar8;\n      uVar4 = uVar3 & 0x80808080;\n      puVar9 = puVar8 + 1;\n    } while (uVar4 == 0);\n    local_80 = 0;\n    bVar10 = (uVar3 & 0x8080) == 0;\n    local_74 = 0;\n    local_7c = 0;\n    if (bVar10) {\n      uVar4 = uVar4 >> 0x10;\n    }\n    local_88 = puVar8 + 1;\n    if (bVar10) {\n      local_88 = (uint *)((long)puVar8 + 6);\n    }\n    local_88 = (uint *)((long)local_88 + (-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n    cVar11 = '\\0';\n    local_70 = __dest;\n    if (__dest < local_88) {\n      do {\n        local_74 = 0;\n        FUN_0010a9a0(&local_88);\n        puVar9 = local_70;\n        if (cVar11 == '\\0') {\n          if (local_60 == '\\0') {\nLAB_00109502:\n            cVar11 = '\\x01';\n          }\n          else {\n            iVar5 = iswspace(local_5c);\n            cVar11 = iVar5 == 0;\n          }\n        }\n        else if (cVar11 == '\\x01') {\n          local_70 = puVar9;\n          if ((local_60 != '\\0') && (iVar5 = iswspace(local_5c), local_70 = puVar9, iVar5 != 0)) {\n            cVar11 = '\\x02';\n            unaff_R13 = puVar9;\n          }\n        }\n        else if (((cVar11 != '\\x02') || (local_60 == '\\0')) ||\n                (iVar5 = iswspace(local_5c), iVar5 == 0)) goto LAB_00109502;\n        local_74 = 0;\n        local_70 = (uint *)(local_68 + (long)local_70);\n      } while (local_70 < local_88);\n      if (cVar11 == '\\x02') {\n        *(byte *)unaff_R13 = 0;\n      }\n    }\n  }\nLAB_001095d4:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return __dest;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f80": "\nvoid FUN_00109f80(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00109f50(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00114128": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strdup(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001028e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_00112f78)();\n  return pFVar1;\n}\n\n", 
    "001027c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00112ee8)();\n  return iVar1;\n}\n\n", 
    "0010b8f0": "\nundefined8 FUN_0010b8f0(char *param_1,size_t param_2,iconv_t param_3,char **param_4,char **param_5)\n\n{\n  int iVar1;\n  size_t sVar2;\n  int *piVar3;\n  char *__ptr;\n  undefined8 uVar4;\n  char *pcVar5;\n  long in_FS_OFFSET;\n  char *local_1068;\n  size_t local_1060;\n  char *local_1058;\n  char *local_1050;\n  char local_1048 [4104];\n  long local_40;\n  \n  pcVar5 = (char *)0x0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iconv(param_3,(char **)0x0,(size_t *)0x0,(char **)0x0,(size_t *)0x0);\n  local_1068 = param_1;\n  local_1060 = param_2;\n  if (param_2 != 0) {\n    do {\n      local_1050 = (char *)0x1000;\n      local_1058 = local_1048;\n      sVar2 = iconv(param_3,&local_1068,&local_1060,&local_1058,(size_t *)&local_1050);\n      if (sVar2 == 0xffffffffffffffff) {\n        piVar3 = __errno_location();\n        if (*piVar3 != 7) {\n          if (*piVar3 != 0x16) goto LAB_0010bb1f;\n          break;\n        }\n      }\n      pcVar5 = local_1058 + ((long)pcVar5 - (long)local_1048);\n    } while (local_1060 != 0);\n  }\n  local_1050 = (char *)0x1000;\n  local_1058 = local_1048;\n  sVar2 = iconv(param_3,(char **)0x0,(size_t *)0x0,&local_1058,(size_t *)&local_1050);\n  if (sVar2 != 0xffffffffffffffff) {\n    pcVar5 = local_1058 + ((long)pcVar5 - (long)local_1048);\n    if (pcVar5 == (char *)0x0) {\n      uVar4 = 0;\n      *param_5 = (char *)0x0;\n      goto LAB_0010bacd;\n    }\n    __ptr = *param_4;\n    if (((__ptr != (char *)0x0) && (pcVar5 <= *param_5)) ||\n       (__ptr = (char *)malloc((size_t)pcVar5), __ptr != (char *)0x0)) {\n      iconv(param_3,(char **)0x0,(size_t *)0x0,(char **)0x0,(size_t *)0x0);\n      local_1068 = param_1;\n      local_1060 = param_2;\n      local_1058 = __ptr;\n      local_1050 = pcVar5;\n      do {\n        if (local_1060 == 0) goto LAB_0010ba92;\n        sVar2 = iconv(param_3,&local_1068,&local_1060,&local_1058,(size_t *)&local_1050);\n      } while (sVar2 != 0xffffffffffffffff);\n      piVar3 = __errno_location();\n      if (*piVar3 == 0x16) {\nLAB_0010ba92:\n        sVar2 = iconv(param_3,(char **)0x0,(size_t *)0x0,&local_1058,(size_t *)&local_1050);\n        if (sVar2 != 0xffffffffffffffff) {\n          if (local_1050 != (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          uVar4 = 0;\n          *param_4 = __ptr;\n          *param_5 = pcVar5;\n          goto LAB_0010bacd;\n        }\n      }\n      uVar4 = 0xffffffff;\n      if (*param_4 != __ptr) {\n        piVar3 = __errno_location();\n        iVar1 = *piVar3;\n        free(__ptr);\n        *piVar3 = iVar1;\n      }\n      goto LAB_0010bacd;\n    }\n    piVar3 = __errno_location();\n    *piVar3 = 0xc;\n  }\nLAB_0010bb1f:\n  uVar4 = 0xffffffff;\nLAB_0010bacd:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar4;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00112e58)();\n  return pcVar1;\n}\n\n", 
    "00114008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nintmax_t strtoimax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106f20": "\nint * FUN_00106f20(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a6d0": "\nuint FUN_0010a6d0(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00114250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d10": "\nvoid FUN_00105d10(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  long lVar4;\n  undefined **ppuVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  undefined1 *puVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar7 = (byte *)0x10dc2b;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010dbb1;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar5 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar7 == (byte *)0x0;\n    if (bVar10) break;\n    lVar4 = 4;\n    pbVar6 = &DAT_0010dbad;\n    do {\n      if (lVar4 == 0) break;\n      lVar4 = lVar4 + -1;\n      bVar9 = *pbVar6 < *pbVar7;\n      bVar10 = *pbVar6 == *pbVar7;\n      pbVar6 = pbVar6 + 1;\n      pbVar7 = pbVar7 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar7 = *(byte **)((long)ppuVar5 + 0x20);\n    ppuVar5 = (undefined **)((long)ppuVar5 + 0x10);\n  }\n  puVar8 = *(undefined1 **)((long)ppuVar5 + 0x18);\n  if (puVar8 == (undefined1 *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar8 = &DAT_0010dbad;\n        goto LAB_00105f2e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar8 = &DAT_0010dbad;\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_0010dbad);\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_00105f2e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,&DAT_0010dbad);\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_0010dbad);\n    if (puVar8 != &DAT_0010dbad) {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,puVar8,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001065c0": "\nundefined8 FUN_001065c0(int param_1)\n\n{\n  int __fd;\n  int *piVar1;\n  undefined8 uVar2;\n  \n  uVar2 = 1;\n  __fd = open(\"/dev/null\",0);\n  if ((param_1 != __fd) && (uVar2 = 0, -1 < __fd)) {\n    close(__fd);\n    piVar1 = __errno_location();\n    *piVar1 = 9;\n    return 0;\n  }\n  return uVar2;\n}\n\n", 
    "0010a070": "\nundefined8 FUN_0010a070(long *param_1,int param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  \n  lVar3 = -0x8000000000000000;\n  lVar2 = (long)param_2;\n  lVar1 = *param_1;\n  if ((SUB168((SEXT816(-0x8000000000000000) & (undefined  [16])0xffffffffffffffff |\n              ZEXT816(0x8000000000000000)) / SEXT816(lVar2),0) <= lVar1) &&\n     (lVar3 = 0x7fffffffffffffff,\n     lVar1 <= SUB168((SEXT816(0x7fffffffffffffff) & (undefined  [16])0xffffffffffffffff |\n                     ZEXT816(0x7fffffffffffffff)) / SEXT816(lVar2),0))) {\n    *param_1 = lVar2 * lVar1;\n    return 0;\n  }\n  *param_1 = lVar3;\n  return 1;\n}\n\n", 
    "00109bb0": "\nvoid FUN_00109bb0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00109740();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109100": "\nvoid FUN_00109100(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00109030(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001140b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102950": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00112fb0)();\n  return iVar1;\n}\n\n", 
    "00102830": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00112f20)();\n  return;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00112e90)();\n  return iVar1;\n}\n\n", 
    "001029b9": "\nvoid switchD_001097e8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103320": "\nvoid FUN_00103320(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010a840": "\nint FUN_0010a840(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_0010a800(*param_1);\n      bVar2 = FUN_0010a800(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00105fb0": "\nvoid FUN_00105fb0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_001138a0;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\n                      \"Usage: %s [OPTION]... [INPUT]...   (without -G)\\n  or:  %s -G [OPTION]... [INPUT [OUTPUT]]\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Output a permuted index, including context, of the words in the input files.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103320();\n    FUN_00103350();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -A, --auto-reference           output automatically generated references\\n  -G, --traditional              behave more like System V \\'ptx\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -F, --flag-truncation=STRING   use STRING for flagging line truncations.\\n                                 The default is \\'/\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -M, --macro-name=STRING        macro name to use instead of \\'xx\\'\\n  -O, --format=roff              generate output as roff directives\\n  -R, --right-side-refs          put references at right, not counted in -w\\n  -S, --sentence-regexp=REGEXP   for end of lines or end of sentences\\n  -T, --format=tex               generate output as TeX directives\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -W, --word-regexp=REGEXP       use REGEXP to match each keyword\\n  -b, --break-file=FILE          word break characters in this FILE\\n  -f, --ignore-case              fold lower case to upper case for sorting\\n  -g, --gap-size=NUMBER          gap size in columns between output fields\\n  -i, --ignore-file=FILE         read ignore word list from FILE\\n  -o, --only-file=FILE           read only word list from this FILE\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -r, --references               first field of each line is a reference\\n  -t, --typeset-mode               - not implemented -\\n  -w, --width=NUMBER             output width in columns, reference excluded\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00105d10();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "0010a720": "\nbool FUN_0010a720(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00104ec0": "\nvoid FUN_00104ec0(void)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  byte bVar3;\n  int iVar4;\n  long extraout_RDX;\n  long lVar5;\n  char *pcVar6;\n  long lVar7;\n  \n  __printf_chk(1,&DAT_0010dba3,PTR_DAT_00113028);\n  putchar_unlocked(0x7b);\n  FUN_001044d0(DAT_001131a0,DAT_001131a8);\n  fwrite_unlocked(&DAT_0010dba8,1,2,stdout);\n  FUN_001044d0(DAT_00113180,DAT_00113188);\n  fwrite_unlocked(&DAT_0010dba8,1,2,stdout);\n  pcVar2 = DAT_00113168;\n  pcVar1 = DAT_00113160;\n  if (DAT_001135c0 == 0) {\n    bVar3 = FUN_00103200((int)*DAT_00113160);\n    if ((&DAT_00113380)[bVar3] == '\\0') {\n      pcVar6 = pcVar1 + 1;\n    }\n    else {\n      pcVar6 = pcVar1;\n      if (pcVar1 < pcVar2) {\n        do {\n          pcVar6 = pcVar6 + 1;\n          if (pcVar2 == pcVar6) break;\n          bVar3 = FUN_00103200((int)*pcVar6);\n        } while (*(char *)(extraout_RDX + (ulong)bVar3) != '\\0');\n      }\n    }\n  }\n  else {\n    iVar4 = re_match((re_pattern_buffer *)&DAT_001135c8,DAT_00113160,\n                     (int)DAT_00113168 - (int)DAT_00113160,0,(re_registers *)0x0);\n    if (iVar4 == -2) {\n      FUN_00103380();\n      DAT_001131a0 = 0;\n      DAT_00113190 = 0;\n      DAT_001131a8 = 0;\n      DAT_00113140 = 0;\n      DAT_00113148 = 0;\n      DAT_00113130 = 0;\n      if (0 < DAT_001132e0) {\n        lVar7 = 0;\n        lVar5 = DAT_001132f0;\n        do {\n          FUN_00103980(lVar5);\n          if (DAT_00113884 == 2) {\n            FUN_00104cc0();\n          }\n          else if (DAT_00113884 < 3) {\n            FUN_001048b0();\n          }\n          else if (DAT_00113884 == 3) {\n            FUN_00104ec0();\n          }\n          lVar5 = lVar5 + 0x30;\n          lVar7 = lVar7 + 1;\n        } while (lVar7 < DAT_001132e0);\n      }\n      return;\n    }\n    if (iVar4 == -1) {\n      iVar4 = 1;\n    }\n    pcVar6 = pcVar1 + iVar4;\n  }\n  FUN_001044d0(pcVar1,pcVar6);\n  fwrite_unlocked(&DAT_0010dba8,1,2,stdout);\n  FUN_001044d0(pcVar6,pcVar2);\n  fwrite_unlocked(&DAT_0010dba8,1,2,stdout);\n  FUN_001044d0(DAT_00113140,DAT_00113148);\n  putchar_unlocked(0x7d);\n  if ((DAT_0011388a != '\\0') || (DAT_00113889 != '\\0')) {\n    putchar_unlocked(0x7b);\n    FUN_001044d0(DAT_00113120,DAT_00113128);\n    putchar_unlocked(0x7d);\n  }\n  putchar_unlocked(10);\n  return;\n}\n\n", 
    "00103200": "\nundefined4 FUN_00103200(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "0010a960": "\nchar * FUN_0010a960(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "001029b4": "\nvoid FUN_001029b4(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t iconv(iconv_t __cd,char **__inbuf,size_t *__inbytesleft,char **__outbuf,\n            size_t *__outbytesleft)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_iconv_00112dd0)();\n  return sVar1;\n}\n\n", 
    "00108f80": "\nvoid FUN_00108f80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108ec0(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00109f50": "\nvoid FUN_00109f50(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00109d80(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "001141a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a0f0": "\nuint FUN_0010a0f0(char *param_1,char **param_2,uint param_3,intmax_t *param_4,char *param_5)\n\n{\n  char cVar1;\n  char cVar2;\n  uint uVar3;\n  int *piVar4;\n  intmax_t iVar5;\n  char *pcVar6;\n  char *pcVar7;\n  undefined8 uVar8;\n  uint uVar9;\n  int iVar10;\n  long in_FS_OFFSET;\n  char *local_50;\n  intmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoimax\");\n  }\n  if (param_2 == (char **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar4 = __errno_location();\n  *piVar4 = 0;\n  iVar5 = strtoimax(param_1,param_2,param_3);\n  pcVar7 = *param_2;\n  local_48 = iVar5;\n  if (pcVar7 == param_1) {\n    if (param_5 == (char *)0x0) {\n      uVar9 = 4;\n      goto LAB_0010a17f;\n    }\n    cVar1 = *pcVar7;\n    uVar9 = 4;\n    if (cVar1 == '\\0') goto LAB_0010a17f;\n    iVar10 = (int)cVar1;\n    pcVar6 = strchr(param_5,iVar10);\n    if (pcVar6 == (char *)0x0) goto LAB_0010a17f;\n    local_48 = 1;\n    uVar9 = 0;\nLAB_0010a202:\n    pcVar6 = strchr(param_5,iVar10);\n    if (pcVar6 == (char *)0x0) {\nswitchD_0010a263_caseD_43:\n      uVar9 = uVar9 | 2;\n      *param_4 = local_48;\n      goto LAB_0010a17f;\n    }\n    switch(cVar1) {\n    case 'E':\n    case 'G':\n    case 'K':\n    case 'M':\n    case 'P':\n    case 'T':\n    case 'Y':\n    case 'Z':\n    case 'g':\n    case 'k':\n    case 'm':\n    case 't':\n      pcVar6 = strchr(param_5,0x30);\n      if (pcVar6 == (char *)0x0) goto switchD_0010a23a_caseD_46;\n      cVar2 = pcVar7[1];\n      if (cVar2 == 'D') {\n        iVar10 = 2;\n        uVar8 = 1000;\n      }\n      else if (cVar2 == 'i') {\n        uVar8 = 0x400;\n        iVar10 = (pcVar7[2] == 'B') + 1 + (uint)(pcVar7[2] == 'B');\n      }\n      else {\n        iVar10 = (cVar2 == 'B') + 1;\n        uVar8 = 1000;\n        if (cVar2 != 'B') {\n          uVar8 = 0x400;\n        }\n      }\n      break;\n    default:\nswitchD_0010a23a_caseD_46:\n      iVar10 = 1;\n      uVar8 = 0x400;\n    }\n    switch(cVar1) {\n    case 'B':\n      uVar3 = FUN_0010a070(&local_48,0x400);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    default:\n      goto switchD_0010a263_caseD_43;\n    case 'E':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,6);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'G':\n    case 'g':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,3);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'K':\n    case 'k':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,1);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'M':\n    case 'm':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,2);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'P':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,5);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'T':\n    case 't':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,4);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'Y':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,8);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'Z':\n      uVar3 = FUN_0010a0c0(&local_48,uVar8,7);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'b':\n      uVar3 = FUN_0010a070(&local_48,0x200);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n      break;\n    case 'c':\n      break;\n    case 'w':\n      uVar3 = FUN_0010a070(&local_48,2);\n      pcVar7 = *param_2;\n      uVar9 = uVar9 | uVar3;\n    }\n    iVar5 = local_48;\n    *param_2 = pcVar7 + iVar10;\n    if (pcVar7[iVar10] != '\\0') {\n      uVar9 = uVar9 | 2;\n    }\n  }\n  else {\n    if (*piVar4 == 0) {\n      uVar9 = 0;\n    }\n    else {\n      uVar9 = 4;\n      if (*piVar4 != 0x22) goto LAB_0010a17f;\n      uVar9 = 1;\n    }\n    if ((param_5 != (char *)0x0) && (cVar1 = *pcVar7, cVar1 != '\\0')) {\n      iVar10 = (int)cVar1;\n      goto LAB_0010a202;\n    }\n  }\n  *param_4 = iVar5;\nLAB_0010a17f:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar9;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010ab70": "\nundefined8 FUN_0010ab70(char *param_1,long param_2,ulong param_3,char **param_4)\n\n{\n  undefined *puVar1;\n  undefined8 uVar2;\n  long lVar3;\n  char cVar4;\n  undefined *puVar5;\n  undefined *puVar7;\n  undefined *puVar8;\n  ulong uVar9;\n  ulong uVar10;\n  char *pcVar11;\n  long in_FS_OFFSET;\n  undefined auStack_38 [8];\n  long local_30;\n  undefined *puVar6;\n  \n  puVar5 = auStack_38;\n  puVar6 = auStack_38;\n  puVar8 = auStack_38;\n  puVar7 = auStack_38;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar9 = param_3 * 8;\n  puVar1 = auStack_38;\n  if ((-1 < (long)uVar9) && (puVar1 = auStack_38, param_3 >> 0x3d == 0)) {\n    if (uVar9 < 0xfa1) {\n      puVar8 = auStack_38;\n      while (puVar6 != auStack_38 + -(uVar9 + 0x36 & 0xfffffffffffff000)) {\n        puVar5 = puVar8 + -0x1000;\n        *(undefined8 *)(puVar8 + -8) = *(undefined8 *)(puVar8 + -8);\n        puVar6 = puVar8 + -0x1000;\n        puVar8 = puVar8 + -0x1000;\n      }\n      uVar9 = (ulong)((uint)(uVar9 + 0x36) & 0xff0);\n      lVar3 = -uVar9;\n      puVar7 = puVar5 + lVar3;\n      puVar8 = puVar5 + lVar3;\n      if (uVar9 != 0) {\n        *(undefined8 *)(puVar5 + -8) = *(undefined8 *)(puVar5 + -8);\n      }\n      uVar9 = ((ulong)(puVar5 + lVar3 + 0xf) & 0xfffffffffffffff0) + 0x1f & 0xffffffffffffffe0;\n    }\n    else {\n      uVar9 = FUN_0010bf00();\n    }\n    puVar1 = puVar7;\n    if (uVar9 != 0) {\n      *(undefined8 *)(uVar9 + 8) = 1;\n      if (2 < param_3) {\n        lVar3 = 0;\n        uVar10 = 2;\n        do {\n          cVar4 = *(char *)(param_2 + lVar3);\n          while (*(char *)(param_2 + -1 + uVar10) != cVar4) {\n            if (lVar3 == 0) {\n              *(ulong *)(uVar9 + uVar10 * 8) = uVar10;\n              lVar3 = 0;\n              goto LAB_0010ac79;\n            }\n            lVar3 = lVar3 - *(long *)(uVar9 + lVar3 * 8);\n            cVar4 = *(char *)(param_2 + lVar3);\n          }\n          lVar3 = lVar3 + 1;\n          *(ulong *)(uVar9 + uVar10 * 8) = uVar10 - lVar3;\nLAB_0010ac79:\n          uVar10 = uVar10 + 1;\n        } while (param_3 != uVar10);\n      }\n      *param_4 = (char *)0x0;\n      cVar4 = *param_1;\n      if (cVar4 != '\\0') {\n        uVar10 = 0;\n        pcVar11 = param_1;\n        do {\n          if (*(char *)(param_2 + uVar10) == cVar4) {\n            uVar10 = uVar10 + 1;\n            param_1 = param_1 + 1;\n            if (param_3 == uVar10) {\n              *param_4 = pcVar11;\n              break;\n            }\n          }\n          else if (uVar10 == 0) {\n            pcVar11 = pcVar11 + 1;\n            param_1 = param_1 + 1;\n          }\n          else {\n            lVar3 = *(long *)(uVar9 + uVar10 * 8);\n            pcVar11 = pcVar11 + lVar3;\n            uVar10 = uVar10 - lVar3;\n          }\n          cVar4 = *param_1;\n        } while (cVar4 != '\\0');\n      }\n      *(undefined8 *)(puVar8 + -8) = 0x10acd0;\n      FUN_0010bf40();\n      uVar2 = 1;\n      goto LAB_0010acd5;\n    }\n  }\n  puVar8 = puVar1;\n  uVar2 = 0;\nLAB_0010acd5:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(code **)(puVar8 + -8) = FUN_0010ad20;\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "00114218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a7c0": "\nbool FUN_0010a7c0(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010a6a0": "\nbool FUN_0010a6a0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010b8b0": "\nvoid FUN_0010b8b0(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  \n  cVar1 = *param_2;\n  *param_1 = cVar1;\n  if (cVar1 == '\\0') {\n    *(undefined8 *)(param_1 + 4) = 0;\n  }\n  else {\n    *(undefined8 *)(param_1 + 4) = *(undefined8 *)(param_2 + 4);\n  }\n  param_1[0xc] = param_2[0xc];\n  FUN_0010bfa0(param_1 + 0x10,param_2 + 0x10);\n  return;\n}\n\n", 
    "001068d0": "\nuint FUN_001068d0(char *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  char *__s;\n  ushort **ppuVar4;\n  char *pcVar5;\n  size_t sVar6;\n  uint unaff_R15D;\n  long in_FS_OFFSET;\n  undefined local_c8 [4];\n  undefined8 local_c4;\n  undefined local_bc;\n  char *local_b8;\n  long local_b0;\n  char local_a8;\n  wint_t local_a4;\n  undefined local_88 [4];\n  undefined8 local_84;\n  undefined local_7c;\n  char *local_78;\n  long local_70;\n  char local_68;\n  int local_64;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s = (char *)FUN_001093e0(param_2,2);\n  cVar1 = *param_1;\n  while ((cVar1 != '\\0' && (pcVar5 = (char *)FUN_0010b130(param_1,__s), pcVar5 != (char *)0x0))) {\n    sVar6 = __ctype_get_mb_cur_max();\n    if (sVar6 < 2) {\n      sVar6 = strlen(__s);\n      if (((pcVar5 <= param_1) ||\n          (ppuVar4 = __ctype_b_loc(), (*(byte *)(*ppuVar4 + (byte)pcVar5[-1]) & 8) == 0)) &&\n         ((bVar2 = pcVar5[sVar6], bVar2 == 0 ||\n          (ppuVar4 = __ctype_b_loc(), (*(byte *)(*ppuVar4 + bVar2) & 8) == 0)))) {\n        unaff_R15D = 1;\n        goto LAB_00106b13;\n      }\n      if (*pcVar5 == '\\0') break;\n      cVar1 = pcVar5[1];\n      param_1 = pcVar5 + 1;\n    }\n    else {\n      local_c8[0] = 0;\n      local_c4 = 0;\n      local_b8 = param_1;\n      if (param_1 < pcVar5) {\n        do {\n          local_bc = 0;\n          FUN_0010b720(local_c8);\n          if ((local_a8 != '\\0') && (local_a4 == 0)) goto FUN_001029a0;\n          local_b8 = local_b8 + local_b0;\n          local_bc = 0;\n        } while (local_b8 < pcVar5);\n        if (local_a8 == '\\0') goto LAB_00106b48;\n        iVar3 = iswalnum(local_a4);\n        unaff_R15D = unaff_R15D & 0xffffff00 | (uint)(iVar3 == 0);\n      }\n      else {\nLAB_00106b48:\n        unaff_R15D = 1;\n      }\n      local_c8[0] = 0;\n      local_c4 = 0;\n      local_88[0] = 0;\n      local_84 = 0;\n      local_b8 = pcVar5;\n      local_78 = __s;\n      while( true ) {\n        local_7c = 0;\n        local_bc = 0;\n        FUN_0010b720(local_88);\n        if ((local_68 != '\\0') && (local_64 == 0)) break;\n        FUN_0010b720(local_c8);\n        if ((local_a8 != '\\0') && (local_a4 == 0)) {\nFUN_001029a0:\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\n        local_b8 = local_b8 + local_b0;\n        local_78 = local_78 + local_70;\n      }\n      FUN_0010b720(local_c8);\n      if ((((local_a8 != '\\0') && (local_a4 == 0)) ||\n          ((local_a8 == '\\0' || (iVar3 = iswalnum(local_a4), iVar3 == 0)))) &&\n         ((char)unaff_R15D != '\\0')) goto LAB_00106b13;\n      local_c4 = 0;\n      local_c8[0] = 0;\n      local_bc = 0;\n      local_b8 = pcVar5;\n      FUN_0010b720(local_c8);\n      if ((local_a8 != '\\0') && (local_a4 == 0)) break;\n      param_1 = pcVar5 + local_b0;\n      cVar1 = *param_1;\n    }\n  }\n  unaff_R15D = 0;\nLAB_00106b13:\n  free(__s);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return unaff_R15D;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108cd0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108cd0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_001130a0;\n  if (1 < DAT_00113098) {\n    ppvVar2 = (void **)(PTR_DAT_001130a0 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_001130a0 + (ulong)(DAT_00113098 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_001138c0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_001130b8 = &DAT_001138c0;\n    _DAT_001130b0 = 0x100;\n  }\n  if (__ptr_00 != &DAT_001130b0) {\n    free(__ptr_00);\n    PTR_DAT_001130a0 = &DAT_001130b0;\n  }\n  DAT_00113098 = 1;\n  return;\n}\n\n", 
    "00109ee0": "\nvoid FUN_00109ee0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109e50(param_1,param_2,1);\n  return;\n}\n\n", 
    "00114100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a040": "\nlong FUN_0010a040(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_0010bde0();\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109fa0();\n    }\n  }\n  return lVar1;\n}\n\n", 
    "001071c0": "\nundefined8\nFUN_001071c0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107110(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010b130": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_0010b130(char *param_1,char *param_2)\n\n{\n  char *pcVar1;\n  char cVar2;\n  char cVar3;\n  byte bVar4;\n  int iVar5;\n  size_t sVar6;\n  char *pcVar7;\n  long lVar8;\n  byte bVar9;\n  ulong uVar10;\n  ulong uVar11;\n  char *__string;\n  ulong uVar12;\n  ulong uVar13;\n  long in_FS_OFFSET;\n  bool bVar14;\n  ulong local_1a0;\n  char *local_190;\n  undefined local_188 [4];\n  undefined8 local_184;\n  undefined local_17c;\n  char *local_178;\n  size_t local_170;\n  char local_168;\n  int local_164;\n  undefined local_148 [4];\n  undefined8 local_144;\n  undefined local_13c;\n  char *local_138;\n  long local_130;\n  byte local_128;\n  int local_124;\n  uint local_108;\n  undefined4 uStack_104;\n  uint uStack_100;\n  uint uStack_fc;\n  char *local_f8;\n  size_t sStack_f0;\n  undefined4 local_e8;\n  int iStack_e4;\n  undefined8 uStack_e0;\n  undefined8 local_d8;\n  undefined8 uStack_d0;\n  undefined8 local_c8;\n  undefined8 uStack_c0;\n  char *local_b8;\n  size_t sStack_b0;\n  undefined8 local_a8;\n  undefined8 uStack_a0;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined local_88 [4];\n  undefined8 local_84;\n  undefined local_7c;\n  char *local_78;\n  size_t local_70;\n  char local_68;\n  int local_64;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar6 = __ctype_get_mb_cur_max();\n  pcVar7 = param_1;\n  if (sVar6 < 2) {\n    cVar2 = *param_2;\n    if (cVar2 != '\\0') {\n      cVar3 = *param_1;\n      if (cVar3 != '\\0') {\n        uVar12 = 0;\n        uVar13 = 0;\n        uVar11 = 0;\n        bVar4 = 1;\n        __string = param_2;\n        while( true ) {\n          uVar12 = uVar12 + 1;\n          uVar10 = uVar13 + 1;\n          pcVar1 = param_1 + 1;\n          if (cVar2 == cVar3) {\n            cVar3 = param_2[1];\n            pcVar7 = param_1;\n            if (cVar3 == '\\0') goto LAB_0010b268;\n            while( true ) {\n              lVar8 = uVar10 - uVar13;\n              if (param_1[lVar8] == '\\0') goto LAB_0010b2d9;\n              uVar10 = uVar10 + 1;\n              if (param_1[lVar8] != cVar3) break;\n              cVar3 = param_2[uVar10 - uVar13];\n              if (cVar3 == '\\0') goto LAB_0010b268;\n            }\n          }\n          uVar13 = uVar10;\n          if (*pcVar1 == '\\0') break;\n          bVar9 = 9 < uVar12 & bVar4;\n          if ((bVar9 != 0) && (bVar4 = bVar9, uVar12 * 5 <= uVar13)) {\n            if (__string != (char *)0x0) {\n              sVar6 = strnlen(__string,uVar13 - uVar11);\n              __string = __string + sVar6;\n              uVar11 = uVar13;\n              if (*__string != '\\0') goto LAB_0010b200;\n            }\n            sVar6 = strlen(param_2);\n            bVar4 = FUN_0010ab70(pcVar1,param_2,sVar6,&local_190);\n            pcVar7 = local_190;\n            if (bVar4 != 0) goto LAB_0010b268;\n            __string = (char *)0x0;\n          }\nLAB_0010b200:\n          cVar3 = *pcVar1;\n          param_1 = pcVar1;\n        }\n      }\nLAB_0010b2d9:\n      pcVar7 = (char *)0x0;\n    }\n  }\n  else {\n    local_188[0] = 0;\n    local_184 = 0;\n    local_17c = 0;\n    local_178 = param_2;\n    FUN_0010b720(local_188);\n    if ((local_168 == '\\0') || (local_164 != 0)) {\n      uVar13 = 0;\n      local_148[0] = 0;\n      local_144 = 0;\n      local_13c = 0;\n      local_108 = local_108 & 0xffffff00;\n      uStack_104 = 0;\n      uStack_100 = 0;\n      local_1a0 = 0;\n      bVar4 = 1;\n      uVar11 = 0;\n      local_138 = param_2;\n      local_f8 = param_1;\n      do {\n        uStack_fc = uStack_fc & 0xffffff00;\n        FUN_0010b720(&local_108);\n        if ((char)local_e8 == '\\0') {\n          bVar9 = 9 < uVar13 & bVar4;\n          if ((bVar9 != 0) && (bVar4 = bVar9, uVar13 * 5 <= uVar11)) goto LAB_0010b650;\nLAB_0010b5ee:\n          sVar6 = sStack_f0;\n          uVar12 = uVar11 + 1;\n          if ((sStack_f0 == local_170) && (iVar5 = memcmp(local_f8,local_178,sStack_f0), iVar5 == 0)\n             ) {\nLAB_0010b409:\n            local_c8 = CONCAT44(uStack_104,local_108);\n            local_a8 = CONCAT44(iStack_e4,local_e8);\n            local_88[0] = 0;\n            sStack_b0 = sStack_f0;\n            local_b8 = local_f8 + sStack_f0;\n            local_84 = 0;\n            local_7c = 0;\n            uStack_a0 = uStack_e0;\n            local_98 = local_d8;\n            uStack_90 = uStack_d0;\n            local_78 = param_2;\n            FUN_0010b720(local_88);\n            if ((local_68 != '\\0') && (local_64 == 0)) {\n                    /* WARNING: Subroutine does not return */\n              abort();\n            }\n            local_78 = local_78 + local_70;\n            uVar12 = uVar11 + 2;\n            do {\n              local_7c = 0;\n              FUN_0010b720(local_88);\n              if ((local_68 != '\\0') && (pcVar7 = local_f8, local_64 == 0)) goto LAB_0010b268;\n              FUN_0010b720(&local_c8);\n              if ((char)local_a8 == '\\0') {\nLAB_0010b565:\n                sVar6 = sStack_f0;\n                if (sStack_b0 != local_70) break;\n                iVar5 = memcmp(local_b8,local_78,sStack_b0);\n                bVar14 = iVar5 != 0;\n              }\n              else {\n                if (local_a8._4_4_ == 0) goto LAB_0010b2d9;\n                if (local_68 == '\\0') goto LAB_0010b565;\n                bVar14 = local_64 != local_a8._4_4_;\n              }\n              sVar6 = sStack_f0;\n              if (bVar14) break;\n              local_b8 = local_b8 + sStack_b0;\n              local_78 = local_78 + local_70;\n              uStack_c0 = uStack_c0 & 0xffffff00ffffffff;\n              uVar12 = uVar12 + 1;\n            } while( true );\n          }\n        }\n        else {\n          if (iStack_e4 == 0) goto LAB_0010b2d9;\n          bVar9 = 9 < uVar13 & bVar4;\n          if ((bVar9 != 0) && (bVar4 = bVar9, uVar13 * 5 <= uVar11)) {\nLAB_0010b650:\n            lVar8 = uVar11 - local_1a0;\n            while ((lVar8 != 0 && ((FUN_0010b720(local_148), local_128 == 0 || (local_124 != 0)))))\n            {\n              local_138 = local_138 + local_130;\n              lVar8 = lVar8 + -1;\n              local_13c = 0;\n            }\n            FUN_0010b720(local_148);\n            if (local_128 == 0) {\n              bVar4 = 1;\n            }\n            else {\n              bVar4 = local_128;\n              if ((local_124 == 0) &&\n                 (bVar4 = FUN_0010ad20(param_1,param_2,&local_190), pcVar7 = local_190, bVar4 != 0))\n              break;\n            }\n            local_1a0 = uVar11;\n            if ((char)local_e8 == '\\0') goto LAB_0010b5ee;\n          }\n          uVar12 = uVar11 + 1;\n          if (local_168 == '\\0') goto LAB_0010b5ee;\n          sVar6 = sStack_f0;\n          if (iStack_e4 == local_164) goto LAB_0010b409;\n        }\n        local_f8 = local_f8 + sVar6;\n        uVar13 = uVar13 + 1;\n        uVar11 = uVar12;\n      } while( true );\n    }\n  }\nLAB_0010b268:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return pcVar7;\n}\n\n", 
    "00102900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00112f88)();\n  return;\n}\n\n", 
    "001141a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a730": "\nbool FUN_0010a730(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001141b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_search(re_pattern_buffer *__buffer,char *__string,int __length,int __start,int __range,\n             re_registers *__regs)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108f90": "\nvoid FUN_00108f90(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106f20(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00108ab0(puVar1,0x3a,1);\n  FUN_00108890(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103670": "\nvoid FUN_00103670(void)\n\n{\n  if (DAT_001132e0 == 0) {\n    return;\n  }\n  qsort(DAT_001132f0,DAT_001132e0,0x30,FUN_001032e0);\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint toupper(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_toupper_00112dc8)();\n  return iVar1;\n}\n\n", 
    "001093c0": "\nvoid * FUN_001093c0(char *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  FILE *pFVar2;\n  void *__ptr;\n  int *piVar3;\n  int iVar4;\n  \n  pFVar2 = fopen(param_1,\"r\");\n  if (pFVar2 == (FILE *)0x0) {\n    return (void *)0x0;\n  }\n  __ptr = (void *)FUN_00109160(pFVar2,param_2);\n  piVar3 = __errno_location();\n  iVar4 = *piVar3;\n  iVar1 = FUN_0010a470(pFVar2);\n  if (iVar1 == 0) {\n    return __ptr;\n  }\n  if (__ptr != (void *)0x0) {\n    iVar4 = *piVar3;\n    free(__ptr);\n  }\n  *piVar3 = iVar4;\n  return (void *)0x0;\n}\n\n", 
    "001029a5": "\nvoid FUN_001029a5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107110": "\nundefined8\nFUN_00107110(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107080(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001029a0": "\nvoid FUN_001029a0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108b10": "\nvoid FUN_00108b10(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_001139c0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106bf0": "\nchar * FUN_00106bf0(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s1;\n  char *pcVar3;\n  size_t sVar4;\n  size_t sVar5;\n  char *pcVar6;\n  char *__ptr;\n  void *pvVar7;\n  char *pcVar8;\n  undefined8 *puVar9;\n  char *pcVar10;\n  char *pcVar11;\n  \n  __s1 = (char *)dcgettext(0,param_1,5);\n  pcVar3 = (char *)FUN_0010a960();\n  iVar2 = FUN_0010a840(pcVar3,\"UTF-8\");\n  pcVar6 = __s1;\n  if (iVar2 == 0) {\n    iVar2 = strcmp(__s1,param_1);\n    if (param_2 != (char *)0x0) {\n      pcVar3 = param_2;\n      pcVar8 = (char *)0x0;\n      pcVar11 = param_2;\n      goto LAB_00106c52;\n    }\n    if (iVar2 == 0) {\n      return param_1;\n    }\n    cVar1 = FUN_001068d0(__s1,param_1);\n    if (cVar1 != '\\0') {\n      return __s1;\n    }\n    pcVar8 = (char *)0x0;\n    pcVar10 = (char *)0x0;\nLAB_00106cee:\n    sVar4 = strlen(__s1);\n    sVar5 = strlen(param_1);\n    pcVar6 = (char *)FUN_00109d80(sVar4 + 4 + sVar5);\n    __sprintf_chk(pcVar6,1,0xffffffffffffffff,\"%s (%s)\",__s1,param_1);\n    if (pcVar10 != (char *)0x0) {\n      free(pcVar10);\n    }\n    goto LAB_00106c97;\n  }\n  __ptr = (char *)FUN_0010a040(param_2,\"UTF-8\",pcVar3);\n  sVar4 = strlen(pcVar3);\n  pvVar7 = (void *)FUN_00109d80(sVar4 + 0xb);\n  pvVar7 = memcpy(pvVar7,pcVar3,sVar4);\n  puVar9 = (undefined8 *)(sVar4 + (long)pvVar7);\n  *puVar9 = 0x4c534e4152542f2f;\n  *(undefined2 *)(puVar9 + 1) = 0x5449;\n  *(undefined *)((long)puVar9 + 10) = 0;\n  param_2 = (char *)FUN_0010a040(param_2,\"UTF-8\",pvVar7);\n  free(pvVar7);\n  pcVar3 = param_1;\n  pcVar10 = __ptr;\n  pcVar11 = __ptr;\n  if (param_2 == (char *)0x0) {\n    iVar2 = strcmp(__s1,param_1);\n    if (__ptr == (char *)0x0) {\n      param_2 = (char *)0x0;\n      pcVar8 = (char *)0x0;\n      goto LAB_00106c52;\n    }\nLAB_00106e05:\n    if (iVar2 == 0) {\n      return __ptr;\n    }\n    cVar1 = FUN_001068d0(__s1,param_1);\n    if (cVar1 == '\\0') {\n      param_2 = (char *)0x0;\n      pcVar8 = (char *)0x0;\n      goto LAB_00106c6c;\n    }\n    pcVar8 = (char *)0x0;\nLAB_00106c8a:\n    param_2 = pcVar8;\n    __ptr = pcVar10;\n    pcVar8 = param_2;\n    if (__ptr == (char *)0x0) goto LAB_00106c97;\n  }\n  else {\n    pcVar8 = strchr(param_2,0x3f);\n    if (pcVar8 != (char *)0x0) {\n      free(param_2);\n      if (__ptr != (char *)0x0) {\n        iVar2 = strcmp(__s1,param_1);\n        goto LAB_00106e05;\n      }\n      iVar2 = strcmp(__s1,param_1);\n      param_2 = (char *)0x0;\n      pcVar8 = (char *)0x0;\nLAB_00106c52:\n      __ptr = pcVar3;\n      if (iVar2 == 0) {\n        return __ptr;\n      }\n      cVar1 = FUN_001068d0(__s1,param_1);\n      pcVar10 = (char *)0x0;\n      if (cVar1 != '\\0') goto LAB_00106c97;\nLAB_00106c6c:\n      if (((pcVar11 == (char *)0x0) || (cVar1 = FUN_001068d0(__s1,pcVar11), cVar1 == '\\0')) &&\n         ((param_1 = __ptr, param_2 == (char *)0x0 ||\n          (cVar1 = FUN_001068d0(__s1,param_2), cVar1 == '\\0')))) goto LAB_00106cee;\n      goto LAB_00106c8a;\n    }\n    iVar2 = strcmp(__s1,param_1);\n    pcVar3 = param_2;\n    pcVar8 = param_2;\n    if (__ptr == (char *)0x0) goto LAB_00106c52;\n    if (iVar2 == 0) {\n      if (__ptr == param_2) {\n        return __ptr;\n      }\n      free(param_2);\n      return __ptr;\n    }\n    cVar1 = FUN_001068d0(__s1,param_1);\n    if (cVar1 == '\\0') goto LAB_00106c6c;\n  }\n  free(__ptr);\n  pcVar8 = param_2;\nLAB_00106c97:\n  if (pcVar8 != (char *)0x0) {\n    free(pcVar8);\n  }\n  return pcVar6;\n}\n\n", 
    "00114108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * freopen(char *__filename,char *__modes,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001033b0": "\nundefined2 * FUN_001033b0(byte *param_1)\n\n{\n  byte *pbVar1;\n  undefined2 *puVar2;\n  byte bVar3;\n  size_t sVar4;\n  undefined2 *puVar5;\n  ushort **ppuVar6;\n  undefined uVar7;\n  int iVar8;\n  int iVar9;\n  ulong uVar10;\n  ulong extraout_RDX;\n  byte *pbVar11;\n  undefined2 *puVar12;\n  ulong uVar13;\n  int iVar14;\n  ushort *puVar15;\n  \n  sVar4 = strlen((char *)param_1);\n  puVar5 = (undefined2 *)FUN_00109d80(sVar4 + 1);\n  bVar3 = *param_1;\n  puVar2 = puVar5;\n  uVar13 = (ulong)bVar3;\n  while (bVar3 != 0) {\n    bVar3 = param_1[1];\n    uVar10 = (ulong)bVar3;\n    pbVar11 = param_1 + 1;\n    if ((char)uVar13 == '\\\\') {\n      if (bVar3 == 0) break;\n      switch(bVar3) {\n      case 0x30:\n        bVar3 = param_1[2];\n        iVar14 = 0;\n        uVar7 = 0;\n        pbVar11 = param_1 + 2;\n        while( true ) {\n          uVar10 = (ulong)(uint)(int)(char)bVar3;\n          if (7 < (byte)(bVar3 - 0x30)) break;\n          iVar14 = ((int)(char)bVar3 - 0x30U) + iVar14 * 8;\n          uVar7 = (undefined)iVar14;\n          pbVar1 = pbVar11 + 1;\n          if (param_1 + 5 == pbVar1) {\n            uVar10 = (ulong)pbVar11[1];\n            pbVar11 = param_1 + 5;\n            break;\n          }\n          bVar3 = *pbVar1;\n          pbVar11 = pbVar1;\n        }\n        *(undefined *)puVar2 = uVar7;\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        break;\n      default:\n        *(undefined *)puVar2 = 0x5c;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = puVar2 + 1;\n        pbVar11 = param_1 + 2;\n        *(byte *)((long)puVar2 + 1) = bVar3;\n        break;\n      case 0x61:\n        *(undefined *)puVar2 = 7;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 0x62:\n        *(undefined *)puVar2 = 8;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 99:\n        goto switchD_0010341e_caseD_63;\n      case 0x66:\n        *(undefined *)puVar2 = 0xc;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 0x6e:\n        *(undefined *)puVar2 = 10;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 0x72:\n        *(undefined *)puVar2 = 0xd;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 0x74:\n        *(undefined *)puVar2 = 9;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 0x76:\n        *(undefined *)puVar2 = 0xb;\n        uVar10 = (ulong)param_1[2];\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n        pbVar11 = param_1 + 2;\n        break;\n      case 0x78:\n        ppuVar6 = __ctype_b_loc();\n        pbVar11 = param_1 + 2;\n        iVar14 = 0;\n        uVar13 = 0;\n        puVar15 = *ppuVar6;\n        do {\n          iVar8 = (int)(char)*pbVar11;\n          bVar3 = FUN_00103200(iVar8,uVar13,iVar8);\n          if ((*(byte *)((long)puVar15 + (ulong)bVar3 * 2 + 1) & 0x10) == 0) {\n            if (iVar14 == 0) {\n              puVar12 = puVar2 + 1;\n              *puVar2 = 0x785c;\n              uVar10 = extraout_RDX;\n              goto LAB_001033f4;\n            }\n            break;\n          }\n          if ((byte)((char)extraout_RDX + 0x9fU) < 6) {\n            iVar9 = iVar8 + -0x57;\n          }\n          else {\n            iVar9 = iVar8 + -0x30;\n            if ((byte)((char)extraout_RDX + 0xbfU) < 6) {\n              iVar9 = iVar8 + -0x37;\n            }\n          }\n          iVar14 = iVar14 + 1;\n          uVar13 = (ulong)(uint)((int)uVar13 * 0x10 + iVar9);\n          pbVar11 = pbVar11 + 1;\n        } while (iVar14 != 3);\n        *(char *)puVar2 = (char)uVar13;\n        uVar10 = (ulong)*pbVar11;\n        puVar12 = (undefined2 *)((long)puVar2 + 1);\n      }\n    }\n    else {\n      *(char *)puVar2 = (char)uVar13;\n      puVar12 = (undefined2 *)((long)puVar2 + 1);\n    }\nLAB_001033f4:\n    puVar2 = puVar12;\n    uVar13 = uVar10;\n    param_1 = pbVar11;\n    bVar3 = (byte)uVar10;\n  }\nLAB_0010342a:\n  *(undefined *)puVar2 = 0;\n  return puVar5;\nswitchD_0010341e_caseD_63:\n  do {\n    pbVar11 = pbVar11 + 1;\n  } while (*pbVar11 != 0);\n  goto LAB_0010342a;\n}\n\n", 
    "00114230": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001044a0": "\nvoid FUN_001044a0(long param_1)\n\n{\n  if (param_1 < 1) {\n    return;\n  }\n  do {\n    putchar_unlocked(0x20);\n    param_1 = param_1 + -1;\n  } while (param_1 != 0);\n  return;\n}\n\n", 
    "0010a7d0": "\nulong FUN_0010a7d0(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00109ef0": "\nvoid FUN_00109ef0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00109d80();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00109dd0": "\nvoid thunk_FUN_00109d80(void)\n\n{\n  FUN_00109d80();\n  return;\n}\n\n", 
    "00114110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strnlen(char *__string,size_t __maxlen)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106810": "\nvoid FUN_00106810(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_001138a0 = pcVar1 + 1;\n    uVar3 = (long)DAT_001138a0 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_0010e088;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_001138a0;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_001138a0 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010a820": "\nint FUN_0010a820(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00106170": "\nlong FUN_00106170(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "001028b0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00112f60)();\n  return;\n}\n\n", 
    "001029be": "\nvoid FUN_001029be(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001044d0": "\nvoid FUN_001044d0(byte *param_1,byte *param_2)\n\n{\n  byte bVar1;\n  char cVar2;\n  char *pcVar3;\n  int iVar4;\n  \n  if (param_2 <= param_1) {\n    return;\n  }\n  do {\n    while( true ) {\n      bVar1 = *param_1;\n      if ((&DAT_001131e0)[bVar1] != '\\0') break;\n      param_1 = param_1 + 1;\n      putchar_unlocked((int)(char)bVar1);\n      if (param_2 == param_1) {\n        return;\n      }\n    }\n    if (((&DAT_0010de40)[bVar1] == '\\0') || (DAT_00113884 != 3)) {\n      if (bVar1 == 0x5c) {\n        fwrite_unlocked(\"\\\\backslash{}\",1,0xc,stdout);\n      }\n      else if ((char)bVar1 < ']') {\n        if (bVar1 == 0x22) {\n          putchar_unlocked(0x22);\n          putchar_unlocked(0x22);\n        }\n        else {\n          if (3 < (byte)(bVar1 - 0x23)) goto LAB_001045cd;\nLAB_00104599:\n          putchar_unlocked(0x5c);\n          putchar_unlocked((uint)bVar1);\n        }\n      }\n      else if ((bVar1 + 0x85 & 0xfd) == 0) {\n        __printf_chk(1,\"$\\\\%c$\",(uint)bVar1);\n      }\n      else {\n        if (bVar1 == 0x5f) goto LAB_00104599;\nLAB_001045cd:\n        putchar_unlocked(0x20);\n      }\n    }\n    else {\n      cVar2 = (&DAT_0010df40)[bVar1];\n      iVar4 = (int)cVar2;\n      switch((&DAT_0010de40)[bVar1]) {\n      case 1:\n        if (cVar2 == 'a') {\n          fwrite_unlocked(\"\\\\ae{}\",1,5,stdout);\n        }\n        else if (cVar2 < 'b') {\n          if (cVar2 == 'A') {\n            fwrite_unlocked(\"\\\\AE{}\",1,5,stdout);\n          }\n          else {\n            if (cVar2 != 'O') goto LAB_001045cd;\n            fwrite_unlocked(\"\\\\OE{}\",1,5,stdout);\n          }\n        }\n        else {\n          if (cVar2 != 'o') goto LAB_001045cd;\n          fwrite_unlocked(\"\\\\oe{}\",1,5,stdout);\n        }\n        break;\n      case 2:\n      case 3:\n        pcVar3 = \"\";\n        if (iVar4 == 0x69) {\n          pcVar3 = \"\\\\\";\n        }\n        __printf_chk(1,\"\\\\\\'%s%c\",pcVar3,iVar4);\n        break;\n      case 4:\n        pcVar3 = \"\";\n        if (iVar4 == 0x69) {\n          pcVar3 = \"\\\\\";\n        }\n        __printf_chk(1,\"\\\\^%s%c\",pcVar3,iVar4);\n        break;\n      case 5:\n        pcVar3 = \"\";\n        if (iVar4 == 0x69) {\n          pcVar3 = \"\\\\\";\n        }\n        __printf_chk(1,\"\\\\\\\"%s%c\",pcVar3,iVar4);\n        break;\n      case 6:\n        pcVar3 = \"\";\n        if (iVar4 == 0x69) {\n          pcVar3 = \"\\\\\";\n        }\n        __printf_chk(1,\"\\\\~%s%c\",pcVar3,iVar4);\n        break;\n      case 7:\n        __printf_chk(1,\"\\\\c{%c}\",iVar4,iVar4);\n        break;\n      case 8:\n        if (cVar2 == 'A') {\n          fwrite_unlocked(\"\\\\AA{}\",1,5,stdout);\n        }\n        else {\n          if (cVar2 != 'a') goto LAB_001045cd;\n          fwrite_unlocked(\"\\\\aa{}\",1,5,stdout);\n        }\n        break;\n      case 9:\n        if (cVar2 == 'O') {\n          fwrite_unlocked(&DAT_0010db85,1,4,stdout);\n        }\n        else {\n          if (cVar2 != 'o') goto LAB_001045cd;\n          fwrite_unlocked(&DAT_0010db80,1,4,stdout);\n        }\n      }\n    }\n    param_1 = param_1 + 1;\n    if (param_2 == param_1) {\n      return;\n    }\n  } while( true );\n}\n\n", 
    "0010a7a0": "\nbool FUN_0010a7a0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00109fe0": "\nint FUN_00109fe0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  iVar1 = FUN_0010b8f0();\n  if (iVar1 < 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109fa0();\n    }\n  }\n  return iVar1;\n}\n\n", 
    "00102920": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00112f98)();\n  return;\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00112f08)();\n  return pcVar1;\n}\n\n", 
    "00109da0": "\nvoid FUN_00109da0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00109d80();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109fa0();\n}\n\n", 
    "00103210": "\nuint FUN_00103210(long *param_1,long *param_2)\n\n{\n  long lVar1;\n  uint uVar2;\n  long lVar3;\n  uint extraout_EDX;\n  long extraout_RDX;\n  long lVar4;\n  undefined1 *puVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  \n  lVar7 = param_2[1];\n  lVar6 = param_1[1];\n  lVar3 = lVar6;\n  if (lVar7 <= lVar6) {\n    lVar3 = lVar7;\n  }\n  if (DAT_00113880 == '\\0') {\n    if (0 < lVar3) {\n      lVar1 = *param_1;\n      lVar8 = *param_2;\n      lVar4 = 0;\n      do {\n        FUN_00103200((int)*(char *)(lVar1 + lVar4));\n        uVar2 = FUN_00103200((int)*(char *)(lVar8 + lVar4));\n        uVar2 = (extraout_EDX & 0xff) - (uVar2 & 0xff);\n        if (uVar2 != 0) {\n          return uVar2;\n        }\n        lVar4 = lVar4 + 1;\n      } while (lVar3 != lVar4);\n    }\n  }\n  else if (0 < lVar3) {\n    lVar1 = *param_1;\n    lVar8 = *param_2;\n    puVar5 = &DAT_001134c0;\n    lVar4 = 0;\n    do {\n      FUN_00103200((int)*(char *)(lVar1 + lVar4));\n      uVar2 = FUN_00103200((int)*(char *)(lVar8 + lVar4));\n      if ((uint)(byte)puVar5[extraout_RDX] - (uint)(byte)puVar5[(ulong)uVar2 & 0xff] != 0) {\n        return (uint)(byte)puVar5[extraout_RDX] - (uint)(byte)puVar5[(ulong)uVar2 & 0xff];\n      }\n      lVar4 = lVar4 + 1;\n    } while (lVar3 != lVar4);\n  }\n  if (lVar6 < lVar7) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    uVar2 = (uint)(lVar7 < lVar6);\n  }\n  return uVar2;\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00112fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00112fe8)();\n  }\n  return;\n}\n\n", 
    "001029c8": "\nvoid FUN_001029c8(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108f70": "\nvoid FUN_00108f70(undefined8 param_1)\n\n{\n  FUN_00108f50(param_1,0x3a);\n  return;\n}\n\n", 
    "0010a710": "\nbool FUN_0010a710(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001028a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00112f58)();\n  return pvVar1;\n}\n\n", 
    "00109e20": "\nvoid FUN_00109e20(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00109de0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109fa0();\n}\n\n", 
    "00106160": "\nvoid FUN_00106160(void)\n\n{\n  FUN_00105fb0(1);\n  return;\n}\n\n", 
    "001029c3": "\nvoid FUN_001029c3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106280": "\nvoid FUN_00106280(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00109140(1,param_1);\n  uVar3 = FUN_00108dc0(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "00114208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029af": "\nvoid FUN_001029af(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b8a0": "\nvoid FUN_0010b8a0(long param_1,long param_2)\n\n{\n  *(long *)(param_1 + 0x10) = *(long *)(param_1 + 0x10) + param_2;\n  return;\n}\n\n", 
    "00114210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108cc0": "\nvoid FUN_00108cc0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108bd0(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00102910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00112f90)();\n  return sVar1;\n}\n\n", 
    "00106b60": "\nchar * FUN_00106b60(char *param_1)\n\n{\n  char cVar1;\n  char *__s;\n  size_t sVar2;\n  size_t sVar3;\n  char *pcVar4;\n  \n  __s = (char *)dcgettext(0,param_1,5);\n  if (param_1 != __s) {\n    cVar1 = FUN_001068d0(__s,param_1);\n    if (cVar1 == '\\0') {\n      sVar2 = strlen(__s);\n      sVar3 = strlen(param_1);\n      pcVar4 = (char *)FUN_00109d80(sVar2 + 4 + sVar3);\n      __sprintf_chk(pcVar4,1,0xffffffffffffffff,\"%s (%s)\",__s,param_1);\n      return pcVar4;\n    }\n  }\n  return __s;\n}\n\n", 
    "001029aa": "\nvoid switchD_0010776f::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102670": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00112e40)();\n  return;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00112db0)();\n  return;\n}\n\n", 
    "0010a800": "\nint FUN_0010a800(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_00112ed0)();\n  return iVar1;\n}\n\n", 
    "00105bf0": "\nvoid FUN_00105bf0(undefined8 param_1,void **param_2)\n\n{\n  void *__base;\n  char **ppcVar1;\n  char *pcVar2;\n  char *pcVar3;\n  void *pvVar4;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  char *local_48;\n  char *local_40 [2];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00105a10(param_1,&local_48,local_40);\n  __base = (void *)0x0;\n  *param_2 = (void *)0x0;\n  __nmemb = (void *)0x0;\n  param_2[1] = (void *)0x0;\n  param_2[2] = (void *)0x0;\n  pvVar4 = __nmemb;\n  pcVar3 = local_48;\n  pcVar2 = local_40[0];\n  if (local_40[0] <= local_48) {\nLAB_00105c97:\n    qsort(__base,(size_t)__nmemb,0x10,FUN_00103210);\n    if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    return;\n  }\nLAB_00105c58:\n  do {\n    if (*local_48 != '\\n') {\n      local_48 = local_48 + 1;\n      if (local_48 < pcVar2) goto LAB_00105c58;\n    }\n    __nmemb = pvVar4;\n    if (pcVar3 < local_48) {\n      if (param_2[1] == pvVar4) {\n        __base = (void *)FUN_00109e50(__base,param_2 + 1,0x10);\n        pvVar4 = param_2[2];\n        *param_2 = __base;\n        pcVar2 = local_40[0];\n      }\n      __nmemb = (void *)((long)pvVar4 + 1);\n      ppcVar1 = (char **)((long)pvVar4 * 0x10 + (long)__base);\n      *ppcVar1 = pcVar3;\n      ppcVar1[1] = local_48 + -(long)pcVar3;\n      param_2[2] = __nmemb;\n    }\n    if ((pcVar2 <= local_48) ||\n       (local_48 = local_48 + 1, pvVar4 = __nmemb, pcVar3 = local_48, pcVar2 <= local_48))\n    goto LAB_00105c97;\n  } while( true );\n}\n\n", 
    "00108890": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00108890(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_001130a0;\n  if (DAT_00113098 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109fa0();\n    }\n    if (PTR_DAT_001130a0 == &DAT_001130b0) {\n      puVar8 = (undefined4 *)FUN_00109de0(0);\n      uVar6 = PTR_DAT_001130b8._4_4_;\n      uVar5 = PTR_DAT_001130b8._0_4_;\n      uVar3 = _UNK_001130b4;\n      PTR_DAT_001130a0 = (undefined *)puVar8;\n      *puVar8 = _DAT_001130b0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00109de0(PTR_DAT_001130a0);\n      PTR_DAT_001130a0 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00113098 * 4,0,(long)((param_1 + 1) - DAT_00113098) << 4);\n    DAT_00113098 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_001076d0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_001138c0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00109d80(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_001076d0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00108e20": "\nvoid FUN_00108e20(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106f20(auStack_68);\n  FUN_00108890(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f10": "\nvoid FUN_00109f10(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109fa0();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_compile_fastmap(re_pattern_buffer *__buffer)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_re_compile_fastmap_00112e00)();\n  return iVar1;\n}\n\n", 
    "0010a8a0": "\nulong FUN_0010a8a0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010a470(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001051e0": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001051e0(int param_1)\n\n{\n  char cVar1;\n  ushort uVar2;\n  char *pcVar3;\n  bool bVar4;\n  long lVar5;\n  byte bVar6;\n  char cVar7;\n  char **ppcVar8;\n  ushort **ppuVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  char cVar12;\n  ushort *puVar13;\n  int iVar14;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  char *extraout_RDX_01;\n  long lVar15;\n  long extraout_RDX_02;\n  long extraout_RDX_03;\n  char *extraout_RDX_04;\n  char *pcVar16;\n  char *extraout_RDX_05;\n  long extraout_RDX_06;\n  long extraout_RDX_07;\n  char *pcVar17;\n  undefined4 *puVar18;\n  char *pcVar19;\n  char *pcVar20;\n  char *pcVar21;\n  long in_FS_OFFSET;\n  long local_a8;\n  char *local_a0;\n  char *local_98;\n  long local_90;\n  long local_80;\n  char local_76;\n  char *local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  long local_40;\n  \n  ppcVar8 = (char **)((long)param_1 * 0x10 + _DAT_001132f8);\n  local_a0 = *ppcVar8;\n  local_68 = ppcVar8[1];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  pcVar16 = local_a0;\n  pcVar21 = local_a0;\n  if (DAT_00113889 == '\\0') {\n    if (local_a0 < local_68) {\n      local_80 = 0;\njoined_r0x00105255:\n      if ((DAT_00113720 == 0) ||\n         (iVar14 = (int)local_68 - (int)pcVar21,\n         iVar14 = re_search((re_pattern_buffer *)&DAT_00113728,pcVar21,iVar14,0,iVar14,\n                            (re_registers *)&DAT_001134a0), iVar14 == -1)) {\nLAB_001052a5:\n        lVar15 = DAT_001135c0;\n        local_98 = pcVar21;\n        pcVar19 = local_68;\n        if (pcVar21 < local_68) {\n          __ctype_b_loc();\n          do {\n            bVar6 = FUN_00103200((int)pcVar19[-1]);\n            lVar15 = DAT_001135c0;\n            if ((*(byte *)(extraout_RDX + 1 + (ulong)bVar6 * 2) & 0x20) == 0) break;\n            pcVar19 = pcVar19 + -1;\n          } while (pcVar19 != pcVar21);\n        }\njoined_r0x001052f3:\n        do {\n          if (lVar15 != 0) {\n            iVar14 = (int)pcVar19 - (int)pcVar21;\n            iVar14 = re_search((re_pattern_buffer *)&DAT_001135c8,pcVar21,iVar14,0,iVar14,\n                               (re_registers *)&DAT_00113480);\n            if (iVar14 == -2) goto LAB_00105893;\n            if (iVar14 == -1) goto LAB_001057b0;\n            pcVar17 = pcVar21 + *DAT_00113488;\n            pcVar21 = pcVar21 + *DAT_00113490;\n            lVar15 = DAT_001135c0;\n            if (pcVar17 == pcVar21) goto LAB_0010552a;\nLAB_0010534f:\n            cVar7 = DAT_00113889;\n            uStack_50 = (long)pcVar21 - (long)pcVar17;\n            if (DAT_00113360 < uStack_50) {\n              DAT_00113360 = uStack_50;\n            }\n            local_76 = DAT_00113889;\n            local_58 = pcVar17;\n            if (DAT_00113889 != '\\0') {\n              if (pcVar16 < pcVar17) {\n                cVar12 = '\\0';\n                local_a8 = DAT_00113310;\n                do {\n                  cVar1 = *pcVar16;\n                  pcVar20 = pcVar16 + 1;\n                  pcVar16 = pcVar20;\n                  if (cVar1 == '\\n') {\n                    local_a8 = local_a8 + 1;\n                    pcVar3 = ppcVar8[1];\n                    local_a0 = pcVar20;\n                    cVar12 = cVar7;\n                    if (pcVar20 < pcVar3) {\n                      ppuVar9 = __ctype_b_loc();\n                      puVar13 = *ppuVar9;\n                      do {\n                        bVar6 = FUN_00103200((int)*pcVar16);\n                        pcVar16 = extraout_RDX_04;\n                        if ((*(byte *)((long)puVar13 + (ulong)bVar6 * 2 + 1) & 0x20) != 0) break;\n                        pcVar16 = extraout_RDX_04 + 1;\n                      } while (pcVar16 != pcVar3);\n                      local_80 = (long)pcVar16 - (long)pcVar20;\n                    }\n                    else {\n                      local_80 = 0;\n                    }\n                  }\n                } while (pcVar16 < pcVar17);\n                if (cVar12 != '\\0') {\n                  DAT_00113310 = local_a8;\n                }\n              }\n              lVar15 = DAT_001135c0;\n              if (pcVar17 < pcVar16) goto joined_r0x001052f3;\n            }\n            if (((DAT_00113868 == 0) ||\n                (cVar7 = FUN_00105160(&local_58,DAT_00113340,DAT_00113350), lVar15 = DAT_001135c0,\n                cVar7 == '\\0')) &&\n               ((DAT_00113870 == 0 ||\n                (cVar7 = FUN_00105160(&local_58,DAT_00113320,DAT_00113330), lVar15 = DAT_001135c0,\n                cVar7 != '\\0')))) {\n              if (DAT_001132e0 == _DAT_001132e8) {\n                DAT_001132f0 = FUN_00109e50(DAT_001132f0,&DAT_001132e8,0x30);\n                local_76 = DAT_00113889;\n              }\n              cVar7 = DAT_0011388a;\n              lVar5 = DAT_00113310;\n              lVar15 = DAT_001132e0;\n              puVar18 = (undefined4 *)(DAT_001132f0 + DAT_001132e0 * 0x30);\n              if (DAT_0011388a == '\\0') {\n                if (local_76 != '\\0') {\n                  *(long *)(puVar18 + 8) = (long)local_a0 - (long)pcVar17;\n                  if (DAT_00113358 < local_80) {\n                    DAT_00113358 = local_80;\n                  }\n                  goto LAB_0010543f;\n                }\n              }\n              else {\n                if (pcVar16 < pcVar17) {\n                  local_90 = DAT_00113310;\n                  cVar12 = '\\0';\nLAB_001056bd:\n                  do {\n                    pcVar20 = pcVar16 + 1;\n                    if (*pcVar16 == '\\n') {\n                      local_90 = local_90 + 1;\n                      pcVar3 = ppcVar8[1];\n                      local_a0 = pcVar20;\n                      cVar12 = cVar7;\n                      if (pcVar20 < pcVar3) {\n                        ppuVar9 = __ctype_b_loc();\n                        puVar13 = *ppuVar9;\n                        pcVar16 = pcVar20;\n                        do {\n                          bVar6 = FUN_00103200((int)*pcVar16);\n                          pcVar16 = extraout_RDX_05;\n                          if ((*(byte *)((long)puVar13 + (ulong)bVar6 * 2 + 1) & 0x20) != 0) break;\n                          pcVar16 = extraout_RDX_05 + 1;\n                        } while (pcVar16 != pcVar3);\n                        if (pcVar17 <= pcVar16) break;\n                        goto LAB_001056bd;\n                      }\n                    }\n                    pcVar16 = pcVar20;\n                  } while (pcVar20 < pcVar17);\n                  if (cVar12 == '\\0') goto LAB_001057a0;\n                  DAT_00113310 = local_90;\n                }\n                else {\nLAB_001057a0:\n                  local_90 = lVar5;\n                }\n                *(long *)(puVar18 + 8) = local_90;\nLAB_0010543f:\n                if (((local_a0 == local_98) && (local_76 != '\\0')) && (local_98 < pcVar19)) {\n                  __ctype_b_loc();\n                  do {\n                    bVar6 = FUN_00103200((int)*local_98);\n                    if ((*(byte *)(extraout_RDX_06 + 1 + (ulong)bVar6 * 2) & 0x20) != 0) {\n                      if (local_98 < pcVar19) goto LAB_00105830;\n                      break;\n                    }\n                    local_98 = local_98 + 1;\n                  } while (local_98 != pcVar19);\n                }\n              }\n              goto LAB_00105456;\n            }\n            goto joined_r0x001052f3;\n          }\n          pcVar17 = pcVar21;\n          if (pcVar19 <= pcVar21) {\n            if (pcVar21 != pcVar19) goto LAB_0010552a;\n            goto LAB_001057b0;\n          }\n          while (bVar6 = FUN_00103200((int)*pcVar17), (&DAT_00113380)[bVar6] == '\\0') {\n            pcVar17 = pcVar17 + 1;\n            if (pcVar17 == pcVar19) goto LAB_001057b0;\n          }\n          if (pcVar19 == pcVar17) goto LAB_001057b0;\n          pcVar20 = pcVar17;\n          lVar15 = extraout_RDX_00;\n          if (pcVar17 < pcVar19) {\n            do {\n              bVar6 = FUN_00103200((int)*pcVar20);\n              if ((&DAT_00113380)[bVar6] == '\\0') {\n                lVar15 = DAT_001135c0;\n                pcVar21 = extraout_RDX_01;\n                if (pcVar17 == extraout_RDX_01) goto LAB_0010552a;\n                break;\n              }\n              pcVar20 = extraout_RDX_01 + 1;\n              pcVar21 = pcVar19;\n            } while (extraout_RDX_01 + 1 != pcVar19);\n            goto LAB_0010534f;\n          }\nLAB_0010552a:\n          pcVar21 = pcVar17 + 1;\n        } while( true );\n      }\n      if (iVar14 != 0) {\n        if (iVar14 != -2) {\n          local_68 = pcVar21 + *DAT_001134b0;\n          goto LAB_001052a5;\n        }\nLAB_00105893:\n        FUN_00103380();\n      }\n      uVar10 = FUN_00109150(DAT_00113720);\n      uVar11 = dcgettext(0,\"error: regular expression has a match of length zero: %s\",5);\n      error(1,0,uVar11,uVar10);\n      goto LAB_001058d1;\n    }\n  }\n  else if (local_a0 < local_68) {\n    __ctype_b_loc();\n    do {\n      bVar6 = FUN_00103200((int)*pcVar16);\n      uVar2 = *(ushort *)(extraout_RDX_02 + (ulong)bVar6 * 2);\n      if ((uVar2 & 0x2000) != 0) {\n        local_80 = (long)pcVar16 - (long)local_a0;\n        if (pcVar16 < local_68) {\n          while (((uVar2 & 0x2000) != 0 && (pcVar16 = pcVar16 + 1, pcVar16 != local_68))) {\n            bVar6 = FUN_00103200((int)*pcVar16);\n            uVar2 = *(ushort *)(extraout_RDX_03 + (ulong)bVar6 * 2);\n          }\n        }\n        goto joined_r0x00105255;\n      }\n      pcVar16 = pcVar16 + 1;\n    } while (pcVar16 != local_68);\n    local_80 = (long)pcVar16 - (long)local_a0;\n    goto joined_r0x00105255;\n  }\nLAB_00105538:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\nLAB_001058d1:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\nLAB_001057b0:\n  bVar4 = ppcVar8[1] <= local_68;\n  pcVar21 = local_68;\n  local_68 = ppcVar8[1];\n  if (bVar4) goto LAB_00105538;\n  goto joined_r0x00105255;\n  while (bVar6 = FUN_00103200((int)*local_98),\n        (*(byte *)(extraout_RDX_07 + 1 + (ulong)bVar6 * 2) & 0x20) != 0) {\nLAB_00105830:\n    local_98 = local_98 + 1;\n    if (local_98 == pcVar19) break;\n  }\nLAB_00105456:\n  *puVar18 = (undefined4)local_58;\n  puVar18[1] = local_58._4_4_;\n  puVar18[2] = (undefined4)uStack_50;\n  puVar18[3] = uStack_50._4_4_;\n  *(long *)(puVar18 + 4) = (long)local_98 - (long)pcVar17;\n  *(long *)(puVar18 + 6) = (long)pcVar19 - (long)pcVar17;\n  puVar18[10] = param_1;\n  DAT_001132e0 = lVar15 + 1;\n  lVar15 = DAT_001135c0;\n  goto joined_r0x001052f3;\n}\n\n", 
    "00106f90": "\nundefined8 FUN_00106f90(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106f70(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00108db0": "\nvoid FUN_00108db0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108d90(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010bde0": "\nchar * FUN_0010bde0(char *param_1,char *param_2,char *param_3)\n\n{\n  int iVar1;\n  char *pcVar2;\n  iconv_t __cd;\n  int *piVar3;\n  \n  if ((*param_1 == '\\0') || (iVar1 = FUN_0010a840(param_2,param_3), iVar1 == 0)) {\n    pcVar2 = strdup(param_1);\n    if (pcVar2 == (char *)0x0) {\n      piVar3 = __errno_location();\n      *piVar3 = 0xc;\n    }\n    return pcVar2;\n  }\n  __cd = iconv_open(param_3,param_2);\n  if (__cd == (iconv_t)0xffffffffffffffff) {\n    return (char *)0x0;\n  }\n  pcVar2 = (char *)FUN_0010bb90(param_1,__cd);\n  if (pcVar2 != (char *)0x0) {\n    iVar1 = iconv_close(__cd);\n    if (-1 < iVar1) {\n      return pcVar2;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    free(pcVar2);\n    *piVar3 = iVar1;\n    return (char *)0x0;\n  }\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  iconv_close(__cd);\n  *piVar3 = iVar1;\n  return (char *)0x0;\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00112ec8)();\n  return pvVar1;\n}\n\n", 
    "00102660": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00112e38)();\n  return;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00112da8)();\n  return iVar1;\n}\n\n", 
    "00108f50": "\nvoid FUN_00108f50(undefined8 param_1,char param_2)\n\n{\n  FUN_00108ec0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "0010a0c0": "\nuint FUN_0010a0c0(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = FUN_0010a070(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "001025e0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00112df8)();\n  return;\n}\n\n", 
    "00105a10": "\nvoid FUN_00105a10(char *param_1,long *param_2,long *param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  char *pcVar3;\n  long in_FS_OFFSET;\n  long local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 != (char *)0x0) && (*param_1 != '\\0')) {\n    pcVar3 = param_1;\n    if (*param_1 == '-') goto LAB_00105ac0;\n    goto LAB_00105a7d;\n  }\n  while( true ) {\n    lVar1 = FUN_00109160(stdin,&local_28);\n    *param_2 = lVar1;\n    if (lVar1 != 0) break;\n    pcVar3 = \"-\";\n    while( true ) {\n      pcVar3 = (char *)FUN_00108f90(0,3,pcVar3);\n      piVar2 = __errno_location();\n      param_1 = (char *)0x1;\n      error(1,*piVar2,&DAT_0010de0c,pcVar3);\nLAB_00105ac0:\n      if (param_1[1] == '\\0') break;\nLAB_00105a7d:\n      lVar1 = FUN_001093c0(pcVar3,&local_28);\n      *param_2 = lVar1;\n      if (lVar1 != 0) goto LAB_00105a53;\n    }\n  }\nLAB_00105a53:\n  *param_3 = lVar1 + local_28;\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001050b0": "\nvoid FUN_001050b0(void)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  DAT_001131a0 = 0;\n  DAT_00113190 = 0;\n  DAT_001131a8 = 0;\n  DAT_00113140 = 0;\n  DAT_00113148 = 0;\n  DAT_00113130 = 0;\n  if (0 < DAT_001132e0) {\n    lVar2 = 0;\n    lVar1 = DAT_001132f0;\n    do {\n      FUN_00103980(lVar1);\n      if (DAT_00113884 == 2) {\n        FUN_00104cc0();\n      }\n      else if (DAT_00113884 < 3) {\n        FUN_001048b0();\n      }\n      else if (DAT_00113884 == 3) {\n        FUN_00104ec0();\n      }\n      lVar1 = lVar1 + 0x30;\n      lVar2 = lVar2 + 1;\n    } while (lVar2 < DAT_001132e0);\n  }\n  return;\n}\n\n", 
    "00108dc0": "\nvoid FUN_00108dc0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106f20(auStack_58);\n  FUN_00108890(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010a010": "\nlong FUN_0010a010(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_0010bb90();\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109fa0();\n    }\n  }\n  return lVar1;\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dup2_00112e50)();\n  return iVar1;\n}\n\n", 
    "00102570": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00112dc0)();\n  return;\n}\n\n", 
    "00106490": "\nlong FUN_00106490(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00105160": "\nundefined8 FUN_00105160(undefined8 param_1,long param_2,long param_3)\n\n{\n  int iVar1;\n  long lVar2;\n  long lVar3;\n  \n  param_3 = param_3 + -1;\n  if (param_3 < 0) {\n    return 0;\n  }\n  lVar3 = 0;\n  do {\n    while( true ) {\n      lVar2 = lVar3 + param_3 >> 1;\n      iVar1 = FUN_00103210(param_1,lVar2 * 0x10 + param_2);\n      if (-1 < iVar1) break;\n      param_3 = lVar2 + -1;\n      if (param_3 < lVar3) {\n        return 0;\n      }\n    }\n    if (iVar1 == 0) {\n      return 1;\n    }\n    lVar3 = lVar2 + 1;\n  } while (lVar3 <= param_3);\n  return 0;\n}\n\n", 
    "0010ab10": "\nvoid FUN_0010ab10(long *param_1,long param_2)\n\n{\n  param_1[3] = param_1[3] + param_2;\n  *param_1 = *param_1 + param_2;\n  return;\n}\n\n", 
    "001058e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_001058e0(void)\n\n{\n  undefined2 *puVar1;\n  int iVar2;\n  undefined8 uVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  long lVar6;\n  undefined8 *puVar7;\n  byte bVar8;\n  undefined8 uStack_18;\n  \n  bVar8 = 0;\n  if (DAT_00113880 != '\\0') {\n    lVar6 = 0;\n    do {\n      iVar2 = toupper((int)lVar6);\n      (&DAT_001134c0)[lVar6] = (char)iVar2;\n      lVar6 = lVar6 + 1;\n    } while (lVar6 != 0x100);\n  }\n  if (DAT_00113720 == (char *)0x0) {\n    if ((DAT_00113020 == '\\0') || (DAT_00113889 != '\\0')) {\n      DAT_00113720 = \"\\n\";\n    }\n    else {\n      DAT_00113720 = \"[.?!][]\\\"\\')}]*\\\\($\\\\|\\t\\\\|  \\\\)[ \\t\\n]*\";\n    }\n  }\n  else if (*DAT_00113720 == '\\0') {\n    DAT_00113720 = (char *)0x0;\n    goto LAB_00105935;\n  }\n  FUN_001035d0(&DAT_00113720);\nLAB_00105935:\n  if (DAT_001135c0 == 0) {\n    if (DAT_00113878 == 0) {\n      if (DAT_00113020 == '\\0') {\n        puVar7 = (undefined8 *)&DAT_00113380;\n        for (lVar6 = 0x20; lVar6 != 0; lVar6 = lVar6 + -1) {\n          *puVar7 = 0x101010101010101;\n          puVar7 = puVar7 + (ulong)bVar8 * -2 + 1;\n        }\n        DAT_001133a0 = 0;\n        _DAT_00113389 = 0;\n      }\n      else {\n        ppuVar4 = __ctype_b_loc();\n        lVar6 = 0;\n        pbVar5 = &DAT_00113380;\n        do {\n          puVar1 = (undefined2 *)((long)*ppuVar4 + lVar6);\n          lVar6 = lVar6 + 2;\n          *pbVar5 = (byte)((ushort)*puVar1 >> 10) & 1;\n          pbVar5 = pbVar5 + 1;\n        } while (lVar6 != 0x200);\n      }\n    }\n    return uStack_18;\n  }\n  uVar3 = FUN_001035d0(&DAT_001135c0);\n  return uVar3;\n}\n\n", 
    "0010a9a0": "\nvoid FUN_0010a9a0(long *param_1)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  long lVar4;\n  \n  if (*(char *)((long)param_1 + 0x14) != '\\0') {\n    return;\n  }\n  pcVar1 = (char *)param_1[3];\n  if (*(char *)(param_1 + 1) == '\\0') {\n    cVar2 = FUN_0010c000((int)*pcVar1);\n    if (cVar2 != '\\0') {\n      param_1[4] = 1;\n      cVar2 = *pcVar1;\n      *(undefined *)(param_1 + 5) = 1;\n      *(int *)((long)param_1 + 0x2c) = (int)cVar2;\n      goto LAB_0010a9e3;\n    }\n    iVar3 = mbsinit((mbstate_t *)((long)param_1 + 0xc));\n    if (iVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"mbsinit (&iter->state)\",\"lib/mbiter.h\",0x8e,\"mbiter_multi_next\");\n    }\n    *(undefined *)(param_1 + 1) = 1;\n  }\n  lVar4 = FUN_0010a5e0((long)param_1 + 0x2c,pcVar1,*param_1 - (long)pcVar1,\n                       (mbstate_t *)((long)param_1 + 0xc));\n  param_1[4] = lVar4;\n  if (lVar4 == -1) {\n    param_1[4] = 1;\n    *(undefined *)(param_1 + 5) = 0;\n    *(undefined *)((long)param_1 + 0x14) = 1;\n    return;\n  }\n  if (lVar4 == -2) {\n    *(undefined *)(param_1 + 5) = 0;\n    param_1[4] = *param_1 - param_1[3];\n  }\n  else {\n    if (lVar4 == 0) {\n      param_1[4] = 1;\n      if (*(char *)param_1[3] != '\\0') {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"lib/mbiter.h\",0xa9,\"mbiter_multi_next\");\n      }\n      if (*(int *)((long)param_1 + 0x2c) != 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"iter->cur.wc == 0\",\"lib/mbiter.h\",0xaa,\"mbiter_multi_next\");\n      }\n    }\n    *(undefined *)(param_1 + 5) = 1;\n    iVar3 = mbsinit((mbstate_t *)((long)param_1 + 0xc));\n    if (iVar3 != 0) {\n      *(undefined *)(param_1 + 1) = 0;\n    }\n  }\nLAB_0010a9e3:\n  *(undefined *)((long)param_1 + 0x14) = 1;\n  return;\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00112d80)();\n  return;\n}\n\n", 
    "00114088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_compile_fastmap(re_pattern_buffer *__buffer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109fa0": "\nvoid FUN_00109fa0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00113048,0,&DAT_0010de0c,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108a90": "\nvoid FUN_00108a90(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_001139c0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00114080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t ftello(FILE *__stream)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_ftello_00112db8)();\n  return _Var1;\n}\n\n", 
    "0010a910": "\nbool FUN_0010a910(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00112e48)();\n  return sVar1;\n}\n\n", 
    "00107330": "\nundefined8\nFUN_00107330(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107270(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00105ae0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105ae0(undefined8 param_1)\n\n{\n  byte bVar1;\n  long extraout_RDX;\n  undefined1 *puVar2;\n  char *__ptr;\n  long in_FS_OFFSET;\n  char *local_28;\n  char *local_20 [2];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00105a10(param_1,&local_28,local_20);\n  _DAT_00113380 = _DAT_0010dda0;\n  uRam0000000000113388 = _UNK_0010dda8;\n  _DAT_00113390 = _DAT_0010dda0;\n  uRam0000000000113398 = _UNK_0010dda8;\n  _DAT_001133a0 = _DAT_0010dda0;\n  uRam00000000001133a8 = _UNK_0010dda8;\n  _DAT_001133b0 = _DAT_0010dda0;\n  uRam00000000001133b8 = _UNK_0010dda8;\n  _DAT_001133c0 = _DAT_0010dda0;\n  uRam00000000001133c8 = _UNK_0010dda8;\n  _DAT_001133d0 = _DAT_0010dda0;\n  uRam00000000001133d8 = _UNK_0010dda8;\n  _DAT_001133e0 = _DAT_0010dda0;\n  uRam00000000001133e8 = _UNK_0010dda8;\n  _DAT_001133f0 = _DAT_0010dda0;\n  uRam00000000001133f8 = _UNK_0010dda8;\n  _DAT_00113400 = _DAT_0010dda0;\n  uRam0000000000113408 = _UNK_0010dda8;\n  _DAT_00113410 = _DAT_0010dda0;\n  uRam0000000000113418 = _UNK_0010dda8;\n  _DAT_00113420 = _DAT_0010dda0;\n  uRam0000000000113428 = _UNK_0010dda8;\n  _DAT_00113430 = _DAT_0010dda0;\n  uRam0000000000113438 = _UNK_0010dda8;\n  _DAT_00113440 = _DAT_0010dda0;\n  uRam0000000000113448 = _UNK_0010dda8;\n  _DAT_00113450 = _DAT_0010dda0;\n  uRam0000000000113458 = _UNK_0010dda8;\n  _DAT_00113460 = _DAT_0010dda0;\n  uRam0000000000113468 = _UNK_0010dda8;\n  _DAT_00113470 = _DAT_0010dda0;\n  uRam0000000000113478 = _UNK_0010dda8;\n  __ptr = local_28;\n  if (local_28 < local_20[0]) {\n    puVar2 = &DAT_00113380;\n    do {\n      bVar1 = FUN_00103200((int)*local_28);\n      local_28 = (char *)(extraout_RDX + 1);\n      puVar2[bVar1] = 0;\n    } while (local_28 != local_20[0]);\n  }\n  if (DAT_00113020 == '\\0') {\n    _DAT_001133a0 = _DAT_001133a0 & 0xffffffffffffff00;\n    uRam0000000000113388 = uRam0000000000113388 & 0xffffffffff0000ff;\n  }\n  free(__ptr);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010ab20": "\nvoid FUN_0010ab20(undefined8 *param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  \n  *param_1 = *param_2;\n  cVar1 = *(char *)(param_2 + 1);\n  *(char *)(param_1 + 1) = cVar1;\n  if (cVar1 == '\\0') {\n    *(undefined8 *)((long)param_1 + 0xc) = 0;\n  }\n  else {\n    *(undefined8 *)((long)param_1 + 0xc) = *(undefined8 *)((long)param_2 + 0xc);\n  }\n  *(undefined *)((long)param_1 + 0x14) = *(undefined *)((long)param_2 + 0x14);\n  FUN_0010bfa0(param_1 + 3,param_2 + 3);\n  return;\n}\n\n", 
    "0010bf70": "\nuint FUN_0010bf70(wchar_t param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = wcwidth(param_1);\n  if (-1 < (int)uVar1) {\n    return uVar1;\n  }\n  iVar2 = iswcntrl(param_1);\n  return (uint)(iVar2 == 0);\n}\n\n", 
    "001024e0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00112ff8)();\n  return;\n}\n\n", 
    "001035d0": "\nvoid FUN_001035d0(char **param_1)\n\n{\n  char *__s;\n  char *pcVar1;\n  size_t __length;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  bool bVar4;\n  \n  bVar4 = DAT_00113880 == '\\0';\n  __s = *param_1;\n  param_1[5] = (char *)(param_1 + 9);\n  pcVar1 = &DAT_001134c0;\n  if (bVar4) {\n    pcVar1 = (char *)0x0;\n  }\n  param_1[1] = (char *)0x0;\n  param_1[2] = (char *)0x0;\n  param_1[6] = pcVar1;\n  __length = strlen(__s);\n  pcVar1 = re_compile_pattern(__s,__length,(re_pattern_buffer *)(param_1 + 1));\n  if (pcVar1 == (char *)0x0) {\n    re_compile_fastmap((re_pattern_buffer *)(param_1 + 1));\n    return;\n  }\n  uVar2 = FUN_00109150(__s);\n  uVar3 = dcgettext(0,\"%s (for regexp %s)\",5);\n  error(1,0,uVar3,pcVar1,uVar2);\n  if (DAT_001132e0 == 0) {\n    return;\n  }\n  qsort(DAT_001132f0,DAT_001132e0,0x30,FUN_001032e0);\n  return;\n}\n\n", 
    "00114098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001074f0": "\nundefined8\nFUN_001074f0(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00107400(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00108ec0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108ec0(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_001139c0;\n  uStack_40 = uRam00000000001139c8;\n  local_38 = _DAT_001139d0;\n  uStack_30 = uRam00000000001139d8;\n  local_28 = _DAT_001139e0;\n  uStack_20 = uRam00000000001139e8;\n  local_18 = DAT_001139f0;\n  FUN_00108ab0(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00108890(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109740": "\nundefined8\nFUN_00109740(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010e7fe,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00109a09;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00109a09:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00109aab;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00109aab:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010985d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010985d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010a470": "\nint FUN_0010a470(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010a4df;\n    }\n    iVar1 = FUN_0010a520(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010a4df:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00108da0": "\nvoid FUN_00108da0(undefined8 param_1)\n\n{\n  FUN_00108d70(0,param_1);\n  return;\n}\n\n", 
    "00109b90": "\nvoid FUN_00109b90(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00109740();\n  return;\n}\n\n", 
    "00102990": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00112fd0)();\n  return;\n}\n\n", 
    "00102870": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00112f40)();\n  return;\n}\n\n", 
    "001090d0": "\nvoid FUN_001090d0(void)\n\n{\n  FUN_00109030();\n  return;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00112eb0)();\n  return iVar1;\n}\n\n", 
    "00107400": "\nundefined8\nFUN_00107400(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107330(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106310": "\nvoid FUN_00106310(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = FUN_00109150(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = FUN_00109150(lVar1);\n      __fprintf_chk(stderr,1,&DAT_0010de0a,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_00112de0)();\n  return;\n}\n\n", 
    "001036a0": "\nvoid FUN_001036a0(void)\n\n{\n  char cVar1;\n  ushort *puVar2;\n  byte bVar3;\n  ushort **ppuVar4;\n  size_t sVar5;\n  undefined1 *puVar6;\n  ulong uVar7;\n  long extraout_RDX;\n  long lVar8;\n  int iVar9;\n  char *pcVar10;\n  ulong uVar11;\n  long in_FS_OFFSET;\n  undefined auStack_48 [24];\n  long local_30;\n  \n  bVar3 = 0;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_0011388a == '\\0') {\nLAB_001036c9:\n    if (DAT_00113889 == '\\0') goto LAB_001036d6;\n  }\n  else {\n    DAT_00113358 = 0;\n    if (DAT_00113318 != 0) {\n      lVar8 = *DAT_00113300 + 1;\n      uVar7 = 0;\n      while( true ) {\n        uVar11 = uVar7;\n        iVar9 = __sprintf_chk(auStack_48,1,0x15,&DAT_0010db35,lVar8);\n        pcVar10 = *(char **)(DAT_00113308 + uVar11 * 8);\n        lVar8 = (long)iVar9;\n        if (pcVar10 != (char *)0x0) {\n          sVar5 = strlen(pcVar10);\n          lVar8 = (long)iVar9 + sVar5;\n        }\n        if (DAT_00113358 < lVar8) {\n          DAT_00113358 = lVar8;\n        }\n        uVar7 = uVar11 + 1;\n        if ((ulong)(long)DAT_00113318 <= uVar7) break;\n        lVar8 = DAT_00113300[uVar11 + 1] + 1;\n        if (uVar7 != 0) {\n          lVar8 = lVar8 - DAT_00113300[uVar11];\n        }\n      }\n    }\n    lVar8 = DAT_00113358 + 2;\n    DAT_00113358 = DAT_00113358 + 1;\n    DAT_00113120 = FUN_00109d80(lVar8);\n    if (DAT_0011388a == '\\0') goto LAB_001036c9;\n  }\n  if (DAT_00113888 == '\\0') {\n    DAT_00113018 = DAT_00113018 - (DAT_00113010 + DAT_00113358);\n  }\nLAB_001036d6:\n  if (DAT_00113018 < 0) {\n    DAT_00113018 = 0;\n  }\n  DAT_001131c8 = DAT_00113018 / 2;\n  DAT_001131c0 = DAT_001131c8 - DAT_00113010;\n  if ((PTR_DAT_00113030 == (undefined *)0x0) || (*PTR_DAT_00113030 == '\\0')) {\n    PTR_DAT_00113030 = (undefined *)0x0;\n  }\n  else {\n    uVar7 = 0xffffffffffffffff;\n    pcVar10 = PTR_DAT_00113030;\n    do {\n      if (uVar7 == 0) break;\n      uVar7 = uVar7 - 1;\n      cVar1 = *pcVar10;\n      pcVar10 = pcVar10 + (ulong)bVar3 * -2 + 1;\n    } while (cVar1 != '\\0');\n    DAT_001131b0 = ~uVar7 - 1;\n  }\n  if (DAT_00113020 == '\\0') {\n    lVar8 = -(DAT_001131b0 * 2 + 1);\n  }\n  else {\n    lVar8 = DAT_001131c0 + DAT_001131b0 * -2;\n    DAT_001131c0 = 0;\n    if (-1 < lVar8) {\n      DAT_001131c0 = lVar8;\n    }\n    lVar8 = DAT_001131b0 * -2;\n  }\n  DAT_001131b8 = DAT_001131c8 + lVar8;\n  ppuVar4 = __ctype_b_loc();\n  lVar8 = 0;\n  puVar6 = &DAT_001131e0;\n  puVar2 = *ppuVar4;\n  do {\n    (&DAT_001131e0)[lVar8] = (byte)(puVar2[lVar8] >> 0xd) & 1;\n    lVar8 = lVar8 + 1;\n  } while (lVar8 != 0x100);\n  DAT_001131ec = 1;\n  if (DAT_00113884 == 2) {\n    DAT_00113202 = 1;\n  }\n  else if (DAT_00113884 == 3) {\n    iVar9 = 0x24;\n    do {\n      bVar3 = FUN_00103200(iVar9);\n      cVar1 = *(char *)(extraout_RDX + 1);\n      iVar9 = (int)cVar1;\n      puVar6[bVar3] = 1;\n    } while (cVar1 != '\\0');\n    lVar8 = 0x80;\n    do {\n      puVar6[lVar8] = (&DAT_0010de40)[lVar8] != '\\0';\n      lVar8 = lVar8 + 1;\n    } while (lVar8 != 0x100);\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001048b0": "\nvoid FUN_001048b0(void)\n\n{\n  char cVar1;\n  long lVar2;\n  long lVar3;\n  \n  if (DAT_00113888 == '\\0') {\n    if (DAT_0011388a != '\\0') {\n      FUN_001044d0(DAT_00113120,DAT_00113128);\n      putchar_unlocked(0x3a);\n      FUN_001044a0(((DAT_00113010 + DAT_00113358) - (DAT_00113128 - DAT_00113120)) + -1);\n      goto LAB_0010490f;\n    }\n    FUN_001044d0(DAT_00113120,DAT_00113128);\n    FUN_001044a0((DAT_00113010 + DAT_00113358) - (DAT_00113128 - DAT_00113120));\n    if (DAT_001131a0 < DAT_001131a8) goto LAB_00104bcd;\nLAB_00104923:\n    lVar3 = (DAT_001131c8 - DAT_00113010) - (DAT_00113188 - DAT_00113180);\n    cVar1 = DAT_00113170;\njoined_r0x00104a8c:\n    if (cVar1 == '\\0') goto LAB_0010494f;\n    FUN_001044a0(lVar3 - DAT_001131b0);\n  }\n  else {\nLAB_0010490f:\n    if (DAT_001131a8 <= DAT_001131a0) goto LAB_00104923;\nLAB_00104bcd:\n    FUN_001044d0(DAT_001131a0,DAT_001131a8);\n    if (DAT_00113190 != '\\0') {\n      fputs_unlocked(PTR_DAT_00113030,stdout);\n      lVar3 = (DAT_001131c8 - DAT_00113010) - (DAT_00113188 - DAT_00113180);\n      if (DAT_00113170 != '\\0') {\n        lVar3 = lVar3 - DAT_001131b0;\n      }\n      lVar3 = lVar3 - (DAT_001131a8 - DAT_001131a0);\n      cVar1 = DAT_00113190;\n      goto joined_r0x00104a8c;\n    }\n    lVar2 = (DAT_001131c8 - DAT_00113010) - (DAT_00113188 - DAT_00113180);\n    lVar3 = lVar2 - (DAT_001131a8 - DAT_001131a0);\n    if (DAT_00113170 != '\\0') {\n      lVar3 = (lVar2 - DAT_001131b0) - (DAT_001131a8 - DAT_001131a0);\n    }\nLAB_0010494f:\n    FUN_001044a0(lVar3);\n  }\n  if (DAT_00113170 != '\\0') {\n    fputs_unlocked(PTR_DAT_00113030,stdout);\n  }\n  FUN_001044d0(DAT_00113180,DAT_00113188);\n  FUN_001044a0(DAT_00113010);\n  FUN_001044d0(DAT_00113160,DAT_00113168);\n  if (DAT_00113150 == '\\0') {\n    if (DAT_00113148 <= DAT_00113140) goto LAB_001049b7;\n    lVar3 = DAT_001131c8 - (DAT_00113168 - DAT_00113160);\nLAB_00104b08:\n    lVar3 = lVar3 - (DAT_00113148 - DAT_00113140);\n    if (DAT_00113130 != '\\0') {\n      lVar3 = lVar3 - DAT_001131b0;\n    }\n    FUN_001044a0(lVar3);\n    if (DAT_00113130 != '\\0') {\n      fputs_unlocked(PTR_DAT_00113030,stdout);\n    }\n    FUN_001044d0(DAT_00113140,DAT_00113148);\njoined_r0x00104a05:\n    if (DAT_0011388a == '\\0') goto LAB_00104a0b;\n  }\n  else {\n    fputs_unlocked(PTR_DAT_00113030,stdout);\n    if (DAT_00113140 < DAT_00113148) {\n      lVar3 = DAT_001131c8 - (DAT_00113168 - DAT_00113160);\n      if (DAT_00113150 != '\\0') {\n        lVar3 = lVar3 - DAT_001131b0;\n      }\n      goto LAB_00104b08;\n    }\nLAB_001049b7:\n    if (DAT_0011388a != '\\0') {\n      if (DAT_00113888 == '\\0') goto LAB_00104b78;\nLAB_001049d1:\n      lVar3 = DAT_001131c8 - (DAT_00113168 - DAT_00113160);\n      if (DAT_00113150 != '\\0') {\n        lVar3 = lVar3 - DAT_001131b0;\n      }\n      FUN_001044a0(lVar3);\n      goto joined_r0x00104a05;\n    }\n    if (DAT_00113889 == '\\0') goto LAB_00104b78;\n    if (DAT_00113888 != '\\0') goto LAB_001049d1;\nLAB_00104a0b:\n    if (DAT_00113889 == '\\0') {\n      putchar_unlocked(10);\n      return;\n    }\n  }\n  if (DAT_00113888 != '\\0') {\n    FUN_001044a0(DAT_00113010);\n    FUN_001044d0(DAT_00113120,DAT_00113128);\n  }\nLAB_00104b78:\n  putchar_unlocked(10);\n  return;\n}\n\n", 
    "0010bf40": "\nvoid FUN_0010bf40(ulong param_1)\n\n{\n  if ((param_1 & 0xf) != 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if ((param_1 & 0x10) == 0) {\n    return;\n  }\n  free((void *)(param_1 - *(byte *)(param_1 - 1)));\n  return;\n}\n\n", 
    "00107080": "\nundefined8 FUN_00107080(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106ff0(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00112f00)();\n  return iVar1;\n}\n\n", 
    "00109150": "\nvoid FUN_00109150(undefined8 param_1)\n\n{\n  FUN_00109140(0,param_1);\n  return;\n}\n\n", 
    "0010ad20": "\nulong FUN_0010ad20(void *param_1,void *param_2,void **param_3)\n\n{\n  char cVar1;\n  void *pvVar2;\n  void *pvVar3;\n  int iVar4;\n  void **ppvVar5;\n  void **ppvVar6;\n  void **ppvVar7;\n  void **ppvVar8;\n  ulong uVar9;\n  void **ppvVar10;\n  void *pvVar11;\n  long lVar12;\n  void *pvVar13;\n  long in_FS_OFFSET;\n  void *local_f8;\n  void **local_f0;\n  byte local_e1;\n  void *local_e0;\n  undefined *local_d8;\n  void *local_d0;\n  undefined local_c8 [4];\n  undefined8 local_c4;\n  undefined local_bc;\n  void *local_b8;\n  long local_b0;\n  char local_a8;\n  int local_a4;\n  undefined local_88 [4];\n  undefined8 local_84;\n  undefined local_7c;\n  void *local_78;\n  void *local_70;\n  byte local_68;\n  int local_64;\n  long local_40;\n  \n  ppvVar7 = &local_f8;\n  ppvVar10 = &local_f8;\n  ppvVar8 = &local_f8;\n  ppvVar6 = &local_f8;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_f8 = param_1;\n  local_f0 = param_3;\n  local_e0 = (void *)FUN_0010c020(param_2);\n  ppvVar5 = &local_f8;\n  if ((-1 < SUB168(ZEXT816(0x38) * ZEXT816(local_e0),0)) &&\n     (ppvVar5 = &local_f8, SUB168(ZEXT816(0x38) * ZEXT816(local_e0) >> 0x40,0) == 0)) {\n    if ((ulong)((long)local_e0 * 0x38) < 0xfa1) {\n      uVar9 = (long)local_e0 * 0x38 + 0x36;\n      ppvVar8 = &local_f8;\n      while (ppvVar7 != (void **)((long)&local_f8 - (uVar9 & 0xfffffffffffff000))) {\n        ppvVar10 = (void **)((long)ppvVar8 + -0x1000);\n        *(undefined8 *)((long)ppvVar8 + -8) = *(undefined8 *)((long)ppvVar8 + -8);\n        ppvVar7 = (void **)((long)ppvVar8 + -0x1000);\n        ppvVar8 = (void **)((long)ppvVar8 + -0x1000);\n      }\n      uVar9 = (ulong)((uint)uVar9 & 0xff0);\n      lVar12 = -uVar9;\n      ppvVar8 = (void **)((long)ppvVar10 + lVar12);\n      ppvVar6 = (void **)((long)ppvVar10 + lVar12);\n      if (uVar9 != 0) {\n        *(undefined8 *)((long)ppvVar10 + -8) = *(undefined8 *)((long)ppvVar10 + -8);\n      }\n      ppvVar10 = (void **)(((ulong)((long)ppvVar10 + lVar12 + 0xf) & 0xfffffffffffffff0) + 0x1f &\n                          0xffffffffffffffe0);\n      pvVar3 = local_e0;\n    }\n    else {\n      ppvVar10 = (void **)FUN_0010bf00();\n      pvVar3 = local_e0;\n    }\n    ppvVar5 = ppvVar6;\n    local_e0 = pvVar3;\n    if (ppvVar10 != (void **)0x0) {\n      local_88[0] = 0;\n      local_d8 = local_88;\n      local_84 = 0;\n      ppvVar6 = ppvVar10;\n      local_78 = param_2;\n      while( true ) {\n        local_7c = 0;\n        *(undefined8 *)((long)ppvVar8 + -8) = 0x10aeb7;\n        FUN_0010b720(local_d8);\n        local_e1 = local_68;\n        if ((local_68 != 0) && (local_64 == 0)) break;\n        *(undefined8 *)((long)ppvVar8 + -8) = 0x10ae9f;\n        FUN_0010bfa0(ppvVar6,&local_78);\n        local_78 = (void *)((long)local_78 + (long)local_70);\n        ppvVar6 = ppvVar6 + 6;\n      }\n      lVar12 = 0;\n      ppvVar10[(long)pvVar3 * 6 + 1] = (void *)0x1;\n      local_d0 = (void *)0x2;\n      ppvVar6 = ppvVar10;\n      if ((void *)0x2 < local_e0) {\nLAB_0010aef8:\n        cVar1 = *(char *)(ppvVar6 + 8);\n        do {\n          ppvVar5 = ppvVar10 + lVar12 * 6;\n          if ((cVar1 == '\\0') || (*(char *)(ppvVar5 + 2) == '\\0')) {\n            pvVar11 = ppvVar6[7];\n            if (pvVar11 == ppvVar5[1]) {\n              pvVar13 = *ppvVar5;\n              pvVar2 = ppvVar6[6];\n              *(undefined8 *)((long)ppvVar8 + -8) = 0x10af42;\n              iVar4 = memcmp(pvVar2,pvVar13,(size_t)pvVar11);\n              if (iVar4 == 0) goto LAB_0010af46;\n            }\n          }\n          else if (*(int *)((long)ppvVar6 + 0x44) == *(int *)((long)ppvVar5 + 0x14)) {\nLAB_0010af46:\n            lVar12 = lVar12 + 1;\n            ppvVar10[(long)((long)pvVar3 * 6 + (long)local_d0)] = (void *)((long)local_d0 - lVar12);\n            goto LAB_0010af5b;\n          }\n          if (lVar12 == 0) goto LAB_0010b110;\n          lVar12 = lVar12 - (long)ppvVar10[(long)pvVar3 * 6 + lVar12];\n        } while( true );\n      }\nLAB_0010af77:\n      local_88[0] = 0;\n      pvVar11 = (void *)0x0;\n      local_c8[0] = 0;\n      *local_f0 = (void *)0x0;\n      local_c4 = 0;\n      local_b8 = local_f8;\n      local_bc = 0;\n      local_78 = local_f8;\n      local_84 = 0;\n      local_7c = 0;\n      do {\n        while( true ) {\n          *(undefined8 *)((long)ppvVar8 + -8) = 0x10afdc;\n          FUN_0010b720(local_d8);\n          if (local_68 != 0) break;\n          ppvVar6 = ppvVar10 + (long)pvVar11 * 6;\nLAB_0010b04c:\n          pvVar13 = ppvVar6[1];\n          if (pvVar13 == local_70) {\n            pvVar2 = *ppvVar6;\n            *(undefined8 *)((long)ppvVar8 + -8) = 0x10b0ac;\n            iVar4 = memcmp(pvVar2,local_78,(size_t)pvVar13);\n            if (iVar4 == 0) goto LAB_0010b000;\n          }\njoined_r0x0010b0b7:\n          if (pvVar11 == (void *)0x0) {\n            *(undefined8 *)((long)ppvVar8 + -8) = 0x10b063;\n            FUN_0010b720(local_c8);\n            if ((local_a8 != '\\0') && (local_a4 == 0)) {\n                    /* WARNING: Subroutine does not return */\n              *(code **)((long)ppvVar8 + -8) = FUN_001029c3;\n              abort();\n            }\n            local_bc = 0;\n            local_b8 = (void *)((long)local_b8 + local_b0);\n            local_7c = 0;\n            local_78 = (void *)((long)local_78 + (long)local_70);\n          }\n          else {\n            pvVar13 = ppvVar10[(long)((long)pvVar3 * 6 + (long)pvVar11)];\n            pvVar11 = (void *)((long)pvVar11 - (long)pvVar13);\n            for (; pvVar13 != (void *)0x0; pvVar13 = (void *)((long)pvVar13 + -1)) {\n              *(undefined8 *)((long)ppvVar8 + -8) = 0x10b0f7;\n              FUN_0010b720(local_c8);\n              if ((local_a8 != '\\0') && (local_a4 == 0)) {\n                uVar9 = FUN_001029be();\n                return uVar9;\n              }\n              local_bc = 0;\n              local_b8 = (void *)((long)local_b8 + local_b0);\n            }\n          }\n        }\n        if (local_64 == 0) goto LAB_0010b02a;\n        ppvVar6 = ppvVar10 + (long)pvVar11 * 6;\n        if (*(char *)(ppvVar6 + 2) == '\\0') goto LAB_0010b04c;\n        if (*(int *)((long)ppvVar6 + 0x14) != local_64) goto joined_r0x0010b0b7;\nLAB_0010b000:\n        local_7c = 0;\n        pvVar11 = (void *)((long)pvVar11 + 1);\n        local_78 = (void *)((long)local_78 + (long)local_70);\n      } while (local_e0 != pvVar11);\n      *local_f0 = local_b8;\nLAB_0010b02a:\n      *(undefined8 *)((long)ppvVar8 + -8) = 0x10b032;\n      FUN_0010bf40(ppvVar10);\n      goto LAB_0010ae17;\n    }\n  }\n  ppvVar8 = ppvVar5;\n  local_e1 = 0;\nLAB_0010ae17:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined **)((long)ppvVar8 + -8) = &UNK_0010b125;\n    __stack_chk_fail();\n  }\n  return (ulong)local_e1;\nLAB_0010b110:\n  ppvVar10[(long)((long)pvVar3 * 6 + (long)local_d0)] = local_d0;\nLAB_0010af5b:\n  local_d0 = (void *)((long)local_d0 + 1);\n  ppvVar6 = ppvVar6 + 6;\n  if (local_e0 == local_d0) goto LAB_0010af77;\n  goto LAB_0010aef8;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00112e70)();\n  return;\n}\n\n", 
    "00109030": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00109030(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_001139c0;\n  uStack_60 = uRam00000000001139c8;\n  local_38 = DAT_001139f0;\n  local_58 = _DAT_001139d0;\n  uStack_50 = uRam00000000001139d8;\n  local_48 = _DAT_001139e0;\n  uStack_40 = uRam00000000001139e8;\n  FUN_00108b10(&local_68);\n  FUN_00108890(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswalnum(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c184": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00112ea8)();\n  return iVar1;\n}\n\n", 
    "0010bec0": "\nsize_t FUN_0010bec0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  size_t sVar2;\n  \n  pvVar1 = memchr(param_1,0,param_2);\n  sVar2 = (long)pvVar1 + (1 - (long)param_1);\n  if (pvVar1 == (void *)0x0) {\n    sVar2 = param_2;\n  }\n  return sVar2;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_stpcpy_00112e18)();\n  return pcVar1;\n}\n\n", 
    "00114060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nintmax_t strtoimax(char *__nptr,char **__endptr,int __base)\n\n{\n  intmax_t iVar1;\n  \n  iVar1 = (*(code *)PTR_strtoimax_00112d88)();\n  return iVar1;\n}\n\n", 
    "00114180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a560": "\nint FUN_0010a560(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00108a70": "\nundefined4 FUN_00108a70(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_001139c0;\n  }\n  return *param_1;\n}\n\n", 
    "001090e0": "\nvoid FUN_001090e0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001090d0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\niconv_t iconv_open(char *__tocode,char *__fromcode)\n\n{\n  iconv_t pvVar1;\n  \n  pvVar1 = (iconv_t)(*(code *)PTR_iconv_open_00112fc8)();\n  return pvVar1;\n}\n\n", 
    "00102860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00112f38)();\n  return pcVar1;\n}\n\n", 
    "00106ff0": "\nundefined8 FUN_00106ff0(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010a7c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106f90(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00112e68)();\n  return _Var1;\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_00112dd8)();\n  return iVar1;\n}\n\n", 
    "00109160": "\nvoid * FUN_00109160(FILE *param_1,ulong *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  void *pvVar3;\n  size_t sVar4;\n  int *piVar5;\n  void *pvVar6;\n  __off_t _Var7;\n  size_t __size;\n  ulong uVar8;\n  size_t __n;\n  long in_FS_OFFSET;\n  undefined local_d8 [24];\n  uint local_c0;\n  long local_a8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = fileno(param_1);\n  iVar1 = FUN_0010c170(iVar1,local_d8);\n  if ((((iVar1 < 0) || ((local_c0 & 0xf000) != 0x8000)) || (_Var7 = ftello(param_1), _Var7 < 0)) ||\n     (local_a8 <= _Var7)) {\n    __size = 0x2000;\n  }\n  else {\n    __size = (local_a8 - _Var7) + 1;\n    if (local_a8 - _Var7 == -1) {\n      piVar5 = __errno_location();\n      pvVar3 = (void *)0x0;\n      *piVar5 = 0xc;\n      goto LAB_00109286;\n    }\n  }\n  pvVar3 = malloc(__size);\n  if (pvVar3 != (void *)0x0) {\n    uVar8 = 0;\n    do {\n      pvVar6 = pvVar3;\n      __n = __size - uVar8;\n      sVar4 = fread((void *)((long)pvVar6 + uVar8),1,__n,param_1);\n      uVar8 = uVar8 + sVar4;\n      if (__n != sVar4) {\n        piVar5 = __errno_location();\n        iVar1 = *piVar5;\n        iVar2 = ferror(param_1);\n        if (iVar2 != 0) goto LAB_00109278;\n        pvVar3 = pvVar6;\n        if ((uVar8 < __size - 1) && (pvVar6 = realloc(pvVar6,uVar8 + 1), pvVar6 != (void *)0x0)) {\n          pvVar3 = pvVar6;\n        }\n        *(undefined *)((long)pvVar3 + uVar8) = 0;\n        *param_2 = uVar8;\n        goto LAB_00109286;\n      }\n      if (__size == 0xffffffffffffffff) {\n        piVar5 = __errno_location();\n        iVar1 = 0xc;\n        goto LAB_00109278;\n      }\n      sVar4 = (__size >> 1) + __size;\n      if (~(__size >> 1) <= __size) {\n        sVar4 = 0xffffffffffffffff;\n      }\n      pvVar3 = realloc(pvVar6,sVar4);\n      __size = sVar4;\n    } while (pvVar3 != (void *)0x0);\n    piVar5 = __errno_location();\n    iVar1 = *piVar5;\nLAB_00109278:\n    pvVar3 = (void *)0x0;\n    free(pvVar6);\n    *piVar5 = iVar1;\n  }\nLAB_00109286:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return pvVar3;\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00112ef8)();\n  return pvVar1;\n}\n\n", 
    "001076d0": "\nulong FUN_001076d0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00107b57:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00107b79;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00108116;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00107acf;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00107b57;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00107acf:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_001075a0(&DAT_0010e0b5,param_5);\n      local_78 = (char *)FUN_001075a0(\"\\'\");\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00107820:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00108080_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010801b;\n          goto LAB_00107e0b;\n        default:\nswitchD_00107f30_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_0010a5e0(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00108308;\n              }\n              if (lVar10 == -2) goto joined_r0x0010871a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00107cf0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00108308;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00107a91;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00107fd8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00107fd8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00107fd8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00107ce7;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00107cd4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00107cd4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_001079f8;\n          goto LAB_00107ce7;\n        case 0x23:\n        case 0x7e:\nLAB_00107ccb:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00107cd4;\n          goto LAB_001079f5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00107f30_caseD_25;\n        case 0x27:\nswitchD_00107f30_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_001079f8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x00107a1b;\n          }\n          goto LAB_00107cf0;\n        case 0x3f:\nswitchD_00107f30_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010867e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_001079f8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x00107a1b;\n          }\n          goto LAB_00107cf0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00107928_caseD_5c;\n          if (!bVar20) {\nLAB_00107f68:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00107f80;\n          }\n          goto LAB_00107cf0;\n        case 0x7b:\n        case 0x7d:\nswitchD_00107f30_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00107ccb;\nLAB_001079f5:\n          bVar23 = false;\n          goto LAB_001079f8;\n        }\nLAB_00107e00:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00107e0b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00107a18;\n          goto LAB_00107940;\n        }\nLAB_00107e40:\n        bVar21 = false;\n        goto joined_r0x00107e51;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00108060;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00107928_caseD_0;\n          default:\n            goto switchD_00107f30_caseD_1;\n          case 7:\n            goto switchD_00108080_caseD_7;\n          case 8:\n            goto switchD_00108080_caseD_8;\n          case 9:\n            goto switchD_00107928_caseD_9;\n          case 10:\n            goto switchD_00108080_caseD_a;\n          case 0xb:\n            goto switchD_00108080_caseD_b;\n          case 0xc:\n            goto switchD_00108080_caseD_c;\n          case 0xd:\n            goto switchD_00108080_caseD_d;\n          case 0x20:\n            goto LAB_001080a9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00107928_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00108091;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00107938;\n          case 0x27:\n            goto switchD_00107f30_caseD_27;\n          case 0x3f:\n            goto switchD_00107f30_caseD_3f;\n          case 0x5c:\n            goto switchD_00107928_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00107f30_caseD_7b;\n          }\n        }\n        goto LAB_00107cfe;\n      }\nLAB_00108060:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00108080_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00107928_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x00107a1b;\n            }\nLAB_001084bb:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_001084bb;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_001084f8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x00107a1b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00107cf0;\n      default:\n        bVar23 = false;\n        goto switchD_00107f30_caseD_1;\n      case 7:\nswitchD_00108080_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00108080_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00107928_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00107e00;\n      case 10:\nswitchD_00108080_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00107e40;\n      case 0xb:\nswitchD_00108080_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00107e40;\n      case 0xc:\nswitchD_00108080_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00108080_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00107e40;\n      case 0x20:\n        bVar5 = false;\nLAB_001080a9:\n        uVar15 = 0x20;\n        goto LAB_00107938;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00107928_caseD_21:\n        bVar22 = false;\n        goto LAB_001079f5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00108091:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_001079f8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00107940;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00107938:\n        bVar22 = false;\n        goto LAB_00107940;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00107f30_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00107f30_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00107928_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00107f68;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00107e00;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00107f30_caseD_7b;\n      }\n      if (bVar20) goto LAB_00107e60;\n      bVar21 = false;\n      goto LAB_001079b6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00107ce7:\n      param_5 = 2;\nLAB_00107cf0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00107cfe:\n      uVar13 = FUN_001076d0(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00107d38;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00108785:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00107d38:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_001076d0(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00107d38;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00108785;\nLAB_00108116:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00107b79:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010801b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00107820;\nswitchD_0010867e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_001084f8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x00107a1b;\n    goto LAB_00107940;\n  }\n  goto LAB_00107cfe;\njoined_r0x0010871a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00108308:\n  if (1 < uVar17) {\nLAB_00108312:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00107cf0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_001079c8;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00107f80;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00107a91:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00108312;\n  }\nswitchD_00107f30_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_001079f8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00107940:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x00107a1b;\n  }\n  else {\nLAB_00107a18:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x00107a1b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00107f80:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_001079c8;\n    }\n  }\njoined_r0x00107e51:\n  if (bVar20) {\nLAB_00107e60:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00107cf0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_001079b6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_001079c8:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00107820;\n}\n\n", 
    "00114078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001031f0": "\nvoid thunk_FUN_00103170(void)\n\n{\n  FUN_00103170();\n  return;\n}\n\n", 
    "00108ea0": "\nvoid FUN_00108ea0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108e20(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00112f30)();\n  return pvVar1;\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00112ea0)();\n  return iVar1;\n}\n\n", 
    "00102610": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00112e10)();\n  return;\n}\n\n", 
    "00114070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswspace(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswspace_00112f50)();\n  return iVar1;\n}\n\n", 
    "00103980": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n/* WARNING: Restarted to delay deadcode elimination for space: ram */\n\nvoid FUN_00103980(char **param_1)\n\n{\n  byte bVar1;\n  int iVar2;\n  char **ppcVar3;\n  ushort **ppuVar4;\n  char cVar5;\n  ushort *puVar6;\n  char extraout_DL;\n  char extraout_DL_00;\n  char extraout_DL_01;\n  char extraout_DL_02;\n  char extraout_DL_03;\n  undefined8 *puVar7;\n  undefined8 *extraout_RDX;\n  undefined8 *extraout_RDX_00;\n  long lVar8;\n  undefined8 *extraout_RDX_01;\n  undefined8 *extraout_RDX_02;\n  undefined8 *extraout_RDX_03;\n  undefined8 *extraout_RDX_04;\n  undefined8 *extraout_RDX_05;\n  undefined8 *extraout_RDX_06;\n  undefined8 *extraout_RDX_07;\n  long extraout_RDX_08;\n  long extraout_RDX_09;\n  undefined8 *puVar9;\n  char cVar10;\n  undefined8 *puVar11;\n  undefined8 *puVar12;\n  char *pcVar13;\n  char *pcVar14;\n  undefined8 *puVar15;\n  undefined8 *puVar16;\n  undefined8 *puVar17;\n  undefined8 *puVar18;\n  undefined8 *puVar19;\n  long *local_60;\n  undefined8 *local_58;\n  long local_50;\n  \n  puVar11 = (undefined8 *)&DAT_00113380;\n  puVar19 = (undefined8 *)*param_1;\n  pcVar14 = param_1[2];\n  ppcVar3 = (char **)((long)*(int *)(param_1 + 5) * 0x10 + _DAT_001132f8);\n  puVar15 = (undefined8 *)*ppcVar3;\n  local_58 = (undefined8 *)ppcVar3[1];\n  puVar17 = (undefined8 *)(param_1[1] + (long)puVar19);\n  puVar9 = (undefined8 *)((long)puVar19 + (long)pcVar14);\n  puVar16 = (undefined8 *)(param_1[3] + (long)puVar19);\n  puVar7 = (undefined8 *)(DAT_001131b8 + (long)puVar19);\n  puVar12 = puVar7;\n  DAT_00113160 = puVar19;\n  DAT_00113168 = puVar17;\n  if (puVar17 < puVar16) {\n    do {\n      puVar7 = puVar12;\n      if (puVar7 < puVar17) {\n        pcVar14 = param_1[2];\n        goto LAB_00103ac8;\n      }\n      DAT_00113168 = puVar17;\n      if (DAT_001135c0 == 0) {\n        bVar1 = FUN_00103200((int)*(char *)puVar17);\n        if ((&DAT_00113380)[bVar1] == '\\0') {\n          puVar17 = (undefined8 *)((long)puVar17 + 1);\n          puVar12 = extraout_RDX;\n        }\n        else {\n          puVar18 = puVar17;\n          if (puVar16 <= puVar17) break;\n          do {\n            puVar17 = (undefined8 *)((long)puVar17 + 1);\n            puVar18 = puVar16;\n            if (puVar16 == puVar17) goto LAB_00103aaf;\n            bVar1 = FUN_00103200((int)*(char *)puVar17);\n            puVar12 = extraout_RDX_00;\n          } while ((&DAT_00113380)[bVar1] != '\\0');\n        }\n      }\n      else {\n        iVar2 = re_match((re_pattern_buffer *)&DAT_001135c8,(char *)puVar17,\n                         (int)puVar16 - (int)puVar17,0,(re_registers *)0x0);\n        if (iVar2 == -2) goto LAB_00104488;\n        if (iVar2 == -1) {\n          iVar2 = 1;\n        }\n        puVar7 = (undefined8 *)(DAT_001131b8 + (long)DAT_00113160);\n        puVar17 = (undefined8 *)((long)puVar17 + (long)iVar2);\n        puVar12 = puVar7;\n        puVar19 = DAT_00113160;\n      }\n      puVar18 = puVar17;\n    } while (puVar17 < puVar16);\nLAB_00103aaf:\n    pcVar14 = param_1[2];\n    puVar17 = puVar18;\n  }\n  if (puVar17 <= puVar7) {\n    DAT_00113168 = puVar17;\n  }\nLAB_00103ac8:\n  puVar11 = DAT_00113168;\n  DAT_00113150 = PTR_DAT_00113030 != (undefined *)0x0 && DAT_00113168 < puVar16;\n  puVar12 = DAT_00113168;\n  if (puVar19 < DAT_00113168) {\n    ppuVar4 = __ctype_b_loc();\n    puVar6 = *ppuVar4;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)((long)puVar11 + -1));\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        puVar12 = DAT_00113168;\n        if (extraout_DL != '\\0') {\n          puVar12 = puVar11;\n        }\n        break;\n      }\n      puVar11 = (undefined8 *)((long)puVar11 + -1);\n      puVar12 = puVar19;\n    } while (puVar11 != puVar19);\n  }\n  DAT_00113168 = puVar12;\n  lVar8 = DAT_00113360 + DAT_001131c8;\n  if ((char *)-lVar8 == pcVar14 || -(long)pcVar14 < lVar8) {\n    puVar11 = (undefined8 *)((long)puVar19 + (long)pcVar14);\n  }\n  else {\n    puVar11 = (undefined8 *)((long)puVar19 - lVar8);\n    if (DAT_001135c0 == 0) {\n      bVar1 = FUN_00103200((int)*(char *)puVar11);\n      if ((&DAT_00113380)[bVar1] == '\\0') {\n        puVar11 = (undefined8 *)((long)puVar11 + 1);\n      }\n      else if (puVar11 < puVar19) {\n        do {\n          puVar11 = (undefined8 *)((long)puVar11 + 1);\n          if (puVar11 == puVar19) break;\n          bVar1 = FUN_00103200((int)*(char *)puVar11);\n        } while (*(char *)(extraout_RDX_09 + (ulong)bVar1) != '\\0');\n      }\n    }\n    else {\n      iVar2 = re_match((re_pattern_buffer *)&DAT_001135c8,(char *)puVar11,(int)lVar8,0,\n                       (re_registers *)0x0);\n      if (iVar2 == -2) goto LAB_00104488;\n      if (iVar2 == -1) {\n        iVar2 = 1;\n      }\n      puVar11 = (undefined8 *)((long)puVar11 + (long)iVar2);\n    }\n  }\n  puVar19 = DAT_00113160;\n  DAT_00113188 = DAT_00113160;\n  puVar12 = puVar19;\n  DAT_00113180 = puVar11;\n  puVar17 = DAT_00113188;\n  if (puVar11 < DAT_00113160) {\n    ppuVar4 = __ctype_b_loc();\n    cVar5 = '\\0';\n    puVar6 = *ppuVar4;\n    puVar7 = puVar19;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)((long)puVar7 + -1));\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        puVar12 = puVar19;\n        puVar17 = DAT_00113188;\n        if (cVar5 != '\\0') {\n          puVar12 = extraout_RDX_01;\n          puVar17 = extraout_RDX_01;\n        }\n        break;\n      }\n      puVar7 = (undefined8 *)((long)extraout_RDX_01 + -1);\n      cVar5 = '\\x01';\n      puVar12 = puVar11;\n      puVar17 = puVar11;\n    } while (puVar7 != puVar11);\n  }\n  DAT_00113188 = puVar17;\n  local_60 = &DAT_001135c0;\n  lVar8 = DAT_001131c0;\n  puVar17 = puVar11;\n  puVar19 = puVar11;\n  if ((undefined8 *)((long)puVar11 + DAT_001131c0) < puVar12) {\nLAB_00103c68:\n    do {\n      if (DAT_001135c0 == 0) {\n        bVar1 = FUN_00103200((int)*(char *)puVar17);\n        puVar19 = DAT_00113180;\n        if ((&DAT_00113380)[bVar1] == '\\0') {\n          DAT_00113180 = (undefined8 *)((long)puVar17 + 1);\n          puVar12 = DAT_00113188;\n          puVar17 = DAT_00113180;\n          puVar19 = DAT_00113180;\n          if (DAT_00113188 <= (undefined8 *)((long)DAT_00113180 + lVar8)) break;\n          goto LAB_00103c68;\n        }\n        cVar5 = '\\0';\n        puVar17 = DAT_00113180;\n        if (DAT_00113180 < puVar12) {\n          do {\n            bVar1 = FUN_00103200((int)*(char *)puVar17);\n            if ((&DAT_00113380)[bVar1] == '\\0') {\n              puVar17 = extraout_RDX_04;\n              if (cVar5 == '\\0') goto LAB_00103c58;\n              break;\n            }\n            puVar17 = (undefined8 *)((long)extraout_RDX_04 + 1);\n            cVar5 = '\\x01';\n          } while (puVar17 != puVar12);\n          puVar19 = puVar17;\n          DAT_00113180 = puVar17;\n        }\n      }\n      else {\n        iVar2 = re_match((re_pattern_buffer *)&DAT_001135c8,(char *)puVar17,\n                         (int)puVar12 - (int)puVar17,0,(re_registers *)0x0);\n        if (iVar2 == -2) goto LAB_00104488;\n        if (iVar2 == -1) {\n          iVar2 = 1;\n        }\n        puVar19 = (undefined8 *)((long)iVar2 + (long)DAT_00113180);\n        lVar8 = DAT_001131c0;\n        DAT_00113180 = puVar19;\n      }\nLAB_00103c58:\n      puVar12 = DAT_00113188;\n      puVar17 = puVar19;\n    } while ((undefined8 *)((long)puVar19 + lVar8) < DAT_00113188);\n  }\n  if (PTR_DAT_00113030 == (undefined *)0x0) {\n    DAT_00113170 = false;\n  }\n  else {\n    puVar17 = puVar19;\n    if (puVar15 < puVar19) {\n      ppuVar4 = __ctype_b_loc();\n      puVar6 = *ppuVar4;\n      puVar7 = puVar19;\n      do {\n        bVar1 = FUN_00103200((int)*(char *)((long)puVar7 + -1));\n        puVar17 = extraout_RDX_02;\n        if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) break;\n        puVar7 = (undefined8 *)((long)extraout_RDX_02 + -1);\n        puVar17 = puVar15;\n      } while (puVar15 != puVar7);\n    }\n    DAT_00113170 = puVar9 < puVar17;\n  }\n  if (puVar19 < local_58) {\n    ppuVar4 = __ctype_b_loc();\n    puVar6 = *ppuVar4;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)puVar19);\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        if (extraout_DL_00 == '\\0') goto LAB_00103d3e;\n        break;\n      }\n      puVar19 = (undefined8 *)((long)puVar19 + 1);\n    } while (puVar19 != local_58);\n    DAT_00113180 = puVar19;\n  }\nLAB_00103d3e:\n  puVar17 = DAT_00113168;\n  lVar8 = (lVar8 - ((long)puVar12 - (long)puVar19)) - DAT_00113010;\n  local_50 = DAT_00113010;\n  local_60 = DAT_00113168;\n  if (lVar8 < 1) {\n    DAT_001131a0 = (undefined8 *)0x0;\n    DAT_001131a8 = (undefined8 *)0x0;\n    goto LAB_00104156;\n  }\n  DAT_001131a0 = DAT_00113168;\n  if (DAT_00113168 < local_58) {\n    ppuVar4 = __ctype_b_loc();\n    puVar6 = *ppuVar4;\n    puVar19 = puVar17;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)puVar19);\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        local_58 = puVar17;\n        puVar12 = DAT_001131a0;\n        if (extraout_DL_01 != '\\0') {\n          puVar12 = puVar19;\n          local_58 = puVar19;\n        }\n        break;\n      }\n      puVar19 = (undefined8 *)((long)puVar19 + 1);\n      puVar12 = puVar19;\n    } while (puVar19 != local_58);\n  }\n  else {\n    local_58 = DAT_00113168;\n    puVar19 = DAT_00113168;\n    puVar12 = DAT_001131a0;\n  }\n  DAT_001131a0 = puVar12;\n  puVar12 = (undefined8 *)((long)local_58 + lVar8);\n  puVar17 = puVar12;\n  DAT_001131a8 = puVar19;\n  if (puVar19 < puVar16) {\n    do {\n      puVar12 = puVar17;\n      if (puVar12 <= puVar19) {\n        local_60 = DAT_00113168;\n        local_50 = DAT_00113010;\n        puVar19 = DAT_001131a8;\n        goto LAB_00103f3a;\n      }\n      DAT_001131a8 = puVar19;\n      if (DAT_001135c0 == 0) {\n        bVar1 = FUN_00103200((int)*(char *)puVar19);\n        if ((&DAT_00113380)[bVar1] == '\\0') {\n          puVar19 = (undefined8 *)((long)puVar19 + 1);\n          puVar17 = extraout_RDX_03;\n        }\n        else {\n          if (puVar16 <= puVar19) {\n            local_60 = DAT_00113168;\n            local_50 = DAT_00113010;\n            goto LAB_00103f3a;\n          }\n          do {\n            puVar19 = (undefined8 *)((long)puVar19 + 1);\n            puVar7 = puVar16;\n            if (puVar16 == puVar19) goto LAB_00103f12;\n            bVar1 = FUN_00103200((int)*(char *)puVar19);\n            puVar17 = extraout_RDX_05;\n          } while ((&DAT_00113380)[bVar1] != '\\0');\n        }\n      }\n      else {\n        iVar2 = re_match((re_pattern_buffer *)&DAT_001135c8,(char *)puVar19,\n                         (int)puVar16 - (int)puVar19,0,(re_registers *)0x0);\n        if (iVar2 == -2) goto LAB_00104488;\n        if (iVar2 == -1) {\n          iVar2 = 1;\n        }\n        puVar19 = (undefined8 *)((long)puVar19 + (long)iVar2);\n        local_58 = DAT_001131a0;\n        puVar12 = (undefined8 *)((long)DAT_001131a0 + lVar8);\n        puVar17 = puVar12;\n      }\n      puVar7 = puVar19;\n    } while (puVar19 < puVar16);\nLAB_00103f12:\n    local_60 = DAT_00113168;\n    local_50 = DAT_00113010;\n    puVar19 = puVar7;\n  }\n  if (puVar12 <= puVar19) goto LAB_0010448d;\nLAB_00103f3a:\n  DAT_001131a8 = puVar19;\n  puVar19 = DAT_001131a8;\n  if (local_58 < DAT_001131a8) {\n    DAT_00113150 = 0;\n    DAT_00113190 = PTR_DAT_00113030 != (undefined *)0x0 && DAT_001131a8 < puVar16;\n    ppuVar4 = __ctype_b_loc();\n    puVar6 = *ppuVar4;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)((long)puVar19 + -1));\n      puVar12 = puVar11;\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        if (extraout_DL_02 == '\\0') goto LAB_00103fa7;\n        break;\n      }\n      puVar19 = (undefined8 *)((long)puVar19 + -1);\n    } while (puVar19 != local_58);\n    DAT_001131a8 = puVar19;\n  }\n  else {\nLAB_00104156:\n    DAT_00113190 = 0;\n    puVar12 = puVar11;\n  }\nLAB_00103fa7:\n  puVar11 = DAT_00113180;\n  lVar8 = (DAT_001131b8 - ((long)local_60 - (long)DAT_00113160)) - local_50;\n  if (lVar8 < 1) {\n    DAT_00113140 = (undefined8 *)0x0;\n    DAT_00113148 = (undefined8 *)0x0;\n    goto LAB_00104286;\n  }\n  DAT_00113148 = DAT_00113180;\n  puVar19 = puVar11;\n  puVar17 = DAT_00113148;\n  if (puVar15 < DAT_00113180) {\n    ppuVar4 = __ctype_b_loc();\n    cVar5 = '\\0';\n    puVar6 = *ppuVar4;\n    puVar7 = puVar11;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)((long)puVar7 + -1));\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        puVar19 = puVar11;\n        puVar17 = DAT_00113148;\n        if (cVar5 != '\\0') {\n          puVar19 = extraout_RDX_06;\n          puVar17 = extraout_RDX_06;\n        }\n        break;\n      }\n      puVar7 = (undefined8 *)((long)extraout_RDX_06 + -1);\n      cVar5 = '\\x01';\n      puVar19 = puVar15;\n      puVar17 = puVar15;\n    } while (puVar7 != puVar15);\n  }\n  DAT_00113148 = puVar17;\n  DAT_00113140 = puVar12;\n  if ((undefined8 *)((long)puVar12 + lVar8) < puVar19) {\n    local_60 = &DAT_001135c0;\n    puVar11 = puVar12;\n    puVar15 = puVar19;\n    do {\n      if (DAT_001135c0 == 0) {\n        bVar1 = FUN_00103200((int)*(char *)puVar11);\n        puVar12 = DAT_00113140;\n        if ((&DAT_00113380)[bVar1] == '\\0') {\n          puVar12 = (undefined8 *)((long)puVar11 + 1);\n          DAT_00113140 = (undefined8 *)((long)puVar11 + 1);\n        }\n        else {\n          cVar5 = '\\0';\n          puVar11 = DAT_00113140;\n          if (DAT_00113140 < puVar15) {\n            do {\n              bVar1 = FUN_00103200((int)*(char *)puVar11);\n              if ((&DAT_00113380)[bVar1] == '\\0') {\n                puVar11 = extraout_RDX_07;\n                if (cVar5 == '\\0') goto LAB_001040a1;\n                break;\n              }\n              puVar11 = (undefined8 *)((long)extraout_RDX_07 + 1);\n              cVar5 = '\\x01';\n            } while (puVar11 != puVar15);\n            puVar12 = puVar11;\n            DAT_00113140 = puVar11;\n          }\n        }\n      }\n      else {\n        iVar2 = re_match((re_pattern_buffer *)&DAT_001135c8,(char *)puVar11,\n                         (int)puVar15 - (int)puVar11,0,(re_registers *)0x0);\n        if (iVar2 == -2) goto LAB_00104488;\n        if (iVar2 == -1) {\n          iVar2 = 1;\n        }\n        puVar12 = (undefined8 *)((long)iVar2 + (long)DAT_00113140);\n        DAT_00113140 = puVar12;\n      }\nLAB_001040a1:\n      puVar11 = puVar12;\n      puVar19 = DAT_00113148;\n      puVar15 = DAT_00113148;\n      if (DAT_00113148 <= (undefined8 *)((long)puVar12 + lVar8)) break;\n    } while( true );\n  }\n  if (puVar12 < puVar19) {\n    DAT_00113170 = 0;\n    DAT_00113130 = PTR_DAT_00113030 != (undefined *)0x0 && puVar9 < puVar12;\n    ppuVar4 = __ctype_b_loc();\n    puVar6 = *ppuVar4;\n    do {\n      bVar1 = FUN_00103200((int)*(char *)puVar12);\n      cVar10 = DAT_0011388a;\n      cVar5 = DAT_00113889;\n      if ((*(byte *)((long)puVar6 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) {\n        if (extraout_DL_03 == '\\0') goto joined_r0x00104297;\n        break;\n      }\n      puVar12 = (undefined8 *)((long)puVar12 + 1);\n    } while (puVar12 != puVar19);\n    DAT_00113140 = puVar12;\n  }\n  else {\nLAB_00104286:\n    DAT_00113130 = 0;\n    cVar5 = DAT_00113889;\n    cVar10 = DAT_0011388a;\n  }\njoined_r0x00104297:\n  DAT_00113889 = cVar5;\n  DAT_0011388a = cVar10;\n  if (cVar10 == '\\0') {\n    if ((cVar5 != '\\0') &&\n       (puVar9 = (undefined8 *)(param_1[4] + (long)DAT_00113160), DAT_00113120 = puVar9,\n       DAT_00113128 = puVar9, puVar9 < puVar16)) {\n      __ctype_b_loc();\n      do {\n        bVar1 = FUN_00103200((int)*(char *)puVar9);\n        if ((*(byte *)(extraout_RDX_08 + 1 + (ulong)bVar1 * 2) & 0x20) != 0) {\n          if (cVar10 != '\\0') {\n            DAT_00113128 = puVar9;\n            return;\n          }\n          return;\n        }\n        puVar9 = (undefined8 *)((long)puVar9 + 1);\n        cVar10 = cVar5;\n      } while (puVar9 != puVar16);\n      DAT_00113128 = puVar9;\n      return;\n    }\n  }\n  else {\n    iVar2 = *(int *)(param_1 + 5);\n    pcVar14 = *(char **)(DAT_00113308 + (long)iVar2 * 8);\n    if (pcVar14 == (char *)0x0) {\n      pcVar14 = \"\";\n    }\n    pcVar13 = param_1[4] + 1;\n    if (0 < iVar2) {\n      pcVar13 = pcVar13 + -*(long *)(DAT_00113300 + -8 + (long)iVar2 * 8);\n    }\n    pcVar14 = stpcpy((char *)DAT_00113120,pcVar14);\n    iVar2 = __sprintf_chk(pcVar14,1,0xffffffffffffffff,&DAT_0010db34,pcVar13);\n    DAT_00113128 = (undefined8 *)(pcVar14 + iVar2);\n  }\n  return;\nLAB_00104488:\n  FUN_00103380();\nLAB_0010448d:\n  puVar19 = DAT_001131a8;\n  goto LAB_00103f3a;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00112ec0)();\n  return iVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00112e30)();\n  return sVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00112da0)();\n  return piVar1;\n}\n\n", 
    "001140e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114158": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001140e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * freopen(char *__filename,char *__modes,FILE *__stream)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_freopen_00112e80)();\n  return pFVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswcntrl_00112df0)();\n  return iVar1;\n}\n\n", 
    "00108af0": "\nundefined4 FUN_00108af0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_001139c0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00114040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t ftello(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109130": "\nvoid FUN_00109130(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109120(0,param_1,param_2);\n  return;\n}\n\n", 
    "00114168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106f70": "\nbool FUN_00106f70(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0010a840(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "001064f0": "\nvoid FUN_001064f0(undefined8 param_1)\n\n{\n  DAT_00113898 = param_1;\n  return;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_match(re_pattern_buffer *__buffer,char *__string,int __length,int __start,\n            re_registers *__regs)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_re_match_00112d98)();\n  return iVar1;\n}\n\n", 
    "00114160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iconv_close(iconv_t __cd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iconv_close_00112f48)();\n  return iVar1;\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00112eb8)();\n  return pvVar1;\n}\n\n", 
    "00109d80": "\nvoid FUN_00109d80(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109fa0();\n  }\n  return;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00112e28)();\n  return sVar1;\n}\n\n", 
    "001140f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103170": "\n/* WARNING: Removing unreachable block (ram,0x00103194) */\n/* WARNING: Removing unreachable block (ram,0x001031a0) */\n\nvoid FUN_00103170(void)\n\n{\n  return;\n}\n\n", 
    "00114048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001140f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00112e78)();\n  return pvVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_00112de8)();\n  return sVar1;\n}\n\n", 
    "00109140": "\nvoid FUN_00109140(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109120(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00114058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t iconv(iconv_t __cd,char **__inbuf,size_t *__inbytesleft,char **__outbuf,\n            size_t *__outbytesleft)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c170": "\nvoid FUN_0010c170(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00114178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102630": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00112e20)();\n  return;\n}\n\n", 
    "00114050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint toupper(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00112d90)();\n  return;\n}\n\n", 
    "00114170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a670": "\nulong FUN_0010a670(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n"
}