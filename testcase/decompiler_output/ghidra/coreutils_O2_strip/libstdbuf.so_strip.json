{
    "00101020": "\nvoid FUN_00101020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00104010)();\n  return;\n}\n\n", 
    "00105048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101120": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoul_00104048)();\n  return uVar1;\n}\n\n", 
    "00101000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00103fe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00103fe0)();\n  }\n  return;\n}\n\n", 
    "00105068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101100": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00104038)();\n  return pvVar1;\n}\n\n", 
    "00105000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101360": "\n/* WARNING: Removing unreachable block (ram,0x00101373) */\n/* WARNING: Removing unreachable block (ram,0x0010137f) */\n\nvoid FUN_00101360(void)\n\n{\n  return;\n}\n\n", 
    "00101140": "\nchar * FUN_00101140(int param_1)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = \"stdout\";\n  if (((param_1 != 1) && (pcVar1 = \"stderr\", param_1 != 2)) && (pcVar1 = \"unknown\", param_1 == 0)) {\n    pcVar1 = \"stdin\";\n  }\n  return pcVar1;\n}\n\n", 
    "00105040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010e0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00104028)();\n  return;\n}\n\n", 
    "001010c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_00104018)();\n  return pcVar1;\n}\n\n", 
    "00101410": "\nvoid thunk_FUN_00101390(void)\n\n{\n  FUN_00101390();\n  return;\n}\n\n", 
    "00101130": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00104050)();\n  return;\n}\n\n", 
    "00105038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101110": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_00104040)();\n  return iVar1;\n}\n\n", 
    "00105058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00101390": "\n/* WARNING: Removing unreachable block (ram,0x001013b4) */\n/* WARNING: Removing unreachable block (ram,0x001013c0) */\n\nvoid FUN_00101390(void)\n\n{\n  return;\n}\n\n", 
    "00101170": "\nundefined8 FUN_00101170(FILE *param_1,char *param_2)\n\n{\n  int iVar1;\n  ulong __size;\n  char *__buf;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 extraout_RAX;\n  undefined8 uStack_28;\n  \n  if (*param_2 == '0') {\n    __size = 0;\n    iVar1 = 2;\n    __buf = (char *)0x0;\n  }\n  else if (*param_2 == 'L') {\n    __size = 0;\n    iVar1 = 1;\n    __buf = (char *)0x0;\n  }\n  else {\n    __size = strtoul(param_2,(char **)0x0,10);\n    if (__size == 0) {\n      iVar1 = fileno(param_1);\n      uVar2 = FUN_00101140(iVar1);\n      uVar3 = dcgettext(0,\"invalid buffering mode %s for %s\\n\",5);\n      uVar2 = __fprintf_chk(*(undefined8 *)PTR_stderr_00103ff8,1,uVar3,param_2,uVar2,uStack_28);\n      return uVar2;\n    }\n    __buf = (char *)malloc(__size);\n    iVar1 = 0;\n    if (__buf == (char *)0x0) {\n      uVar2 = dcgettext(0,\"failed to allocate a %lu byte stdio buffer\\n\",5);\n      uVar2 = __fprintf_chk(*(undefined8 *)PTR_stderr_00103ff8,1,uVar2,__size);\n      return uVar2;\n    }\n  }\n  iVar1 = setvbuf(param_1,__buf,iVar1,__size);\n  if (iVar1 == 0) {\n    return uStack_28;\n  }\n  iVar1 = fileno(param_1);\n  uVar2 = FUN_00101140(iVar1);\n  uVar3 = dcgettext(0,\"could not set buffering of %s to mode %s\\n\",5);\n  __fprintf_chk(*(undefined8 *)PTR_stderr_00103ff8,1,uVar3,uVar2,param_2);\n  free(__buf);\n  return extraout_RAX;\n}\n\n", 
    "00105010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010141c": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001010b0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00103ff0)();\n  return;\n}\n\n", 
    "001012d0": "\nvoid FUN_001012d0(void)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  pcVar1 = getenv(\"_STDBUF_E\");\n  pcVar2 = getenv(\"_STDBUF_I\");\n  pcVar3 = getenv(\"_STDBUF_O\");\n  if (pcVar1 != (char *)0x0) {\n    FUN_00101170(*(undefined8 *)PTR_stderr_00103ff8,pcVar1);\n  }\n  if (pcVar2 != (char *)0x0) {\n    FUN_00101170(*(undefined8 *)PTR_stdin_00103fd8,pcVar2);\n  }\n  if (pcVar3 != (char *)0x0) {\n    FUN_00101170(*(undefined8 *)PTR_stdout_00103fd0,pcVar3);\n    return;\n  }\n  return;\n}\n\n", 
    "001013d0": "\nvoid FUN_001013d0(void)\n\n{\n  if (DAT_00104060 == '\\0') {\n    if (PTR___cxa_finalize_00103ff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00104058);\n    }\n    FUN_00101360();\n    DAT_00104060 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001010f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00104030)();\n  return iVar1;\n}\n\n", 
    "001010d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00104020)();\n  return;\n}\n\n", 
    "00105008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}