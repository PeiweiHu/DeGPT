{
    "00108d80": "\nvoid FUN_00108d80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108cf0(param_1,param_2,1);\n  return;\n}\n\n", 
    "00109d50": "\nvoid FUN_00109d50(void)\n\n{\n  return;\n}\n\n", 
    "00109b10": "\nchar * FUN_00109b10(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00108010": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108010(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00110080;\n  if (1 < DAT_00110078) {\n    ppvVar2 = (void **)(PTR_DAT_00110080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00110080 + (ulong)(DAT_00110078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00110520) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00110098 = &DAT_00110520;\n    _DAT_00110090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00110090) {\n    free(__ptr_00);\n    PTR_DAT_00110080 = &DAT_00110090;\n  }\n  DAT_00110078 = 1;\n  return;\n}\n\n", 
    "00108370": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108370(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00110620;\n  uStack_60 = uRam0000000000110628;\n  local_38 = DAT_00110650;\n  local_58 = _DAT_00110630;\n  uStack_50 = uRam0000000000110638;\n  local_48 = _DAT_00110640;\n  uStack_40 = uRam0000000000110648;\n  FUN_00107e50(&local_68);\n  FUN_00107bd0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001028d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getpagesize_0010ff70)();\n  return iVar1;\n}\n\n", 
    "00108490": "\nvoid FUN_00108490(undefined8 param_1)\n\n{\n  FUN_00108480(0,param_1);\n  return;\n}\n\n", 
    "001099b0": "\nint FUN_001099b0(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010fee0)();\n  return pvVar1;\n}\n\n", 
    "001039c0": "\nvoid FUN_001039c0(void)\n\n{\n  ulong uVar1;\n  undefined *puVar2;\n  char cVar3;\n  char cVar4;\n  size_t sVar5;\n  size_t sVar6;\n  void *__dest;\n  char *pcVar7;\n  void *pvVar8;\n  long lVar9;\n  size_t sVar10;\n  undefined8 uVar11;\n  long *plVar12;\n  long lVar13;\n  long lVar14;\n  long *plVar15;\n  \n  lVar9 = (long)DAT_001103b8;\n  pcVar7 = DAT_001103b0;\n  sVar10 = DAT_001103a8;\n  plVar15 = DAT_001102c0;\n  puVar2 = PTR_s_abcdefghijklmnopqrstuvwxyz_00110020;\n  cVar4 = DAT_00110018;\n  if (DAT_001103b8 != (void *)0x0) {\n    lVar14 = DAT_001103a8 - 1;\n    if (DAT_001103a8 != 0) {\n      plVar12 = DAT_001102c0 + lVar14;\n      do {\n        lVar13 = *plVar12 + 1;\n        *plVar12 = lVar13;\n        if ((lVar14 == 0) && (cVar4 != '\\0')) {\n          if (puVar2[*plVar15 + 1] == '\\0') goto LAB_00103a70;\n          cVar4 = puVar2[lVar13];\n          *pcVar7 = cVar4;\n          if (cVar4 != '\\0') {\n            return;\n          }\n          *plVar12 = 0;\n          *pcVar7 = *puVar2;\n          break;\n        }\n        cVar3 = puVar2[lVar13];\n        pcVar7[lVar14] = cVar3;\n        if (cVar3 != '\\0') {\n          return;\n        }\n        *plVar12 = 0;\n        plVar12 = plVar12 + -1;\n        pcVar7[lVar14] = *puVar2;\n        lVar14 = lVar14 + -1;\n      } while (lVar14 != -1);\n    }\n    uVar11 = dcgettext(0,\"output file suffixes exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n    error(1,0,uVar11);\n  }\nLAB_00103a70:\n  lVar14 = DAT_001102d8;\n  if (DAT_001102d8 == 0) {\n    sVar5 = strlen(DAT_001103c0);\n    sVar6 = 0;\n    DAT_001102d0 = sVar5;\n    if (DAT_00110398 != (char *)0x0) {\n      sVar6 = strlen(DAT_00110398);\n    }\n    DAT_001102d8 = sVar6 + sVar10 + sVar5;\n    DAT_001102c8 = sVar6;\n    if (DAT_001102d8 + 1U < sVar5) {\nLAB_00103c62:\n                    /* WARNING: Subroutine does not return */\n      FUN_00108e40();\n    }\n    __dest = (void *)FUN_00108c80(lVar9);\n    sVar10 = DAT_001102d0;\n    DAT_001103b8 = __dest;\n    memcpy(__dest,DAT_001103c0,DAT_001102d0);\n    pcVar7 = PTR_s_abcdefghijklmnopqrstuvwxyz_00110020;\n    plVar15 = DAT_001102c0;\n  }\n  else {\n    DAT_001103a8 = sVar10 + 1;\n    lVar13 = DAT_001102d8 + 2;\n    uVar1 = DAT_001102d8 + 3;\n    DAT_001102d8 = lVar13;\n    if (uVar1 < DAT_001102d0) goto LAB_00103c62;\n    __dest = (void *)FUN_00108c80(lVar9);\n    plVar15 = DAT_001102c0;\n    pcVar7 = PTR_s_abcdefghijklmnopqrstuvwxyz_00110020;\n    sVar10 = DAT_001102d0 + 1;\n    puVar2 = (undefined *)((long)__dest + DAT_001102d0);\n    DAT_001102d0 = sVar10;\n    DAT_001103b8 = __dest;\n    *puVar2 = PTR_s_abcdefghijklmnopqrstuvwxyz_00110020[*DAT_001102c0];\n  }\n  sVar5 = DAT_001103a8;\n  DAT_001103b0 = (char *)((long)__dest + sVar10);\n  pvVar8 = memset(DAT_001103b0,(int)*pcVar7,DAT_001103a8);\n  if (DAT_00110398 != (char *)0x0) {\n    memcpy((void *)((long)pvVar8 + sVar5),DAT_00110398,DAT_001102c8);\n  }\n  *(undefined *)((long)__dest + DAT_001102d8) = 0;\n  free(plVar15);\n  lVar9 = FUN_00108db0(sVar5,8);\n  pcVar7 = DAT_001103a0;\n  DAT_001102c0 = (long *)lVar9;\n  if (DAT_001103a0 != (char *)0x0) {\n    if (lVar14 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! widen\",\"src/split.c\",0x198,\"next_file_name\");\n    }\n    sVar10 = strlen(DAT_001103a0);\n    lVar13 = DAT_001103a8 * 8;\n    memcpy((void *)((DAT_001103a8 - sVar10) + (long)DAT_001103b0),pcVar7,sVar10);\n    lVar14 = sVar10 - 1;\n    if (sVar10 != 0) {\n      do {\n        *(long *)(lVar13 + sVar10 * -8 + lVar9 + lVar14 * 8) = (long)(pcVar7[lVar14] + -0x30);\n        lVar14 = lVar14 + -1;\n      } while (lVar14 != -1);\n      return;\n    }\n  }\n  return;\n}\n\n", 
    "001065b0": "\nundefined8\nFUN_001065b0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106500(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00109ce0": "\nvoid FUN_00109ce0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001043d0": "\nundefined8 FUN_001043d0(long param_1,long param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  int iVar2;\n  int *piVar3;\n  long lVar4;\n  FILE *pFVar5;\n  undefined8 uVar6;\n  undefined8 *puVar7;\n  undefined8 uVar8;\n  undefined8 *puVar9;\n  bool bVar10;\n  \n  puVar9 = (undefined8 *)(param_2 * 0x20 + param_1);\n  uVar6 = 0;\n  if (-1 < *(int *)(puVar9 + 1)) {\n    return 0;\n  }\n  lVar4 = param_2 + -1;\n  if (param_2 == 0) {\n    lVar4 = param_3 + -1;\n  }\n  uVar8 = *puVar9;\n  if (*(int *)(puVar9 + 1) == -1) goto LAB_001044bb;\n  do {\n    iVar2 = FUN_00105fc0(uVar8,0xc01);\n    while( true ) {\n      if (-1 < iVar2) {\n        *(int *)(puVar9 + 1) = iVar2;\n        pFVar5 = fdopen(iVar2,\"a\");\n        puVar9[2] = pFVar5;\n        uVar1 = DAT_001104f8;\n        if (pFVar5 != (FILE *)0x0) {\n          DAT_001104f8 = 0;\n          *(undefined4 *)(puVar9 + 3) = uVar1;\n          return uVar6;\n        }\n        uVar6 = FUN_001082d0(0,3,*puVar9);\n        piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar6);\n      }\n      piVar3 = __errno_location();\n      if (1 < *piVar3 - 0x17U) {\n        uVar6 = FUN_001082d0(0,3,*puVar9);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar6);\n      }\n      while (puVar7 = (undefined8 *)(lVar4 * 0x20 + param_1), *(int *)(puVar7 + 1) < 0) {\n        bVar10 = lVar4 == 0;\n        lVar4 = lVar4 + -1;\n        if (bVar10) {\n          lVar4 = param_3 + -1;\n        }\n        if (lVar4 == param_2) {\n          uVar6 = FUN_001082d0(0,3,*puVar9);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar3,\"%s\",uVar6);\n        }\n      }\n      iVar2 = FUN_001093a0(puVar7[2]);\n      if (iVar2 != 0) {\n        uVar6 = FUN_001082d0(0,3,*puVar7);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar6);\n      }\n      *(undefined4 *)(puVar7 + 1) = 0xfffffffe;\n      iVar2 = *(int *)(puVar9 + 1);\n      puVar7[2] = 0;\n      uVar8 = *puVar9;\n      uVar6 = 1;\n      if (iVar2 != -1) break;\nLAB_001044bb:\n      iVar2 = FUN_00103cc0();\n    }\n  } while( true );\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_0010fe88)();\n  return pvVar1;\n}\n\n", 
    "001080b0": "\nvoid FUN_001080b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00107bd0(param_1,param_2,0xffffffffffffffff,&DAT_00110620);\n  return;\n}\n\n", 
    "001081d0": "\nvoid FUN_001081d0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00108100(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint execl(char *__path,char *__arg,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_execl_0010ffa8)();\n  return iVar1;\n}\n\n", 
    "00102820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0010ff18)();\n  return pFVar1;\n}\n\n", 
    "00106500": "\nundefined8\nFUN_00106500(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106450(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106740": "\nundefined8\nFUN_00106740(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106670(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00108d90": "\nvoid FUN_00108d90(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00108c20();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00108c70": "\nvoid thunk_FUN_00108c20(void)\n\n{\n  FUN_00108c20();\n  return;\n}\n\n", 
    "00109d60": "\nvoid FUN_00109d60(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00110008);\n  return;\n}\n\n", 
    "00108a30": "\nvoid FUN_00108a30(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_001085e0();\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010fd78)();\n  return;\n}\n\n", 
    "00108000": "\nvoid FUN_00108000(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00107f10(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00108480": "\nvoid FUN_00108480(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108460(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001098a0": "\nulong FUN_001098a0(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001028c0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010ff68)();\n  return;\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010fed8)();\n  return iVar1;\n}\n\n", 
    "00105f30": "\nchar * FUN_00105f30(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "00108ae0": "\nvoid FUN_00108ae0(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00108a50();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010ff10)();\n  return pvVar1;\n}\n\n", 
    "00102930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010ffa0)();\n  return iVar1;\n}\n\n", 
    "00102970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_fork_0010ffc0)();\n  return _Var1;\n}\n\n", 
    "00108e80": "\nulong FUN_00108e80(undefined8 param_1,undefined4 param_2,ulong param_3,ulong param_4,\n                  undefined8 param_5,undefined8 param_6,int param_7)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00109010(param_1,0,param_2,&local_48);\n  if (iVar1 == 0) {\n    if ((param_3 <= local_48) && (local_48 <= param_4)) {\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return local_48;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    piVar2 = __errno_location();\n    *piVar2 = (-(uint)(local_48 < 0x40000000) & 0xffffffd7) + 0x4b;\n  }\n  else {\n    piVar2 = __errno_location();\n    if (iVar1 == 1) {\n      *piVar2 = 0x4b;\n    }\n    else if (iVar1 == 3) {\n      *piVar2 = 0;\n    }\n  }\n  uVar3 = FUN_00108490(param_1);\n  iVar1 = *piVar2;\n  if (iVar1 == 0x16) {\n    iVar1 = 0;\n  }\n  if (param_7 == 0) {\n    param_7 = 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  error(param_7,iVar1,\"%s: %s\",param_6,uVar3);\n}\n\n", 
    "00108c40": "\nvoid FUN_00108c40(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00108c20();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00108e40();\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010fef0)();\n  return pcVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0010fe60)();\n  return;\n}\n\n", 
    "001028f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010ff80)();\n  return;\n}\n\n", 
    "00108cf0": "\nvoid FUN_00108cf0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00108d4b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00108d4b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00108e40(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00108c80(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00111098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109450": "\nvoid FUN_00109450(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00109430(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00102960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaddset_0010ffb8)();\n  return iVar1;\n}\n\n", 
    "001080d0": "\nvoid FUN_001080d0(void)\n\n{\n  FUN_00107bd0();\n  return;\n}\n\n", 
    "00111090": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102840": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010ff28)();\n  return;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010fe98)();\n  return iVar1;\n}\n\n", 
    "00102600": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010fe08)();\n  return;\n}\n\n", 
    "001028e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmin(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___libc_current_sigrtmin_0010ff78)();\n  return iVar1;\n}\n\n", 
    "001027c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010fee8)();\n  return iVar1;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010fe58)();\n  return _Var1;\n}\n\n", 
    "001081e0": "\nvoid FUN_001081e0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108160(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102950": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010ffb0)();\n  return iVar1;\n}\n\n", 
    "00102830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010ff20)();\n  return pcVar1;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0010fe90)();\n  return sVar1;\n}\n\n", 
    "00109900": "\nulong FUN_00109900(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00106830": "\nundefined8\nFUN_00106830(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00106740(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0010fdd0)();\n  return iVar1;\n}\n\n", 
    "001029b4": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_00108688::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108f80": "\nvoid FUN_00108f80(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,undefined8 param_6)\n\n{\n  FUN_00108e80(param_1,10,param_2,param_3,param_4,param_5,param_6);\n  return;\n}\n\n", 
    "00104890": "\nundefined8 FUN_00104890(char param_1,ulong param_2,ulong param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  \n  if (param_1 != '\\0') {\n    if (((param_2 | param_3) == 0) && (DAT_001102e1 != '\\0')) {\n      return 1;\n    }\n    FUN_001045d0(0,DAT_00110014,DAT_001104f8,DAT_001103b8);\n    FUN_001039c0();\n    DAT_00110014 = FUN_00103cc0(DAT_001103b8);\n    if (DAT_00110014 < 0) {\n      uVar4 = FUN_001082d0(0,3,DAT_001103b8);\n      piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar3,\"%s\",uVar4);\n    }\n  }\n  uVar2 = FUN_001060c0(DAT_00110014,param_2,param_3);\n  if (uVar2 == param_3) {\n    return 1;\n  }\n  piVar3 = __errno_location();\n  cVar1 = FUN_00103710(*piVar3);\n  if (cVar1 != '\\0') {\n    return 0;\n  }\n  uVar4 = FUN_001082d0(0,3,DAT_001103b8);\n                    /* WARNING: Subroutine does not return */\n  error(1,*piVar3,\"%s\",uVar4);\n}\n\n", 
    "00103680": "\nvoid FUN_00103680(void)\n\n{\n  if (DAT_001102a8 == '\\0') {\n    if (PTR___cxa_finalize_0010fff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00110008);\n    }\n    FUN_00103610();\n    DAT_001102a8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00108c20": "\nvoid FUN_00108c20(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00108e40();\n  }\n  return;\n}\n\n", 
    "00107bd0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00107bd0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00110080;\n  if (DAT_00110078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00108e40();\n    }\n    if (PTR_DAT_00110080 == &DAT_00110090) {\n      puVar8 = (undefined4 *)FUN_00108c80(0);\n      uVar6 = PTR_DAT_00110098._4_4_;\n      uVar5 = PTR_DAT_00110098._0_4_;\n      uVar3 = _UNK_00110094;\n      PTR_DAT_00110080 = (undefined *)puVar8;\n      *puVar8 = _DAT_00110090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00108c80(PTR_DAT_00110080);\n      PTR_DAT_00110080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00110078 * 4,0,(long)((param_1 + 1) - DAT_00110078) << 4);\n    DAT_00110078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00106a10(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00110520) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00108c20(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00106a10(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00111188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001045d0": "\nvoid FUN_001045d0(long param_1,int param_2,int param_3,undefined8 param_4)\n\n{\n  uint uVar1;\n  char cVar2;\n  int iVar3;\n  __pid_t _Var4;\n  int *piVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  long lVar9;\n  uint uVar10;\n  long in_FS_OFFSET;\n  uint local_4c;\n  undefined local_48 [24];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    if (param_2 < 0) goto LAB_00104661;\n    iVar3 = close(param_2);\n    if (iVar3 < 0) {\n      uVar8 = FUN_001082d0(0,3,param_4);\n      piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar5,\"%s\",uVar8);\n    }\n  }\n  else {\n    iVar3 = FUN_001093a0();\n    if (iVar3 != 0) {\n      piVar5 = __errno_location();\n      cVar2 = FUN_00103710(*piVar5);\n      if (cVar2 == '\\0') {\n        uVar8 = FUN_001082d0(0,3,param_4);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar5,\"%s\",uVar8);\n      }\n    }\n    if (param_2 < 0) goto LAB_00104661;\n  }\n  if (DAT_001104e0 != 0) {\n    lVar9 = 0;\n    piVar5 = DAT_001104f0;\n    do {\n      if (*piVar5 == param_2) {\n        DAT_001104e0 = DAT_001104e0 + -1;\n        *piVar5 = DAT_001104f0[DAT_001104e0];\n        break;\n      }\n      lVar9 = lVar9 + 1;\n      piVar5 = piVar5 + 1;\n    } while (DAT_001104e0 != lVar9);\n  }\nLAB_00104661:\n  if (0 < param_3) {\n    local_4c = 0;\n    _Var4 = waitpid(param_3,(int *)&local_4c,0);\n    if (_Var4 == -1) {\n      piVar5 = __errno_location();\n      if (*piVar5 != 10) {\n        uVar8 = dcgettext(0,\"waiting for child process\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar5,uVar8);\n      }\n    }\n    uVar1 = local_4c;\n    uVar8 = DAT_00110500;\n    uVar10 = local_4c & 0x7f;\n    if ((char)((char)uVar10 + '\\x01') < '\\x02') {\n      if (uVar10 != 0) {\n        uVar8 = dcgettext(0,\"unknown status from command (0x%X)\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar8,uVar1);\n      }\n      cVar2 = (char)(local_4c >> 8);\n      if (cVar2 != '\\0') {\n        uVar6 = FUN_001082d0(0,3,param_4);\n        uVar7 = dcgettext(0,\"with FILE=%s, exit %d from command: %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(cVar2,0,uVar7,uVar6,cVar2,uVar8);\n      }\n    }\n    else if (uVar10 != 0xd) {\n      iVar3 = FUN_00109740(uVar10,local_48);\n      if (iVar3 != 0) {\n        __sprintf_chk(local_48,1,0x13,&DAT_0010ada3,uVar10);\n      }\n      uVar8 = DAT_00110500;\n      uVar6 = FUN_001082d0(0,3,param_4);\n      uVar7 = dcgettext(0,\"with FILE=%s, signal %s from command: %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(uVar10 + 0x80,0,uVar7,uVar6,local_48,uVar8);\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108df0": "\nvoid FUN_00108df0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00108c20(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00111198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109430": "\nvoid FUN_00109430(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_00109490(param_1,0,1);\n  return;\n}\n\n", 
    "001082b0": "\nvoid FUN_001082b0(undefined8 param_1)\n\n{\n  FUN_00108290(param_1,0x3a);\n  return;\n}\n\n", 
    "00102900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010ff88)();\n  return sVar1;\n}\n\n", 
    "00111190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaction_0010fdc8)();\n  return iVar1;\n}\n\n", 
    "00108200": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108200(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00110620;\n  uStack_40 = uRam0000000000110628;\n  local_38 = _DAT_00110630;\n  uStack_30 = uRam0000000000110638;\n  local_28 = _DAT_00110640;\n  uStack_20 = uRam0000000000110648;\n  local_18 = DAT_00110650;\n  FUN_00107df0(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00107bd0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103790": "\nvoid FUN_00103790(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\\nUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001029a5": "\nvoid switchD_00106aaf::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001029a0": "\nvoid FUN_001029a0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106140": "\nchar * FUN_00106140(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00108440": "\nvoid FUN_00108440(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00108370(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00111078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106260": "\nint * FUN_00106260(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104e00": "\nvoid FUN_00104e00(ulong param_1,long param_2,ulong param_3,ulong param_4,ulong param_5)\n\n{\n  __off_t _Var1;\n  undefined8 uVar2;\n  int *piVar3;\n  bool bVar4;\n  byte bVar5;\n  long lVar6;\n  ulong __offset;\n  ulong uVar7;\n  bool bVar8;\n  \n  uVar7 = 0;\n  bVar5 = 1;\n  bVar4 = true;\n  __offset = param_1;\n  if (param_4 == 0xffffffffffffffff) goto LAB_00104ed7;\n  bVar8 = param_4 < param_3;\n  if (param_4 < param_1) goto LAB_00104f0f;\n  do {\n    lVar6 = param_2;\n    do {\n      bVar5 = bVar5 | bVar4;\n      if (bVar5 != 0) {\n        bVar5 = FUN_00104890(bVar4,lVar6,__offset);\n      }\n      uVar7 = uVar7 + bVar4;\n      bVar4 = uVar7 < param_5 || param_5 == 0;\n      if ((uVar7 >= param_5 && param_5 != 0) && (bVar5 == 0)) {\n        return;\n      }\n      param_4 = param_4 - __offset;\n      lVar6 = lVar6 + __offset;\n      __offset = param_1;\n    } while (param_1 <= param_4);\n    if (param_4 != 0) goto LAB_00104f48;\n    while( true ) {\n      if (bVar8) {\n        if (param_5 <= uVar7) {\n          return;\n        }\n        do {\n          uVar7 = uVar7 + 1;\n          FUN_00104890(1,0,0);\n        } while (param_5 != uVar7);\n        return;\n      }\nLAB_00104ed7:\n      if ((bVar5 == 0) && (_Var1 = lseek(0,__offset,1), _Var1 != -1)) {\n        bVar4 = true;\n        __offset = param_1;\n      }\n      param_4 = FUN_001084a0(0,param_2,param_3);\n      if (param_4 == 0xffffffffffffffff) {\n        uVar2 = FUN_001082d0(0,3,DAT_00110390);\n        piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar2);\n      }\n      bVar8 = param_4 == 0;\n      if (__offset <= param_4) break;\nLAB_00104f0f:\n      if (param_4 != 0) {\n        lVar6 = param_2;\n        if ((bVar5 | bVar4) == 0) {\n          bVar5 = 0;\n          bVar4 = param_5 == uVar7;\n          if (bVar4) {\n            return;\n          }\n        }\n        else {\nLAB_00104f48:\n          bVar5 = FUN_00104890(bVar4,lVar6,param_4);\n          uVar7 = uVar7 + bVar4;\n          bVar4 = (bool)(param_5 == uVar7 & (bVar5 ^ 1));\n          if (bVar4 != false) {\n            return;\n          }\n        }\n        __offset = __offset - param_4;\n      }\n    }\n  } while( true );\n}\n\n", 
    "00111088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a50": "\nvoid FUN_00105a50(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x10ae50;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010add6;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 6;\n    pbVar7 = (byte *)\"split\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"split\";\n        goto LAB_00105c6e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"split\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"split\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_00105c6e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"split\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"split\");\n    if (pcVar4 != \"split\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001060c0": "\nlong FUN_001060c0(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = FUN_00108510(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0x1c;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n", 
    "00111080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001110f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108e40": "\nvoid FUN_00108e40(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(DAT_00110030,0,\"%s\",uVar1);\n}\n\n", 
    "00111168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108470": "\nvoid FUN_00108470(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108460(0,param_1,param_2);\n  return;\n}\n\n", 
    "001028b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_0010ff60)();\n  return uVar1;\n}\n\n", 
    "00111050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmax(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___libc_current_sigrtmax_0010ff98)();\n  return iVar1;\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_0010ff08)();\n  return sVar1;\n}\n\n", 
    "001082d0": "\nvoid FUN_001082d0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106260(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00107df0(puVar1,0x3a,1);\n  FUN_00107bd0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001110f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010ffe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010ffe8)();\n  }\n  return;\n}\n\n", 
    "00103cc0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_00103cc0(char *param_1)\n\n{\n  long lVar1;\n  int iVar2;\n  __pid_t _Var3;\n  int iVar4;\n  char *__path;\n  char *__arg;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  ulong uVar8;\n  long in_FS_OFFSET;\n  int local_b8;\n  int iStack_b4;\n  long local_b0;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_00110500 == 0) {\n    if (DAT_001102e2 != '\\0') {\n      uVar6 = FUN_001081d0(4,param_1);\n      uVar5 = dcgettext(0,\"creating file %s\\n\",5);\n      __fprintf_chk(stdout,1,uVar5,uVar6);\n    }\n    iVar2 = FUN_00105fc0(param_1,0x41,0x1b6);\n    if (-1 < iVar2) {\n      iVar4 = FUN_00109d80(iVar2);\n      if (iVar4 != 0) {\n        uVar6 = FUN_001081d0(4,param_1);\n        uVar5 = dcgettext(0,\"failed to stat %s\",5);\n        piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar7,uVar5,uVar6);\n      }\n      if ((_DAT_00110308 == local_b0) && (_DAT_00110300 == CONCAT44(iStack_b4,local_b8))) {\n        uVar6 = FUN_001081d0(4,param_1);\n        uVar5 = dcgettext(0,\"%s would overwrite input; aborting\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar5,uVar6);\n      }\n      iVar4 = ftruncate(iVar2,0);\n      if (iVar4 != 0) {\n        uVar6 = FUN_001082d0(0,3,param_1);\n        uVar5 = dcgettext(0,\"%s: error truncating\",5);\n        piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar7,uVar5,uVar6);\n      }\n    }\n  }\n  else {\n    __path = getenv(\"SHELL\");\n    if (__path == (char *)0x0) {\n      __path = \"/bin/sh\";\n    }\n    iVar2 = setenv(\"FILE\",param_1,1);\n    if (iVar2 != 0) {\n      uVar6 = dcgettext(0,\"failed to set FILE environment variable\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar6);\n    }\n    if (DAT_001102e2 != '\\0') {\n      uVar6 = FUN_001082d0(0,3,param_1);\n      uVar5 = dcgettext(0,\"executing with FILE=%s\\n\",5);\n      __fprintf_chk(stdout,1,uVar5,uVar6);\n    }\n    iVar2 = pipe(&local_b8);\n    if (iVar2 != 0) {\n      uVar6 = dcgettext(0,\"failed to create pipe\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar6);\n    }\n    _Var3 = fork();\n    if (_Var3 == 0) {\n      uVar8 = 0;\n      if (DAT_001104e0 != 0) {\n        do {\n          iVar2 = close(*(int *)(DAT_001104f0 + uVar8 * 4));\n          if (iVar2 != 0) {\n            uVar6 = dcgettext(0,\"closing prior pipe\",5);\n            piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n            error(1,*piVar7,uVar6);\n          }\n          uVar8 = uVar8 + 1;\n        } while (uVar8 < DAT_001104e0);\n      }\n      iVar2 = close(iStack_b4);\n      piVar7 = __errno_location();\n      if (iVar2 != 0) {\n        uVar6 = dcgettext(0,\"closing output pipe\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar7,uVar6);\n      }\n      if (local_b8 != 0) {\n        iVar2 = dup2(local_b8,0);\n        if (iVar2 != 0) {\n          uVar6 = dcgettext(0,\"moving input pipe\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar7,uVar6);\n        }\n        iVar2 = close(local_b8);\n        if (iVar2 != 0) {\n          uVar6 = dcgettext(0,\"closing input pipe\",5);\n                    /* WARNING: Subroutine does not return */\n          error(1,*piVar7,uVar6);\n        }\n      }\n      sigprocmask(2,(sigset_t *)&DAT_00110460,(sigset_t *)0x0);\n      lVar1 = DAT_00110500;\n      __arg = (char *)FUN_00105f30(__path);\n      execl(__path,__arg,&DAT_0010ad4f,lVar1,0);\n      uVar6 = dcgettext(0,\"failed to run command: \\\"%s -c %s\\\"\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar6,__path,lVar1);\n    }\n    if (_Var3 == -1) {\n      uVar6 = dcgettext(0,\"fork system call failed\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar6);\n    }\n    iVar2 = close(local_b8);\n    if (iVar2 != 0) {\n      uVar6 = dcgettext(0,\"failed to close input pipe\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar6);\n    }\n    DAT_001104f8 = _Var3;\n    if (DAT_001104e0 == _DAT_001104e8) {\n      DAT_001104f0 = FUN_00108cf0(DAT_001104f0,&DAT_001104e8,4);\n    }\n    lVar1 = DAT_001104e0 * 4;\n    DAT_001104e0 = DAT_001104e0 + 1;\n    *(int *)(DAT_001104f0 + lVar1) = iStack_b4;\n    iVar2 = iStack_b4;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105fc0": "\nvoid FUN_00105fc0(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  FUN_00108580(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108100": "\nvoid FUN_00108100(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106260(auStack_58);\n  FUN_00107bd0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001028a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010ff58)();\n  return iVar1;\n}\n\n", 
    "001093a0": "\nint FUN_001093a0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010940f;\n    }\n    iVar1 = FUN_00109450(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010940f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00111058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108460": "\nvoid FUN_00108460(void)\n\n{\n  FUN_00107bd0();\n  return;\n}\n\n", 
    "00106040": "\nint FUN_00106040(int param_1,char *param_2,int param_3,uint param_4)\n\n{\n  int iVar1;\n  int __fd;\n  int iVar2;\n  int *piVar3;\n  \n  __fd = open(param_2,param_3,(ulong)param_4);\n  if ((param_1 != __fd) && (-1 < __fd)) {\n    iVar2 = dup2(__fd,param_1);\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    close(__fd);\n    *piVar3 = iVar1;\n    return iVar2;\n  }\n  return __fd;\n}\n\n", 
    "00108580": "\nuint FUN_00108580(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00109b50();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00111178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029c0": "\nundefined8 FUN_001029c0(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  uint uVar4;\n  int iVar5;\n  int iVar6;\n  char *pcVar7;\n  ushort **ppuVar8;\n  size_t sVar9;\n  ulong uVar10;\n  undefined8 uVar11;\n  undefined8 uVar12;\n  int *piVar13;\n  ushort *puVar14;\n  long lVar15;\n  ulong uVar16;\n  int iVar17;\n  long extraout_RDX;\n  int iVar18;\n  char *pcVar19;\n  char *pcVar20;\n  ulong uVar21;\n  long in_FS_OFFSET;\n  byte bVar22;\n  ulong local_120;\n  uint local_118;\n  long local_108;\n  ulong local_100;\n  sigaction local_f8;\n  undefined local_58 [24];\n  long local_40;\n  \n  bVar22 = 0;\n  iVar18 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar3 = getpagesize();\n  local_108 = 0;\n  local_100 = 0;\n  FUN_001061a0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_00109d60(FUN_00105e80);\n  DAT_00110390 = (char *)FUN_00103700(&DAT_0010ad85);\n  DAT_001103c0 = FUN_00103700(\"x\");\n  local_118 = 0;\n  local_120 = 0;\n  iVar6 = DAT_00110010;\n  pcVar19 = DAT_00110398;\nLAB_00102a90:\n  DAT_00110398 = pcVar19;\n  DAT_00110010 = iVar6;\n  uVar4 = optind;\n  if (optind == 0) {\n    uVar4 = 1;\n  }\n  pcVar19 = (char *)(ulong)uVar4;\n  iVar5 = getopt_long(param_1,param_2,\"0123456789C:a:b:del:n:t:ux\",&PTR_s_bytes_0010f900,0);\n  pcVar20 = optarg;\n  if (iVar5 == -1) {\n    if ((local_108 != 0) && (DAT_00110500 != (char *)0x0)) {\n      pcVar19 = \"--filter does not process a chunk extracted to stdout\";\n      goto LAB_00103204;\n    }\n    if (iVar18 == 0) {\n      local_100 = 1000;\n      iVar18 = 3;\n    }\n    else if (local_100 == 0) {\n      uVar12 = FUN_00108490(&DAT_0010b218);\n      uVar11 = dcgettext(0,\"invalid number of lines\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,\"%s: %s\",uVar11,uVar12);\n    }\n    if (DAT_00110010 < 0) {\n      DAT_00110010 = 10;\n    }\n    FUN_00103850(local_100,iVar18);\n    uVar4 = optind;\n    if ((int)optind < param_1) {\n      lVar15 = (long)(int)optind;\n      DAT_00110390 = (char *)param_2[lVar15];\n      uVar4 = optind + 1;\n      if ((int)(optind + 1) < param_1) {\n        DAT_001103c0 = param_2[lVar15 + 1];\n        optind = optind + 2;\n        uVar4 = optind;\n        if ((int)optind < param_1) {\n          uVar12 = FUN_00108490(param_2[lVar15 + 2]);\n          pcVar19 = \"extra operand %s\";\n          goto LAB_001033fe;\n        }\n      }\n    }\n    optind = uVar4;\n    pcVar20 = DAT_00110390;\n    if (DAT_001103a0 == (char *)0x0) goto LAB_00102fe7;\n    uVar16 = 0xffffffffffffffff;\n    pcVar19 = DAT_001103a0;\n    goto code_r0x00102fc7;\n  }\n  if (0x83 < iVar5) {\nswitchD_00102af4_caseD_a:\n    FUN_00105cf0();\n    goto switchD_001030f3_caseD_3;\n  }\n  if (iVar5 < 0x30) {\n    if (iVar5 == -0x83) {\n      FUN_00108ae0(stdout,\"split\",\"GNU coreutils\",PTR_DAT_00110028,\"Torbjorn Granlund\",\n                   \"Richard M. Stallman\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (iVar5 != -0x82) goto switchD_00102af4_caseD_a;\n    FUN_00105cf0(0);\nLAB_00102ee2:\n    iVar18 = 5;\n    iVar6 = strncmp(pcVar19,\"l/\",2);\n    if (iVar6 == 0) {\n      optarg = pcVar19 + 2;\n      iVar18 = 6;\n    }\nLAB_00102c3e:\n    pcVar19 = strchr(optarg,0x2f);\n    if (pcVar19 == (char *)0x0) {\n      uVar12 = dcgettext(0,\"invalid number of chunks\",5);\n      local_100 = FUN_00108f80(optarg,1,0xffffffffffffffff,\"\",uVar12,0);\n      iVar6 = DAT_00110010;\n      pcVar19 = DAT_00110398;\n    }\n    else {\n      FUN_001037c0(&local_108,&local_100,pcVar19);\n      iVar6 = DAT_00110010;\n      pcVar19 = DAT_00110398;\n    }\n    goto LAB_00102a90;\n  }\n  iVar17 = iVar5 + -0x30;\n  iVar6 = DAT_00110010;\n  pcVar19 = DAT_00110398;\n  switch(iVar17) {\n  case 0:\n  case 1:\n  case 2:\n  case 3:\n  case 4:\n  case 5:\n  case 6:\n  case 7:\n  case 8:\n  case 9:\n    if (iVar18 == 0) {\nLAB_00102d7c:\n      uVar16 = (ulong)iVar17;\n    }\n    else {\n      if (iVar18 != 4) break;\n      if ((local_118 != 0) && (local_118 != uVar4)) goto LAB_00102d7c;\n      if ((0x1999999999999999 < local_100) ||\n         (uVar16 = (long)iVar17 + local_100 * 10, uVar16 < local_100)) {\n        uVar12 = FUN_00106140(local_100,local_58);\n        uVar11 = dcgettext(0,\"line count option -%s%c... is too large\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar11,uVar12,iVar5);\n      }\n    }\n    iVar18 = 4;\n    local_118 = uVar4;\n    local_100 = uVar16;\n    goto LAB_00102a90;\n  default:\n    goto switchD_00102af4_caseD_a;\n  case 0x13:\n    if (iVar18 == 0) {\n      iVar18 = 2;\n      uVar12 = dcgettext(0,\"invalid number of bytes\",5);\n      local_100 = FUN_00108f80(optarg,1,0x7fffffffffffffff,\"bEGKkMmPTYZ0\",uVar12,0);\n      iVar6 = DAT_00110010;\n      pcVar19 = DAT_00110398;\n      goto LAB_00102a90;\n    }\n    break;\n  case 0x31:\n    uVar12 = dcgettext(0,\"invalid suffix length\",5);\n    DAT_001103a8 = FUN_00108f80(optarg,0,0x1fffffffffffffff,\"\",uVar12,0);\n    iVar6 = DAT_00110010;\n    pcVar19 = DAT_00110398;\n    goto LAB_00102a90;\n  case 0x32:\n    if (iVar18 == 0) {\n      iVar18 = 1;\n      uVar12 = dcgettext(0,\"invalid number of bytes\",5);\n      local_100 = FUN_00108f80(optarg,1,0x7fffffffffffffff,\"bEGKkMmPTYZ0\",uVar12,0);\n      iVar6 = DAT_00110010;\n      pcVar19 = DAT_00110398;\n      goto LAB_00102a90;\n    }\n    break;\n  case 0x34:\n  case 0x48:\n    pcVar7 = \"0123456789\";\n    if (iVar5 != 100) {\n      pcVar7 = \"0123456789abcdef\";\n    }\n    PTR_s_abcdefghijklmnopqrstuvwxyz_00110020 = pcVar7;\n    if (optarg != (char *)0x0) {\n      uVar16 = 0xffffffffffffffff;\n      pcVar19 = optarg;\n      do {\n        if (uVar16 == 0) break;\n        uVar16 = uVar16 - 1;\n        cVar1 = *pcVar19;\n        pcVar19 = pcVar19 + (ulong)bVar22 * -2 + 1;\n      } while (cVar1 != '\\0');\n      sVar9 = strspn(optarg,pcVar7);\n      if (~uVar16 - 1 != sVar9) {\n        uVar12 = FUN_00108490(pcVar20);\n        pcVar19 = \"%s: invalid start value for hexadecimal suffix\";\n        if (iVar5 != 100) goto LAB_001033fe;\n        uVar11 = dcgettext(0,\"%s: invalid start value for numerical suffix\",5);\n        goto LAB_00103408;\n      }\n      while ((iVar6 = DAT_00110010, pcVar19 = DAT_00110398, DAT_001103a0 = pcVar20, *pcVar20 == '0'\n             && (pcVar20[1] != '\\0'))) {\n        pcVar20 = pcVar20 + 1;\n        optarg = pcVar20;\n      }\n    }\n    goto LAB_00102a90;\n  case 0x35:\n    DAT_001102e1 = 1;\n    goto LAB_00102a90;\n  case 0x3c:\n    if (iVar18 == 0) {\n      iVar18 = 3;\n      uVar12 = dcgettext(0,\"invalid number of lines\",5);\n      local_100 = FUN_00108f80(optarg,1,0xffffffffffffffff,\"\",uVar12,0);\n      iVar6 = DAT_00110010;\n      pcVar19 = DAT_00110398;\n      goto LAB_00102a90;\n    }\n    break;\n  case 0x3e:\n    if (iVar18 == 0) {\n      ppuVar8 = __ctype_b_loc();\n      puVar14 = *ppuVar8;\n      pcVar20 = optarg;\n      do {\n        optarg = pcVar20;\n        pcVar19 = optarg;\n        bVar2 = FUN_001036d0((int)*optarg);\n        pcVar20 = (char *)(extraout_RDX + 1);\n      } while ((*(byte *)((long)puVar14 + (ulong)bVar2 * 2 + 1) & 0x20) != 0);\n      if ((*pcVar19 != 'r') || (pcVar19[1] != '/')) goto LAB_00102ee2;\n      optarg = pcVar19 + 2;\n      iVar18 = 7;\n      goto LAB_00102c3e;\n    }\n    break;\n  case 0x44:\n    iVar6 = (int)*optarg;\n    if (*optarg == '\\0') {\n      uVar12 = dcgettext(0,\"empty record separator\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar12);\n    }\n    if (optarg[1] != '\\0') {\n      iVar6 = strcmp(optarg,\"\\\\0\");\n      if (iVar6 != 0) {\n        uVar12 = FUN_00108490(pcVar20);\n        uVar11 = dcgettext(0,\"multi-character separator %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(1,0,uVar11,uVar12);\n      }\n      iVar6 = 0;\n    }\n    pcVar19 = DAT_00110398;\n    if ((-1 < DAT_00110010) && (DAT_00110010 != iVar6)) {\n      uVar12 = dcgettext(0,\"multiple separator characters specified\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar12);\n    }\n    goto LAB_00102a90;\n  case 0x45:\n    DAT_001102e0 = 1;\n    goto LAB_00102a90;\n  case 0x50:\n    DAT_001102e2 = 1;\n    goto LAB_00102a90;\n  case 0x51:\n    DAT_00110500 = optarg;\n    goto LAB_00102a90;\n  case 0x52:\n    uVar12 = dcgettext(0,\"invalid IO block size\",5);\n    local_120 = FUN_00108f80(optarg,1,~(long)iVar3,\"bEGKkMmPTYZ0\",uVar12,0);\n    iVar6 = DAT_00110010;\n    pcVar19 = DAT_00110398;\n    goto LAB_00102a90;\n  case 0x53:\n    goto switchD_00102af4_caseD_53;\n  }\n  pcVar19 = \"cannot split in more than one way\";\n  goto LAB_00103204;\nswitchD_00102af4_caseD_53:\n  pcVar19 = optarg;\n  pcVar7 = (char *)FUN_00105f30(optarg);\n  iVar6 = DAT_00110010;\n  if (pcVar20 != pcVar7) {\n    uVar12 = FUN_00108490(pcVar20);\n    pcVar19 = \"invalid suffix %s, contains directory separator\";\nLAB_001033fe:\n    uVar11 = dcgettext(0,pcVar19,5);\nLAB_00103408:\n                    /* WARNING: Subroutine does not return */\n    error(0,0,uVar11,uVar12);\n  }\n  goto LAB_00102a90;\n  while( true ) {\n    uVar16 = uVar16 - 1;\n    cVar1 = *pcVar19;\n    pcVar19 = pcVar19 + (ulong)bVar22 * -2 + 1;\n    if (cVar1 == '\\0') break;\ncode_r0x00102fc7:\n    if (uVar16 == 0) break;\n  }\n  pcVar19 = \"numerical suffix start value is too large for the suffix length\";\n  if (DAT_001103a8 < ~uVar16 - 1) {\nLAB_00103204:\n    uVar12 = dcgettext(0,pcVar19,5);\n                    /* WARNING: Subroutine does not return */\n    error(0,0,uVar12);\n  }\nLAB_00102fe7:\n  iVar6 = strcmp(DAT_00110390,\"-\");\n  if ((iVar6 != 0) && (iVar6 = FUN_00106040(0,pcVar20,0,0), iVar6 < 0)) {\n    uVar12 = FUN_001081d0(4,DAT_00110390);\n    uVar11 = dcgettext(0,\"cannot open %s for reading\",5);\n    piVar13 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar13,uVar11,uVar12);\n  }\n  iVar6 = FUN_00109d80(0,&DAT_00110300);\n  if (iVar6 != 0) {\n    uVar12 = FUN_001082d0(0,3,DAT_00110390);\n    piVar13 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar13,\"%s\",uVar12);\n  }\n  if (local_120 == 0) {\n    local_120 = FUN_00105910(DAT_00110338);\n  }\n  uVar21 = 0xffffffffffffffff;\n  uVar12 = FUN_00108c20(local_120 + (long)iVar3);\n  uVar12 = FUN_001036e0(uVar12);\n  uVar16 = 0x7fffffffffffffff;\n  if (iVar18 - 5U < 2) {\n    uVar10 = FUN_00105940(uVar12);\n    if ((long)uVar10 < 0) {\n      uVar12 = FUN_001082d0(0,3,DAT_00110390);\n      uVar11 = dcgettext(0,\"%s: cannot determine file size\",5);\n      piVar13 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar13,uVar11,uVar12);\n    }\n    uVar21 = local_120;\n    if (uVar10 <= local_120) {\n      uVar21 = uVar10;\n    }\n    if ((long)local_100 < 0) {\n      uVar12 = FUN_00106140(local_100,local_58);\n      uVar12 = FUN_00108490(uVar12);\n      uVar11 = dcgettext(0,\"invalid number of chunks\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0x4b,\"%s: %s\",uVar11,uVar12);\n    }\n    uVar16 = local_100;\n    if (local_100 <= uVar10) {\n      uVar16 = uVar10;\n    }\n  }\n  if (DAT_00110500 != (char *)0x0) {\n    sigemptyset((sigset_t *)&DAT_001103e0);\n    sigaction(0xd,(sigaction *)0x0,&local_f8);\n    if (local_f8.__sigaction_handler.sa_handler != (__sighandler_t)0x1) {\n      sigaddset((sigset_t *)&DAT_001103e0,0xd);\n    }\n    sigprocmask(0,(sigset_t *)&DAT_001103e0,(sigset_t *)&DAT_00110460);\n  }\n  switch(iVar18) {\n  case 2:\n    FUN_00104ac0(local_100,uVar12,local_120);\n    break;\n  case 3:\n  case 4:\nswitchD_001030f3_caseD_3:\n    FUN_00104990();\n    break;\n  case 5:\n    if (local_108 == 0) {\n      FUN_00104e00(uVar16 / local_100,uVar12,local_120,uVar21,local_100);\n    }\n    else {\n      FUN_001041e0(local_108,local_100,uVar12,local_120,uVar21,uVar16);\n    }\n    break;\n  case 6:\n    FUN_00105020(local_108,local_100,uVar12,local_120,uVar21,uVar16);\n    break;\n  case 7:\n    FUN_00105450(local_108,local_100,uVar12,local_120);\n    break;\n  default:\n    FUN_00104e00(local_100,uVar12,local_120,0xffffffffffffffff,0);\n  }\n  iVar6 = close(0);\n  if (iVar6 != 0) {\n    uVar12 = FUN_001082d0(0,3,DAT_00110390);\n    piVar13 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(1,*piVar13,\"%s\",uVar12);\n  }\n  FUN_001045d0(0,DAT_00110014,DAT_001104f8,DAT_001103b8);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return 0;\n}\n\n", 
    "001068e0": "\nchar * FUN_001068e0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00109b10();\n    iVar1 = FUN_00106830(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00106830(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010b269;\n      }\n      else {\n        pcVar2 = &DAT_0010b266;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010b26d;\n    }\n    else {\n      pcVar2 = &DAT_0010b262;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00111180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029af": "\nvoid FUN_001029af(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108cc0": "\nvoid FUN_00108cc0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00108c80();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00108e40();\n}\n\n", 
    "00102910": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010ff90)();\n  return;\n}\n\n", 
    "001082c0": "\nvoid FUN_001082c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108200(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00107d70": "\nvoid FUN_00107d70(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00110620;\n  }\n  FUN_00108df0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001029aa": "\nvoid FUN_001029aa(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107e90": "\nvoid FUN_00107e90(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00110620;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00106a10(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0010fe40)();\n  return pcVar1;\n}\n\n", 
    "00103760": "\nvoid FUN_00103760(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001111f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010fdb0)();\n  return;\n}\n\n", 
    "00105940": "\nulong FUN_00105940(long param_1,ulong param_2)\n\n{\n  char cVar1;\n  __off_t _Var2;\n  long lVar3;\n  long lVar4;\n  int *piVar5;\n  ulong uVar6;\n  \n  _Var2 = lseek(0,0,1);\n  if (_Var2 < 0) {\n    piVar5 = __errno_location();\n    if (*piVar5 != 0x1d) {\n      return 0xffffffffffffffff;\n    }\n    *piVar5 = 0;\n    return 0xffffffffffffffff;\n  }\n  uVar6 = 0;\n  do {\n    lVar3 = FUN_001084a0(0,param_1 + uVar6,param_2 - uVar6);\n    lVar4 = DAT_00110330;\n    if (lVar3 == 0) {\n      return uVar6;\n    }\n    if (lVar3 == -1) {\n      return 0xffffffffffffffff;\n    }\n    uVar6 = uVar6 + lVar3;\n  } while (uVar6 < param_2);\n  if (DAT_00110330 != 0) {\n    lVar3 = _Var2 + uVar6;\n    cVar1 = FUN_00105900();\n    if ((lVar4 < lVar3) || (cVar1 == '\\0')) {\n      lVar4 = lseek(0,0,2);\n      if (lVar4 < 0) {\n        return 0xffffffffffffffff;\n      }\n      if (lVar3 != lVar4) {\n        _Var2 = lseek(0,lVar3,0);\n        if (_Var2 < 0) {\n          return 0xffffffffffffffff;\n        }\n        if (lVar4 < lVar3) {\n          lVar4 = lVar3;\n        }\n      }\n    }\n    uVar6 = uVar6 + (lVar4 - lVar3);\n    if (uVar6 != 0x7fffffffffffffff) {\n      return uVar6;\n    }\n  }\n  piVar5 = __errno_location();\n  *piVar5 = 0x4b;\n  return 0xffffffffffffffff;\n}\n\n", 
    "001110d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103640": "\n/* WARNING: Removing unreachable block (ram,0x00103664) */\n/* WARNING: Removing unreachable block (ram,0x00103670) */\n\nvoid FUN_00103640(void)\n\n{\n  return;\n}\n\n", 
    "00108410": "\nvoid FUN_00108410(void)\n\n{\n  FUN_00108370();\n  return;\n}\n\n", 
    "00105020": "\nvoid FUN_00105020(ulong param_1,ulong param_2,void *param_3,undefined8 param_4,ulong param_5,\n                 ulong param_6)\n\n{\n  void *pvVar1;\n  bool bVar2;\n  bool bVar3;\n  byte bVar4;\n  byte bVar5;\n  ulong uVar6;\n  __off_t _Var7;\n  long lVar8;\n  undefined8 uVar9;\n  int *piVar10;\n  long lVar11;\n  ulong uVar12;\n  ulong uVar13;\n  ulong uVar14;\n  void *pvVar15;\n  void *local_88;\n  ulong local_80;\n  bool local_4a;\n  \n  bVar2 = param_2 != 0 && param_1 <= param_2;\n  if ((param_2 == 0 || param_1 > param_2) || (param_6 < param_2)) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"n && k <= n && n <= file_size\",\"src/split.c\",0x361,\"lines_chunk_split\");\n  }\n  uVar6 = param_6 / param_2;\n  if (param_1 < 2) {\n    local_80 = 0;\n    uVar12 = uVar6 - 1;\n    uVar13 = 1;\n  }\n  else {\n    uVar13 = param_1 - 1;\n    uVar12 = uVar6 * uVar13 - 1;\n    local_80 = uVar12;\n    if (uVar12 < param_5) {\n      param_5 = param_5 - uVar12;\n      memmove(param_3,(void *)((long)param_3 + uVar12),param_5);\n    }\n    else {\n      _Var7 = lseek(0,uVar12 - param_5,1);\n      param_5 = 0xffffffffffffffff;\n      if (_Var7 < 0) {\n        uVar9 = FUN_001082d0(0,3,DAT_00110390);\n        piVar10 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar10,\"%s\",uVar9);\n      }\n    }\n  }\n  bVar5 = 0;\n  if ((long)local_80 < (long)param_6) {\n    bVar4 = 0;\n    local_4a = bVar2;\n    if (param_5 == 0xffffffffffffffff) goto LAB_0010537b;\n    while (bVar5 = bVar4, param_5 != 0) {\n      if (param_6 - local_80 <= param_5) {\n        param_5 = param_6 - local_80;\n      }\n      pvVar1 = (void *)((long)param_3 + param_5);\n      pvVar15 = param_3;\n      bVar3 = local_4a;\n      do {\n        uVar14 = uVar12 - local_80;\n        if ((long)uVar14 < 0) {\n          uVar14 = 0;\n        }\n        if (param_5 < uVar14) {\n          uVar14 = param_5;\n        }\n        local_88 = memchr((void *)(uVar14 + (long)pvVar15),DAT_00110010,param_5 - uVar14);\n        if (local_88 == (void *)0x0) {\n          local_4a = false;\n          lVar11 = (long)pvVar1 - (long)pvVar15;\n          local_88 = pvVar1;\n          if (param_1 == uVar13) goto LAB_001052ae;\nLAB_00105171:\n          if (param_1 == 0) {\n            FUN_00104890(bVar3,pvVar15);\n          }\n        }\n        else {\n          local_88 = (void *)((long)local_88 + 1);\n          lVar11 = (long)local_88 - (long)pvVar15;\n          local_4a = bVar2;\n          if (param_1 != uVar13) goto LAB_00105171;\nLAB_001052ae:\n          lVar8 = FUN_001060c0(1,pvVar15);\n          if (lVar8 != lVar11) {\n            uVar9 = dcgettext(0,\"write error\",5);\n            piVar10 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n            error(1,*piVar10,\"%s\",uVar9);\n          }\n        }\n        param_5 = param_5 - lVar11;\n        local_80 = local_80 + lVar11;\n        if (((long)uVar12 < (long)local_80 | local_4a) == 0) {\n          local_4a = false;\n        }\n        else {\n          bVar5 = local_88 == pvVar1 & (local_4a ^ 1U);\n          if (bVar5 != 0) {\n            local_4a = false;\n            goto LAB_0010532f;\n          }\n          uVar13 = uVar13 + 1;\n          if ((param_1 < uVar13) && (param_1 != 0)) {\n            return;\n          }\n          while( true ) {\n            uVar12 = uVar12 + uVar6;\n            if (param_2 == uVar13) {\n              uVar12 = param_6 - 1;\n            }\n            if ((long)local_80 <= (long)uVar12) break;\n            if (param_1 == 0) {\n              uVar13 = uVar13 + 1;\n              FUN_00104890(1,0,0);\n            }\n            else {\n              uVar13 = uVar13 + 1;\n              if ((param_1 < uVar13) && (param_1 != 0)) {\n                return;\n              }\n            }\n          }\n        }\n        pvVar15 = local_88;\n        bVar3 = local_4a;\n      } while (local_88 != pvVar1);\n      bVar5 = 0;\nLAB_0010532f:\n      if ((long)param_6 <= (long)local_80) break;\nLAB_0010537b:\n      param_5 = FUN_001084a0(0,param_3,param_4);\n      bVar4 = bVar5;\n      if (param_5 == 0xffffffffffffffff) {\n        uVar9 = FUN_001082d0(0,3,DAT_00110390);\n        piVar10 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar10,\"%s\",uVar9);\n      }\n    }\n    uVar13 = (uVar13 + 1) - (ulong)(bVar5 == 0);\n  }\n  if (param_1 == 0) {\n    for (; uVar13 <= param_2; uVar13 = uVar13 + 1) {\n      FUN_00104890(1,0,0);\n    }\n  }\n  return;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010fed0)();\n  return pvVar1;\n}\n\n", 
    "00107dd0": "\nvoid FUN_00107dd0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00110620;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00111268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108e20": "\nvoid FUN_00108e20(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00108df0(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00111148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010fe00)();\n  return;\n}\n\n", 
    "001036e0": "\nlong FUN_001036e0(long param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (param_2 - 1) + param_1;\n  return uVar1 - uVar1 % param_2;\n}\n\n", 
    "00111270": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109870": "\nbool FUN_00109870(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "001111f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001062d0": "\nundefined8 FUN_001062d0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001062b0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00108db0": "\nvoid FUN_00108db0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00108e40();\n}\n\n", 
    "001110d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109510": "\nsize_t FUN_00109510(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00109ac0(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_strtol_0010fec8)();\n  return lVar1;\n}\n\n", 
    "001110e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dup2_0010fe38)();\n  return iVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010fda8)();\n  return iVar1;\n}\n\n", 
    "00111278": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111158": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010fdf8)();\n  return iVar1;\n}\n\n", 
    "00111040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001036d0": "\nundefined4 FUN_001036d0(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00107e30": "\nundefined4 FUN_00107e30(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00110620;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001084a0": "\nssize_t FUN_001084a0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7ff00001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00109880": "\nuint FUN_00109880(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "001061a0": "\nvoid FUN_001061a0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_00110518 = pcVar1 + 1;\n    uVar3 = (long)DAT_00110518 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_00110518;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_00110518 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "001110e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109b70": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00109b70(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00109bf4;\n  }\n  if (DAT_00110658 < 0) {\n    iVar2 = FUN_00109b70(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_00110658 != -1)) goto LAB_00109bf4;\nLAB_00109c31:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00109bf4;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_00109b70(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00109bf4;\n        DAT_00110658 = -1;\n        __fd = iVar2;\n        goto LAB_00109c31;\n      }\n    }\n    DAT_00110658 = 1;\n  }\nLAB_00109bf4:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109a50": "\nulong FUN_00109a50(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_001093a0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00104990": "\nvoid FUN_00104990(ulong param_1,undefined *param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  undefined *puVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined *puVar5;\n  int __c;\n  undefined *puVar6;\n  ulong uVar7;\n  undefined local_51;\n  \n  uVar7 = 0;\n  local_51 = 1;\n  do {\n    lVar1 = FUN_001084a0(0,param_2,param_3);\n    __c = DAT_00110010;\n    if (lVar1 == -1) {\n      uVar3 = FUN_001082d0(0,3,DAT_00110390);\n      piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar4,\"%s\",uVar3);\n    }\n    puVar5 = param_2 + lVar1;\n    *puVar5 = (char)DAT_00110010;\n    puVar6 = param_2;\n    puVar2 = param_2;\n    while( true ) {\n      puVar2 = (undefined *)memchr(puVar2,__c,(size_t)(puVar5 + (1 - (long)puVar2)));\n      if (puVar5 == puVar2) break;\n      uVar7 = uVar7 + 1;\n      puVar2 = puVar2 + 1;\n      if (param_1 <= uVar7) {\n        uVar7 = 0;\n        FUN_00104890(local_51,puVar6,(long)puVar2 - (long)puVar6);\n        local_51 = 1;\n        puVar6 = puVar2;\n        __c = DAT_00110010;\n      }\n    }\n    if (puVar6 != puVar5) {\n      FUN_00104890(local_51,puVar6,(long)puVar5 - (long)puVar6);\n      local_51 = 0;\n    }\n  } while (lVar1 != 0);\n  return;\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ftruncate_0010fe50)();\n  return iVar1;\n}\n\n", 
    "001111d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102570": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010fdc0)();\n  return;\n}\n\n", 
    "001110b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001098f0": "\nbool FUN_001098f0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00107df0": "\nuint FUN_00107df0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00110620;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00111128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigprocmask(int __how,sigset_t *__set,sigset_t *__oset)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint execl(char *__path,char *__arg,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001035e0": "\nvoid FUN_001035e0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010ffe0)\n            (FUN_001029c0,unaff_retaddr,&stack0x00000008,FUN_00109ce0,FUN_00109d50,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "00111010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a10": "\nulong FUN_00106a10(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00106e97:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00106eb9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00107456;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00106e0f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00106e97;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00106e0f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_001068e0(&DAT_0010b281,param_5);\n      local_78 = (char *)FUN_001068e0(&DAT_0010b271);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00106b60:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_001073c0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010735b;\n          goto LAB_0010714b;\n        default:\nswitchD_00107270_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00109510(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00107648;\n              }\n              if (lVar10 == -2) goto joined_r0x00107a5a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00107030;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00107648;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00106dd1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00107318;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00107318;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00107318:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00107027;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00107014;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00107014:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00106d38;\n          goto LAB_00107027;\n        case 0x23:\n        case 0x7e:\nLAB_0010700b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00107014;\n          goto LAB_00106d35;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00107270_caseD_25;\n        case 0x27:\nswitchD_00107270_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00106d38;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x00106d5b;\n          }\n          goto LAB_00107030;\n        case 0x3f:\nswitchD_00107270_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001079be_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00106d38;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x00106d5b;\n          }\n          goto LAB_00107030;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00106c68_caseD_5c;\n          if (!bVar20) {\nLAB_001072a8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_001072c0;\n          }\n          goto LAB_00107030;\n        case 0x7b:\n        case 0x7d:\nswitchD_00107270_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010700b;\nLAB_00106d35:\n          bVar23 = false;\n          goto LAB_00106d38;\n        }\nLAB_00107140:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010714b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00106d58;\n          goto LAB_00106c80;\n        }\nLAB_00107180:\n        bVar21 = false;\n        goto joined_r0x00107191;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_001073a0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00106c68_caseD_0;\n          default:\n            goto switchD_00107270_caseD_1;\n          case 7:\n            goto switchD_001073c0_caseD_7;\n          case 8:\n            goto switchD_001073c0_caseD_8;\n          case 9:\n            goto switchD_00106c68_caseD_9;\n          case 10:\n            goto switchD_001073c0_caseD_a;\n          case 0xb:\n            goto switchD_001073c0_caseD_b;\n          case 0xc:\n            goto switchD_001073c0_caseD_c;\n          case 0xd:\n            goto switchD_001073c0_caseD_d;\n          case 0x20:\n            goto LAB_001073e9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00106c68_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_001073d1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00106c78;\n          case 0x27:\n            goto switchD_00107270_caseD_27;\n          case 0x3f:\n            goto switchD_00107270_caseD_3f;\n          case 0x5c:\n            goto switchD_00106c68_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00107270_caseD_7b;\n          }\n        }\n        goto LAB_0010703e;\n      }\nLAB_001073a0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_001073c0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00106c68_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x00106d5b;\n            }\nLAB_001077fb:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_001077fb;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00107838;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x00106d5b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00107030;\n      default:\n        bVar23 = false;\n        goto switchD_00107270_caseD_1;\n      case 7:\nswitchD_001073c0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_001073c0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00106c68_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00107140;\n      case 10:\nswitchD_001073c0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00107180;\n      case 0xb:\nswitchD_001073c0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00107180;\n      case 0xc:\nswitchD_001073c0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_001073c0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00107180;\n      case 0x20:\n        bVar5 = false;\nLAB_001073e9:\n        uVar15 = 0x20;\n        goto LAB_00106c78;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00106c68_caseD_21:\n        bVar22 = false;\n        goto LAB_00106d35;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_001073d1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00106d38;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00106c80;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00106c78:\n        bVar22 = false;\n        goto LAB_00106c80;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00107270_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00107270_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00106c68_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_001072a8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00107140;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00107270_caseD_7b;\n      }\n      if (bVar20) goto LAB_001071a0;\n      bVar21 = false;\n      goto LAB_00106cf6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00107027:\n      param_5 = 2;\nLAB_00107030:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010703e:\n      uVar13 = FUN_00106a10(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00107078;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00107ac5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00107078:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00106a10(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00107078;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00107ac5;\nLAB_00107456:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00106eb9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010735b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00106b60;\nswitchD_001079be_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00107838:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x00106d5b;\n    goto LAB_00106c80;\n  }\n  goto LAB_0010703e;\njoined_r0x00107a5a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00107648:\n  if (1 < uVar17) {\nLAB_00107652:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00107030;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00106d08;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_001072c0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00106dd1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00107652;\n  }\nswitchD_00107270_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00106d38:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00106c80:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x00106d5b;\n  }\n  else {\nLAB_00106d58:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x00106d5b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_001072c0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00106d08;\n    }\n  }\njoined_r0x00107191:\n  if (bVar20) {\nLAB_001071a0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00107030;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00106cf6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00106d08:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00106b60;\n}\n\n", 
    "00111250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0010fd80)();\n  return pcVar1;\n}\n\n", 
    "00111130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109970": "\nbool FUN_00109970(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00109850": "\nbool FUN_00109850(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001111d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001110b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_0010fdb8)();\n  return pcVar1;\n}\n\n", 
    "001111e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108420": "\nvoid FUN_00108420(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108410(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001110c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010fe48)();\n  return pcVar1;\n}\n\n", 
    "001095a0": "\nulong FUN_001095a0(byte *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  ulong uVar3;\n  long lVar4;\n  uint uVar5;\n  char *__s1;\n  byte *pbVar6;\n  byte *pbVar7;\n  long in_FS_OFFSET;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  char *local_28;\n  long local_20;\n  \n  bVar10 = 0;\n  __s1 = \"HUP\";\n  uVar3 = 0;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((int)(char)*param_1 - 0x30U < 10) {\n    uVar3 = strtol((char *)param_1,&local_28,10);\n    if ((*local_28 == '\\0') && ((long)uVar3 < 0x41)) goto LAB_00109601;\n  }\n  else {\n    do {\n      iVar1 = strcmp(__s1,(char *)param_1);\n      if (iVar1 == 0) {\n        uVar3 = (ulong)(uint)(&DAT_001100a0)[uVar3 * 3];\n        goto LAB_00109601;\n      }\n      uVar5 = (int)uVar3 + 1;\n      uVar3 = (ulong)uVar5;\n      __s1 = __s1 + 0xc;\n    } while (uVar5 != 0x23);\n    iVar1 = __libc_current_sigrtmin();\n    iVar2 = __libc_current_sigrtmax();\n    bVar8 = false;\n    bVar9 = iVar1 == 0;\n    if (0 < iVar1) {\n      lVar4 = 5;\n      pbVar6 = param_1;\n      pbVar7 = (byte *)\"RTMIN\";\n      do {\n        if (lVar4 == 0) break;\n        lVar4 = lVar4 + -1;\n        bVar8 = *pbVar6 < *pbVar7;\n        bVar9 = *pbVar6 == *pbVar7;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        pbVar7 = pbVar7 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      if ((!bVar8 && !bVar9) == bVar8) {\n        lVar4 = strtol((char *)(param_1 + 5),&local_28,10);\n        if (((*local_28 == '\\0') && (-1 < lVar4)) && (lVar4 <= iVar2 - iVar1)) {\n          uVar3 = (ulong)(uint)(iVar1 + (int)lVar4);\n          goto LAB_00109601;\n        }\n        goto LAB_0010963c;\n      }\n    }\n    bVar8 = false;\n    bVar9 = iVar2 == 0;\n    if (0 < iVar2) {\n      lVar4 = 5;\n      pbVar6 = param_1;\n      pbVar7 = (byte *)\"RTMAX\";\n      do {\n        if (lVar4 == 0) break;\n        lVar4 = lVar4 + -1;\n        bVar8 = *pbVar6 < *pbVar7;\n        bVar9 = *pbVar6 == *pbVar7;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        pbVar7 = pbVar7 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      if ((!bVar8 && !bVar9) == bVar8) {\n        lVar4 = strtol((char *)(param_1 + 5),&local_28,10);\n        if (((*local_28 == '\\0') && (iVar1 - iVar2 <= lVar4)) && (lVar4 < 1)) {\n          uVar3 = (ulong)(uint)(iVar2 + (int)lVar4);\n          goto LAB_00109601;\n        }\n      }\n    }\n  }\nLAB_0010963c:\n  uVar3 = 0xffffffff;\nLAB_00109601:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024e0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010fff8)();\n  return;\n}\n\n", 
    "00111260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107e50": "\nvoid FUN_00107e50(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00110620;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109980": "\nulong FUN_00109980(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00111020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001085e0": "\nundefined8\nFUN_001085e0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010b9bb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001088a9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_001088a9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010894b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010894b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001086fd;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_001086fd:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00108fe0": "\nuint FUN_00108fe0(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = FUN_00108fb0(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "00109740": "\nint FUN_00109740(int param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ulong uVar5;\n  \n  uVar5 = 0;\n  piVar3 = &DAT_001100a0;\n  do {\n    if (*piVar3 == param_1) {\n      strcpy((char *)param_2,&DAT_001100a4 + uVar5 * 0xc);\n      return 0;\n    }\n    uVar4 = (int)uVar5 + 1;\n    uVar5 = (ulong)uVar4;\n    piVar3 = piVar3 + 3;\n  } while (uVar4 != 0x23);\n  iVar1 = __libc_current_sigrtmin();\n  iVar2 = __libc_current_sigrtmax();\n  if ((param_1 < iVar1) || (iVar2 < param_1)) {\n    param_1 = -1;\n  }\n  else {\n    if ((iVar2 - iVar1 >> 1) + iVar1 < param_1) {\n      *param_2 = 0x414d5452;\n      *(undefined2 *)(param_2 + 1) = 0x58;\n      iVar1 = iVar2;\n    }\n    else {\n      *param_2 = 0x494d5452;\n      *(undefined2 *)(param_2 + 1) = 0x4e;\n    }\n    param_1 = param_1 - iVar1;\n    if (param_1 != 0) {\n      __sprintf_chk((long)param_2 + 5,1,0xffffffffffffffff,&DAT_0010bf07,param_1);\n      return 0;\n    }\n  }\n  return param_1;\n}\n\n", 
    "001111e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001110c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102990": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_0010ffd0)();\n  return;\n}\n\n", 
    "00102870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memrchr_0010ff40)();\n  return pvVar1;\n}\n\n", 
    "00111108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010feb0)();\n  return pvVar1;\n}\n\n", 
    "00109b50": "\nvoid FUN_00109b50(undefined8 param_1)\n\n{\n  FUN_00109b70(param_1,0,3);\n  return;\n}\n\n", 
    "001111b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109d94": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00106670": "\nundefined8\nFUN_00106670(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001065b0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00104ac0": "\nvoid FUN_00104ac0(long param_1,void *param_2,ulong param_3)\n\n{\n  long lVar1;\n  ulong __n;\n  void *pvVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  long lVar5;\n  long lVar6;\n  void *pvVar7;\n  ulong __n_00;\n  long lVar8;\n  ulong uVar9;\n  bool bVar10;\n  bool bVar11;\n  void *local_70;\n  ulong local_68;\n  \n  uVar9 = 0;\n  lVar5 = 0;\n  bVar11 = false;\n  local_68 = 0;\n  local_70 = (void *)0x0;\n  do {\n    __n = FUN_001084a0(0,param_2,param_3);\n    if (__n == 0xffffffffffffffff) {\n      uVar3 = FUN_001082d0(0,3,DAT_00110390);\n      piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar4,\"%s\",uVar3);\n    }\n    pvVar7 = param_2;\n    if (__n == 0) {\n      if (uVar9 != 0) {\n        FUN_00104890(lVar5 == 0,local_70,uVar9);\n      }\n      free(local_70);\n      return;\n    }\n    do {\n      lVar6 = uVar9 + lVar5;\n      __n_00 = param_1 - lVar6;\n      if (__n < __n_00) {\n        lVar8 = 0;\n        __n_00 = 0;\n        pvVar2 = memrchr(pvVar7,DAT_00110010,__n);\n        if (uVar9 == 0) goto LAB_00104be3;\nLAB_00104b54:\n        if ((pvVar2 == (void *)0x0) && (lVar5 != 0)) goto LAB_00104b6d;\n        FUN_00104890(lVar5 == 0,local_70,uVar9);\n        lVar5 = lVar6;\n        local_68 = param_3;\n        if (uVar9 <= param_3) goto LAB_00104be3;\n        local_70 = (void *)FUN_00108c80(local_70,param_3);\n        if (pvVar2 == (void *)0x0) goto LAB_00104d10;\nLAB_00104bec:\n        lVar1 = (long)pvVar2 + (1 - (long)pvVar7);\n        lVar5 = lVar6 + lVar1;\n        __n = __n - lVar1;\n        pvVar2 = (void *)((long)pvVar7 + lVar1);\n        FUN_00104890(lVar6 == 0,pvVar7,lVar1);\n        pvVar7 = pvVar2;\n        if (lVar8 == 0) {\n          uVar9 = 0;\n          bVar11 = __n != 0;\n          __n_00 = __n;\n          if (bVar11) goto LAB_00104c2a;\n          bVar11 = true;\n        }\n        else {\n          __n_00 = __n_00 - lVar1;\n          bVar11 = __n_00 != 0;\n          if (__n_00 == 0) {\n            bVar11 = true;\n            uVar9 = 0;\n          }\n          else {\n            uVar9 = 0;\nLAB_00104c2a:\n            if (local_68 - uVar9 < __n_00) {\n              if (~param_3 < local_68) {\n                    /* WARNING: Subroutine does not return */\n                FUN_00108e40();\n              }\n              local_68 = local_68 + param_3;\n              local_70 = (void *)FUN_00108c80(local_70,local_68);\n            }\n            __n = __n - __n_00;\n            pvVar2 = (void *)((long)local_70 + uVar9);\n            uVar9 = uVar9 + __n_00;\n            memcpy(pvVar2,pvVar7,__n_00);\n            pvVar2 = (void *)((long)pvVar7 + __n_00);\n          }\nLAB_00104c85:\n          if (lVar8 != 0) {\n            bVar11 = false;\n            lVar5 = 0;\n          }\n        }\n      }\n      else {\n        lVar8 = (long)pvVar7 + (__n_00 - 1);\n        pvVar2 = memrchr(pvVar7,DAT_00110010,__n_00);\n        if (uVar9 != 0) goto LAB_00104b54;\nLAB_00104be3:\n        lVar6 = lVar5;\n        if (pvVar2 != (void *)0x0) goto LAB_00104bec;\nLAB_00104d10:\n        uVar9 = 0;\n        lVar5 = lVar6;\nLAB_00104b6d:\n        if (bVar11) {\n          pvVar2 = pvVar7;\n          if (lVar8 == 0) {\nLAB_00104dee:\n            __n_00 = __n;\n            if (__n == 0) goto LAB_00104c85;\n            goto LAB_00104c2a;\n          }\n          if (__n_00 != 0) goto LAB_00104c2a;\n          if (lVar8 == 0) goto LAB_00104dee;\n          goto LAB_00104c85;\n        }\n        bVar10 = lVar5 == 0;\n        if (lVar8 == 0) {\n          lVar5 = lVar5 + __n;\n          FUN_00104890(bVar10,pvVar7,__n);\n          break;\n        }\n        __n = __n - __n_00;\n        pvVar2 = (void *)((long)pvVar7 + __n_00);\n        FUN_00104890(bVar10,pvVar7,__n_00);\n        lVar5 = 0;\n      }\n      pvVar7 = pvVar2;\n    } while (__n != 0);\n  } while( true );\n}\n\n", 
    "001099f0": "\nint FUN_001099f0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_001099b0(*param_1);\n      bVar2 = FUN_001099b0(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "001098d0": "\nbool FUN_001098d0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00111100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pipe(int *__pipedes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n  (*(code *)PTR_clearerr_unlocked_0010fde0)();\n  return;\n}\n\n", 
    "001037c0": "\nvoid FUN_001037c0(undefined8 *param_1,undefined8 *param_2,undefined *param_3)\n\n{\n  undefined8 uVar1;\n  bool bVar2;\n  \n  uVar1 = dcgettext(0,\"invalid number of chunks\",5);\n  uVar1 = FUN_00108f80(param_3 + 1,1,0xffffffffffffffff,\"\",uVar1,0);\n  bVar2 = optarg != param_3;\n  *param_2 = uVar1;\n  if (bVar2) {\n    *param_3 = 0;\n    uVar1 = dcgettext(0,\"invalid chunk number\",5);\n    uVar1 = FUN_00108f80(optarg,1,*param_2,\"\",uVar1,0);\n    *param_1 = uVar1;\n  }\n  return;\n}\n\n", 
    "00111228": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108290": "\nvoid FUN_00108290(undefined8 param_1,char param_2)\n\n{\n  FUN_00108200(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "001027f0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010ff00)();\n  return;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010fe70)();\n  return iVar1;\n}\n\n", 
    "00111230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmax(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105e60": "\nvoid FUN_00105e60(undefined8 param_1)\n\n{\n  DAT_00110510 = param_1;\n  return;\n}\n\n", 
    "00109950": "\nbool FUN_00109950(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00108fb0": "\nbool FUN_00108fb0(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010fea8)();\n  return iVar1;\n}\n\n", 
    "001111b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010fe18)();\n  return sVar1;\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigprocmask(int __how,sigset_t *__set,sigset_t *__oset)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigprocmask_0010fd88)();\n  return iVar1;\n}\n\n", 
    "001080f0": "\nvoid FUN_001080f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001080d0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00103710": "\nuint FUN_00103710(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return (in_EAX & 0xffffff00 | (uint)(DAT_00110500 != 0)) &\n         (param_3 & 0xffffff00 | (uint)(param_1 == 0x20));\n}\n\n", 
    "00108b90": "\nvoid FUN_00108b90(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010ffc8)();\n  return ppuVar1;\n}\n\n", 
    "00102860": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010ff38)();\n  return;\n}\n\n", 
    "001110a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105450": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_00105450(ulong param_1,ulong param_2,void *param_3,undefined8 param_4)\n\n{\n  void *pvVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  byte bVar5;\n  char cVar6;\n  int iVar7;\n  long lVar8;\n  void *pvVar9;\n  int *piVar10;\n  size_t sVar11;\n  undefined8 uVar12;\n  undefined8 *puVar13;\n  size_t sVar14;\n  ulong uVar15;\n  void *pvVar16;\n  void *__s;\n  bool bVar17;\n  ulong local_80;\n  ulong local_70;\n  int local_68;\n  undefined8 *local_60;\n  byte local_4b;\n  \n  if ((param_1 == 0) && (local_60 = (undefined8 *)FUN_00108c40(param_2,0x20), param_2 != 0)) {\n    uVar15 = 0;\n    puVar13 = local_60;\n    do {\n      FUN_001039c0();\n      uVar15 = uVar15 + 1;\n      uVar12 = FUN_00108e20(DAT_001103b8);\n      *(undefined4 *)(puVar13 + 1) = 0xffffffff;\n      *puVar13 = uVar12;\n      puVar13[2] = 0;\n      *(undefined4 *)(puVar13 + 3) = 0;\n      puVar13 = puVar13 + 4;\n    } while (param_2 != uVar15);\n  }\n  local_80 = 1;\n  local_70 = 0;\n  local_4b = 0;\n  bVar2 = false;\n  bVar3 = false;\n  while( true ) {\n    lVar8 = FUN_001084a0(0,param_3,param_4);\n    if (lVar8 == -1) {\n      uVar12 = FUN_001082d0(0,3,DAT_00110390);\n      piVar10 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar10,\"%s\",uVar12);\n    }\n    if (lVar8 == 0) break;\n    pvVar1 = (void *)((long)param_3 + lVar8);\n    __s = param_3;\n    if (param_3 != pvVar1) {\n      do {\n        sVar14 = (long)pvVar1 - (long)__s;\n        pvVar9 = memchr(__s,DAT_00110010,sVar14);\n        bVar17 = pvVar9 != (void *)0x0;\n        pvVar16 = pvVar1;\n        if (bVar17) {\n          sVar14 = (long)(void *)((long)pvVar9 + 1) - (long)__s;\n          pvVar16 = (void *)((long)pvVar9 + 1);\n        }\n        if (param_1 == 0) {\n          bVar5 = FUN_001043d0(local_60,local_70,param_2);\n          puVar13 = local_60 + local_70 * 4;\n          local_4b = local_4b | bVar5;\n          piVar10 = __errno_location();\n          bVar4 = bVar2;\n          if (DAT_001102e0 == '\\0') {\n            sVar14 = fwrite_unlocked(__s,sVar14,1,(FILE *)puVar13[2]);\n            if (sVar14 == 1) goto LAB_001056e8;\n            cVar6 = FUN_00103710();\n            if (cVar6 == '\\0') {\n              uVar12 = FUN_001082d0(0,3,*puVar13);\n                    /* WARNING: Subroutine does not return */\n              error(1,*piVar10,\"%s\",uVar12);\n            }\n          }\n          else {\n            sVar11 = FUN_001060c0(*(undefined4 *)(puVar13 + 1),__s,sVar14);\n            if (sVar14 == sVar11) {\nLAB_001056e8:\n              cVar6 = FUN_00103710();\n              if (cVar6 == '\\0') {\n                bVar4 = true;\n              }\n            }\n            else {\n              cVar6 = FUN_00103710();\n              if (cVar6 == '\\0') {\n                uVar12 = FUN_001082d0(0,3,*puVar13);\n                    /* WARNING: Subroutine does not return */\n                error(1,*piVar10,\"%s\",uVar12);\n              }\n            }\n          }\n          if (local_4b != 0) {\n            iVar7 = FUN_001093a0();\n            if (iVar7 != 0) {\n              uVar12 = FUN_001082d0(0,3,*puVar13);\n                    /* WARNING: Subroutine does not return */\n              error(1,*piVar10,\"%s\",uVar12);\n            }\n            puVar13[2] = 0;\n            *(undefined4 *)(puVar13 + 1) = 0xfffffffe;\n          }\n          bVar2 = bVar4;\n          if ((bVar17) && (local_70 = local_70 + 1, param_2 == local_70)) {\n            if (!bVar4) goto LAB_0010579b;\n            local_70 = 0;\n            bVar2 = false;\n            bVar3 = bVar4;\n          }\n        }\n        else {\n          if (param_1 == local_80) {\n            if (DAT_001102e0 == '\\0') {\n              sVar14 = fwrite_unlocked(__s,sVar14,1,stdout);\n              if (sVar14 != 1) {\n                clearerr_unlocked(stdout);\n                uVar12 = dcgettext(0,\"write error\",5);\n                piVar10 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n                error(1,*piVar10,\"%s\",uVar12);\n              }\n            }\n            else {\n              sVar11 = FUN_001060c0(1,__s,sVar14);\n              if (sVar14 != sVar11) {\n                uVar12 = dcgettext(0,\"write error\",5);\n                piVar10 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n                error(1,*piVar10,\"%s\",uVar12);\n              }\n            }\n          }\n          if (bVar17) {\n            bVar17 = param_2 != local_80;\n            uVar15 = local_80 + 1;\n            local_80 = 1;\n            if (bVar17) {\n              local_80 = uVar15;\n            }\n          }\n        }\n        __s = pvVar16;\n      } while (pvVar16 != pvVar1);\n    }\n  }\n  if (param_1 == 0) {\n    if (bVar3) {\nLAB_0010579b:\n      local_68 = (int)param_2;\n    }\n    else {\n      local_68 = (int)local_70;\n    }\n    if (param_2 != 0) {\n      uVar15 = 0;\n      puVar13 = local_60;\n      do {\n        if (((ulong)(long)local_68 <= uVar15) && (DAT_001102e1 == '\\0')) {\n          FUN_001043d0(local_60,uVar15,param_2);\n        }\n        if (-1 < *(int *)(puVar13 + 1)) {\n          FUN_001045d0(puVar13[2],*(int *)(puVar13 + 1),*(undefined4 *)(puVar13 + 3),*puVar13);\n        }\n        uVar15 = uVar15 + 1;\n        *(undefined4 *)(puVar13 + 1) = 0xfffffffe;\n        puVar13 = puVar13 + 4;\n      } while (param_2 != uVar15);\n    }\n  }\n  return;\n}\n\n", 
    "001111c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001098e0": "\nbool FUN_001098e0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010fe68)();\n  return pvVar1;\n}\n\n", 
    "00111238": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setenv_0010fdd8)();\n  return iVar1;\n}\n\n", 
    "00108160": "\nvoid FUN_00108160(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106260(auStack_68);\n  FUN_00107bd0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107f10": "\nundefined8 FUN_00107f10(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00110620;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00106a10(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00108c20(lVar3 + 1);\n  FUN_00106a10(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_0010fef8)();\n  return iVar1;\n}\n\n", 
    "00111120": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109720": "\nint FUN_00109720(undefined8 param_1,int *param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_001095a0();\n  *param_2 = iVar1;\n  return iVar1 >> 0x1f;\n}\n\n", 
    "00102850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_0010ff30)();\n  return pvVar1;\n}\n\n", 
    "001110a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010fea0)();\n  return iVar1;\n}\n\n", 
    "001080e0": "\nvoid FUN_001080e0(undefined8 param_1)\n\n{\n  FUN_001080b0(0,param_1);\n  return;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010fe10)();\n  return sVar1;\n}\n\n", 
    "00103700": "\nundefined8 FUN_00103700(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "001111c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0010ff50)();\n  return iVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigemptyset_0010fec0)();\n  return iVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010fe30)();\n  return sVar1;\n}\n\n", 
    "00108c80": "\nvoid * FUN_00108c80(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00108e40();\n  }\n  return pvVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010fda0)();\n  return piVar1;\n}\n\n", 
    "00111208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108510": "\nssize_t FUN_00108510(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = write(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7ff00001) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00107db0": "\nundefined4 FUN_00107db0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00110620;\n  }\n  return *param_1;\n}\n\n", 
    "00106450": "\nundefined8\nFUN_00106450(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001063c0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00106330": "\nundefined8 FUN_00106330(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001062d0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00105cf0": "\nvoid FUN_00105cf0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = DAT_00110518;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\"Usage: %s [OPTION]... [FILE [PREFIX]]\\n\",5);\n    __printf_chk(1,uVar2,uVar4);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"Output pieces of FILE to PREFIXaa, PREFIXab, ...;\\ndefault size is 1000 lines, and default PREFIX is \\'x\\'.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_00103730();\n    FUN_00103760();\n    uVar4 = dcgettext(0,\n                      \"  -a, --suffix-length=N   generate suffixes of length N (default %d)\\n      --additional-suffix=SUFFIX  append an additional SUFFIX to file names\\n  -b, --bytes=SIZE        put SIZE bytes per output file\\n  -C, --line-bytes=SIZE   put at most SIZE bytes of records per output file\\n  -d                      use numeric suffixes starting at 0, not alphabetic\\n      --numeric-suffixes[=FROM]  same as -d, but allow setting the start value\\n  -x                      use hex suffixes starting at 0, not alphabetic\\n      --hex-suffixes[=FROM]  same as -x, but allow setting the start value\\n  -e, --elide-empty-files  do not generate empty output files with \\'-n\\'\\n      --filter=COMMAND    write to shell COMMAND; file name is $FILE\\n  -l, --lines=NUMBER      put NUMBER lines/records per output file\\n  -n, --number=CHUNKS     generate CHUNKS output files; see explanation below\\n  -t, --separator=SEP     use SEP instead of newline as the record separator;\\n                            \\'\\\\0\\' (zero) specifies the NUL character\\n  -u, --unbuffered        immediately copy input to output with \\'-n r/...\\'\\n\"\n                      ,5);\n    __fprintf_chk(stdout,1,uVar4,2);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"      --verbose           print a diagnostic just before each\\n                            output file is opened\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_00103790();\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nCHUNKS may be:\\n  N       split into N files based on size of input\\n  K/N     output Kth of N to stdout\\n  l/N     split into N files without splitting lines/records\\n  l/K/N   output Kth of N to stdout without splitting lines/records\\n  r/N     like \\'l\\' but use round robin distribution\\n  r/K/N   likewise but only output Kth of N to stdout\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_00105a50();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001099d0": "\nint FUN_001099d0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00111200": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_0010fe80)();\n  return sVar1;\n}\n\n", 
    "00109490": "\nint FUN_00109490(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001025d0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010fdf0)();\n  return;\n}\n\n", 
    "001036c0": "\nvoid thunk_FUN_00103640(void)\n\n{\n  FUN_00103640();\n  return;\n}\n\n", 
    "00109ac0": "\nbool FUN_00109ac0(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00109010": "\nuint FUN_00109010(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0010910b;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010914c:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_001091a0_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_001090d2;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00109176_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00109176_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = FUN_00108fb0(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_001091a0_caseD_43;\n        case 0x45:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = FUN_00108fe0(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = FUN_00108fb0(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = FUN_00108fb0(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_001090d2;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010914c;\n      }\n    }\n  }\nLAB_0010910b:\n  uVar10 = 4;\nLAB_001090d2:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001062b0": "\nbool FUN_001062b0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_001099f0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00105e80": "\nvoid FUN_00105e80(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00109a50(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00110508 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00110510 != 0) {\n        uVar4 = FUN_001082b0();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,\"%s\",uVar3);\n    }\n  }\n  iVar1 = FUN_00109a50(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00110030);\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010fd98)();\n  return;\n}\n\n", 
    "00103610": "\n/* WARNING: Removing unreachable block (ram,0x00103623) */\n/* WARNING: Removing unreachable block (ram,0x0010362f) */\n\nvoid FUN_00103610(void)\n\n{\n  return;\n}\n\n", 
    "00105910": "\nlong FUN_00105910(long param_1)\n\n{\n  if (0x1ffffffffffe0000 < param_1 - 0x20000U) {\n    param_1 = 0x20000;\n  }\n  return param_1;\n}\n\n", 
    "00103730": "\nvoid FUN_00103730(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_waitpid_0010ff48)();\n  return _Var1;\n}\n\n", 
    "00103850": "\nvoid FUN_00103850(ulong param_1,int param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long lVar6;\n  char *pcVar7;\n  long in_FS_OFFSET;\n  byte bVar8;\n  ulong local_18;\n  long local_10;\n  \n  bVar8 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_001103a0 == 0) {\n    if (param_2 - 5U < 3) goto LAB_001038ff;\nLAB_00103887:\n    uVar4 = DAT_001103a8;\n    if (DAT_001103a8 == 0) {\nLAB_0010389c:\n      DAT_001103a8 = uVar4;\n      if (uVar4 < 2) {\n        DAT_001103a8 = 2;\n      }\n      goto LAB_001038b0;\n    }\n  }\n  else {\n    DAT_00110018 = 0;\n    if (2 < param_2 - 5U) goto LAB_00103887;\n    iVar2 = FUN_00109010(DAT_001103a0,0,10,&local_18,\"\");\n    if (((iVar2 == 0) && (local_18 <= ~param_1)) && (local_18 < param_1)) {\n      param_1 = param_1 + local_18;\n    }\nLAB_001038ff:\n    uVar4 = 0xffffffffffffffff;\n    pcVar7 = PTR_s_abcdefghijklmnopqrstuvwxyz_00110020;\n    do {\n      if (uVar4 == 0) break;\n      uVar4 = uVar4 - 1;\n      cVar1 = *pcVar7;\n      pcVar7 = pcVar7 + (ulong)bVar8 * -2 + 1;\n    } while (cVar1 != '\\0');\n    uVar4 = ~uVar4 - 1;\n    uVar5 = param_1 % uVar4;\n    lVar6 = 0;\n    for (; uVar4 <= param_1; param_1 = param_1 / uVar4) {\n      lVar6 = lVar6 + 1;\n    }\n    DAT_00110018 = 0;\n    uVar4 = (ulong)(uVar5 != 0) + lVar6;\n    if (DAT_001103a8 == 0) goto LAB_0010389c;\n    if (DAT_001103a8 < uVar4) {\n      uVar3 = dcgettext(0,\"the suffix length needs to be at least %lu\",5);\n                    /* WARNING: Subroutine does not return */\n      error(1,0,uVar3,uVar4);\n    }\n  }\n  DAT_00110018 = 0;\nLAB_001038b0:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0010feb8)();\n  return iVar1;\n}\n\n", 
    "00109d80": "\nvoid FUN_00109d80(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00111218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102640": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010fe28)();\n  return;\n}\n\n", 
    "00108a50": "\nvoid FUN_00108a50(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_001085e0();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001111a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmin(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001098c0": "\nbool FUN_001098c0(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pipe(int *__pipedes)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pipe_0010fe78)();\n  return iVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_write_0010fde8)();\n  return sVar1;\n}\n\n", 
    "00111220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105e70": "\nvoid FUN_00105e70(undefined param_1)\n\n{\n  DAT_00110508 = param_1;\n  return;\n}\n\n", 
    "001063c0": "\nundefined8 FUN_001063c0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109970((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106330(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00105f90": "\nvoid FUN_00105f90(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "001041e0": "\nvoid FUN_001041e0(ulong param_1,ulong param_2,void *param_3,undefined8 param_4,ulong param_5,\n                 ulong param_6)\n\n{\n  char cVar1;\n  ulong uVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  __off_t _Var5;\n  ulong __offset;\n  ulong uVar6;\n  \n  if ((((param_1 == 0) || (param_2 == 0)) || (param_2 < param_1)) || (param_6 < param_2)) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"k && n && k <= n && n <= file_size\",\"src/split.c\",0x3df,\"bytes_chunk_extract\");\n  }\n  __offset = (param_1 - 1) * (param_6 / param_2);\n  if (param_1 != param_2) {\n    param_6 = (param_6 / param_2) * param_1;\n  }\n  if (__offset < param_5) {\n    param_5 = param_5 - __offset;\n    memmove(param_3,(void *)((long)param_3 + __offset),param_5);\n    if ((long)param_6 <= (long)__offset) {\n      return;\n    }\n    if (param_5 != 0xffffffffffffffff) goto LAB_001042af;\n  }\n  else {\n    _Var5 = lseek(0,__offset,1);\n    if (_Var5 < 0) {\n      uVar4 = FUN_001082d0(0,3,DAT_00110390);\n      piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar3,\"%s\",uVar4);\n    }\n    if ((long)param_6 <= (long)__offset) {\n      return;\n    }\n  }\n  do {\n    param_5 = FUN_001084a0(0,param_3,param_4);\n    if (param_5 == 0xffffffffffffffff) {\n      uVar4 = FUN_001082d0(0,3,DAT_00110390);\n      piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar3,\"%s\",uVar4);\n    }\n    if (param_5 == 0) {\n      return;\n    }\nLAB_001042af:\n    uVar6 = param_6 - __offset;\n    if (param_5 < param_6 - __offset) {\n      uVar6 = param_5;\n    }\n    uVar2 = FUN_001060c0(1,param_3,uVar6);\n    if (uVar2 != uVar6) {\n      piVar3 = __errno_location();\n      cVar1 = FUN_00103710();\n      if (cVar1 == '\\0') {\n        uVar4 = FUN_001082d0(0,3,&DAT_0010ad85);\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar3,\"%s\",uVar4);\n      }\n    }\n    __offset = __offset + uVar6;\n  } while ((long)__offset < (long)param_6);\n  return;\n}\n\n", 
    "00102630": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010fe20)();\n  return;\n}\n\n", 
    "00109820": "\nulong FUN_00109820(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010fd90)();\n  return;\n}\n\n", 
    "00105900": "\nbool FUN_00105900(uint param_1)\n\n{\n  return (param_1 & 0xd000) == 0x8000;\n}\n\n", 
    "001111a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}