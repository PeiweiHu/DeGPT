{
    "00103bd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_fork_00117fa8)();\n  return _Var1;\n}\n\n", 
    "00103ab0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_waitpid_00117f18)();\n  return _Var1;\n}\n\n", 
    "0010a6f0": "\nvoid FUN_0010a6f0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001065b0": "\nundefined4 FUN_001065b0(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)FUN_00105b70(*(undefined4 *)((long)pvVar1 + 8),param_2,\n                                 *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_001066bc;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = FUN_00105d40(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = FUN_00105d40(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = FUN_00105d40(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_001066bc;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_001066bc;\n    }\n  }\n  uVar3 = 0;\nLAB_001066bc:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109470": "\nvoid FUN_00109470(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00109380(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "0010d590": "\nulong FUN_0010d590(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00119278": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001043d0": "\nundefined8 FUN_001043d0(void)\n\n{\n  return 0xffffffff;\n}\n\n", 
    "00103910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dirfd_00117e48)();\n  return iVar1;\n}\n\n", 
    "00119030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d470": "\nulong FUN_0010d470(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00119270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119150": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103aa0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00117f10)();\n  return;\n}\n\n", 
    "00103bc0": "\nvoid mode_to_security_class(void)\n\n{\n  (*(code *)PTR_mode_to_security_class_00117fa0)();\n  return;\n}\n\n", 
    "00110220": "\nvoid FUN_00110220(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010da10": "\nundefined4 FUN_0010da10(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  char cVar4;\n  \n  cVar4 = FUN_0010d9c0();\n  if (cVar4 != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n", 
    "00109480": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00109480(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00118060;\n  if (1 < DAT_00118058) {\n    ppvVar2 = (void **)(PTR_DAT_00118060 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00118060 + (ulong)(DAT_00118058 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00118100) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00118078 = &DAT_00118100;\n    _DAT_00118070 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00118070) {\n    free(__ptr_00);\n    PTR_DAT_00118060 = &DAT_00118070;\n  }\n  DAT_00118058 = 1;\n  return;\n}\n\n", 
    "0010d9c0": "\nundefined FUN_0010d9c0(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n", 
    "00109240": "\nvoid FUN_00109240(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00118200;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010b180": "\nundefined FUN_0010b180(void)\n\n{\n  long lVar1;\n  undefined uVar2;\n  \n  lVar1 = FUN_0010b010();\n  if (lVar1 == 0x52654973) {\n    uVar2 = 2;\n  }\n  else if (lVar1 < 0x52654974) {\n    uVar2 = 0;\n    if ((lVar1 != 0x6969) && (lVar1 != 0x9fa0)) {\n      return lVar1 != 0;\n    }\n  }\n  else {\n    uVar2 = 2;\n    if ((lVar1 != 0x58465342) && (uVar2 = 0, lVar1 != 0xff534d42)) {\n      uVar2 = lVar1 != 0x5346414f;\n    }\n  }\n  return uVar2;\n}\n\n", 
    "0010d480": "\nulong FUN_0010d480(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00119168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_type_get(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119288": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00117e40)();\n  return iVar1;\n}\n\n", 
    "0010d120": "\nuint FUN_0010d120(uint param_1,byte **param_2)\n\n{\n  int *piVar1;\n  long lVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  bool bVar5;\n  bool bVar6;\n  \n  if (param_1 == 0) {\n    piVar1 = __errno_location();\n    *piVar1 = 0x5f;\n    return 0xffffffff;\n  }\n  bVar5 = param_1 < 10;\n  bVar6 = param_1 == 10;\n  if (bVar6) {\n    lVar2 = 10;\n    pbVar3 = *param_2;\n    pbVar4 = (byte *)\"unlabeled\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar5 = *pbVar3 < *pbVar4;\n      bVar6 = *pbVar3 == *pbVar4;\n      pbVar3 = pbVar3 + 1;\n      pbVar4 = pbVar4 + 1;\n    } while (bVar6);\n    if ((!bVar5 && !bVar6) == bVar5) {\n      freecon(*param_2);\n      *param_2 = (byte *)0x0;\n      piVar1 = __errno_location();\n      *piVar1 = 0x3d;\n      return 0xffffffff;\n    }\n  }\n  return param_1;\n}\n\n", 
    "0011033c": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00105a90": "\nulong FUN_00105a90(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = thunk_FUN_0010d480(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "00119160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119280": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchown(int __fd,__uid_t __owner,__gid_t __group)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103bf5": "\nvoid FUN_00103bf5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010ab90": "\nvoid FUN_0010ab90(long param_1,char param_2)\n\n{\n  if (*(short *)(param_1 + 0x70) == 0xb) {\n    *(ulong *)(param_1 + 0xa8) = (ulong)(param_2 != '\\0') + 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103bf0": "\nvoid FUN_00103bf0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00117f28)();\n  return iVar1;\n}\n\n", 
    "00109c10": "\nuint FUN_00109c10(uint *param_1,char *param_2,uint param_3,int *param_4)\n\n{\n  uint uVar1;\n  int iVar2;\n  char cVar3;\n  int __fd;\n  uint uVar4;\n  int *piVar5;\n  \n  if (param_4 == (int *)0x0) {\n    if ((param_3 & 1) != 0) {\n      __fd = __open_2(param_2,(param_3 & 1) << 0x11 | 0x10900);\n      goto LAB_00109c58;\n    }\n    cVar3 = FUN_00109b00(param_1,param_1 + 1);\n    if (cVar3 != '\\0') {\n      return 0xfffffffe;\n    }\n    __fd = -1;\n    uVar4 = chdir(param_2);\nLAB_00109c84:\n    if (uVar4 == 0) {\n      uVar1 = *param_1;\n      if (uVar1 == 3) {\n        uVar4 = param_1[1];\n        if (uVar4 != 0) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"wd->val.child == 0\",\"lib/savewd.c\",0x9b,\"savewd_chdir\");\n        }\n      }\n      else if (uVar1 < 4) {\n        if (uVar1 == 1) {\n          *param_1 = 2;\n        }\n        else if (uVar1 != 2) goto LAB_00109d1d;\n      }\n      else if (1 < uVar1 - 4) {\nLAB_00109d1d:\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"0\",\"lib/savewd.c\",0x9f,\"savewd_chdir\");\n      }\n    }\n  }\n  else {\n    __fd = __open_2(param_2,(param_3 & 1) << 0x11 | 0x10900);\n    *param_4 = __fd;\n    piVar5 = __errno_location();\n    param_4[1] = *piVar5;\nLAB_00109c58:\n    if (__fd < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 != 0xd) {\n        return 0xffffffff;\n      }\n      cVar3 = FUN_00109b00(param_1,param_1 + 1);\n      if (cVar3 != '\\0') {\n        return 0xfffffffe;\n      }\n      uVar4 = chdir(param_2);\n      goto LAB_00109c84;\n    }\n    if ((param_3 & 2) == 0) {\n      cVar3 = FUN_00109b00(param_1,param_1 + 1);\n      if (cVar3 != '\\0') {\n        uVar4 = 0xfffffffe;\n        goto LAB_00109cbc;\n      }\n      uVar4 = fchdir(__fd);\n      goto LAB_00109c84;\n    }\n    uVar4 = 0;\n  }\n  if (__fd < 0) {\n    return uVar4;\n  }\n  if (param_4 != (int *)0x0) {\n    return uVar4;\n  }\nLAB_00109cbc:\n  piVar5 = __errno_location();\n  iVar2 = *piVar5;\n  close(__fd);\n  *piVar5 = iVar2;\n  return uVar4;\n}\n\n", 
    "0010aa70": "\nchar * FUN_0010aa70(void)\n\n{\n  char *pcVar1;\n  int *piVar2;\n  \n  pcVar1 = getcwd((char *)0x0,0);\n  if (pcVar1 == (char *)0x0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a9a0();\n    }\n  }\n  return pcVar1;\n}\n\n", 
    "00107060": "\nundefined4 FUN_00107060(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "0010df80": "\nint FUN_0010df80(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010dfef;\n    }\n    iVar1 = FUN_0010e1a0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010dfef:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00119018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a7e0": "\nvoid * FUN_0010a7e0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010a9a0();\n  }\n  return pvVar1;\n}\n\n", 
    "00119258": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109570": "\nvoid FUN_00109570(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_001076d0(auStack_58);\n  FUN_00109040(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid is_selinux_enabled(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b270": "\nuint FUN_0010b270(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      FUN_0010b200(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  FUN_0010af60(param_1 + 0x60);\n  return uVar2;\n}\n\n", 
    "0010d570": "\nuint FUN_0010d570(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00119250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103810": "\nvoid fgetfilecon(void)\n\n{\n  (*(code *)PTR_fgetfilecon_00117dc8)();\n  return;\n}\n\n", 
    "00103930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__mode_t umask(__mode_t __mask)\n\n{\n  __mode_t _Var1;\n  \n  _Var1 = (*(code *)PTR_umask_00117e58)();\n  return _Var1;\n}\n\n", 
    "00103ac0": "\nvoid fsetfilecon(void)\n\n{\n  (*(code *)PTR_fsetfilecon_00117f20)();\n  return;\n}\n\n", 
    "00103be0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00117fb0)();\n  return ppuVar1;\n}\n\n", 
    "00109b00": "\nundefined8 FUN_00109b00(uint *param_1,int *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  __pid_t _Var3;\n  int *piVar4;\n  \n  uVar1 = *param_1;\n  if (uVar1 == 3) {\n    if (-1 < *param_2) {\n      return 0;\n    }\n  }\n  else {\n    if (3 < uVar1) {\n      if (uVar1 - 4 < 2) {\n        return 0;\n      }\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"0\",\"lib/savewd.c\",99,\"savewd_save\");\n    }\n    if (uVar1 != 0) {\n      return 0;\n    }\n    iVar2 = FUN_0010d890(&DAT_0011238b,0);\n    if (-1 < iVar2) {\n      *param_1 = 1;\n      *param_2 = iVar2;\n      return 0;\n    }\n    piVar4 = __errno_location();\n    if ((*piVar4 != 0xd) && (*piVar4 != 0x74)) {\n      *param_1 = 4;\n      *param_2 = *piVar4;\n      return 0;\n    }\n    *param_1 = 3;\n    *param_2 = -1;\n  }\n  _Var3 = fork();\n  *param_2 = _Var3;\n  if (_Var3 != 0) {\n    if (0 < _Var3) {\n      return 1;\n    }\n    *param_1 = 4;\n    piVar4 = __errno_location();\n    *param_2 = *piVar4;\n  }\n  return 0;\n}\n\n", 
    "00110320": "\nvoid FUN_00110320(int param_1,char *param_2,stat *param_3,int param_4)\n\n{\n  __fxstatat(1,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010d9a0": "\nvoid FUN_0010d9a0(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n", 
    "00119148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getcon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a5b0": "\nvoid FUN_0010a5b0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_0010a140();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001043e0": "\nvoid FUN_001043e0(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x11154a;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_001114d0;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 6;\n    pbVar7 = (byte *)\"mkdir\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"mkdir\";\n        goto LAB_001045fe;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"mkdir\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"mkdir\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_001045fe:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"mkdir\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"mkdir\");\n    if (pcVar4 != \"mkdir\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119268": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid fsetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109220": "\nundefined4 FUN_00109220(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00118200;\n  }\n  return *param_1;\n}\n\n", 
    "001042c0": "\nuint FUN_001042c0(undefined8 param_1,char *param_2,long param_3)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  \n  if (*(char *)(param_3 + 0x14) != '\\0') {\n    iVar3 = FUN_00104c60(param_2,0x4000);\n    if (iVar3 < 0) {\n      piVar6 = __errno_location();\n      cVar1 = FUN_001040e0(*piVar6);\n      if (cVar1 == '\\0') {\n        uVar4 = FUN_00109640(4,param_1);\n        uVar5 = dcgettext(0,\"failed to set default creation context for %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar6,uVar5,uVar4);\n      }\n    }\n  }\n  if ((*(uint *)(param_3 + 8) & 0xc0) == 0) {\n    uVar2 = mkdir(param_2,0x1ff);\n  }\n  else {\n    umask(*(uint *)(param_3 + 8) & 0xffffff3f);\n    uVar2 = mkdir(param_2,0x1ff);\n    piVar6 = __errno_location();\n    iVar3 = *piVar6;\n    umask(*(__mode_t *)(param_3 + 8));\n    *piVar6 = iVar3;\n  }\n  if (uVar2 != 0) {\n    return uVar2;\n  }\n  uVar2 = *(uint *)(param_3 + 8);\n  FUN_00104280(param_1,param_3);\n  return uVar2 >> 8 & 1;\n}\n\n", 
    "00103800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00117dc0)();\n  return pcVar1;\n}\n\n", 
    "00119140": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid matchpathcon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_unlocked_00117e50)();\n  return iVar1;\n}\n\n", 
    "00106150": "\nlong FUN_00106150(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00105ac0();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "00107480": "\nvoid FUN_00107480(uint param_1,char param_2,uint param_3,char *param_4,uint *param_5)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  char cVar6;\n  uint uVar7;\n  \n  cVar6 = param_4[1];\n  param_1 = param_1 & 0xfff;\n  uVar2 = 0;\n  if (cVar6 != '\\0') {\nLAB_0010753d:\n    do {\n      uVar1 = *(uint *)(param_4 + 4);\n      uVar4 = *(uint *)(param_4 + 8);\n      if (param_2 == '\\0') {\n        if (cVar6 != '\\x02') {\n          uVar5 = 0xffffffff;\n          uVar3 = 0;\n          goto LAB_001074c2;\n        }\n        uVar5 = 0xffffffff;\n        uVar3 = param_1 & 0x49;\n        if (uVar3 != 0) {\n          uVar3 = 0;\n          goto LAB_0010756d;\n        }\nLAB_00107507:\n        cVar6 = *param_4;\n        uVar4 = uVar4 & uVar5;\n        if (uVar1 != 0) goto LAB_00107580;\nLAB_00107512:\n        uVar4 = uVar4 & ~param_3;\n        if (cVar6 != '-') {\n          if (cVar6 != '=') goto LAB_00107525;\n          goto LAB_00107599;\n        }\nLAB_001075c8:\n        uVar2 = uVar2 | uVar4;\n        param_1 = param_1 & ~uVar4;\n      }\n      else {\n        uVar5 = *(uint *)(param_4 + 0xc) | 0xfffff3ff;\n        uVar3 = ~*(uint *)(param_4 + 0xc) & 0xc00;\n        if (cVar6 != '\\x02') {\nLAB_001074c2:\n          if (cVar6 == '\\x03') {\n            uVar4 = uVar4 & param_1;\n            uVar7 = ~-(uint)((uVar4 & 0x124) == 0) & 0x124;\n            if ((uVar4 & 0x92) != 0) {\n              uVar7 = uVar7 | 0x92;\n            }\n            if ((uVar4 & 0x49) != 0) {\n              uVar7 = uVar7 | 0x49;\n            }\n            uVar4 = uVar4 | uVar7;\n          }\n          goto LAB_00107507;\n        }\nLAB_0010756d:\n        cVar6 = *param_4;\n        uVar4 = (uVar4 | 0x49) & uVar5;\n        if (uVar1 == 0) goto LAB_00107512;\nLAB_00107580:\n        uVar4 = uVar4 & uVar1;\n        if (cVar6 == '-') goto LAB_001075c8;\n        if (cVar6 == '=') {\n          uVar3 = uVar3 | ~uVar1;\n          uVar5 = ~uVar3;\nLAB_00107599:\n          cVar6 = param_4[0x11];\n          param_4 = param_4 + 0x10;\n          uVar2 = uVar2 | uVar5 & 0xfff;\n          param_1 = param_1 & uVar3 | uVar4;\n          if (cVar6 == '\\0') break;\n          goto LAB_0010753d;\n        }\nLAB_00107525:\n        if (cVar6 == '+') {\n          uVar2 = uVar2 | uVar4;\n          param_1 = param_1 | uVar4;\n        }\n      }\n      cVar6 = param_4[0x11];\n      param_4 = param_4 + 0x10;\n    } while (cVar6 != '\\0');\n  }\n  if (param_5 != (uint *)0x0) {\n    *param_5 = uVar2;\n  }\n  return;\n}\n\n", 
    "00119108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119238": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001056c0": "\nvoid FUN_001056c0(undefined8 param_1)\n\n{\n  DAT_001180d8 = param_1;\n  return;\n}\n\n", 
    "0010a8e0": "\nvoid FUN_0010a8e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010a850(param_1,param_2,1);\n  return;\n}\n\n", 
    "00109670": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00109670(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00118200;\n  uStack_40 = uRam0000000000118208;\n  local_38 = _DAT_00118210;\n  uStack_30 = uRam0000000000118218;\n  local_28 = _DAT_00118220;\n  uStack_20 = uRam0000000000118228;\n  local_18 = DAT_00118230;\n  FUN_00109260(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00109040(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109550": "\nvoid FUN_00109550(undefined8 param_1)\n\n{\n  FUN_00109520(0,param_1);\n  return;\n}\n\n", 
    "00119230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d670": "\nulong FUN_0010d670(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00119110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107e80": "\nulong FUN_00107e80(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00108307:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00108329;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_001088c6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010827f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00108307;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010827f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00107d50(&DAT_00111839,param_5);\n      local_78 = (char *)FUN_00107d50(&DAT_00111829);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00107fd0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00108830_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x001087cb;\n          goto LAB_001085bb;\n        default:\nswitchD_001086e0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_0010d1f0(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00108ab8;\n              }\n              if (lVar10 == -2) goto joined_r0x00108eca;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_001084a0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00108ab8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00108241;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00108788;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00108788;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00108788:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00108497;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00108484;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00108484:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_001081a8;\n          goto LAB_00108497;\n        case 0x23:\n        case 0x7e:\nLAB_0010847b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00108484;\n          goto LAB_001081a5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_001086e0_caseD_25;\n        case 0x27:\nswitchD_001086e0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_001081a8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x001081cb;\n          }\n          goto LAB_001084a0;\n        case 0x3f:\nswitchD_001086e0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00108e2e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_001081a8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x001081cb;\n          }\n          goto LAB_001084a0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_001080d8_caseD_5c;\n          if (!bVar20) {\nLAB_00108718:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00108730;\n          }\n          goto LAB_001084a0;\n        case 0x7b:\n        case 0x7d:\nswitchD_001086e0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010847b;\nLAB_001081a5:\n          bVar23 = false;\n          goto LAB_001081a8;\n        }\nLAB_001085b0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_001085bb:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_001081c8;\n          goto LAB_001080f0;\n        }\nLAB_001085f0:\n        bVar21 = false;\n        goto joined_r0x00108601;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00108810;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_001080d8_caseD_0;\n          default:\n            goto switchD_001086e0_caseD_1;\n          case 7:\n            goto switchD_00108830_caseD_7;\n          case 8:\n            goto switchD_00108830_caseD_8;\n          case 9:\n            goto switchD_001080d8_caseD_9;\n          case 10:\n            goto switchD_00108830_caseD_a;\n          case 0xb:\n            goto switchD_00108830_caseD_b;\n          case 0xc:\n            goto switchD_00108830_caseD_c;\n          case 0xd:\n            goto switchD_00108830_caseD_d;\n          case 0x20:\n            goto LAB_00108859;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_001080d8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00108841;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001080e8;\n          case 0x27:\n            goto switchD_001086e0_caseD_27;\n          case 0x3f:\n            goto switchD_001086e0_caseD_3f;\n          case 0x5c:\n            goto switchD_001080d8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_001086e0_caseD_7b;\n          }\n        }\n        goto LAB_001084ae;\n      }\nLAB_00108810:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00108830_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_001080d8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x001081cb;\n            }\nLAB_00108c6b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00108c6b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00108ca8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x001081cb;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_001084a0;\n      default:\n        bVar23 = false;\n        goto switchD_001086e0_caseD_1;\n      case 7:\nswitchD_00108830_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00108830_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_001080d8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_001085b0;\n      case 10:\nswitchD_00108830_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_001085f0;\n      case 0xb:\nswitchD_00108830_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_001085f0;\n      case 0xc:\nswitchD_00108830_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00108830_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_001085f0;\n      case 0x20:\n        bVar5 = false;\nLAB_00108859:\n        uVar15 = 0x20;\n        goto LAB_001080e8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_001080d8_caseD_21:\n        bVar22 = false;\n        goto LAB_001081a5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00108841:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_001081a8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001080f0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001080e8:\n        bVar22 = false;\n        goto LAB_001080f0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_001086e0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_001086e0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_001080d8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00108718;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_001085b0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_001086e0_caseD_7b;\n      }\n      if (bVar20) goto LAB_00108610;\n      bVar21 = false;\n      goto LAB_00108166;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00108497:\n      param_5 = 2;\nLAB_001084a0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_001084ae:\n      uVar13 = FUN_00107e80(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_001084e8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00108f35:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001084e8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00107e80(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001084e8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00108f35;\nLAB_001088c6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00108329:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x001087cb:\n  uVar13 = uVar13 + 1;\n  goto LAB_00107fd0;\nswitchD_00108e2e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00108ca8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x001081cb;\n    goto LAB_001080f0;\n  }\n  goto LAB_001084ae;\njoined_r0x00108eca:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00108ab8:\n  if (1 < uVar17) {\nLAB_00108ac2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_001084a0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00108178;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00108730;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00108241:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00108ac2;\n  }\nswitchD_001086e0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_001081a8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001080f0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x001081cb;\n  }\n  else {\nLAB_001081c8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x001081cb:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00108730:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00108178;\n    }\n  }\njoined_r0x00108601:\n  if (bVar20) {\nLAB_00108610:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_001084a0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00108166:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00108178:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00107fd0;\n}\n\n", 
    "0010b010": "\nlong FUN_0010b010(long param_1,int param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 *__ptr;\n  undefined8 *puVar5;\n  long in_FS_OFFSET;\n  undefined8 local_b8 [2];\n  statfs local_a8;\n  long local_30;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(lVar3 + 0x49) & 2) != 0) {\n    lVar4 = *(long *)(lVar3 + 0x50);\n    if (lVar4 == 0) {\n      lVar4 = FUN_00106300(0xd,0,FUN_0010aaf0,FUN_0010ab00,PTR_free_00117fb8);\n      *(long *)(lVar3 + 0x50) = lVar4;\n      if (lVar4 != 0) goto LAB_0010b04c;\n    }\n    else {\nLAB_0010b04c:\n      local_b8[0] = *(undefined8 *)(param_1 + 0x78);\n      lVar3 = FUN_001060a0(lVar4,local_b8);\n      if (lVar3 != 0) {\n        lVar3 = *(long *)(lVar3 + 8);\n        goto LAB_0010b0bb;\n      }\n    }\n    if ((-1 < param_2) && (iVar2 = fstatfs(param_2,&local_a8), lVar3 = local_a8.f_type, iVar2 == 0))\n    {\n      if ((lVar4 != 0) && (__ptr = (undefined8 *)malloc(0x10), __ptr != (undefined8 *)0x0)) {\n        uVar1 = *(undefined8 *)(param_1 + 0x78);\n        __ptr[1] = lVar3;\n        *__ptr = uVar1;\n        puVar5 = (undefined8 *)FUN_001069b0(lVar4,__ptr);\n        if (puVar5 == (undefined8 *)0x0) {\n          free(__ptr);\n          lVar3 = local_a8.f_type;\n        }\n        else {\n          lVar3 = local_a8.f_type;\n          if (__ptr != puVar5) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n        }\n      }\n      goto LAB_0010b0bb;\n    }\n  }\n  lVar3 = 0;\nLAB_0010b0bb:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar3;\n}\n\n", 
    "0010afa0": "\nDIR * FUN_0010afa0(undefined8 param_1,undefined8 param_2,uint param_3,int *param_4)\n\n{\n  int iVar1;\n  int __fd;\n  DIR *pDVar2;\n  int *piVar3;\n  \n  pDVar2 = (DIR *)0x0;\n  __fd = FUN_0010dea0(param_1,param_2,param_3 | 0x90900);\n  if (-1 < __fd) {\n    pDVar2 = fdopendir(__fd);\n    if (pDVar2 == (DIR *)0x0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      close(__fd);\n      *piVar3 = iVar1;\n      return (DIR *)0x0;\n    }\n    *param_4 = __fd;\n  }\n  return pDVar2;\n}\n\n", 
    "00109f60": "\nvoid FUN_00109f60(uint *param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *param_1;\n  if (uVar1 == 3) {\n    if (-1 < (int)param_1[1]) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"wd->val.child < 0\",\"lib/savewd.c\",0xf7,\"savewd_finish\");\n    }\n  }\n  else if (uVar1 < 4) {\n    if (uVar1 != 0) {\n      close(param_1[1]);\n    }\n  }\n  else if (uVar1 != 4) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0\",\"lib/savewd.c\",0xfb,\"savewd_finish\");\n  }\n  *param_1 = 5;\n  return;\n}\n\n", 
    "00110300": "\nvoid FUN_00110300(char *param_1,stat *param_2)\n\n{\n  __lxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00104080": "\nvoid FUN_00104080(void)\n\n{\n  if (DAT_001180c8 == '\\0') {\n    if (PTR___cxa_finalize_00117fe0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00118008);\n    }\n    FUN_00104010();\n    DAT_001180c8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "0010b8c0": "\nvoid FUN_0010b8c0(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto FUN_00103c2c;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = *(long *)(lVar1 + 0x80);\n      }\n    }\n  }\n  else {\n    local_28 = *(undefined8 *)(param_3 + 0x78);\n    local_20 = *(undefined8 *)(param_3 + 0x80);\n    __ptr = (void *)FUN_00106a10(*param_2,&local_28);\n    if (__ptr == (void *)0x0) {\nFUN_00103c2c:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    free(__ptr);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001058f0": "\nvoid FUN_001058f0(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)FUN_0010a780(0x18);\n  uVar2 = FUN_0010a980(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)FUN_001069b0(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      FUN_00106cd0(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a9a0();\n}\n\n", 
    "0010a8f0": "\nvoid FUN_0010a8f0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_0010a780();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010a7d0": "\nvoid thunk_FUN_0010a780(void)\n\n{\n  FUN_0010a780();\n  return;\n}\n\n", 
    "00119248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109560": "\nvoid FUN_00109560(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109540(0,param_1,param_2);\n  return;\n}\n\n", 
    "00105a50": "\nulong FUN_00105a50(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = FUN_001059e0(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "00107d50": "\nchar * FUN_00107d50(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_0010da60();\n    iVar1 = FUN_00107ca0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00107ca0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00111821;\n      }\n      else {\n        pcVar2 = &DAT_0011181e;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00111825;\n    }\n    else {\n      pcVar2 = &DAT_0011181a;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "0010b140": "\nulong FUN_0010b140(void)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_0010b010();\n  if ((uVar1 != 0x1021994) && (uVar1 != 0xff534d42)) {\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0x6969);\n  }\n  return 0;\n}\n\n", 
    "00119120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106c60": "\nundefined8 FUN_00106c60(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = FUN_00109ac0(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "0010d560": "\nbool FUN_0010d560(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00119000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b380": "\nundefined8 FUN_0010b380(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n", 
    "00105b70": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong FUN_00105b70(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_001116d8 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_001116dc) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_001116dc) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = FUN_00105a50(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00119240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchmod(int __fd,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103bb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00117f98)();\n  return iVar1;\n}\n\n", 
    "00105eb0": "\nulong FUN_00105eb0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010cf70": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n", 
    "00106290": "\nulong FUN_00106290(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "0010aa30": "\nbool FUN_0010aa30(long param_1,long param_2)\n\n{\n  uint uVar1;\n  bool bVar2;\n  \n  bVar2 = true;\n  uVar1 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar1 != 0x10) && (bVar2 = false, uVar1 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar2;\n}\n\n", 
    "00119208": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a9e0": "\nvoid FUN_0010a9e0(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010a9a0();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n", 
    "001077a0": "\nundefined8 FUN_001077a0(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107740(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001078c0": "\nundefined8\nFUN_001078c0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107830(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001056e0": "\nvoid FUN_001056e0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0010d740(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_001180d0 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_001180d8 != 0) {\n        uVar4 = FUN_00109720();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,\"%s\",uVar3);\n    }\n  }\n  iVar1 = FUN_0010d740(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00118018);\n}\n\n", 
    "00109890": "\nvoid FUN_00109890(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00109880(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010a7a0": "\nvoid FUN_0010a7a0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_0010a780();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a9a0();\n}\n\n", 
    "00119210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109650": "\nvoid FUN_00109650(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001095d0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00107a20": "\nundefined8\nFUN_00107a20(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107970(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010a140": "\nundefined8\nFUN_0010a140(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00112008,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010a409;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0010a409:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010a4ab;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010a4ab:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010a25d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010a25d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010d890": "\nvoid FUN_0010d890(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  FUN_0010df20(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106c90": "\nulong FUN_00106c90(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n", 
    "00105ea0": "\nundefined8 FUN_00105ea0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "00103ba0": "\nvoid context_str(void)\n\n{\n  (*(code *)PTR_context_str_00117f90)();\n  return;\n}\n\n", 
    "00119218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001056d0": "\nvoid FUN_001056d0(undefined param_1)\n\n{\n  DAT_001180d0 = param_1;\n  return;\n}\n\n", 
    "001057f0": "\nundefined * FUN_001057f0(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_001057b0();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n", 
    "00119100": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid fgetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109540": "\nvoid FUN_00109540(void)\n\n{\n  FUN_00109040();\n  return;\n}\n\n", 
    "0010d660": "\nbool FUN_0010d660(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00109300": "\nvoid FUN_00109300(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00118200;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00107e80(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00119220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chown(char *__file,__uid_t __owner,__gid_t __group)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d540": "\nbool FUN_0010d540(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010ad70": "\nlong FUN_0010ad70(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_0010adc5:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_0010adc5;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n", 
    "0010df20": "\nuint FUN_0010df20(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0010f310();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00119308": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001069b0": "\nundefined8 FUN_001069b0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00106740(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001059e0": "\nulong FUN_001059e0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "001036e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_readlink_00117d30)();\n  return sVar1;\n}\n\n", 
    "001058c0": "\nvoid FUN_001058c0(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00119310": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chmod(char *__file,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_chmod_00117f00)();\n  return iVar1;\n}\n\n", 
    "0010d510": "\nulong FUN_0010d510(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00106100": "\nlong FUN_00106100(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00103bf5();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00103bf5();\n  return lVar1;\n}\n\n", 
    "00105010": "\nundefined4 FUN_00105010(long *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined4 uVar1;\n  long lVar2;\n  \n  lVar2 = *param_1;\n  if (lVar2 == 0) {\n    lVar2 = FUN_00106300(7,0,FUN_00106c10,FUN_00106c90,FUN_00106cd0);\n    *param_1 = lVar2;\n    if (lVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a9a0(0);\n    }\n  }\n  uVar1 = FUN_00105980(lVar2,param_2,param_3);\n  if ((char)uVar1 == '\\0') {\n    FUN_001058f0(*param_1,param_2,param_3);\n  }\n  return uVar1;\n}\n\n", 
    "00104280": "\nvoid FUN_00104280(undefined8 param_1,long param_2)\n\n{\n  undefined8 uVar1;\n  \n  if (*(long *)(param_2 + 0x18) != 0) {\n    uVar1 = FUN_00109640(4,param_1);\n    FUN_001047c0(stdout,*(undefined8 *)(param_2 + 0x18),uVar1);\n    return;\n  }\n  return;\n}\n\n", 
    "00104040": "\n/* WARNING: Removing unreachable block (ram,0x00104064) */\n/* WARNING: Removing unreachable block (ram,0x00104070) */\n\nvoid FUN_00104040(void)\n\n{\n  return;\n}\n\n", 
    "00109e00": "\nuint FUN_00109e00(uint *param_1,int param_2)\n\n{\n  uint uVar1;\n  __pid_t _Var2;\n  int *piVar3;\n  uint *puVar4;\n  long in_FS_OFFSET;\n  uint local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = *param_1;\n  if (uVar1 == 3) {\n    uVar1 = param_1[1];\n    if (uVar1 == 0) {\n                    /* WARNING: Subroutine does not return */\n      _exit(param_2);\n    }\n    if (0 < (int)uVar1) {\n      while (_Var2 = waitpid(uVar1,(int *)&local_24,0), _Var2 < 0) {\n        piVar3 = __errno_location();\n        if (*piVar3 != 4) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"(*__errno_location ()) == 4\",\"lib/savewd.c\",0xd8,\"savewd_restore\");\n        }\n      }\n      param_1[1] = 0xffffffff;\n      if ((local_24 & 0x7f) != 0) {\n        raise(local_24 & 0x7f);\n      }\n      uVar1 = local_24 >> 8 & 0xff;\n      goto LAB_00109e8a;\n    }\nLAB_00109e88:\n    uVar1 = 0;\n  }\n  else {\n    if (uVar1 < 4) {\n      if (uVar1 != 2) goto LAB_00109e88;\n      uVar1 = fchdir(param_1[1]);\n      if (uVar1 == 0) {\n        *param_1 = 1;\n        goto LAB_00109e8a;\n      }\n      puVar4 = (uint *)__errno_location();\n      uVar1 = *puVar4;\n      close(param_1[1]);\n      *param_1 = 4;\n      param_1[1] = uVar1;\n    }\n    else {\n      if (uVar1 != 4) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"0\",\"lib/savewd.c\",0xe2,\"savewd_restore\");\n      }\n      uVar1 = param_1[1];\n      puVar4 = (uint *)__errno_location();\n    }\n    *puVar4 = uVar1;\n    uVar1 = 0xffffffff;\n  }\nLAB_00109e8a:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar1;\n}\n\n", 
    "0010ab40": "\nlong FUN_0010ab40(char **param_1)\n\n{\n  size_t sVar1;\n  ulong uVar2;\n  char *__s;\n  \n  __s = *param_1;\n  if (__s != (char *)0x0) {\n    uVar2 = 0;\n    do {\n      sVar1 = strlen(__s);\n      if (uVar2 < sVar1) {\n        uVar2 = sVar1;\n      }\n      __s = param_1[1];\n      param_1 = param_1 + 1;\n    } while (__s != (char *)0x0);\n    return uVar2 + 1;\n  }\n  return 1;\n}\n\n", 
    "001037f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_00117db8)();\n  return iVar1;\n}\n\n", 
    "001047c0": "\nvoid FUN_001047c0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 FILE *param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_e8;\n  undefined4 local_e4;\n  undefined *local_e0;\n  undefined *local_d8;\n  long local_d0;\n  undefined local_c8 [16];\n  undefined8 local_b8;\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined4 local_98;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  \n  if (in_AL != '\\0') {\n    local_98 = param_1;\n    local_88 = param_2;\n    local_78 = param_3;\n    local_68 = param_4;\n    local_58 = param_5;\n    local_48 = param_6;\n    local_38 = param_7;\n    local_28 = param_8;\n  }\n  local_d0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_b8 = param_11;\n  local_b0 = param_12;\n  local_a8 = param_13;\n  local_a0 = param_14;\n  fputs_unlocked(DAT_001180e0,param_9);\n  fwrite_unlocked(&DAT_001115e5,1,2,param_9);\n  local_e0 = &stack0x00000008;\n  local_e8 = 0x10;\n  local_d8 = local_c8;\n  local_e4 = 0x30;\n  FUN_0010d280(param_9,param_10,&local_e8);\n  fputc_unlocked(10,param_9);\n  if (local_d0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b32b": "\nvoid FUN_0010b32b(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "001036d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_00117d28)();\n  return;\n}\n\n", 
    "00109880": "\nvoid FUN_00109880(void)\n\n{\n  FUN_001097e0();\n  return;\n}\n\n", 
    "00119200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint lchown(char *__file,__uid_t __owner,__gid_t __group)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchmod(int __fd,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchmod_00117ef8)();\n  return iVar1;\n}\n\n", 
    "00105e90": "\nundefined8 FUN_00105e90(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "00109640": "\nvoid FUN_00109640(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00109570(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010c670": "\nundefined4 fts_close(void **param_1)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  void *pvVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar3 = *(long *)((long)__ptr + 0x58);\n    while (-1 < lVar3) {\n      pvVar2 = *(void **)((long)__ptr + 0x10);\n      if (pvVar2 == (void *)0x0) {\n        pvVar2 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n      else {\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n    }\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    FUN_0010af10();\n  }\n  ppvVar1 = param_1 + 0xc;\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar4 = fchdir(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\n        iVar4 = *piVar6;\n        iVar5 = close(*(int *)(param_1 + 5));\n        if (iVar5 == 0) goto LAB_0010c7bd;\n        if (iVar4 == 0) goto LAB_0010c778;\n        FUN_0010af60(ppvVar1);\n        if (param_1[10] == (void *)0x0) {\n          FUN_0010b750(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          free(param_1);\n          goto LAB_0010c82f;\n        }\n        goto LAB_0010c71c;\n      }\n      iVar4 = close(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\nLAB_0010c778:\n        iVar4 = *piVar6;\n        goto LAB_0010c7bd;\n      }\n    }\nLAB_0010c707:\n    iVar4 = 0;\n    FUN_0010af60(ppvVar1);\n    if (param_1[10] == (void *)0x0) {\n      FUN_0010b750(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n      free(param_1);\n      return 0;\n    }\nLAB_0010c71c:\n    FUN_001064c0();\n  }\n  else {\n    if ((*(int *)((long)param_1 + 0x2c) < 0) ||\n       (iVar4 = close(*(int *)((long)param_1 + 0x2c)), iVar4 == 0)) goto LAB_0010c707;\n    piVar6 = __errno_location();\n    iVar4 = *piVar6;\nLAB_0010c7bd:\n    FUN_0010af60(ppvVar1);\n    if (param_1[10] != (void *)0x0) goto LAB_0010c71c;\n  }\n  FUN_0010b750(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n  free(param_1);\n  if (iVar4 == 0) {\n    return 0;\n  }\n  piVar6 = __errno_location();\nLAB_0010c82f:\n  *piVar6 = iVar4;\n  return 0xffffffff;\n}\n\n", 
    "00109520": "\nvoid FUN_00109520(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109040(param_1,param_2,0xffffffffffffffff,&DAT_00118200);\n  return;\n}\n\n", 
    "0010b460": "\nvoid FUN_0010b460(undefined4 param_1,uint param_2,undefined8 param_3)\n\n{\n  if ((param_2 & 0x200) != 0) {\n    FUN_0010dea0(param_1,param_3);\n    return;\n  }\n  FUN_0010d890(param_3,(param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900);\n  return;\n}\n\n", 
    "00103b90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00117f88)();\n  return iVar1;\n}\n\n", 
    "0010d640": "\nbool FUN_0010d640(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "0010ab10": "\nulong FUN_0010ab10(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n", 
    "0010ae70": "\nvoid * FUN_0010ae70(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n", 
    "0010ab00": "\nulong FUN_0010ab00(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "0010a9a0": "\nvoid FUN_0010a9a0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(DAT_00118018,0,\"%s\",uVar1);\n}\n\n", 
    "00106a10": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_00106a10(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = FUN_00105c20(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_00106a53;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_00106b8a;\nLAB_00106aa4:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_00106aa4;\nLAB_00106b8a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    FUN_00105af0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_001116dc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_001116dc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = FUN_001065b0(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_00106a53:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109730": "\nvoid FUN_00109730(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109670(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00103fe0": "\nvoid FUN_00103fe0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00117fc8)\n            (FUN_00103c50,unaff_retaddr,&stack0x00000008,FUN_00110220,FUN_00110290,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010d500": "\nuint FUN_0010d500(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "001057b0": "\nvoid FUN_001057b0(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_00105860();\n  uVar3 = lVar2 - (long)param_1;\n  do {\n    if (uVar3 <= (cVar1 == '/')) {\n      return;\n    }\n    lVar2 = uVar3 - 1;\n    uVar3 = uVar3 - 1;\n  } while (param_1[lVar2] == '/');\n  return;\n}\n\n", 
    "001036f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00117d38)();\n  return iVar1;\n}\n\n", 
    "00119300": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106c40": "\nulong FUN_00106c40(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "0010a590": "\nvoid FUN_0010a590(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_0010a140();\n  return;\n}\n\n", 
    "00109740": "\nvoid FUN_00109740(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_001076d0(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00109260(puVar1,0x3a,1);\n  FUN_00109040(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103a90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00117f08)();\n  return pvVar1;\n}\n\n", 
    "0010b200": "\nvoid FUN_0010b200(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\nLAB_0010b24c:\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0010d9d0(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      goto LAB_0010b24c;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n", 
    "0010d740": "\nulong FUN_0010d740(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010df80(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00104130": "\nbyte FUN_00104130(undefined8 param_1,undefined8 param_2,long *param_3)\n\n{\n  byte bVar1;\n  char cVar2;\n  int iVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  long lVar7;\n  \n  lVar7 = *param_3;\n  if ((*(char *)((long)param_3 + 0x14) != '\\0') && (lVar7 == 0)) {\n    iVar3 = FUN_00104c60(param_1,0x4000);\n    if (iVar3 < 0) {\n      piVar5 = __errno_location();\n      cVar2 = FUN_001040e0(*piVar5);\n      if (cVar2 == '\\0') {\n        uVar4 = FUN_00109640(4,param_1);\n        uVar6 = dcgettext(0,\"failed to set default creation context for %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar5,uVar6,uVar4);\n      }\n    }\n    lVar7 = *param_3;\n  }\n  bVar1 = FUN_00106d10(param_1,param_2,lVar7,param_3,*(undefined4 *)((long)param_3 + 0xc),\n                       FUN_00104280,*(undefined4 *)(param_3 + 2),0xffffffffffffffff,\n                       0xffffffffffffffff,1);\n  if ((((bVar1 ^ 1) == 0) && (*(char *)((long)param_3 + 0x14) != '\\0')) && (*param_3 != 0)) {\n    uVar4 = FUN_00105860(param_1);\n    cVar2 = FUN_00104e30(uVar4,0,0);\n    if (cVar2 == '\\0') {\n      piVar5 = __errno_location();\n      cVar2 = FUN_001040e0(*piVar5);\n      if (cVar2 == '\\0') {\n        uVar4 = FUN_00109640(4,param_1);\n        uVar6 = dcgettext(0,\"failed to restore context for %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar5,uVar6,uVar4);\n      }\n    }\n  }\n  return bVar1 ^ 1;\n}\n\n", 
    "00104010": "\n/* WARNING: Removing unreachable block (ram,0x00104023) */\n/* WARNING: Removing unreachable block (ram,0x0010402f) */\n\nvoid FUN_00104010(void)\n\n{\n  return;\n}\n\n", 
    "001036a0": "\nvoid context_type_get(void)\n\n{\n  (*(code *)PTR_context_type_get_00117d10)();\n  return;\n}\n\n", 
    "001037c0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00117da0)();\n  return;\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00117e30)();\n  return pvVar1;\n}\n\n", 
    "00109ae0": "\nuint FUN_00109ae0(int param_1,uint *param_2)\n\n{\n  if (param_1 != 3) {\n    return 0;\n  }\n  return *param_2 & 0xffffff00 | (uint)(0 < (int)*param_2);\n}\n\n", 
    "00106d10": "\nundefined8\nFUN_00106d10(char *param_1,undefined4 *param_2,long param_3,undefined8 param_4,uint param_5,\n            code *param_6,uint param_7,uint param_8,uint param_9,char param_10)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  long lVar5;\n  int *piVar6;\n  char *pcVar7;\n  long in_FS_OFFSET;\n  uint local_e0;\n  undefined4 local_d8 [6];\n  uint local_c0;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*param_1 != '/') && (iVar1 = FUN_00106cf0(*param_2,param_2 + 1), iVar1 != 0))\n  goto LAB_00106d71;\n  pcVar7 = param_1;\n  if (param_3 != 0) {\n    lVar5 = FUN_0010daa0(param_1,param_2,param_3,param_4);\n    if (lVar5 < 0) {\n      if (lVar5 == -1) {\n        piVar6 = __errno_location();\n        iVar1 = *piVar6;\n        goto LAB_00106d71;\n      }\n      goto LAB_00106da3;\n    }\n    pcVar7 = param_1 + lVar5;\n  }\n  if ((param_8 & param_9) == 0xffffffff) {\n    if ((param_7 & 0xc00 | param_5 & 0x200) != 0) {\n      local_e0 = param_5 & 0xffffffed;\n      goto LAB_00106e34;\n    }\n    iVar1 = mkdir(pcVar7,param_5);\n    if (iVar1 != 0) goto LAB_00106e4b;\n    (*param_6)(param_1,param_4);\n    if ((param_7 & param_5 & 0x1ff) == 0) goto LAB_00106da3;\n    uVar3 = 3;\n    local_e0 = param_5;\n  }\n  else {\n    local_e0 = param_5 & 0xffffffc0;\nLAB_00106e34:\n    iVar1 = mkdir(pcVar7,local_e0);\n    if (iVar1 == 0) {\n      (*param_6)(param_1,param_4);\n      uVar3 = 3;\n    }\n    else {\nLAB_00106e4b:\n      piVar6 = __errno_location();\n      iVar1 = *piVar6;\n      if (param_10 != '\\0') {\n        if ((iVar1 != 0) &&\n           ((((iVar1 == 2 || (param_3 == 0)) || (iVar2 = FUN_001102c0(pcVar7,local_d8), iVar2 != 0))\n            || ((local_c0 & 0xf000) != 0x4000)))) goto LAB_00106d71;\n        goto LAB_00106da3;\n      }\n      local_e0 = 0xffffffff;\n      uVar3 = 2;\n    }\n  }\n  iVar2 = FUN_00109c10(param_2,pcVar7,uVar3,local_d8);\n  if (-2 < iVar2) {\n    if (iVar2 == 0) {\n      pcVar7 = \".\";\n    }\n    iVar2 = FUN_0010dc60(local_d8[0],pcVar7,local_e0,param_8,param_9,param_5,param_7);\n    if (iVar2 != 0) {\n      if (iVar1 == 0) {\n        piVar6 = __errno_location();\n      }\n      else if (((iVar1 == 2) || (param_3 == 0)) || (piVar6 = __errno_location(), *piVar6 == 0x14)) {\nLAB_00106d71:\n        uVar3 = FUN_00109900(param_1);\n        uVar4 = dcgettext(0,\"cannot create directory %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,iVar1,uVar4,uVar3);\n      }\n      uVar3 = FUN_00109900(param_1);\n      pcVar7 = \"cannot change permissions of %s\";\n      if ((param_8 & param_9) != 0xffffffff) {\n        pcVar7 = \"cannot change owner and permissions of %s\";\n      }\n      uVar4 = dcgettext(0,pcVar7,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar6,uVar4,uVar3);\n    }\n  }\nLAB_00106da3:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return 1;\n}\n\n", 
    "00105d40": "\nundefined8 FUN_00105d40(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00105d70:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00105ac0(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          FUN_00105c00(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_00105de0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_00105de0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00105d70;\n    plVar3 = (long *)FUN_00105ac0(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)FUN_00105d20(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "00105c20": "\nlong FUN_00105c20(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)FUN_00105ac0();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_00105cc1:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            FUN_00105c00(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_00105cc1;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        FUN_00105c00(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "00103b60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00117f70)();\n  return sVar1;\n}\n\n", 
    "00103a40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00117ee0)();\n  return pvVar1;\n}\n\n", 
    "00105f80": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105f80(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = FUN_00105ea0();\n  uVar2 = FUN_00105e80();\n  uVar3 = FUN_00105e90();\n  uVar4 = FUN_00105eb0();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_001116e0) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "0010c860": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  long lVar10;\n  void *pvVar11;\n  void *pvVar12;\n  uint uVar13;\n  \n  pvVar11 = *param_1;\n  if (pvVar11 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar13 = *(uint *)(param_1 + 9);\n  if ((uVar13 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar11 + 0x74);\n  *(undefined2 *)((long)pvVar11 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = FUN_0010abc0(param_1,pvVar11,0);\n    *(undefined2 *)((long)pvVar11 + 0x70) = uVar6;\n    return pvVar11;\n  }\n  sVar2 = *(short *)((long)pvVar11 + 0x70);\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_0010c9cf;\n      goto LAB_0010c8f0;\n    }\n    sVar7 = FUN_0010abc0(param_1,pvVar11,1);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar11;\n      if (sVar7 != 0xb) {\n        return pvVar11;\n      }\n      goto LAB_0010cb99;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = FUN_0010b460(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                           &DAT_0011238b);\n      *(int *)((long)pvVar11 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n        *(int *)((long)pvVar11 + 0x40) = iVar8;\n        *param_1 = pvVar11;\n        return pvVar11;\n      }\n      *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\nLAB_0010caea:\n      *param_1 = pvVar11;\n      if (sVar7 == 0xb) goto LAB_0010cb99;\n      goto LAB_0010caf8;\n    }\n    *param_1 = pvVar11;\nLAB_0010cb02:\n    if (*(long *)((long)pvVar11 + 0x58) != 0) goto LAB_0010cb13;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_0010ca6a;\nLAB_0010c9cf:\n      if (((uVar13 & 0x40) != 0) && (*(void **)((long)pvVar11 + 0x78) != param_1[3])) {\nLAB_0010ca6a:\n        if ((*(byte *)((long)pvVar11 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar11 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          FUN_0010af10();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar11 + 0x70) = 6;\n        FUN_0010b8c0(uVar3,param_1 + 0xb,pvVar11);\n        return pvVar11;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_0010cbe8:\n        pvVar12 = (void *)FUN_0010b990(param_1,3);\n        param_1[1] = pvVar12;\n        if (pvVar12 == (void *)0x0) {\n          uVar13 = *(uint *)(param_1 + 9);\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar11 + 0x40) != 0) && (*(short *)((long)pvVar11 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n          }\n          FUN_0010b8c0(uVar13,param_1 + 0xb,pvVar11);\n          return pvVar11;\n        }\n      }\n      else {\n        if ((uVar13 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar13 & 0xffffdfff;\n          FUN_0010af10();\n          param_1[1] = (void *)0x0;\n          goto LAB_0010cbe8;\n        }\n        iVar8 = FUN_0010b4b0(param_1,pvVar11,0xffffffff,*(undefined8 *)((long)pvVar11 + 0x30));\n        if (iVar8 == 0) {\n          pvVar12 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 1;\n          *(int *)((long)pvVar11 + 0x40) = iVar8;\n          pvVar12 = param_1[1];\n          for (pvVar11 = pvVar12; pvVar11 != (void *)0x0; pvVar11 = *(void **)((long)pvVar11 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar11 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar11 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n    }\n    else {\nLAB_0010c8f0:\n      do {\n        pvVar12 = *(void **)((long)pvVar11 + 0x10);\n        if (pvVar12 == (void *)0x0) {\n          pvVar12 = *(void **)((long)pvVar11 + 8);\n          if (*(long *)((long)pvVar12 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar12 + 0x48);\n            *param_1 = pvVar12;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar12 = (void *)FUN_0010b990(param_1,3);\n            if (pvVar12 != (void *)0x0) {\n              free(pvVar11);\n              goto LAB_0010cb4a;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar12 = *(void **)((long)pvVar11 + 8);\n          }\n          *param_1 = pvVar12;\n          free(pvVar11);\n          if (*(long *)((long)pvVar12 + 0x58) == -1) {\n            free(pvVar12);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar12 + 0x70) == 0xb) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          *(undefined *)((long)param_1[4] + *(long *)((long)pvVar12 + 0x48)) = 0;\n          if (*(long *)((long)pvVar12 + 0x58) == 0) {\n            iVar8 = FUN_0010b270(param_1);\n            if (iVar8 == 0) goto LAB_0010c95b;\nLAB_0010cd0f:\n            piVar9 = __errno_location();\n            uVar13 = *(uint *)(param_1 + 9) | 0x4000;\n            sVar7 = *(short *)((long)pvVar12 + 0x70);\n            *(int *)((long)pvVar12 + 0x40) = *piVar9;\n            *(uint *)(param_1 + 9) = uVar13;\n            if (sVar7 == 2) {\n              return (void *)0x0;\n            }\n          }\n          else {\n            if ((*(ushort *)((long)pvVar12 + 0x72) & 2) == 0) {\n              if (((*(ushort *)((long)pvVar12 + 0x72) & 1) == 0) &&\n                 (iVar8 = FUN_0010b4b0(param_1,*(undefined8 *)((long)pvVar12 + 8),0xffffffff,\n                                       &DAT_0011238a), iVar8 != 0)) goto LAB_0010cd0f;\nLAB_0010c95b:\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            else {\n              iVar8 = *(int *)((long)pvVar12 + 0x44);\n              if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                  iVar8 = fchdir(iVar8);\n                  if (iVar8 != 0) {\n                    piVar9 = __errno_location();\n                    *(int *)((long)pvVar12 + 0x40) = *piVar9;\n                    *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                  }\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n                else {\n                  FUN_0010b200(param_1,iVar8,1);\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n              }\n              close(iVar8);\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            if (*(short *)((long)pvVar12 + 0x70) == 2) goto LAB_0010c98b;\n          }\n          if (*(int *)((long)pvVar12 + 0x40) == 0) {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 6;\n            FUN_0010b8c0(uVar13,param_1 + 0xb,pvVar12);\n            uVar13 = *(uint *)(param_1 + 9);\n          }\n          else {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n          }\nLAB_0010c98b:\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          return pvVar12;\n        }\n        *param_1 = pvVar12;\n        free(pvVar11);\n        pvVar11 = pvVar12;\n        if (*(long *)((long)pvVar12 + 0x58) == 0) {\n          iVar8 = FUN_0010b270(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          FUN_0010b750(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          FUN_0010b780(param_1 + 4,pvVar12);\n          FUN_0010b3f0(*(undefined4 *)(param_1 + 9),param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar12 + 0x70);\n          goto LAB_0010caea;\n        }\n      } while (*(short *)((long)pvVar12 + 0x74) == 4);\n      if (*(short *)((long)pvVar12 + 0x74) == 2) {\n        sVar7 = FUN_0010abc0(param_1,pvVar12,1);\n        *(short *)((long)pvVar12 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = FUN_0010b460(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                               &DAT_0011238b);\n          *(int *)((long)pvVar12 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n            *(int *)((long)pvVar12 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar12 + 0x72) = *(ushort *)((long)pvVar12 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar12 + 0x74) = 3;\n      }\n    }\nLAB_0010cb4a:\n    lVar4 = *(long *)(*(long *)((long)pvVar12 + 8) + 0x48);\n    lVar10 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar12 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar10 = lVar4;\n    }\n    pvVar11 = param_1[4];\n    *(undefined *)(lVar10 + (long)pvVar11) = 0x2f;\n    memmove((undefined *)(lVar10 + (long)pvVar11) + 1,(void *)((long)pvVar12 + 0x108),\n            *(long *)((long)pvVar12 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar12 + 0x70);\n    *param_1 = pvVar12;\n    pvVar11 = pvVar12;\n    if (sVar7 != 0xb) {\nLAB_0010caf8:\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_0010cb02;\n    }\nLAB_0010cb99:\n    if (*(long *)((long)pvVar11 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar11 + 0xa8) != 1) {\n        pvVar11 = (void *)FUN_00103c31();\n        return pvVar11;\n      }\n      return pvVar11;\n    }\n    lVar4 = *(long *)((long)pvVar11 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = FUN_0010b180(lVar4,*(undefined4 *)((long)param_1 + 0x2c)), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\n      goto LAB_0010caf8;\n    }\n    sVar7 = FUN_0010abc0(param_1,pvVar11,0);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar11 + 0x90) & 0xf000) != 0x4000) goto LAB_0010caf8;\n    if (*(long *)((long)pvVar11 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_0010cb13;\n    }\n    if (sVar7 != 1) {\n      return pvVar11;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar11 + 0x78);\nLAB_0010cb13:\n  cVar5 = FUN_0010b810(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar11);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar11 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar11;\n}\n\n", 
    "00106300": "\nvoid ** FUN_00106300(undefined8 param_1,undefined *param_2,code *param_3,code *param_4,void *param_5\n                    )\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00105a90;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00105ab0;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined *)0x0) {\n      param_2 = &DAT_001116b0;\n    }\n    __ptr[5] = param_2;\n    cVar1 = FUN_00105af0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)FUN_00105b70(*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "0010b300": "\nvoid thunk_FUN_0010b32b(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "0010e1e0": "\nint FUN_0010e1e0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001037b0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00117d98)();\n  return;\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00117e28)();\n  return iVar1;\n}\n\n", 
    "001039f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint lchown(char *__file,__uid_t __owner,__gid_t __group)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_lchown_00117eb8)();\n  return iVar1;\n}\n\n", 
    "00103a30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chown(char *__file,__uid_t __owner,__gid_t __group)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_chown_00117ed8)();\n  return iVar1;\n}\n\n", 
    "00103b50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00117f68)();\n  return;\n}\n\n", 
    "00109720": "\nvoid FUN_00109720(undefined8 param_1)\n\n{\n  FUN_00109700(param_1,0x3a);\n  return;\n}\n\n", 
    "0010d960": "\nulong FUN_0010d960(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n", 
    "0010b780": "\nvoid FUN_0010b780(void **param_1,long param_2)\n\n{\n  char *__s;\n  void *pvVar1;\n  char *pcVar2;\n  size_t sVar3;\n  \n  __s = (char *)(param_2 + 0x108);\n  pvVar1 = *param_1;\n  *(long *)(param_2 + 0x48) = *(long *)(param_2 + 0x60);\n  memmove(pvVar1,__s,*(long *)(param_2 + 0x60) + 1);\n  pcVar2 = strrchr(__s,0x2f);\n  if ((pcVar2 != (char *)0x0) && ((__s != pcVar2 || (*(char *)(param_2 + 0x109) != '\\0')))) {\n    sVar3 = strlen(pcVar2 + 1);\n    memmove(__s,pcVar2 + 1,sVar3 + 1);\n    *(size_t *)(param_2 + 0x60) = sVar3;\n  }\n  pvVar1 = *param_1;\n  *(void **)(param_2 + 0x38) = pvVar1;\n  *(void **)(param_2 + 0x30) = pvVar1;\n  return;\n}\n\n", 
    "00106210": "\nlong FUN_00106210(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "00107420": "\nundefined8 FUN_00107420(undefined8 param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined auStack_a8 [24];\n  undefined4 local_90;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_001102c0(param_1,auStack_a8);\n  uVar2 = 0;\n  if (iVar1 == 0) {\n    uVar2 = FUN_00107070(local_90,0xfff);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001102e0": "\nvoid FUN_001102e0(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "001190f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001190f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001036c0": "\nvoid lsetfilecon(void)\n\n{\n  (*(code *)PTR_lsetfilecon_00117d20)();\n  return;\n}\n\n", 
    "00109be0": "\nvoid FUN_00109be0(undefined4 *param_1)\n\n{\n  *param_1 = 0;\n  return;\n}\n\n", 
    "001037e0": "\nvoid context_type_set(void)\n\n{\n  (*(code *)PTR_context_type_set_00117db0)();\n  return;\n}\n\n", 
    "00109ac0": "\nvoid FUN_00109ac0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109910(0xffffff9c,param_1,0xffffff9c,param_2);\n  return;\n}\n\n", 
    "00106c10": "\nulong FUN_00106c10(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_0010d960(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n", 
    "00103b80": "\nvoid getfscreatecon(void)\n\n{\n  (*(code *)PTR_getfscreatecon_00117f80)();\n  return;\n}\n\n", 
    "00103a60": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00117ef0)();\n  return;\n}\n\n", 
    "00105e80": "\nundefined8 FUN_00105e80(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "0010b750": "\nvoid FUN_0010b750(uint param_1,long param_2)\n\n{\n  if ((param_1 & 0x102) == 0) {\n    (*(code *)PTR_free_00117fb8)(param_2);\n    return;\n  }\n  if (param_2 != 0) {\n    FUN_001064c0();\n    return;\n  }\n  return;\n}\n\n", 
    "0010b990": "\nvoid * FUN_0010b990(long *param_1,int param_2)\n\n{\n  long lVar1;\n  DIR *__dirp;\n  long lVar2;\n  long lVar3;\n  bool bVar4;\n  void *pvVar5;\n  undefined *puVar6;\n  char cVar7;\n  undefined2 uVar8;\n  int iVar9;\n  int *piVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__ptr;\n  uint uVar13;\n  uint uVar14;\n  undefined4 uVar15;\n  DIR *__dirp_00;\n  ulong uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  ulong local_a0;\n  void *local_98;\n  void *local_90;\n  undefined *local_70;\n  ulong local_68;\n  ulong local_60;\n  char local_4b;\n  char local_4a;\n  int local_44;\n  long local_40;\n  \n  lVar1 = *param_1;\n  __dirp = *(DIR **)(lVar1 + 0x18);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__dirp == (DIR *)0x0) {\n    uVar14 = *(uint *)(param_1 + 9);\n    uVar13 = uVar14 & 0x10;\n    if ((uVar13 != 0) && (uVar13 = 0x20000, (uVar14 & 1) != 0)) {\n      uVar13 = (uint)(*(long *)(lVar1 + 0x58) != 0) << 0x11;\n    }\n    uVar15 = 0xffffff9c;\n    if ((uVar14 & 0x204) == 0x200) {\n      uVar15 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    local_90 = (void *)FUN_0010afa0(uVar15,*(undefined8 *)(lVar1 + 0x30),\n                                    (uVar14 & 0x800) << 7 | uVar13,&local_44);\n    *(void **)(lVar1 + 0x18) = local_90;\n    if (local_90 == (void *)0x0) {\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n        goto LAB_0010bea3;\n      }\n      goto LAB_0010c19d;\n    }\n    if (*(short *)(lVar1 + 0x70) == 0xb) {\n      uVar8 = FUN_0010abc0(param_1,lVar1,0);\n      *(undefined2 *)(lVar1 + 0x70) = uVar8;\n    }\n    else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n      FUN_0010b8c0(*(uint *)(param_1 + 9),param_1 + 0xb,lVar1);\n      FUN_0010abc0(param_1,lVar1,0);\n      cVar7 = FUN_0010b810(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar1);\n      if (cVar7 == '\\0') {\n        piVar10 = __errno_location();\n        local_90 = (void *)0x0;\n        *piVar10 = 0xc;\n        goto LAB_0010bea3;\n      }\n    }\n    local_68 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n    if (param_2 == 2) {\nLAB_0010c0c0:\n      bVar19 = false;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n    else {\n      if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar1 + 0x88) == 2)) &&\n         (iVar9 = FUN_0010b180(lVar1,local_44), iVar9 != 0)) {\n        if (param_2 != 3) goto LAB_0010c0c0;\n        bVar4 = false;\n        bVar19 = true;\n      }\n      else {\n        bVar19 = param_2 == 3;\n        bVar4 = true;\n      }\n      if ((*(byte *)((long)param_1 + 0x49) & 2) != 0) {\n        local_44 = FUN_0010e010(local_44,0x406,3);\n      }\n      if ((-1 < local_44) && (iVar9 = FUN_0010b4b0(param_1,lVar1,local_44,0), iVar9 == 0))\n      goto LAB_0010b9ef;\n      if ((bVar19) && (bVar4)) {\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\n      *(ushort *)(lVar1 + 0x72) = *(ushort *)(lVar1 + 0x72) | 1;\n      closedir(*(DIR **)(lVar1 + 0x18));\n      uVar14 = *(uint *)(param_1 + 9);\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (((uVar14 & 0x200) != 0) && (-1 < local_44)) {\n        close(local_44);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      bVar19 = false;\n    }\n  }\n  else {\n    local_44 = dirfd(__dirp);\n    if (local_44 < 0) {\n      closedir(*(DIR **)(lVar1 + 0x18));\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\nLAB_0010c19d:\n      local_90 = (void *)0x0;\n      goto LAB_0010bea3;\n    }\n    if (param_1[8] == 0) {\n      local_68 = 100000;\n      uVar14 = *(uint *)(param_1 + 9);\n      bVar19 = true;\n    }\n    else {\n      local_68 = 0xffffffffffffffff;\nLAB_0010b9ef:\n      bVar19 = true;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n  }\n  uVar18 = *(ulong *)(lVar1 + 0x48);\n  local_a0 = uVar18;\n  local_60 = uVar18 - 1;\n  if (*(char *)(*(long *)(lVar1 + 0x38) + -1 + uVar18) != '/') {\n    local_a0 = uVar18 + 1;\n    local_60 = uVar18;\n  }\n  local_70 = (undefined *)0x0;\n  if ((uVar14 & 4) != 0) {\n    local_70 = (undefined *)(local_60 + param_1[4]) + 1;\n    *(undefined *)(local_60 + param_1[4]) = 0x2f;\n  }\n  __dirp_00 = *(DIR **)(lVar1 + 0x18);\n  lVar2 = *(long *)(lVar1 + 0x58);\n  uVar18 = param_1[6] - local_a0;\n  if (__dirp_00 == (DIR *)0x0) {\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      local_90 = (void *)0x0;\n      uVar16 = 0;\n      local_4a = '\\0';\nLAB_0010bf84:\n      local_70 = local_70 + -1;\n      goto LAB_0010bf8a;\n    }\n    local_90 = (void *)0x0;\n    if ((bool)(bVar19 & __dirp == (DIR *)0x0)) {\n      local_4a = '\\0';\n      uVar16 = 0;\n      goto LAB_0010c010;\n    }\nLAB_0010c039:\n    if (((param_2 == 3) && (*(short *)(lVar1 + 0x70) != 7)) && (*(short *)(lVar1 + 0x70) != 4)) {\n      *(undefined2 *)(lVar1 + 0x70) = 6;\n    }\n    FUN_0010af10(local_90);\n    local_90 = (void *)0x0;\n  }\n  else {\n    piVar10 = __errno_location();\n    local_4a = '\\0';\n    local_4b = '\\0';\n    local_98 = (void *)0x0;\n    local_90 = (void *)0x0;\n    uVar17 = 0;\n    do {\n      while( true ) {\n        *piVar10 = 0;\n        pdVar11 = readdir(__dirp_00);\n        uVar16 = uVar17;\n        if (pdVar11 == (dirent *)0x0) {\n          if (*piVar10 != 0) {\n            *(int *)(lVar1 + 0x40) = *piVar10;\n            *(ushort *)(lVar1 + 0x70) = (-(ushort)(((ulong)__dirp | uVar17) == 0) & 0xfffd) + 7;\n          }\n          if (*(DIR **)(lVar1 + 0x18) != (DIR *)0x0) {\n            closedir(*(DIR **)(lVar1 + 0x18));\n            *(undefined8 *)(lVar1 + 0x18) = 0;\n          }\n          goto LAB_0010bf54;\n        }\n        if ((((*(byte *)(param_1 + 9) & 0x20) != 0) || (pdVar11->d_name[0] != '.')) ||\n           ((pdVar11->d_name[1] != '\\0' && (*(short *)(pdVar11->d_name + 1) != 0x2e)))) break;\nLAB_0010bac3:\n        __dirp_00 = *(DIR **)(lVar1 + 0x18);\n        uVar17 = uVar16;\n        if (__dirp_00 == (DIR *)0x0) goto LAB_0010bf54;\n      }\n      sVar12 = strlen(pdVar11->d_name);\n      __ptr = (void *)FUN_0010ae70(param_1,pdVar11->d_name,sVar12);\n      if (__ptr == (void *)0x0) {\nLAB_0010be50:\n        iVar9 = *piVar10;\n        free(__ptr);\n        FUN_0010af10(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = iVar9;\n        goto LAB_0010bea3;\n      }\n      if (uVar18 <= sVar12) {\n        lVar3 = param_1[4];\n        cVar7 = FUN_0010b380(param_1 + 4,param_1 + 6,local_60 + 2 + sVar12);\n        if (cVar7 == '\\0') goto LAB_0010be50;\n        puVar6 = local_70;\n        if ((param_1[4] != lVar3) &&\n           (local_4b = cVar7, puVar6 = (undefined *)(param_1[4] + local_a0),\n           (*(byte *)(param_1 + 9) & 4) == 0)) {\n          puVar6 = local_70;\n        }\n        local_70 = puVar6;\n        uVar18 = param_1[6] - local_a0;\n      }\n      if (CARRY8(sVar12,local_a0)) {\n        free(__ptr);\n        FUN_0010af10(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = 0x24;\n        goto LAB_0010bea3;\n      }\n      *(long *)((long)__ptr + 0x58) = lVar2 + 1;\n      lVar3 = *param_1;\n      *(size_t *)((long)__ptr + 0x48) = sVar12 + local_a0;\n      *(long *)((long)__ptr + 8) = lVar3;\n      *(__ino_t *)((long)__ptr + 0x80) = pdVar11->d_ino;\n      uVar14 = *(uint *)(param_1 + 9);\n      if ((uVar14 & 4) == 0) {\n        *(void **)((long)__ptr + 0x30) = (void *)((long)__ptr + 0x108);\n      }\n      else {\n        *(undefined8 *)((long)__ptr + 0x30) = *(undefined8 *)((long)__ptr + 0x38);\n        memmove(local_70,(void *)((long)__ptr + 0x108),*(long *)((long)__ptr + 0x60) + 1);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      if ((param_1[8] == 0) || ((uVar14 & 0x400) != 0)) {\n        uVar16 = 1;\n        if ((uVar14 & 0x18) == 0x18) {\n          uVar16 = (ulong)((pdVar11->d_type & 0xfb) == 0);\n        }\n        *(undefined2 *)((long)__ptr + 0x70) = 0xb;\n        FUN_0010b2e0((long)__ptr + 0x90);\n        FUN_0010ab90(__ptr,uVar16 & 0xffffffff);\n      }\n      else {\n        uVar8 = FUN_0010abc0(param_1,__ptr,0);\n        *(undefined2 *)((long)__ptr + 0x70) = uVar8;\n      }\n      *(undefined8 *)((long)__ptr + 0x10) = 0;\n      pvVar5 = __ptr;\n      if (local_90 != (void *)0x0) {\n        *(void **)((long)local_98 + 0x10) = __ptr;\n        pvVar5 = local_90;\n      }\n      local_90 = pvVar5;\n      uVar16 = uVar17 + 1;\n      local_98 = __ptr;\n      if (uVar17 != 10000) {\n        if (uVar16 < local_68) goto LAB_0010bac3;\n        break;\n      }\n      if (param_1[8] == 0) {\n        local_4a = FUN_0010b140(lVar1,local_44);\n      }\n      uVar16 = 0x2711;\n      __dirp_00 = *(DIR **)(lVar1 + 0x18);\n      uVar17 = uVar16;\n    } while (__dirp_00 != (DIR *)0x0);\nLAB_0010bf54:\n    if (local_4b != '\\0') {\n      thunk_FUN_0010b32b(param_1[1],param_1[4],local_90);\n    }\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      if ((param_1[6] == local_a0) || (uVar16 == 0)) goto LAB_0010bf84;\nLAB_0010bf8a:\n      *local_70 = 0;\n    }\n    if ((__dirp == (DIR *)0x0) && (bVar19)) {\n      if ((param_2 == 1) || (uVar16 == 0)) {\nLAB_0010c010:\n        if (*(long *)(lVar1 + 0x58) == 0) {\n          iVar9 = FUN_0010b270(param_1);\n        }\n        else {\n          iVar9 = FUN_0010b4b0(param_1,*(undefined8 *)(lVar1 + 8),0xffffffff,&DAT_0011238a);\n        }\n        if (iVar9 != 0) {\n          *(undefined2 *)(lVar1 + 0x70) = 7;\n          *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n          FUN_0010af10(local_90);\n          local_90 = (void *)0x0;\n          goto LAB_0010bea3;\n        }\n        goto LAB_0010c030;\n      }\n    }\n    else {\nLAB_0010c030:\n      if (uVar16 == 0) goto LAB_0010c039;\n    }\n    if (local_4a == '\\0') {\n      if ((param_1[8] != 0) && (uVar16 != 1)) {\n        local_90 = (void *)FUN_0010ad70(param_1,local_90,uVar16);\n      }\n    }\n    else {\n      param_1[8] = (long)FUN_0010ab10;\n      local_90 = (void *)FUN_0010ad70(param_1,local_90,uVar16);\n      param_1[8] = 0;\n    }\n  }\nLAB_0010bea3:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_90;\n}\n\n", 
    "0010a780": "\nvoid FUN_0010a780(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010a9a0();\n  }\n  return;\n}\n\n", 
    "001091e0": "\nvoid FUN_001091e0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00118200;\n  }\n  FUN_0010a950(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "0010d1f0": "\nsize_t FUN_0010d1f0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010d910(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010af60": "\nvoid FUN_0010af60(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = FUN_0010d9c0(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = FUN_0010da10(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n", 
    "001048c0": "\nundefined4 FUN_001048c0(undefined8 param_1,undefined4 param_2,undefined8 param_3)\n\n{\n  short sVar1;\n  int iVar2;\n  undefined4 uVar3;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_30 = 0;\n  local_28 = 0;\n  __ptr = (void *)FUN_00105790();\n  if (__ptr != (void *)0x0) {\n    iVar2 = getcon(&local_30);\n    if (-1 < iVar2) {\n      iVar2 = FUN_0010d190(__ptr,&local_28);\n      if (-1 < iVar2) {\n        sVar1 = mode_to_security_class(param_2);\n        if (sVar1 != 0) {\n          uVar3 = security_compute_create(local_30,local_28,sVar1,param_3);\n          goto LAB_00104946;\n        }\n      }\n    }\n  }\n  uVar3 = 0xffffffff;\nLAB_00104946:\n  free(__ptr);\n  freecon(local_30);\n  freecon(local_28);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001036b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkdir_00117d18)();\n  return iVar1;\n}\n\n", 
    "001037d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00117da8)();\n  return sVar1;\n}\n\n", 
    "00109bf0": "\nint FUN_00109bf0(int *param_1)\n\n{\n  if (*param_1 != 4) {\n    return 0;\n  }\n  return param_1[1];\n}\n\n", 
    "001038f0": "\nvoid lgetfilecon(void)\n\n{\n  (*(code *)PTR_lgetfilecon_00117e38)();\n  return;\n}\n\n", 
    "00103a50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00117ee8)();\n  return pcVar1;\n}\n\n", 
    "00104c60": "\nundefined4 FUN_00104c60(char *param_1,undefined4 param_2)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  char *pcVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  char *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_40 = 0;\n  local_38 = 0;\n  if (*param_1 == '/') {\n    pcVar3 = param_1;\n    __ptr = (char *)0x0;\n  }\n  else {\n    pcVar3 = (char *)FUN_001050a0(param_1,2);\n    __ptr = pcVar3;\n    if (pcVar3 == (char *)0x0) {\n      uVar8 = FUN_00109640(4,param_1);\n      uVar9 = dcgettext(0,\"error canonicalizing %s\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar9,uVar8);\n    }\n  }\n  iVar1 = matchpathcon(pcVar3,param_2,&local_40);\n  if (iVar1 < 0) {\n    piVar7 = __errno_location();\n    if (*piVar7 == 2) {\n      *piVar7 = 0x3d;\n    }\n  }\n  else {\n    iVar1 = FUN_001048c0(pcVar3,param_2,&local_38);\n    if ((-1 < iVar1) && (lVar4 = context_new(local_40), lVar4 != 0)) {\n      lVar5 = context_new(local_38);\n      if ((lVar5 == 0) ||\n         (((lVar6 = context_type_get(lVar4), lVar6 == 0 ||\n           (iVar1 = context_type_set(lVar5,lVar6), iVar1 != 0)) ||\n          (lVar6 = context_str(lVar5), lVar6 == 0)))) {\n        uVar2 = 0xffffffff;\n      }\n      else {\n        uVar2 = setfscreatecon(lVar6);\n      }\n      goto LAB_00104d4d;\n    }\n  }\n  lVar5 = 0;\n  lVar4 = 0;\n  uVar2 = 0xffffffff;\nLAB_00104d4d:\n  context_free(lVar4);\n  context_free(lVar5);\n  freecon(local_40);\n  freecon(local_38);\n  free(__ptr);\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "00103b70": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00117f78)();\n  return;\n}\n\n", 
    "00109700": "\nvoid FUN_00109700(undefined8 param_1,char param_2)\n\n{\n  FUN_00109670(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00103c3b": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_0010e7d4::caseD_5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d910": "\nbool FUN_0010d910(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00103000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00117fd0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00117fd0)();\n  }\n  return;\n}\n\n", 
    "00107720": "\nbool FUN_00107720(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0010d6e0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "0010a640": "\nvoid FUN_0010a640(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010a5b0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001191f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001102c0": "\nvoid FUN_001102c0(char *param_1,stat *param_2)\n\n{\n  __xstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "001190d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001191f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001190d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001038a0": "\nvoid getcon(void)\n\n{\n  (*(code *)PTR_getcon_00117e10)();\n  return;\n}\n\n", 
    "001039c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00117ea0)();\n  return iVar1;\n}\n\n", 
    "0010f3a0": "\nundefined8 FUN_0010f3a0(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  undefined *puVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  char **ppcVar9;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar9 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar9 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar9 + 1;\n        }\n        pcVar6 = *ppcVar9;\n        if (pcVar6 == (char *)0x0) {\n          pcVar6 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar6;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        puVar5 = (undefined *)*puVar7;\n        if (puVar5 == (undefined *)0x0) {\n          puVar5 = &DAT_00112510;\n        }\n        *(undefined **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "00103b20": "\nvoid security_compute_create(void)\n\n{\n  (*(code *)PTR_security_compute_create_00117f50)();\n  return;\n}\n\n", 
    "00103a00": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00117ec0)();\n  return;\n}\n\n", 
    "00103c2c": "\nvoid FUN_00103c2c(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109910": "\nbool FUN_00109910(undefined4 param_1,undefined8 param_2,undefined4 param_3,undefined8 param_4)\n\n{\n  int iVar1;\n  void *pvVar2;\n  void *__s2;\n  size_t __n;\n  size_t sVar3;\n  int *piVar4;\n  bool bVar5;\n  long in_FS_OFFSET;\n  long local_168;\n  long local_160;\n  long local_d8;\n  long local_d0;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  pvVar2 = (void *)FUN_00105860(param_2);\n  __s2 = (void *)FUN_00105860(param_4);\n  __n = FUN_001058c0(pvVar2);\n  sVar3 = FUN_001058c0(__s2);\n  bVar5 = false;\n  if (__n == sVar3) {\n    iVar1 = memcmp(pvVar2,__s2,__n);\n    if (iVar1 == 0) {\n      pvVar2 = (void *)FUN_00105790(param_2);\n      iVar1 = FUN_00110320(param_1,pvVar2,&local_168,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar4,\"%s\",pvVar2);\n      }\n      free(pvVar2);\n      pvVar2 = (void *)FUN_00105790(param_4);\n      iVar1 = FUN_00110320(param_3,pvVar2,&local_d8,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(1,*piVar4,\"%s\",pvVar2);\n      }\n      bVar5 = local_160 == local_d0 && local_168 == local_d8;\n      free(pvVar2);\n    }\n    else {\n      bVar5 = false;\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010daa0": "\nlong FUN_0010daa0(char *param_1,undefined8 param_2,code *param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  bool bVar2;\n  int iVar3;\n  int *piVar4;\n  char cVar5;\n  bool bVar6;\n  char *pcVar7;\n  char *pcVar8;\n  char *pcVar9;\n  char *pcVar10;\n  bool bVar11;\n  int local_3c;\n  \n  cVar5 = *param_1;\n  if (cVar5 == '\\0') {\n    return 0;\n  }\n  pcVar7 = param_1 + 1;\n  bVar2 = false;\n  pcVar10 = (char *)0x0;\n  pcVar9 = param_1;\n  do {\n    cVar1 = *pcVar7;\n    pcVar8 = pcVar9;\n    if (cVar1 == '/') {\n      bVar11 = cVar5 != '/';\n      cVar5 = cVar1;\n      if (bVar11) {\n        pcVar10 = pcVar7;\n      }\n    }\n    else {\n      bVar11 = cVar1 != '\\0' && cVar5 == '/';\n      if (bVar11) {\n        cVar5 = cVar1;\n        if (pcVar10 == (char *)0x0) goto LAB_0010daf9;\n        if ((long)pcVar10 - (long)pcVar9 == 1) {\n          pcVar8 = pcVar7;\n          if (*pcVar9 == '.') goto LAB_0010daf9;\n          *pcVar10 = '\\0';\nLAB_0010db34:\n          iVar3 = (*param_3)(param_1,pcVar9,param_4);\n          local_3c = 0;\n          bVar6 = true;\n          if (iVar3 < 0) {\n            piVar4 = __errno_location();\n            local_3c = *piVar4;\n            bVar11 = bVar2;\n            bVar6 = bVar2;\n          }\n        }\n        else {\n          *pcVar10 = '\\0';\n          if ((((long)pcVar10 - (long)pcVar9 != 2) || (*pcVar9 != '.')) || (pcVar9[1] != '.'))\n          goto LAB_0010db34;\n          local_3c = 0;\n          bVar11 = false;\n          bVar6 = false;\n        }\n        iVar3 = FUN_00109c10(param_2,pcVar9,bVar6,0);\n        if ((iVar3 == -1) || (*pcVar10 = '/', iVar3 != 0)) {\n          if ((local_3c != 0) && (piVar4 = __errno_location(), *piVar4 == 2)) {\n            *piVar4 = local_3c;\n          }\n          return (long)iVar3;\n        }\n        cVar1 = *pcVar7;\n        pcVar9 = pcVar7;\n        bVar2 = bVar11;\n      }\n      pcVar8 = pcVar9;\n      cVar5 = cVar1;\n      if (cVar1 == '\\0') {\n        return (long)pcVar9 - (long)param_1;\n      }\n    }\nLAB_0010daf9:\n    pcVar7 = pcVar7 + 1;\n    pcVar9 = pcVar8;\n  } while( true );\n}\n\n", 
    "00106740": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00106740(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00105c20(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010678e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    FUN_00105af0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_001067ea;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_001116d8) {\n      if (_DAT_001116dc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_001116dc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = FUN_001065b0(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = FUN_00105c20(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = FUN_00103bff();\n          return uVar5;\n        }\n        goto LAB_001067ea;\n      }\n    }\n  }\n  else {\nLAB_001067ea:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010678e;\n    }\n    plVar3 = (long *)FUN_00105d20(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010678e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010678e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107830": "\nundefined8 FUN_00107830(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001077a0(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00104680": "\nvoid FUN_00104680(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_001180e0;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... DIRECTORY...\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"Create the DIRECTORY(ies), if they do not already exist.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00104100();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -m, --mode=MODE   set file mode (as in chmod), not a=rwx - umask\\n  -p, --parents     no error if existing, make parent directories as needed\\n  -v, --verbose     print a message for each created directory\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -Z                   set SELinux security context of each created directory\\n                         to the default type\\n      --context[=CTX]  like -Z, or if CTX is specified then set the SELinux\\n                         or SMACK security context to CTX\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_001043e0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001190e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_type_set(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107ae0": "\nundefined8\nFUN_00107ae0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107a20(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010d1d0": "\nvoid FUN_0010d1d0(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = fgetfilecon();\n  FUN_0010d120(uVar1,param_2);\n  return;\n}\n\n", 
    "00103c36": "\nvoid FUN_00103c36(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001190e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00117e98)();\n  return pvVar1;\n}\n\n", 
    "0010e1a0": "\nvoid FUN_0010e1a0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010e180(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00103b10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fstatfs_00117f48)();\n  return iVar1;\n}\n\n", 
    "00103c31": "\nvoid FUN_00103c31(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103c1d": "\nvoid FUN_00103c1d(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106410": "\nvoid FUN_00106410(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_001064ab;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_001064ab:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "001191d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid setfscreatecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001190b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107740": "\nundefined8 FUN_00107740(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107720(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "001192f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00117cc8)();\n  return;\n}\n\n", 
    "001191d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c2f0": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  uint uVar4;\n  int iVar5;\n  long *__ptr;\n  ulong uVar6;\n  char *__ptr_00;\n  long lVar7;\n  size_t sVar8;\n  long lVar9;\n  long lVar10;\n  int *piVar11;\n  char *__s;\n  ulong uVar12;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar11 = __errno_location();\n    *piVar11 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  uVar4 = param_2 & 0xfffffdff | 4;\n  if ((param_2 & 2) == 0) {\n    uVar4 = param_2;\n  }\n  *(uint *)(__ptr + 9) = uVar4;\n  uVar6 = FUN_0010ab40(param_1);\n  uVar12 = 0x1000;\n  if (0xfff < uVar6) {\n    uVar12 = uVar6;\n  }\n  local_42 = FUN_0010b380(__ptr + 4,__ptr + 6,uVar12);\n  if (local_42 == 0) goto LAB_0010c5a2;\n  __ptr_00 = *param_1;\n  if (__ptr_00 == (char *)0x0) {\n    if (param_3 != 0) {\n      __s = (char *)0x0;\nLAB_0010c3e8:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_0010c3f7;\n    }\nLAB_0010c637:\n    lVar9 = 0;\nLAB_0010c50f:\n    lVar10 = FUN_0010ae70(__ptr,\"\",0);\n    *__ptr = lVar10;\n    if (lVar10 != 0) {\n      *(long *)(lVar10 + 0x10) = lVar9;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar10 + 0x70) = 9;\n      *(undefined8 *)(lVar10 + 0x58) = 1;\n      cVar2 = FUN_0010b3f0(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar5 = FUN_0010b460(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                               &DAT_0011238b);\n          *(int *)(__ptr + 5) = iVar5;\n          if (iVar5 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        FUN_0010d9a0(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_0010c588:\n    FUN_0010af10(lVar9);\n    free(__ptr_00);\n  }\n  else {\n    __ptr_00 = (char *)FUN_0010ae70(__ptr,\"\",0);\n    if (__ptr_00 != (char *)0x0) {\n      *(undefined8 *)(__ptr_00 + 0x58) = 0xffffffffffffffff;\n      __s = *param_1;\n      *(undefined8 *)(__ptr_00 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_0010c3e8;\nLAB_0010c3f7:\n      if (__s == (char *)0x0) goto LAB_0010c637;\n      local_40 = 0;\n      uVar12 = 0;\n      lVar10 = 0;\n      do {\n        sVar8 = strlen(__s);\n        if (((2 < sVar8) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) && (__s[sVar8 - 1] == '/')) {\n          do {\n            if (__s[sVar8 - 2] != '/') break;\n            sVar8 = sVar8 - 1;\n          } while (sVar8 != 1);\n        }\n        lVar7 = FUN_0010ae70(__ptr);\n        lVar9 = lVar10;\n        if (lVar7 == 0) goto LAB_0010c588;\n        *(undefined8 *)(lVar7 + 0x58) = 0;\n        *(char **)(lVar7 + 8) = __ptr_00;\n        *(long *)(lVar7 + 0x30) = lVar7 + 0x108;\n        lVar9 = lVar7;\n        if ((lVar10 == 0) || (local_42 == 0)) {\n          uVar3 = FUN_0010abc0(__ptr,lVar7,0);\n          *(undefined2 *)(lVar7 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_0010c485;\n          *(undefined8 *)(lVar7 + 0x10) = 0;\n          if (lVar10 != 0) goto LAB_0010c5f8;\n        }\n        else {\n          *(undefined2 *)(lVar7 + 0x70) = 0xb;\n          FUN_0010ab90(lVar7,1);\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar7 + 0x10) = 0;\nLAB_0010c5f8:\n            *(long *)(local_40 + 0x10) = lVar7;\n            lVar9 = lVar10;\n          }\n          else {\nLAB_0010c485:\n            *(long *)(lVar7 + 0x10) = lVar10;\n            lVar7 = local_40;\n          }\n        }\n        local_40 = lVar7;\n        uVar12 = uVar12 + 1;\n        __s = param_1[uVar12];\n        lVar10 = lVar9;\n      } while (__s != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar12)) {\n        lVar9 = FUN_0010ad70(__ptr,lVar9,uVar12);\n      }\n      goto LAB_0010c50f;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_0010c5a2:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n", 
    "001190b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001038c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00117e20)();\n  return iVar1;\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00117eb0)();\n  return iVar1;\n}\n\n", 
    "001192f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid mode_to_security_class(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chdir(char *__path)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_chdir_00117d90)();\n  return iVar1;\n}\n\n", 
    "0010f5c0": "\nundefined8 FUN_0010f5c0(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_0010f63b:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_0010f710:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_0010f767;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_0010f710;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = FUN_0010f330(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_0010f710;\n  }\n  goto switchD_0010f7f2_caseD_26;\nLAB_0010f767:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_0010f77b:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_0010f784;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_0010f784;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0010f95c;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = FUN_0010f330(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_0010f7f2_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0010f95c:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_0010f7f2_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_0010f977:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_0010f784:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x0010f7e1;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_0010f784;\n      }\n      goto LAB_0010fb66;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)FUN_0010f330(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010ffca;\nLAB_0011019a:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_001100ce:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010f977;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0011019a;\n        goto LAB_001100ce;\n      }\n      goto LAB_001101cf;\n    }\n    goto LAB_001101d3;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_0010f9ee;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = FUN_0010f330(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_0010f7f2_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_0010f9ee:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_0010f7f2_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_0010fa8e:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_0010fb66;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_0010f77b;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)FUN_0010f330(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_001101d3;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_00110011;\n      goto LAB_0010fa8a;\n    }\n    goto LAB_001101d3;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_00110011:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_0010fa8a:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_0010fa8e;\n  }\n  goto LAB_0010ffca;\ncode_r0x0010f7e1:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_0010f7f2_caseD_25;\n  default:\n    goto switchD_0010f7f2_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_0010f7f2_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_0010fb66;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_0010f83b:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_0010fb66:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_0010f7f2_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_0010f63b;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_001101cf:\n      __src = (byte **)param_3[1];\n      goto LAB_001101d3;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_0010f908;\n        goto LAB_0010fe9a;\n      }\n      goto LAB_001101cf;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_0010fe9a:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_0010f908:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_0010f63b;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_0010ffda;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)FUN_0010f330(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010ffca;\nLAB_0010fe51:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010fe08:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010f83b;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010fe51;\n        goto LAB_0010fe08;\n      }\n      goto LAB_001101cf;\n    }\nLAB_001101d3:\n    if (ppbVar2 == __src) goto LAB_0010ffca;\n  }\n  free(__src);\nLAB_0010ffca:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_0010ffda:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "00105d20": "\nvoid FUN_00105d20(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "00105c00": "\nvoid FUN_00105c00(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00103b40": "\nvoid freecon(void)\n\n{\n  (*(code *)PTR_freecon_00117f60)();\n  return;\n}\n\n", 
    "00103a20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_00117ed0)();\n  return sVar1;\n}\n\n", 
    "001102a0": "\nvoid FUN_001102a0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00118008);\n  return;\n}\n\n", 
    "0010a980": "\nvoid FUN_0010a980(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0010a950(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00104100": "\nvoid FUN_00104100(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00107610": "\nvoid FUN_00107610(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_001180e0 = pcVar1 + 1;\n    uVar3 = (long)DAT_001180e0 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_00111810;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_001180e0;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_001180e0 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "001190c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chdir(char *__path)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107970": "\nundefined8\nFUN_00107970(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001078c0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001092c0": "\nvoid FUN_001092c0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00118200;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001191e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105790": "\nvoid FUN_00105790(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_001057f0();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a9a0();\n}\n\n", 
    "0010d1b0": "\nvoid FUN_0010d1b0(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = lgetfilecon();\n  FUN_0010d120(uVar1,param_2);\n  return;\n}\n\n", 
    "001190c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00117ea8)();\n  return pcVar1;\n}\n\n", 
    "001191e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00117e18)();\n  return iVar1;\n}\n\n", 
    "0010af10": "\nvoid FUN_0010af10(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n", 
    "00103a10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00117ec8)();\n  return iVar1;\n}\n\n", 
    "00103c50": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_00103c50(int param_1,undefined8 *param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  char cVar3;\n  int iVar4;\n  __mode_t __mask;\n  uint uVar5;\n  undefined8 uVar6;\n  void *__ptr;\n  int *piVar7;\n  undefined8 uVar8;\n  long lVar9;\n  long lVar10;\n  long in_FS_OFFSET;\n  code *local_58;\n  __mode_t local_50;\n  undefined8 local_4c;\n  undefined local_44;\n  undefined8 local_40;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_58 = (code *)0x0;\n  local_40 = 0;\n  local_4c = 0x1ff;\n  local_44 = 0;\n  FUN_00107610(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_001102a0(FUN_001056e0);\n  lVar1 = 0;\n  lVar2 = 0;\n  while (lVar10 = lVar2, lVar9 = lVar1,\n        iVar4 = getopt_long(param_1,param_2,\"pm:vZ\",&PTR_s_context_00117980,0), iVar4 != -1) {\n    lVar1 = optarg;\n    lVar2 = lVar10;\n    if (iVar4 != 0x6d) {\n      lVar1 = lVar9;\n      if (iVar4 < 0x6e) {\n        if (iVar4 == -0x82) {\n          FUN_00104680(0);\n          goto LAB_00103f3a;\n        }\n        if (iVar4 == 0x5a) {\n          cVar3 = FUN_001040f0();\n          lVar2 = optarg;\n          if (cVar3 == '\\0') {\n            iVar4 = is_selinux_enabled();\n            if (iVar4 < 1) {\n              lVar2 = lVar10;\n              if (optarg != 0) {\n                uVar6 = dcgettext(0,\n                                  \"warning: ignoring --context; it requires an SELinux/SMACK-enabled kernel\"\n                                  ,5);\n                    /* WARNING: Subroutine does not return */\n                error(0,0,uVar6);\n              }\n            }\n            else {\n              lVar2 = optarg;\n              if (optarg == 0) {\n                local_44 = 1;\n                lVar2 = lVar10;\n              }\n            }\n          }\n        }\n        else {\n          if (iVar4 == -0x83) {\n            FUN_0010a640(stdout,\"mkdir\",\"GNU coreutils\",PTR_DAT_00118010,\"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n            exit(0);\n          }\n          do {\n            iVar4 = FUN_00104680(1);\nLAB_00103d68:\n          } while (iVar4 != 0x76);\n          local_40 = dcgettext(0,\"created directory %s\",5);\n        }\n      }\n      else {\n        if (iVar4 != 0x70) goto LAB_00103d68;\n        local_58 = FUN_001042c0;\n      }\n    }\n  }\n  if (optind == param_1) {\nLAB_00103f3a:\n    uVar6 = dcgettext(0,\"missing operand\",5);\n                    /* WARNING: Subroutine does not return */\n    error(0,0,uVar6);\n  }\n  if (lVar10 != 0) {\n    cVar3 = FUN_001040f0();\n    if (cVar3 == '\\0') {\n      FUN_001040d0(lVar10);\n      iVar4 = setfscreatecon();\n    }\n    else {\n      iVar4 = FUN_001043d0();\n    }\n    if (iVar4 < 0) {\n      uVar6 = FUN_00109900(lVar10);\n      uVar8 = dcgettext(0,\"failed to set default file creation context to %s\",5);\n      piVar7 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar7,uVar8,uVar6);\n    }\n  }\n  if (local_58 == (code *)0x0) {\n    if (lVar9 == 0) goto LAB_00103ed5;\n    __mask = umask(0);\n    umask(__mask);\n  }\n  else {\n    __mask = umask(0);\n    umask(__mask);\n    if (lVar9 == 0) {\n      local_4c = CONCAT44(local_4c._4_4_,0x1ff);\n      local_50 = __mask;\n      goto LAB_00103ed5;\n    }\n  }\n  local_50 = __mask;\n  __ptr = (void *)FUN_001070b0(lVar9);\n  if (__ptr == (void *)0x0) {\n    uVar6 = FUN_00109900(lVar9);\n    uVar8 = dcgettext(0,\"invalid mode %s\",5);\n                    /* WARNING: Subroutine does not return */\n    error(1,0,uVar8,uVar6);\n  }\n  uVar5 = FUN_00107480(0x1ff,1,__mask,__ptr,(long)&local_4c + 4);\n  local_4c = local_4c & 0xffffffff00000000 | (ulong)uVar5;\n  free(__ptr);\nLAB_00103ed5:\n  FUN_00109fe0(param_1 - optind,param_2 + optind,FUN_00104130,&local_58);\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00103b30": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00117f58)();\n  return;\n}\n\n", 
    "00109900": "\nvoid FUN_00109900(undefined8 param_1)\n\n{\n  FUN_001098f0(0,param_1);\n  return;\n}\n\n", 
    "001191b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105860": "\nchar * FUN_00105860(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "001192d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105980": "\nulong FUN_00105980(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = 0;\n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = FUN_001060a0(param_1,&local_28);\n    uVar1 = uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103c09": "\nvoid switchD_00107f1f::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b810": "\nundefined8 FUN_0010b810(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = FUN_0010d7e0(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)FUN_001069b0(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n", 
    "00103680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00117d00)();\n  return;\n}\n\n", 
    "001191b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d4e0": "\nuint FUN_0010d4e0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "001192d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getfscreatecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c04": "\nvoid FUN_00103c04(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010aaf0": "\nulong FUN_0010aaf0(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "001190a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001192e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a850": "\nvoid FUN_0010a850(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010a8ab;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010a8ab:\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a9a0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_0010a7e0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "001191c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00117cf8)();\n  return iVar1;\n}\n\n", 
    "00103790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_00117d88)();\n  return iVar1;\n}\n\n", 
    "001092a0": "\nundefined4 FUN_001092a0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00118200;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001190a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d4f0": "\nuint FUN_0010d4f0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "001192e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_str(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001191c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001192b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a820": "\nvoid FUN_0010a820(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_0010a7e0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a9a0();\n}\n\n", 
    "001095d0": "\nvoid FUN_001095d0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_001076d0(auStack_68);\n  FUN_00109040(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b2e0": "\nvoid FUN_0010b2e0(undefined4 *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_2 - 1U < 0xc) {\n    uVar1 = *(undefined4 *)(&DAT_001123a0 + (ulong)(param_2 - 1U) * 4);\n  }\n  *param_1 = uVar1;\n  return;\n}\n\n", 
    "0010d5e0": "\nbool FUN_0010d5e0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "001039a0": "\nvoid setfscreatecon(void)\n\n{\n  (*(code *)PTR_setfscreatecon_00117e90)();\n  return;\n}\n\n", 
    "001192b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c27": "\nvoid FUN_00103c27(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d4c0": "\nvoid thunk_FUN_0010d480(void)\n\n{\n  FUN_0010d480();\n  return;\n}\n\n", 
    "00103b00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_00117f40)();\n  return pDVar1;\n}\n\n", 
    "00103c22": "\nvoid FUN_00103c22(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104e30": "\nuint FUN_00104e30(char *param_1,uint param_2,char param_3)\n\n{\n  uint uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  char *__ptr;\n  long in_FS_OFFSET;\n  char *local_48;\n  undefined8 local_40;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*param_1 == '/') || (param_3 != '\\0')) {\n    local_48 = param_1;\n    __ptr = (char *)0x0;\n  }\n  else {\n    local_48 = (char *)FUN_001050a0(param_1,2);\n    __ptr = local_48;\n    if (local_48 == (char *)0x0) {\n      uVar6 = FUN_00109640(4,param_1);\n      uVar7 = dcgettext(0,\"error canonicalizing %s\",5);\n      piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(1,*piVar5,uVar7,uVar6);\n    }\n  }\n  local_40 = 0;\n  if ((char)param_2 == '\\0') {\n    iVar2 = FUN_00104990(local_48,param_3);\n    param_2 = param_2 & 0xffffff00 | (uint)(iVar2 != -1);\n    free(__ptr);\n  }\n  else {\n    lVar3 = FUN_0010a9e0(&local_48,0x10,0);\n    while (lVar4 = fts_read(lVar3), lVar4 != 0) {\n      uVar1 = FUN_00104990(*(undefined8 *)(lVar3 + 0x20),param_3);\n      param_2 = param_2 & (uVar1 & 0xffffff00 | (uint)(uVar1 != 0xffffffff));\n    }\n    piVar5 = __errno_location();\n    if (*piVar5 != 0) {\n      uVar6 = dcgettext(0,\"fts_read failed\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar5,uVar6);\n    }\n    iVar2 = fts_close(lVar3);\n    if (iVar2 != 0) {\n      uVar6 = dcgettext(0,\"fts_close failed\",5);\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar5,uVar6);\n    }\n    free(__ptr);\n  }\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return param_2;\n}\n\n", 
    "00109fe0": "\nint FUN_00109fe0(int param_1,undefined8 *param_2,code *param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  long lVar4;\n  int iVar5;\n  int iVar6;\n  undefined8 *puVar7;\n  long in_FS_OFFSET;\n  undefined4 local_48;\n  undefined local_44 [4];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = FUN_00109be0(&local_48,param_2,param_3,0);\n  iVar2 = iVar2 + -1;\n  if (-1 < iVar2) {\n    lVar4 = (long)iVar2;\n    do {\n      iVar5 = (int)lVar4;\n      if (*(char *)param_2[lVar4] != '/') break;\n      iVar5 = iVar5 + -1;\n      lVar4 = lVar4 + -1;\n    } while (-1 < (int)lVar4);\n    if (0 < iVar5) {\n      iVar6 = 0;\n      puVar7 = param_2;\n      do {\n        cVar1 = FUN_00109ae0(local_48,local_44);\n        if (cVar1 == '\\0') {\n          iVar3 = (*param_3)(*puVar7,&local_48,param_4);\n          if (iVar6 < iVar3) {\n            iVar6 = iVar3;\n          }\n        }\n        if (*(char *)puVar7[1] != '/') {\n          iVar3 = FUN_00109e00(&local_48,iVar6);\n          if (iVar6 < iVar3) {\n            iVar6 = iVar3;\n          }\n        }\n        puVar7 = puVar7 + 1;\n      } while (puVar7 != param_2 + (ulong)(iVar5 - 1) + 1);\n      goto LAB_0010a0be;\n    }\n  }\n  iVar6 = 0;\n  iVar5 = 0;\nLAB_0010a0be:\n  FUN_00109f60(&local_48);\n  if (iVar5 < param_1) {\n    puVar7 = param_2 + iVar5;\n    do {\n      iVar3 = (*param_3)(*puVar7,&local_48,param_4);\n      if (iVar6 < iVar3) {\n        iVar6 = iVar3;\n      }\n      puVar7 = puVar7 + 1;\n    } while (puVar7 != param_2 + (ulong)(uint)(iVar2 - iVar5) + (long)iVar5 + 1);\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e180": "\nvoid FUN_0010e180(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010e1e0(param_1,0,1);\n  return;\n}\n\n", 
    "0010f390": "\nulong FUN_0010f390(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "0010aad0": "\nulong FUN_0010aad0(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "00103c0e": "\nvoid FUN_00103c0e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a950": "\nvoid FUN_0010a950(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_0010a780(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "001192c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001191a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_free(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103690": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00117d08)();\n  return;\n}\n\n", 
    "00103c18": "\nvoid switchD_0010a1e8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d4d0": "\nuint FUN_0010d4d0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "001192c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d5f0": "\nulong FUN_0010d5f0(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001191a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__mode_t umask(__mode_t __mask)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c13": "\nvoid FUN_00103c13(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105f10": "\nbool FUN_00105f10(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00105f30:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00105f30;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "001070b0": "\nvoid * FUN_001070b0(byte *param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  void *pvVar5;\n  byte *pbVar6;\n  byte bVar7;\n  uint uVar8;\n  uint extraout_EDX;\n  long extraout_RDX;\n  byte *pbVar9;\n  long lVar10;\n  byte bVar11;\n  long lVar12;\n  undefined *puVar13;\n  bool bVar14;\n  \n  bVar11 = *param_1;\n  uVar2 = (uint)(char)bVar11;\n  if ((byte)(bVar11 - 0x30) < 8) {\n    uVar8 = 0;\n    pbVar6 = param_1;\n    do {\n      uVar8 = (uVar2 - 0x30) + uVar8 * 8;\n      pbVar6 = pbVar6 + 1;\n      if (0xfff < uVar8) {\n        return (void *)0x0;\n      }\n      bVar11 = *pbVar6;\n      uVar2 = (uint)(char)bVar11;\n    } while ((byte)(bVar11 - 0x30) < 8);\n    if (bVar11 != 0) {\n      return (void *)0x0;\n    }\n    uVar8 = FUN_00107060();\n    uVar2 = uVar8 & 0xc00 | 0x3ff;\n    if (4 < extraout_RDX - (long)param_1) {\n      uVar2 = 0xfff;\n    }\n    pvVar5 = (void *)FUN_00107070(uVar8,uVar2);\n    return pvVar5;\n  }\n  lVar10 = 1;\n  pbVar6 = param_1;\n  while (bVar11 != 0) {\n    pbVar6 = pbVar6 + 1;\n    lVar10 = lVar10 + (ulong)((byte)uVar2 == 0x2b || ((byte)uVar2 & 0xef) == 0x2d);\n    bVar11 = *pbVar6;\n    uVar2 = (uint)bVar11;\n  }\n  pvVar5 = (void *)FUN_0010a7a0(lVar10,0x10);\n  lVar10 = 0;\n  puVar13 = &DAT_00111754;\nLAB_0010711a:\n  bVar11 = *param_1;\n  uVar8 = 0;\n  cVar1 = bVar11 + 0x99;\n  bVar14 = bVar11 == 0x67;\n  uVar2 = 0;\n  if (bVar14) goto LAB_0010717a;\n  do {\n    uVar8 = (uint)bVar11;\n    if (bVar14 || SBORROW1(bVar11,'g') != cVar1 < '\\0') {\n      if (bVar11 != 0x61) break;\n      uVar8 = 0xfff;\n      param_1 = param_1 + 1;\n    }\n    else if (bVar11 == 0x6f) {\n      uVar8 = uVar2 | 0x207;\n      param_1 = param_1 + 1;\n    }\n    else {\n      if (bVar11 != 0x75) goto LAB_00107134;\n      uVar8 = uVar2 | 0x9c0;\n      param_1 = param_1 + 1;\n    }\n    while( true ) {\n      bVar11 = *param_1;\n      cVar1 = bVar11 + 0x99;\n      bVar14 = cVar1 == '\\0';\n      uVar2 = uVar8;\n      if (!bVar14) break;\nLAB_0010717a:\n      uVar8 = uVar8 | 0x438;\n      param_1 = param_1 + 1;\n    }\n  } while( true );\n  if (((char)bVar11 < 'b') && (((bVar11 & 0xef) == 0x2d || (bVar11 == 0x2b)))) {\n    bVar7 = param_1[1];\n    lVar12 = lVar10 + 1;\n    pbVar6 = (byte *)(lVar10 * 0x10 + (long)pvVar5);\n    cVar1 = bVar7 + 0x91;\n    bVar14 = bVar7 == 0x6f;\n    lVar10 = lVar12;\n    if (bVar14) goto LAB_0010724a;\n    do {\n      bVar11 = (byte)uVar8;\n      uVar8 = (uint)(char)bVar7;\n      if (bVar14 || SBORROW1(bVar7,'o') != cVar1 < '\\0') {\n        if ((char)bVar7 < '8') {\n          if ('/' < (char)bVar7) {\n            uVar3 = 0;\n            pbVar9 = param_1 + 1;\n            goto LAB_001072a2;\n          }\n        }\n        else {\n          pbVar9 = param_1 + 2;\n          uVar3 = 0x38;\n          if (bVar7 == 0x67) goto LAB_0010726a;\n        }\n      }\n      else {\n        pbVar9 = param_1 + 2;\n        uVar3 = 0x1c0;\n        if (bVar7 == 0x75) goto LAB_0010726a;\n      }\n      uVar3 = 0;\n      if ((byte)(uVar8 - 0x58) < 0x21) {\n                    /* WARNING: Could not recover jumptable at 0x001071f1. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        pvVar5 = (void *)(*(code *)(puVar13 + *(int *)(puVar13 + (ulong)(uVar8 - 0x58 & 0xff) * 4)))\n                                   ();\n        return pvVar5;\n      }\n      pbVar6[1] = 1;\n      *(uint *)(pbVar6 + 4) = uVar2;\n      *(undefined4 *)(pbVar6 + 8) = 0;\n      *pbVar6 = bVar11;\n      pbVar9 = param_1 + 1;\n      while( true ) {\n        if (uVar2 != 0) {\n          uVar3 = uVar3 & uVar2;\n        }\nLAB_00107216:\n        *(uint *)(pbVar6 + 0xc) = uVar3;\n        lVar12 = lVar10 + 1;\n        pbVar6 = pbVar6 + 0x10;\n        bVar11 = (byte)uVar8;\n        if (((bVar11 & 0xef) != 0x2d) && (bVar11 != 0x2b)) {\n          if (bVar11 != 0x2c) {\n            if (bVar11 == 0) {\n              *(undefined *)((long)pvVar5 + lVar10 * 0x10 + 1) = 0;\n              return pvVar5;\n            }\n            goto LAB_00107134;\n          }\n          param_1 = pbVar9 + 1;\n          goto LAB_0010711a;\n        }\n        bVar7 = pbVar9[1];\n        cVar1 = bVar7 + 0x91;\n        bVar14 = cVar1 == '\\0';\n        param_1 = pbVar9;\n        lVar10 = lVar12;\n        if (!bVar14) break;\nLAB_0010724a:\n        pbVar9 = param_1 + 2;\n        uVar3 = 7;\n        lVar10 = lVar12;\nLAB_0010726a:\n        *pbVar6 = bVar11;\n        uVar8 = (uint)param_1[2];\n        pbVar6[1] = 3;\n        *(uint *)(pbVar6 + 4) = uVar2;\n        *(uint *)(pbVar6 + 8) = uVar3;\n      }\n    } while( true );\n  }\n  goto LAB_00107134;\n  while( true ) {\n    bVar7 = *pbVar9;\n    uVar8 = (uint)(char)bVar7;\n    if (7 < (byte)(bVar7 - 0x30)) break;\nLAB_001072a2:\n    uVar3 = (uVar8 - 0x30) + uVar3 * 8;\n    pbVar9 = pbVar9 + 1;\n    if (0xfff < uVar3) goto LAB_00107134;\n  }\n  if ((uVar2 == 0) && ((bVar7 == 0 || (bVar7 == 0x2c)))) {\n    uVar4 = FUN_00107060();\n    uVar2 = 0xfff;\n    *pbVar6 = bVar11;\n    *(undefined4 *)(pbVar6 + 8) = uVar4;\n    uVar3 = 0xfff;\n    pbVar6[1] = 1;\n    *(undefined4 *)(pbVar6 + 4) = 0xfff;\n    uVar8 = extraout_EDX;\n    goto LAB_00107216;\n  }\nLAB_00107134:\n  free(pvVar5);\n  return (void *)0x0;\n}\n\n", 
    "00103760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00117d70)();\n  return sVar1;\n}\n\n", 
    "00103880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_closedir_00117e00)();\n  return iVar1;\n}\n\n", 
    "00103640": "\nvoid is_selinux_enabled(void)\n\n{\n  (*(code *)PTR_is_selinux_enabled_00117ce0)();\n  return;\n}\n\n", 
    "0010d4a0": "\nuint FUN_0010d4a0(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "0010d5c0": "\nbool FUN_0010d5c0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "0010d6e0": "\nint FUN_0010d6e0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_0010d6a0(*param_1);\n      bVar2 = FUN_0010d6a0(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010d190": "\nvoid FUN_0010d190(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = getfilecon();\n  FUN_0010d120(uVar1,param_2);\n  return;\n}\n\n", 
    "0010f370": "\nvoid FUN_0010f370(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = FUN_0010f330();\n  uVar1 = FUN_0010f330(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  FUN_0010f330(uVar1,in_RCX);\n  return;\n}\n\n", 
    "001040f0": "\nundefined8 FUN_001040f0(void)\n\n{\n  return 0;\n}\n\n", 
    "001062d0": "\nvoid FUN_001062d0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "0010dea0": "\nvoid FUN_0010dea0(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_3 & 0x40) != 0) {\n    uVar3 = param_4 & 0xffffffff;\n  }\n  iVar2 = openat(param_1,param_2,param_3,uVar3);\n  FUN_0010df20(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_00117df8)();\n  return sVar1;\n}\n\n", 
    "00103990": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n  dirent *pdVar1;\n  \n  pdVar1 = (dirent *)(*(code *)PTR_readdir_00117e88)();\n  return pdVar1;\n}\n\n", 
    "00103630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_raise_00117cd8)();\n  return iVar1;\n}\n\n", 
    "00103750": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00117d68)();\n  return;\n}\n\n", 
    "00107ca0": "\nundefined8\nFUN_00107ca0(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00107bb0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00105ac0": "\nlong FUN_00105ac0(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001192a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106cd0": "\nvoid FUN_00106cd0(void **param_1)\n\n{\n  free(*param_1);\n  (*(code *)PTR_free_00117fb8)(param_1);\n  return;\n}\n\n", 
    "0010b3f0": "\nulong FUN_0010b3f0(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_1 & 0x102) != 0) {\n    pvVar1 = (void *)FUN_00106300(0x1f,0,FUN_0010aad0,FUN_0010aaa0,PTR_free_00117fb8);\n    *param_2 = pvVar1;\n    return (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  pvVar1 = malloc(0x20);\n  *param_2 = pvVar1;\n  if (pvVar1 != (void *)0x0) {\n    FUN_0010d7c0(pvVar1);\n    return 1;\n  }\n  return 0;\n}\n\n", 
    "0010d4b0": "\nvoid thunk_FUN_0010d470(void)\n\n{\n  FUN_0010d470();\n  return;\n}\n\n", 
    "0010d5d0": "\nbool FUN_0010d5d0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001040e0": "\nuint FUN_001040e0(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x5f) |\n         param_3 & 0xffffff00 | (uint)(param_1 == 0x3d);\n}\n\n", 
    "00103620": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_00117cd0)();\n  return;\n}\n\n", 
    "001192a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid freecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00117cf0)();\n  return piVar1;\n}\n\n", 
    "0010da60": "\nchar * FUN_0010da60(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00103780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00117d80)();\n  return iVar1;\n}\n\n", 
    "00104990": "\nint FUN_00104990(char *param_1,char param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  int *piVar6;\n  long in_FS_OFFSET;\n  undefined8 local_d8;\n  long local_d0;\n  undefined local_c8 [24];\n  undefined4 local_b0;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d8 = 0;\n  local_d0 = 0;\n  if (param_2 != '\\0') {\n    iVar1 = getfscreatecon(&local_d0);\n    if (iVar1 < 0) {\n      iVar1 = -1;\n    }\n    else if (local_d0 == 0) {\n      piVar6 = __errno_location();\n      iVar1 = -1;\n      *piVar6 = 0x3d;\n    }\n    else {\n      iVar1 = lsetfilecon(param_1);\n      freecon(local_d0);\n    }\n    goto LAB_001049ff;\n  }\n  iVar1 = open(param_1,0x20000);\n  if (iVar1 == -1) {\n    piVar6 = __errno_location();\n    if ((*piVar6 == 0x28) && (iVar2 = FUN_00110300(param_1,local_c8), -1 < iVar2))\n    goto LAB_00104a5c;\n    lVar4 = 0;\n    lVar3 = 0;\n  }\n  else {\n    iVar2 = FUN_001102e0(iVar1,local_c8);\n    if (iVar2 < 0) {\n      lVar4 = 0;\n      lVar3 = 0;\n      iVar2 = -1;\n    }\n    else {\nLAB_00104a5c:\n      iVar2 = matchpathcon(param_1,local_b0,&local_d8);\n      if (iVar2 < 0) {\n        piVar6 = __errno_location();\n        if (*piVar6 != 2) goto LAB_00104b4e;\n        *piVar6 = 0x3d;\n        lVar4 = 0;\n        lVar3 = 0;\nLAB_00104b53:\n        if (iVar1 == -1) goto LAB_00104b17;\n      }\n      else {\n        lVar3 = context_new(local_d8);\n        if (lVar3 == 0) {\nLAB_00104b4e:\n          lVar4 = 0;\n          lVar3 = 0;\n          goto LAB_00104b53;\n        }\n        if (iVar1 == -1) {\n          lVar4 = 0;\n          iVar2 = FUN_0010d1b0(param_1,&local_d0);\n          if ((((iVar2 < 0) || (lVar4 = context_new(local_d0), lVar4 == 0)) ||\n              (lVar5 = context_type_get(lVar3), lVar5 == 0)) ||\n             (iVar2 = context_type_set(lVar4,lVar5), iVar2 != 0)) goto LAB_00104b17;\nLAB_00104add:\n          lVar5 = context_str(lVar4);\n          if (lVar5 == 0) goto LAB_00104b53;\n          if (iVar1 == -1) {\n            iVar1 = lsetfilecon(param_1,lVar5);\n            goto LAB_00104b17;\n          }\n          iVar2 = fsetfilecon(iVar1);\n          goto LAB_00104b5f;\n        }\n        iVar2 = FUN_0010d1d0(iVar1);\n        if (iVar2 < 0) {\n          lVar4 = 0;\n          iVar2 = -1;\n          goto LAB_00104b5f;\n        }\n        lVar4 = context_new(local_d0);\n        if (((lVar4 != 0) && (lVar5 = context_type_get(lVar3), lVar5 != 0)) &&\n           (iVar2 = context_type_set(lVar4,lVar5), iVar2 == 0)) goto LAB_00104add;\n      }\n      iVar2 = -1;\n    }\nLAB_00104b5f:\n    close(iVar1);\n    iVar1 = iVar2;\n  }\nLAB_00104b17:\n  context_free(lVar3);\n  context_free(lVar4);\n  freecon(local_d8);\n  freecon(local_d0);\nLAB_001049ff:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar1;\n}\n\n", 
    "00107bb0": "\nundefined8\nFUN_00107bb0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d660((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107ae0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001098f0": "\nvoid FUN_001098f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001098d0(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00105af0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00105af0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_001116b0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_001116c4 < fVar1) && (fVar1 < DAT_001116c8)) && (_DAT_001116cc < pfVar2[3])) &&\n     (_DAT_001116d0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_001116c4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_001116d4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_001116b0;\n  return 0;\n}\n\n", 
    "0010d6c0": "\nint FUN_0010d6c0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010d7e0": "\nundefined8 FUN_0010d7e0(long *param_1,long *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  long *extraout_RDX;\n  long *extraout_RDX_00;\n  long *plVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  if (param_1[2] == 0) {\n    param_1[2] = 1;\n    cVar1 = FUN_0010d7b0(1);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    lVar4 = param_2[1];\n    plVar3 = extraout_RDX_00;\n  }\n  else {\n    lVar4 = param_2[1];\n    if ((lVar4 == *param_1) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    lVar2 = param_1[2] + 1;\n    param_1[2] = lVar2;\n    cVar1 = FUN_0010d7b0(lVar2);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    plVar3 = extraout_RDX;\n    if (lVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar2 = *param_2;\n  *plVar3 = lVar4;\n  plVar3[1] = lVar2;\n  return 0;\n}\n\n", 
    "0010e260": "\nvoid FUN_0010e260(uint *param_1)\n\n{\n  *param_1 = *param_1 | 0x20;\n  return;\n}\n\n", 
    "0010f350": "\nvoid FUN_0010f350(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = FUN_0010f330();\n  FUN_0010f330(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "00119098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00117ce8)();\n  return;\n}\n\n", 
    "00103770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00117d78)();\n  return sVar1;\n}\n\n", 
    "0010a910": "\nvoid FUN_0010a910(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a9a0();\n}\n\n", 
    "00103890": "\nvoid matchpathcon(void)\n\n{\n  (*(code *)PTR_matchpathcon_00117e08)();\n  return;\n}\n\n", 
    "001097e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001097e0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00118200;\n  uStack_60 = uRam0000000000118208;\n  local_38 = DAT_00118230;\n  local_58 = _DAT_00118210;\n  uStack_50 = uRam0000000000118218;\n  local_48 = _DAT_00118220;\n  uStack_40 = uRam0000000000118228;\n  FUN_001092c0(&local_68);\n  FUN_00109040(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106cf0": "\nundefined4 FUN_00106cf0(int param_1,undefined4 *param_2)\n\n{\n  if (param_1 != 4) {\n    return 0;\n  }\n  return *param_2;\n}\n\n", 
    "0010d5b0": "\nbool FUN_0010d5b0(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "0010e270": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * FUN_0010e270(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = FUN_0010f5c0(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_0010eaa3;\n  }\n  iVar5 = FUN_0010f3a0(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_0010eaa3;\n  }\n  uVar6 = FUN_0010f370(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_0010e331:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_0010e426;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x10e38c;\n      __n = (int *)FUN_0010f330(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_0010e417;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_0010e3b5;\n        }\ncode_r0x0010ee84:\n        *(undefined8 *)(puVar18 + -8) = 0x10ee89;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_0010e929;\nLAB_0010e91c:\n        if (pvVar12 == (void *)0x0) goto LAB_0010e929;\n        goto LAB_0010e921;\n      }\n      piVar19 = (int *)0xc;\nLAB_0010e3b5:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ee84;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10edfc;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x0010ee84;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x10ee46;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10e3fd;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_0010f2fc;\n      }\nLAB_0010e417:\n      *(undefined8 *)(puVar18 + -8) = 0x10e426;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_0010e426:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x10f1d9;\n          piVar9 = (int *)FUN_0010f330(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x0010ee84;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ee84;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10f2c4;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010ee84;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10f2e7;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10f22b;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_0010f2fc;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x10f2b3;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x10f262;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10f27a;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10f292;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_0010eaa3;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_00103c40;\n          *(undefined8 *)(puVar18 + -8) = 0x10ed37;\n          piVar9 = (int *)FUN_0010f330(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x0010ee84;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ee84;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10f118;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010ee84;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10f151;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10ed8f;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_0010f2fc;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_00103c40:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_00103c45;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nswitchD_0010e7d4_caseD_5:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x103c40;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x10e556;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x10e58d;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_00103c40;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_00103c40;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x10e6d7;\n            piVar9 = (int *)FUN_0010f330(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x0010ee84;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ee84;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x10f0ce;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010ee84;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f100;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x10e725;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010ee84;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x10e73b;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_0010e764:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto switchD_0010e7d4_caseD_5;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_0010ebb8;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_0010e81a:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x10e83b;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x0010e84c;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_0010ec04;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x10eb74;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x0010e84c;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10ef78;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x0010e84c;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_0010e81a;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x10ef11;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x0010e84c;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_0010ec0b;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_0010ebb8:\n              uVar11 = (ulong)local_3c0[0];\nLAB_0010e9c2:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10e9e3;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_0010e9c2;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_0010ec04:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_0010ec0b:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x10ec33;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x0010e84c:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_0010e86c;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea53;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea67;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea7f;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea97;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_0010eaa3;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_0010e764;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_00103c40;\n            if (local_3c4 < iVar5) {\nLAB_0010e86c:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f066;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f07a;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f092;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10f0aa;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_0010eaa3;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x10e8aa;\n              uVar10 = FUN_0010f330(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x10e8b5;\n              piVar13 = (int *)FUN_0010f390(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x10ecb0;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x10ecd3;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_0010e764;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x10e900;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_0010e764;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_0010e929;\n                goto LAB_0010e91c;\n              }\n              goto LAB_0010e764;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_0010e331;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0010e93d;\nLAB_0010f2fc:\n  *(undefined8 *)(puVar18 + -8) = 0x10f301;\n  local_3e0 = __errno_location();\nLAB_0010e921:\n  *(undefined8 *)(puVar18 + -8) = 0x10e929;\n  free(pvVar12);\nLAB_0010e929:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x10e93d;\n    free(puVar15);\n  }\nLAB_0010e93d:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10e955;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10e96d;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_0010eaa3:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x10f2fc;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "00110290": "\nvoid FUN_00110290(void)\n\n{\n  return;\n}\n\n", 
    "001060a0": "\nlong FUN_001060a0(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00105ac0();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "001061c0": "\nvoid FUN_001061c0(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "0010aaa0": "\nulong FUN_0010aaa0(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "0010abc0": "\nint FUN_0010abc0(long param_1,long param_2,char param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int *piVar4;\n  ulong uVar5;\n  undefined8 *puVar6;\n  byte bVar7;\n  \n  bVar7 = 0;\n  lVar1 = param_2 + 0x78;\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar2 = FUN_001102c0(*(undefined8 *)(param_2 + 0x30),lVar1);\n    if (iVar2 == 0) {\nLAB_0010ac4c:\n      uVar3 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar3 == 0x4000) {\n        uVar5 = *(ulong *)(param_2 + 0x88);\n        if ((uVar5 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar5 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar5 = uVar5 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar5;\n        iVar2 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar2 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar3 == 0xa000) {\n        iVar2 = 0xc;\n      }\n      else {\n        iVar2 = (uint)(uVar3 == 0x8000) * 5 + 3;\n      }\n      return iVar2;\n    }\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n    if (iVar2 == 2) {\n      iVar2 = FUN_00110300(*(undefined8 *)(param_2 + 0x30),lVar1);\n      if (iVar2 == 0) {\n        *piVar4 = 0;\n        return 0xd;\n      }\n      iVar2 = *piVar4;\n    }\n  }\n  else {\n    iVar2 = FUN_00110320(*(undefined4 *)(param_1 + 0x2c),*(undefined8 *)(param_2 + 0x30),lVar1,0x100\n                        );\n    if (iVar2 == 0) goto LAB_0010ac4c;\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n  }\n  *(int *)(param_2 + 0x40) = iVar2;\n  puVar6 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar5 = (ulong)(((int)lVar1 - (int)puVar6) + 0x90U >> 3);\n  for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n    *puVar6 = 0;\n    puVar6 = puVar6 + (ulong)bVar7 * -2 + 1;\n  }\n  return 10;\n}\n\n", 
    "00119190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103960": "\nvoid getfilecon(void)\n\n{\n  (*(code *)PTR_getfilecon_00117e70)();\n  return;\n}\n\n", 
    "00103af0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchown(int __fd,__uid_t __owner,__gid_t __group)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchown_00117f38)();\n  return iVar1;\n}\n\n", 
    "001098d0": "\nvoid FUN_001098d0(void)\n\n{\n  FUN_00109040();\n  return;\n}\n\n", 
    "0010d7c0": "\nvoid FUN_0010d7c0(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n", 
    "00103bff": "\nvoid FUN_00103bff(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d7b0": "\nulong FUN_0010d7b0(ulong param_1)\n\n{\n  return param_1 - 1 & 0xffffffffffffff00 | (ulong)((param_1 - 1 & param_1) == 0);\n}\n\n", 
    "00119078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103bfa": "\nvoid FUN_00103bfa(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00119198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00117dd8)();\n  return;\n}\n\n", 
    "00103950": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00117e68)();\n  return pvVar1;\n}\n\n", 
    "0010f330": "\nlong FUN_0010f330(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "00119070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103710": "\nvoid __open_2(void)\n\n{\n  (*(code *)PTR___open_2_00117d48)();\n  return;\n}\n\n", 
    "00119080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __open_2(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ae0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00117f30)();\n  return iVar1;\n}\n\n", 
    "001098e0": "\nvoid FUN_001098e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001098d0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00107070": "\nvoid FUN_00107070(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined2 *puVar1;\n  \n  puVar1 = (undefined2 *)FUN_0010a780(0x20);\n  *puVar1 = 0x13d;\n  *(undefined4 *)(puVar1 + 2) = 0xfff;\n  *(undefined4 *)(puVar1 + 4) = param_1;\n  *(undefined4 *)(puVar1 + 6) = param_2;\n  *(undefined *)((long)puVar1 + 0x11) = 0;\n  return;\n}\n\n", 
    "00109040": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00109040(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00118060;\n  if (DAT_00118058 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a9a0();\n    }\n    if (PTR_DAT_00118060 == &DAT_00118070) {\n      puVar8 = (undefined4 *)FUN_0010a7e0(0);\n      uVar6 = PTR_DAT_00118078._4_4_;\n      uVar5 = PTR_DAT_00118078._0_4_;\n      uVar3 = _UNK_00118074;\n      PTR_DAT_00118060 = (undefined *)puVar8;\n      *puVar8 = _DAT_00118070;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_0010a7e0(PTR_DAT_00118060);\n      PTR_DAT_00118060 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00118058 * 4,0,(long)((param_1 + 1) - DAT_00118058) << 4);\n    DAT_00118058 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00107e80(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00118100) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_0010a780(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00107e80(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "0010d6a0": "\nint FUN_0010d6a0(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "001064c0": "\nvoid FUN_001064c0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010656c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0010652f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0010652f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010656c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  (*(code *)PTR_free_00117fb8)(param_1);\n  return;\n}\n\n", 
    "001076d0": "\nint * FUN_001076d0(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d280": "\nulong FUN_0010d280(FILE *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  size_t sVar2;\n  undefined *__ptr;\n  size_t sVar3;\n  int *piVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  size_t local_810;\n  undefined local_808 [2008];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_810 = 2000;\n  __ptr = (undefined *)FUN_0010e270(local_808,&local_810,param_2,param_3);\n  sVar2 = local_810;\n  if (__ptr != (undefined *)0x0) {\n    sVar3 = fwrite(__ptr,1,local_810,param_1);\n    if (sVar3 < sVar2) {\n      uVar5 = 0xffffffff;\n      if (__ptr != local_808) {\n        piVar4 = __errno_location();\n        iVar1 = *piVar4;\n        free(__ptr);\n        *piVar4 = iVar1;\n      }\n      goto LAB_0010d30d;\n    }\n    if (__ptr != local_808) {\n      free(__ptr);\n    }\n    if (sVar2 < 0x80000000) {\n      uVar5 = sVar2 & 0xffffffff;\n      goto LAB_0010d30d;\n    }\n    piVar4 = __errno_location();\n    *piVar4 = 0x4b;\n  }\n  uVar5 = 0xffffffff;\n  FUN_0010e260(param_1);\nLAB_0010d30d:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00119088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid context_new(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103940": "\nvoid context_free(void)\n\n{\n  (*(code *)PTR_context_free_00117e60)();\n  return;\n}\n\n", 
    "0010e010": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0010e010(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010e094;\n  }\n  if (DAT_00118238 < 0) {\n    iVar2 = FUN_0010e010(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_00118238 != -1)) goto LAB_0010e094;\nLAB_0010e0d1:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010e094;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_0010e010(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010e094;\n        DAT_00118238 = -1;\n        __fd = iVar2;\n        goto LAB_0010e0d1;\n      }\n    }\n    DAT_00118238 = 1;\n  }\nLAB_0010e094:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103700": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00117d40)();\n  return;\n}\n\n", 
    "00103820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00117dd0)();\n  return _Var1;\n}\n\n", 
    "00103980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00117e80)();\n  return iVar1;\n}\n\n", 
    "00103740": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00117d60)();\n  return;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00117df0)();\n  return iVar1;\n}\n\n", 
    "00105ab0": "\nbool FUN_00105ab0(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "001098b0": "\nvoid FUN_001098b0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_001097e0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010dc60": "\nint FUN_0010dc60(int param_1,char *param_2,int param_3,__uid_t param_4,__gid_t param_5,uint param_6,\n                uint param_7)\n\n{\n  int iVar1;\n  int *piVar2;\n  uint uVar3;\n  int iVar4;\n  long in_FS_OFFSET;\n  undefined local_d8 [24];\n  uint local_c0;\n  __uid_t local_bc;\n  __gid_t local_b8;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 0) {\n    iVar1 = FUN_001102c0(param_2,local_d8);\n    if (iVar1 != 0) goto LAB_0010dd43;\n    if ((local_c0 & 0xf000) != 0x4000) {\n      piVar2 = __errno_location();\n      iVar1 = -1;\n      *piVar2 = 0x14;\n      goto LAB_0010dd43;\n    }\nLAB_0010dcce:\n    if (((param_4 == 0xffffffff) || (local_bc == param_4)) &&\n       ((param_5 == 0xffffffff || (local_b8 == param_5)))) {\nLAB_0010dda9:\n      uVar3 = 0;\n    }\n    else {\n      if (param_1 < 0) {\n        if (param_3 == -1) {\n          iVar1 = chown(param_2,param_4,param_5);\n        }\n        else {\n          iVar1 = lchown(param_2,param_4,param_5);\n        }\n        if (iVar1 != 0) goto LAB_0010dd43;\n      }\n      else {\n        iVar1 = fchown(param_1,param_4,param_5);\n        if (iVar1 != 0) goto LAB_0010de11;\n      }\n      if ((local_c0 & 0x49) == 0) goto LAB_0010dda9;\n      uVar3 = local_c0 & 0xc00;\n    }\n    if ((param_7 & (local_c0 ^ param_6 | uVar3)) == 0) {\n      iVar1 = 0;\n      if (param_1 < 0) goto LAB_0010dd43;\n    }\n    else {\n      param_6 = ~param_7 & local_c0 & 0xfff | param_6;\n      if (param_1 < 0) {\n        iVar1 = chmod(param_2,param_6);\n        goto LAB_0010dd43;\n      }\n      iVar1 = fchmod(param_1,param_6);\n      if (iVar1 != 0) goto LAB_0010de11;\n    }\n    iVar1 = close(param_1);\n  }\n  else {\n    iVar1 = FUN_001102e0();\n    if (iVar1 == 0) {\n      if ((local_c0 & 0xf000) == 0x4000) goto LAB_0010dcce;\n      piVar2 = __errno_location();\n      iVar4 = 0x14;\n      iVar1 = -1;\n      *piVar2 = 0x14;\n    }\n    else {\nLAB_0010de11:\n      piVar2 = __errno_location();\n      iVar4 = *piVar2;\n    }\n    close(param_1);\n    *piVar2 = iVar4;\n  }\nLAB_0010dd43:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar1;\n}\n\n", 
    "0010d9d0": "\nundefined4 FUN_0010d9d0(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar3 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar4 = *(int *)(param_1 + 0x14) + uVar3 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar4 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar4;\n  if (*(uint *)(param_1 + 0x18) == uVar4) {\n    *(uint *)(param_1 + 0x18) = uVar3 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n", 
    "00119058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid lsetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d490": "\nuint FUN_0010d490(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00119298": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid security_compute_create(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001050a0": "\nchar * FUN_001050a0(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *__s_00;\n  size_t sVar7;\n  int *piVar8;\n  uint uVar9;\n  char *__dest;\n  long lVar10;\n  char *pcVar11;\n  char *pcVar12;\n  char cVar13;\n  char *pcVar14;\n  long in_FS_OFFSET;\n  void *local_108;\n  char *local_100;\n  ulong local_f0;\n  long local_e0;\n  undefined local_d8 [24];\n  uint local_c0;\n  undefined8 local_a8;\n  long local_40;\n  \n  uVar9 = param_2 & 3;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_e0 = 0;\n  if (((uVar9 & uVar9 - 1) != 0) || (param_1 == (char *)0x0)) {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 0x16;\n    goto LAB_001052e0;\n  }\n  if (*param_1 == '\\0') {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 2;\n    goto LAB_001052e0;\n  }\n  if (*param_1 == '/') {\n    __s = (char *)FUN_0010a780(0x1000);\n    *__s = '/';\n    pcVar12 = __s + 0x1000;\n    __dest = __s + 1;\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') {\nLAB_00105141:\n      local_f0 = 0;\n      local_108 = (void *)0x0;\n      local_100 = param_1;\n      do {\n        pcVar11 = param_1;\n        cVar13 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            cVar13 = param_1[1];\n            param_1 = param_1 + 1;\n          } while (cVar13 == '/');\n          pcVar11 = param_1;\n          if (cVar13 == '\\0') break;\n        }\n        do {\n          pcVar14 = param_1;\n          cVar4 = pcVar14[1];\n          param_1 = pcVar14 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar11) break;\n        sVar6 = (long)param_1 - (long)pcVar11;\n        if (sVar6 == 1) {\n          if (cVar13 != '.') goto LAB_001051dd;\n        }\n        else {\n          if (((sVar6 != 2) || (cVar13 != '.')) || (pcVar11[1] != '.')) {\nLAB_001051dd:\n            if (__dest[-1] != '/') {\n              *__dest = '/';\n              __dest = __dest + 1;\n            }\n            if (pcVar12 <= __dest + sVar6) {\n              lVar10 = (long)__dest - (long)__s;\n              lVar3 = 0x1000 - (long)__s;\n              if (0xfff < (long)sVar6) {\n                lVar3 = (sVar6 + 1) - (long)__s;\n              }\n              __s = (char *)FUN_0010a7e0(__s,pcVar12 + lVar3);\n              pcVar12 = __s + (long)(pcVar12 + lVar3);\n              __dest = __s + lVar10;\n            }\n            memcpy(__dest,pcVar11,sVar6);\n            __dest = __dest + sVar6;\n            *__dest = '\\0';\n            pcVar11 = __dest;\n            if ((uVar9 == 2) && ((param_2 & 4) != 0)) {\nLAB_00105260:\n              local_c0 = 0;\nLAB_00105268:\n              if ((*param_1 == '\\0') || (uVar9 == 2)) {\nLAB_0010527a:\n                cVar4 = *param_1;\n                __dest = pcVar11;\n                goto LAB_00105282;\n              }\n              piVar8 = __errno_location();\n              iVar5 = 0x14;\n            }\n            else {\n              if ((param_2 & 4) == 0) {\n                iVar5 = FUN_00110300(__s,local_d8);\n              }\n              else {\n                iVar5 = FUN_001102c0();\n              }\n              if (iVar5 == 0) {\n                if ((local_c0 & 0xf000) != 0xa000) {\n                  if ((local_c0 & 0xf000) != 0x4000) goto LAB_00105268;\n                  goto LAB_0010527a;\n                }\n                cVar4 = FUN_00105010(&local_e0,local_100,local_d8);\n                if (cVar4 == '\\0') {\n                  __s_00 = (char *)FUN_0010d380(__s,local_a8);\n                  if (__s_00 != (char *)0x0) {\n                    sVar6 = strlen(__s_00);\n                    sVar7 = strlen(param_1);\n                    uVar1 = sVar6 + 1 + sVar7;\n                    if (local_f0 == 0) {\n                      local_f0 = 0x1000;\n                      if (0xfff < uVar1) {\n                        local_f0 = uVar1;\n                      }\n                      local_108 = (void *)FUN_0010a780(local_f0);\n                    }\n                    else if (local_f0 < uVar1) {\n                      local_108 = (void *)FUN_0010a7e0(local_108,uVar1);\n                      local_f0 = uVar1;\n                    }\n                    memmove((void *)((long)local_108 + sVar6),param_1,sVar7 + 1);\n                    param_1 = (char *)memcpy(local_108,__s_00,sVar6);\n                    pcVar11 = __s + 1;\n                    if (*__s_00 == '/') {\n                      *__s = '/';\n                    }\n                    else {\n                      bVar2 = pcVar11 < __dest;\n                      pcVar11 = __dest;\n                      if ((bVar2) && (pcVar11 = __dest + -1, __s < pcVar11)) {\n                        do {\n                          if (pcVar11[-1] == '/') break;\n                          pcVar11 = pcVar11 + -1;\n                        } while (__s != pcVar11);\n                      }\n                    }\n                    free(__s_00);\n                    local_100 = param_1;\n                    goto LAB_0010527a;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = *piVar8;\n                  if ((uVar9 == 2) && (iVar5 != 0xc)) goto LAB_001053bc;\n                }\n                else {\n                  if (uVar9 == 2) {\nLAB_001053bc:\n                    cVar4 = pcVar14[1];\n                    goto LAB_00105282;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = 0x28;\n                }\n              }\n              else {\n                piVar8 = __errno_location();\n                iVar5 = *piVar8;\n                if ((param_2 & 3) != 0) {\n                  if (uVar9 != 1) goto LAB_00105260;\n                  sVar6 = strspn(param_1,\"/\");\n                  if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_001053bc;\n                }\n              }\n            }\n            free(local_108);\n            free(__s);\n            if (local_e0 != 0) {\n              FUN_001064c0();\n            }\n            *piVar8 = iVar5;\n            __s = (char *)0x0;\n            goto LAB_001052e0;\n          }\n          if ((__s + 1 < __dest) && (__dest = __dest + -1, __s < __dest)) {\n            do {\n              if (__dest[-1] == '/') break;\n              __dest = __dest + -1;\n            } while (__dest != __s);\n          }\n        }\nLAB_00105282:\n      } while (cVar4 != '\\0');\n      goto LAB_00105290;\n    }\n    local_108 = (void *)0x0;\n    pcVar11 = __dest;\nLAB_001052a3:\n    __dest = pcVar11 + 1;\n  }\n  else {\n    __s = (char *)FUN_0010aa70();\n    if (__s == (char *)0x0) goto LAB_001052e0;\n    sVar6 = strlen(__s);\n    if (sVar6 < 0x1000) {\n      __s = (char *)FUN_0010a7e0(__s,0x1000);\n      __dest = __s + sVar6;\n      pcVar12 = __s + 0x1000;\n    }\n    else {\n      __dest = __s + sVar6;\n      pcVar12 = __dest;\n    }\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') goto LAB_00105141;\n    local_108 = (void *)0x0;\nLAB_00105290:\n    pcVar11 = __dest;\n    if ((__dest <= __s + 1) || (__dest[-1] != '/')) goto LAB_001052a3;\n    pcVar11 = __dest + -1;\n  }\n  *pcVar11 = '\\0';\n  if (__dest != pcVar12) {\n    __s = (char *)FUN_0010a7e0(__s,pcVar11 + (1 - (long)__s));\n  }\n  free(local_108);\n  if (local_e0 != 0) {\n    FUN_001064c0();\n  }\nLAB_001052e0:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return __s;\n}\n\n", 
    "00119178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid lgetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001040d0": "\nundefined8 FUN_001040d0(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00103610": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00117fe0)();\n  return;\n}\n\n", 
    "00119050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00117d58)();\n  return iVar1;\n}\n\n", 
    "00119290": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f310": "\nvoid FUN_0010f310(undefined8 param_1)\n\n{\n  FUN_0010e010(param_1,0,3);\n  return;\n}\n\n", 
    "00119170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getcwd_00117de8)();\n  return pcVar1;\n}\n\n", 
    "0010cfa0": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        FUN_0010af10();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = FUN_0010b460(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                            &DAT_0011238b);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = FUN_0010b990(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            FUN_0010b200(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = FUN_0010b990(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "00103970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00117e78)();\n  return iVar1;\n}\n\n", 
    "0010b4b0": "\nint FUN_0010b4b0(long param_1,long param_2,int param_3,char *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  uint uVar7;\n  long in_FS_OFFSET;\n  long local_d8;\n  long local_d0;\n  long local_40;\n  \n  uVar7 = *(uint *)(param_1 + 0x48);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar4 = param_3;\n  if ((((param_4 == (char *)0x0) || (cVar1 = *param_4, cVar1 != '.')) || (param_4[1] != '.')) ||\n     (param_4[2] != '\\0')) {\n    if ((uVar7 & 4) == 0) {\n      if (param_3 < 0) {\n        bVar2 = 0;\nLAB_0010b5c7:\n        iVar4 = FUN_0010b460(*(undefined4 *)(param_1 + 0x2c),uVar7,param_4);\n        if (iVar4 < 0) {\n          iVar3 = -1;\n          goto LAB_0010b550;\n        }\n        uVar7 = *(uint *)(param_1 + 0x48);\n      }\n      else {\n        bVar2 = 0;\n      }\n      iVar3 = param_3;\n      if ((uVar7 & 2) == 0) {\n        if (param_4 != (char *)0x0) {\n          cVar1 = *param_4;\nLAB_0010b521:\n          if (((cVar1 == '.') && (param_4[1] == '.')) && (iVar3 = param_3, param_4[2] == '\\0'))\n          goto LAB_0010b600;\n        }\nLAB_0010b52a:\n        if ((uVar7 & 0x200) != 0) {\n          iVar3 = 0;\n          FUN_0010b200(param_1,iVar4,bVar2 ^ 1);\n          goto LAB_0010b550;\n        }\n        iVar3 = fchdir(iVar4);\n      }\n      else {\nLAB_0010b600:\n        iVar5 = FUN_001102e0(iVar4,&local_d8);\n        param_3 = iVar3;\n        if (iVar5 == 0) {\n          if ((*(long *)(param_2 + 0x78) == local_d8) && (*(long *)(param_2 + 0x80) == local_d0)) {\n            uVar7 = *(uint *)(param_1 + 0x48);\n            goto LAB_0010b52a;\n          }\n          piVar6 = __errno_location();\n          *piVar6 = 2;\n        }\n        iVar3 = -1;\n      }\n      if (param_3 < 0) {\n        piVar6 = __errno_location();\n        iVar5 = *piVar6;\n        close(iVar4);\n        *piVar6 = iVar5;\n      }\n      goto LAB_0010b550;\n    }\n  }\n  else if ((uVar7 & 4) == 0) {\n    if (param_3 < 0) {\n      if ((uVar7 & 0x200) == 0) {\nLAB_0010b6d8:\n        bVar2 = 1;\n        goto LAB_0010b5c7;\n      }\n      bVar2 = FUN_0010d9c0(param_1 + 0x60);\n      if (bVar2 != 0) goto LAB_0010b5c7;\n      iVar3 = FUN_0010da10(param_1 + 0x60);\n      uVar7 = *(uint *)(param_1 + 0x48);\n      if (iVar3 < 0) goto LAB_0010b6d8;\n      bVar2 = 1;\n      param_3 = iVar3;\n      iVar4 = iVar3;\n      if ((uVar7 & 2) != 0) goto LAB_0010b600;\n      goto LAB_0010b52a;\n    }\n    bVar2 = 1;\n    iVar3 = param_3;\n    if ((uVar7 & 2) == 0) goto LAB_0010b521;\n    goto LAB_0010b600;\n  }\n  if (((uVar7 & 0x200) == 0) || (param_3 < 0)) {\n    iVar3 = 0;\n  }\n  else {\n    iVar3 = 0;\n    close(param_3);\n  }\nLAB_0010b550:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "00109380": "\nundefined8 FUN_00109380(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00118200;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00107e80(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_0010a780(lVar3 + 1);\n  FUN_00107e80(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00109260": "\nuint FUN_00109260(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00118200;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "001040c0": "\nvoid thunk_FUN_00104040(void)\n\n{\n  FUN_00104040();\n  return;\n}\n\n", 
    "0010d380": "\nchar * FUN_0010d380(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n", 
    "00119188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00119068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103720": "\nvoid context_new(void)\n\n{\n  (*(code *)PTR_context_new_00117d50)();\n  return;\n}\n\n", 
    "00103840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00117de0)();\n  return pvVar1;\n}\n\n", 
    "00119180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00117fb8)();\n  return;\n}\n\n", 
    "00119060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}