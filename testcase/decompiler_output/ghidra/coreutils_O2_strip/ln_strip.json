{
    "001140c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108d80": "\nvoid FUN_00108d80(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106e80(auStack_68);\n  FUN_001087f0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001141e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010aa90": "\nbool FUN_0010aa90(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00109d50": "\nvoid FUN_00109d50(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00109cc0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010a5d0": "\nlong FUN_0010a5d0(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "0010a5c0": "\nvoid FUN_0010a5c0(void)\n\n{\n  FUN_00103f10(1);\n  return;\n}\n\n", 
    "001089d0": "\nundefined4 FUN_001089d0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00113260;\n  }\n  return *param_1;\n}\n\n", 
    "00109350": "\nbool FUN_00109350(undefined4 param_1,undefined8 param_2,undefined4 param_3,undefined8 param_4)\n\n{\n  int iVar1;\n  void *pvVar2;\n  void *__s2;\n  size_t __n;\n  size_t sVar3;\n  int *piVar4;\n  bool bVar5;\n  long in_FS_OFFSET;\n  long local_168;\n  long local_160;\n  long local_d8;\n  long local_d0;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  pvVar2 = (void *)FUN_001057d0(param_2);\n  __s2 = (void *)FUN_001057d0(param_4);\n  __n = FUN_00105830(pvVar2);\n  sVar3 = FUN_00105830(__s2);\n  bVar5 = false;\n  if (__n == sVar3) {\n    iVar1 = memcmp(pvVar2,__s2,__n);\n    if (iVar1 == 0) {\n      pvVar2 = (void *)FUN_00105700(param_2);\n      iVar1 = FUN_0010bd30(param_1,pvVar2,&local_168,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n        error(1,*piVar4,&DAT_0010ddd7,pvVar2);\n      }\n      free(pvVar2);\n      pvVar2 = (void *)FUN_00105700(param_4);\n      iVar1 = FUN_0010bd30(param_3,pvVar2,&local_d8,0x100);\n      if (iVar1 != 0) {\n        piVar4 = __errno_location();\n        error(1,*piVar4,&DAT_0010ddd7,pvVar2);\n      }\n      bVar5 = local_160 == local_d0 && local_168 == local_d8;\n      free(pvVar2);\n    }\n    else {\n      bVar5 = false;\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001030a0": "\nvoid FUN_001030a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00112fd8)\n            (FUN_00102ac0,unaff_retaddr,&stack0x00000008,FUN_0010bc50,FUN_0010bcc0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001042b0": "\nint FUN_001042b0(char *param_1,int param_2,char *param_3,char param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  char *__old;\n  long in_FS_OFFSET;\n  char *local_158;\n  int local_150;\n  char local_148 [264];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = symlinkat(param_1,param_2,param_3);\n  if ((param_4 != '\\x01') || (iVar1 == 0)) goto LAB_00104302;\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x11) goto LAB_00104302;\n  __old = (char *)FUN_001040c0(param_3,local_148);\n  if (__old == (char *)0x0) {\n    iVar1 = -1;\n    goto LAB_00104302;\n  }\n  local_158 = param_1;\n  local_150 = param_2;\n  iVar1 = FUN_00109610(__old,0,&local_158,FUN_00104120,6);\n  if (iVar1 == 0) {\n    iVar1 = renameat(param_2,__old,param_2,param_3);\n    if (iVar1 != 0) {\n      iVar1 = *piVar2;\n      unlinkat(param_2,__old,0);\n      goto LAB_00104375;\n    }\n    if (__old != local_148) {\n      free(__old);\n    }\n  }\n  else {\n    iVar1 = *piVar2;\nLAB_00104375:\n    if (__old != local_148) {\n      free(__old);\n    }\n    if (iVar1 != 0) {\n      *piVar2 = iVar1;\n      iVar1 = -1;\n      goto LAB_00104302;\n    }\n  }\n  iVar1 = 1;\nLAB_00104302:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_00112e10)();\n  return iVar1;\n}\n\n", 
    "001140c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint linkat(int __fromfd,char *__from,int __tofd,char *__to,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_mempcpy_00112f30)();\n  return pvVar1;\n}\n\n", 
    "00102820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rpmatch(char *__response)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_rpmatch_00112ea0)();\n  return iVar1;\n}\n\n", 
    "0010ada0": "\nundefined8 FUN_0010ada0(void)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = FUN_0010b410();\n  if (lVar1 != 0) {\n    uVar2 = FUN_0010ad70(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "001140d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105fe0": "\nbool FUN_00105fe0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_00106000:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_00106000;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "001141f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bb90": "\nFILE * FUN_0010bb90(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_0010bc30(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_0010bb00(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_0010bb00(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "001141f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001031b0": "\nvoid FUN_001031b0(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001044e0": "\nuint FUN_001044e0(long param_1,long param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  undefined8 uVar6;\n  char *pcVar7;\n  char *pcVar8;\n  undefined8 local_48;\n  undefined8 local_40 [2];\n  \n  local_48 = param_4;\n  local_40[0] = param_3;\n  iVar2 = FUN_001043f0(param_2,param_1);\n  uVar3 = 0;\n  if (iVar2 != 0) {\n    pcVar7 = (char *)(param_2 + iVar2);\n    pcVar8 = (char *)(param_1 + iVar2);\n    cVar1 = *pcVar7;\n    if (cVar1 == '/') {\n      cVar1 = pcVar7[1];\n      pcVar7 = pcVar7 + 1;\n    }\n    pcVar8 = pcVar8 + (*pcVar8 == '/');\n    if (cVar1 == '\\0') {\n      if (*pcVar8 == '\\0') {\n        pcVar8 = \".\";\n      }\n      uVar3 = FUN_00104460(pcVar8,local_40,&local_48);\n    }\n    else {\n      uVar3 = FUN_00104460(&DAT_0010d082,local_40,&local_48);\n      cVar1 = *pcVar7;\n      while (cVar1 != '\\0') {\n        while (cVar1 != '/') {\n          cVar1 = pcVar7[1];\n          pcVar7 = pcVar7 + 1;\n          if (cVar1 == '\\0') goto LAB_001045e8;\n        }\n        pcVar7 = pcVar7 + 1;\n        uVar4 = FUN_00104460(&DAT_0010d081,local_40,&local_48);\n        uVar3 = uVar3 | uVar4;\n        cVar1 = *pcVar7;\n      }\nLAB_001045e8:\n      if (*pcVar8 != '\\0') {\n        uVar4 = FUN_00104460(&DAT_0010d236,local_40,&local_48);\n        uVar5 = FUN_00104460(pcVar8,local_40,&local_48);\n        uVar3 = uVar3 | uVar4 | uVar5;\n      }\n    }\n    if ((char)uVar3 != '\\0') {\n      uVar6 = dcgettext(0,\"generating relative path\",5);\n      error(0,0x24,&DAT_0010ddd7,uVar6);\n    }\n    uVar3 = uVar3 ^ 1;\n  }\n  return uVar3;\n}\n\n", 
    "0010a090": "\nvoid FUN_0010a090(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0010a060(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dirfd_00112e98)();\n  return iVar1;\n}\n\n", 
    "001140d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_00112f28)();\n  return iVar1;\n}\n\n", 
    "001140a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102970": "\nvoid __explicit_bzero_chk(void)\n\n{\n  (*(code *)PTR___explicit_bzero_chk_00112f48)();\n  return;\n}\n\n", 
    "00106da0": "\nvoid FUN_00106da0(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n", 
    "00106fe0": "\nundefined8 FUN_00106fe0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106f50(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010aa70": "\nulong FUN_0010aa70(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001043f0": "\nint FUN_001043f0(char *param_1,char *param_2)\n\n{\n  char *pcVar1;\n  char cVar2;\n  char cVar3;\n  int iVar4;\n  int iVar5;\n  \n  iVar5 = 0;\n  if ((param_1[1] == '/') == (param_2[1] == '/')) {\n    iVar4 = 0;\n    cVar2 = *param_1;\n    while (cVar2 != '\\0') {\n      cVar3 = *param_2;\n      if ((cVar3 != cVar2) || (cVar3 == '\\0')) {\n        if (cVar2 != '/') {\n          return iVar5;\n        }\n        if (cVar3 != '\\0') {\n          return iVar5;\n        }\n        goto LAB_0010441b;\n      }\n      iVar4 = iVar4 + 1;\n      if (cVar2 == '/') {\n        iVar5 = iVar4;\n      }\n      pcVar1 = param_1 + 1;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n      cVar2 = *pcVar1;\n    }\n    if ((*param_2 == '\\0') || (*param_2 == '/')) {\nLAB_0010441b:\n      iVar5 = iVar4;\n    }\n  }\n  return iVar5;\n}\n\n", 
    "001031e0": "\nvoid FUN_001031e0(void)\n\n{\n  char *pcVar1;\n  FILE *pFVar2;\n  \n  pFVar2 = stdout;\n  pcVar1 = (char *)dcgettext(0,\n                             \"\\nThe backup suffix is \\'~\\', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\\nThe version control method may be selected via the --backup option or through\\nthe VERSION_CONTROL environment variable.  Here are the values:\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar1,pFVar2);\n  pFVar2 = stdout;\n  pcVar1 = (char *)dcgettext(0,\n                             \"  none, off       never make backups (even if --backup is given)\\n  numbered, t     make numbered backups\\n  existing, nil   numbered if numbered backups exist, simple otherwise\\n  simple, never   always make simple backups\\n\"\n                             ,5);\n  fputs_unlocked(pcVar1,pFVar2);\n  return;\n}\n\n", 
    "001089f0": "\nvoid FUN_001089f0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00113260;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010b030": "\nvoid FUN_0010b030(FILE **param_1,void *param_2,size_t param_3)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  int iVar5;\n  \n  piVar3 = __errno_location();\n  while( true ) {\n    sVar4 = fread_unlocked(param_2,1,param_3,*param_1);\n    iVar5 = *piVar3;\n    param_2 = (void *)((long)param_2 + sVar4);\n    param_3 = param_3 - sVar4;\n    if (param_3 == 0) break;\n    iVar2 = ferror_unlocked(*param_1);\n    pFVar1 = param_1[2];\n    if (iVar2 == 0) {\n      iVar5 = 0;\n    }\n    *piVar3 = iVar5;\n    (*(code *)param_1[1])(pFVar1);\n  }\n  return;\n}\n\n", 
    "001140a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a060": "\nvoid FUN_0010a060(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00109e90(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00102960": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00112f40)();\n  return;\n}\n\n", 
    "00102840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00112eb0)();\n  return pvVar1;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00112e20)();\n  return _Var1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00112d90)();\n  return iVar1;\n}\n\n", 
    "001140b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010afc0": "\nvoid FUN_0010afc0(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = FUN_001090b0();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n    error(DAT_00113020,*piVar2,uVar3,uVar1);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001141d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108b30": "\nundefined8 FUN_00108b30(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00113260;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00107630(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00109e90(lVar3 + 1);\n  FUN_00107630(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00108a10": "\nuint FUN_00108a10(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00113260;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "0010a6e0": "\nvoid FUN_0010a6e0(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_001090a0(1,param_1);\n  uVar3 = FUN_00108d20(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "00107290": "\nundefined8\nFUN_00107290(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001071d0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001140b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a80": "\nundefined8 FUN_00106a80(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00106810(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102950": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00112f38)();\n  return pvVar1;\n}\n\n", 
    "00102830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong syscall(long __sysno,...)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_syscall_00112ea8)();\n  return lVar1;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00112e18)();\n  return pcVar1;\n}\n\n", 
    "001141a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107120": "\nundefined8\nFUN_00107120(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107070(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00108c20": "\nvoid FUN_00108c20(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108b30(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "0010aa50": "\nuint FUN_0010aa50(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00107360": "\nundefined8\nFUN_00107360(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107290(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010ac90": "\nbool FUN_0010ac90(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "001055a0": "\nvoid FUN_001055a0(undefined param_1)\n\n{\n  DAT_00113138 = param_1;\n  return;\n}\n\n", 
    "00109790": "\nvoid FUN_00109790(undefined8 param_1,undefined8 param_2,undefined4 param_3,int param_4)\n\n{\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if (param_4 == 1) {\n    FUN_00109610(param_1,param_2,local_c,FUN_001095e0);\n    return;\n  }\n  if (param_4 != 2) {\n    if (param_4 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! \\\"invalid KIND in __gen_tempname\\\"\",\"lib/tempname.c\",0x147,\"gen_tempname_len\"\n                   );\n    }\n    FUN_00109610(param_1,param_2,local_c,FUN_001095f0);\n    return;\n  }\n  FUN_00109610(param_1,param_2,local_c,FUN_00109560);\n  return;\n}\n\n", 
    "00102900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint linkat(int __fromfd,char *__from,int __tofd,char *__to,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_linkat_00112f10)();\n  return iVar1;\n}\n\n", 
    "00105b80": "\nbool FUN_00105b80(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "001141a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108f90": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108f90(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00113260;\n  uStack_60 = uRam0000000000113268;\n  local_38 = DAT_00113290;\n  local_58 = _DAT_00113270;\n  uStack_50 = uRam0000000000113278;\n  local_48 = _DAT_00113280;\n  uStack_40 = uRam0000000000113288;\n  FUN_00108a70(&local_68);\n  FUN_001087f0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f60": "\nvoid FUN_00109f60(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00109fbb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00109fbb:\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a0b0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00109ef0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00108c30": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108c30(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00113080;\n  if (1 < DAT_00113078) {\n    ppvVar2 = (void **)(PTR_DAT_00113080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00113080 + (ulong)(DAT_00113078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00113160) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00113098 = &DAT_00113160;\n    _DAT_00113090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00113090) {\n    free(__ptr_00);\n    PTR_DAT_00113080 = &DAT_00113090;\n  }\n  DAT_00113078 = 1;\n  return;\n}\n\n", 
    "0010ab80": "\nint FUN_0010ab80(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010a8f0": "\nlong FUN_0010a8f0(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "001057d0": "\nchar * FUN_001057d0(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "00109560": "\nint FUN_00109560(undefined8 param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  long in_FS_OFFSET;\n  undefined auStack_a8 [152];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_0010bd10(param_1,auStack_a8);\n  piVar2 = __errno_location();\n  if (iVar1 != 0) {\n    if (*piVar2 != 0x4b) {\n      iVar1 = -(uint)(*piVar2 != 2);\n      goto LAB_001095b3;\n    }\n  }\n  *piVar2 = 0x11;\n  iVar1 = -1;\nLAB_001095b3:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001141b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104dc0": "\nundefined4 FUN_00104dc0(long *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined4 uVar1;\n  long lVar2;\n  \n  lVar2 = *param_1;\n  if (lVar2 == 0) {\n    lVar2 = FUN_001063d0(7,0,FUN_00106ce0,FUN_00106d60,FUN_00106da0);\n    *param_1 = lVar2;\n    if (lVar2 == 0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a0b0(0);\n    }\n  }\n  uVar1 = FUN_00105930(lVar2,param_2,param_3);\n  if ((char)uVar1 == '\\0') {\n    FUN_001058a0(*param_1,param_2,param_3);\n  }\n  return uVar1;\n}\n\n", 
    "0010bd4c": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00102ac0": "\nbyte FUN_00102ac0(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  bool bVar2;\n  undefined *puVar3;\n  byte bVar4;\n  byte bVar5;\n  char cVar6;\n  int iVar7;\n  undefined8 uVar8;\n  void *__ptr;\n  undefined8 uVar9;\n  int *piVar10;\n  uint *puVar11;\n  undefined8 *puVar12;\n  undefined8 *puVar13;\n  char *pcVar14;\n  undefined *puVar15;\n  long in_FS_OFFSET;\n  undefined *local_f8;\n  undefined *local_f0;\n  undefined8 local_e0;\n  undefined local_d8 [24];\n  uint local_c0;\n  long local_40;\n  \n  bVar2 = false;\n  bVar1 = false;\n  puVar11 = &switchD_00102bbe::switchdataD_0010cfb4;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106dc0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_0010bcd0(FUN_00105480);\n  DAT_00113118 = 0;\n  DAT_00113119 = 0;\n  DAT_0011311b = 0;\n  DAT_0011311a = '\\0';\n  DAT_0011311e = '\\0';\n  local_f8 = (undefined *)0x0;\n  local_f0 = (undefined *)0x0;\n  puVar15 = (undefined *)0x0;\n  puVar3 = local_f8;\nLAB_00102b75:\n  local_f8 = puVar3;\n  iVar7 = getopt_long(param_1,param_2,\"bdfinrst:vFLPS:T\",&PTR_s_backup_00112880,0);\n  if (iVar7 != -1) {\n    if (0x76 < iVar7) goto switchD_00102bbe_caseD_47;\n    if (iVar7 < 0x46) {\n      if (iVar7 == -0x83) {\n        FUN_00109d50(stdout,&DAT_0010ce32,\"GNU coreutils\",PTR_DAT_00113018,\"Mike Parker\",\n                     \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar7 != -0x82) goto switchD_00102bbe_caseD_47;\n      FUN_00103f10(0);\n      goto LAB_00102d42;\n    }\n    puVar3 = local_f8;\n    switch(iVar7) {\n    case 0x46:\n    case 100:\n      DAT_00113118 = 1;\n      goto LAB_00102b75;\n    default:\n      goto switchD_00102bbe_caseD_47;\n    case 0x4c:\n      DAT_0011311c = 1;\n      goto LAB_00102b75;\n    case 0x50:\n      DAT_0011311c = 0;\n      goto LAB_00102b75;\n    case 0x53:\n      local_f0 = optarg;\n      bVar2 = true;\n      goto LAB_00102b75;\n    case 0x54:\n      bVar1 = true;\n      goto LAB_00102b75;\n    case 0x62:\n      bVar2 = true;\n      puVar3 = optarg;\n      if (optarg == (undefined *)0x0) {\n        puVar3 = local_f8;\n      }\n      goto LAB_00102b75;\n    case 0x66:\n      DAT_0011311a = '\\x01';\n      DAT_0011311b = 0;\n      goto LAB_00102b75;\n    case 0x69:\n      DAT_0011311a = '\\0';\n      DAT_0011311b = 1;\n      goto LAB_00102b75;\n    case 0x6e:\n      DAT_00113010 = 0;\n      goto LAB_00102b75;\n    case 0x72:\n      DAT_0011311d = '\\x01';\n      goto LAB_00102b75;\n    case 0x73:\n      goto switchD_00102bbe_caseD_73;\n    case 0x74:\n      if (puVar15 != (undefined *)0x0) goto LAB_00103000;\n      iVar7 = FUN_0010bcf0(optarg,local_d8);\n      puVar15 = optarg;\n      if (iVar7 != 0) goto LAB_00102f99;\n      if ((local_c0 & 0xf000) == 0x4000) goto LAB_00102b75;\n      param_2 = (undefined8 *)FUN_00108df0(4,optarg);\n      uVar8 = dcgettext(0,\"target %s is not a directory\",5);\n      error(1,0,uVar8,param_2);\nswitchD_00102bbe_caseD_73:\n      DAT_0011311e = '\\x01';\n      goto LAB_00102b75;\n    case 0x76:\n      goto switchD_00102bbe_caseD_76;\n    }\n  }\nLAB_00102d42:\n  param_1 = param_1 - optind;\n  puVar11 = (uint *)(param_2 + optind);\n  if (param_1 < 1) {\nLAB_00103024:\n    uVar8 = dcgettext(0,\"missing file operand\",5);\n    error(0,0,uVar8);\nswitchD_00102bbe_caseD_47:\n    FUN_00103f10(1);\n  }\n  else {\n    if (bVar1) {\n      if (puVar15 == (undefined *)0x0) {\n        if (param_1 == 2) {\nLAB_00102e07:\n          param_1 = 2;\n          puVar15 = (undefined *)0x0;\n          goto LAB_00102d69;\n        }\n        if (param_1 == 1) goto LAB_00103073;\n        uVar8 = FUN_00108df0(4,*(undefined8 *)((long)puVar11 + 0x10));\n        pcVar14 = \"extra operand %s\";\n      }\n      else {\n        uVar8 = dcgettext(0,\"cannot combine --target-directory and --no-target-directory\",5);\n        error(1,0,uVar8);\nLAB_00103073:\n        uVar8 = FUN_00108df0(4,*(undefined8 *)puVar11);\n        pcVar14 = \"missing destination file operand after %s\";\n      }\n      uVar9 = dcgettext(0,pcVar14,5);\n      error(0,0,uVar9,uVar8);\n      goto switchD_00102bbe_caseD_47;\n    }\n    if ((puVar15 == (undefined *)0x0) && (puVar15 = &DAT_0010d083, param_1 != 1)) {\n      cVar6 = FUN_00103230(*(undefined8 *)((long)puVar11 + ((long)param_1 + -1) * 8));\n      if (cVar6 != '\\0') {\n        param_1 = param_1 + -1;\n        puVar15 = *(undefined **)((long)puVar11 + (long)param_1 * 8);\n        goto LAB_00102d69;\n      }\n      if (param_1 == 2) goto LAB_00102e07;\n      uVar8 = FUN_00108df0(4,*(undefined8 *)((long)puVar11 + ((long)param_1 + -1) * 8));\n      uVar9 = dcgettext(0,\"target %s is not a directory\",5);\n      error(1,0,uVar9,uVar8);\nLAB_00102f99:\n      uVar8 = FUN_00108df0(4,optarg);\n      uVar9 = dcgettext(0,\"failed to access %s\",5);\n      piVar10 = __errno_location();\n      error(1,*piVar10,uVar9,uVar8);\nLAB_00102fdc:\n      uVar8 = dcgettext(0,\"cannot do --relative without --symbolic\",5);\n      error(1,0,uVar8);\nLAB_00103000:\n      uVar8 = dcgettext(0,\"multiple target directories specified\",5);\n      error(1,0,uVar8);\n      goto LAB_00103024;\n    }\nLAB_00102d69:\n    iVar7 = 0;\n    if (bVar2) {\n      uVar8 = dcgettext(0,\"backup type\",5);\n      iVar7 = FUN_00104d80(uVar8,local_f8);\n    }\n    DAT_00113120 = iVar7;\n    FUN_001049f0(local_f0);\n    if ((DAT_0011311d != '\\0') && (DAT_0011311e == '\\0')) goto LAB_00102fdc;\n    if (puVar15 != (undefined *)0x0) {\n      if ((((param_1 != 1) && (DAT_0011311a != '\\0')) && (DAT_0011311e == '\\0')) &&\n         ((DAT_00113120 != 3 &&\n          (DAT_00113110 = FUN_001063d0(0x3d,0,FUN_00106ce0,FUN_00106d30,FUN_00106da0),\n          DAT_00113110 == 0)))) {\n                    /* WARNING: Subroutine does not return */\n        FUN_0010a0b0();\n      }\n      bVar5 = 1;\n      puVar12 = (undefined8 *)puVar11;\n      do {\n        puVar13 = puVar12 + 1;\n        uVar8 = FUN_001057d0(*puVar12);\n        __ptr = (void *)FUN_00105990(puVar15,uVar8,&local_e0);\n        FUN_00105860(local_e0);\n        bVar4 = FUN_00103470(*puVar12,__ptr);\n        bVar5 = bVar5 & bVar4;\n        free(__ptr);\n        puVar12 = puVar13;\n      } while (puVar13 != (undefined8 *)((long)puVar11 + ((ulong)(param_1 - 1) + 1) * 8));\n      goto LAB_00102e73;\n    }\n  }\n  bVar5 = FUN_00103470(*(undefined8 *)puVar11,*(undefined8 *)((long)puVar11 + 8));\nLAB_00102e73:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar5 ^ 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\nswitchD_00102bbe_caseD_76:\n  DAT_00113119 = 1;\n  goto LAB_00102b75;\n}\n\n", 
    "001142a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108d20": "\nvoid FUN_00108d20(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106e80(auStack_58);\n  FUN_001087f0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f30": "\nvoid FUN_00109f30(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00109ef0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "0010ab50": "\nulong FUN_0010ab50(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00106050": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00106050(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = FUN_00105f70();\n  uVar2 = FUN_00105f50();\n  uVar3 = FUN_00105f60();\n  uVar4 = FUN_00105f80();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_0010d1f0) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "00102aad": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106290": "\nvoid FUN_00106290(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "00106170": "\nlong FUN_00106170(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00105b90();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "0010a9e0": "\nuint FUN_0010a9e0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "00102920": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00112f20)();\n  return;\n}\n\n", 
    "00109530": "\nvoid FUN_00109530(void)\n\n{\n  FUN_0010bd30();\n  return;\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00112e90)();\n  return iVar1;\n}\n\n", 
    "0010a020": "\nvoid FUN_0010a020(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "001142a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001142b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bc50": "\nvoid FUN_0010bc50(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010aa40": "\nbool FUN_0010aa40(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "001055b0": "\nvoid FUN_001055b0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0010ac20(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00113138 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00113140 == 0) {\n        error(0,*piVar2,&DAT_0010ddd7,uVar3);\n      }\n      else {\n        uVar4 = FUN_00108ed0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00105638;\n    }\n  }\n  iVar1 = FUN_0010ac20(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00105638:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00113020);\n}\n\n", 
    "0010a9f0": "\nulong FUN_0010a9f0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00109540": "\nulong FUN_00109540(char *param_1,ulong param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strspn(param_1,\"X\");\n  return sVar1 & 0xffffffffffffff00 | (ulong)(param_2 <= sVar1);\n}\n\n", 
    "00102aa8": "\nvoid switchD_001098f8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00112f18)();\n  return pcVar1;\n}\n\n", 
    "0010a390": "\nlong FUN_0010a390(uint *param_1)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if ((*(ulong *)(param_1 + 10) < *(ulong *)(param_1 + 8) ||\n       *(ulong *)(param_1 + 10) == *(ulong *)(param_1 + 8)) &&\n     (lVar1 = *(long *)(param_1 + 4) - *(long *)(param_1 + 2), (*param_1 & 0x100) != 0)) {\n    lVar1 = lVar1 + (*(long *)(param_1 + 0x16) - *(long *)(param_1 + 0x12));\n  }\n  return lVar1;\n}\n\n", 
    "00102aa3": "\nvoid FUN_00102aa3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105b90": "\nlong FUN_00105b90(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010ad70": "\nvoid FUN_0010ad70(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00109e90(0x18);\n  *puVar1 = param_1;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  return;\n}\n\n", 
    "00108e20": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108e20(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00113260;\n  uStack_40 = uRam0000000000113268;\n  local_38 = _DAT_00113270;\n  uStack_30 = uRam0000000000113278;\n  local_28 = _DAT_00113280;\n  uStack_20 = uRam0000000000113288;\n  local_18 = DAT_00113290;\n  FUN_00108a10(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_001087f0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106590": "\nvoid FUN_00106590(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010663c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_001065ff;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_001065ff:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010663c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  free(param_1);\n  return;\n}\n\n", 
    "00108d00": "\nvoid FUN_00108d00(undefined8 param_1)\n\n{\n  FUN_00108cd0(0,param_1);\n  return;\n}\n\n", 
    "0010bb00": "\nint FUN_0010bb00(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010bb6f;\n    }\n    iVar1 = FUN_0010a350(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010bb6f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_readlink_00112d88)();\n  return sVar1;\n}\n\n", 
    "0010a9c0": "\nuint FUN_0010a9c0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00104a50": "\nvoid * FUN_00104a50(void *param_1,int param_2,char param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  char *__s;\n  size_t sVar3;\n  size_t sVar4;\n  ulong __n;\n  int *piVar5;\n  void *pvVar6;\n  ulong uVar7;\n  long lVar8;\n  long in_FS_OFFSET;\n  void *local_50;\n  DIR *local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s = (char *)FUN_001057d0();\n  sVar3 = strlen(__s);\n  lVar8 = (long)__s - (long)param_1;\n  lVar1 = lVar8 + sVar3;\n  if (DAT_00113128 == (char *)0x0) {\n    FUN_001049f0();\n  }\n  sVar4 = strlen(DAT_00113128);\n  sVar3 = lVar1 + 1;\n  __n = sVar4 + 1;\n  uVar7 = 9;\n  if (8 < __n) {\n    uVar7 = __n;\n  }\n  local_50 = malloc(uVar7 + sVar3);\n  pvVar6 = local_50;\n  if (local_50 == (void *)0x0) {\nLAB_00104bf8:\n    if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    return pvVar6;\n  }\n  local_48 = (DIR *)0x0;\n  memcpy(local_50,param_1,sVar3);\n  if (param_2 == 1) goto LAB_00104bac;\nLAB_00104b06:\n  iVar2 = FUN_00104650(&local_50,uVar7 + sVar3,lVar1,lVar8,&local_48);\n  if (iVar2 == 2) {\n    if (param_2 == 2) {\n      param_2 = 1;\n      memcpy((void *)((long)local_50 + lVar1),DAT_00113128,__n);\n    }\n    FUN_00104920(local_50,lVar1);\n  }\n  else {\n    if (iVar2 == 3) {\n      free(local_50);\n      piVar5 = __errno_location();\n      *piVar5 = 0xc;\n      pvVar6 = (void *)0x0;\n      goto LAB_00104bf8;\n    }\n    if (iVar2 == 1) {\n      FUN_00104920(local_50,lVar1);\n    }\n  }\n  do {\n    if (param_3 == '\\0') {\nLAB_00104be5:\n      pvVar6 = local_50;\n      if (local_48 != (DIR *)0x0) {\n        closedir(local_48);\n        pvVar6 = local_50;\n      }\n      goto LAB_00104bf8;\n    }\n    if ((local_48 == (DIR *)0x0) || (iVar2 = dirfd(local_48), iVar2 < 0)) {\n      iVar2 = -100;\n      lVar8 = 0;\n    }\n    iVar2 = renameat2(0xffffff9c,param_1,iVar2,lVar8 + (long)local_50,param_2 != 1);\n    if (iVar2 == 0) goto LAB_00104be5;\n    piVar5 = __errno_location();\n    iVar2 = *piVar5;\n    if (iVar2 != 0x11) {\n      if (local_48 != (DIR *)0x0) {\n        closedir(local_48);\n      }\n      free(local_50);\n      *piVar5 = iVar2;\n      pvVar6 = (void *)0x0;\n      goto LAB_00104bf8;\n    }\n    memcpy(local_50,param_1,sVar3);\n    if (param_2 != 1) goto LAB_00104b06;\nLAB_00104bac:\n    memcpy((void *)((long)local_50 + lVar1),DAT_00113128,__n);\n  } while( true );\n}\n\n", 
    "0010b570": "\nundefined8 FUN_0010b570(long param_1,uint param_2)\n\n{\n  return *(undefined8 *)(param_1 + (ulong)(param_2 & 0x7f8));\n}\n\n", 
    "0010a000": "\nvoid FUN_0010a000(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00109e90();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010a120": "\nbool FUN_0010a120(void)\n\n{\n  int iVar1;\n  __ssize_t _Var2;\n  bool bVar3;\n  long in_FS_OFFSET;\n  char *local_20;\n  size_t local_18;\n  long local_10;\n  \n  bVar3 = false;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_20 = (char *)0x0;\n  local_18 = 0;\n  _Var2 = getline(&local_20,&local_18,stdin);\n  if (0 < _Var2) {\n    if (local_20[_Var2 + -1] == '\\n') {\n      local_20[_Var2 + -1] = '\\0';\n    }\n    iVar1 = rpmatch(local_20);\n    bVar3 = 0 < iVar1;\n  }\n  free(local_20);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102a9e": "\nvoid FUN_00102a9e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106220": "\nlong FUN_00106220(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00105b90();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "00103190": "\nuint FUN_00103190(uint param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if (param_1 < 0x29) {\n    uVar1 = (uint)(0x11000100004 >> ((byte)param_1 & 0x3f)) & 1;\n  }\n  return uVar1;\n}\n\n", 
    "00108d10": "\nvoid FUN_00108d10(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108cf0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00109e00": "\nvoid FUN_00109e00(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010ab40": "\nbool FUN_0010ab40(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010bc30": "\nvoid FUN_0010bc30(undefined8 param_1)\n\n{\n  FUN_0010a1c0(param_1,0,3);\n  return;\n}\n\n", 
    "0010aa20": "\nbool FUN_0010aa20(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlinkat(int __fd,char *__name,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unlinkat_00112d80)();\n  return iVar1;\n}\n\n", 
    "0010a9d0": "\nuint FUN_0010a9d0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "0010b580": "\nvoid FUN_0010b580(long *param_1,long *param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long *plVar6;\n  long *plVar7;\n  undefined auVar8 [16];\n  undefined auVar9 [16];\n  \n  plVar6 = param_1 + 0x80;\n  lVar4 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar4 + 1;\n  lVar4 = lVar4 + 1 + param_1[0x101];\n  plVar5 = param_1;\n  plVar7 = param_2;\n  do {\n    uVar3 = param_1[0x80] + ~(uVar3 ^ uVar3 << 0x15);\n    lVar1 = *param_1;\n    auVar8 = FUN_0010b570(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = FUN_0010b570();\n    lVar1 = FUN_0010b560(lVar4 + lVar1);\n    *param_2 = lVar1;\n    auVar8 = FUN_0010b560(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + 0x408);\n    auVar8 = FUN_0010b570(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_0010b570();\n    auVar8 = FUN_0010b560(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    param_2[1] = SUB168(auVar8,0);\n    uVar3 = *(long *)(lVar4 + 0x410) + (uVar3 ^ uVar3 << 0xc);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = FUN_0010b570(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = FUN_0010b570();\n    lVar1 = FUN_0010b560(lVar1 + lVar4);\n    param_2[2] = lVar1;\n    auVar8 = FUN_0010b560(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + 0x418);\n    auVar8 = FUN_0010b570(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_0010b570();\n    auVar8 = FUN_0010b560(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    param_2[3] = lVar4;\n    param_2 = param_2 + 4;\n  } while (param_1 != plVar6);\n  plVar7 = plVar7 + 0x80;\n  plVar6 = plVar5 + 0x100;\n  do {\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + param_1[-0x80];\n    lVar1 = *param_1;\n    auVar8 = FUN_0010b570(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = FUN_0010b570();\n    lVar1 = FUN_0010b560(lVar4 + lVar1);\n    *plVar7 = lVar1;\n    auVar8 = FUN_0010b560(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + -0x3f8);\n    auVar8 = FUN_0010b570(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_0010b570();\n    auVar8 = FUN_0010b560(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    plVar7[1] = SUB168(auVar8,0);\n    uVar3 = (uVar3 ^ uVar3 << 0xc) + *(long *)(lVar4 + -0x3f0);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = FUN_0010b570(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = FUN_0010b570();\n    lVar1 = FUN_0010b560(lVar1 + lVar4);\n    plVar7[2] = lVar1;\n    auVar8 = FUN_0010b560(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + -1000);\n    auVar8 = FUN_0010b570(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_0010b570();\n    auVar8 = FUN_0010b560(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    plVar7[3] = lVar4;\n    plVar7 = plVar7 + 4;\n  } while (param_1 != plVar6);\n  plVar5[0x100] = uVar3;\n  plVar5[0x101] = lVar4;\n  return;\n}\n\n", 
    "00109520": "\nvoid FUN_00109520(void)\n\n{\n  FUN_0010bd30();\n  return;\n}\n\n", 
    "0010af90": "\nvoid FUN_0010af90(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00109e90(0x1038);\n  *puVar1 = param_1;\n  puVar1[1] = FUN_0010afc0;\n  puVar1[2] = param_2;\n  return;\n}\n\n", 
    "00108e00": "\nvoid FUN_00108e00(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108d80(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001033a0": "\nvoid * FUN_001033a0(undefined8 param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  void *pvVar2;\n  void *__ptr;\n  void *__ptr_00;\n  void *__ptr_01;\n  \n  pvVar2 = (void *)FUN_00105700(param_2);\n  __ptr = (void *)FUN_00104e50(pvVar2,2);\n  __ptr_00 = (void *)FUN_00104e50(param_1,2);\n  if ((__ptr != (void *)0x0) && (__ptr_00 != (void *)0x0)) {\n    __ptr_01 = (void *)FUN_00109e90(0x1000);\n    cVar1 = FUN_001044e0(__ptr_00,__ptr,__ptr_01,0x1000);\n    if (cVar1 != '\\0') {\n      free(pvVar2);\n      free(__ptr);\n      free(__ptr_00);\n      if (__ptr_01 != (void *)0x0) {\n        return __ptr_01;\n      }\n      goto LAB_001033f9;\n    }\n    free(__ptr_01);\n  }\n  free(pvVar2);\n  free(__ptr);\n  free(__ptr_00);\nLAB_001033f9:\n  pvVar2 = (void *)FUN_0010a090(param_1);\n  return pvVar2;\n}\n\n", 
    "0010bd10": "\nvoid FUN_0010bd10(char *param_1,stat *param_2)\n\n{\n  __lxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "0010a9a0": "\nvoid thunk_FUN_0010a960(void)\n\n{\n  FUN_0010a960();\n  return;\n}\n\n", 
    "00114088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * opendir(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105b60": "\nulong FUN_00105b60(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = thunk_FUN_0010a960(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "00109850": "\nundefined8\nFUN_00109850(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010da32,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00109b19;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00109b19:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00109bbb;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00109bbb:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010996d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010996d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00109610": "\nint FUN_00109610(char *param_1,int param_2,undefined8 param_3,code *param_4,long param_5)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  long lVar8;\n  char *pcVar9;\n  char *pcVar10;\n  int local_40;\n  \n  piVar3 = __errno_location();\n  iVar7 = *piVar3;\n  sVar4 = strlen(param_1);\n  if ((ulong)(param_2 + param_5) <= sVar4) {\n    lVar8 = sVar4 - (param_2 + param_5);\n    cVar1 = FUN_00109540(param_1 + lVar8,param_5);\n    if (cVar1 != '\\0') {\n      lVar5 = FUN_0010ada0(0,param_5);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      local_40 = 0x3a2f8;\n      while( true ) {\n        pcVar9 = param_1 + lVar8;\n        if (param_5 != 0) {\n          do {\n            pcVar10 = pcVar9 + 1;\n            lVar6 = FUN_0010ade0(lVar5,0x3d);\n            *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar9 = pcVar10;\n          } while (param_1 + lVar8 + param_5 != pcVar10);\n        }\n        iVar2 = (*param_4)(param_1,param_3);\n        if (-1 < iVar2) break;\n        if (*piVar3 != 0x11) {\n          iVar2 = -1;\n          iVar7 = *piVar3;\n          goto LAB_00109736;\n        }\n        local_40 = local_40 + -1;\n        if (local_40 == 0) {\n          FUN_0010af50(lVar5);\n          *piVar3 = 0x11;\n          return -1;\n        }\n      }\n      *piVar3 = iVar7;\nLAB_00109736:\n      FUN_0010af50(lVar5);\n      *piVar3 = iVar7;\n      return iVar2;\n    }\n  }\n  *piVar3 = 0x16;\n  return -1;\n}\n\n", 
    "00114080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106360": "\nulong FUN_00106360(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "00107450": "\nundefined8\nFUN_00107450(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00107360(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "0010ab20": "\nbool FUN_0010ab20(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "0010bd30": "\nvoid FUN_0010bd30(int param_1,char *param_2,stat *param_3,int param_4)\n\n{\n  __fxstatat(1,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010ad60": "\nlong FUN_0010ad60(long param_1)\n\n{\n  return param_1 << 8;\n}\n\n", 
    "00114098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a9b0": "\nuint FUN_0010a9b0(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00106d60": "\nulong FUN_00106d60(char **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined4 extraout_var;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    iVar1 = strcmp(*param_1,*param_2);\n    return CONCAT44(extraout_var,iVar1) & 0xffffffffffffff00 | (ulong)(iVar1 == 0);\n  }\n  return 0;\n}\n\n", 
    "00114090": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106e80": "\nint * FUN_00106e80(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109500": "\nvoid FUN_00109500(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109350(0xffffff9c,param_1,0xffffff9c,param_2);\n  return;\n}\n\n", 
    "0010a350": "\nvoid FUN_0010a350(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010a330(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0010b560": "\nundefined8 FUN_0010b560(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "0010b410": "\nlong FUN_0010b410(long param_1,ulong param_2)\n\n{\n  FILE *__stream;\n  long lVar1;\n  size_t __n;\n  \n  if (param_2 == 0) {\n    lVar1 = FUN_0010af90(0,0);\n    return lVar1;\n  }\n  if (param_1 != 0) {\n    __stream = (FILE *)FUN_0010bb90(param_1,&DAT_0010de12);\n    if (__stream == (FILE *)0x0) {\n      lVar1 = 0;\n    }\n    else {\n      lVar1 = FUN_0010af90(__stream,param_1);\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      setvbuf(__stream,(char *)(lVar1 + 0x18),0,__n);\n    }\n    return lVar1;\n  }\n  lVar1 = FUN_0010af90(0,0);\n  *(undefined8 *)(lVar1 + 0x18) = 0;\n  FUN_0010b1d0(lVar1 + 0x20,param_2);\n  FUN_0010b850(lVar1 + 0x20);\n  return lVar1;\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00112d68)();\n  return;\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00112e88)();\n  return pvVar1;\n}\n\n", 
    "0010ad20": "\nchar * FUN_0010ad20(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106d10": "\nulong FUN_00106d10(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getuid_00112df8)();\n  return _Var1;\n}\n\n", 
    "00106f50": "\nundefined8 FUN_00106f50(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106ef0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00114068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105f80": "\nulong FUN_00105f80(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "00102a70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00112fc8)();\n  return ppuVar1;\n}\n\n", 
    "00109830": "\nvoid FUN_00109830(void)\n\n{\n  FUN_00109790();\n  return;\n}\n\n", 
    "0010a440": "\nsize_t FUN_0010a440(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010ac90(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114180": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001090e0": "\nulong renameat2(uint param_1,char *param_2,uint param_3,char *param_4,uint param_5)\n\n{\n  bool bVar1;\n  int iVar2;\n  uint uVar3;\n  ulong uVar4;\n  int *piVar5;\n  size_t sVar6;\n  size_t sVar7;\n  ulong uVar8;\n  long in_FS_OFFSET;\n  undefined local_168 [24];\n  uint local_150;\n  undefined local_d8 [24];\n  uint local_c0;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar4 = syscall(0x13c,(ulong)param_1,param_2,(ulong)param_3,param_4,(ulong)param_5);\n  uVar8 = uVar4 & 0xffffffff;\n  if (-1 < (int)uVar4) goto LAB_001091a8;\n  uVar8 = uVar4 & 0xffffffff;\n  piVar5 = __errno_location();\n  bVar1 = (*piVar5 - 0x16U & 0xffffffef) != 0 && *piVar5 != 0x5f;\n  if (bVar1) goto LAB_001091a8;\n  if (param_5 == 0) {\nLAB_001091e0:\n    sVar6 = strlen(param_2);\n    sVar7 = strlen(param_4);\n    if (((sVar6 != 0) && (sVar7 != 0)) &&\n       ((param_2[sVar6 - 1] == '/' || (param_4[sVar7 - 1] == '/')))) {\n      iVar2 = FUN_00109530(param_1,param_2,local_168);\n      if (iVar2 != 0) goto LAB_0010919f;\n      if (bVar1) {\n        if ((local_150 & 0xf000) != 0x4000) {\n          uVar3 = FUN_001090c0(2);\n          uVar8 = (ulong)uVar3;\n          goto LAB_001091a8;\n        }\n      }\n      else {\n        iVar2 = FUN_00109530(param_3,param_4,local_d8);\n        if (iVar2 == 0) {\n          if ((local_c0 & 0xf000) != 0x4000) {\n            uVar3 = FUN_001090c0(0x14);\n            uVar8 = (ulong)uVar3;\n            goto LAB_001091a8;\n          }\n          if ((local_150 & 0xf000) != 0x4000) {\n            uVar3 = FUN_001090c0(0x15);\n            uVar8 = (ulong)uVar3;\n            goto LAB_001091a8;\n          }\n        }\n        else if ((*piVar5 != 2) || ((local_150 & 0xf000) != 0x4000)) goto LAB_0010919f;\n      }\n    }\n    uVar3 = renameat(param_1,param_2,param_3,param_4);\n    uVar8 = (ulong)uVar3;\n  }\n  else {\n    if ((param_5 & 0xfffffffe) != 0) {\n      uVar3 = FUN_001090c0(0x5f);\n      uVar8 = (ulong)uVar3;\n      goto LAB_001091a8;\n    }\n    iVar2 = FUN_00109530(param_3,param_4,local_d8);\n    if ((iVar2 == 0) || (*piVar5 == 0x4b)) {\n      uVar3 = FUN_001090c0(0x11);\n      uVar8 = (ulong)uVar3;\n      goto LAB_001091a8;\n    }\n    if (*piVar5 == 2) {\n      bVar1 = true;\n      goto LAB_001091e0;\n    }\nLAB_0010919f:\n    uVar8 = 0xffffffff;\n  }\nLAB_001091a8:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar8;\n}\n\n", 
    "00107630": "\nulong FUN_00107630(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00107ab7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00107ad9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00108076;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00107a2f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00107ab7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00107a2f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00107500(&DAT_0010d259,param_5);\n      local_78 = (char *)FUN_00107500(&DAT_0010d249);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00107780:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00107fe0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00107f7b;\n          goto LAB_00107d6b;\n        default:\nswitchD_00107e90_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_0010a440(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00108268;\n              }\n              if (lVar10 == -2) goto joined_r0x0010867a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00107c50;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00108268;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_001079f1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00107f38;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00107f38;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00107f38:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00107c47;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00107c34;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00107c34:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00107958;\n          goto LAB_00107c47;\n        case 0x23:\n        case 0x7e:\nLAB_00107c2b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00107c34;\n          goto LAB_00107955;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00107e90_caseD_25;\n        case 0x27:\nswitchD_00107e90_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00107958;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010797b;\n          }\n          goto LAB_00107c50;\n        case 0x3f:\nswitchD_00107e90_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001085de_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00107958;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010797b;\n          }\n          goto LAB_00107c50;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00107888_caseD_5c;\n          if (!bVar20) {\nLAB_00107ec8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00107ee0;\n          }\n          goto LAB_00107c50;\n        case 0x7b:\n        case 0x7d:\nswitchD_00107e90_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00107c2b;\nLAB_00107955:\n          bVar23 = false;\n          goto LAB_00107958;\n        }\nLAB_00107d60:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00107d6b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00107978;\n          goto LAB_001078a0;\n        }\nLAB_00107da0:\n        bVar21 = false;\n        goto joined_r0x00107db1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00107fc0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00107888_caseD_0;\n          default:\n            goto switchD_00107e90_caseD_1;\n          case 7:\n            goto switchD_00107fe0_caseD_7;\n          case 8:\n            goto switchD_00107fe0_caseD_8;\n          case 9:\n            goto switchD_00107888_caseD_9;\n          case 10:\n            goto switchD_00107fe0_caseD_a;\n          case 0xb:\n            goto switchD_00107fe0_caseD_b;\n          case 0xc:\n            goto switchD_00107fe0_caseD_c;\n          case 0xd:\n            goto switchD_00107fe0_caseD_d;\n          case 0x20:\n            goto LAB_00108009;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00107888_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00107ff1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00107898;\n          case 0x27:\n            goto switchD_00107e90_caseD_27;\n          case 0x3f:\n            goto switchD_00107e90_caseD_3f;\n          case 0x5c:\n            goto switchD_00107888_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00107e90_caseD_7b;\n          }\n        }\n        goto LAB_00107c5e;\n      }\nLAB_00107fc0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00107fe0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00107888_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010797b;\n            }\nLAB_0010841b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010841b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00108458;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010797b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00107c50;\n      default:\n        bVar23 = false;\n        goto switchD_00107e90_caseD_1;\n      case 7:\nswitchD_00107fe0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00107fe0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00107888_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00107d60;\n      case 10:\nswitchD_00107fe0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00107da0;\n      case 0xb:\nswitchD_00107fe0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00107da0;\n      case 0xc:\nswitchD_00107fe0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00107fe0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00107da0;\n      case 0x20:\n        bVar5 = false;\nLAB_00108009:\n        uVar15 = 0x20;\n        goto LAB_00107898;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00107888_caseD_21:\n        bVar22 = false;\n        goto LAB_00107955;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00107ff1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00107958;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001078a0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00107898:\n        bVar22 = false;\n        goto LAB_001078a0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00107e90_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00107e90_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00107888_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00107ec8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00107d60;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00107e90_caseD_7b;\n      }\n      if (bVar20) goto LAB_00107dc0;\n      bVar21 = false;\n      goto LAB_00107916;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00107c47:\n      param_5 = 2;\nLAB_00107c50:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00107c5e:\n      uVar13 = FUN_00107630(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00107c98;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_001086e5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00107c98:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00107630(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00107c98;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_001086e5;\nLAB_00108076:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00107ad9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00107f7b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00107780;\nswitchD_001085de_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00108458:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010797b;\n    goto LAB_001078a0;\n  }\n  goto LAB_00107c5e;\njoined_r0x0010867a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00108268:\n  if (1 < uVar17) {\nLAB_00108272:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00107c50;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00107928;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00107ee0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_001079f1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00108272;\n  }\nswitchD_00107e90_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00107958:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001078a0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010797b;\n  }\n  else {\nLAB_00107978:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010797b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00107ee0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00107928;\n    }\n  }\njoined_r0x00107db1:\n  if (bVar20) {\nLAB_00107dc0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00107c50;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00107916:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00107928:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00107780;\n}\n\n", 
    "00104120": "\nvoid FUN_00104120(char *param_1,char **param_2)\n\n{\n  symlinkat(*param_2,*(int *)(param_2 + 1),param_1);\n  return;\n}\n\n", 
    "001026c0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00112df0)();\n  return;\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00112d60)();\n  return iVar1;\n}\n\n", 
    "0010ac20": "\nulong FUN_0010ac20(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010bb00(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00112e80)();\n  return iVar1;\n}\n\n", 
    "00102a60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00112fc0)();\n  return iVar1;\n}\n\n", 
    "00105f70": "\nundefined8 FUN_00105f70(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "00114078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong pathconf(char *__path,int __name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109840": "\nvoid FUN_00109840(void)\n\n{\n  FUN_00109610();\n  return;\n}\n\n", 
    "0010a330": "\nvoid FUN_0010a330(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010a3c0(param_1,0,1);\n  return;\n}\n\n", 
    "00114070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102a8f": "\nvoid FUN_00102a8f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010b510": "\nundefined8 FUN_0010b510(long *param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (lVar1 != 0) {\n    uVar2 = FUN_0010bb00(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "001090b0": "\nvoid FUN_001090b0(undefined8 param_1)\n\n{\n  FUN_001090a0(0,param_1);\n  return;\n}\n\n", 
    "00103180": "\nvoid thunk_FUN_00103100(void)\n\n{\n  FUN_00103100();\n  return;\n}\n\n", 
    "00105480": "\nvoid FUN_00105480(void)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  uVar3 = stdin;\n  lVar2 = FUN_0010a390(stdin);\n  if (lVar2 == 0) {\n    iVar1 = FUN_0010ac20(uVar3);\n    if (iVar1 == 0) {\n      FUN_001055b0();\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0010a3c0(uVar3,0,1);\n    if (iVar1 == 0) {\n      iVar1 = FUN_0010a350(stdin);\n      if (iVar1 != 0) {\n        FUN_0010ac20(stdin);\n        goto LAB_001054e0;\n      }\n    }\n    iVar1 = FUN_0010ac20(stdin);\n    if (iVar1 == 0) {\n      FUN_001055b0();\n      return;\n    }\n  }\nLAB_001054e0:\n  uVar3 = dcgettext(0,\"error closing file\",5);\n  lVar2 = DAT_00113130;\n  piVar4 = __errno_location();\n  if (lVar2 == 0) {\n    error(0,*piVar4,&DAT_0010ddd7,uVar3);\n  }\n  else {\n    uVar5 = FUN_00108ed0(lVar2);\n    error(0,*piVar4,\"%s: %s\",uVar5,uVar3);\n  }\n  FUN_001055b0();\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00113020);\n}\n\n", 
    "00108990": "\nvoid FUN_00108990(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00113260;\n  }\n  FUN_0010a060(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00102a8a": "\nvoid FUN_00102a8a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010af50": "\nundefined4 FUN_0010af50(undefined8 *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  \n  uVar2 = FUN_0010b510(*param_1);\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  FUN_0010af20(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "001058a0": "\nvoid FUN_001058a0(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  undefined8 *puVar3;\n  \n  if (param_1 == 0) {\n    return;\n  }\n  puVar1 = (undefined8 *)FUN_00109e90(0x18);\n  uVar2 = FUN_0010a090(param_2);\n  *puVar1 = uVar2;\n  puVar1[1] = param_3[1];\n  puVar1[2] = *param_3;\n  puVar3 = (undefined8 *)FUN_00106a80(param_1,puVar1);\n  if (puVar3 != (undefined8 *)0x0) {\n    if (puVar1 != puVar3) {\n      FUN_00106da0(puVar1);\n      return;\n    }\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00112e08)();\n  return sVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkdir_00112d78)();\n  return iVar1;\n}\n\n", 
    "00102a99": "\nvoid switchD_001076cf::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001049f0": "\nvoid FUN_001049f0(char *param_1)\n\n{\n  char *pcVar1;\n  \n  if ((((param_1 != (char *)0x0) ||\n       (param_1 = getenv(\"SIMPLE_BACKUP_SUFFIX\"), param_1 != (char *)0x0)) && (*param_1 != '\\0')) &&\n     (pcVar1 = (char *)FUN_001057d0(param_1), param_1 == pcVar1)) {\n    DAT_00113128 = param_1;\n    return;\n  }\n  DAT_00113128 = &DAT_0010d0a3;\n  return;\n}\n\n", 
    "00114040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102a94": "\nvoid FUN_00102a94(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105b20": "\nulong FUN_00105b20(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = FUN_00105ab0(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "00114168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106d30": "\nundefined8 FUN_00106d30(undefined8 *param_1,undefined8 *param_2)\n\n{\n  undefined8 uVar1;\n  \n  if ((param_1[1] == param_2[1]) && (param_1[2] == param_2[2])) {\n    uVar1 = FUN_00109500(*param_1,*param_2);\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00114288": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105c40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong FUN_00105c40(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_0010d1e8 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_0010d1ec) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_0010d1ec) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = FUN_00105b20(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00114160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114280": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001090c0": "\nundefined8 FUN_001090c0(int param_1)\n\n{\n  int *piVar1;\n  \n  piVar1 = __errno_location();\n  *piVar1 = param_1;\n  return 0xffffffff;\n}\n\n", 
    "00104140": "\nint FUN_00104140(int param_1,char *param_2,int param_3,char *param_4,int param_5,char param_6)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  char *__old;\n  long in_FS_OFFSET;\n  int local_168 [2];\n  char *local_160;\n  int local_158;\n  int local_154;\n  char local_148 [264];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = linkat(param_1,param_2,param_3,param_4,param_5);\n  if ((param_6 == '\\x01') && (iVar1 != 0)) {\n    piVar3 = __errno_location();\n    if (*piVar3 == 0x11) {\n      __old = (char *)FUN_001040c0(param_4,local_148);\n      if (__old == (char *)0x0) {\n        iVar1 = -1;\n      }\n      else {\n        local_168[0] = param_1;\n        local_160 = param_2;\n        local_158 = param_3;\n        local_154 = param_5;\n        iVar1 = FUN_00109610(__old,0,local_168,FUN_001040a0,6);\n        if (iVar1 == 0) {\n          iVar2 = renameat(param_3,__old,param_3,param_4);\n          if (iVar2 != 0) {\n            iVar2 = *piVar3;\n          }\n          unlinkat(param_3,__old,0);\n        }\n        else {\n          iVar2 = *piVar3;\n        }\n        if (__old != local_148) {\n          free(__old);\n        }\n        iVar1 = 1;\n        if (iVar2 != 0) {\n          *piVar3 = iVar2;\n          iVar1 = -1;\n        }\n      }\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105590": "\nvoid FUN_00105590(undefined8 param_1)\n\n{\n  DAT_00113140 = param_1;\n  return;\n}\n\n", 
    "00105470": "\nvoid FUN_00105470(undefined8 param_1)\n\n{\n  DAT_00113130 = param_1;\n  return;\n}\n\n", 
    "00106680": "\nundefined4 FUN_00106680(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)FUN_00105c40(*(undefined4 *)((long)pvVar1 + 8),param_2,\n                                 *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_0010678c;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = FUN_00105e10(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = FUN_00105e10(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = FUN_00105e10(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_0010678c;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_0010678c;\n    }\n  }\n  uVar3 = 0;\nLAB_0010678c:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlinkat(int __fd,char *__name,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001059b0": "\nvoid * FUN_001059b0(void *param_1,char *param_2,void **param_3)\n\n{\n  size_t __n;\n  long lVar1;\n  long lVar2;\n  size_t __n_00;\n  void *__dest;\n  undefined *puVar3;\n  ulong uVar4;\n  undefined local_41;\n  \n  lVar1 = FUN_001057d0();\n  lVar2 = FUN_00105830(lVar1);\n  __n = (lVar1 - (long)param_1) + lVar2;\n  __n_00 = strlen(param_2);\n  if (lVar2 == 0) {\n    local_41 = 0x2e;\n    if (*param_2 != '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 == '/');\n  }\n  else if (*(char *)((long)param_1 + (__n - 1)) == '/') {\n    local_41 = 0;\n    uVar4 = 0;\n  }\n  else {\n    local_41 = 0x2f;\n    if (*param_2 == '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 != '/');\n  }\n  __dest = malloc(__n + 1 + __n_00 + uVar4);\n  if (__dest != (void *)0x0) {\n    puVar3 = (undefined *)mempcpy(__dest,param_1,__n);\n    *puVar3 = local_41;\n    if (param_3 != (void **)0x0) {\n      *param_3 = puVar3 + uVar4;\n    }\n    puVar3 = (undefined *)mempcpy(puVar3 + uVar4,param_2,__n_00);\n    *puVar3 = 0;\n  }\n  return __dest;\n}\n\n", 
    "001026e0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00112e00)();\n  return;\n}\n\n", 
    "001025c0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00112d70)();\n  return;\n}\n\n", 
    "00114058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong syscall(long __sysno,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102a85": "\nvoid FUN_00102a85(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114298": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint symlinkat(char *__from,int __tofd,char *__to)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104d80": "\nvoid FUN_00104d80(char *param_1,char *param_2)\n\n{\n  if ((param_2 == (char *)0x0) || (*param_2 == '\\0')) {\n    param_2 = getenv(\"VERSION_CONTROL\");\n    param_1 = \"$VERSION_CONTROL\";\n  }\n  FUN_00104d20(param_1,param_2);\n  return;\n}\n\n", 
    "00102a80": "\nvoid FUN_00102a80(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rpmatch(char *__response)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114290": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b850": "\nvoid FUN_0010b850(ulong *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long lVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong *puVar14;\n  ulong *puVar15;\n  ulong uVar16;\n  ulong uVar17;\n  long lVar18;\n  undefined auVar19 [16];\n  \n  uVar2 = 0x98f5704f6c44c0ab;\n  uVar4 = 0x82f053db8355e0ce;\n  uVar9 = 0xb29b2e824a595524;\n  uVar12 = 0x8c0ea5053d4712a0;\n  uVar7 = 0xb9f8b322c73ac862;\n  uVar10 = 0x647c4677a2884b7c;\n  uVar16 = 0xae985bf2cbfc89ed;\n  uVar6 = 0x48fe4a0fa5a09315;\n  puVar5 = param_1;\n  puVar14 = param_1;\n  do {\n    lVar3 = uVar2 + puVar14[7];\n    uVar2 = puVar14[5];\n    uVar1 = puVar14[6];\n    lVar11 = uVar10 + (*puVar14 - (uVar4 + puVar14[4]));\n    uVar4 = FUN_0010b560(lVar3);\n    uVar17 = uVar4 >> 9 ^ uVar6 + uVar2;\n    lVar8 = uVar7 + (puVar14[1] - uVar17);\n    uVar10 = lVar11 + lVar8;\n    uVar4 = uVar16 + uVar1 ^ lVar11 << 9;\n    lVar13 = uVar12 + (puVar14[2] - uVar4);\n    uVar6 = FUN_0010b560(lVar8);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar11;\n    lVar11 = uVar9 + (puVar14[3] - uVar2);\n    uVar12 = lVar13 + lVar11;\n    uVar10 = uVar10 ^ lVar13 << 0xf;\n    auVar19 = FUN_0010b560(lVar11);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar9 = lVar11 + lVar3;\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar8 + lVar13;\n    lVar11 = uVar17 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar8 = uVar4 - uVar12;\n    puVar15 = puVar14 + 8;\n    uVar4 = FUN_0010b560(lVar11);\n    uVar6 = lVar11 + lVar8;\n    *puVar14 = uVar10;\n    uVar9 = uVar9 ^ uVar4 >> 0x11;\n    uVar4 = lVar8 * 0x4000 ^ lVar3 + lVar11;\n    puVar14[1] = uVar7;\n    uVar2 = uVar2 - uVar9;\n    puVar14[2] = uVar12;\n    uVar16 = lVar8 + uVar2;\n    puVar14[3] = uVar9;\n    puVar14[4] = uVar4;\n    puVar14[5] = uVar6;\n    puVar14[6] = uVar16;\n    puVar14[7] = uVar2;\n    puVar14 = puVar15;\n  } while (param_1 + 0x100 != puVar15);\n  do {\n    lVar3 = uVar2 + puVar5[7];\n    uVar2 = puVar5[5];\n    uVar1 = puVar5[6];\n    lVar8 = uVar10 + (*puVar5 - (uVar4 + puVar5[4]));\n    uVar4 = FUN_0010b560(lVar3);\n    uVar4 = uVar4 >> 9 ^ uVar6 + uVar2;\n    uVar16 = uVar16 + uVar1 ^ lVar8 << 9;\n    lVar13 = (puVar5[1] - uVar4) + uVar7;\n    lVar11 = uVar12 + (puVar5[2] - uVar16);\n    uVar10 = lVar8 + lVar13;\n    uVar6 = FUN_0010b560(lVar13);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar8;\n    uVar10 = uVar10 ^ lVar11 << 0xf;\n    lVar18 = (puVar5[3] - uVar2) + uVar9;\n    uVar12 = lVar11 + lVar18;\n    auVar19 = FUN_0010b560(lVar18);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar13 + lVar11;\n    lVar8 = uVar4 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar11 = uVar16 - uVar12;\n    uVar9 = FUN_0010b560(lVar8);\n    uVar6 = lVar8 + lVar11;\n    *puVar5 = uVar10;\n    puVar14 = puVar5 + 8;\n    uVar4 = lVar11 * 0x4000 ^ lVar3 + lVar8;\n    puVar5[1] = uVar7;\n    uVar9 = uVar9 >> 0x11 ^ lVar18 + lVar3;\n    puVar5[2] = uVar12;\n    uVar2 = uVar2 - uVar9;\n    puVar5[3] = uVar9;\n    uVar16 = lVar11 + uVar2;\n    puVar5[4] = uVar4;\n    puVar5[5] = uVar6;\n    puVar5[6] = uVar16;\n    puVar5[7] = uVar2;\n    puVar5 = puVar14;\n  } while (param_1 + 0x100 != puVar14);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n", 
    "00105660": "\nDIR * FUN_00105660(char *param_1)\n\n{\n  uint uVar1;\n  int __fd;\n  DIR *__dirp;\n  int *piVar2;\n  DIR *pDVar3;\n  int iVar4;\n  \n  __dirp = opendir(param_1);\n  if (__dirp != (DIR *)0x0) {\n    uVar1 = dirfd(__dirp);\n    if (uVar1 < 3) {\n      __fd = FUN_0010a1c0(uVar1,0x406,3);\n      piVar2 = __errno_location();\n      if (__fd < 0) {\n        iVar4 = *piVar2;\n        pDVar3 = (DIR *)0x0;\n      }\n      else {\n        pDVar3 = fdopendir(__fd);\n        iVar4 = *piVar2;\n        if (pDVar3 == (DIR *)0x0) {\n          close(__fd);\n        }\n      }\n      closedir(__dirp);\n      *piVar2 = iVar4;\n      return pDVar3;\n    }\n  }\n  return __dirp;\n}\n\n", 
    "00114018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114138": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint renameat(int __oldfd,char *__old,int __newfd,char *__new)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_renameat_00112f88)();\n  return iVar1;\n}\n\n", 
    "001028d0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00112ef8)();\n  return;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_00112e68)();\n  return sVar1;\n}\n\n", 
    "0010af20": "\nvoid FUN_0010af20(void *param_1)\n\n{\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  return;\n}\n\n", 
    "00114020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint renameat(int __oldfd,char *__old,int __newfd,char *__new)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104e50": "\nchar * FUN_00104e50(char *param_1,uint param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  long lVar3;\n  char cVar4;\n  int iVar5;\n  char *__s;\n  size_t sVar6;\n  char *__s_00;\n  size_t sVar7;\n  int *piVar8;\n  uint uVar9;\n  char *__dest;\n  long lVar10;\n  char *pcVar11;\n  char *pcVar12;\n  char cVar13;\n  char *pcVar14;\n  long in_FS_OFFSET;\n  void *local_108;\n  char *local_100;\n  ulong local_f0;\n  long local_e0;\n  undefined local_d8 [24];\n  uint local_c0;\n  undefined8 local_a8;\n  long local_40;\n  \n  uVar9 = param_2 & 3;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_e0 = 0;\n  if (((uVar9 & uVar9 - 1) != 0) || (param_1 == (char *)0x0)) {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 0x16;\n    goto LAB_00105090;\n  }\n  if (*param_1 == '\\0') {\n    piVar8 = __errno_location();\n    __s = (char *)0x0;\n    *piVar8 = 2;\n    goto LAB_00105090;\n  }\n  if (*param_1 == '/') {\n    __s = (char *)FUN_00109e90(0x1000);\n    *__s = '/';\n    pcVar12 = __s + 0x1000;\n    __dest = __s + 1;\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') {\nLAB_00104ef1:\n      local_f0 = 0;\n      local_108 = (void *)0x0;\n      local_100 = param_1;\n      do {\n        pcVar11 = param_1;\n        cVar13 = cVar4;\n        if (cVar4 == '/') {\n          do {\n            cVar13 = param_1[1];\n            param_1 = param_1 + 1;\n          } while (cVar13 == '/');\n          pcVar11 = param_1;\n          if (cVar13 == '\\0') break;\n        }\n        do {\n          pcVar14 = param_1;\n          cVar4 = pcVar14[1];\n          param_1 = pcVar14 + 1;\n          if (cVar4 == '\\0') break;\n        } while (cVar4 != '/');\n        if (param_1 == pcVar11) break;\n        sVar6 = (long)param_1 - (long)pcVar11;\n        if (sVar6 == 1) {\n          if (cVar13 != '.') goto LAB_00104f8d;\n        }\n        else {\n          if (((sVar6 != 2) || (cVar13 != '.')) || (pcVar11[1] != '.')) {\nLAB_00104f8d:\n            if (__dest[-1] != '/') {\n              *__dest = '/';\n              __dest = __dest + 1;\n            }\n            if (pcVar12 <= __dest + sVar6) {\n              lVar10 = (long)__dest - (long)__s;\n              lVar3 = 0x1000 - (long)__s;\n              if (0xfff < (long)sVar6) {\n                lVar3 = (sVar6 + 1) - (long)__s;\n              }\n              __s = (char *)FUN_00109ef0(__s,pcVar12 + lVar3);\n              pcVar12 = __s + (long)(pcVar12 + lVar3);\n              __dest = __s + lVar10;\n            }\n            memcpy(__dest,pcVar11,sVar6);\n            __dest = __dest + sVar6;\n            *__dest = '\\0';\n            pcVar11 = __dest;\n            if ((uVar9 == 2) && ((param_2 & 4) != 0)) {\nLAB_00105010:\n              local_c0 = 0;\nLAB_00105018:\n              if ((*param_1 == '\\0') || (uVar9 == 2)) {\nLAB_0010502a:\n                cVar4 = *param_1;\n                __dest = pcVar11;\n                goto LAB_00105032;\n              }\n              piVar8 = __errno_location();\n              iVar5 = 0x14;\n            }\n            else {\n              if ((param_2 & 4) == 0) {\n                iVar5 = FUN_0010bd10(__s,local_d8);\n              }\n              else {\n                iVar5 = FUN_0010bcf0();\n              }\n              if (iVar5 == 0) {\n                if ((local_c0 & 0xf000) != 0xa000) {\n                  if ((local_c0 & 0xf000) != 0x4000) goto LAB_00105018;\n                  goto LAB_0010502a;\n                }\n                cVar4 = FUN_00104dc0(&local_e0,local_100,local_d8);\n                if (cVar4 == '\\0') {\n                  __s_00 = (char *)FUN_0010a4d0(__s,local_a8);\n                  if (__s_00 != (char *)0x0) {\n                    sVar6 = strlen(__s_00);\n                    sVar7 = strlen(param_1);\n                    uVar1 = sVar6 + 1 + sVar7;\n                    if (local_f0 == 0) {\n                      local_f0 = 0x1000;\n                      if (0xfff < uVar1) {\n                        local_f0 = uVar1;\n                      }\n                      local_108 = (void *)FUN_00109e90(local_f0);\n                    }\n                    else if (local_f0 < uVar1) {\n                      local_108 = (void *)FUN_00109ef0(local_108,uVar1);\n                      local_f0 = uVar1;\n                    }\n                    memmove((void *)((long)local_108 + sVar6),param_1,sVar7 + 1);\n                    param_1 = (char *)memcpy(local_108,__s_00,sVar6);\n                    pcVar11 = __s + 1;\n                    if (*__s_00 == '/') {\n                      *__s = '/';\n                    }\n                    else {\n                      bVar2 = pcVar11 < __dest;\n                      pcVar11 = __dest;\n                      if ((bVar2) && (pcVar11 = __dest + -1, __s < pcVar11)) {\n                        do {\n                          if (pcVar11[-1] == '/') break;\n                          pcVar11 = pcVar11 + -1;\n                        } while (__s != pcVar11);\n                      }\n                    }\n                    free(__s_00);\n                    local_100 = param_1;\n                    goto LAB_0010502a;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = *piVar8;\n                  if ((uVar9 == 2) && (iVar5 != 0xc)) goto LAB_0010516c;\n                }\n                else {\n                  if (uVar9 == 2) {\nLAB_0010516c:\n                    cVar4 = pcVar14[1];\n                    goto LAB_00105032;\n                  }\n                  piVar8 = __errno_location();\n                  iVar5 = 0x28;\n                }\n              }\n              else {\n                piVar8 = __errno_location();\n                iVar5 = *piVar8;\n                if ((param_2 & 3) != 0) {\n                  if (uVar9 != 1) goto LAB_00105010;\n                  sVar6 = strspn(param_1,\"/\");\n                  if ((param_1[sVar6] == '\\0') && (iVar5 == 2)) goto LAB_0010516c;\n                }\n              }\n            }\n            free(local_108);\n            free(__s);\n            if (local_e0 != 0) {\n              FUN_00106590();\n            }\n            *piVar8 = iVar5;\n            __s = (char *)0x0;\n            goto LAB_00105090;\n          }\n          if ((__s + 1 < __dest) && (__dest = __dest + -1, __s < __dest)) {\n            do {\n              if (__dest[-1] == '/') break;\n              __dest = __dest + -1;\n            } while (__dest != __s);\n          }\n        }\nLAB_00105032:\n      } while (cVar4 != '\\0');\n      goto LAB_00105040;\n    }\n    local_108 = (void *)0x0;\n    pcVar11 = __dest;\nLAB_00105053:\n    __dest = pcVar11 + 1;\n  }\n  else {\n    __s = (char *)FUN_0010a0f0();\n    if (__s == (char *)0x0) goto LAB_00105090;\n    sVar6 = strlen(__s);\n    if (sVar6 < 0x1000) {\n      __s = (char *)FUN_00109ef0(__s,0x1000);\n      __dest = __s + sVar6;\n      pcVar12 = __s + 0x1000;\n    }\n    else {\n      __dest = __s + sVar6;\n      pcVar12 = __dest;\n    }\n    cVar4 = *param_1;\n    if (cVar4 != '\\0') goto LAB_00104ef1;\n    local_108 = (void *)0x0;\nLAB_00105040:\n    pcVar11 = __dest;\n    if ((__dest <= __s + 1) || (__dest[-1] != '/')) goto LAB_00105053;\n    pcVar11 = __dest + -1;\n  }\n  *pcVar11 = '\\0';\n  if (__dest != pcVar12) {\n    __s = (char *)FUN_00109ef0(__s,pcVar11 + (1 - (long)__s));\n  }\n  free(local_108);\n  if (local_e0 != 0) {\n    FUN_00106590();\n  }\nLAB_00105090:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return __s;\n}\n\n", 
    "00102a30": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00112fa8)();\n  return;\n}\n\n", 
    "00103470": "\nuint FUN_00103470(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  char *pcVar7;\n  uint *puVar8;\n  undefined8 uVar9;\n  byte bVar10;\n  uint uVar11;\n  byte bVar12;\n  char *__ptr;\n  long in_FS_OFFSET;\n  bool bVar13;\n  char local_179;\n  long local_168;\n  long local_160;\n  long local_158;\n  uint local_150;\n  long local_d8;\n  long local_d0;\n  uint local_c0;\n  long local_40;\n  \n  bVar10 = DAT_0011311e;\n  uVar11 = (uint)DAT_0011311e;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_0011311e == 0) {\n    if (DAT_0011311c == '\\0') {\n      iVar2 = FUN_0010bd10(param_1,&local_168);\n    }\n    else {\n      iVar2 = FUN_0010bcf0();\n    }\n    if (iVar2 != 0) {\n      uVar5 = FUN_00108df0(4,param_1);\n      uVar6 = dcgettext(0,\"failed to access %s\",5);\n      piVar4 = __errno_location();\n      error(0,*piVar4,uVar6,uVar5);\n      goto LAB_0010363f;\n    }\n    if ((local_150 & 0xf000) != 0x4000) goto LAB_001034df;\n    local_179 = DAT_00113118;\n    if (DAT_00113118 != '\\0') goto LAB_001034e4;\n    uVar5 = FUN_00108ef0(0,3,param_1);\n    pcVar7 = \"%s: hard link not allowed for directory\";\nLAB_00103911:\n    uVar6 = dcgettext(0,pcVar7,5);\n    uVar11 = 0;\n    error(0,0,uVar6,uVar5);\n    goto LAB_0010363f;\n  }\nLAB_001034df:\n  local_179 = '\\0';\nLAB_001034e4:\n  bVar12 = DAT_0011311a;\n  if (((DAT_0011311a == 0) && (DAT_0011311b == 0)) && (DAT_00113120 == 0)) {\nLAB_00103535:\n    bVar13 = false;\n    pcVar7 = (char *)0x0;\n  }\n  else {\n    iVar2 = FUN_0010bd10(param_2,&local_d8);\n    if (iVar2 != 0) {\n      piVar4 = __errno_location();\n      if (*piVar4 != 2) {\n        uVar5 = FUN_00108df0(4,param_2);\n        uVar6 = dcgettext(0,\"failed to access %s\",5);\n        uVar11 = 0;\n        error(0,*piVar4,uVar6,uVar5);\n        goto LAB_0010363f;\n      }\n      if (((bVar12 == 0) && ((bVar10 != 0 || (DAT_00113120 == 0)))) && (iVar2 == 0))\n      goto LAB_001036d8;\n      goto LAB_00103535;\n    }\n    if ((DAT_00113110 != 0) &&\n       (cVar1 = FUN_00105930(DAT_00113110,param_2,&local_d8), bVar10 = DAT_0011311e,\n       bVar12 = DAT_0011311a, cVar1 != '\\0')) {\n      uVar5 = FUN_00108d20(1,4,param_1);\n      uVar6 = FUN_00108d20(0,4,param_2);\n      pcVar7 = \"will not overwrite just-created %s with %s\";\nLAB_001039c8:\n      uVar9 = dcgettext(0,pcVar7,5);\n      uVar11 = 0;\n      error(0,0,uVar9,uVar6,uVar5);\n      goto LAB_0010363f;\n    }\n    if (bVar12 == 0) {\n      iVar2 = DAT_00113120;\n      if (bVar10 == 0) {\njoined_r0x00103949:\n        if (iVar2 != 0) goto LAB_0010394f;\n      }\n    }\n    else {\n      if (DAT_00113120 == 0) {\n        if (bVar10 != 0) {\n          iVar2 = FUN_0010bcf0(param_1,&local_168);\n          goto joined_r0x00103949;\n        }\n      }\n      else if (bVar10 != 0) goto LAB_001036d8;\nLAB_0010394f:\n      if (((local_160 == local_d0) && (local_168 == local_d8)) &&\n         ((local_158 == 1 || (cVar1 = FUN_00109500(param_1,param_2), cVar1 != '\\0')))) {\n        uVar5 = FUN_00108d20(1,4,param_2);\n        uVar6 = FUN_00108d20(0,4,param_1);\n        pcVar7 = \"%s and %s are the same file\";\n        goto LAB_001039c8;\n      }\n    }\nLAB_001036d8:\n    if ((local_c0 & 0xf000) == 0x4000) {\n      uVar5 = FUN_00108ef0(0,3,param_2);\n      pcVar7 = \"%s: cannot overwrite directory\";\n      goto LAB_00103911;\n    }\n    uVar11 = (uint)DAT_0011311b;\n    if (DAT_0011311b != 0) {\n      uVar6 = FUN_00108df0(4,param_2);\n      uVar5 = DAT_00113148;\n      uVar9 = dcgettext(0,\"%s: replace %s? \",5);\n      __fprintf_chk(stderr,1,uVar9,uVar5,uVar6);\n      cVar1 = FUN_0010a120();\n      if (cVar1 == '\\0') goto LAB_0010363f;\n      DAT_0011311a = 1;\n    }\n    if (DAT_00113120 == 0) goto LAB_00103535;\n    pcVar7 = (char *)FUN_00104d00(param_2);\n    iVar2 = rename(param_2,pcVar7);\n    if (iVar2 != 0) {\n      piVar4 = __errno_location();\n      iVar2 = *piVar4;\n      free(pcVar7);\n      if (iVar2 != 2) {\n        uVar5 = FUN_00108df0(4,param_2);\n        uVar6 = dcgettext(0,\"cannot backup %s\",5);\n        uVar11 = 0;\n        error(0,iVar2,uVar6,uVar5);\n        goto LAB_0010363f;\n      }\n      goto LAB_00103535;\n    }\n    bVar13 = pcVar7 != (char *)0x0;\n  }\n  __ptr = (char *)0x0;\n  if (DAT_0011311d != '\\0') {\n    param_1 = (char *)FUN_001033a0(param_1,param_2);\n    __ptr = param_1;\n  }\n  if (DAT_0011311e == 0) {\n    uVar3 = FUN_00104140(0xffffff9c,param_1,0xffffff9c,param_2,(ulong)(DAT_0011311c != '\\0') << 10);\n  }\n  else {\n    uVar3 = FUN_001042b0(param_1,0xffffff9c,param_2,DAT_0011311a | bVar13);\n  }\n  uVar11 = ~uVar3 >> 0x1f;\n  if ((int)uVar3 < 0) {\n    uVar5 = FUN_00108d20(1,4,param_1);\n    uVar6 = FUN_00108d20(0,4,param_2);\n    puVar8 = (uint *)__errno_location();\n    if (DAT_0011311e == 0) {\n      uVar3 = *puVar8;\n      if (uVar3 == 0x1f) {\n        if (local_179 != '\\0') goto LAB_00103a10;\n        uVar9 = dcgettext(0,\"failed to create hard link to %.0s%s\",5);\n      }\n      else if (((uVar3 == 0x7a) || (uVar3 == 0x11)) || ((uVar3 & 0xfffffffd) == 0x1c)) {\n        uVar9 = dcgettext(0,\"failed to create hard link %s\",5);\n      }\n      else {\nLAB_00103a10:\n        uVar9 = dcgettext(0,\"failed to create hard link %s => %s\",5);\n      }\n    }\n    else if ((*puVar8 == 0x24) || (*param_1 == '\\0')) {\n      uVar9 = dcgettext(0,\"failed to create symbolic link %s -> %s\",5);\n    }\n    else {\n      uVar9 = dcgettext(0,\"failed to create symbolic link %s\",5);\n    }\n    error(0,*puVar8,uVar9,uVar6,uVar5);\n    if ((pcVar7 != (char *)0x0) && (iVar2 = rename(pcVar7,param_2), iVar2 != 0)) {\n      uVar5 = FUN_00108df0(4,param_2);\n      uVar6 = dcgettext(0,\"cannot un-backup %s\",5);\n      error(0,*puVar8,uVar6,uVar5);\n    }\n  }\n  else {\n    if (DAT_0011311e == 0) {\n      FUN_001058a0(DAT_00113110,param_2,&local_168);\n    }\n    if (DAT_00113119 != '\\0') {\n      if (pcVar7 != (char *)0x0) {\n        uVar5 = FUN_00108df0(4,pcVar7);\n        __printf_chk(1,\"%s ~ \",uVar5);\n      }\n      uVar5 = FUN_00108d20(1,4,param_1);\n      bVar13 = DAT_0011311e == 0;\n      uVar6 = FUN_00108d20(0,4,param_2);\n      __printf_chk(1,\"%s %c> %s\\n\",uVar6,(-bVar13 & 0x10U) + 0x2d,uVar5);\n    }\n  }\n  free(pcVar7);\n  free(__ptr);\nLAB_0010363f:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar11;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001090a0": "\nvoid FUN_001090a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109080(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00103230": "\nvoid * FUN_00103230(undefined8 param_1)\n\n{\n  uint uVar1;\n  char cVar2;\n  uint uVar3;\n  char *__s;\n  size_t sVar4;\n  uint *puVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  void *pvVar8;\n  void *__ptr;\n  void *__ptr_00;\n  void *__ptr_01;\n  ulong uVar9;\n  undefined8 uVar10;\n  long in_FS_OFFSET;\n  bool bVar11;\n  undefined auStack_c8 [24];\n  uint local_b0;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __s = (char *)FUN_001057d0();\n  sVar4 = strlen(__s);\n  bVar11 = true;\n  if (sVar4 != 0) {\n    bVar11 = __s[sVar4 - 1] == '/';\n  }\n  if (DAT_00113010 == '\\0') {\n    uVar3 = FUN_0010bd10(param_1,auStack_c8);\n  }\n  else {\n    uVar3 = FUN_0010bcf0();\n  }\n  if (uVar3 == 0) {\n    if ((local_b0 & 0xf000) == 0x4000) {\nLAB_00103351:\n      pvVar8 = (void *)0x1;\n      goto LAB_001032b8;\n    }\nLAB_001032aa:\n    uVar3 = uVar3 & 1;\n    uVar9 = 0;\n  }\n  else {\n    puVar5 = (uint *)__errno_location();\n    uVar1 = *puVar5;\n    uVar9 = (ulong)uVar1;\n    if (uVar1 == 0) {\n      uVar3 = (uint)((local_b0 & 0xf000) == 0x4000);\n      goto LAB_001032aa;\n    }\n    cVar2 = FUN_00103190(uVar9);\n    uVar3 = 0;\n    if (cVar2 == '\\0') {\n      uVar6 = FUN_00108df0(4,param_1);\n      uVar7 = dcgettext(0,\"failed to access %s\",5);\n      error(1,uVar1,uVar7,uVar6);\n      goto LAB_00103351;\n    }\n  }\n  pvVar8 = (void *)(ulong)uVar3;\n  if (bVar11 <= SUB41(uVar3,0)) {\nLAB_001032b8:\n    if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return pvVar8;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  uVar6 = FUN_00108df0(4,param_1);\n  uVar7 = dcgettext(0,\"target %s is not a directory\",5);\n  uVar10 = 1;\n  error(1,uVar9,uVar7,uVar6);\n  pvVar8 = (void *)FUN_00105700(uVar9);\n  __ptr = (void *)FUN_00104e50(pvVar8,2);\n  __ptr_00 = (void *)FUN_00104e50(uVar10,2);\n  if ((__ptr != (void *)0x0) && (__ptr_00 != (void *)0x0)) {\n    __ptr_01 = (void *)FUN_00109e90(0x1000);\n    cVar2 = FUN_001044e0(__ptr_00,__ptr,__ptr_01,0x1000);\n    if (cVar2 != '\\0') {\n      free(pvVar8);\n      free(__ptr);\n      free(__ptr_00);\n      if (__ptr_01 != (void *)0x0) {\n        return __ptr_01;\n      }\n      goto LAB_001033f9;\n    }\n    free(__ptr_01);\n  }\n  free(pvVar8);\n  free(__ptr);\n  free(__ptr_00);\nLAB_001033f9:\n  pvVar8 = (void *)FUN_0010a090(uVar10);\n  return pvVar8;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00112d38)();\n  return;\n}\n\n", 
    "00114028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_00112f80)();\n  return _Var1;\n}\n\n", 
    "001028c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00112ef0)();\n  return pcVar1;\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_closedir_00112e60)();\n  return iVar1;\n}\n\n", 
    "00105e10": "\nundefined8 FUN_00105e10(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00105e40:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00105b90(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          FUN_00105cd0(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_00105eb0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_00105eb0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00105e40;\n    plVar3 = (long *)FUN_00105b90(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)FUN_00105df0(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "00102a20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00112fa0)();\n  return sVar1;\n}\n\n", 
    "00114030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104d20": "\nundefined4 FUN_00104d20(undefined8 param_1,char *param_2)\n\n{\n  long lVar1;\n  \n  if (param_2 == (char *)0x0) {\n    return 2;\n  }\n  if (*param_2 == '\\0') {\n    return 2;\n  }\n  lVar1 = FUN_0010a870(param_1,param_2,&PTR_DAT_00112a80,&DAT_0010d100,4,PTR_FUN_001130a0);\n  return *(undefined4 *)(&DAT_0010d100 + lVar1 * 4);\n}\n\n", 
    "00114150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114278": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a770": "\nvoid FUN_0010a770(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = FUN_001090b0(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = FUN_001090b0(lVar1);\n      __fprintf_chk(stderr,1,&DAT_0010ddd5,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "00114270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107500": "\nchar * FUN_00107500(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_0010ad20();\n    iVar1 = FUN_00107450(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00107450(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010d241;\n      }\n      else {\n        pcVar2 = &DAT_0010d23e;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010d245;\n    }\n    else {\n      pcVar2 = &DAT_0010d23a;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00103140": "\nvoid FUN_00103140(void)\n\n{\n  if (DAT_00113108 == '\\0') {\n    if (PTR___cxa_finalize_00112ff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00113008);\n    }\n    FUN_001030d0();\n    DAT_00113108 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00114238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00112e78)();\n  return iVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00112de8)();\n  return iVar1;\n}\n\n", 
    "00114118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid rewinddir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rename(char *__old,char *__new)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001028f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_00112f08)();\n  return pFVar1;\n}\n\n", 
    "00102a50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint symlinkat(char *__from,int __tofd,char *__to)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_symlinkat_00112fb8)();\n  return iVar1;\n}\n\n", 
    "00108cf0": "\nvoid FUN_00108cf0(void)\n\n{\n  FUN_001087f0();\n  return;\n}\n\n", 
    "00105f60": "\nundefined8 FUN_00105f60(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "00108ab0": "\nvoid FUN_00108ab0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00113260;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00107630(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00109cc0": "\nvoid FUN_00109cc0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00109850();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a980": "\nuint FUN_0010a980(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00104460": "\nundefined8 FUN_00104460(char *param_1,void **param_2,ulong *param_3)\n\n{\n  void *__dest;\n  size_t sVar1;\n  \n  __dest = *param_2;\n  if (__dest == (void *)0x0) {\n    fputs_unlocked(param_1,stdout);\n    return 0;\n  }\n  sVar1 = strlen(param_1);\n  if (*param_3 < sVar1 || *param_3 == sVar1) {\n    return 1;\n  }\n  memcpy(__dest,param_1,sVar1 + 1);\n  *param_2 = (void *)((long)*param_2 + sVar1);\n  *param_3 = *param_3 - sVar1;\n  return 0;\n}\n\n", 
    "00114128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001028e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00112f00)();\n  return pvVar1;\n}\n\n", 
    "001027c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00112e70)();\n  return iVar1;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00112de0)();\n  return sVar1;\n}\n\n", 
    "00114008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114250": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c50": "\nvoid FUN_00103c50(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_0010ce35;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'l' || (pcVar2[1] != 'n')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_0010ce32;\n        goto LAB_00103e8e;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_0010ce32;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0010ce32);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_00103e8e:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_0010ce32);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0010ce32);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_0010ce32) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105f50": "\nundefined8 FUN_00105f50(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "00102a40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00112fb0)();\n  return iVar1;\n}\n\n", 
    "0010a990": "\nvoid thunk_FUN_0010a950(void)\n\n{\n  FUN_0010a950();\n  return;\n}\n\n", 
    "0010a870": "\nlong FUN_0010a870(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0010a5d0(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_0010a6e0(param_1,param_2,lVar1);\n    FUN_0010a770(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "00104650": "\nbyte FUN_00104650(void **param_1,ulong param_2,long param_3,long param_4,DIR **param_5)\n\n{\n  char *pcVar1;\n  undefined4 *puVar2;\n  char cVar3;\n  undefined2 uVar4;\n  byte bVar5;\n  ulong uVar6;\n  int iVar7;\n  long lVar8;\n  dirent *pdVar9;\n  size_t sVar10;\n  void *pvVar11;\n  undefined2 *puVar12;\n  void *pvVar13;\n  DIR *__dirp;\n  int *piVar14;\n  char *pcVar15;\n  ulong __n;\n  bool bVar16;\n  ulong local_60;\n  ulong local_50;\n  \n  pvVar13 = *param_1;\n  __dirp = *param_5;\n  puVar12 = (undefined2 *)((long)pvVar13 + param_4);\n  lVar8 = FUN_00105830(puVar12);\n  if (__dirp == (DIR *)0x0) {\n    uVar4 = *puVar12;\n    *puVar12 = 0x2e;\n    __dirp = (DIR *)FUN_00105660(pvVar13);\n    puVar2 = (undefined4 *)((long)puVar12 + lVar8);\n    if (__dirp == (DIR *)0x0) {\n      piVar14 = __errno_location();\n      iVar7 = *piVar14;\n      *puVar12 = uVar4;\n      *puVar2 = 0x7e317e2e;\n      *(undefined *)(puVar2 + 1) = 0;\n      return (iVar7 == 0xc) + 2;\n    }\n    *puVar12 = uVar4;\n    *puVar2 = 0x7e317e2e;\n    *(undefined *)(puVar2 + 1) = 0;\n    *param_5 = __dirp;\n  }\n  else {\n    rewinddir(__dirp);\n  }\n  local_60 = 1;\n  bVar5 = 2;\n  local_50 = param_2;\n  do {\n    pdVar9 = readdir(__dirp);\n    uVar6 = local_50;\n    while( true ) {\n      if (pdVar9 == (dirent *)0x0) {\n        *param_1 = pvVar13;\n        return bVar5;\n      }\n      pcVar15 = pdVar9->d_name;\n      sVar10 = strlen(pcVar15);\n      local_50 = uVar6;\n      if (sVar10 < lVar8 + 4U) break;\n      iVar7 = memcmp((void *)((long)pvVar13 + param_4),pcVar15,lVar8 + 2U);\n      if (iVar7 != 0) break;\n      pcVar15 = pcVar15 + lVar8 + 2U;\n      if (8 < (byte)(*pcVar15 - 0x31U)) break;\n      bVar16 = *pcVar15 == '9';\n      __n = 1;\n      cVar3 = pcVar15[1];\n      while ((int)cVar3 - 0x30U < 10) {\n        __n = __n + 1;\n        bVar16 = (bool)(cVar3 == '9' & bVar16);\n        cVar3 = pcVar15[__n];\n      }\n      if (((cVar3 != '~') || (pcVar15[__n + 1] != '\\0')) ||\n         ((__n <= local_60 &&\n          ((__n != local_60 ||\n           (iVar7 = memcmp((void *)((long)pvVar13 + param_3 + 2),pcVar15,__n), 0 < iVar7))))))\n      break;\n      local_60 = bVar16 + __n;\n      local_50 = local_60 + 4 + param_3;\n      pvVar11 = pvVar13;\n      if (uVar6 < local_50) {\n        if ((-1 < (long)(local_50 * 2)) && (-1 < (long)local_50)) {\n          local_50 = local_50 * 2;\n        }\n        pvVar11 = realloc(pvVar13,local_50);\n        uVar6 = local_50;\n        if (pvVar11 == (void *)0x0) {\n          *param_1 = pvVar13;\n          return 3;\n        }\n      }\n      local_50 = uVar6;\n      puVar12 = (undefined2 *)(param_3 + (long)pvVar11);\n      *puVar12 = 0x7e2e;\n      *(undefined *)(puVar12 + 1) = 0x30;\n      pvVar13 = memcpy((void *)((long)puVar12 + (ulong)bVar16 + 2),pcVar15,__n + 2);\n      pcVar15 = (char *)((long)pvVar13 + (__n - 1));\n      cVar3 = *(char *)((long)pvVar13 + (__n - 1));\n      while (cVar3 == '9') {\n        *pcVar15 = '0';\n        pcVar1 = pcVar15 + -1;\n        pcVar15 = pcVar15 + -1;\n        cVar3 = *pcVar1;\n      }\n      *pcVar15 = cVar3 + '\\x01';\n      pdVar9 = readdir(__dirp);\n      pvVar13 = pvVar11;\n      uVar6 = local_50;\n      bVar5 = bVar16;\n    }\n  } while( true );\n}\n\n", 
    "00105860": "\nbool FUN_00105860(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  char *pcVar3;\n  \n  pcVar3 = (char *)FUN_001057d0();\n  if (*pcVar3 == '\\0') {\n    pcVar3 = param_1;\n  }\n  lVar2 = FUN_00105830(pcVar3);\n  cVar1 = pcVar3[lVar2];\n  pcVar3[lVar2] = '\\0';\n  return cVar1 != '\\0';\n}\n\n", 
    "0010a960": "\nulong FUN_0010a960(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00112d58)();\n  return piVar1;\n}\n\n", 
    "001095f0": "\nvoid FUN_001095f0(char *param_1,uint *param_2)\n\n{\n  open(param_1,*param_2 & 0xffffff3c | 0xc2,0x180);\n  return;\n}\n\n", 
    "001029b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint rename(char *__old,char *__new)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_rename_00112f68)();\n  return iVar1;\n}\n\n", 
    "0010a0f0": "\nchar * FUN_0010a0f0(void)\n\n{\n  char *pcVar1;\n  int *piVar2;\n  \n  pcVar1 = getcwd((char *)0x0,0);\n  if (pcVar1 == (char *)0x0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a0b0();\n    }\n  }\n  return pcVar1;\n}\n\n", 
    "00106ae0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_00106ae0(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = FUN_00105cf0(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_00106b23;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_00106c5a;\nLAB_00106b74:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_00106b74;\nLAB_00106c5a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    FUN_00105bc0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_0010d1ec <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0010d1ec) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = FUN_00106680(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_00106b23:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108df0": "\nvoid FUN_00108df0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00108d20(0,param_1,param_2);\n  return;\n}\n\n", 
    "00108cd0": "\nvoid FUN_00108cd0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001087f0(param_1,param_2,0xffffffffffffffff,&DAT_00113260);\n  return;\n}\n\n", 
    "00109ee0": "\nvoid thunk_FUN_00109e90(void)\n\n{\n  FUN_00109e90();\n  return;\n}\n\n", 
    "00114100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114220": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __explicit_bzero_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109ca0": "\nvoid FUN_00109ca0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00109850();\n  return;\n}\n\n", 
    "0010a970": "\nuint FUN_0010a970(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00112d50)();\n  return;\n}\n\n", 
    "001029a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_00112f60)();\n  return pFVar1;\n}\n\n", 
    "00114108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109ef0": "\nvoid * FUN_00109ef0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010a0b0();\n  }\n  return pvVar1;\n}\n\n", 
    "00114110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106810": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00106810(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00105cf0(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010685e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    FUN_00105bc0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_001068ba;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_0010d1e8) {\n      if (_DAT_0010d1ec <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0010d1ec) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = FUN_00106680(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = FUN_00105cf0(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = FUN_00102a8f();\n          return uVar5;\n        }\n        goto LAB_001068ba;\n      }\n    }\n  }\n  else {\nLAB_001068ba:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010685e;\n    }\n    plVar3 = (long *)FUN_00105df0(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010685e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010685e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103100": "\n/* WARNING: Removing unreachable block (ram,0x00103124) */\n/* WARNING: Removing unreachable block (ram,0x00103130) */\n\nvoid FUN_00103100(void)\n\n{\n  return;\n}\n\n", 
    "00105760": "\nundefined * FUN_00105760(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_00105720();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n", 
    "00109090": "\nvoid FUN_00109090(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109080(0,param_1,param_2);\n  return;\n}\n\n", 
    "001029d0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00112f78)();\n  return;\n}\n\n", 
    "001028b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00112ee8)();\n  return iVar1;\n}\n\n", 
    "00102a10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00112f98)();\n  return;\n}\n\n", 
    "00114200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108ef0": "\nvoid FUN_00108ef0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106e80(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00108a10(puVar1,0x3a,1);\n  FUN_001087f0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010aad0": "\nulong FUN_0010aad0(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010a950": "\nulong FUN_0010a950(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00112fe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00112fe0)();\n  }\n  return;\n}\n\n", 
    "00105990": "\nvoid FUN_00105990(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_001059b0();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "001095e0": "\nvoid FUN_001095e0(char *param_1)\n\n{\n  mkdir(param_1,0x1c0);\n  return;\n}\n\n", 
    "0010b1d0": "\n/* WARNING: Type propagation algorithm not settling */\n\nvoid FUN_0010b1d0(__uid_t *param_1,size_t param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  ssize_t sVar2;\n  ulong uVar3;\n  __uid_t *p_Var4;\n  undefined *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  byte bVar8;\n  undefined local_58 [8];\n  __uid_t _Stack_50;\n  __uid_t _Stack_4c;\n  long local_40;\n  \n  bVar8 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    *param_1 = local_58._0_4_;\n    param_1[1] = local_58._4_4_;\n    param_1[2] = _Stack_50;\n    param_1[3] = _Stack_4c;\n    local_58._0_4_ = getpid();\n    uVar1 = 0;\n    do {\n      uVar7 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar7 + 0x10) = *(undefined *)((long)local_58 + uVar7);\n    } while (uVar1 < 4);\n    uVar7 = 0x14;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    sVar2 = read(__fd,param_1,param_2);\n    close(__fd);\n    if (0x7ff < sVar2) goto LAB_0010b23f;\n    if (sVar2 < 0) {\n      sVar2 = 0;\n    }\n    uVar7 = 0x800 - sVar2;\n    if (0x10 < uVar7) {\n      uVar7 = 0x10;\n    }\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    uVar3 = sVar2 + uVar7;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + sVar2);\n    for (uVar7 = uVar7 & 0xffffffff; uVar7 != 0; uVar7 = uVar7 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar3) goto LAB_0010b23f;\n    uVar6 = 0x800 - uVar3;\n    if (4 < uVar6) {\n      uVar6 = 4;\n    }\n    local_58._0_4_ = getpid();\n    uVar7 = uVar6 + uVar3;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + uVar3);\n    for (uVar6 = uVar6 & 0xffffffff; uVar6 != 0; uVar6 = uVar6 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar7) goto LAB_0010b23f;\n  }\n  uVar3 = 0x800 - uVar7;\n  if (4 < uVar3) {\n    uVar3 = 4;\n  }\n  local_58._0_4_ = getppid();\n  if ((uint)uVar3 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar6 + uVar7) = *(undefined *)((long)local_58 + uVar6);\n    } while (uVar1 < (uint)uVar3);\n  }\n  uVar3 = uVar3 + uVar7;\n  if (uVar3 < 0x800) {\n    uVar7 = 0x800 - uVar3;\n    if (4 < uVar7) {\n      uVar7 = 4;\n    }\n    local_58._0_4_ = getuid();\n    if ((uint)uVar7 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n      } while (uVar1 < (uint)uVar7);\n    }\n    uVar3 = uVar3 + uVar7;\n    if (uVar3 < 0x800) {\n      local_58._0_4_ = getgid();\n      uVar7 = 0x800 - uVar3;\n      if (4 < uVar7) {\n        uVar7 = 4;\n      }\n      if ((uint)uVar7 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n        } while (uVar1 < (uint)uVar7);\n      }\n    }\n  }\nLAB_0010b23f:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001028a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00112ee0)();\n  return pvVar1;\n}\n\n", 
    "0010b0b0": "\nvoid FUN_0010b0b0(ulong *param_1,void *param_2,ulong param_3)\n\n{\n  ulong *puVar1;\n  ulong uVar2;\n  void *pvVar3;\n  ulong *__src;\n  ulong uVar4;\n  \n  __src = param_1 + 0x104;\n  puVar1 = param_1 + 1;\n  uVar4 = *param_1;\n  pvVar3 = param_2;\n  if (param_3 <= uVar4) {\n    __src = (ulong *)((long)__src + (0x800 - uVar4));\nLAB_0010b170:\n    memcpy(param_2,__src,param_3);\n    *param_1 = uVar4 - param_3;\n    return;\n  }\n  while( true ) {\n    param_2 = (void *)((long)pvVar3 + uVar4);\n    param_3 = param_3 - uVar4;\n    memcpy(pvVar3,(void *)((0x800 - uVar4) + (long)__src),uVar4);\n    if (((ulong)param_2 & 7) == 0) break;\n    uVar4 = 0x800;\n    FUN_0010b580(puVar1,__src);\n    pvVar3 = param_2;\n    if (param_3 < 0x801) goto LAB_0010b16a;\n  }\n  uVar2 = (ulong)((uint)param_3 & 0x7ff);\n  uVar4 = param_3;\n  while (pvVar3 = (void *)((long)param_2 + (param_3 - uVar4)), uVar4 != uVar2) {\n    FUN_0010b580(puVar1,pvVar3);\n    uVar4 = uVar4 - 0x800;\n    if (uVar4 == 0) {\n      *param_1 = 0;\n      return;\n    }\n  }\n  FUN_0010b580(puVar1,__src);\n  param_3 = uVar2;\n  param_2 = pvVar3;\nLAB_0010b16a:\n  uVar4 = 0x800;\n  goto LAB_0010b170;\n}\n\n", 
    "00114208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001029c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_00112f70)();\n  return pDVar1;\n}\n\n", 
    "00104d00": "\nvoid FUN_00104d00(undefined8 param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00104a50(param_1,param_2,0);\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "00102a00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getppid_00112f90)();\n  return _Var1;\n}\n\n", 
    "00109ff0": "\nvoid FUN_00109ff0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109f60(param_1,param_2,1);\n  return;\n}\n\n", 
    "00114210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bcf0": "\nvoid FUN_0010bcf0(char *param_1,stat *param_2)\n\n{\n  __xstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "001071d0": "\nundefined8\nFUN_001071d0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00107120(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102670": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00112dc8)();\n  return;\n}\n\n", 
    "00102550": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00112ff0)();\n  return;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_00112e58)();\n  return sVar1;\n}\n\n", 
    "00106ce0": "\nulong FUN_00106ce0(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_0010ace0(*param_1);\n  return (uVar1 ^ param_1[1]) % param_2;\n}\n\n", 
    "0010a0b0": "\nvoid FUN_0010a0b0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00113020,0,&DAT_0010ddd7,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108ed0": "\nvoid FUN_00108ed0(undefined8 param_1)\n\n{\n  FUN_00108eb0(param_1,0x3a);\n  return;\n}\n\n", 
    "00105930": "\nulong FUN_00105930(long param_1,undefined8 param_2,undefined8 *param_3)\n\n{\n  ulong uVar1;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = 0;\n  if (param_1 != 0) {\n    local_20 = param_3[1];\n    local_18 = *param_3;\n    local_28 = param_2;\n    uVar1 = FUN_00106170(param_1,&local_28);\n    uVar1 = uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010bcc0": "\nvoid FUN_0010bcc0(void)\n\n{\n  return;\n}\n\n", 
    "0010aab0": "\nbool FUN_0010aab0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid rewinddir(DIR *__dirp)\n\n{\n  (*(code *)PTR_rewinddir_00112e50)();\n  return;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * opendir(char *__name)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_opendir_00112dc0)();\n  return pDVar1;\n}\n\n", 
    "00109080": "\nvoid FUN_00109080(void)\n\n{\n  FUN_001087f0();\n  return;\n}\n\n", 
    "00103f10": "\nvoid FUN_00103f10(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = DAT_00113148;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\n                      \"Usage: %s [OPTION]... [-T] TARGET LINK_NAME\\n  or:  %s [OPTION]... TARGET\\n  or:  %s [OPTION]... TARGET... DIRECTORY\\n  or:  %s [OPTION]... -t DIRECTORY TARGET...\\n\"\n                      ,5);\n    __printf_chk(1,uVar2,uVar4,uVar4,uVar4,uVar4);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"In the 1st form, create a link to TARGET with the name LINK_NAME.\\nIn the 2nd form, create a link to TARGET in the current directory.\\nIn the 3rd and 4th forms, create links to each TARGET in DIRECTORY.\\nCreate hard links by default, symbolic links with --symbolic.\\nBy default, each destination (name of new link) should not already exist.\\nWhen creating hard links, each TARGET must exist.  Symbolic links\\ncan hold arbitrary text; if later resolved, a relative link is\\ninterpreted in relation to its parent directory.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_001031b0();\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"      --backup[=CONTROL]      make a backup of each existing destination file\\n  -b                          like --backup but does not accept an argument\\n  -d, -F, --directory         allow the superuser to attempt to hard link\\n                                directories (note: will probably fail due to\\n                                system restrictions, even for the superuser)\\n  -f, --force                 remove existing destination files\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -i, --interactive           prompt whether to remove destinations\\n  -L, --logical               dereference TARGETs that are symbolic links\\n  -n, --no-dereference        treat LINK_NAME as a normal file if\\n                                it is a symbolic link to a directory\\n  -P, --physical              make hard links directly to symbolic links\\n  -r, --relative              create symbolic links relative to link location\\n  -s, --symbolic              make symbolic links instead of hard links\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -S, --suffix=SUFFIX         override the usual backup suffix\\n  -t, --target-directory=DIRECTORY  specify the DIRECTORY in which to create\\n                                the links\\n  -T, --no-target-directory   treat LINK_NAME as a normal file always\\n  -v, --verbose               print name of each linked file\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_001031e0();\n    uVar4 = dcgettext(0,\n                      \"\\nUsing -s ignores -L and -P.  Otherwise, the last option specified controls\\nbehavior when a TARGET is a symbolic link, defaulting to %s.\\n\"\n                      ,5);\n    __printf_chk(1,uVar4,&DAT_0010cebd);\n    FUN_00103c50();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00108ee0": "\nvoid FUN_00108ee0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108e20(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00109eb0": "\nvoid FUN_00109eb0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00109e90();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "0010aac0": "\nbool FUN_0010aac0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010bcd0": "\nvoid FUN_0010bcd0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00113008);\n  return;\n}\n\n", 
    "00105720": "\nvoid FUN_00105720(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_001057d0();\n  uVar3 = lVar2 - (long)param_1;\n  do {\n    if (uVar3 <= (cVar1 == '/')) {\n      return;\n    }\n    lVar2 = uVar3 - 1;\n    uVar3 = uVar3 - 1;\n  } while (param_1[lVar2] == '/');\n  return;\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00112dd8)();\n  return sVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00112d48)();\n  return;\n}\n\n", 
    "0010b4e0": "\nvoid FUN_0010b4e0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n", 
    "001061d0": "\nlong FUN_001061d0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00102a85();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00102a85();\n  return lVar1;\n}\n\n", 
    "00108eb0": "\nvoid FUN_00108eb0(undefined8 param_1,char param_2)\n\n{\n  FUN_00108e20(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_00112d40)();\n  return pcVar1;\n}\n\n", 
    "00105830": "\nvoid FUN_00105830(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00102680": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00112dd0)();\n  return;\n}\n\n", 
    "0010b4f0": "\nvoid FUN_0010b4f0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    FUN_0010b030();\n    return;\n  }\n  FUN_0010b0b0(param_1 + 3);\n  return;\n}\n\n", 
    "0010a1c0": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0010a1c0(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010a244;\n  }\n  if (DAT_00113298 < 0) {\n    iVar2 = FUN_0010a1c0(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_00113298 != -1)) goto LAB_0010a244;\nLAB_0010a281:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010a244;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_0010a1c0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010a244;\n        DAT_00113298 = -1;\n        __fd = iVar2;\n        goto LAB_0010a281;\n      }\n    }\n    DAT_00113298 = 1;\n  }\nLAB_0010a244:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109060": "\nvoid FUN_00109060(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00108f90(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001062e0": "\nlong FUN_001062e0(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "0010aaa0": "\nbool FUN_0010aaa0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "0010ace0": "\nulong FUN_0010ace0(char *param_1,ulong param_2)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  cVar1 = *param_1;\n  if (cVar1 != '\\0') {\n    uVar2 = 0;\n    do {\n      param_1 = param_1 + 1;\n      uVar2 = (uVar2 << 9 | uVar2 >> 0x37) + (long)cVar1;\n      cVar1 = *param_1;\n    } while (cVar1 != '\\0');\n    return uVar2 % param_2;\n  }\n  return 0;\n}\n\n", 
    "00105700": "\nvoid FUN_00105700(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00105760();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010a0b0();\n}\n\n", 
    "0010abc0": "\nint FUN_0010abc0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_0010ab80(*param_1);\n      bVar2 = FUN_0010ab80(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00102990": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00112f58)();\n  return iVar1;\n}\n\n", 
    "00102870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00112ec8)();\n  return iVar1;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00112e38)();\n  return pvVar1;\n}\n\n", 
    "00106dc0": "\nvoid FUN_00106dc0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_00113148 = pcVar1 + 1;\n    uVar3 = (long)DAT_00113148 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_0010d230;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_00113148;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_00113148 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00105cd0": "\nvoid FUN_00105cd0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00105df0": "\nvoid FUN_00105df0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "00109030": "\nvoid FUN_00109030(void)\n\n{\n  FUN_00108f90();\n  return;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00112e30)();\n  return;\n}\n\n", 
    "0010add0": "\nundefined8 FUN_0010add0(undefined8 *param_1)\n\n{\n  return *param_1;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_unlocked_00112da0)();\n  return sVar1;\n}\n\n", 
    "00104920": "\nvoid FUN_00104920(char *param_1,long param_2)\n\n{\n  undefined2 uVar1;\n  undefined2 *puVar2;\n  ulong uVar3;\n  int *piVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  puVar2 = (undefined2 *)FUN_001057d0();\n  uVar3 = FUN_00105830(puVar2);\n  if (0xe < uVar3) {\n    uVar1 = *puVar2;\n    *puVar2 = 0x2e;\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    uVar5 = pathconf(param_1,3);\n    if ((-1 < (long)uVar5) || (uVar6 = 0xff, *piVar4 == 0)) {\n      uVar6 = uVar5;\n    }\n    *puVar2 = uVar1;\n    if (uVar6 < uVar3) {\n      param_1 = param_1 + param_2;\n      if ((ulong)((long)param_1 - (long)puVar2) < uVar6) {\n        uVar6 = ((long)param_1 - (long)puVar2) + 1;\n      }\n      else {\n        param_1 = (char *)((long)puVar2 + (uVar6 - 1));\n      }\n      *param_1 = '~';\n      *(undefined *)((long)puVar2 + uVar6) = 0;\n      return;\n    }\n  }\n  return;\n}\n\n", 
    "00108a70": "\nvoid FUN_00108a70(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00113260;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00112f50)();\n  return iVar1;\n}\n\n", 
    "00102860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getgid_00112ec0)();\n  return _Var1;\n}\n\n", 
    "00106ed0": "\nbool FUN_00106ed0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0010abc0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00107070": "\nundefined8\nFUN_00107070(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106fe0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010b4d0": "\nvoid FUN_0010b4d0(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n", 
    "00109040": "\nvoid FUN_00109040(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00109030(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001030d0": "\n/* WARNING: Removing unreachable block (ram,0x001030e3) */\n/* WARNING: Removing unreachable block (ram,0x001030ef) */\n\nvoid FUN_001030d0(void)\n\n{\n  return;\n}\n\n", 
    "001063a0": "\nvoid FUN_001063a0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "001040a0": "\nvoid FUN_001040a0(char *param_1,int *param_2)\n\n{\n  linkat(*param_2,*(char **)(param_2 + 2),param_2[4],param_1,param_2[5]);\n  return;\n}\n\n", 
    "00102850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00112eb8)();\n  return iVar1;\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_gettimeofday_00112e28)();\n  return iVar1;\n}\n\n", 
    "0010aba0": "\nint FUN_0010aba0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010ade0": "\nulong FUN_0010ade0(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  undefined auVar8 [16];\n  undefined local_48 [8];\n  long local_40;\n  \n  uVar1 = param_2 + 1;\n  uVar6 = param_1[1];\n  uVar7 = param_1[2];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *param_1;\n  while( true ) {\n    uVar5 = uVar7;\n    uVar3 = uVar6;\n    if (uVar7 < param_2) {\n      do {\n        lVar4 = FUN_0010ad60(uVar5);\n        uVar5 = lVar4 + 0xffU;\n      } while (lVar4 + 0xffU < param_2);\n      FUN_0010b4f0(uVar2,local_48);\n      do {\n        auVar8 = FUN_0010ad60(uVar6);\n        uVar6 = (ulong)*SUB168(auVar8 >> 0x40,0) + SUB168(auVar8,0);\n        lVar4 = FUN_0010ad60(uVar7);\n        uVar7 = lVar4 + 0xff;\n        uVar3 = uVar6;\n      } while (uVar7 < param_2);\n    }\n    if (uVar7 == param_2) break;\n    uVar5 = (uVar7 - param_2) % uVar1;\n    uVar6 = uVar3 % uVar1;\n    if (uVar3 <= uVar7 - uVar5) {\n      param_1[1] = uVar3 / uVar1;\n      param_1[2] = (uVar7 - param_2) / uVar1;\nLAB_0010aed7:\n      if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      return uVar6;\n    }\n    uVar7 = uVar5 - 1;\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  uVar6 = uVar3;\n  goto LAB_0010aed7;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getpid_00112d98)();\n  return _Var1;\n}\n\n", 
    "00102890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00112ed8)();\n  return iVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00112e48)();\n  return iVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00112db8)();\n  return iVar1;\n}\n\n", 
    "00109e90": "\nvoid FUN_00109e90(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010a0b0();\n  }\n  return;\n}\n\n", 
    "001140e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105ab0": "\nulong FUN_00105ab0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "00105cf0": "\nlong FUN_00105cf0(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)FUN_00105b90();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_00105d91:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            FUN_00105cd0(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_00105d91;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        FUN_00105cd0(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010a4d0": "\nchar * FUN_0010a4d0(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n", 
    "001140e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001063d0": "\nvoid ** FUN_001063d0(undefined8 param_1,undefined *param_2,code *param_3,code *param_4,void *param_5\n                    )\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00105b60;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00105b80;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined *)0x0) {\n      param_2 = &DAT_0010d1c0;\n    }\n    __ptr[5] = param_2;\n    cVar1 = FUN_00105bc0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)FUN_00105c40(*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "001087f0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_001087f0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00113080;\n  if (DAT_00113078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010a0b0();\n    }\n    if (PTR_DAT_00113080 == &DAT_00113090) {\n      puVar8 = (undefined4 *)FUN_00109ef0(0);\n      uVar6 = PTR_DAT_00113098._4_4_;\n      uVar5 = PTR_DAT_00113098._0_4_;\n      uVar3 = _UNK_00113094;\n      PTR_DAT_00113080 = (undefined *)puVar8;\n      *puVar8 = _DAT_00113090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00109ef0(PTR_DAT_00113080);\n      PTR_DAT_00113080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00113078 * 4,0,(long)((param_1 + 1) - DAT_00113078) << 4);\n    DAT_00113078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00107630(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00113160) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00109e90(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00107630(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00102880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n  dirent *pdVar1;\n  \n  pdVar1 = (dirent *)(*(code *)PTR_readdir_00112ed0)();\n  return pdVar1;\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getcwd_00112e40)();\n  return pcVar1;\n}\n\n", 
    "00108a50": "\nundefined4 FUN_00108a50(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00113260;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong pathconf(char *__path,int __name)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_pathconf_00112db0)();\n  return lVar1;\n}\n\n", 
    "001140f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105bc0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00105bc0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0010d1c0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0010d1d4 < fVar1) && (fVar1 < DAT_0010d1d8)) && (_DAT_0010d1dc < pfVar2[3])) &&\n     (_DAT_0010d1e0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0010d1d4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0010d1e4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0010d1c0;\n  return 0;\n}\n\n", 
    "00106ef0": "\nundefined8 FUN_00106ef0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010ab40((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106ed0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "0010a3c0": "\nint FUN_0010a3c0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001140f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001040c0": "\nvoid * FUN_001040c0(void *param_1,void *param_2)\n\n{\n  ulong __size;\n  long lVar1;\n  undefined8 *puVar2;\n  \n  lVar1 = FUN_001057d0();\n  __size = (lVar1 - (long)param_1) + 9;\n  if ((0x100 < __size) && (param_2 = malloc(__size), param_2 == (void *)0x0)) {\n    return (void *)0x0;\n  }\n  puVar2 = (undefined8 *)mempcpy(param_2,param_1,lVar1 - (long)param_1);\n  *puVar2 = DAT_0010d078;\n  *(undefined *)(puVar2 + 1) = DAT_0010d080;\n  return param_2;\n}\n\n", 
    "001064e0": "\nvoid FUN_001064e0(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010657b;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010657b:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "00102630": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00112da8)();\n  return;\n}\n\n"
}