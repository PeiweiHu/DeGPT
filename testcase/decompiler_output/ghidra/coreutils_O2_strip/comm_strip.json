{
    "00105db0": "\nvoid FUN_00105db0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105da0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106510": "\nvoid FUN_00106510(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010656b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010656b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00106660(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_001064a0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00102390": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010ce58)();\n  return iVar1;\n}\n\n", 
    "001065b0": "\nvoid FUN_001065b0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00106440();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00102a30": "\n/* WARNING: Removing unreachable block (ram,0x00102a54) */\n/* WARNING: Removing unreachable block (ram,0x00102a60) */\n\nvoid FUN_00102a30(void)\n\n{\n  return;\n}\n\n", 
    "001070e0": "\nvoid FUN_001070e0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0010d008);\n  return;\n}\n\n", 
    "00105da0": "\nvoid FUN_00105da0(void)\n\n{\n  FUN_00105510();\n  return;\n}\n\n", 
    "00102380": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010ce50)();\n  return piVar1;\n}\n\n", 
    "00105770": "\nundefined4 FUN_00105770(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d220;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010ce38)();\n  return;\n}\n\n", 
    "0010e1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001065a0": "\nvoid FUN_001065a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106510(param_1,param_2,1);\n  return;\n}\n\n", 
    "001056f0": "\nundefined4 FUN_001056f0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d220;\n  }\n  return *param_1;\n}\n\n", 
    "001070d0": "\nvoid FUN_001070d0(void)\n\n{\n  return;\n}\n\n", 
    "00105dd0": "\nvoid FUN_00105dd0(undefined8 param_1)\n\n{\n  FUN_00105dc0(0,param_1);\n  return;\n}\n\n", 
    "00104350": "\nulong FUN_00104350(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_001047d7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001047f9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00104d96;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010474f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_001047d7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010474f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00104220(&DAT_00108811,param_5);\n      local_78 = (char *)FUN_00104220(&DAT_00108801);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_001044a0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00104d00_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00104c9b;\n          goto LAB_00104a8b;\n        default:\nswitchD_00104bb0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00106b10(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00104f88;\n              }\n              if (lVar10 == -2) goto joined_r0x0010539a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00104970;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00104f88;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00104711;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00104c58;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00104c58;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00104c58:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00104967;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00104954;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00104954:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104678;\n          goto LAB_00104967;\n        case 0x23:\n        case 0x7e:\nLAB_0010494b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00104954;\n          goto LAB_00104675;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00104bb0_caseD_25;\n        case 0x27:\nswitchD_00104bb0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104678;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010469b;\n          }\n          goto LAB_00104970;\n        case 0x3f:\nswitchD_00104bb0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001052fe_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104678;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010469b;\n          }\n          goto LAB_00104970;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_001045a8_caseD_5c;\n          if (!bVar20) {\nLAB_00104be8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00104c00;\n          }\n          goto LAB_00104970;\n        case 0x7b:\n        case 0x7d:\nswitchD_00104bb0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010494b;\nLAB_00104675:\n          bVar23 = false;\n          goto LAB_00104678;\n        }\nLAB_00104a80:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00104a8b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104698;\n          goto LAB_001045c0;\n        }\nLAB_00104ac0:\n        bVar21 = false;\n        goto joined_r0x00104ad1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00104ce0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_001045a8_caseD_0;\n          default:\n            goto switchD_00104bb0_caseD_1;\n          case 7:\n            goto switchD_00104d00_caseD_7;\n          case 8:\n            goto switchD_00104d00_caseD_8;\n          case 9:\n            goto switchD_001045a8_caseD_9;\n          case 10:\n            goto switchD_00104d00_caseD_a;\n          case 0xb:\n            goto switchD_00104d00_caseD_b;\n          case 0xc:\n            goto switchD_00104d00_caseD_c;\n          case 0xd:\n            goto switchD_00104d00_caseD_d;\n          case 0x20:\n            goto LAB_00104d29;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_001045a8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00104d11;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001045b8;\n          case 0x27:\n            goto switchD_00104bb0_caseD_27;\n          case 0x3f:\n            goto switchD_00104bb0_caseD_3f;\n          case 0x5c:\n            goto switchD_001045a8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00104bb0_caseD_7b;\n          }\n        }\n        goto LAB_0010497e;\n      }\nLAB_00104ce0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00104d00_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_001045a8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010469b;\n            }\nLAB_0010513b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010513b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105178;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010469b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00104970;\n      default:\n        bVar23 = false;\n        goto switchD_00104bb0_caseD_1;\n      case 7:\nswitchD_00104d00_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00104d00_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_001045a8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00104a80;\n      case 10:\nswitchD_00104d00_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00104ac0;\n      case 0xb:\nswitchD_00104d00_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00104ac0;\n      case 0xc:\nswitchD_00104d00_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00104d00_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00104ac0;\n      case 0x20:\n        bVar5 = false;\nLAB_00104d29:\n        uVar15 = 0x20;\n        goto LAB_001045b8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_001045a8_caseD_21:\n        bVar22 = false;\n        goto LAB_00104675;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00104d11:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104678;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001045c0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001045b8:\n        bVar22 = false;\n        goto LAB_001045c0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00104bb0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00104bb0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_001045a8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00104be8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00104a80;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00104bb0_caseD_7b;\n      }\n      if (bVar20) goto LAB_00104ae0;\n      bVar21 = false;\n      goto LAB_00104636;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00104967:\n      param_5 = 2;\nLAB_00104970:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010497e:\n      uVar13 = FUN_00104350(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_001049b8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105405:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001049b8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00104350(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001049b8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105405;\nLAB_00104d96:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001047f9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00104c9b:\n  uVar13 = uVar13 + 1;\n  goto LAB_001044a0;\nswitchD_001052fe_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105178:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010469b;\n    goto LAB_001045c0;\n  }\n  goto LAB_0010497e;\njoined_r0x0010539a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00104f88:\n  if (1 < uVar17) {\nLAB_00104f92:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00104970;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00104648;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00104c00;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00104711:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00104f92;\n  }\nswitchD_00104bb0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104678:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001045c0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010469b;\n  }\n  else {\nLAB_00104698:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010469b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00104c00:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00104648;\n    }\n  }\njoined_r0x00104ad1:\n  if (bVar20) {\nLAB_00104ae0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00104970;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00104636:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00104648:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_001044a0;\n}\n\n", 
    "00105cb0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105cb0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0010d220;\n  uStack_60 = uRam000000000010d228;\n  local_38 = DAT_0010d250;\n  local_58 = _DAT_0010d230;\n  uStack_50 = uRam000000000010d238;\n  local_48 = _DAT_0010d240;\n  uStack_40 = uRam000000000010d248;\n  FUN_00105790(&local_68);\n  FUN_00105510(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103bf0": "\nbool FUN_00103bf0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00106d70(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00106770": "\nundefined4 FUN_00106770(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00106f40();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_001066a0(*piVar2,param_1,param_2,param_3,param_4);\n  return uVar1;\n}\n\n", 
    "00107060": "\nvoid FUN_00107060(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001037a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = posix_fadvise(__fd,__offset,__len,__advise);\n  return iVar1;\n}\n\n", 
    "00105c00": "\nvoid FUN_00105c00(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105b40(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "001065d0": "\nvoid FUN_001065d0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106660();\n}\n\n", 
    "00106a90": "\nint FUN_00106a90(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00102600": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010cf90)();\n  return;\n}\n\n", 
    "00103930": "\nvoid FUN_00103930(undefined (*param_1) [16])\n\n{\n  *(undefined8 *)param_1[1] = 0;\n  *param_1 = (undefined  [16])0x0;\n  return;\n}\n\n", 
    "00105dc0": "\nvoid FUN_00105dc0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105da0(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00106640": "\nvoid FUN_00106640(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106610(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00104220": "\nchar * FUN_00104220(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00106e40();\n    iVar1 = FUN_00104170(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00104170(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_001087f9;\n      }\n      else {\n        pcVar2 = &DAT_001087f6;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_001087fd;\n    }\n    else {\n      pcVar2 = &DAT_001087f2;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00105790": "\nvoid FUN_00105790(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d220;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103490": "\nvoid FUN_00103490(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0010d118;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... FILE1 FILE2\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"Compare sorted files FILE1 and FILE2 line by line.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"\\nWhen FILE1 or FILE2 (not both) is -, read standard input.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nWith no options, produce three-column output.  Column one contains\\nlines unique to FILE1, column two contains lines unique to FILE2,\\nand column three contains lines common to both files.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\n  -1              suppress column 1 (lines unique to FILE1)\\n  -2              suppress column 2 (lines unique to FILE2)\\n  -3              suppress column 3 (lines that appear in both files)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\n  --check-order     check that the input is correctly sorted, even\\n                      if all input lines are pairable\\n  --nocheck-order   do not check that the input is correctly sorted\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"  --output-delimiter=STR  separate columns with STR\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"  --total           output a summary\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"  -z, --zero-terminated    line delimiter is NUL, not newline\\n\",5\n                              );\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nNote, comparisons honor the rules specified by \\'LC_COLLATE\\'.\\n\",\n                               5);\n    fputs_unlocked(pcVar4,pFVar1);\n    uVar2 = DAT_0010d118;\n    uVar3 = dcgettext(0,\n                      \"\\nExamples:\\n  %s -12 file1 file2  Print only lines present in both file1 and file2.\\n  %s -3 file1 file2  Print lines in file1 not in file2, and vice versa.\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    FUN_001031f0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001026a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined  [16] FUN_001026a0(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  char *pcVar5;\n  ulong uVar6;\n  byte bVar7;\n  undefined8 uStack_28;\n  \n  bVar7 = 0;\n  uVar6 = (ulong)param_1;\n  FUN_00103ae0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  DAT_0010d103 = FUN_00103880(3);\n  FUN_001070e0(FUN_001036f0);\n  DAT_0010d102 = 1;\n  DAT_0010d101 = 1;\n  DAT_0010d100 = 1;\n  DAT_0010d0ff = 0;\n  _DAT_0010d0fd = 0;\n  DAT_0010d0f8 = 0;\n  DAT_0010d0fc = 0;\n  while( true ) {\n    iVar2 = getopt_long(uVar6 & 0xffffffff,param_2,&DAT_001086e5,&PTR_s_check_order_0010cae0,0);\n    pcVar5 = optarg;\n    if (iVar2 == -1) {\n      if (DAT_0010d0f0 == 0) {\n        DAT_0010d0f0 = 1;\n      }\n      iVar2 = optind;\n      if (param_1 - optind < 2) goto LAB_00102983;\n      if (param_1 - optind == 2) {\n        FUN_00102c30(param_2 + optind);\n        if (DAT_0010d0fd == '\\0') {\n          uVar6 = (ulong)DAT_0010d0fe;\n        }\n        else {\n          uVar6 = 1;\n        }\n        return CONCAT88(uStack_28,uVar6);\n      }\n      uVar6 = FUN_00105dd0(param_2[(long)optind + 2]);\n      pcVar5 = \"extra operand %s\";\n      goto LAB_0010293d;\n    }\n    if (0x83 < iVar2) break;\n    if (iVar2 < 0x7a) {\n      if (iVar2 == 0x31) {\nLAB_001028c0:\n        DAT_0010d102 = 0;\n      }\n      else {\n        if (iVar2 < 0x32) {\n          if (iVar2 == -0x83) {\n            FUN_00106300(stdout,&DAT_0010861c,\"GNU coreutils\",PTR_DAT_0010d020,\"Richard M. Stallman\"\n                         ,\"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n            exit(0);\n          }\n          if (iVar2 == -0x82) {\n            FUN_00103490(0);\n            goto LAB_001028c0;\n          }\n          break;\n        }\n        if (iVar2 == 0x32) {\n          DAT_0010d101 = 0;\n        }\n        else {\n          if (iVar2 != 0x33) break;\n          DAT_0010d100 = 0;\n        }\n      }\n    }\n    else {\n      switch(iVar2) {\n      case 0x7a:\n        DAT_0010d010 = 0;\n        break;\n      default:\n        goto switchD_00102794_caseD_7b;\n      case 0x80:\n        DAT_0010d0f8 = 1;\n        break;\n      case 0x81:\n        DAT_0010d0f8 = 2;\n        break;\n      case 0x82:\n        if ((DAT_0010d0f0 != 0) && (iVar2 = strcmp(PTR_DAT_0010d018,optarg), iVar2 != 0))\n        goto LAB_0010295f;\n        DAT_0010d0f0 = 1;\n        PTR_DAT_0010d018 = pcVar5;\n        if (*pcVar5 != '\\0') {\n          uVar4 = 0xffffffffffffffff;\n          do {\n            if (uVar4 == 0) break;\n            uVar4 = uVar4 - 1;\n            cVar1 = *pcVar5;\n            pcVar5 = pcVar5 + (ulong)bVar7 * -2 + 1;\n          } while (cVar1 != '\\0');\n          DAT_0010d0f0 = ~uVar4 - 1;\n        }\n        break;\n      case 0x83:\n        DAT_0010d0fc = 1;\n      }\n    }\n  }\nswitchD_00102794_caseD_7b:\n  do {\n    while( true ) {\n      FUN_00103490(1);\nLAB_0010295f:\n      uVar3 = dcgettext(0,\"multiple output delimiters specified\",5);\n      iVar2 = error(1,0,uVar3);\nLAB_00102983:\n      if (iVar2 < (int)uVar6) break;\n      uVar3 = dcgettext(0,\"missing operand\",5);\n      error(0,0,uVar3);\n    }\n    uVar6 = FUN_00105dd0(param_2[uVar6 - 1]);\n    pcVar5 = \"missing operand after %s\";\nLAB_0010293d:\n    uVar3 = dcgettext(0,pcVar5,5);\n    error(0,0,uVar3,uVar6);\n  } while( true );\n}\n\n", 
    "001064a0": "\nvoid * FUN_001064a0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106660();\n  }\n  return pvVar1;\n}\n\n", 
    "001070f4": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00106830": "\nint FUN_00106830(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010689f;\n    }\n    iVar1 = FUN_00106a50(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010689f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010cf58)();\n  return pvVar1;\n}\n\n", 
    "00103ef0": "\nundefined8\nFUN_00103ef0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103e40(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010cec8)();\n  return pcVar1;\n}\n\n", 
    "00102350": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010cff0)();\n  return;\n}\n\n", 
    "00106270": "\nvoid FUN_00106270(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00105e00();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102c30": "\nvoid FUN_00102c30(FILE *param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  char *pcVar3;\n  ulong uVar4;\n  ulong uVar5;\n  bool bVar6;\n  undefined *puVar7;\n  uint uVar8;\n  uint uVar9;\n  int iVar10;\n  FILE *__stream;\n  long lVar11;\n  long lVar12;\n  undefined8 uVar13;\n  undefined8 uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  int *piVar17;\n  int iVar18;\n  ulong uVar19;\n  undefined *puVar20;\n  undefined *puVar21;\n  long lVar22;\n  uint *puVar23;\n  FILE *__stream_00;\n  long *plVar24;\n  long in_FS_OFFSET;\n  int local_238;\n  long local_210;\n  long local_208;\n  long local_200;\n  int local_1f4;\n  char acStack_1da [2];\n  long local_1d8 [2];\n  FILE *local_1c8 [2];\n  uint local_1b8 [8];\n  long local_198 [20];\n  undefined local_f8 [96];\n  undefined local_98 [32];\n  undefined local_78 [32];\n  undefined local_58 [24];\n  long local_40;\n  \n  lVar22 = 0;\n  puVar20 = local_f8;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  puVar23 = local_1b8;\n  __stream_00 = param_1;\n  while( true ) {\n    puVar21 = puVar20 + -0x60;\n    plVar24 = local_198 + lVar22 * 4;\n    do {\n      FUN_00103930(puVar21);\n      *plVar24 = (long)puVar21;\n      puVar21 = puVar21 + 0x18;\n      plVar24 = plVar24 + 1;\n    } while (puVar21 != puVar20);\n    pcVar3 = *(char **)__stream_00;\n    *puVar23 = 0;\n    puVar23[1] = 0;\n    cVar1 = *pcVar3;\n    puVar23[2] = 0;\n    if ((cVar1 != '-') || (__stream = stdin, pcVar3[1] != '\\0')) {\n      __stream = (FILE *)FUN_001037e0(pcVar3,\"r\");\n    }\n    local_1c8[lVar22] = __stream;\n    if (__stream == (FILE *)0x0) goto LAB_001031b1;\n    FUN_001037b0(__stream,2);\n    local_238 = (int)lVar22;\n    lVar11 = FUN_00103950(local_198[(long)local_238 * 4],__stream,(int)DAT_0010d010);\n    local_1d8[lVar22] = lVar11;\n    local_1f4 = ferror_unlocked(__stream);\n    if (local_1f4 != 0) goto LAB_00103140;\n    __stream_00 = (FILE *)&__stream_00->_IO_read_ptr;\n    puVar23 = puVar23 + 3;\n    puVar20 = puVar20 + 0x60;\n    if (lVar22 == 1) break;\n    lVar22 = 1;\n  }\n  local_200 = 0;\n  local_210 = 0;\n  local_208 = 0;\n  do {\n    lVar11 = local_1d8[1];\n    lVar22 = local_1d8[0];\n    if (local_1d8[0] == 0) {\n      if (local_1d8[1] == 0) {\n        iVar10 = FUN_00106830(local_1c8[0]);\n        if (iVar10 != 0) goto LAB_00103177;\n        iVar10 = FUN_00106830(local_1c8[1]);\n        cVar1 = DAT_0010d010;\n        if (iVar10 != 0) goto LAB_0010316f;\n        if (DAT_0010d0fc != '\\0') {\n          uVar16 = dcgettext(0,\"total\",5);\n          puVar20 = PTR_DAT_0010d018;\n          uVar13 = FUN_001038d0(local_200,local_58);\n          puVar21 = PTR_DAT_0010d018;\n          uVar14 = FUN_001038d0(local_210,local_78);\n          puVar7 = PTR_DAT_0010d018;\n          uVar15 = FUN_001038d0(local_208,local_98);\n          __printf_chk(1,\"%s%s%s%s%s%s%s%c\",uVar15,puVar7,uVar14,puVar21,uVar13,puVar20,uVar16,cVar1\n                      );\n        }\n        if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return;\n        }\n        goto LAB_001031e0;\n      }\nLAB_00102f7f:\n      DAT_0010d0ff = 1;\n      local_210 = local_210 + 1;\n      FUN_00102ac0(lVar11 + 8,lVar11 + 0x10,stdout,2);\n      acStack_1da[1] = '\\x01';\n      bVar6 = false;\n    }\n    else {\n      acStack_1da[1] = '\\0';\n      if (local_1d8[1] == 0) {\nLAB_00102fb6:\n        DAT_0010d0ff = 1;\n        local_208 = local_208 + 1;\n        FUN_00102ac0(lVar22 + 8,lVar22 + 0x10,stdout,1);\n      }\n      else {\n        uVar4 = *(ulong *)(local_1d8[1] + 8);\n        uVar5 = *(ulong *)(local_1d8[0] + 8);\n        if (DAT_0010d103 == '\\0') {\n          uVar19 = uVar5;\n          if (uVar4 <= uVar5) {\n            uVar19 = uVar4;\n          }\n          uVar8 = memcmp(*(void **)(local_1d8[0] + 0x10),*(void **)(local_1d8[1] + 0x10),uVar19 - 1)\n          ;\n          if (uVar8 == 0) {\n            if (uVar5 < uVar4) goto LAB_00102fb6;\n            uVar8 = (uint)(uVar4 != uVar5);\n            goto LAB_00102e22;\n          }\nLAB_00102fdf:\n          if (0 < (int)uVar8) goto LAB_00102f7f;\n          goto LAB_00102fb6;\n        }\n        uVar8 = FUN_00106770(*(void **)(local_1d8[0] + 0x10),uVar5 - 1,\n                             *(void **)(local_1d8[1] + 0x10),uVar4 - 1);\nLAB_00102e22:\n        if (uVar8 != 0) goto LAB_00102fdf;\n        local_200 = local_200 + 1;\n        FUN_00102ac0(lVar11 + 8,lVar11 + 0x10,stdout,3);\n        acStack_1da[1] = '\\x01';\n      }\n      bVar6 = true;\n    }\n    lVar22 = 0;\n    iVar10 = 0;\n    puVar23 = local_1b8;\n    if (bVar6) goto LAB_00102e80;\n    while (puVar23 = puVar23 + 3, lVar22 != 1) {\n      lVar22 = 1;\n      iVar10 = 1;\n      if (acStack_1da[1] != '\\0') {\nLAB_00102e80:\n        uVar8 = *puVar23;\n        uVar2 = puVar23[1];\n        lVar11 = lVar22 * 4;\n        iVar18 = (int)DAT_0010d010;\n        puVar23[2] = uVar2;\n        uVar9 = uVar8 + 1 & 3;\n        __stream_00 = local_1c8[lVar22];\n        puVar23[1] = uVar8;\n        *puVar23 = uVar9;\n        lVar12 = FUN_00103950(local_198[(int)uVar9 + lVar11],__stream_00,iVar18);\n        local_1d8[lVar22] = lVar12;\n        if (lVar12 == 0) {\n          lVar12 = local_198[(int)uVar2 + lVar11];\n          if (*(long *)(lVar12 + 0x10) != 0) {\n            FUN_00102b80(lVar12 + 8,lVar12 + 0x10,local_198[(int)uVar8 + lVar11] + 8,\n                         local_198[(int)uVar8 + lVar11] + 0x10,iVar10 + 1);\n          }\n        }\n        else {\n          FUN_00102b80(local_198[lVar11 + (int)uVar8] + 8,local_198[lVar11 + (int)uVar8] + 0x10,\n                       lVar12 + 8,lVar12 + 0x10,iVar10 + 1);\n        }\n        iVar18 = ferror_unlocked(__stream_00);\n        if (iVar18 != 0) {\n          uVar16 = FUN_00105c10(0,3,*(undefined8 *)(&param_1->_flags + (long)iVar10 * 2));\n          piVar17 = __errno_location();\n          error(1,*piVar17,\"%s\",uVar16);\n          goto LAB_00103140;\n        }\n        acStack_1da[lVar22] = '\\0';\n      }\n    }\n  } while( true );\nLAB_00103140:\n  uVar16 = FUN_00105c10(0,3,*(char **)__stream_00);\n  piVar17 = __errno_location();\n  error(1,*piVar17,\"%s\",uVar16);\nLAB_0010316f:\n  local_1f4 = 1;\nLAB_00103177:\n  uVar16 = FUN_00105c10(0,3,*(undefined8 *)(&param_1->_flags + (long)local_1f4 * 2));\n  piVar17 = __errno_location();\n  error(1,*piVar17,\"%s\",uVar16);\nLAB_001031b1:\n  uVar16 = FUN_00105c10(0,3,*(char **)__stream_00);\n  piVar17 = __errno_location();\n  error(1,*piVar17,\"%s\",uVar16);\nLAB_001031e0:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103e40": "\nundefined8\nFUN_00103e40(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103d90(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001023f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ce88)();\n  return iVar1;\n}\n\n", 
    "0010e080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a30": "\nvoid FUN_00106a30(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_00106a90(param_1,0,1);\n  return;\n}\n\n", 
    "00106c70": "\nbool FUN_00106c70(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010e088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105730": "\nuint FUN_00105730(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d220;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00105850": "\nundefined8 FUN_00105850(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0010d220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00104350(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00106440(lVar3 + 1);\n  FUN_00104350(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_0010cf50)();\n  return sVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010cec0)();\n  return sVar1;\n}\n\n", 
    "00106bf0": "\nbool FUN_00106bf0(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0010268f": "\nvoid FUN_0010268f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104080": "\nundefined8\nFUN_00104080(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103fb0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010268a": "\nvoid FUN_0010268a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001056b0": "\nvoid FUN_001056b0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d220;\n  }\n  FUN_00106610(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001068c0": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_001068c0(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00106944;\n  }\n  if (DAT_0010d258 < 0) {\n    iVar2 = FUN_001068c0(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_0010d258 != -1)) goto LAB_00106944;\nLAB_00106981:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00106944;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_001068c0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00106944;\n        DAT_0010d258 = -1;\n        __fd = iVar2;\n        goto LAB_00106981;\n      }\n    }\n    DAT_0010d258 = 1;\n  }\nLAB_00106944:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001057d0": "\nvoid FUN_001057d0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0010d220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00104350(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "0010e090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ce80)();\n  return;\n}\n\n", 
    "00106c60": "\nbool FUN_00106c60(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010e098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106610": "\nvoid FUN_00106610(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00106440(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010ced8)();\n  return pvVar1;\n}\n\n", 
    "00102370": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010ce48)();\n  return;\n}\n\n", 
    "00102ac0": "\nvoid FUN_00102ac0(size_t *param_1,void **param_2,FILE *param_3,int param_4)\n\n{\n  if (param_4 == 2) {\n    if (DAT_0010d101 == '\\0') {\n      return;\n    }\n    if (DAT_0010d102 == '\\0') goto LAB_00102af2;\n  }\n  else {\n    if (param_4 != 3) {\n      if (DAT_0010d102 == '\\0') {\n        return;\n      }\n      goto LAB_00102af2;\n    }\n    if (DAT_0010d100 == '\\0') {\n      return;\n    }\n    if (DAT_0010d102 != '\\0') {\n      fwrite_unlocked(PTR_DAT_0010d018,1,DAT_0010d0f0,param_3);\n    }\n    if (DAT_0010d101 == '\\0') goto LAB_00102af2;\n  }\n  fwrite_unlocked(PTR_DAT_0010d018,1,DAT_0010d0f0,param_3);\nLAB_00102af2:\n  fwrite_unlocked(*param_2,1,*param_1,param_3);\n  return;\n}\n\n", 
    "001029d0": "\nvoid FUN_001029d0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010cfd8)\n            (FUN_001026a0,unaff_retaddr,&stack0x00000008,FUN_00107060,FUN_001070d0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010e060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105e00": "\nundefined8\nFUN_00105e00(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00108f3b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001060c9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_001060c9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010616b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010616b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00105f1d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00105f1d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "001067d0": "\nundefined4 FUN_001067d0(undefined8 param_1,long param_2,undefined8 param_3,long param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00106ff0();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_001066a0(*piVar2,param_1,param_2 + -1,param_3,param_4 + -1);\n  return uVar1;\n}\n\n", 
    "0010e180": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a50": "\nvoid FUN_00106a50(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00106a30(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0010e188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105510": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00105510(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0010d080;\n  if (DAT_0010d078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00106660();\n    }\n    if (PTR_DAT_0010d080 == &DAT_0010d090) {\n      puVar8 = (undefined4 *)FUN_001064a0(0);\n      uVar6 = PTR_DAT_0010d098._4_4_;\n      uVar5 = PTR_DAT_0010d098._0_4_;\n      uVar3 = _UNK_0010d094;\n      PTR_DAT_0010d080 = (undefined *)puVar8;\n      *puVar8 = _DAT_0010d090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_001064a0(PTR_DAT_0010d080);\n      PTR_DAT_0010d080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0010d078 * 4,0,(long)((param_1 + 1) - DAT_0010d078) << 4);\n    DAT_0010d078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00104350(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0010d120) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00106440(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00104350(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010cfe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010cfe0)();\n  }\n  return;\n}\n\n", 
    "00102ab0": "\nvoid thunk_FUN_00102a30(void)\n\n{\n  FUN_00102a30();\n  return;\n}\n\n", 
    "00103ba0": "\nint * FUN_00103ba0(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010ced0)();\n  return _Var1;\n}\n\n", 
    "00102360": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010ce40)();\n  return;\n}\n\n", 
    "00103c10": "\nundefined8 FUN_00103c10(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103bf0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "001066a0": "\nvoid FUN_001066a0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  uVar1 = dcgettext(0,\"string comparison failed\",5);\n  error(0,param_1,uVar1);\n  uVar1 = dcgettext(0,\"Set LC_ALL=\\'C\\' to work around the problem.\",5);\n  error(0,0,uVar1);\n  uVar1 = FUN_00105aa0(1,8,param_4,param_5);\n  uVar2 = FUN_00105aa0(0,8,param_2,param_3);\n  uVar3 = dcgettext(0,\"The strings compared were %s and %s.\",5);\n  error(DAT_0010d028,0,uVar3,uVar2,uVar1);\n  return;\n}\n\n", 
    "00102a00": "\n/* WARNING: Removing unreachable block (ram,0x00102a13) */\n/* WARNING: Removing unreachable block (ram,0x00102a1f) */\n\nvoid FUN_00102a00(void)\n\n{\n  return;\n}\n\n", 
    "0010e190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106c80": "\nulong FUN_00106c80(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010e198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010cfc8)();\n  return ppuVar1;\n}\n\n", 
    "0010e0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010cf38)();\n  return pcVar1;\n}\n\n", 
    "00103880": "\nbool FUN_00103880(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00105940": "\nvoid FUN_00105940(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105850(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010cea8)();\n  return sVar1;\n}\n\n", 
    "00104170": "\nundefined8\nFUN_00104170(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00104080(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00105bf0": "\nvoid FUN_00105bf0(undefined8 param_1)\n\n{\n  FUN_00105bd0(param_1,0x3a);\n  return;\n}\n\n", 
    "0010e0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0010cf88)();\n  return pFVar1;\n}\n\n", 
    "001036e0": "\nvoid FUN_001036e0(undefined param_1)\n\n{\n  DAT_0010d108 = param_1;\n  return;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010cef8)();\n  return iVar1;\n}\n\n", 
    "0010e160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023b0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ce68)();\n  return;\n}\n\n", 
    "0010e040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106b10": "\nsize_t FUN_00106b10(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00103880(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105b40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105b40(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0010d220;\n  uStack_40 = uRam000000000010d228;\n  local_38 = _DAT_0010d230;\n  uStack_30 = uRam000000000010d238;\n  local_28 = _DAT_0010d240;\n  uStack_20 = uRam000000000010d248;\n  local_18 = DAT_0010d250;\n  FUN_00105730(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00105510(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105a20": "\nvoid FUN_00105a20(undefined8 param_1)\n\n{\n  FUN_001059f0(0,param_1);\n  return;\n}\n\n", 
    "00106d50": "\nint FUN_00106d50(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00105d80": "\nvoid FUN_00105d80(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00105cb0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010e168": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a80": "\nvoid FUN_00103a80(long param_1)\n\n{\n  free(*(void **)(param_1 + 0x10));\n  return;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_feof_unlocked_0010cfc0)();\n  return iVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010cf30)();\n  return iVar1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010cea0)();\n  return sVar1;\n}\n\n", 
    "00106cd0": "\nbool FUN_00106cd0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00106460": "\nvoid FUN_00106460(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00106440();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106660();\n}\n\n", 
    "0010e170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010cf80)();\n  return iVar1;\n}\n\n", 
    "0010e050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010cef0)();\n  return iVar1;\n}\n\n", 
    "001036d0": "\nvoid FUN_001036d0(undefined8 param_1)\n\n{\n  DAT_0010d110 = param_1;\n  return;\n}\n\n", 
    "001023a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ce60)();\n  return;\n}\n\n", 
    "00105a10": "\nvoid FUN_00105a10(void)\n\n{\n  FUN_00105510();\n  return;\n}\n\n", 
    "00106c20": "\nulong FUN_00106c20(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00103a70": "\nvoid FUN_00103a70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00103950(param_1,param_2,10);\n  return;\n}\n\n", 
    "0010e178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102410": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ce98)();\n  return;\n}\n\n", 
    "00103fb0": "\nundefined8\nFUN_00103fb0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103ef0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102450": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010ceb8)();\n  return;\n}\n\n", 
    "00102694": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_00105ea8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102570": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010cf48)();\n  return;\n}\n\n", 
    "00106250": "\nvoid FUN_00106250(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00105e00();\n  return;\n}\n\n", 
    "00106490": "\nvoid thunk_FUN_00106440(void)\n\n{\n  FUN_00106440();\n  return;\n}\n\n", 
    "0010e0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d00": "\nundefined8 FUN_00103d00(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103c70(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "001023d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0010ce78)();\n  return iVar1;\n}\n\n", 
    "0010e140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010cf08)();\n  return pvVar1;\n}\n\n", 
    "00106c50": "\nbool FUN_00106c50(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00105a40": "\nvoid FUN_00105a40(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103ba0(auStack_58);\n  FUN_00105510(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106d70": "\nint FUN_00106d70(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00106d30(*param_1);\n      bVar2 = FUN_00106d30(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010e148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102685": "\nvoid switchD_001043ef::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105710": "\nvoid FUN_00105710(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d220;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcoll_0010cf40)();\n  return iVar1;\n}\n\n", 
    "00105950": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105950(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0010d080;\n  if (1 < DAT_0010d078) {\n    ppvVar2 = (void **)(PTR_DAT_0010d080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0010d080 + (ulong)(DAT_0010d078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0010d120) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0010d098 = &DAT_0010d120;\n    _DAT_0010d090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0010d090) {\n    free(__ptr_00);\n    PTR_DAT_0010d080 = &DAT_0010d090;\n  }\n  DAT_0010d078 = 1;\n  return;\n}\n\n", 
    "00102440": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010ceb0)();\n  return;\n}\n\n", 
    "0010e0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102680": "\nvoid FUN_00102680(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106bd0": "\nbool FUN_00106bd0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106cf0": "\nbool FUN_00106cf0(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010e0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010cf00)();\n  return iVar1;\n}\n\n", 
    "001023c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getc_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getc_unlocked_0010ce70)();\n  return iVar1;\n}\n\n", 
    "001036f0": "\nvoid FUN_001036f0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00106dd0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0010d108 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0010d110 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00105bf0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00103778;\n    }\n  }\n  iVar1 = FUN_00106dd0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00103778:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0010d028);\n}\n\n", 
    "0010e150": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001059f0": "\nvoid FUN_001059f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105510(param_1,param_2,0xffffffffffffffff,&DAT_0010d220);\n  return;\n}\n\n", 
    "0010e030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a30": "\nvoid FUN_00105a30(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105a10(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106c40": "\nbool FUN_00106c40(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00106e80": "\nint FUN_00106e80(char *param_1,long param_2,char *param_3,long param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  \n  piVar2 = __errno_location();\n  while( true ) {\n    *piVar2 = 0;\n    iVar1 = strcoll(param_1,param_3);\n    if (iVar1 != 0) {\n      return iVar1;\n    }\n    sVar3 = strlen(param_1);\n    sVar4 = strlen(param_3);\n    param_1 = param_1 + sVar3 + 1;\n    param_3 = param_3 + sVar4 + 1;\n    param_4 = param_4 - (sVar4 + 1);\n    param_2 = param_2 - (sVar3 + 1);\n    if (param_2 == 0) break;\n    if (param_4 == 0) {\n      return 1;\n    }\n  }\n  return -(uint)(param_4 != 0);\n}\n\n", 
    "00103a90": "\nuint FUN_00103a90(void *param_1,ulong param_2,void *param_3,ulong param_4)\n\n{\n  uint uVar1;\n  ulong __n;\n  \n  __n = param_4;\n  if (param_2 <= param_4) {\n    __n = param_2;\n  }\n  uVar1 = memcmp(param_1,param_3,__n);\n  if (uVar1 == 0) {\n    if (param_2 < param_4) {\n      uVar1 = 0xffffffff;\n    }\n    else {\n      uVar1 = (uint)(param_2 >= param_4 && param_2 != param_4);\n    }\n  }\n  return uVar1;\n}\n\n", 
    "0010e158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getc_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010cf68)();\n  return pcVar1;\n}\n\n", 
    "0010e0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001063b0": "\nvoid FUN_001063b0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010e0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102a70": "\nvoid FUN_00102a70(void)\n\n{\n  if (DAT_0010d0e8 == '\\0') {\n    if (PTR___cxa_finalize_0010cff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0010d008);\n    }\n    FUN_00102a00();\n    DAT_0010d0e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010cfa0)();\n  return sVar1;\n}\n\n", 
    "00103950": "\nlong * FUN_00103950(long *param_1,FILE *param_2,uint param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  char *pcVar4;\n  char *pcVar5;\n  char cVar6;\n  char *pcVar7;\n  uint uVar8;\n  \n  cVar6 = (char)param_3;\n  pcVar4 = (char *)param_1[2];\n  pcVar7 = pcVar4 + *param_1;\n  iVar2 = feof_unlocked(param_2);\n  pcVar5 = pcVar4;\n  if (iVar2 != 0) {\n    return (long *)0x0;\n  }\n  do {\n    uVar3 = getc_unlocked(param_2);\n    if (uVar3 == 0xffffffff) {\n      if (pcVar4 == pcVar5) {\n        return (long *)0x0;\n      }\n      iVar2 = ferror_unlocked(param_2);\n      if (iVar2 != 0) {\n        return (long *)0x0;\n      }\n      if (pcVar5[-1] == cVar6) goto LAB_00103a44;\n      if (pcVar5 != pcVar7) {\n        *pcVar5 = cVar6;\n        pcVar5 = pcVar5 + 1;\n        goto LAB_00103a44;\n      }\n      uVar3 = (int)cVar6;\n      uVar8 = param_3 & 0xff;\nLAB_001039ec:\n      lVar1 = *param_1;\n      pcVar4 = (char *)FUN_001065a0(pcVar4,param_1);\n      pcVar5 = pcVar4 + lVar1;\n      param_1[2] = (long)pcVar4;\n      pcVar7 = pcVar4 + *param_1;\n      uVar8 = uVar8 & 0xff;\n    }\n    else {\n      uVar8 = uVar3;\n      if (pcVar5 == pcVar7) goto LAB_001039ec;\n    }\n    *pcVar5 = (char)uVar8;\n    pcVar5 = pcVar5 + 1;\n    if ((int)cVar6 == uVar3) {\nLAB_00103a44:\n      param_1[1] = (long)pcVar5 - (long)pcVar4;\n      return param_1;\n    }\n  } while( true );\n}\n\n", 
    "0010e120": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0010cf10)();\n  return iVar1;\n}\n\n", 
    "0010e000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106300": "\nvoid FUN_00106300(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106270();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ae0": "\nvoid FUN_00103ae0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0010d118 = pcVar1 + 1;\n    uVar3 = (long)DAT_0010d118 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0010d118;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0010d118 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00105de0": "\nvoid FUN_00105de0(undefined8 param_1)\n\n{\n  FUN_001068c0(param_1,0,3);\n  return;\n}\n\n", 
    "00106ff0": "\nundefined8 FUN_00106ff0(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_2 == param_4) {\n    iVar1 = memcmp(param_1,param_3,param_2);\n    if (iVar1 == 0) {\n      piVar2 = __errno_location();\n      *piVar2 = 0;\n      return 0;\n    }\n  }\n  uVar3 = FUN_00106e80(param_1,param_2,param_3,param_4);\n  return uVar3;\n}\n\n", 
    "00106660": "\nvoid FUN_00106660(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0010d028,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037b0": "\nvoid FUN_001037b0(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0010cf60)();\n  return pFVar1;\n}\n\n", 
    "001038d0": "\nchar * FUN_001038d0(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "00105c10": "\nvoid FUN_00105c10(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103ba0(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00105730(puVar1,0x3a,1);\n  FUN_00105510(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106d00": "\nulong FUN_00106d00(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00106f40": "\nundefined4 FUN_00106f40(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined uVar3;\n  undefined uVar4;\n  int iVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  \n  if ((param_2 == param_4) && (iVar5 = memcmp(param_1,param_3,param_2), iVar5 == 0)) {\n    piVar7 = __errno_location();\n    *piVar7 = 0;\n    return 0;\n  }\n  puVar1 = (undefined *)((long)param_1 + param_2);\n  puVar2 = (undefined *)((long)param_3 + param_4);\n  uVar3 = *puVar1;\n  uVar4 = *puVar2;\n  *puVar1 = 0;\n  *puVar2 = 0;\n  uVar6 = FUN_00106e80(param_1,param_2 + 1,param_3,param_4 + 1);\n  *puVar1 = uVar3;\n  *puVar2 = uVar4;\n  return uVar6;\n}\n\n", 
    "0010e0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c70": "\nundefined8 FUN_00103c70(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103c10(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00103d90": "\nundefined8\nFUN_00103d90(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103d00(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00102b80": "\nvoid FUN_00102b80(long *param_1,undefined8 *param_2,long *param_3,undefined8 *param_4,int param_5)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  if (DAT_0010d0f8 != 2) {\n    if (((DAT_0010d0f8 == 1) || (DAT_0010d0ff != '\\0')) && ((&DAT_0010d0fd)[param_5 + -1] == '\\0'))\n    {\n      if (DAT_0010d103 == '\\0') {\n        iVar1 = FUN_00103a90();\n      }\n      else {\n        iVar1 = FUN_00106770(*param_2,*param_1 + -1,*param_4,*param_3 + -1);\n      }\n      if (0 < iVar1) {\n        uVar2 = dcgettext(0,\"file %d is not in sorted order\",5);\n        error(DAT_0010d0f8 == 1,0,uVar2,param_5);\n        (&DAT_0010d0fd)[param_5 + -1] = 1;\n      }\n    }\n    return;\n  }\n  return;\n}\n\n", 
    "001031f0": "\nvoid FUN_001031f0(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  long lVar4;\n  undefined **ppuVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  undefined1 *puVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar7 = (byte *)0x10869b;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_00108621;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar5 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar7 == (byte *)0x0;\n    if (bVar10) break;\n    lVar4 = 5;\n    pbVar6 = &DAT_0010861c;\n    do {\n      if (lVar4 == 0) break;\n      lVar4 = lVar4 + -1;\n      bVar9 = *pbVar6 < *pbVar7;\n      bVar10 = *pbVar6 == *pbVar7;\n      pbVar6 = pbVar6 + 1;\n      pbVar7 = pbVar7 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar7 = *(byte **)((long)ppuVar5 + 0x20);\n    ppuVar5 = (undefined **)((long)ppuVar5 + 0x10);\n  }\n  puVar8 = *(undefined1 **)((long)ppuVar5 + 0x18);\n  if (puVar8 == (undefined1 *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar8 = &DAT_0010861c;\n        goto LAB_0010340e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar8 = &DAT_0010861c;\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_0010861c);\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010340e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,&DAT_0010861c);\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_0010861c);\n    if (puVar8 != &DAT_0010861c) {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,puVar8,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010cf98)();\n  return;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010cfb8)();\n  return iVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010cf28)();\n  return pvVar1;\n}\n\n", 
    "00106ba0": "\nulong FUN_00106ba0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00105bd0": "\nvoid FUN_00105bd0(undefined8 param_1,char param_2)\n\n{\n  FUN_00105b40(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "0010e108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025d0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010cf78)();\n  return;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0010cee8)();\n  return iVar1;\n}\n\n", 
    "001037e0": "\nFILE * FUN_001037e0(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00105de0(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_00106830(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_00106830(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "00105b20": "\nvoid FUN_00105b20(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105aa0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00106d30": "\nint FUN_00106d30(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00105d60": "\nvoid FUN_00105d60(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105d50(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010e1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010cf20)();\n  return iVar1;\n}\n\n", 
    "00102400": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ce90)();\n  return;\n}\n\n", 
    "0010e100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010cfb0)();\n  return iVar1;\n}\n\n", 
    "00105aa0": "\nvoid FUN_00105aa0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103ba0(auStack_68);\n  FUN_00105510(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106dd0": "\nulong FUN_00106dd0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_00106830(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010e118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcoll(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106440": "\nvoid FUN_00106440(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106660();\n  }\n  return;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010cee0)();\n  return iVar1;\n}\n\n", 
    "0010e0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025c0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010cf70)();\n  return;\n}\n\n", 
    "00106c00": "\nuint FUN_00106c00(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00105b10": "\nvoid FUN_00105b10(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00105a40(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106e40": "\nchar * FUN_00106e40(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "001064e0": "\nvoid FUN_001064e0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_001064a0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106660();\n}\n\n", 
    "00105d50": "\nvoid FUN_00105d50(void)\n\n{\n  FUN_00105cb0();\n  return;\n}\n\n", 
    "00102630": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010cfa8)();\n  return;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010cf18)();\n  return pvVar1;\n}\n\n", 
    "0010e110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}