{
    "00107600": "\nulong FUN_00107600(void)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_001074d0();\n  if ((uVar1 != 0x1021994) && (uVar1 != 0xff534d42)) {\n    return uVar1 & 0xffffffffffffff00 | (ulong)(uVar1 != 0x6969);\n  }\n  return 0;\n}\n\n", 
    "00106630": "\nundefined8\nFUN_00106630(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010d35b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001068f9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_001068f9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010699b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010699b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010674d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010674d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00106fc0": "\nulong FUN_00106fc0(ulong *param_1,ulong *param_2)\n\n{\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00107840": "\nundefined8 FUN_00107840(void **param_1,size_t *param_2,long param_3)\n\n{\n  size_t __size;\n  void *pvVar1;\n  int *piVar2;\n  \n  pvVar1 = *param_1;\n  __size = *param_2 + 0x100 + param_3;\n  if (__size < *param_2) {\n    free(pvVar1);\n    *param_1 = (void *)0x0;\n    piVar2 = __errno_location();\n    *piVar2 = 0x24;\n    return 0;\n  }\n  *param_2 = __size;\n  pvVar1 = realloc(pvVar1,__size);\n  if (pvVar1 != (void *)0x0) {\n    *param_1 = pvVar1;\n    return 1;\n  }\n  free(*param_1);\n  *param_1 = (void *)0x0;\n  return 0;\n}\n\n", 
    "00109f90": "\nulong FUN_00109f90(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "00103bd0": "\nvoid FUN_00103bd0(uint param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  char cVar3;\n  ulong uVar4;\n  \n  uVar4 = (ulong)param_1;\n  uVar2 = FUN_00103b60();\n  *param_2 = uVar2;\n  param_2[1] = (-((uVar4 & 0x100) == 0) & 0xbbU) + 0x72;\n  param_2[2] = (-((uVar4 & 0x80) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 0x40) == 0);\n  if ((uVar4 & 0x800) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[3] = cVar3;\n  param_2[4] = (-((uVar4 & 0x20) == 0) & 0xbbU) + 0x72;\n  param_2[5] = (-((uVar4 & 0x10) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 8) == 0);\n  if ((uVar4 & 0x400) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[6] = cVar3;\n  param_2[7] = (-((uVar4 & 4) == 0) & 0xbbU) + 0x72;\n  param_2[8] = (-((uVar4 & 2) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 1) == 0);\n  if ((uVar4 & 0x200) != 0) {\n    param_2[9] = (bVar1 & 0xe0) + 0x74;\n    *(undefined2 *)(param_2 + 10) = 0x20;\n    return;\n  }\n  param_2[9] = (bVar1 & 0xb5) + 0x78;\n  *(undefined2 *)(param_2 + 10) = 0x20;\n  return;\n}\n\n", 
    "0010aa90": "\nundefined8 FUN_0010aa90(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_0010a820(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001130f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027b8": "\nvoid FUN_001027b8(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103cf0": "\nvoid FUN_00103cf0(long param_1)\n\n{\n  FUN_00103bd0(*(undefined4 *)(param_1 + 0x18));\n  return;\n}\n\n", 
    "001027b3": "\nvoid FUN_001027b3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00113048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001130f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001065b0": "\nundefined8 * FUN_001065b0(undefined8 *param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_0010b350(&DAT_0010cbf6,&local_a8);\n  if (iVar1 == 0) {\n    *param_1 = local_a0;\n    param_1[1] = local_a8;\n  }\n  else {\n    param_1 = (undefined8 *)0x0;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105f40": "\nundefined4 FUN_00105f40(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00112240;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001077c0": "\nvoid thunk_FUN_001077eb(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00113050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109ce0": "\nvoid FUN_00109ce0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00113178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001042b0": "\nvoid FUN_001042b0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_00112128 = pcVar1 + 1;\n    uVar3 = (long)DAT_00112128 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = &DAT_0010cbf0;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_00112128;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_00112128 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n  DIR *pDVar1;\n  \n  pDVar1 = (DIR *)(*(code *)PTR_fdopendir_00111f88)();\n  return pDVar1;\n}\n\n", 
    "00113170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109910": "\nulong FUN_00109910(ulong param_1)\n\n{\n  return param_1 - 1 & 0xffffffffffffff00 | (ulong)((param_1 - 1 & param_1) == 0);\n}\n\n", 
    "001027a9": "\nvoid FUN_001027a9(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106fb0": "\nulong FUN_00106fb0(ulong *param_1,ulong param_2)\n\n{\n  return *param_1 % param_2;\n}\n\n", 
    "00105ec0": "\nundefined4 FUN_00105ec0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00112240;\n  }\n  return *param_1;\n}\n\n", 
    "00104440": "\nundefined8 FUN_00104440(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001043e0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00104560": "\nundefined8\nFUN_00104560(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001044d0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00111df8)();\n  return;\n}\n\n", 
    "001027a4": "\nvoid switchD_001066d8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00113058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001098a0": "\nulong FUN_001098a0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010aed0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001065a0": "\nvoid FUN_001065a0(undefined8 param_1)\n\n{\n  FUN_00106590(0,param_1);\n  return;\n}\n\n", 
    "00109bd0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_00109bd0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_0010d7f0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_0010d804 < fVar1) && (fVar1 < DAT_0010d808)) && (_DAT_0010d80c < pfVar2[3])) &&\n     (_DAT_0010d810 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_0010d804;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_0010d814)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_0010d7f0;\n  return 0;\n}\n\n", 
    "00113068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d50": "\nvoid * FUN_00103d50(byte *param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  uint uVar3;\n  undefined4 uVar4;\n  void *pvVar5;\n  byte *pbVar6;\n  byte bVar7;\n  uint uVar8;\n  uint extraout_EDX;\n  long extraout_RDX;\n  byte *pbVar9;\n  long lVar10;\n  byte bVar11;\n  long lVar12;\n  undefined *puVar13;\n  bool bVar14;\n  \n  bVar11 = *param_1;\n  uVar2 = (uint)(char)bVar11;\n  if ((byte)(bVar11 - 0x30) < 8) {\n    uVar8 = 0;\n    pbVar6 = param_1;\n    do {\n      uVar8 = (uVar2 - 0x30) + uVar8 * 8;\n      pbVar6 = pbVar6 + 1;\n      if (0xfff < uVar8) {\n        return (void *)0x0;\n      }\n      bVar11 = *pbVar6;\n      uVar2 = (uint)(char)bVar11;\n    } while ((byte)(bVar11 - 0x30) < 8);\n    if (bVar11 != 0) {\n      return (void *)0x0;\n    }\n    uVar8 = FUN_00103d00();\n    uVar2 = uVar8 & 0xc00 | 0x3ff;\n    if (4 < extraout_RDX - (long)param_1) {\n      uVar2 = 0xfff;\n    }\n    pvVar5 = (void *)FUN_00103d10(uVar8,uVar2);\n    return pvVar5;\n  }\n  lVar10 = 1;\n  pbVar6 = param_1;\n  while (bVar11 != 0) {\n    pbVar6 = pbVar6 + 1;\n    lVar10 = lVar10 + (ulong)((byte)uVar2 == 0x2b || ((byte)uVar2 & 0xef) == 0x2d);\n    bVar11 = *pbVar6;\n    uVar2 = (uint)bVar11;\n  }\n  pvVar5 = (void *)FUN_00106c90(lVar10,0x10);\n  lVar10 = 0;\n  puVar13 = &DAT_0010cb30;\nLAB_00103dba:\n  bVar11 = *param_1;\n  uVar8 = 0;\n  cVar1 = bVar11 + 0x99;\n  bVar14 = bVar11 == 0x67;\n  uVar2 = 0;\n  if (bVar14) goto LAB_00103e1a;\n  do {\n    uVar8 = (uint)bVar11;\n    if (bVar14 || SBORROW1(bVar11,'g') != cVar1 < '\\0') {\n      if (bVar11 != 0x61) break;\n      uVar8 = 0xfff;\n      param_1 = param_1 + 1;\n    }\n    else if (bVar11 == 0x6f) {\n      uVar8 = uVar2 | 0x207;\n      param_1 = param_1 + 1;\n    }\n    else {\n      if (bVar11 != 0x75) goto LAB_00103dd4;\n      uVar8 = uVar2 | 0x9c0;\n      param_1 = param_1 + 1;\n    }\n    while( true ) {\n      bVar11 = *param_1;\n      cVar1 = bVar11 + 0x99;\n      bVar14 = cVar1 == '\\0';\n      uVar2 = uVar8;\n      if (!bVar14) break;\nLAB_00103e1a:\n      uVar8 = uVar8 | 0x438;\n      param_1 = param_1 + 1;\n    }\n  } while( true );\n  if (((char)bVar11 < 'b') && (((bVar11 & 0xef) == 0x2d || (bVar11 == 0x2b)))) {\n    bVar7 = param_1[1];\n    lVar12 = lVar10 + 1;\n    pbVar6 = (byte *)(lVar10 * 0x10 + (long)pvVar5);\n    cVar1 = bVar7 + 0x91;\n    bVar14 = bVar7 == 0x6f;\n    lVar10 = lVar12;\n    if (bVar14) goto LAB_00103eea;\n    do {\n      bVar11 = (byte)uVar8;\n      uVar8 = (uint)(char)bVar7;\n      if (bVar14 || SBORROW1(bVar7,'o') != cVar1 < '\\0') {\n        if ((char)bVar7 < '8') {\n          if ('/' < (char)bVar7) {\n            uVar3 = 0;\n            pbVar9 = param_1 + 1;\n            goto LAB_00103f42;\n          }\n        }\n        else {\n          pbVar9 = param_1 + 2;\n          uVar3 = 0x38;\n          if (bVar7 == 0x67) goto LAB_00103f0a;\n        }\n      }\n      else {\n        pbVar9 = param_1 + 2;\n        uVar3 = 0x1c0;\n        if (bVar7 == 0x75) goto LAB_00103f0a;\n      }\n      uVar3 = 0;\n      if ((byte)(uVar8 - 0x58) < 0x21) {\n                    /* WARNING: Could not recover jumptable at 0x00103e91. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n        pvVar5 = (void *)(*(code *)(puVar13 + *(int *)(puVar13 + (ulong)(uVar8 - 0x58 & 0xff) * 4)))\n                                   ();\n        return pvVar5;\n      }\n      pbVar6[1] = 1;\n      *(uint *)(pbVar6 + 4) = uVar2;\n      *(undefined4 *)(pbVar6 + 8) = 0;\n      *pbVar6 = bVar11;\n      pbVar9 = param_1 + 1;\n      while( true ) {\n        if (uVar2 != 0) {\n          uVar3 = uVar3 & uVar2;\n        }\nLAB_00103eb6:\n        *(uint *)(pbVar6 + 0xc) = uVar3;\n        lVar12 = lVar10 + 1;\n        pbVar6 = pbVar6 + 0x10;\n        bVar11 = (byte)uVar8;\n        if (((bVar11 & 0xef) != 0x2d) && (bVar11 != 0x2b)) {\n          if (bVar11 != 0x2c) {\n            if (bVar11 == 0) {\n              *(undefined *)((long)pvVar5 + lVar10 * 0x10 + 1) = 0;\n              return pvVar5;\n            }\n            goto LAB_00103dd4;\n          }\n          param_1 = pbVar9 + 1;\n          goto LAB_00103dba;\n        }\n        bVar7 = pbVar9[1];\n        cVar1 = bVar7 + 0x91;\n        bVar14 = cVar1 == '\\0';\n        param_1 = pbVar9;\n        lVar10 = lVar12;\n        if (!bVar14) break;\nLAB_00103eea:\n        pbVar9 = param_1 + 2;\n        uVar3 = 7;\n        lVar10 = lVar12;\nLAB_00103f0a:\n        *pbVar6 = bVar11;\n        uVar8 = (uint)param_1[2];\n        pbVar6[1] = 3;\n        *(uint *)(pbVar6 + 4) = uVar2;\n        *(uint *)(pbVar6 + 8) = uVar3;\n      }\n    } while( true );\n  }\n  goto LAB_00103dd4;\n  while( true ) {\n    bVar7 = *pbVar9;\n    uVar8 = (uint)(char)bVar7;\n    if (7 < (byte)(bVar7 - 0x30)) break;\nLAB_00103f42:\n    uVar3 = (uVar8 - 0x30) + uVar3 * 8;\n    pbVar9 = pbVar9 + 1;\n    if (0xfff < uVar3) goto LAB_00103dd4;\n  }\n  if ((uVar2 == 0) && ((bVar7 == 0 || (bVar7 == 0x2c)))) {\n    uVar4 = FUN_00103d00();\n    uVar2 = 0xfff;\n    *pbVar6 = bVar11;\n    *(undefined4 *)(pbVar6 + 8) = uVar4;\n    uVar3 = 0xfff;\n    pbVar6[1] = 1;\n    *(undefined4 *)(pbVar6 + 4) = 0xfff;\n    uVar8 = extraout_EDX;\n    goto LAB_00103eb6;\n  }\nLAB_00103dd4:\n  free(pvVar5);\n  return (void *)0x0;\n}\n\n", 
    "00113188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001043c0": "\nbool FUN_001043c0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00109840(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00113060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109920": "\nvoid FUN_00109920(long param_1)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined4 *)(param_1 + 0x18) = 0x95f616;\n  return;\n}\n\n", 
    "00113180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109800": "\nint FUN_00109800(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "001130d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106530": "\nvoid FUN_00106530(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00106520(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00109f70": "\nundefined8 FUN_00109f70(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "00113028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b38c": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00113148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027d6": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001038c0": "\nvoid FUN_001038c0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_00112128;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\n                      \"Usage: %s [OPTION]... MODE[,MODE]... FILE...\\n  or:  %s [OPTION]... OCTAL-MODE FILE...\\n  or:  %s [OPTION]... --reference=RFILE FILE...\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Change the mode of each FILE to MODE.\\nWith --reference, change the mode of each FILE to that of RFILE.\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -c, --changes          like verbose but report only when a change is made\\n  -f, --silent, --quiet  suppress most error messages\\n  -v, --verbose          output a diagnostic for every file processed\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --no-preserve-root  do not treat \\'/\\' specially (the default)\\n      --preserve-root    fail to operate recursively on \\'/\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --reference=RFILE  use RFILE\\'s mode instead of MODE values\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -R, --recursive        change files and directories recursively\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nEach MODE is of the form \\'[ugoa]*([-+=]([rwxXst]*|[ugo]))+|[-+=][0-7]+\\'.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103620();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001026b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00111f60)();\n  return;\n}\n\n", 
    "001027d1": "\nvoid FUN_001027d1(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a5a0": "\nvoid FUN_0010a5a0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010a64c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0010a60f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0010a60f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010a64c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  (*(code *)PTR_free_00111fd0)(param_1);\n  return;\n}\n\n", 
    "00113030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001087b0": "\nlong * fts_open(char **param_1,uint param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  char cVar2;\n  undefined2 uVar3;\n  uint uVar4;\n  int iVar5;\n  long *__ptr;\n  ulong uVar6;\n  char *__ptr_00;\n  long lVar7;\n  size_t sVar8;\n  long lVar9;\n  long lVar10;\n  int *piVar11;\n  char *__s;\n  ulong uVar12;\n  byte local_42;\n  long local_40;\n  \n  if ((((param_2 & 0xffffe000) != 0) || ((param_2 & 0x204) == 0x204)) || ((param_2 & 0x12) == 0)) {\n    piVar11 = __errno_location();\n    *piVar11 = 0x16;\n    return (long *)0x0;\n  }\n  __ptr = (long *)calloc(0x80,1);\n  if (__ptr == (long *)0x0) {\n    return (long *)0x0;\n  }\n  __ptr[8] = param_3;\n  *(undefined4 *)((long)__ptr + 0x2c) = 0xffffff9c;\n  uVar4 = param_2 & 0xfffffdff | 4;\n  if ((param_2 & 2) == 0) {\n    uVar4 = param_2;\n  }\n  *(uint *)(__ptr + 9) = uVar4;\n  uVar6 = FUN_00107000(param_1);\n  uVar12 = 0x1000;\n  if (0xfff < uVar6) {\n    uVar12 = uVar6;\n  }\n  local_42 = FUN_00107840(__ptr + 4,__ptr + 6,uVar12);\n  if (local_42 == 0) goto LAB_00108a62;\n  __ptr_00 = *param_1;\n  if (__ptr_00 == (char *)0x0) {\n    if (param_3 != 0) {\n      __s = (char *)0x0;\nLAB_001088a8:\n      local_42 = (byte)(*(uint *)(__ptr + 9) >> 10) & 1;\n      goto LAB_001088b7;\n    }\nLAB_00108af7:\n    lVar9 = 0;\nLAB_001089cf:\n    lVar10 = FUN_00107330(__ptr,\"\",0);\n    *__ptr = lVar10;\n    if (lVar10 != 0) {\n      *(long *)(lVar10 + 0x10) = lVar9;\n      uVar1 = *(undefined4 *)(__ptr + 9);\n      *(undefined2 *)(lVar10 + 0x70) = 9;\n      *(undefined8 *)(lVar10 + 0x58) = 1;\n      cVar2 = FUN_001078b0(uVar1,__ptr + 0xb);\n      if (cVar2 != '\\0') {\n        if ((*(uint *)(__ptr + 9) & 0x204) == 0) {\n          iVar5 = FUN_00107920(*(undefined4 *)((long)__ptr + 0x2c),*(uint *)(__ptr + 9),\n                               &DAT_0010d6eb);\n          *(int *)(__ptr + 5) = iVar5;\n          if (iVar5 < 0) {\n            *(uint *)(__ptr + 9) = *(uint *)(__ptr + 9) | 4;\n          }\n        }\n        FUN_0010acf0(__ptr + 0xc,0xffffffff);\n        return __ptr;\n      }\n    }\nLAB_00108a48:\n    FUN_001073d0(lVar9);\n    free(__ptr_00);\n  }\n  else {\n    __ptr_00 = (char *)FUN_00107330(__ptr,\"\",0);\n    if (__ptr_00 != (char *)0x0) {\n      *(undefined8 *)(__ptr_00 + 0x58) = 0xffffffffffffffff;\n      __s = *param_1;\n      *(undefined8 *)(__ptr_00 + 0x68) = 0xffffffffffffffff;\n      if (param_3 != 0) goto LAB_001088a8;\nLAB_001088b7:\n      if (__s == (char *)0x0) goto LAB_00108af7;\n      local_40 = 0;\n      uVar12 = 0;\n      lVar10 = 0;\n      do {\n        sVar8 = strlen(__s);\n        if (((2 < sVar8) && ((((byte)(param_2 >> 0xc) ^ 1) & 1) != 0)) && (__s[sVar8 - 1] == '/')) {\n          do {\n            if (__s[sVar8 - 2] != '/') break;\n            sVar8 = sVar8 - 1;\n          } while (sVar8 != 1);\n        }\n        lVar7 = FUN_00107330(__ptr);\n        lVar9 = lVar10;\n        if (lVar7 == 0) goto LAB_00108a48;\n        *(undefined8 *)(lVar7 + 0x58) = 0;\n        *(char **)(lVar7 + 8) = __ptr_00;\n        *(long *)(lVar7 + 0x30) = lVar7 + 0x108;\n        lVar9 = lVar7;\n        if ((lVar10 == 0) || (local_42 == 0)) {\n          uVar3 = FUN_00107080(__ptr,lVar7,0);\n          *(undefined2 *)(lVar7 + 0x70) = uVar3;\n          if (param_3 != 0) goto LAB_00108945;\n          *(undefined8 *)(lVar7 + 0x10) = 0;\n          if (lVar10 != 0) goto LAB_00108ab8;\n        }\n        else {\n          *(undefined2 *)(lVar7 + 0x70) = 0xb;\n          FUN_00107050(lVar7,1);\n          if (param_3 == 0) {\n            *(undefined8 *)(lVar7 + 0x10) = 0;\nLAB_00108ab8:\n            *(long *)(local_40 + 0x10) = lVar7;\n            lVar9 = lVar10;\n          }\n          else {\nLAB_00108945:\n            *(long *)(lVar7 + 0x10) = lVar10;\n            lVar7 = local_40;\n          }\n        }\n        local_40 = lVar7;\n        uVar12 = uVar12 + 1;\n        __s = param_1[uVar12];\n        lVar10 = lVar9;\n      } while (__s != (char *)0x0);\n      if ((param_3 != 0) && (1 < uVar12)) {\n        lVar9 = FUN_00107230(__ptr,lVar9,uVar12);\n      }\n      goto LAB_001089cf;\n    }\n  }\n  free((void *)__ptr[4]);\nLAB_00108a62:\n  free(__ptr);\n  return (long *)0x0;\n}\n\n", 
    "00103b40": "\nvoid FUN_00103b40(int param_1,char *param_2,__mode_t param_3)\n\n{\n  fchmodat(param_1,param_2,param_3,0);\n  return;\n}\n\n", 
    "001076c0": "\nvoid FUN_001076c0(long param_1,int param_2,char param_3)\n\n{\n  int iVar1;\n  \n  iVar1 = *(int *)(param_1 + 0x2c);\n  if ((iVar1 == param_2) && (iVar1 != -100)) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if (param_3 == '\\0') {\n    if (((*(byte *)(param_1 + 0x48) & 4) == 0) && (-1 < iVar1)) {\n      close(iVar1);\nLAB_0010770c:\n      *(int *)(param_1 + 0x2c) = param_2;\n      return;\n    }\n  }\n  else {\n    iVar1 = FUN_0010ad20(param_1 + 0x60);\n    if (-1 < iVar1) {\n      close(iVar1);\n      goto LAB_0010770c;\n    }\n  }\n  *(int *)(param_1 + 0x2c) = param_2;\n  return;\n}\n\n", 
    "00105f60": "\nvoid FUN_00105f60(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00112240;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a180": "\nlong FUN_0010a180(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_00109ba0();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "00109ba0": "\nlong FUN_00109ba0(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001027bd": "\nvoid FUN_001027bd(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a060": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010a060(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = FUN_00109f80();\n  uVar2 = FUN_00109f60();\n  uVar3 = FUN_00109f70();\n  uVar4 = FUN_00109f90();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_0010d820) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "0010b270": "\nvoid FUN_0010b270(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001130d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102720": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00111f98)();\n  return;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00111f08)();\n  return iVar1;\n}\n\n", 
    "00106520": "\nvoid FUN_00106520(void)\n\n{\n  FUN_00106480();\n  return;\n}\n\n", 
    "00107730": "\nuint FUN_00107730(long param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  \n  uVar2 = *(uint *)(param_1 + 0x48) & 4;\n  if (uVar2 == 0) {\n    if ((*(uint *)(param_1 + 0x48) & 0x200) == 0) {\n      iVar1 = fchdir(*(int *)(param_1 + 0x28));\n      uVar2 = (uint)(iVar1 != 0);\n    }\n    else {\n      FUN_001076c0(param_1,0xffffff9c,1);\n    }\n  }\n  else {\n    uVar2 = 0;\n  }\n  FUN_00107420(param_1 + 0x60);\n  return uVar2;\n}\n\n", 
    "001130e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027c7": "\nvoid FUN_001027c7(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106fd0": "\nulong FUN_00106fd0(long *param_1,long *param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  uVar2 = 0xffffffff;\n  uVar1 = *(ulong *)(*param_2 + 0x80);\n  bVar3 = uVar1 <= *(ulong *)(*param_1 + 0x80);\n  if (bVar3) {\n    uVar2 = (ulong)(bVar3 && *(ulong *)(*param_1 + 0x80) != uVar1);\n  }\n  return uVar2;\n}\n\n", 
    "00109f80": "\nundefined8 FUN_00109f80(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "00105ee0": "\nvoid FUN_00105ee0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00112240;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00107970": "\nint FUN_00107970(long param_1,long param_2,int param_3,char *param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  uint uVar7;\n  long in_FS_OFFSET;\n  long local_d8;\n  long local_d0;\n  long local_40;\n  \n  uVar7 = *(uint *)(param_1 + 0x48);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar4 = param_3;\n  if ((((param_4 == (char *)0x0) || (cVar1 = *param_4, cVar1 != '.')) || (param_4[1] != '.')) ||\n     (param_4[2] != '\\0')) {\n    if ((uVar7 & 4) == 0) {\n      if (param_3 < 0) {\n        bVar2 = 0;\nLAB_00107a87:\n        iVar4 = FUN_00107920(*(undefined4 *)(param_1 + 0x2c),uVar7,param_4);\n        if (iVar4 < 0) {\n          iVar3 = -1;\n          goto LAB_00107a10;\n        }\n        uVar7 = *(uint *)(param_1 + 0x48);\n      }\n      else {\n        bVar2 = 0;\n      }\n      iVar3 = param_3;\n      if ((uVar7 & 2) == 0) {\n        if (param_4 != (char *)0x0) {\n          cVar1 = *param_4;\nLAB_001079e1:\n          if (((cVar1 == '.') && (param_4[1] == '.')) && (iVar3 = param_3, param_4[2] == '\\0'))\n          goto LAB_00107ac0;\n        }\nLAB_001079ea:\n        if ((uVar7 & 0x200) != 0) {\n          iVar3 = 0;\n          FUN_001076c0(param_1,iVar4,bVar2 ^ 1);\n          goto LAB_00107a10;\n        }\n        iVar3 = fchdir(iVar4);\n      }\n      else {\nLAB_00107ac0:\n        iVar5 = FUN_0010b330(iVar4,&local_d8);\n        param_3 = iVar3;\n        if (iVar5 == 0) {\n          if ((*(long *)(param_2 + 0x78) == local_d8) && (*(long *)(param_2 + 0x80) == local_d0)) {\n            uVar7 = *(uint *)(param_1 + 0x48);\n            goto LAB_001079ea;\n          }\n          piVar6 = __errno_location();\n          *piVar6 = 2;\n        }\n        iVar3 = -1;\n      }\n      if (param_3 < 0) {\n        piVar6 = __errno_location();\n        iVar5 = *piVar6;\n        close(iVar4);\n        *piVar6 = iVar5;\n      }\n      goto LAB_00107a10;\n    }\n  }\n  else if ((uVar7 & 4) == 0) {\n    if (param_3 < 0) {\n      if ((uVar7 & 0x200) == 0) {\nLAB_00107b98:\n        bVar2 = 1;\n        goto LAB_00107a87;\n      }\n      bVar2 = FUN_0010ad10(param_1 + 0x60);\n      if (bVar2 != 0) goto LAB_00107a87;\n      iVar3 = FUN_0010ad60(param_1 + 0x60);\n      uVar7 = *(uint *)(param_1 + 0x48);\n      if (iVar3 < 0) goto LAB_00107b98;\n      bVar2 = 1;\n      param_3 = iVar3;\n      iVar4 = iVar3;\n      if ((uVar7 & 2) != 0) goto LAB_00107ac0;\n      goto LAB_001079ea;\n    }\n    bVar2 = 1;\n    iVar3 = param_3;\n    if ((uVar7 & 2) == 0) goto LAB_001079e1;\n    goto LAB_00107ac0;\n  }\n  if (((uVar7 & 0x200) == 0) || (param_3 < 0)) {\n    iVar3 = 0;\n  }\n  else {\n    iVar3 = 0;\n    close(param_3);\n  }\nLAB_00107a10:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "0010b0f0": "\nvoid FUN_0010b0f0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010b0d0(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00108b30": "\nundefined4 fts_close(void **param_1)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  void *pvVar2;\n  long lVar3;\n  int iVar4;\n  int iVar5;\n  int *piVar6;\n  \n  __ptr = *param_1;\n  if (__ptr != (void *)0x0) {\n    lVar3 = *(long *)((long)__ptr + 0x58);\n    while (-1 < lVar3) {\n      pvVar2 = *(void **)((long)__ptr + 0x10);\n      if (pvVar2 == (void *)0x0) {\n        pvVar2 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n      else {\n        free(__ptr);\n        lVar3 = *(long *)((long)pvVar2 + 0x58);\n        __ptr = pvVar2;\n      }\n    }\n    free(__ptr);\n  }\n  if (param_1[1] != (void *)0x0) {\n    FUN_001073d0();\n  }\n  ppvVar1 = param_1 + 0xc;\n  free(param_1[2]);\n  free(param_1[4]);\n  if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar4 = fchdir(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\n        iVar4 = *piVar6;\n        iVar5 = close(*(int *)(param_1 + 5));\n        if (iVar5 == 0) goto LAB_00108c7d;\n        if (iVar4 == 0) goto LAB_00108c38;\n        FUN_00107420(ppvVar1);\n        if (param_1[10] == (void *)0x0) {\n          FUN_00107c10(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          free(param_1);\n          goto LAB_00108cef;\n        }\n        goto LAB_00108bdc;\n      }\n      iVar4 = close(*(int *)(param_1 + 5));\n      if (iVar4 != 0) {\n        piVar6 = __errno_location();\nLAB_00108c38:\n        iVar4 = *piVar6;\n        goto LAB_00108c7d;\n      }\n    }\nLAB_00108bc7:\n    iVar4 = 0;\n    FUN_00107420(ppvVar1);\n    if (param_1[10] == (void *)0x0) {\n      FUN_00107c10(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n      free(param_1);\n      return 0;\n    }\nLAB_00108bdc:\n    FUN_0010a5a0();\n  }\n  else {\n    if ((*(int *)((long)param_1 + 0x2c) < 0) ||\n       (iVar4 = close(*(int *)((long)param_1 + 0x2c)), iVar4 == 0)) goto LAB_00108bc7;\n    piVar6 = __errno_location();\n    iVar4 = *piVar6;\nLAB_00108c7d:\n    FUN_00107420(ppvVar1);\n    if (param_1[10] != (void *)0x0) goto LAB_00108bdc;\n  }\n  FUN_00107c10(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n  free(param_1);\n  if (iVar4 == 0) {\n    return 0;\n  }\n  piVar6 = __errno_location();\nLAB_00108cef:\n  *piVar6 = iVar4;\n  return 0xffffffff;\n}\n\n", 
    "00113038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113158": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107050": "\nvoid FUN_00107050(long param_1,char param_2)\n\n{\n  if (*(short *)(param_1 + 0x70) == 0xb) {\n    *(ulong *)(param_1 + 0xa8) = (ulong)(param_2 != '\\0') + 1;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00111f58)();\n  return pcVar1;\n}\n\n", 
    "001027c2": "\nvoid FUN_001027c2(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106e00": "\nvoid FUN_00106e00(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106e90();\n}\n\n", 
    "00106f20": "\nbool FUN_00106f20(long param_1,long param_2)\n\n{\n  uint uVar1;\n  bool bVar2;\n  \n  bVar2 = true;\n  uVar1 = *(uint *)(param_1 + 0x48) & 0x11;\n  if ((uVar1 != 0x10) && (bVar2 = false, uVar1 == 0x11)) {\n    return *(long *)(param_2 + 0x58) != 0;\n  }\n  return bVar2;\n}\n\n", 
    "00113040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027ae": "\nvoid FUN_001027ae(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001043e0": "\nundefined8 FUN_001043e0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001043c0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00109460": "\nlong fts_children(long *param_1,uint param_2)\n\n{\n  int __fd;\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  \n  piVar2 = __errno_location();\n  if ((param_2 & 0xffffdfff) != 0) {\n    *piVar2 = 0x16;\n    return 0;\n  }\n  lVar4 = *param_1;\n  *piVar2 = 0;\n  if ((*(byte *)((long)param_1 + 0x49) & 0x40) == 0) {\n    if (*(short *)(lVar4 + 0x70) == 9) {\n      return *(long *)(lVar4 + 0x10);\n    }\n    lVar3 = 0;\n    if (*(short *)(lVar4 + 0x70) == 1) {\n      if (param_1[1] != 0) {\n        FUN_001073d0();\n      }\n      uVar5 = 1;\n      if (param_2 == 0x2000) {\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x2000;\n        uVar5 = 2;\n      }\n      if (((*(long *)(lVar4 + 0x58) == 0) && (**(char **)(lVar4 + 0x30) != '/')) &&\n         ((*(uint *)(param_1 + 9) & 4) == 0)) {\n        __fd = FUN_00107920(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                            &DAT_0010d6eb);\n        if (__fd < 0) {\n          param_1[1] = 0;\n          lVar3 = 0;\n        }\n        else {\n          lVar4 = FUN_00107e50(param_1,uVar5);\n          param_1[1] = lVar4;\n          if ((*(byte *)((long)param_1 + 0x49) & 2) == 0) {\n            iVar1 = fchdir(__fd);\n            if (iVar1 != 0) {\n              iVar1 = *piVar2;\n              close(__fd);\n              *piVar2 = iVar1;\n              return 0;\n            }\n            close(__fd);\n          }\n          else {\n            FUN_001076c0(param_1,__fd,1);\n          }\n          lVar3 = param_1[1];\n        }\n      }\n      else {\n        lVar3 = FUN_00107e50(param_1,uVar5);\n        param_1[1] = lVar3;\n      }\n    }\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "00102c80": "\nvoid FUN_00102c80(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00111fe0)\n            (FUN_001027e0,unaff_retaddr,&stack0x00000008,FUN_0010b270,FUN_0010b2e0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001130e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a80": "\nvoid FUN_00106a80(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00106630();\n  return;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fstatfs_00111f90)();\n  return iVar1;\n}\n\n", 
    "00107920": "\nvoid FUN_00107920(undefined4 param_1,uint param_2,undefined8 param_3)\n\n{\n  if ((param_2 & 0x200) != 0) {\n    FUN_0010adf0(param_1,param_3);\n    return;\n  }\n  FUN_001099f0(param_3,(param_2 & 0x10) << 0xd | (param_2 & 0x800) << 7 | 0x90900);\n  return;\n}\n\n", 
    "001130b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00111ed0)();\n  return iVar1;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00111e40)();\n  return iVar1;\n}\n\n", 
    "00102ce0": "\n/* WARNING: Removing unreachable block (ram,0x00102d04) */\n/* WARNING: Removing unreachable block (ram,0x00102d10) */\n\nvoid FUN_00102ce0(void)\n\n{\n  return;\n}\n\n", 
    "00103560": "\nbyte FUN_00103560(undefined8 param_1)\n\n{\n  byte bVar1;\n  int iVar2;\n  undefined8 uVar3;\n  long lVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  byte bVar7;\n  \n  bVar7 = 1;\n  uVar3 = FUN_00106ed0(param_1,0x411,0);\n  while( true ) {\n    lVar4 = fts_read(uVar3);\n    if (lVar4 == 0) break;\n    bVar1 = FUN_00102fc0(uVar3,lVar4);\n    bVar7 = bVar7 & bVar1;\n  }\n  piVar5 = __errno_location();\n  bVar1 = DAT_00112109;\n  if (*piVar5 != 0) {\n    if (DAT_00112109 == 0) {\n      uVar6 = dcgettext(0,\"fts_read failed\",5);\n      error(0,*piVar5,uVar6);\n      bVar7 = bVar1;\n    }\n    else {\n      bVar7 = 0;\n    }\n  }\n  iVar2 = fts_close(uVar3);\n  if (iVar2 != 0) {\n    bVar7 = 0;\n    uVar3 = dcgettext(0,\"fts_close failed\",5);\n    error(0,*piVar5,uVar3);\n  }\n  return bVar7;\n}\n\n", 
    "00107000": "\nlong FUN_00107000(char **param_1)\n\n{\n  size_t sVar1;\n  ulong uVar2;\n  char *__s;\n  \n  __s = *param_1;\n  if (__s != (char *)0x0) {\n    uVar2 = 0;\n    do {\n      sVar1 = strlen(__s);\n      if (uVar2 < sVar1) {\n        uVar2 = sVar1;\n      }\n      __s = param_1[1];\n      param_1 = param_1 + 1;\n    } while (__s != (char *)0x0);\n    return uVar2 + 1;\n  }\n  return 1;\n}\n\n", 
    "00106270": "\nvoid FUN_00106270(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00104370(auStack_68);\n  FUN_00105ce0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b1e0": "\nuint FUN_0010b1e0(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00113008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105f00": "\nuint FUN_00105f00(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00112240;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00113128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109670": "\nulong FUN_00109670(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "001023f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00111e00)();\n  return;\n}\n\n", 
    "00109430": "\nundefined8 fts_set(undefined8 param_1,long param_2,uint param_3)\n\n{\n  int *piVar1;\n  \n  if (param_3 < 5) {\n    *(short *)(param_2 + 0x74) = (short)param_3;\n    return 0;\n  }\n  piVar1 = __errno_location();\n  *piVar1 = 0x16;\n  return 1;\n}\n\n", 
    "00113010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107c40": "\nvoid FUN_00107c40(void **param_1,long param_2)\n\n{\n  char *__s;\n  void *pvVar1;\n  char *pcVar2;\n  size_t sVar3;\n  \n  __s = (char *)(param_2 + 0x108);\n  pvVar1 = *param_1;\n  *(long *)(param_2 + 0x48) = *(long *)(param_2 + 0x60);\n  memmove(pvVar1,__s,*(long *)(param_2 + 0x60) + 1);\n  pcVar2 = strrchr(__s,0x2f);\n  if ((pcVar2 != (char *)0x0) && ((__s != pcVar2 || (*(char *)(param_2 + 0x109) != '\\0')))) {\n    sVar3 = strlen(pcVar2 + 1);\n    memmove(__s,pcVar2 + 1,sVar3 + 1);\n    *(size_t *)(param_2 + 0x60) = sVar3;\n  }\n  pvVar1 = *param_1;\n  *(void **)(param_2 + 0x38) = pvVar1;\n  *(void **)(param_2 + 0x30) = pvVar1;\n  return;\n}\n\n", 
    "0010b250": "\nvoid FUN_0010b250(undefined8 param_1)\n\n{\n  FUN_0010af60(param_1,0,3);\n  return;\n}\n\n", 
    "001130b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b130": "\nint FUN_0010b130(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001131d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001061f0": "\nvoid FUN_001061f0(undefined8 param_1)\n\n{\n  FUN_001061c0(0,param_1);\n  return;\n}\n\n", 
    "00106c70": "\nvoid FUN_00106c70(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106e90();\n  }\n  return;\n}\n\n", 
    "0010aaf0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0010aaf0(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = FUN_00109d00(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_0010ab33;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_0010ac6a;\nLAB_0010ab84:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_0010ab84;\nLAB_0010ac6a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    FUN_00109bd0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_0010d81c <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0010d81c) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = FUN_0010a690(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_0010ab33:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b370": "\nvoid FUN_0010b370(int param_1,char *param_2,stat *param_3,int param_4)\n\n{\n  __fxstatat(1,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00105fa0": "\nvoid FUN_00105fa0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00112240;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00104b20(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001130c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00111ec8)();\n  return iVar1;\n}\n\n", 
    "00109f60": "\nundefined8 FUN_00109f60(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "00102460": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00111e38)();\n  return;\n}\n\n", 
    "00107230": "\nlong FUN_00107230(long param_1,long param_2,ulong param_3)\n\n{\n  ulong uVar1;\n  long *plVar2;\n  __compar_fn_t __compar;\n  long *plVar3;\n  long lVar4;\n  long lVar5;\n  long *plVar6;\n  long lVar7;\n  \n  __compar = *(__compar_fn_t *)(param_1 + 0x40);\n  plVar3 = *(long **)(param_1 + 0x10);\n  if (param_3 <= *(ulong *)(param_1 + 0x38)) {\nLAB_00107285:\n    plVar6 = plVar3;\n    if (param_2 != 0) {\n      do {\n        *plVar6 = param_2;\n        param_2 = *(long *)(param_2 + 0x10);\n        plVar6 = plVar6 + 1;\n      } while (param_2 != 0);\n    }\n    qsort(plVar3,param_3,8,__compar);\n    plVar3 = *(long **)(param_1 + 0x10);\n    lVar7 = *plVar3;\n    lVar4 = lVar7;\n    lVar5 = param_3 - 1;\n    plVar6 = plVar3;\n    if (lVar5 != 0) {\n      while( true ) {\n        plVar2 = plVar6 + 1;\n        plVar6 = plVar6 + 1;\n        *(long *)(lVar7 + 0x10) = *plVar2;\n        lVar5 = lVar5 + -1;\n        if (lVar5 == 0) break;\n        lVar7 = *plVar6;\n      }\n      lVar7 = plVar3[param_3 - 1];\n    }\n    *(undefined8 *)(lVar7 + 0x10) = 0;\n    return lVar4;\n  }\n  uVar1 = param_3 + 0x28;\n  *(ulong *)(param_1 + 0x38) = uVar1;\n  if (uVar1 < 0x2000000000000000) {\n    plVar3 = (long *)realloc(plVar3,uVar1 * 8);\n    if (plVar3 != (long *)0x0) {\n      *(long **)(param_1 + 0x10) = plVar3;\n      goto LAB_00107285;\n    }\n    plVar3 = *(long **)(param_1 + 0x10);\n  }\n  free(plVar3);\n  *(undefined8 *)(param_1 + 0x10) = 0;\n  *(undefined8 *)(param_1 + 0x38) = 0;\n  return param_2;\n}\n\n", 
    "00113138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106020": "\nundefined8 FUN_00106020(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00112240;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00104b20(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00106c70(lVar3 + 1);\n  FUN_00104b20(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "0010b1f0": "\nvoid thunk_FUN_0010b1b0(void)\n\n{\n  FUN_0010b1b0();\n  return;\n}\n\n", 
    "0010b0d0": "\nvoid FUN_0010b0d0(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010b130(param_1,0,1);\n  return;\n}\n\n", 
    "00113018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d10": "\nvoid FUN_00103d10(undefined4 param_1,undefined4 param_2)\n\n{\n  undefined2 *puVar1;\n  \n  puVar1 = (undefined2 *)FUN_00106c70(0x20);\n  *puVar1 = 0x13d;\n  *(undefined4 *)(puVar1 + 2) = 0xfff;\n  *(undefined4 *)(puVar1 + 4) = param_1;\n  *(undefined4 *)(puVar1 + 6) = param_2;\n  *(undefined *)((long)puVar1 + 0x11) = 0;\n  return;\n}\n\n", 
    "00113140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchmodat(int __fd,char *__file,__mode_t __mode,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00111ff8)();\n  return;\n}\n\n", 
    "001130c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001061e0": "\nvoid FUN_001061e0(void)\n\n{\n  FUN_00105ce0();\n  return;\n}\n\n", 
    "00102490": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00111e50)();\n  return;\n}\n\n", 
    "001096f0": "\nulong FUN_001096f0(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "0010a820": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0010a820(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_00109d00(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010a86e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    FUN_00109bd0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_0010a8ca;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_0010d818) {\n      if (_DAT_0010d81c <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_0010d81c) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = FUN_0010a690(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = FUN_00109d00(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = FUN_001027d1();\n          return uVar5;\n        }\n        goto LAB_0010a8ca;\n      }\n    }\n  }\n  else {\nLAB_0010a8ca:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010a86e;\n    }\n    plVar3 = (long *)FUN_00109e00(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010a86e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010a86e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001131b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b2e0": "\nvoid FUN_0010b2e0(void)\n\n{\n  return;\n}\n\n", 
    "00108d20": "\nvoid * fts_read(void **param_1)\n\n{\n  ulong uVar1;\n  short sVar2;\n  undefined4 uVar3;\n  long lVar4;\n  char cVar5;\n  undefined2 uVar6;\n  short sVar7;\n  int iVar8;\n  int *piVar9;\n  long lVar10;\n  void *pvVar11;\n  void *pvVar12;\n  uint uVar13;\n  \n  pvVar11 = *param_1;\n  if (pvVar11 == (void *)0x0) {\n    return (void *)0x0;\n  }\n  uVar13 = *(uint *)(param_1 + 9);\n  if ((uVar13 & 0x4000) != 0) {\n    return (void *)0x0;\n  }\n  sVar7 = *(short *)((long)pvVar11 + 0x74);\n  *(undefined2 *)((long)pvVar11 + 0x74) = 3;\n  if (sVar7 == 1) {\n    uVar6 = FUN_00107080(param_1,pvVar11,0);\n    *(undefined2 *)((long)pvVar11 + 0x70) = uVar6;\n    return pvVar11;\n  }\n  sVar2 = *(short *)((long)pvVar11 + 0x70);\n  if (sVar7 == 2) {\n    if (1 < (ushort)(sVar2 - 0xcU)) {\n      if (sVar2 == 1) goto LAB_00108e8f;\n      goto LAB_00108db0;\n    }\n    sVar7 = FUN_00107080(param_1,pvVar11,1);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if (sVar7 != 1) {\n      *param_1 = pvVar11;\n      if (sVar7 != 0xb) {\n        return pvVar11;\n      }\n      goto LAB_00109059;\n    }\n    if ((*(uint *)(param_1 + 9) & 4) == 0) {\n      iVar8 = FUN_00107920(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                           &DAT_0010d6eb);\n      *(int *)((long)pvVar11 + 0x44) = iVar8;\n      if (iVar8 < 0) {\n        piVar9 = __errno_location();\n        iVar8 = *piVar9;\n        *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n        *(int *)((long)pvVar11 + 0x40) = iVar8;\n        *param_1 = pvVar11;\n        return pvVar11;\n      }\n      *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 2;\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\nLAB_00108faa:\n      *param_1 = pvVar11;\n      if (sVar7 == 0xb) goto LAB_00109059;\n      goto LAB_00108fb8;\n    }\n    *param_1 = pvVar11;\nLAB_00108fc2:\n    if (*(long *)((long)pvVar11 + 0x58) != 0) goto LAB_00108fd3;\n  }\n  else {\n    if (sVar2 == 1) {\n      if (sVar7 == 4) goto LAB_00108f2a;\nLAB_00108e8f:\n      if (((uVar13 & 0x40) != 0) && (*(void **)((long)pvVar11 + 0x78) != param_1[3])) {\nLAB_00108f2a:\n        if ((*(byte *)((long)pvVar11 + 0x72) & 2) != 0) {\n          close(*(int *)((long)pvVar11 + 0x44));\n        }\n        if (param_1[1] != (void *)0x0) {\n          FUN_001073d0();\n          param_1[1] = (void *)0x0;\n        }\n        uVar3 = *(undefined4 *)(param_1 + 9);\n        *(undefined2 *)((long)pvVar11 + 0x70) = 6;\n        FUN_00107d80(uVar3,param_1 + 0xb,pvVar11);\n        return pvVar11;\n      }\n      if (param_1[1] == (void *)0x0) {\nLAB_001090a8:\n        pvVar12 = (void *)FUN_00107e50(param_1,3);\n        param_1[1] = pvVar12;\n        if (pvVar12 == (void *)0x0) {\n          uVar13 = *(uint *)(param_1 + 9);\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          if ((*(int *)((long)pvVar11 + 0x40) != 0) && (*(short *)((long)pvVar11 + 0x70) != 4)) {\n            *(undefined2 *)((long)pvVar11 + 0x70) = 7;\n          }\n          FUN_00107d80(uVar13,param_1 + 0xb,pvVar11);\n          return pvVar11;\n        }\n      }\n      else {\n        if ((uVar13 & 0x2000) != 0) {\n          *(uint *)(param_1 + 9) = uVar13 & 0xffffdfff;\n          FUN_001073d0();\n          param_1[1] = (void *)0x0;\n          goto LAB_001090a8;\n        }\n        iVar8 = FUN_00107970(param_1,pvVar11,0xffffffff,*(undefined8 *)((long)pvVar11 + 0x30));\n        if (iVar8 == 0) {\n          pvVar12 = param_1[1];\n        }\n        else {\n          piVar9 = __errno_location();\n          iVar8 = *piVar9;\n          *(ushort *)((long)pvVar11 + 0x72) = *(ushort *)((long)pvVar11 + 0x72) | 1;\n          *(int *)((long)pvVar11 + 0x40) = iVar8;\n          pvVar12 = param_1[1];\n          for (pvVar11 = pvVar12; pvVar11 != (void *)0x0; pvVar11 = *(void **)((long)pvVar11 + 0x10)\n              ) {\n            *(undefined8 *)((long)pvVar11 + 0x30) =\n                 *(undefined8 *)(*(long *)((long)pvVar11 + 8) + 0x30);\n          }\n        }\n      }\n      param_1[1] = (void *)0x0;\n    }\n    else {\nLAB_00108db0:\n      do {\n        pvVar12 = *(void **)((long)pvVar11 + 0x10);\n        if (pvVar12 == (void *)0x0) {\n          pvVar12 = *(void **)((long)pvVar11 + 8);\n          if (*(long *)((long)pvVar12 + 0x18) != 0) {\n            lVar4 = *(long *)((long)pvVar12 + 0x48);\n            *param_1 = pvVar12;\n            *(undefined *)((long)param_1[4] + lVar4) = 0;\n            pvVar12 = (void *)FUN_00107e50(param_1,3);\n            if (pvVar12 != (void *)0x0) {\n              free(pvVar11);\n              goto LAB_0010900a;\n            }\n            if ((*(byte *)((long)param_1 + 0x49) & 0x40) != 0) {\n              return (void *)0x0;\n            }\n            pvVar12 = *(void **)((long)pvVar11 + 8);\n          }\n          *param_1 = pvVar12;\n          free(pvVar11);\n          if (*(long *)((long)pvVar12 + 0x58) == -1) {\n            free(pvVar12);\n            piVar9 = __errno_location();\n            *piVar9 = 0;\n            *param_1 = (void *)0x0;\n            return (void *)0x0;\n          }\n          if (*(short *)((long)pvVar12 + 0x70) == 0xb) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          *(undefined *)((long)param_1[4] + *(long *)((long)pvVar12 + 0x48)) = 0;\n          if (*(long *)((long)pvVar12 + 0x58) == 0) {\n            iVar8 = FUN_00107730(param_1);\n            if (iVar8 == 0) goto LAB_00108e1b;\nLAB_001091cf:\n            piVar9 = __errno_location();\n            uVar13 = *(uint *)(param_1 + 9) | 0x4000;\n            sVar7 = *(short *)((long)pvVar12 + 0x70);\n            *(int *)((long)pvVar12 + 0x40) = *piVar9;\n            *(uint *)(param_1 + 9) = uVar13;\n            if (sVar7 == 2) {\n              return (void *)0x0;\n            }\n          }\n          else {\n            if ((*(ushort *)((long)pvVar12 + 0x72) & 2) == 0) {\n              if (((*(ushort *)((long)pvVar12 + 0x72) & 1) == 0) &&\n                 (iVar8 = FUN_00107970(param_1,*(undefined8 *)((long)pvVar12 + 8),0xffffffff,\n                                       &DAT_0010d6ea), iVar8 != 0)) goto LAB_001091cf;\nLAB_00108e1b:\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            else {\n              iVar8 = *(int *)((long)pvVar12 + 0x44);\n              if ((*(uint *)(param_1 + 9) & 4) == 0) {\n                if ((*(uint *)(param_1 + 9) & 0x200) == 0) {\n                  iVar8 = fchdir(iVar8);\n                  if (iVar8 != 0) {\n                    piVar9 = __errno_location();\n                    *(int *)((long)pvVar12 + 0x40) = *piVar9;\n                    *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n                  }\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n                else {\n                  FUN_001076c0(param_1,iVar8,1);\n                  iVar8 = *(int *)((long)pvVar12 + 0x44);\n                }\n              }\n              close(iVar8);\n              uVar13 = *(uint *)(param_1 + 9);\n            }\n            if (*(short *)((long)pvVar12 + 0x70) == 2) goto LAB_00108e4b;\n          }\n          if (*(int *)((long)pvVar12 + 0x40) == 0) {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 6;\n            FUN_00107d80(uVar13,param_1 + 0xb,pvVar12);\n            uVar13 = *(uint *)(param_1 + 9);\n          }\n          else {\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n          }\nLAB_00108e4b:\n          if ((uVar13 & 0x4000) != 0) {\n            return (void *)0x0;\n          }\n          return pvVar12;\n        }\n        *param_1 = pvVar12;\n        free(pvVar11);\n        pvVar11 = pvVar12;\n        if (*(long *)((long)pvVar12 + 0x58) == 0) {\n          iVar8 = FUN_00107730(param_1);\n          if (iVar8 != 0) {\n            *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n            return (void *)0x0;\n          }\n          FUN_00107c10(*(undefined4 *)(param_1 + 9),param_1[0xb]);\n          FUN_00107c40(param_1 + 4,pvVar12);\n          FUN_001078b0(*(undefined4 *)(param_1 + 9),param_1 + 0xb);\n          sVar7 = *(short *)((long)pvVar12 + 0x70);\n          goto LAB_00108faa;\n        }\n      } while (*(short *)((long)pvVar12 + 0x74) == 4);\n      if (*(short *)((long)pvVar12 + 0x74) == 2) {\n        sVar7 = FUN_00107080(param_1,pvVar12,1);\n        *(short *)((long)pvVar12 + 0x70) = sVar7;\n        if ((sVar7 == 1) && ((*(uint *)(param_1 + 9) & 4) == 0)) {\n          iVar8 = FUN_00107920(*(undefined4 *)((long)param_1 + 0x2c),*(uint *)(param_1 + 9),\n                               &DAT_0010d6eb);\n          *(int *)((long)pvVar12 + 0x44) = iVar8;\n          if (iVar8 < 0) {\n            piVar9 = __errno_location();\n            iVar8 = *piVar9;\n            *(undefined2 *)((long)pvVar12 + 0x70) = 7;\n            *(int *)((long)pvVar12 + 0x40) = iVar8;\n          }\n          else {\n            *(ushort *)((long)pvVar12 + 0x72) = *(ushort *)((long)pvVar12 + 0x72) | 2;\n          }\n        }\n        *(undefined2 *)((long)pvVar12 + 0x74) = 3;\n      }\n    }\nLAB_0010900a:\n    lVar4 = *(long *)(*(long *)((long)pvVar12 + 8) + 0x48);\n    lVar10 = lVar4 + -1;\n    if (*(char *)(*(long *)(*(long *)((long)pvVar12 + 8) + 0x38) + -1 + lVar4) != '/') {\n      lVar10 = lVar4;\n    }\n    pvVar11 = param_1[4];\n    *(undefined *)(lVar10 + (long)pvVar11) = 0x2f;\n    memmove((undefined *)(lVar10 + (long)pvVar11) + 1,(void *)((long)pvVar12 + 0x108),\n            *(long *)((long)pvVar12 + 0x60) + 1);\n    sVar7 = *(short *)((long)pvVar12 + 0x70);\n    *param_1 = pvVar12;\n    pvVar11 = pvVar12;\n    if (sVar7 != 0xb) {\nLAB_00108fb8:\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_00108fc2;\n    }\nLAB_00109059:\n    if (*(long *)((long)pvVar11 + 0xa8) != 2) {\n      if (*(long *)((long)pvVar11 + 0xa8) != 1) {\n        pvVar11 = (void *)FUN_001027bd();\n        return pvVar11;\n      }\n      return pvVar11;\n    }\n    lVar4 = *(long *)((long)pvVar11 + 8);\n    if (((*(long *)(lVar4 + 0x68) == 0) && ((*(uint *)(param_1 + 9) & 0x18) == 0x18)) &&\n       (iVar8 = FUN_00107640(lVar4,*(undefined4 *)((long)param_1 + 0x2c)), iVar8 == 2)) {\n      sVar7 = *(short *)((long)pvVar11 + 0x70);\n      goto LAB_00108fb8;\n    }\n    sVar7 = FUN_00107080(param_1,pvVar11,0);\n    *(short *)((long)pvVar11 + 0x70) = sVar7;\n    if ((*(uint *)((long)pvVar11 + 0x90) & 0xf000) != 0x4000) goto LAB_00108fb8;\n    if (*(long *)((long)pvVar11 + 0x58) != 0) {\n      uVar1 = *(long *)(lVar4 + 0x68) - 1;\n      if (uVar1 < 0xfffffffffffffffe) {\n        *(ulong *)(lVar4 + 0x68) = uVar1;\n      }\n      if (sVar7 != 1) {\n        return pvVar11;\n      }\n      goto LAB_00108fd3;\n    }\n    if (sVar7 != 1) {\n      return pvVar11;\n    }\n  }\n  param_1[3] = *(void **)((long)pvVar11 + 0x78);\nLAB_00108fd3:\n  cVar5 = FUN_00107cd0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,pvVar11);\n  if (cVar5 == '\\0') {\n    piVar9 = __errno_location();\n    pvVar11 = (void *)0x0;\n    *piVar9 = 0xc;\n  }\n  return pvVar11;\n}\n\n", 
    "0010b1c0": "\nulong FUN_0010b1c0(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00113108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__mode_t umask(__mode_t __mask)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001077a0": "\nvoid FUN_001077a0(undefined4 *param_1,int param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = 0;\n  if (param_2 - 1U < 0xc) {\n    uVar1 = *(undefined4 *)(&DAT_0010d700 + (ulong)(param_2 - 1U) * 4);\n  }\n  *param_1 = uVar1;\n  return;\n}\n\n", 
    "001044d0": "\nundefined8 FUN_001044d0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104440(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00113110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102d70": "\nulong FUN_00102d70(undefined8 param_1,undefined8 param_2,undefined8 param_3,uint param_4,\n                  uint param_5)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  long in_FS_OFFSET;\n  undefined auStack_c8 [24];\n  uint local_b0;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = 0;\n  if ((param_5 & 0xe00) != 0) {\n    uVar1 = FUN_0010b370(param_1,param_2,auStack_c8,0);\n    param_5 = local_b0;\n    if ((int)uVar1 != 0) {\n      if (DAT_00112109 == '\\0') {\n        uVar2 = FUN_001062e0(4,param_3);\n        uVar3 = dcgettext(0,\"getting new attributes of %s\",5);\n        piVar4 = __errno_location();\n        error(0,*piVar4,uVar3,uVar2);\n        uVar1 = 0;\n      }\n      else {\n        uVar1 = 0;\n      }\n      goto LAB_00102da8;\n    }\n  }\n  uVar1 = uVar1 & 0xffffffffffffff00 | (ulong)(((param_5 ^ param_4) & 0xfff) != 0);\nLAB_00102da8:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010b350": "\nvoid FUN_0010b350(char *param_1,stat *param_2)\n\n{\n  __lxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00107d80": "\nvoid FUN_00107d80(uint param_1,long **param_2,long param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  void *__ptr;\n  long in_FS_OFFSET;\n  undefined8 local_28;\n  undefined8 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_1 & 0x102) == 0) {\n    lVar1 = *(long *)(param_3 + 8);\n    if ((lVar1 != 0) && (-1 < *(long *)(lVar1 + 0x58))) {\n      plVar2 = *param_2;\n      if (plVar2[2] == 0) goto FUN_001027b8;\n      if ((*plVar2 == *(long *)(param_3 + 0x80)) && (plVar2[1] == *(long *)(param_3 + 0x78))) {\n        plVar2[1] = *(long *)(lVar1 + 0x78);\n        *plVar2 = *(long *)(lVar1 + 0x80);\n      }\n    }\n  }\n  else {\n    local_28 = *(undefined8 *)(param_3 + 0x78);\n    local_20 = *(undefined8 *)(param_3 + 0x80);\n    __ptr = (void *)FUN_0010aaf0(*param_2,&local_28);\n    if (__ptr == (void *)0x0) {\nFUN_001027b8:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    free(__ptr);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106c90": "\nvoid FUN_00106c90(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00106c70();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106e90();\n}\n\n", 
    "0010b230": "\nuint FUN_0010b230(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "001131b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00111fe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00111fe8)();\n  }\n  return;\n}\n\n", 
    "00102480": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00111e48)();\n  return;\n}\n\n", 
    "001095e0": "\nsize_t FUN_001095e0(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00109a70(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104780": "\nundefined8\nFUN_00104780(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001046c0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001130a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b1d0": "\nuint FUN_0010b1d0(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00109e20": "\nundefined8 FUN_00109e20(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_00109e50:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_00109ba0(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          FUN_00109ce0(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_00109ec0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_00109ec0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_00109e50;\n    plVar3 = (long *)FUN_00109ba0(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)FUN_00109e00(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "00109d00": "\nlong FUN_00109d00(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)FUN_00109ba0();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_00109da1:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            FUN_00109ce0(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_00109da1;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        FUN_00109ce0(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010b2f0": "\nvoid FUN_0010b2f0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00112008);\n  return;\n}\n\n", 
    "00113118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001078b0": "\nulong FUN_001078b0(uint param_1,void **param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_1 & 0x102) != 0) {\n    pvVar1 = (void *)FUN_0010a3e0(0x1f,0,FUN_00106f90,FUN_00106f60,PTR_free_00111fd0);\n    *param_2 = pvVar1;\n    return (ulong)pvVar1 & 0xffffffffffffff00 | (ulong)(pvVar1 != (void *)0x0);\n  }\n  pvVar1 = malloc(0x20);\n  *param_2 = pvVar1;\n  if (pvVar1 != (void *)0x0) {\n    FUN_00109920(pvVar1);\n    return 1;\n  }\n  return 0;\n}\n\n", 
    "00102d60": "\nvoid thunk_FUN_00102ce0(void)\n\n{\n  FUN_00102ce0();\n  return;\n}\n\n", 
    "00109ff0": "\nbool FUN_00109ff0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0010a010:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0010a010;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "00113000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001131c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b240": "\nuint FUN_0010b240(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "001130a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102670": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00111f40)();\n  return;\n}\n\n", 
    "00109a70": "\nbool FUN_00109a70(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00111eb0)();\n  return pvVar1;\n}\n\n", 
    "00102430": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00111e20)();\n  return;\n}\n\n", 
    "00104850": "\nundefined8\nFUN_00104850(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104780(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106aa0": "\nvoid FUN_00106aa0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00106630();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102790": "\nvoid FUN_00102790(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106110": "\nvoid FUN_00106110(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00106020(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "001096d0": "\nuint FUN_001096d0(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "0010a2f0": "\nlong FUN_0010a2f0(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "00106590": "\nvoid FUN_00106590(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106570(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00111f00)();\n  return iVar1;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_00111e70)();\n  return iVar1;\n}\n\n", 
    "00106e70": "\nvoid FUN_00106e70(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106e40(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00109750": "\nulong FUN_00109750(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00106f90": "\nulong FUN_00106f90(long param_1,ulong param_2)\n\n{\n  return *(ulong *)(param_1 + 8) % param_2;\n}\n\n", 
    "0010acf0": "\nvoid FUN_0010acf0(undefined4 *param_1,undefined4 param_2)\n\n{\n  *(undefined8 *)(param_1 + 5) = 0;\n  *(undefined *)(param_1 + 7) = 1;\n  *param_1 = param_2;\n  param_1[1] = param_2;\n  param_1[2] = param_2;\n  param_1[3] = param_2;\n  param_1[4] = param_2;\n  return;\n}\n\n", 
    "00103a80": "\nvoid FUN_00103a80(undefined param_1)\n\n{\n  DAT_00112118 = param_1;\n  return;\n}\n\n", 
    "0010b210": "\nuint FUN_0010b210(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "0010b330": "\nvoid FUN_0010b330(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00111fc8)();\n  return ppuVar1;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00111f38)();\n  return iVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00111ea8)();\n  return;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00111e18)();\n  return;\n}\n\n", 
    "001131a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nDIR * fdopendir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106cd0": "\nvoid * FUN_00106cd0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106e90();\n  }\n  return pvVar1;\n}\n\n", 
    "00106580": "\nvoid FUN_00106580(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106570(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010a1e0": "\nlong FUN_0010a1e0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_001027c7();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_001027c7();\n  return lVar1;\n}\n\n", 
    "00109e00": "\nvoid FUN_00109e00(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "0010b1b0": "\nulong FUN_0010b1b0(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00111ef8)();\n  return pvVar1;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00111e68)();\n  return iVar1;\n}\n\n", 
    "00113100": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106d40": "\nvoid FUN_00106d40(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00106d9b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00106d9b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00106e90(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00106cd0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "001074d0": "\nlong FUN_001074d0(long param_1,int param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 *__ptr;\n  undefined8 *puVar5;\n  long in_FS_OFFSET;\n  undefined8 local_b8 [2];\n  statfs local_a8;\n  long local_30;\n  \n  lVar3 = *(long *)(param_1 + 0x50);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*(byte *)(lVar3 + 0x49) & 2) != 0) {\n    lVar4 = *(long *)(lVar3 + 0x50);\n    if (lVar4 == 0) {\n      lVar4 = FUN_0010a3e0(0xd,0,FUN_00106fb0,FUN_00106fc0,PTR_free_00111fd0);\n      *(long *)(lVar3 + 0x50) = lVar4;\n      if (lVar4 != 0) goto LAB_0010750c;\n    }\n    else {\nLAB_0010750c:\n      local_b8[0] = *(undefined8 *)(param_1 + 0x78);\n      lVar3 = FUN_0010a180(lVar4,local_b8);\n      if (lVar3 != 0) {\n        lVar3 = *(long *)(lVar3 + 8);\n        goto LAB_0010757b;\n      }\n    }\n    if ((-1 < param_2) && (iVar2 = fstatfs(param_2,&local_a8), lVar3 = local_a8.f_type, iVar2 == 0))\n    {\n      if ((lVar4 != 0) && (__ptr = (undefined8 *)malloc(0x10), __ptr != (undefined8 *)0x0)) {\n        uVar1 = *(undefined8 *)(param_1 + 0x78);\n        __ptr[1] = lVar3;\n        *__ptr = uVar1;\n        puVar5 = (undefined8 *)FUN_0010aa90(lVar4,__ptr);\n        if (puVar5 == (undefined8 *)0x0) {\n          free(__ptr);\n          lVar3 = local_a8.f_type;\n        }\n        else {\n          lVar3 = local_a8.f_type;\n          if (__ptr != puVar5) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n        }\n      }\n      goto LAB_0010757b;\n    }\n  }\n  lVar3 = 0;\nLAB_0010757b:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar3;\n}\n\n", 
    "00103a70": "\nvoid FUN_00103a70(undefined8 param_1)\n\n{\n  DAT_00112120 = param_1;\n  return;\n}\n\n", 
    "0010a370": "\nulong FUN_0010a370(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "001063e0": "\nvoid FUN_001063e0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00104370(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00105f00(puVar1,0x3a,1);\n  FUN_00105ce0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00111e10)();\n  return iVar1;\n}\n\n", 
    "00103620": "\nvoid FUN_00103620(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x10c107;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010c08d;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 6;\n    pbVar7 = (byte *)\"chmod\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"chmod\";\n        goto LAB_0010383e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"chmod\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"chmod\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010383e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"chmod\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"chmod\");\n    if (pcVar4 != \"chmod\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001131a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fstatfs(int __fildes,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b220": "\nuint FUN_0010b220(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00111e30)();\n  return iVar1;\n}\n\n", 
    "00109b70": "\nulong FUN_00109b70(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = thunk_FUN_0010b1c0(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00111f50)();\n  return pvVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint closedir(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_closedir_00111ec0)();\n  return iVar1;\n}\n\n", 
    "00107cd0": "\nundefined8 FUN_00107cd0(uint param_1,undefined8 *param_2,undefined8 *param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 *__ptr;\n  undefined8 *puVar2;\n  undefined8 uVar3;\n  \n  if ((param_1 & 0x102) == 0) {\n    uVar3 = FUN_00109940(*param_2,param_3 + 0xf);\n    if ((char)uVar3 != '\\0') {\n      *param_3 = param_3;\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      return uVar3;\n    }\n  }\n  else {\n    __ptr = (undefined8 *)malloc(0x18);\n    if (__ptr == (undefined8 *)0x0) {\n      return 0;\n    }\n    uVar3 = param_3[0xf];\n    uVar1 = *param_2;\n    __ptr[2] = param_3;\n    *__ptr = uVar3;\n    __ptr[1] = param_3[0x10];\n    puVar2 = (undefined8 *)FUN_0010aa90(uVar1,__ptr);\n    if (__ptr != puVar2) {\n      free(__ptr);\n      if (puVar2 == (undefined8 *)0x0) {\n        return 0;\n      }\n      uVar3 = puVar2[2];\n      *(undefined2 *)(param_3 + 0xe) = 2;\n      *param_3 = uVar3;\n    }\n  }\n  return 1;\n}\n\n", 
    "00106be0": "\nvoid FUN_00106be0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00107460": "\nDIR * FUN_00107460(undefined8 param_1,undefined8 param_2,uint param_3,int *param_4)\n\n{\n  int iVar1;\n  int __fd;\n  DIR *pDVar2;\n  int *piVar3;\n  \n  pDVar2 = (DIR *)0x0;\n  __fd = FUN_0010adf0(param_1,param_2,param_3 | 0x90900);\n  if (-1 < __fd) {\n    pDVar2 = fdopendir(__fd);\n    if (pDVar2 == (DIR *)0x0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      close(__fd);\n      *piVar3 = iVar1;\n      return (DIR *)0x0;\n    }\n    *param_4 = __fd;\n  }\n  return pDVar2;\n}\n\n", 
    "001097d0": "\nulong FUN_001097d0(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "0010279f": "\nvoid FUN_0010279f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d00": "\nundefined4 FUN_00103d00(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "0010ae70": "\nuint FUN_0010ae70(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0010b250();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "001023d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00111fd0)();\n  return;\n}\n\n", 
    "0010279a": "\nvoid FUN_0010279a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001024f0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00111e80)();\n  return;\n}\n\n", 
    "00106b30": "\nvoid FUN_00106b30(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106aa0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106e90": "\nvoid FUN_00106e90(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00112020,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109730": "\nbool FUN_00109730(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001062f0": "\nvoid FUN_001062f0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00106270(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010b310": "\nvoid FUN_0010b310(char *param_1,stat *param_2)\n\n{\n  __xstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "0010adf0": "\nvoid FUN_0010adf0(int param_1,char *param_2,uint param_3,ulong param_4)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_3 & 0x40) != 0) {\n    uVar3 = param_4 & 0xffffffff;\n  }\n  iVar2 = openat(param_1,param_2,param_3,uVar3);\n  FUN_0010ae70(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00111eb8)();\n  return iVar1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_00111e28)();\n  return;\n}\n\n", 
    "00102cb0": "\n/* WARNING: Removing unreachable block (ram,0x00102cc3) */\n/* WARNING: Removing unreachable block (ram,0x00102ccf) */\n\nvoid FUN_00102cb0(void)\n\n{\n  return;\n}\n\n", 
    "00106120": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00106120(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00112080;\n  if (1 < DAT_00112078) {\n    ppvVar2 = (void **)(PTR_DAT_00112080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00112080 + (ulong)(DAT_00112078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00112140) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00112098 = &DAT_00112140;\n    _DAT_00112090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00112090) {\n    free(__ptr_00);\n    PTR_DAT_00112080 = &DAT_00112090;\n  }\n  DAT_00112078 = 1;\n  return;\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00111f48)();\n  return iVar1;\n}\n\n", 
    "00107330": "\nvoid * FUN_00107330(long param_1,void *param_2,size_t param_3)\n\n{\n  undefined8 uVar1;\n  void *pvVar2;\n  \n  pvVar2 = malloc(param_3 + 0x110 & 0xfffffffffffffff8);\n  if (pvVar2 != (void *)0x0) {\n    memcpy((void *)((long)pvVar2 + 0x108),param_2,param_3);\n    uVar1 = *(undefined8 *)(param_1 + 0x20);\n    *(undefined *)((long)pvVar2 + param_3 + 0x108) = 0;\n    *(size_t *)((long)pvVar2 + 0x60) = param_3;\n    *(long *)((long)pvVar2 + 0x50) = param_1;\n    *(undefined8 *)((long)pvVar2 + 0x38) = uVar1;\n    *(undefined4 *)((long)pvVar2 + 0x40) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x18) = 0;\n    *(undefined4 *)((long)pvVar2 + 0x72) = 0x30000;\n    *(undefined8 *)((long)pvVar2 + 0x20) = 0;\n    *(undefined8 *)((long)pvVar2 + 0x28) = 0;\n  }\n  return pvVar2;\n}\n\n", 
    "001096c0": "\nbool FUN_001096c0(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00106480": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00106480(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00112240;\n  uStack_60 = uRam0000000000112248;\n  local_38 = DAT_00112270;\n  local_58 = _DAT_00112250;\n  uStack_50 = uRam0000000000112258;\n  local_48 = _DAT_00112260;\n  uStack_40 = uRam0000000000112268;\n  FUN_00105f60(&local_68);\n  FUN_00105ce0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010ad60": "\nundefined4 FUN_0010ad60(long param_1)\n\n{\n  undefined4 *puVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  char cVar4;\n  \n  cVar4 = FUN_0010ad10();\n  if (cVar4 != '\\0') {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  uVar2 = *(uint *)(param_1 + 0x14);\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar2 * 4);\n  uVar3 = *puVar1;\n  *puVar1 = *(undefined4 *)(param_1 + 0x10);\n  if (uVar2 != *(uint *)(param_1 + 0x18)) {\n    *(uint *)(param_1 + 0x14) = uVar2 + 3 & 3;\n    return uVar3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 1;\n  return uVar3;\n}\n\n", 
    "001024e0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00111e78)();\n  return;\n}\n\n", 
    "00102d20": "\nvoid FUN_00102d20(void)\n\n{\n  if (DAT_001120e8 == '\\0') {\n    if (PTR___cxa_finalize_00111ff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00112008);\n    }\n    FUN_00102cb0();\n    DAT_001120e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00102e40": "\nvoid FUN_00102e40(undefined8 param_1,uint param_2,uint param_3,int param_4)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined uStack_48;\n  undefined local_47 [9];\n  undefined local_3e;\n  undefined local_3c;\n  undefined local_3b [9];\n  undefined local_32;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_4 == 0) {\n    uVar1 = FUN_001062e0(4,param_1);\n    uVar2 = dcgettext(0,\"neither symbolic link %s nor referent has been changed\\n\",5);\n    __printf_chk(1,uVar2,uVar1);\n  }\n  else {\n    FUN_00103bd0(param_3,&uStack_48);\n    local_3e = 0;\n    FUN_00103bd0(param_2,&local_3c);\n    local_32 = 0;\n    if (param_4 == 2) {\n      uVar1 = dcgettext(0,\"failed to change mode of %s from %04lo (%s) to %04lo (%s)\\n\",5);\n    }\n    else {\n      if (param_4 == 3) {\n        uVar1 = dcgettext(0,\"mode of %s retained as %04lo (%s)\\n\",5);\n        uVar2 = FUN_001062e0(4,param_1);\n        __printf_chk(1,uVar1,uVar2,param_3 & 0xfff,local_47);\n        goto LAB_00102ee0;\n      }\n      uVar1 = dcgettext(0,\"mode of %s changed from %04lo (%s) to %04lo (%s)\\n\",5);\n    }\n    uVar2 = FUN_001062e0(4,param_1);\n    __printf_chk(1,uVar1,uVar2,param_2 & 0xfff,local_3b,param_3 & 0xfff,local_47);\n  }\nLAB_00102ee0:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001046c0": "\nundefined8\nFUN_001046c0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104610(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00107c10": "\nvoid FUN_00107c10(uint param_1,long param_2)\n\n{\n  if ((param_1 & 0x102) == 0) {\n    (*(code *)PTR_free_00111fd0)(param_2);\n    return;\n  }\n  if (param_2 != 0) {\n    FUN_0010a5a0();\n    return;\n  }\n  return;\n}\n\n", 
    "00107e50": "\nvoid * FUN_00107e50(long *param_1,int param_2)\n\n{\n  long lVar1;\n  DIR *__dirp;\n  long lVar2;\n  long lVar3;\n  bool bVar4;\n  void *pvVar5;\n  undefined *puVar6;\n  char cVar7;\n  undefined2 uVar8;\n  int iVar9;\n  int *piVar10;\n  dirent *pdVar11;\n  size_t sVar12;\n  void *__ptr;\n  uint uVar13;\n  uint uVar14;\n  undefined4 uVar15;\n  DIR *__dirp_00;\n  ulong uVar16;\n  ulong uVar17;\n  ulong uVar18;\n  long in_FS_OFFSET;\n  bool bVar19;\n  ulong local_a0;\n  void *local_98;\n  void *local_90;\n  undefined *local_70;\n  ulong local_68;\n  ulong local_60;\n  char local_4b;\n  char local_4a;\n  int local_44;\n  long local_40;\n  \n  lVar1 = *param_1;\n  __dirp = *(DIR **)(lVar1 + 0x18);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__dirp == (DIR *)0x0) {\n    uVar14 = *(uint *)(param_1 + 9);\n    uVar13 = uVar14 & 0x10;\n    if ((uVar13 != 0) && (uVar13 = 0x20000, (uVar14 & 1) != 0)) {\n      uVar13 = (uint)(*(long *)(lVar1 + 0x58) != 0) << 0x11;\n    }\n    uVar15 = 0xffffff9c;\n    if ((uVar14 & 0x204) == 0x200) {\n      uVar15 = *(undefined4 *)((long)param_1 + 0x2c);\n    }\n    local_90 = (void *)FUN_00107460(uVar15,*(undefined8 *)(lVar1 + 0x30),\n                                    (uVar14 & 0x800) << 7 | uVar13,&local_44);\n    *(void **)(lVar1 + 0x18) = local_90;\n    if (local_90 == (void *)0x0) {\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n        goto LAB_00108363;\n      }\n      goto LAB_0010865d;\n    }\n    if (*(short *)(lVar1 + 0x70) == 0xb) {\n      uVar8 = FUN_00107080(param_1,lVar1,0);\n      *(undefined2 *)(lVar1 + 0x70) = uVar8;\n    }\n    else if ((*(uint *)(param_1 + 9) & 0x100) != 0) {\n      FUN_00107d80(*(uint *)(param_1 + 9),param_1 + 0xb,lVar1);\n      FUN_00107080(param_1,lVar1,0);\n      cVar7 = FUN_00107cd0(*(undefined4 *)(param_1 + 9),param_1 + 0xb,lVar1);\n      if (cVar7 == '\\0') {\n        piVar10 = __errno_location();\n        local_90 = (void *)0x0;\n        *piVar10 = 0xc;\n        goto LAB_00108363;\n      }\n    }\n    local_68 = (ulong)(-(uint)(param_1[8] == 0) & 0x186a1) - 1;\n    if (param_2 == 2) {\nLAB_00108580:\n      bVar19 = false;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n    else {\n      if ((((*(uint *)(param_1 + 9) & 0x38) == 0x18) && (*(long *)(lVar1 + 0x88) == 2)) &&\n         (iVar9 = FUN_00107640(lVar1,local_44), iVar9 != 0)) {\n        if (param_2 != 3) goto LAB_00108580;\n        bVar4 = false;\n        bVar19 = true;\n      }\n      else {\n        bVar19 = param_2 == 3;\n        bVar4 = true;\n      }\n      if ((*(byte *)((long)param_1 + 0x49) & 2) != 0) {\n        local_44 = FUN_0010af60(local_44,0x406,3);\n      }\n      if ((-1 < local_44) && (iVar9 = FUN_00107970(param_1,lVar1,local_44,0), iVar9 == 0))\n      goto LAB_00107eaf;\n      if ((bVar19) && (bVar4)) {\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\n      *(ushort *)(lVar1 + 0x72) = *(ushort *)(lVar1 + 0x72) | 1;\n      closedir(*(DIR **)(lVar1 + 0x18));\n      uVar14 = *(uint *)(param_1 + 9);\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (((uVar14 & 0x200) != 0) && (-1 < local_44)) {\n        close(local_44);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      bVar19 = false;\n    }\n  }\n  else {\n    local_44 = dirfd(__dirp);\n    if (local_44 < 0) {\n      closedir(*(DIR **)(lVar1 + 0x18));\n      *(undefined8 *)(lVar1 + 0x18) = 0;\n      if (param_2 == 3) {\n        *(undefined2 *)(lVar1 + 0x70) = 4;\n        piVar10 = __errno_location();\n        *(int *)(lVar1 + 0x40) = *piVar10;\n      }\nLAB_0010865d:\n      local_90 = (void *)0x0;\n      goto LAB_00108363;\n    }\n    if (param_1[8] == 0) {\n      local_68 = 100000;\n      uVar14 = *(uint *)(param_1 + 9);\n      bVar19 = true;\n    }\n    else {\n      local_68 = 0xffffffffffffffff;\nLAB_00107eaf:\n      bVar19 = true;\n      uVar14 = *(uint *)(param_1 + 9);\n    }\n  }\n  uVar18 = *(ulong *)(lVar1 + 0x48);\n  local_a0 = uVar18;\n  local_60 = uVar18 - 1;\n  if (*(char *)(*(long *)(lVar1 + 0x38) + -1 + uVar18) != '/') {\n    local_a0 = uVar18 + 1;\n    local_60 = uVar18;\n  }\n  local_70 = (undefined *)0x0;\n  if ((uVar14 & 4) != 0) {\n    local_70 = (undefined *)(local_60 + param_1[4]) + 1;\n    *(undefined *)(local_60 + param_1[4]) = 0x2f;\n  }\n  __dirp_00 = *(DIR **)(lVar1 + 0x18);\n  lVar2 = *(long *)(lVar1 + 0x58);\n  uVar18 = param_1[6] - local_a0;\n  if (__dirp_00 == (DIR *)0x0) {\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      local_90 = (void *)0x0;\n      uVar16 = 0;\n      local_4a = '\\0';\nLAB_00108444:\n      local_70 = local_70 + -1;\n      goto LAB_0010844a;\n    }\n    local_90 = (void *)0x0;\n    if ((bool)(bVar19 & __dirp == (DIR *)0x0)) {\n      local_4a = '\\0';\n      uVar16 = 0;\n      goto LAB_001084d0;\n    }\nLAB_001084f9:\n    if (((param_2 == 3) && (*(short *)(lVar1 + 0x70) != 7)) && (*(short *)(lVar1 + 0x70) != 4)) {\n      *(undefined2 *)(lVar1 + 0x70) = 6;\n    }\n    FUN_001073d0(local_90);\n    local_90 = (void *)0x0;\n  }\n  else {\n    piVar10 = __errno_location();\n    local_4a = '\\0';\n    local_4b = '\\0';\n    local_98 = (void *)0x0;\n    local_90 = (void *)0x0;\n    uVar17 = 0;\n    do {\n      while( true ) {\n        *piVar10 = 0;\n        pdVar11 = readdir(__dirp_00);\n        uVar16 = uVar17;\n        if (pdVar11 == (dirent *)0x0) {\n          if (*piVar10 != 0) {\n            *(int *)(lVar1 + 0x40) = *piVar10;\n            *(ushort *)(lVar1 + 0x70) = (-(ushort)(((ulong)__dirp | uVar17) == 0) & 0xfffd) + 7;\n          }\n          if (*(DIR **)(lVar1 + 0x18) != (DIR *)0x0) {\n            closedir(*(DIR **)(lVar1 + 0x18));\n            *(undefined8 *)(lVar1 + 0x18) = 0;\n          }\n          goto LAB_00108414;\n        }\n        if ((((*(byte *)(param_1 + 9) & 0x20) != 0) || (pdVar11->d_name[0] != '.')) ||\n           ((pdVar11->d_name[1] != '\\0' && (*(short *)(pdVar11->d_name + 1) != 0x2e)))) break;\nLAB_00107f83:\n        __dirp_00 = *(DIR **)(lVar1 + 0x18);\n        uVar17 = uVar16;\n        if (__dirp_00 == (DIR *)0x0) goto LAB_00108414;\n      }\n      sVar12 = strlen(pdVar11->d_name);\n      __ptr = (void *)FUN_00107330(param_1,pdVar11->d_name,sVar12);\n      if (__ptr == (void *)0x0) {\nLAB_00108310:\n        iVar9 = *piVar10;\n        free(__ptr);\n        FUN_001073d0(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = iVar9;\n        goto LAB_00108363;\n      }\n      if (uVar18 <= sVar12) {\n        lVar3 = param_1[4];\n        cVar7 = FUN_00107840(param_1 + 4,param_1 + 6,local_60 + 2 + sVar12);\n        if (cVar7 == '\\0') goto LAB_00108310;\n        puVar6 = local_70;\n        if ((param_1[4] != lVar3) &&\n           (local_4b = cVar7, puVar6 = (undefined *)(param_1[4] + local_a0),\n           (*(byte *)(param_1 + 9) & 4) == 0)) {\n          puVar6 = local_70;\n        }\n        local_70 = puVar6;\n        uVar18 = param_1[6] - local_a0;\n      }\n      if (CARRY8(sVar12,local_a0)) {\n        free(__ptr);\n        FUN_001073d0(local_90);\n        closedir(*(DIR **)(lVar1 + 0x18));\n        *(undefined8 *)(lVar1 + 0x18) = 0;\n        *(undefined2 *)(lVar1 + 0x70) = 7;\n        local_90 = (void *)0x0;\n        *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n        *piVar10 = 0x24;\n        goto LAB_00108363;\n      }\n      *(long *)((long)__ptr + 0x58) = lVar2 + 1;\n      lVar3 = *param_1;\n      *(size_t *)((long)__ptr + 0x48) = sVar12 + local_a0;\n      *(long *)((long)__ptr + 8) = lVar3;\n      *(__ino_t *)((long)__ptr + 0x80) = pdVar11->d_ino;\n      uVar14 = *(uint *)(param_1 + 9);\n      if ((uVar14 & 4) == 0) {\n        *(void **)((long)__ptr + 0x30) = (void *)((long)__ptr + 0x108);\n      }\n      else {\n        *(undefined8 *)((long)__ptr + 0x30) = *(undefined8 *)((long)__ptr + 0x38);\n        memmove(local_70,(void *)((long)__ptr + 0x108),*(long *)((long)__ptr + 0x60) + 1);\n        uVar14 = *(uint *)(param_1 + 9);\n      }\n      if ((param_1[8] == 0) || ((uVar14 & 0x400) != 0)) {\n        uVar16 = 1;\n        if ((uVar14 & 0x18) == 0x18) {\n          uVar16 = (ulong)((pdVar11->d_type & 0xfb) == 0);\n        }\n        *(undefined2 *)((long)__ptr + 0x70) = 0xb;\n        FUN_001077a0((long)__ptr + 0x90);\n        FUN_00107050(__ptr,uVar16 & 0xffffffff);\n      }\n      else {\n        uVar8 = FUN_00107080(param_1,__ptr,0);\n        *(undefined2 *)((long)__ptr + 0x70) = uVar8;\n      }\n      *(undefined8 *)((long)__ptr + 0x10) = 0;\n      pvVar5 = __ptr;\n      if (local_90 != (void *)0x0) {\n        *(void **)((long)local_98 + 0x10) = __ptr;\n        pvVar5 = local_90;\n      }\n      local_90 = pvVar5;\n      uVar16 = uVar17 + 1;\n      local_98 = __ptr;\n      if (uVar17 != 10000) {\n        if (uVar16 < local_68) goto LAB_00107f83;\n        break;\n      }\n      if (param_1[8] == 0) {\n        local_4a = FUN_00107600(lVar1,local_44);\n      }\n      uVar16 = 0x2711;\n      __dirp_00 = *(DIR **)(lVar1 + 0x18);\n      uVar17 = uVar16;\n    } while (__dirp_00 != (DIR *)0x0);\nLAB_00108414:\n    if (local_4b != '\\0') {\n      thunk_FUN_001077eb(param_1[1],param_1[4],local_90);\n    }\n    if ((*(byte *)(param_1 + 9) & 4) != 0) {\n      if ((param_1[6] == local_a0) || (uVar16 == 0)) goto LAB_00108444;\nLAB_0010844a:\n      *local_70 = 0;\n    }\n    if ((__dirp == (DIR *)0x0) && (bVar19)) {\n      if ((param_2 == 1) || (uVar16 == 0)) {\nLAB_001084d0:\n        if (*(long *)(lVar1 + 0x58) == 0) {\n          iVar9 = FUN_00107730(param_1);\n        }\n        else {\n          iVar9 = FUN_00107970(param_1,*(undefined8 *)(lVar1 + 8),0xffffffff,&DAT_0010d6ea);\n        }\n        if (iVar9 != 0) {\n          *(undefined2 *)(lVar1 + 0x70) = 7;\n          *(uint *)(param_1 + 9) = *(uint *)(param_1 + 9) | 0x4000;\n          FUN_001073d0(local_90);\n          local_90 = (void *)0x0;\n          goto LAB_00108363;\n        }\n        goto LAB_001084f0;\n      }\n    }\n    else {\nLAB_001084f0:\n      if (uVar16 == 0) goto LAB_001084f9;\n    }\n    if (local_4a == '\\0') {\n      if ((param_1[8] != 0) && (uVar16 != 1)) {\n        local_90 = (void *)FUN_00107230(param_1,local_90,uVar16);\n      }\n    }\n    else {\n      param_1[8] = (long)FUN_00106fd0;\n      local_90 = (void *)FUN_00107230(param_1,local_90,uVar16);\n      param_1[8] = 0;\n    }\n  }\nLAB_00108363:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_90;\n}\n\n", 
    "001062e0": "\nvoid FUN_001062e0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00106210(0,param_1,param_2);\n  return;\n}\n\n", 
    "001073d0": "\nvoid FUN_001073d0(void *param_1)\n\n{\n  void *pvVar1;\n  \n  if (param_1 == (void *)0x0) {\n    return;\n  }\n  do {\n    pvVar1 = *(void **)((long)param_1 + 0x10);\n    if (*(DIR **)((long)param_1 + 0x18) != (DIR *)0x0) {\n      closedir(*(DIR **)((long)param_1 + 0x18));\n    }\n    free(param_1);\n    param_1 = pvVar1;\n  } while (pvVar1 != (void *)0x0);\n  return;\n}\n\n", 
    "001061c0": "\nvoid FUN_001061c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105ce0(param_1,param_2,0xffffffffffffffff,&DAT_00112240);\n  return;\n}\n\n", 
    "00109740": "\nbool FUN_00109740(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00103a90": "\nvoid FUN_00103a90(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_001098a0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00112118 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00112120 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_001063c0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00103b18;\n    }\n  }\n  iVar1 = FUN_001098a0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00103b18:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00112020);\n}\n\n", 
    "00102795": "\nvoid switchD_00104bbf::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104610": "\nundefined8\nFUN_00104610(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104560(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010b200": "\nvoid thunk_FUN_0010b1c0(void)\n\n{\n  FUN_0010b1c0();\n  return;\n}\n\n", 
    "00109b90": "\nbool FUN_00109b90(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "0010a230": "\nlong FUN_0010a230(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_00109ba0();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "00102750": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00111fb0)();\n  return;\n}\n\n", 
    "00106310": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00106310(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00112240;\n  uStack_40 = uRam0000000000112248;\n  local_38 = _DAT_00112250;\n  uStack_30 = uRam0000000000112258;\n  local_28 = _DAT_00112260;\n  uStack_20 = uRam0000000000112268;\n  local_18 = DAT_00112270;\n  FUN_00105f00(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00105ce0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107640": "\nundefined FUN_00107640(void)\n\n{\n  long lVar1;\n  undefined uVar2;\n  \n  lVar1 = FUN_001074d0();\n  if (lVar1 == 0x52654973) {\n    uVar2 = 2;\n  }\n  else if (lVar1 < 0x52654974) {\n    uVar2 = 0;\n    if ((lVar1 != 0x6969) && (lVar1 != 0x9fa0)) {\n      return lVar1 != 0;\n    }\n  }\n  else {\n    uVar2 = 2;\n    if ((lVar1 != 0x58465342) && (uVar2 = 0, lVar1 != 0xff534d42)) {\n      uVar2 = lVar1 != 0x5346414f;\n    }\n  }\n  return uVar2;\n}\n\n", 
    "00106550": "\nvoid FUN_00106550(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00106480(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001099f0": "\nvoid FUN_001099f0(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  FUN_0010ae70(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104370": "\nint * FUN_00104370(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00111ee0)();\n  return pvVar1;\n}\n\n", 
    "0010a4f0": "\nvoid FUN_0010a4f0(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010a58b;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010a58b:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "00107080": "\nint FUN_00107080(long param_1,long param_2,char param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int *piVar4;\n  ulong uVar5;\n  undefined8 *puVar6;\n  byte bVar7;\n  \n  bVar7 = 0;\n  lVar1 = param_2 + 0x78;\n  if ((((*(long *)(param_2 + 0x58) == 0) && ((*(uint *)(param_1 + 0x48) & 1) != 0)) ||\n      ((*(uint *)(param_1 + 0x48) & 2) != 0)) || (param_3 != '\\0')) {\n    iVar2 = FUN_0010b310(*(undefined8 *)(param_2 + 0x30),lVar1);\n    if (iVar2 == 0) {\nLAB_0010710c:\n      uVar3 = *(uint *)(param_2 + 0x90) & 0xf000;\n      if (uVar3 == 0x4000) {\n        uVar5 = *(ulong *)(param_2 + 0x88);\n        if ((uVar5 < 2) || (*(long *)(param_2 + 0x58) < 1)) {\n          uVar5 = 0xffffffffffffffff;\n        }\n        else if ((*(byte *)(param_1 + 0x48) & 0x20) == 0) {\n          uVar5 = uVar5 - 2;\n        }\n        *(ulong *)(param_2 + 0x68) = uVar5;\n        iVar2 = 1;\n        if ((*(char *)(param_2 + 0x108) == '.') &&\n           ((*(char *)(param_2 + 0x109) == '\\0' ||\n            ((*(uint *)(param_2 + 0x108) & 0xffff00) == 0x2e00)))) {\n          iVar2 = (-(uint)(*(long *)(param_2 + 0x58) == 0) & 0xfffffffc) + 5;\n        }\n      }\n      else if (uVar3 == 0xa000) {\n        iVar2 = 0xc;\n      }\n      else {\n        iVar2 = (uint)(uVar3 == 0x8000) * 5 + 3;\n      }\n      return iVar2;\n    }\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n    if (iVar2 == 2) {\n      iVar2 = FUN_0010b350(*(undefined8 *)(param_2 + 0x30),lVar1);\n      if (iVar2 == 0) {\n        *piVar4 = 0;\n        return 0xd;\n      }\n      iVar2 = *piVar4;\n    }\n  }\n  else {\n    iVar2 = FUN_0010b370(*(undefined4 *)(param_1 + 0x2c),*(undefined8 *)(param_2 + 0x30),lVar1,0x100\n                        );\n    if (iVar2 == 0) goto LAB_0010710c;\n    piVar4 = __errno_location();\n    iVar2 = *piVar4;\n  }\n  *(int *)(param_2 + 0x40) = iVar2;\n  puVar6 = (undefined8 *)(param_2 + 0x80U & 0xfffffffffffffff8);\n  *(undefined8 *)(param_2 + 0x78) = 0;\n  *(undefined8 *)(param_2 + 0x100) = 0;\n  uVar5 = (ulong)(((int)lVar1 - (int)puVar6) + 0x90U >> 3);\n  for (; uVar5 != 0; uVar5 = uVar5 - 1) {\n    *puVar6 = 0;\n    puVar6 = puVar6 + (ulong)bVar7 * -2 + 1;\n  }\n  return 10;\n}\n\n", 
    "0010ad20": "\nundefined4 FUN_0010ad20(long param_1,undefined4 param_2)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  uint uVar3;\n  uint uVar4;\n  \n  uVar3 = (uint)(*(byte *)(param_1 + 0x1c) ^ 1);\n  uVar4 = *(int *)(param_1 + 0x14) + uVar3 & 3;\n  puVar1 = (undefined4 *)(param_1 + (ulong)uVar4 * 4);\n  uVar2 = *puVar1;\n  *puVar1 = param_2;\n  *(uint *)(param_1 + 0x14) = uVar4;\n  if (*(uint *)(param_1 + 0x18) == uVar4) {\n    *(uint *)(param_1 + 0x18) = uVar3 + *(uint *)(param_1 + 0x18) & 3;\n  }\n  *(undefined *)(param_1 + 0x1c) = 0;\n  return uVar2;\n}\n\n", 
    "001026d0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00111f70)();\n  return;\n}\n\n", 
    "00106d10": "\nvoid FUN_00106d10(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00106cd0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106e90();\n}\n\n", 
    "00103b60": "\nundefined8 FUN_00103b60(uint param_1)\n\n{\n  undefined8 uVar1;\n  \n  param_1 = param_1 & 0xf000;\n  uVar1 = 0x2d;\n  if ((((param_1 != 0x8000) && (uVar1 = 100, param_1 != 0x4000)) &&\n      (uVar1 = 0x62, param_1 != 0x6000)) &&\n     (((uVar1 = 99, param_1 != 0x2000 && (uVar1 = 0x6c, param_1 != 0xa000)) &&\n      ((uVar1 = 0x70, param_1 != 0x1000 && (uVar1 = 0x3f, param_1 == 0xc000)))))) {\n    uVar1 = 0x73;\n  }\n  return uVar1;\n}\n\n", 
    "00113098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00111fa8)();\n  return sVar1;\n}\n\n", 
    "00109710": "\nbool FUN_00109710(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00111f18)();\n  return pvVar1;\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00111e88)();\n  return sVar1;\n}\n\n", 
    "00113090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001077eb": "\nvoid FUN_001077eb(long param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  \n  for (; param_1 != 0; param_1 = *(long *)(param_1 + 0x10)) {\n    if (*(long *)(param_1 + 0x30) != param_1 + 0x108) {\n      *(long *)(param_1 + 0x30) = (*(long *)(param_1 + 0x30) - *(long *)(param_1 + 0x38)) + param_2;\n    }\n    *(long *)(param_1 + 0x38) = param_2;\n  }\n  do {\n    if (*(long *)(param_3 + 0x58) < 0) {\n      return;\n    }\n    while( true ) {\n      if (*(long *)(param_3 + 0x30) != param_3 + 0x108) {\n        *(long *)(param_3 + 0x30) =\n             (*(long *)(param_3 + 0x30) - *(long *)(param_3 + 0x38)) + param_2;\n      }\n      lVar1 = *(long *)(param_3 + 0x10);\n      *(long *)(param_3 + 0x38) = param_2;\n      if (lVar1 == 0) break;\n      param_3 = lVar1;\n      if (*(long *)(lVar1 + 0x58) < 0) {\n        return;\n      }\n    }\n    param_3 = *(long *)(param_3 + 8);\n  } while( true );\n}\n\n", 
    "00106ed0": "\nvoid FUN_00106ed0(undefined8 param_1,uint param_2)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = fts_open(param_1,param_2 | 0x200);\n  if (lVar1 != 0) {\n    return;\n  }\n  piVar2 = __errno_location();\n  if (*piVar2 != 0x16) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106e90();\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"errno != EINVAL\",\"lib/xfts.c\",0x29,\"xfts_open\");\n}\n\n", 
    "00104120": "\nvoid FUN_00104120(uint param_1,char param_2,uint param_3,char *param_4,uint *param_5)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  uint uVar4;\n  uint uVar5;\n  char cVar6;\n  uint uVar7;\n  \n  cVar6 = param_4[1];\n  param_1 = param_1 & 0xfff;\n  uVar2 = 0;\n  if (cVar6 != '\\0') {\nLAB_001041dd:\n    do {\n      uVar1 = *(uint *)(param_4 + 4);\n      uVar4 = *(uint *)(param_4 + 8);\n      if (param_2 == '\\0') {\n        if (cVar6 != '\\x02') {\n          uVar5 = 0xffffffff;\n          uVar3 = 0;\n          goto LAB_00104162;\n        }\n        uVar5 = 0xffffffff;\n        uVar3 = param_1 & 0x49;\n        if (uVar3 != 0) {\n          uVar3 = 0;\n          goto LAB_0010420d;\n        }\nLAB_001041a7:\n        cVar6 = *param_4;\n        uVar4 = uVar4 & uVar5;\n        if (uVar1 != 0) goto LAB_00104220;\nLAB_001041b2:\n        uVar4 = uVar4 & ~param_3;\n        if (cVar6 != '-') {\n          if (cVar6 != '=') goto LAB_001041c5;\n          goto LAB_00104239;\n        }\nLAB_00104268:\n        uVar2 = uVar2 | uVar4;\n        param_1 = param_1 & ~uVar4;\n      }\n      else {\n        uVar5 = *(uint *)(param_4 + 0xc) | 0xfffff3ff;\n        uVar3 = ~*(uint *)(param_4 + 0xc) & 0xc00;\n        if (cVar6 != '\\x02') {\nLAB_00104162:\n          if (cVar6 == '\\x03') {\n            uVar4 = uVar4 & param_1;\n            uVar7 = ~-(uint)((uVar4 & 0x124) == 0) & 0x124;\n            if ((uVar4 & 0x92) != 0) {\n              uVar7 = uVar7 | 0x92;\n            }\n            if ((uVar4 & 0x49) != 0) {\n              uVar7 = uVar7 | 0x49;\n            }\n            uVar4 = uVar4 | uVar7;\n          }\n          goto LAB_001041a7;\n        }\nLAB_0010420d:\n        cVar6 = *param_4;\n        uVar4 = (uVar4 | 0x49) & uVar5;\n        if (uVar1 == 0) goto LAB_001041b2;\nLAB_00104220:\n        uVar4 = uVar4 & uVar1;\n        if (cVar6 == '-') goto LAB_00104268;\n        if (cVar6 == '=') {\n          uVar3 = uVar3 | ~uVar1;\n          uVar5 = ~uVar3;\nLAB_00104239:\n          cVar6 = param_4[0x11];\n          param_4 = param_4 + 0x10;\n          uVar2 = uVar2 | uVar5 & 0xfff;\n          param_1 = param_1 & uVar3 | uVar4;\n          if (cVar6 == '\\0') break;\n          goto LAB_001041dd;\n        }\nLAB_001041c5:\n        if (cVar6 == '+') {\n          uVar2 = uVar2 | uVar4;\n          param_1 = param_1 | uVar4;\n        }\n      }\n      cVar6 = param_4[0x11];\n      param_4 = param_4 + 0x10;\n    } while (cVar6 != '\\0');\n  }\n  if (param_5 != (uint *)0x0) {\n    *param_5 = uVar2;\n  }\n  return;\n}\n\n", 
    "001097c0": "\nbool FUN_001097c0(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "001096a0": "\nbool FUN_001096a0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00111f68)();\n  return pvVar1;\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00111ed8)();\n  return iVar1;\n}\n\n", 
    "0010a3e0": "\nvoid ** FUN_0010a3e0(undefined8 param_1,undefined *param_2,code *param_3,code *param_4,void *param_5\n                    )\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_00109b70;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_00109b90;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined *)0x0) {\n      param_2 = &DAT_0010d7f0;\n    }\n    __ptr[5] = param_2;\n    cVar1 = FUN_00109bd0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)FUN_00109c50(*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "001027e0": "\nbyte FUN_001027e0(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  byte bVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  long lVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined **ppuVar9;\n  char *pcVar10;\n  ulong in_R9;\n  ulong uVar11;\n  ulong uVar12;\n  long in_FS_OFFSET;\n  long local_70;\n  ulong local_48;\n  long local_40;\n  \n  lVar5 = 0;\n  uVar11 = (ulong)param_1;\n  bVar1 = false;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = 0;\n  FUN_001042b0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_0010b2f0(FUN_00103a90);\n  DAT_00112108 = 0;\n  DAT_00112109 = 0;\n  DAT_0011210a = '\\0';\n  local_70 = 0;\n  uVar12 = 0;\n  while( true ) {\n    pcVar10 = (char *)0x0;\n    ppuVar9 = &PTR_s_changes_00111a40;\n    iVar3 = getopt_long(uVar11 & 0xffffffff,param_2,\n                        \"Rcfvr::w::x::X::s::t::u::g::o::a::,::+::=::0::1::2::3::4::5::6::7::\");\n    if (iVar3 == -1) break;\n    if (0x82 < iVar3) goto switchD_001028cf_caseD_2d;\n    if (iVar3 < 0x2b) {\n      if (iVar3 == -0x83) {\n        FUN_00106b30(stdout,\"chmod\",\"GNU coreutils\",PTR_DAT_00112018,\"David MacKenzie\",\n                     \"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar3 != -0x82) goto switchD_001028cf_caseD_2d;\n      sVar4 = FUN_001038c0(0);\nLAB_001029df:\n      local_48 = in_R9 + 1;\n      lVar5 = FUN_00106dd0(lVar5,&local_48);\nLAB_00102945:\n      *(undefined *)(lVar5 + uVar12) = 0x2c;\n      memcpy((void *)(lVar5 + (long)ppuVar9),pcVar10,sVar4 + 1);\n      DAT_00112108 = 1;\n      uVar12 = in_R9;\n    }\n    else {\n      switch(iVar3) {\n      case 0x2b:\n      case 0x2c:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x3d:\n      case 0x58:\n      case 0x61:\n      case 0x67:\n      case 0x6f:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x77:\n      case 0x78:\n        pcVar10 = (char *)param_2[(long)optind + -1];\n        sVar4 = strlen(pcVar10);\n        ppuVar9 = (undefined **)((uVar12 != 0) + uVar12);\n        in_R9 = sVar4 + (long)ppuVar9;\n        if (local_48 <= in_R9) goto LAB_001029df;\n        goto LAB_00102945;\n      default:\n        goto switchD_001028cf_caseD_2d;\n      case 0x52:\n        DAT_0011210a = '\\x01';\n        break;\n      case 99:\n        DAT_00112010 = 1;\n        break;\n      case 0x66:\n        DAT_00112109 = 1;\n        break;\n      case 0x76:\n        DAT_00112010 = 0;\n        break;\n      case 0x80:\n        bVar1 = false;\n        break;\n      case 0x81:\n        bVar1 = true;\n        break;\n      case 0x82:\n        local_70 = optarg;\n      }\n    }\n  }\n  if (local_70 == 0) {\n    lVar6 = (long)optind;\n    if (lVar5 == 0) {\n      optind = optind + 1;\n      lVar5 = param_2[lVar6];\n      if (optind < param_1) goto LAB_00102acb;\n      iVar3 = optind;\n      if (lVar5 == 0) goto LAB_00102b1a;\n    }\n    else {\n      iVar3 = optind;\n      if (optind < param_1) {\nLAB_00102acb:\n        DAT_00112110 = FUN_00103d50();\n        if (DAT_00112110 != 0) {\n          DAT_0011210c = umask(0);\n          goto LAB_00102a61;\n        }\n        goto LAB_00102c1b;\n      }\n    }\nLAB_00102b0c:\n    if (param_2[(long)iVar3 + -1] == lVar5) goto LAB_00102ba4;\nLAB_00102b1a:\n    pcVar10 = \"missing operand\";\n  }\n  else {\n    if (lVar5 == 0) {\n      if (optind < param_1) {\n        DAT_00112110 = FUN_001040c0(local_70);\n        if (DAT_00112110 != 0) {\nLAB_00102a61:\n          if ((DAT_0011210a != '\\0') && (bVar1)) goto LAB_00102b45;\n          DAT_00112100 = 0;\n          goto LAB_00102a7d;\n        }\n        uVar11 = FUN_001062e0(4,local_70);\n        uVar8 = dcgettext(0,\"failed to get attributes of %s\",5);\n        piVar7 = __errno_location();\n        error(1,*piVar7,uVar8,uVar11);\nLAB_00102c1b:\n        param_2 = (undefined8 *)FUN_001065a0(lVar5);\n        uVar8 = dcgettext(0,\"invalid mode: %s\",5);\n        error(0,0,uVar8,param_2);\n        iVar3 = FUN_001038c0(1);\n        goto LAB_00102b0c;\n      }\n      goto LAB_00102b1a;\n    }\n    pcVar10 = \"cannot combine mode and --reference options\";\n  }\n  uVar8 = dcgettext(0,pcVar10,5);\n  error(0,0,uVar8);\nswitchD_001028cf_caseD_2d:\n  while( true ) {\n    FUN_001038c0(1);\nLAB_00102b45:\n    DAT_00112100 = FUN_001065b0(&DAT_001120f0);\n    if (DAT_00112100 != 0) break;\n    uVar11 = FUN_001062e0(4,&DAT_0010cbf6);\n    param_2 = (undefined8 *)dcgettext(0,\"failed to get attributes of %s\",5);\n    piVar7 = __errno_location();\n    error(1,*piVar7,param_2,uVar11);\nLAB_00102ba4:\n    param_2 = (undefined8 *)FUN_001065a0(param_2[uVar11 - 1]);\n    uVar8 = dcgettext(0,\"missing operand after %s\",5);\n    error(0,0,uVar8,param_2);\n  }\nLAB_00102a7d:\n  bVar2 = FUN_00103560(param_2 + optind);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar2 ^ 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104b20": "\nulong FUN_00104b20(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104fa7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00104fc9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00105566;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00104f1f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104fa7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00104f1f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_001049f0(&DAT_0010cc19,param_5);\n      local_78 = (char *)FUN_001049f0(&DAT_0010cc09);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104c70:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_001054d0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010546b;\n          goto LAB_0010525b;\n        default:\nswitchD_00105380_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_001095e0(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105758;\n              }\n              if (lVar10 == -2) goto joined_r0x00105b6a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00105140;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105758;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00104ee1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00105428;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00105428;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00105428:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00105137;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00105124;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00105124:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104e48;\n          goto LAB_00105137;\n        case 0x23:\n        case 0x7e:\nLAB_0010511b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00105124;\n          goto LAB_00104e45;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00105380_caseD_25;\n        case 0x27:\nswitchD_00105380_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104e48;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x00104e6b;\n          }\n          goto LAB_00105140;\n        case 0x3f:\nswitchD_00105380_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00105ace_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104e48;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x00104e6b;\n          }\n          goto LAB_00105140;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00104d78_caseD_5c;\n          if (!bVar20) {\nLAB_001053b8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_001053d0;\n          }\n          goto LAB_00105140;\n        case 0x7b:\n        case 0x7d:\nswitchD_00105380_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010511b;\nLAB_00104e45:\n          bVar23 = false;\n          goto LAB_00104e48;\n        }\nLAB_00105250:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010525b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104e68;\n          goto LAB_00104d90;\n        }\nLAB_00105290:\n        bVar21 = false;\n        goto joined_r0x001052a1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_001054b0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00104d78_caseD_0;\n          default:\n            goto switchD_00105380_caseD_1;\n          case 7:\n            goto switchD_001054d0_caseD_7;\n          case 8:\n            goto switchD_001054d0_caseD_8;\n          case 9:\n            goto switchD_00104d78_caseD_9;\n          case 10:\n            goto switchD_001054d0_caseD_a;\n          case 0xb:\n            goto switchD_001054d0_caseD_b;\n          case 0xc:\n            goto switchD_001054d0_caseD_c;\n          case 0xd:\n            goto switchD_001054d0_caseD_d;\n          case 0x20:\n            goto LAB_001054f9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00104d78_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_001054e1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00104d88;\n          case 0x27:\n            goto switchD_00105380_caseD_27;\n          case 0x3f:\n            goto switchD_00105380_caseD_3f;\n          case 0x5c:\n            goto switchD_00104d78_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00105380_caseD_7b;\n          }\n        }\n        goto LAB_0010514e;\n      }\nLAB_001054b0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_001054d0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00104d78_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x00104e6b;\n            }\nLAB_0010590b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010590b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105948;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x00104e6b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00105140;\n      default:\n        bVar23 = false;\n        goto switchD_00105380_caseD_1;\n      case 7:\nswitchD_001054d0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_001054d0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00104d78_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00105250;\n      case 10:\nswitchD_001054d0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00105290;\n      case 0xb:\nswitchD_001054d0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00105290;\n      case 0xc:\nswitchD_001054d0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_001054d0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00105290;\n      case 0x20:\n        bVar5 = false;\nLAB_001054f9:\n        uVar15 = 0x20;\n        goto LAB_00104d88;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00104d78_caseD_21:\n        bVar22 = false;\n        goto LAB_00104e45;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_001054e1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104e48;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00104d90;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00104d88:\n        bVar22 = false;\n        goto LAB_00104d90;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00105380_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00105380_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00104d78_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_001053b8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00105250;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00105380_caseD_7b;\n      }\n      if (bVar20) goto LAB_001052b0;\n      bVar21 = false;\n      goto LAB_00104e06;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00105137:\n      param_5 = 2;\nLAB_00105140:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010514e:\n      uVar13 = FUN_00104b20(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00105188;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105bd5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00105188:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00104b20(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00105188;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105bd5;\nLAB_00105566:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00104fc9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010546b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104c70;\nswitchD_00105ace_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105948:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x00104e6b;\n    goto LAB_00104d90;\n  }\n  goto LAB_0010514e;\njoined_r0x00105b6a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105758:\n  if (1 < uVar17) {\nLAB_00105762:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00105140;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00104e18;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_001053d0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00104ee1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105762;\n  }\nswitchD_00105380_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104e48:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00104d90:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x00104e6b;\n  }\n  else {\nLAB_00104e68:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x00104e6b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_001053d0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00104e18;\n    }\n  }\njoined_r0x001052a1:\n  if (bVar20) {\nLAB_001052b0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00105140;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00104e06:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00104e18:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104c70;\n}\n\n", 
    "001063a0": "\nvoid FUN_001063a0(undefined8 param_1,char param_2)\n\n{\n  FUN_00106310(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00103b50": "\nvoid FUN_00103b50(int param_1,char *param_2,__mode_t param_3)\n\n{\n  fchmodat(param_1,param_2,param_3,0x100);\n  return;\n}\n\n", 
    "001027cc": "\nvoid FUN_001027cc(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010a690": "\nundefined4 FUN_0010a690(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)FUN_00109c50(*(undefined4 *)((long)pvVar1 + 8),param_2,\n                                 *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_0010a79c;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = FUN_00109e20(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = FUN_00109e20(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = FUN_00109e20(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_0010a79c;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_0010a79c;\n    }\n  }\n  uVar3 = 0;\nLAB_0010a79c:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109840": "\nint FUN_00109840(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00109800(*param_1);\n      bVar2 = FUN_00109800(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00109720": "\nbool FUN_00109720(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00111fa0)();\n  return;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndirent * readdir(DIR *__dirp)\n\n{\n  dirent *pdVar1;\n  \n  pdVar1 = (dirent *)(*(code *)PTR_readdir_00111f10)();\n  return pdVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00111fc0)();\n  return iVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00111f30)();\n  return pcVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00111ea0)();\n  return _Var1;\n}\n\n", 
    "0010adb0": "\nchar * FUN_0010adb0(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106210": "\nvoid FUN_00106210(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00104370(auStack_58);\n  FUN_00105ce0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109c50": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong FUN_00109c50(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_0010d818 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_0010d81c) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_0010d81c) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = FUN_00109b30(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "00107420": "\nvoid FUN_00107420(undefined8 param_1)\n\n{\n  char cVar1;\n  int __fd;\n  \n  while( true ) {\n    cVar1 = FUN_0010ad10(param_1);\n    if (cVar1 != '\\0') break;\n    __fd = FUN_0010ad60(param_1);\n    if (-1 < __fd) {\n      close(__fd);\n    }\n  }\n  return;\n}\n\n", 
    "00109b30": "\nulong FUN_00109b30(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = FUN_00109ac0(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "00106cc0": "\nvoid thunk_FUN_00106c70(void)\n\n{\n  FUN_00106c70();\n  return;\n}\n\n", 
    "00106de0": "\nvoid FUN_00106de0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00106c70();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00106570": "\nvoid FUN_00106570(void)\n\n{\n  FUN_00105ce0();\n  return;\n}\n\n", 
    "0010a3b0": "\nvoid FUN_0010a3b0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00111f80)();\n  return iVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__mode_t umask(__mode_t __mask)\n\n{\n  __mode_t _Var1;\n  \n  _Var1 = (*(code *)PTR_umask_00111ef0)();\n  return _Var1;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00111e60)();\n  return sVar1;\n}\n\n", 
    "001049f0": "\nchar * FUN_001049f0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_0010adb0();\n    iVar1 = FUN_00104940(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00104940(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010cc01;\n      }\n      else {\n        pcVar2 = &DAT_0010cbfe;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010cc05;\n    }\n    else {\n      pcVar2 = &DAT_0010cbfa;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00109ac0": "\nulong FUN_00109ac0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "00113078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001063d0": "\nvoid FUN_001063d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106310(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00113198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105e80": "\nvoid FUN_00105e80(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00112240;\n  }\n  FUN_00106e40(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00111e98)();\n  return pcVar1;\n}\n\n", 
    "0010aed0": "\nint FUN_0010aed0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010af3f;\n    }\n    iVar1 = FUN_0010b0f0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010af3f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00111e08)();\n  return piVar1;\n}\n\n", 
    "00104940": "\nundefined8\nFUN_00104940(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001097c0((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00104850(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00113070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00111fb8)();\n  return iVar1;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchmodat(int __fd,char *__file,__mode_t __mode,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchmodat_00111f28)();\n  return iVar1;\n}\n\n", 
    "00106200": "\nvoid FUN_00106200(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001061e0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00105ce0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00105ce0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00112080;\n  if (DAT_00112078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00106e90();\n    }\n    if (PTR_DAT_00112080 == &DAT_00112090) {\n      puVar8 = (undefined4 *)FUN_00106cd0(0);\n      uVar6 = PTR_DAT_00112098._4_4_;\n      uVar5 = PTR_DAT_00112098._0_4_;\n      uVar3 = _UNK_00112094;\n      PTR_DAT_00112080 = (undefined *)puVar8;\n      *puVar8 = _DAT_00112090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00106cd0(PTR_DAT_00112080);\n      PTR_DAT_00112080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00112078 * 4,0,(long)((param_1 + 1) - DAT_00112078) << 4);\n    DAT_00112078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00104b20(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00112140) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00106c70(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00104b20(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00106dd0": "\nvoid FUN_00106dd0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106d40(param_1,param_2,1);\n  return;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00111e58)();\n  return sVar1;\n}\n\n", 
    "001097a0": "\nbool FUN_001097a0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "0010a2a0": "\nvoid FUN_0010a2a0(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "0010af60": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0010af60(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010afe4;\n  }\n  if (DAT_00112278 < 0) {\n    iVar2 = FUN_0010af60(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_00112278 != -1)) goto LAB_0010afe4;\nLAB_0010b021:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010afe4;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_0010af60(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010afe4;\n        DAT_00112278 = -1;\n        __fd = iVar2;\n        goto LAB_0010b021;\n      }\n    }\n    DAT_00112278 = 1;\n  }\nLAB_0010afe4:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00111f78)();\n  return iVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dirfd(DIR *__dirp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dirfd_00111ee8)();\n  return iVar1;\n}\n\n", 
    "0010ad10": "\nundefined FUN_0010ad10(long param_1)\n\n{\n  return *(undefined *)(param_1 + 0x1c);\n}\n\n", 
    "001040c0": "\nundefined8 FUN_001040c0(undefined8 param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined auStack_a8 [24];\n  undefined4 local_90;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_0010b310(param_1,auStack_a8);\n  uVar2 = 0;\n  if (iVar1 == 0) {\n    uVar2 = FUN_00103d10(local_90,0xfff);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106e40": "\nvoid FUN_00106e40(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00106c70(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00106f60": "\nulong FUN_00106f60(ulong *param_1,ulong *param_2)\n\n{\n  if (param_1[1] != param_2[1]) {\n    return 0;\n  }\n  return *param_2 & 0xffffffffffffff00 | (ulong)(*param_1 == *param_2);\n}\n\n", 
    "00113088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001063c0": "\nvoid FUN_001063c0(undefined8 param_1)\n\n{\n  FUN_001063a0(param_1,0x3a);\n  return;\n}\n\n", 
    "00109940": "\nundefined8 FUN_00109940(long *param_1,long *param_2)\n\n{\n  char cVar1;\n  long lVar2;\n  long *extraout_RDX;\n  long *extraout_RDX_00;\n  long *plVar3;\n  long lVar4;\n  \n  if (*(int *)(param_1 + 3) != 0x95f616) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"state->magic == 9827862\",\"lib/cycle-check.c\",0x3c,\"cycle_check\");\n  }\n  if (param_1[2] == 0) {\n    param_1[2] = 1;\n    cVar1 = FUN_00109910(1);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    lVar4 = param_2[1];\n    plVar3 = extraout_RDX_00;\n  }\n  else {\n    lVar4 = param_2[1];\n    if ((lVar4 == *param_1) && (*param_2 == param_1[1])) {\n      return 1;\n    }\n    lVar2 = param_1[2] + 1;\n    param_1[2] = lVar2;\n    cVar1 = FUN_00109910(lVar2);\n    if (cVar1 == '\\0') {\n      return 0;\n    }\n    plVar3 = extraout_RDX;\n    if (lVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar2 = *param_2;\n  *plVar3 = lVar4;\n  plVar3[1] = lVar2;\n  return 0;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00111f20)();\n  return iVar1;\n}\n\n", 
    "00109820": "\nint FUN_00109820(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstatat(int __ver,int __fildes,char *__filename,stat *__stat_buf,int __flag)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstatat_00111e90)();\n  return iVar1;\n}\n\n", 
    "00102fc0": "\nchar FUN_00102fc0(long param_1,long param_2)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  uint uVar4;\n  undefined8 uVar5;\n  char *pcVar6;\n  int *piVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  uint unaff_EBX;\n  uint unaff_R14D;\n  long in_FS_OFFSET;\n  undefined local_58;\n  undefined local_57 [9];\n  undefined local_4e;\n  undefined local_4c;\n  undefined local_4b [9];\n  undefined local_42;\n  long local_40;\n  \n  pcVar1 = *(char **)(param_2 + 0x38);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  switch(*(undefined2 *)(param_2 + 0x70)) {\n  default:\n    goto switchD_00103001_caseD_0;\n  case 2:\n    cVar2 = FUN_00106f20();\n    if (cVar2 != '\\0') {\n      cVar2 = '\\0';\n      uVar5 = FUN_001063e0(0,3,pcVar1);\n      uVar8 = dcgettext(0,\n                        \"WARNING: Circular directory structure.\\nThis almost certainly means that you have a corrupted file system.\\nNOTIFY YOUR SYSTEM MANAGER.\\nThe following directory is part of the cycle:\\n  %s\\n\"\n                        ,5);\n      error(0,0,uVar8,uVar5);\n      goto LAB_00103165;\n    }\nswitchD_00103001_caseD_0:\n    if (((DAT_00112100 != (long *)0x0) && (*(long *)(param_2 + 0x80) == *DAT_00112100)) &&\n       (*(long *)(param_2 + 0x78) == DAT_00112100[1])) {\n      if ((*pcVar1 == '/') && (pcVar1[1] == '\\0')) {\n        uVar5 = FUN_001062e0(4,pcVar1);\n        uVar8 = dcgettext(0,\"it is dangerous to operate recursively on %s\",5);\n        error(0,0,uVar8,uVar5);\n      }\n      else {\n        uVar5 = FUN_00106210(1,4,&DAT_0010cbf6);\n        uVar8 = FUN_00106210(0,4,pcVar1);\n        uVar9 = dcgettext(0,\"it is dangerous to operate recursively on %s (same as %s)\",5);\n        error(0,0,uVar9,uVar8,uVar5);\n      }\n      cVar2 = '\\0';\n      uVar5 = dcgettext(0,\"use --no-preserve-root to override this failsafe\",5);\n      error(0,0,uVar5);\n      fts_set(param_1,param_2,4);\n      fts_read(param_1);\n      goto LAB_00103165;\n    }\n    unaff_EBX = *(uint *)(param_2 + 0x90);\n    uVar5 = *(undefined8 *)(param_2 + 0x30);\n    unaff_R14D = FUN_00104120(unaff_EBX,(unaff_EBX & 0xf000) == 0x4000,DAT_0011210c,DAT_00112110,0);\n    if ((unaff_EBX & 0xf000) != 0xa000) {\n      iVar3 = FUN_00103b40(*(undefined4 *)(param_1 + 0x2c),uVar5,unaff_R14D);\n      if (iVar3 != 0) {\n        if (DAT_00112109 == '\\0') {\n          uVar5 = FUN_001062e0(4,pcVar1);\n          pcVar6 = (char *)dcgettext(0,\"changing permissions of %s\",5);\n          piVar7 = __errno_location();\n          iVar3 = *piVar7;\nLAB_00103269:\n          error(0,iVar3,pcVar6,uVar5);\n        }\n        break;\n      }\n      if (DAT_00112010 != 2) {\n        cVar2 = FUN_00102d70(*(undefined4 *)(param_1 + 0x2c),uVar5,pcVar1,unaff_EBX,unaff_R14D);\n        if (cVar2 == '\\0') {\n          uVar5 = 3;\n          if (DAT_00112010 != 0) goto LAB_00103308;\n        }\n        else {\n          uVar5 = 1;\n        }\n        FUN_00102e40(pcVar1,unaff_EBX,unaff_R14D,uVar5);\n      }\nLAB_00103308:\n      cVar2 = DAT_00112108;\n      if (DAT_00112108 == '\\0') goto LAB_00103290;\n      uVar4 = FUN_00104120(unaff_EBX,(unaff_EBX & 0xf000) == 0x4000,0,DAT_00112110,0);\n      if ((~uVar4 & unaff_R14D) != 0) {\n        cVar2 = '\\0';\n        FUN_00103bd0(unaff_R14D,&local_58);\n        FUN_00103bd0(uVar4,&local_4c);\n        local_42 = 0;\n        local_4e = 0;\n        uVar5 = FUN_001063e0(0,3,pcVar1);\n        uVar8 = dcgettext(0,\"%s: new permissions are %s, not %s\",5);\n        error(0,0,uVar8,uVar5,local_57,local_4b);\n      }\n      goto LAB_00103158;\n    }\n    if ((DAT_00112010 != 2) && (DAT_00112010 == 0)) {\n      cVar2 = '\\x01';\n      iVar3 = DAT_00112010;\n      goto LAB_00103147;\n    }\nLAB_00103290:\n    cVar2 = '\\x01';\n    if (DAT_0011210a != '\\0') goto LAB_00103165;\n    goto LAB_001032a3;\n  case 4:\n    if (DAT_00112109 == '\\0') {\n      uVar5 = FUN_001062e0(4,pcVar1);\n      pcVar6 = \"cannot read directory %s\";\nLAB_001031cb:\n      uVar8 = dcgettext(0,pcVar6,5);\n      error(0,*(undefined4 *)(param_2 + 0x40),uVar8,uVar5);\n    }\n    break;\n  case 6:\n    cVar2 = '\\x01';\n    goto LAB_00103165;\n  case 7:\n    if (DAT_00112109 != '\\0') break;\n    uVar5 = FUN_001063e0(0,3,pcVar1);\n    iVar3 = *(int *)(param_2 + 0x40);\n    pcVar6 = \"%s\";\n    goto LAB_00103269;\n  case 10:\n    if ((*(long *)(param_2 + 0x58) == 0) && (*(long *)(param_2 + 0x20) == 0)) {\n      *(undefined8 *)(param_2 + 0x20) = 1;\n      cVar2 = '\\x01';\n      fts_set(param_1,param_2,1);\n      goto LAB_00103165;\n    }\n    if (DAT_00112109 == '\\0') {\n      uVar5 = FUN_001062e0(4,pcVar1);\n      pcVar6 = \"cannot access %s\";\n      goto LAB_001031cb;\n    }\n    break;\n  case 0xd:\n    if (DAT_00112109 == '\\0') {\n      uVar5 = FUN_001062e0(4,pcVar1);\n      uVar8 = dcgettext(0,\"cannot operate on dangling symlink %s\",5);\n      error(0,0,uVar8,uVar5);\n    }\n  }\n  if ((DAT_00112010 == 2) || (DAT_00112010 != 0)) {\n    cVar2 = '\\0';\n  }\n  else {\n    cVar2 = '\\0';\n    iVar3 = 2;\nLAB_00103147:\n    FUN_00102e40(pcVar1,unaff_EBX,unaff_R14D,iVar3);\n  }\nLAB_00103158:\n  if (DAT_0011210a == '\\0') {\nLAB_001032a3:\n    fts_set(param_1,param_2,4);\n  }\nLAB_00103165:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return cVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}