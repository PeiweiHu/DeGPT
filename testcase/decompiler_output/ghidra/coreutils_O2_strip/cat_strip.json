{
    "0010c028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106630": "\nvoid FUN_00106630(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_001064c0();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010c148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106510": "\nvoid thunk_FUN_001064c0(void)\n\n{\n  FUN_001064c0();\n  return;\n}\n\n", 
    "00103bd0": "\nundefined8 FUN_00103bd0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103bb0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00106870": "\nbool FUN_00106870(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00102390": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010ae58)();\n  return iVar1;\n}\n\n", 
    "0010c0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102d90": "\nvoid FUN_00102d90(void)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  \n  puVar3 = PTR_DAT_0010b028;\n  pcVar2 = &DAT_0010b021;\n  do {\n    if (*pcVar2 < '9') {\n      *pcVar2 = *pcVar2 + '\\x01';\n      return;\n    }\n    pcVar1 = pcVar2 + -1;\n    *pcVar2 = '0';\n    pcVar2 = pcVar1;\n  } while (puVar3 <= pcVar1);\n  if (puVar3 < &UNK_0010b011) {\n    DAT_0010b010 = 0x3e;\n  }\n  else {\n    PTR_DAT_0010b028 = puVar3 + -1;\n    puVar3[-1] = 0x31;\n    puVar3 = PTR_DAT_0010b028;\n  }\n  if (puVar3 < PTR_DAT_0010b030) {\n    PTR_DAT_0010b030 = PTR_DAT_0010b030 + -1;\n  }\n  return;\n}\n\n", 
    "00103910": "\nvoid FUN_00103910(undefined8 param_1)\n\n{\n  DAT_0010b108 = param_1;\n  return;\n}\n\n", 
    "0010c020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c140": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106b90": "\nvoid FUN_00106b90(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00106b70(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00103aa0": "\nvoid FUN_00103aa0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0010b110 = pcVar1 + 1;\n    uVar3 = (long)DAT_0010b110 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0010b110;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0010b110 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010c038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105da0": "\nssize_t FUN_00105da0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7ff00001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00106620": "\nvoid FUN_00106620(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106590(param_1,param_2,1);\n  return;\n}\n\n", 
    "0010c158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102380": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010ae50)();\n  return piVar1;\n}\n\n", 
    "00106980": "\nint FUN_00106980(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00106940(*param_1);\n      bVar2 = FUN_00106940(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010c0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106860": "\nbool FUN_00106860(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010ae38)();\n  return;\n}\n\n", 
    "0010c0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105e10": "\nssize_t FUN_00105e10(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = write(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7ff00001) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00103c30": "\nundefined8 FUN_00103c30(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103bd0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001066c0": "\nvoid FUN_001066c0(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106690(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0010c0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001056f0": "\nuint FUN_001056f0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010b220;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00103d50": "\nundefined8\nFUN_00103d50(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103cc0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001067e0": "\nbool FUN_001067e0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010c030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c150": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c128": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106650": "\nvoid FUN_00106650(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001066e0();\n}\n\n", 
    "00106890": "\nulong FUN_00106890(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0010c008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = posix_fadvise(__fd,__offset,__len,__advise);\n  return iVar1;\n}\n\n", 
    "001037a0": "\nvoid FUN_001037a0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0010b110;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"Concatenate FILE(s) to standard output.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00102e10();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\n  -A, --show-all           equivalent to -vET\\n  -b, --number-nonblank    number nonempty output lines, overrides -n\\n  -e                       equivalent to -vE\\n  -E, --show-ends          display $ at end of each line\\n  -n, --number             number all output lines\\n  -s, --squeeze-blank      suppress repeated empty output lines\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -t                       equivalent to -vT\\n  -T, --show-tabs          display TAB characters as ^I\\n  -u                       (ignored)\\n  -v, --show-nonprinting   use ^ and M- notation, except for LFD and TAB\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    uVar2 = DAT_0010b110;\n    uVar3 = dcgettext(0,\n                      \"\\nExamples:\\n  %s f - g  Output f\\'s contents, then standard input, then g\\'s contents.\\n  %s        Copy standard input to standard output.\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    FUN_00103500();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "0010c0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d20": "\nvoid FUN_00105d20(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105d10(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00103a20": "\nlong FUN_00103a20(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = FUN_00105e10(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0x1c;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n", 
    "0010c120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103930": "\nvoid FUN_00103930(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_001069e0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0010b100 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0010b108 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00105bb0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_001039b8;\n    }\n  }\n  iVar1 = FUN_001069e0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_001039b8:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0010b040);\n}\n\n", 
    "00102600": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010af90)();\n  return;\n}\n\n", 
    "0010c018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106520": "\nvoid * FUN_00106520(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_001066e0();\n  }\n  return pvVar1;\n}\n\n", 
    "00105790": "\nvoid FUN_00105790(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0010b220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00104310(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00105670": "\nvoid FUN_00105670(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010b220;\n  }\n  FUN_00106690(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00106880": "\nbool FUN_00106880(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010c0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026a0": "\nbyte FUN_001026a0(uint param_1,undefined8 *param_2)\n\n{\n  long lVar1;\n  byte bVar2;\n  bool bVar3;\n  byte bVar4;\n  int iVar5;\n  long lVar6;\n  ulong uVar7;\n  ulong uVar8;\n  void *__ptr;\n  undefined8 uVar9;\n  __off_t _Var10;\n  ulong uVar11;\n  undefined8 uVar12;\n  int *piVar13;\n  byte bVar14;\n  uint __fd;\n  byte bVar15;\n  byte bVar16;\n  long in_FS_OFFSET;\n  long local_128;\n  undefined local_11d;\n  void *local_110;\n  char local_ec;\n  byte local_eb;\n  uint local_c0;\n  long local_a8;\n  undefined8 local_a0;\n  \n  bVar16 = 0;\n  bVar15 = 0;\n  uVar11 = (ulong)param_1;\n  bVar14 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103aa0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_00106cd0(FUN_00103930);\n  bVar2 = 0;\n  local_ec = '\\0';\n  local_11d = 0;\n  do {\n    iVar5 = getopt_long(uVar11,param_2,\"benstuvAET\",&PTR_s_number_nonblank_0010aaa0,0);\n    if (iVar5 == -1) {\nLAB_00102837:\n      iVar5 = FUN_00106cf0(1);\n      if (-1 < iVar5) {\n        iVar5 = getpagesize();\n        lVar6 = (long)iVar5;\n        uVar7 = FUN_001034d0(local_a0);\n        local_128 = (long)optind;\n        bVar3 = false;\n        DAT_0010b0f8 = \"-\";\n        local_eb = 1;\n        if ((int)param_1 <= optind) goto LAB_00102a3d;\nLAB_00102a2d:\n        DAT_0010b0f8 = (char *)param_2[local_128];\nLAB_00102a3d:\n        if ((*DAT_0010b0f8 == '-') && (DAT_0010b0f8[1] == 0)) {\n          DAT_0010b0f4 = 0;\n          bVar3 = true;\n          __fd = (uint)(byte)DAT_0010b0f8[1];\n        }\n        else {\n          DAT_0010b0f4 = open(DAT_0010b0f8,0);\n          __fd = DAT_0010b0f4;\n          if ((int)DAT_0010b0f4 < 0) goto LAB_00102b81;\n        }\n        iVar5 = FUN_00106cf0();\n        if (iVar5 < 0) {\n          uVar8 = FUN_00105bd0(0,3,DAT_0010b0f8);\n          piVar13 = __errno_location();\n          error(0,*piVar13,\"%s\",uVar8);\n          local_eb = 0;\n          goto LAB_00102a00;\n        }\n        uVar8 = FUN_001034d0(local_a0);\n        posix_fadvise(__fd,0,0,2);\n        if (((local_c0 & 0xf000) == 0x8000) && (_Var10 = lseek(DAT_0010b0f4,0,1), _Var10 < local_a8)\n           ) {\n          uVar8 = FUN_00105bd0(0,3,DAT_0010b0f8);\n          uVar12 = dcgettext(0,\"%s: input file is output file\",5);\n          error(0,0,uVar12,uVar8);\n          local_eb = 0;\n          goto LAB_00102a00;\n        }\n        if ((((bVar16 | bVar15) == 0) && ((bVar2 | bVar14) == 0)) && (local_ec == '\\0'))\n        goto LAB_00102bf6;\n        local_110 = (void *)FUN_001064c0(lVar6 + uVar8);\n        __ptr = (void *)FUN_001064c0(lVar6 + 0x12 + uVar7 + uVar8 * 4);\n        uVar12 = FUN_00102d70(__ptr,lVar6);\n        uVar9 = FUN_00102d70(local_110);\n        bVar4 = FUN_00102f70(uVar9,uVar8,uVar12,uVar7,bVar14,bVar2,bVar16,local_11d,bVar15,local_ec)\n        ;\n        local_eb = local_eb & bVar4;\n        free(__ptr);\n        do {\n          free(local_110);\nLAB_00102a00:\n          if ((*DAT_0010b0f8 == '-') && (DAT_0010b0f8[1] == '\\0')) {\n            local_128 = local_128 + 1;\n            if ((int)local_128 < (int)uVar11) goto LAB_00102a2d;\n          }\n          else {\n            iVar5 = close(DAT_0010b0f4);\n            if (iVar5 < 0) {\nLAB_00102b81:\n              uVar8 = FUN_00105bd0(0,3,DAT_0010b0f8);\n              piVar13 = __errno_location();\n              error(0,*piVar13,\"%s\",uVar8);\n              local_eb = 0;\n            }\n            local_128 = local_128 + 1;\n            if ((int)local_128 < (int)uVar11) goto LAB_00102a2d;\n          }\n          if ((!bVar3) || (iVar5 = close(0), -1 < iVar5)) {\n            if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n              return local_eb ^ 1;\n            }\n            goto LAB_00102c6d;\n          }\n          uVar11 = dcgettext(0,\"closing standard input\",5);\n          piVar13 = __errno_location();\n          error(1,*piVar13,uVar11);\nLAB_00102bf6:\n          if (uVar8 <= uVar7) {\n            uVar8 = uVar7;\n          }\n          local_110 = (void *)FUN_001064c0(lVar6 + -1 + uVar8);\n          uVar12 = FUN_00102d70(local_110,lVar6);\n          bVar4 = FUN_00102e40(uVar12);\n          local_eb = local_eb & bVar4;\n        } while( true );\n      }\n      goto LAB_00102c41;\n    }\n    if (0x76 < iVar5) goto switchD_00102776_caseD_42;\n    if (iVar5 < 0x41) {\n      if (iVar5 == -0x83) {\n        FUN_00106380(stdout,&DAT_001074c3,\"GNU coreutils\",PTR_DAT_0010b038,\"Torbjorn Granlund\",\n                     \"Richard M. Stallman\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar5 == -0x82) {\n        FUN_001037a0(0);\n        goto LAB_00102837;\n      }\n      goto switchD_00102776_caseD_42;\n    }\n    switch(iVar5) {\n    case 0x41:\n      bVar2 = 1;\n      bVar14 = 1;\n      bVar15 = 1;\n      break;\n    default:\nswitchD_00102776_caseD_42:\n      FUN_001037a0(1);\nLAB_00102c41:\n      uVar12 = dcgettext(0,\"standard output\",5);\n      piVar13 = __errno_location();\n      error(1,*piVar13,uVar12);\nLAB_00102c6d:\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    case 0x54:\n      bVar2 = 1;\n      break;\n    case 0x62:\n      local_11d = 1;\n      bVar16 = 1;\n      break;\n    case 0x65:\n      bVar14 = 1;\n    case 0x45:\n      bVar15 = 1;\n      break;\n    case 0x6e:\n      bVar16 = 1;\n      break;\n    case 0x73:\n      local_ec = '\\x01';\n      break;\n    case 0x74:\n      bVar2 = 1;\n      bVar14 = 1;\n      break;\n    case 0x75:\n      break;\n    case 0x76:\n      bVar14 = 1;\n    }\n  } while( true );\n}\n\n", 
    "0010c0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d10": "\nvoid FUN_00105d10(void)\n\n{\n  FUN_00105c70();\n  return;\n}\n\n", 
    "001054d0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_001054d0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0010b0a0;\n  if (DAT_0010b098 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_001066e0();\n    }\n    if (PTR_DAT_0010b0a0 == &DAT_0010b0b0) {\n      puVar8 = (undefined4 *)FUN_00106520(0);\n      uVar6 = PTR_DAT_0010b0b8._4_4_;\n      uVar5 = PTR_DAT_0010b0b8._0_4_;\n      uVar3 = _UNK_0010b0b4;\n      PTR_DAT_0010b0a0 = (undefined *)puVar8;\n      *puVar8 = _DAT_0010b0b0;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00106520(PTR_DAT_0010b0a0);\n      PTR_DAT_0010b0a0 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0010b098 * 4,0,(long)((param_1 + 1) - DAT_0010b098) << 4);\n    DAT_0010b098 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00104310(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0010b120) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_001064c0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00104310(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "001066e0": "\nvoid FUN_001066e0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0010b040,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102c80": "\nvoid FUN_00102c80(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010afd8)\n            (FUN_001026a0,unaff_retaddr,&stack0x00000008,FUN_00106c50,FUN_00106cc0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010c010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103920": "\nvoid FUN_00103920(undefined param_1)\n\n{\n  DAT_0010b100 = param_1;\n  return;\n}\n\n", 
    "00106830": "\nulong FUN_00106830(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010af58)();\n  return pvVar1;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010aec8)();\n  return pcVar1;\n}\n\n", 
    "00102ce0": "\n/* WARNING: Removing unreachable block (ram,0x00102d04) */\n/* WARNING: Removing unreachable block (ram,0x00102d10) */\n\nvoid FUN_00102ce0(void)\n\n{\n  return;\n}\n\n", 
    "0010c108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102350": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010aff0)();\n  return;\n}\n\n", 
    "0010c1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106ae0": "\nint FUN_00106ae0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00106b4f;\n    }\n    iVar1 = FUN_00106b90(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00106b4f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "001067b0": "\nulong FUN_001067b0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "001023f0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ae88)();\n  return;\n}\n\n", 
    "0010c1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a60": "\nvoid FUN_00105a60(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103b60(auStack_68);\n  FUN_001054d0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105730": "\nundefined4 FUN_00105730(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010b220;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00106940": "\nint FUN_00106940(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102580": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010af50)();\n  return;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010aec0)();\n  return sVar1;\n}\n\n", 
    "0010c118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106380": "\nvoid FUN_00106380(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_001062f0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010268f": "\nvoid FUN_0010268f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010268a": "\nvoid FUN_0010268a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001056b0": "\nundefined4 FUN_001056b0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010b220;\n  }\n  return *param_1;\n}\n\n", 
    "001034d0": "\nlong FUN_001034d0(long param_1)\n\n{\n  if (0x1ffffffffffe0000 < param_1 - 0x20000U) {\n    param_1 = 0x20000;\n  }\n  return param_1;\n}\n\n", 
    "001069e0": "\nulong FUN_001069e0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_00106ae0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001023e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ae80)();\n  return iVar1;\n}\n\n", 
    "00106810": "\nuint FUN_00106810(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "0010c110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104310": "\nulong FUN_00104310(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104797:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001047b9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00104d56;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010470f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104797;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010470f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_001041e0(&DAT_00107789,param_5);\n      local_78 = (char *)FUN_001041e0(&DAT_00107779);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104460:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00104cc0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00104c5b;\n          goto LAB_00104a4b;\n        default:\nswitchD_00104b70_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00106720(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00104f48;\n              }\n              if (lVar10 == -2) goto joined_r0x0010535a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00104930;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00104f48;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_001046d1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00104c18;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00104c18;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00104c18:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00104927;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00104914;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00104914:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104638;\n          goto LAB_00104927;\n        case 0x23:\n        case 0x7e:\nLAB_0010490b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00104914;\n          goto LAB_00104635;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00104b70_caseD_25;\n        case 0x27:\nswitchD_00104b70_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104638;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010465b;\n          }\n          goto LAB_00104930;\n        case 0x3f:\nswitchD_00104b70_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001052be_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104638;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010465b;\n          }\n          goto LAB_00104930;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00104568_caseD_5c;\n          if (!bVar20) {\nLAB_00104ba8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00104bc0;\n          }\n          goto LAB_00104930;\n        case 0x7b:\n        case 0x7d:\nswitchD_00104b70_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010490b;\nLAB_00104635:\n          bVar23 = false;\n          goto LAB_00104638;\n        }\nLAB_00104a40:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00104a4b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104658;\n          goto LAB_00104580;\n        }\nLAB_00104a80:\n        bVar21 = false;\n        goto joined_r0x00104a91;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00104ca0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00104568_caseD_0;\n          default:\n            goto switchD_00104b70_caseD_1;\n          case 7:\n            goto switchD_00104cc0_caseD_7;\n          case 8:\n            goto switchD_00104cc0_caseD_8;\n          case 9:\n            goto switchD_00104568_caseD_9;\n          case 10:\n            goto switchD_00104cc0_caseD_a;\n          case 0xb:\n            goto switchD_00104cc0_caseD_b;\n          case 0xc:\n            goto switchD_00104cc0_caseD_c;\n          case 0xd:\n            goto switchD_00104cc0_caseD_d;\n          case 0x20:\n            goto LAB_00104ce9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00104568_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00104cd1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00104578;\n          case 0x27:\n            goto switchD_00104b70_caseD_27;\n          case 0x3f:\n            goto switchD_00104b70_caseD_3f;\n          case 0x5c:\n            goto switchD_00104568_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00104b70_caseD_7b;\n          }\n        }\n        goto LAB_0010493e;\n      }\nLAB_00104ca0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00104cc0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00104568_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010465b;\n            }\nLAB_001050fb:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_001050fb;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105138;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010465b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00104930;\n      default:\n        bVar23 = false;\n        goto switchD_00104b70_caseD_1;\n      case 7:\nswitchD_00104cc0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00104cc0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00104568_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00104a40;\n      case 10:\nswitchD_00104cc0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00104a80;\n      case 0xb:\nswitchD_00104cc0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00104a80;\n      case 0xc:\nswitchD_00104cc0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00104cc0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00104a80;\n      case 0x20:\n        bVar5 = false;\nLAB_00104ce9:\n        uVar15 = 0x20;\n        goto LAB_00104578;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00104568_caseD_21:\n        bVar22 = false;\n        goto LAB_00104635;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00104cd1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104638;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00104580;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00104578:\n        bVar22 = false;\n        goto LAB_00104580;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00104b70_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00104b70_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00104568_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00104ba8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00104a40;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00104b70_caseD_7b;\n      }\n      if (bVar20) goto LAB_00104aa0;\n      bVar21 = false;\n      goto LAB_001045f6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00104927:\n      param_5 = 2;\nLAB_00104930:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010493e:\n      uVar13 = FUN_00104310(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00104978;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_001053c5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00104978:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00104310(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00104978;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_001053c5;\nLAB_00104d56:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001047b9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00104c5b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104460;\nswitchD_001052be_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105138:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010465b;\n    goto LAB_00104580;\n  }\n  goto LAB_0010493e;\njoined_r0x0010535a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00104f48:\n  if (1 < uVar17) {\nLAB_00104f52:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00104930;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00104608;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00104bc0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_001046d1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00104f52;\n  }\nswitchD_00104b70_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104638:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00104580:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010465b;\n  }\n  else {\nLAB_00104658:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010465b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00104bc0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00104608;\n    }\n  }\njoined_r0x00104a91:\n  if (bVar20) {\nLAB_00104aa0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00104930;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_001045f6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00104608:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104460;\n}\n\n", 
    "00103bb0": "\nbool FUN_00103bb0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00106980(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00106850": "\nbool FUN_00106850(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010aed8)();\n  return pvVar1;\n}\n\n", 
    "00102370": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010ae48)();\n  return;\n}\n\n", 
    "00102d70": "\nlong FUN_00102d70(long param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (param_2 - 1) + param_1;\n  return uVar1 - uVar1 % param_2;\n}\n\n", 
    "00106a50": "\nbool FUN_00106a50(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00106b70": "\nvoid FUN_00106b70(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_00106bd0(param_1,0,1);\n  return;\n}\n\n", 
    "00106720": "\nsize_t FUN_00106720(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00106a50(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010afe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010afe0)();\n  }\n  return;\n}\n\n", 
    "00103cc0": "\nundefined8 FUN_00103cc0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103c30(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00105750": "\nvoid FUN_00105750(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010b220;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106960": "\nint FUN_00106960(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010aed0)();\n  return _Var1;\n}\n\n", 
    "00102360": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010ae40)();\n  return;\n}\n\n", 
    "0010c1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001056d0": "\nvoid FUN_001056d0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010b220;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "001068e0": "\nbool FUN_001068e0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00103f70": "\nundefined8\nFUN_00103f70(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103eb0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102d60": "\nvoid thunk_FUN_00102ce0(void)\n\n{\n  FUN_00102ce0();\n  return;\n}\n\n", 
    "00105b90": "\nvoid FUN_00105b90(undefined8 param_1,char param_2)\n\n{\n  FUN_00105b00(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010afc8)();\n  return ppuVar1;\n}\n\n", 
    "00103eb0": "\nundefined8\nFUN_00103eb0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103e00(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010af38)();\n  return iVar1;\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010aea8)();\n  return sVar1;\n}\n\n", 
    "00106aa0": "\nchar * FUN_00106aa0(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00105ad0": "\nvoid FUN_00105ad0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00105a00(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106590": "\nvoid FUN_00106590(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_001065eb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_001065eb:\n                    /* WARNING: Subroutine does not return */\n      FUN_001066e0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00106520(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00103e00": "\nundefined8\nFUN_00103e00(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103d50(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010af88)();\n  return iVar1;\n}\n\n", 
    "001059e0": "\nvoid FUN_001059e0(undefined8 param_1)\n\n{\n  FUN_001059b0(0,param_1);\n  return;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0010aef8)();\n  return sVar1;\n}\n\n", 
    "001023b0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ae68)();\n  return;\n}\n\n", 
    "00105d80": "\nvoid FUN_00105d80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105d60(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001062d0": "\nvoid FUN_001062d0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00105e80();\n  return;\n}\n\n", 
    "00106900": "\nbool FUN_00106900(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00105810": "\nundefined8 FUN_00105810(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0010b220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00104310(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_001064c0(lVar3 + 1);\n  FUN_00104310(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010afc0)();\n  return iVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010af30)();\n  return pvVar1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010aea0)();\n  return sVar1;\n}\n\n", 
    "00106cd0": "\nvoid FUN_00106cd0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0010b008);\n  return;\n}\n\n", 
    "00104040": "\nundefined8\nFUN_00104040(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103f70(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0010af80)();\n  return iVar1;\n}\n\n", 
    "001059d0": "\nvoid FUN_001059d0(void)\n\n{\n  FUN_001054d0();\n  return;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0010aef0)();\n  return iVar1;\n}\n\n", 
    "001023a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ae60)();\n  return;\n}\n\n", 
    "00105d70": "\nvoid FUN_00105d70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105d60(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102410": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ae98)();\n  return;\n}\n\n", 
    "00103500": "\nvoid FUN_00103500(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  long lVar4;\n  undefined **ppuVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  undefined1 *puVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar7 = (byte *)0x107541;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_001074c7;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar5 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar7 == (byte *)0x0;\n    if (bVar10) break;\n    lVar4 = 4;\n    pbVar6 = &DAT_001074c3;\n    do {\n      if (lVar4 == 0) break;\n      lVar4 = lVar4 + -1;\n      bVar9 = *pbVar6 < *pbVar7;\n      bVar10 = *pbVar6 == *pbVar7;\n      pbVar6 = pbVar6 + 1;\n      pbVar7 = pbVar7 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar7 = *(byte **)((long)ppuVar5 + 0x20);\n    ppuVar5 = (undefined **)((long)ppuVar5 + 0x10);\n  }\n  puVar8 = *(undefined1 **)((long)ppuVar5 + 0x18);\n  if (puVar8 == (undefined1 *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar8 = &DAT_001074c3;\n        goto LAB_0010371e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar8 = &DAT_001074c3;\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_001074c3);\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010371e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,&DAT_001074c3);\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_001074c3);\n    if (puVar8 != &DAT_001074c3) {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,puVar8,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102450": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010aeb8)();\n  return;\n}\n\n", 
    "00102694": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_00105f28::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_0010af48)();\n  return iVar1;\n}\n\n", 
    "001023d0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ae78)();\n  return;\n}\n\n", 
    "00102f70": "\nundefined8\nFUN_00102f70(byte *param_1,undefined8 param_2,byte *param_3,ulong param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9,char param_10)\n\n{\n  uint uVar1;\n  int iVar2;\n  long lVar3;\n  byte *pbVar4;\n  ulong uVar5;\n  uint *puVar6;\n  undefined8 uVar7;\n  int *piVar8;\n  undefined8 uVar9;\n  byte *pbVar10;\n  int iVar11;\n  byte bVar12;\n  int iVar13;\n  byte *pbVar14;\n  long in_FS_OFFSET;\n  bool bVar15;\n  byte *local_98;\n  int local_4c;\n  byte *local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  bVar15 = true;\n  pbVar14 = param_1 + 1;\n  iVar11 = DAT_0010b0f0;\n  local_98 = param_1;\n  local_48 = param_3;\nLAB_00103008:\n  pbVar10 = param_3;\n  pbVar4 = pbVar14;\n  if (param_3 + param_4 <= local_48) goto LAB_00103240;\nLAB_00103013:\n  pbVar4 = pbVar14;\n  if (pbVar14 <= local_98) goto LAB_0010328e;\nLAB_0010301d:\n  iVar13 = DAT_0010b0f4;\n  local_4c = 0;\n  if (bVar15) {\n    iVar2 = ioctl(DAT_0010b0f4,0x541b,&local_4c);\n    if (iVar2 < 0) {\n      puVar6 = (uint *)__errno_location();\n      uVar1 = *puVar6;\n      bVar15 = uVar1 == 0x5f;\n      if (uVar1 < 0x27) {\n        bVar15 = (bool)(bVar15 | (byte)(0x4002480000 >> ((byte)uVar1 & 0x3f)) & 1);\n      }\n      if (bVar15 == false) {\n        uVar7 = FUN_00105ad0(4,DAT_0010b0f8);\n        uVar9 = dcgettext(0,\"cannot do ioctl on %s\",5);\n        error(0,*puVar6,uVar9,uVar7);\n        uVar7 = 0;\n        goto LAB_0010340e;\n      }\n      bVar15 = false;\n    }\n    if (local_4c == 0) goto LAB_00103030;\n  }\n  else {\nLAB_00103030:\n    FUN_00102f00(param_3,&local_48);\n    iVar13 = DAT_0010b0f4;\n  }\n  lVar3 = FUN_00105da0(iVar13,param_1,param_2);\n  if (lVar3 == -1) {\n    uVar7 = FUN_00105bd0(0,3,DAT_0010b0f8);\n    piVar8 = __errno_location();\n    error(0,*piVar8,\"%s\",uVar7);\n    FUN_00102f00(param_3,&local_48);\n    uVar7 = 0;\n  }\n  else {\n    if (lVar3 != 0) {\n      local_98 = param_1 + lVar3;\n      *local_98 = 10;\n      pbVar4 = param_1;\n      pbVar14 = param_1 + 1;\nLAB_00103082:\n      bVar12 = *pbVar4;\nLAB_00103086:\n      if (bVar12 != 10) {\n        if ((-1 < iVar11) && (param_7 != '\\0')) {\n          FUN_00102d90();\n          local_48 = (byte *)stpcpy((char *)local_48,PTR_DAT_0010b030);\n        }\n        if (param_5 == '\\0') {\n          do {\n            if ((bVar12 == 9) && (param_6 != '\\0')) {\n              pbVar4 = local_48 + 1;\n              *local_48 = 0x5e;\n              local_48 = local_48 + 2;\n              *pbVar4 = 0x49;\n            }\n            else {\n              if (bVar12 == 10) goto LAB_00103228;\n              *local_48 = bVar12;\n              local_48 = local_48 + 1;\n            }\n            bVar12 = *pbVar14;\n            pbVar14 = pbVar14 + 1;\n          } while( true );\n        }\n        do {\n          if (bVar12 < 0x20) {\n            if ((bVar12 == 9) && (param_6 != '\\x01')) {\n              *local_48 = 9;\n              local_48 = local_48 + 1;\n              goto LAB_00103138;\n            }\n            if (bVar12 == 10) goto LAB_00103228;\n            bVar12 = bVar12 + 0x40;\n            *local_48 = 0x5e;\n            pbVar10 = local_48 + 1;\n            pbVar4 = local_48 + 2;\nLAB_001031dc:\n            local_48 = pbVar4;\n            *pbVar10 = bVar12;\n          }\n          else {\n            pbVar4 = local_48 + 1;\n            pbVar10 = local_48;\n            if (bVar12 < 0x7f) goto LAB_001031dc;\n            if (bVar12 == 0x7f) {\nLAB_001031e8:\n              local_48 = pbVar4;\n              *pbVar10 = 0x5e;\n              *local_48 = 0x3f;\n              local_48 = local_48 + 1;\n            }\n            else {\n              *local_48 = 0x4d;\n              pbVar10 = local_48 + 2;\n              *pbVar4 = 0x2d;\n              pbVar4 = local_48 + 3;\n              if (bVar12 < 0xa0) {\n                *pbVar10 = 0x5e;\n                local_48 = local_48 + 4;\n                *pbVar4 = bVar12 - 0x40;\n              }\n              else {\n                if (bVar12 == 0xff) goto LAB_001031e8;\n                *pbVar10 = bVar12 + 0x80;\n                local_48 = pbVar4;\n              }\n            }\n          }\nLAB_00103138:\n          bVar12 = *pbVar14;\n          pbVar14 = pbVar14 + 1;\n        } while( true );\n      }\n      goto LAB_00103008;\n    }\n    FUN_00102f00(param_3,&local_48);\n    uVar7 = 1;\n  }\nLAB_0010340e:\n  DAT_0010b0f0 = iVar11;\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar7;\n  }\nLAB_0010347a:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\nLAB_00103228:\n  iVar11 = -1;\n  pbVar10 = param_3;\n  pbVar4 = pbVar14;\n  if (local_48 < param_3 + param_4) goto LAB_00103013;\nLAB_00103240:\n  do {\n    uVar5 = FUN_00103a20(1,pbVar10,param_4);\n    if (uVar5 != param_4) {\n      uVar7 = dcgettext(0,\"write error\",5);\n      piVar8 = __errno_location();\n      error(1,*piVar8,uVar7);\n      goto LAB_0010347a;\n    }\n    pbVar10 = pbVar10 + param_4;\n    uVar5 = (long)local_48 - (long)pbVar10;\n  } while (param_4 <= uVar5);\n  memmove(param_3,pbVar10,uVar5);\n  local_48 = param_3 + uVar5;\n  if (local_98 < pbVar4) goto LAB_0010301d;\nLAB_0010328e:\n  iVar11 = iVar11 + 1;\n  pbVar14 = pbVar4 + 1;\n  if (iVar11 < 1) goto LAB_001032e8;\n  if ((iVar11 == 1) || (iVar11 = 2, param_10 == '\\0')) goto LAB_001032b6;\n  bVar12 = *pbVar4;\n  goto LAB_00103086;\nLAB_001032b6:\n  if ((param_8 != '\\x01') && (param_7 != '\\0')) {\n    FUN_00102d90();\n    local_48 = (byte *)stpcpy((char *)local_48,PTR_DAT_0010b030);\n  }\nLAB_001032e8:\n  pbVar10 = local_48 + 1;\n  if (param_9 != '\\0') {\n    *local_48 = 0x24;\n    pbVar10 = local_48 + 2;\n    local_48 = local_48 + 1;\n  }\n  *local_48 = 10;\n  local_48 = pbVar10;\n  goto LAB_00103082;\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010af08)();\n  return iVar1;\n}\n\n", 
    "0010c080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106c50": "\nvoid FUN_00106c50(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001062f0": "\nvoid FUN_001062f0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00105e80();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102685": "\nvoid switchD_001043af::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106800": "\nbool FUN_00106800(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0010c088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010af40)();\n  return pcVar1;\n}\n\n", 
    "00102440": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010aeb0)();\n  return;\n}\n\n", 
    "00102cb0": "\n/* WARNING: Removing unreachable block (ram,0x00102cc3) */\n/* WARNING: Removing unreachable block (ram,0x00102ccf) */\n\nvoid FUN_00102cb0(void)\n\n{\n  return;\n}\n\n", 
    "00102680": "\nvoid FUN_00102680(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105ae0": "\nvoid FUN_00105ae0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105a60(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00106bd0": "\nint FUN_00106bd0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00106cf0": "\nvoid FUN_00106cf0(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010af00)();\n  return iVar1;\n}\n\n", 
    "0010c090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_write_0010ae70)();\n  return sVar1;\n}\n\n", 
    "00102d20": "\nvoid FUN_00102d20(void)\n\n{\n  if (DAT_0010b0e8 == '\\0') {\n    if (PTR___cxa_finalize_0010aff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0010b008);\n    }\n    FUN_00102cb0();\n    DAT_0010b0e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001059f0": "\nvoid FUN_001059f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001059d0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102e40": "\nlong FUN_00102e40(undefined8 param_1,undefined8 param_2,undefined8 param_3,ulong param_4,\n                 undefined8 param_5,undefined4 param_6)\n\n{\n  uint uVar1;\n  int iVar2;\n  long lVar3;\n  long lVar4;\n  undefined8 uVar5;\n  int *piVar6;\n  uint *puVar7;\n  byte *pbVar8;\n  ulong uVar9;\n  undefined8 uVar10;\n  byte *__dest;\n  undefined8 unaff_RBX;\n  byte *pbVar11;\n  undefined8 unaff_RBP;\n  long *plVar12;\n  ulong uVar13;\n  byte *pbVar14;\n  char cVar15;\n  char cVar16;\n  int iVar17;\n  byte bVar18;\n  int iVar19;\n  byte *pbVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  byte *pbStack_c8;\n  int iStack_7c;\n  byte *pbStack_78;\n  long lStack_70;\n  long lStack_60;\n  long lStack_58;\n  undefined8 uStack_50;\n  char cStack_28;\n  char cStack_20;\n  char cVar22;\n  char cVar23;\n  \n  do {\n    lVar4 = FUN_00105da0(DAT_0010b0f4,param_1,param_2);\n    if (lVar4 == -1) {\n      uVar5 = FUN_00105bd0(0,3,DAT_0010b0f8);\n      piVar6 = __errno_location();\n      error(0,*piVar6,\"%s\",uVar5);\n      return 0;\n    }\n    if (lVar4 == 0) {\n      return 1;\n    }\n    lVar3 = FUN_00103a20(1,param_1,lVar4);\n    cVar23 = (char)unaff_RBP;\n    cVar15 = (char)param_5;\n    cVar22 = (char)unaff_RBX;\n    cVar16 = (char)param_6;\n  } while (lVar3 == lVar4);\n  uVar5 = dcgettext(0,\"write error\",5);\n  puVar7 = (uint *)__errno_location();\n  lStack_60 = 1;\n  plVar12 = (long *)(ulong)*puVar7;\n  lVar4 = error(1,plVar12,uVar5);\n  lStack_58 = *plVar12 - lStack_60;\n  if (lStack_58 == 0) {\n    return lVar4;\n  }\n  lVar4 = FUN_00103a20(1,lStack_60,lStack_58);\n  if (lVar4 == lStack_58) {\n    *plVar12 = lStack_60;\n    return lVar4;\n  }\n  uStack_50 = dcgettext(0,\"write error\",5);\n  puVar7 = (uint *)__errno_location();\n  pbVar14 = (byte *)0x1;\n  uVar13 = (ulong)*puVar7;\n  error(1,uVar13,uStack_50);\n  cStack_28 = (char)param_1;\n  cStack_20 = (char)uVar5;\n  lStack_70 = *(long *)(in_FS_OFFSET + 0x28);\n  bVar21 = true;\n  pbVar20 = pbVar14 + 1;\n  iVar17 = DAT_0010b0f0;\n  pbStack_c8 = pbVar14;\n  pbStack_78 = __dest;\nLAB_00103008:\n  pbVar11 = __dest;\n  pbVar8 = pbVar20;\n  if (__dest + param_4 <= pbStack_78) goto LAB_00103240;\nLAB_00103013:\n  pbVar8 = pbVar20;\n  if (pbVar20 <= pbStack_c8) goto LAB_0010328e;\nLAB_0010301d:\n  iVar19 = DAT_0010b0f4;\n  iStack_7c = 0;\n  if (bVar21) {\n    iVar2 = ioctl(DAT_0010b0f4,0x541b,&iStack_7c);\n    if (iVar2 < 0) {\n      puVar7 = (uint *)__errno_location();\n      uVar1 = *puVar7;\n      bVar21 = uVar1 == 0x5f;\n      if (uVar1 < 0x27) {\n        bVar21 = (bool)(bVar21 | (byte)(0x4002480000 >> ((byte)uVar1 & 0x3f)) & 1);\n      }\n      if (bVar21 == false) {\n        uVar5 = FUN_00105ad0(4,DAT_0010b0f8);\n        uVar10 = dcgettext(0,\"cannot do ioctl on %s\",5);\n        error(0,*puVar7,uVar10,uVar5);\n        lVar4 = 0;\n        goto LAB_0010340e;\n      }\n      bVar21 = false;\n    }\n    if (iStack_7c == 0) goto LAB_00103030;\n  }\n  else {\nLAB_00103030:\n    FUN_00102f00(__dest,&pbStack_78);\n    iVar19 = DAT_0010b0f4;\n  }\n  lVar4 = FUN_00105da0(iVar19,pbVar14,uVar13);\n  if (lVar4 == -1) {\n    uVar5 = FUN_00105bd0(0,3,DAT_0010b0f8);\n    piVar6 = __errno_location();\n    error(0,*piVar6,\"%s\",uVar5);\n    FUN_00102f00(__dest,&pbStack_78);\n    lVar4 = 0;\n  }\n  else {\n    if (lVar4 != 0) {\n      pbStack_c8 = pbVar14 + lVar4;\n      *pbStack_c8 = 10;\n      pbVar8 = pbVar14;\n      pbVar20 = pbVar14 + 1;\nLAB_00103082:\n      bVar18 = *pbVar8;\nLAB_00103086:\n      if (bVar18 != 10) {\n        if ((-1 < iVar17) && (cStack_28 != '\\0')) {\n          FUN_00102d90();\n          pbStack_78 = (byte *)stpcpy((char *)pbStack_78,PTR_DAT_0010b030);\n        }\n        if (cVar15 == '\\0') {\n          do {\n            if ((bVar18 == 9) && (cVar16 != '\\0')) {\n              pbVar8 = pbStack_78 + 1;\n              *pbStack_78 = 0x5e;\n              pbStack_78 = pbStack_78 + 2;\n              *pbVar8 = 0x49;\n            }\n            else {\n              if (bVar18 == 10) goto LAB_00103228;\n              *pbStack_78 = bVar18;\n              pbStack_78 = pbStack_78 + 1;\n            }\n            bVar18 = *pbVar20;\n            pbVar20 = pbVar20 + 1;\n          } while( true );\n        }\n        do {\n          if (bVar18 < 0x20) {\n            if ((bVar18 == 9) && (cVar16 != '\\x01')) {\n              *pbStack_78 = 9;\n              pbStack_78 = pbStack_78 + 1;\n              goto LAB_00103138;\n            }\n            if (bVar18 == 10) goto LAB_00103228;\n            bVar18 = bVar18 + 0x40;\n            *pbStack_78 = 0x5e;\n            pbVar11 = pbStack_78 + 1;\n            pbVar8 = pbStack_78 + 2;\nLAB_001031dc:\n            pbStack_78 = pbVar8;\n            *pbVar11 = bVar18;\n          }\n          else {\n            pbVar8 = pbStack_78 + 1;\n            pbVar11 = pbStack_78;\n            if (bVar18 < 0x7f) goto LAB_001031dc;\n            if (bVar18 == 0x7f) {\nLAB_001031e8:\n              pbStack_78 = pbVar8;\n              *pbVar11 = 0x5e;\n              *pbStack_78 = 0x3f;\n              pbStack_78 = pbStack_78 + 1;\n            }\n            else {\n              *pbStack_78 = 0x4d;\n              pbVar11 = pbStack_78 + 2;\n              *pbVar8 = 0x2d;\n              pbVar8 = pbStack_78 + 3;\n              if (bVar18 < 0xa0) {\n                *pbVar11 = 0x5e;\n                pbStack_78 = pbStack_78 + 4;\n                *pbVar8 = bVar18 - 0x40;\n              }\n              else {\n                if (bVar18 == 0xff) goto LAB_001031e8;\n                *pbVar11 = bVar18 + 0x80;\n                pbStack_78 = pbVar8;\n              }\n            }\n          }\nLAB_00103138:\n          bVar18 = *pbVar20;\n          pbVar20 = pbVar20 + 1;\n        } while( true );\n      }\n      goto LAB_00103008;\n    }\n    FUN_00102f00(__dest,&pbStack_78);\n    lVar4 = 1;\n  }\nLAB_0010340e:\n  DAT_0010b0f0 = iVar17;\n  if (lStack_70 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar4;\n  }\nLAB_0010347a:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\nLAB_00103228:\n  iVar17 = -1;\n  pbVar11 = __dest;\n  pbVar8 = pbVar20;\n  if (pbStack_78 < __dest + param_4) goto LAB_00103013;\nLAB_00103240:\n  do {\n    uVar9 = FUN_00103a20(1,pbVar11,param_4);\n    if (uVar9 != param_4) {\n      uVar5 = dcgettext(0,\"write error\",5);\n      piVar6 = __errno_location();\n      error(1,*piVar6,uVar5);\n      goto LAB_0010347a;\n    }\n    pbVar11 = pbVar11 + param_4;\n    uVar9 = (long)pbStack_78 - (long)pbVar11;\n  } while (param_4 <= uVar9);\n  memmove(__dest,pbVar11,uVar9);\n  pbStack_78 = __dest + uVar9;\n  if (pbStack_c8 < pbVar8) goto LAB_0010301d;\nLAB_0010328e:\n  iVar17 = iVar17 + 1;\n  pbVar20 = pbVar8 + 1;\n  if (iVar17 < 1) goto LAB_001032e8;\n  if ((iVar17 == 1) || (iVar17 = 2, cVar23 == '\\0')) goto LAB_001032b6;\n  bVar18 = *pbVar8;\n  goto LAB_00103086;\nLAB_001032b6:\n  if ((cStack_20 != '\\x01') && (cStack_28 != '\\0')) {\n    FUN_00102d90();\n    pbStack_78 = (byte *)stpcpy((char *)pbStack_78,PTR_DAT_0010b030);\n  }\nLAB_001032e8:\n  pbVar11 = pbStack_78 + 1;\n  if (cVar22 != '\\0') {\n    *pbStack_78 = 0x24;\n    pbVar11 = pbStack_78 + 2;\n    pbStack_78 = pbStack_78 + 1;\n  }\n  *pbStack_78 = 10;\n  pbStack_78 = pbVar11;\n  goto LAB_00103082;\n}\n\n", 
    "00105c70": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105c70(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0010b220;\n  uStack_60 = uRam000000000010b228;\n  local_38 = DAT_0010b250;\n  local_58 = _DAT_0010b230;\n  uStack_50 = uRam000000000010b238;\n  local_48 = _DAT_0010b240;\n  uStack_40 = uRam000000000010b248;\n  FUN_00105750(&local_68);\n  FUN_001054d0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d90": "\nvoid FUN_00105d90(undefined8 param_1)\n\n{\n  FUN_00105d80(0,param_1);\n  return;\n}\n\n", 
    "00106910": "\nulong FUN_00106910(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00104130": "\nundefined8\nFUN_00104130(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106900((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00104040(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00105bb0": "\nvoid FUN_00105bb0(undefined8 param_1)\n\n{\n  FUN_00105b90(param_1,0x3a);\n  return;\n}\n\n", 
    "00106430": "\nvoid FUN_00106430(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001025b0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010af68)();\n  return;\n}\n\n", 
    "00105b00": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105b00(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0010b220;\n  uStack_40 = uRam000000000010b228;\n  local_38 = _DAT_0010b230;\n  uStack_30 = uRam000000000010b238;\n  local_28 = _DAT_0010b240;\n  uStack_20 = uRam000000000010b248;\n  local_18 = DAT_0010b250;\n  FUN_001056f0(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_001054d0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105d40": "\nvoid FUN_00105d40(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00105c70(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010c060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b60": "\nint * FUN_00103b60(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010c180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010afa0)();\n  return;\n}\n\n", 
    "0010c068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010af10)();\n  return iVar1;\n}\n\n", 
    "0010c188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010af60)();\n  return pcVar1;\n}\n\n", 
    "00102f00": "\nlong FUN_00102f00(long param_1,long *param_2,undefined8 param_3,ulong param_4,char param_5,\n                 char param_6,char param_7)\n\n{\n  uint uVar1;\n  int iVar2;\n  long in_RAX;\n  long lVar3;\n  uint *puVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  undefined8 uVar7;\n  int *piVar8;\n  undefined8 uVar9;\n  byte *__dest;\n  byte *pbVar10;\n  char unaff_BPL;\n  ulong uVar11;\n  byte *pbVar12;\n  char unaff_R12B;\n  int iVar13;\n  byte bVar14;\n  int iVar15;\n  byte *pbVar16;\n  long in_FS_OFFSET;\n  bool bVar17;\n  char unaff_retaddr;\n  byte *pbStack_b0;\n  int iStack_64;\n  byte *pbStack_60;\n  long lStack_58;\n  long lStack_48;\n  long lStack_40;\n  undefined8 uStack_38;\n  \n  lStack_40 = *param_2 - param_1;\n  if (lStack_40 == 0) {\n    return in_RAX;\n  }\n  lVar3 = FUN_00103a20(1,param_1,lStack_40);\n  if (lVar3 == lStack_40) {\n    *param_2 = param_1;\n    return lVar3;\n  }\n  uStack_38 = dcgettext(0,\"write error\",5);\n  puVar4 = (uint *)__errno_location();\n  pbVar12 = (byte *)0x1;\n  uVar11 = (ulong)*puVar4;\n  error(1,uVar11,uStack_38);\n  lStack_58 = *(long *)(in_FS_OFFSET + 0x28);\n  bVar17 = true;\n  pbVar16 = pbVar12 + 1;\n  iVar13 = DAT_0010b0f0;\n  pbStack_b0 = pbVar12;\n  pbStack_60 = __dest;\n  lStack_48 = param_1;\nLAB_00103008:\n  pbVar10 = __dest;\n  pbVar5 = pbVar16;\n  if (__dest + param_4 <= pbStack_60) goto LAB_00103240;\nLAB_00103013:\n  pbVar5 = pbVar16;\n  if (pbVar16 <= pbStack_b0) goto LAB_0010328e;\nLAB_0010301d:\n  iVar15 = DAT_0010b0f4;\n  iStack_64 = 0;\n  if (bVar17) {\n    iVar2 = ioctl(DAT_0010b0f4,0x541b,&iStack_64);\n    if (iVar2 < 0) {\n      puVar4 = (uint *)__errno_location();\n      uVar1 = *puVar4;\n      bVar17 = uVar1 == 0x5f;\n      if (uVar1 < 0x27) {\n        bVar17 = (bool)(bVar17 | (byte)(0x4002480000 >> ((byte)uVar1 & 0x3f)) & 1);\n      }\n      if (bVar17 == false) {\n        uVar7 = FUN_00105ad0(4,DAT_0010b0f8);\n        uVar9 = dcgettext(0,\"cannot do ioctl on %s\",5);\n        error(0,*puVar4,uVar9,uVar7);\n        lVar3 = 0;\n        goto LAB_0010340e;\n      }\n      bVar17 = false;\n    }\n    if (iStack_64 == 0) goto LAB_00103030;\n  }\n  else {\nLAB_00103030:\n    FUN_00102f00(__dest,&pbStack_60);\n    iVar15 = DAT_0010b0f4;\n  }\n  lVar3 = FUN_00105da0(iVar15,pbVar12,uVar11);\n  if (lVar3 == -1) {\n    uVar7 = FUN_00105bd0(0,3,DAT_0010b0f8);\n    piVar8 = __errno_location();\n    error(0,*piVar8,\"%s\",uVar7);\n    FUN_00102f00(__dest,&pbStack_60);\n    lVar3 = 0;\n  }\n  else {\n    if (lVar3 != 0) {\n      pbStack_b0 = pbVar12 + lVar3;\n      *pbStack_b0 = 10;\n      pbVar5 = pbVar12;\n      pbVar16 = pbVar12 + 1;\nLAB_00103082:\n      bVar14 = *pbVar5;\nLAB_00103086:\n      if (bVar14 != 10) {\n        if ((-1 < iVar13) && (unaff_BPL != '\\0')) {\n          FUN_00102d90();\n          pbStack_60 = (byte *)stpcpy((char *)pbStack_60,PTR_DAT_0010b030);\n        }\n        if (param_5 == '\\0') {\n          do {\n            if ((bVar14 == 9) && (param_6 != '\\0')) {\n              pbVar5 = pbStack_60 + 1;\n              *pbStack_60 = 0x5e;\n              pbStack_60 = pbStack_60 + 2;\n              *pbVar5 = 0x49;\n            }\n            else {\n              if (bVar14 == 10) goto LAB_00103228;\n              *pbStack_60 = bVar14;\n              pbStack_60 = pbStack_60 + 1;\n            }\n            bVar14 = *pbVar16;\n            pbVar16 = pbVar16 + 1;\n          } while( true );\n        }\n        do {\n          if (bVar14 < 0x20) {\n            if ((bVar14 == 9) && (param_6 != '\\x01')) {\n              *pbStack_60 = 9;\n              pbStack_60 = pbStack_60 + 1;\n              goto LAB_00103138;\n            }\n            if (bVar14 == 10) goto LAB_00103228;\n            bVar14 = bVar14 + 0x40;\n            *pbStack_60 = 0x5e;\n            pbVar10 = pbStack_60 + 1;\n            pbVar5 = pbStack_60 + 2;\nLAB_001031dc:\n            pbStack_60 = pbVar5;\n            *pbVar10 = bVar14;\n          }\n          else {\n            pbVar5 = pbStack_60 + 1;\n            pbVar10 = pbStack_60;\n            if (bVar14 < 0x7f) goto LAB_001031dc;\n            if (bVar14 == 0x7f) {\nLAB_001031e8:\n              pbStack_60 = pbVar5;\n              *pbVar10 = 0x5e;\n              *pbStack_60 = 0x3f;\n              pbStack_60 = pbStack_60 + 1;\n            }\n            else {\n              *pbStack_60 = 0x4d;\n              pbVar10 = pbStack_60 + 2;\n              *pbVar5 = 0x2d;\n              pbVar5 = pbStack_60 + 3;\n              if (bVar14 < 0xa0) {\n                *pbVar10 = 0x5e;\n                pbStack_60 = pbStack_60 + 4;\n                *pbVar5 = bVar14 - 0x40;\n              }\n              else {\n                if (bVar14 == 0xff) goto LAB_001031e8;\n                *pbVar10 = bVar14 + 0x80;\n                pbStack_60 = pbVar5;\n              }\n            }\n          }\nLAB_00103138:\n          bVar14 = *pbVar16;\n          pbVar16 = pbVar16 + 1;\n        } while( true );\n      }\n      goto LAB_00103008;\n    }\n    FUN_00102f00(__dest,&pbStack_60);\n    lVar3 = 1;\n  }\nLAB_0010340e:\n  DAT_0010b0f0 = iVar13;\n  if (lStack_58 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\nLAB_0010347a:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\nLAB_00103228:\n  iVar13 = -1;\n  pbVar10 = __dest;\n  pbVar5 = pbVar16;\n  if (pbStack_60 < __dest + param_4) goto LAB_00103013;\nLAB_00103240:\n  do {\n    uVar6 = FUN_00103a20(1,pbVar10,param_4);\n    if (uVar6 != param_4) {\n      uVar7 = dcgettext(0,\"write error\",5);\n      piVar8 = __errno_location();\n      error(1,*piVar8,uVar7);\n      goto LAB_0010347a;\n    }\n    pbVar10 = pbVar10 + param_4;\n    uVar6 = (long)pbStack_60 - (long)pbVar10;\n  } while (param_4 <= uVar6);\n  memmove(__dest,pbVar10,uVar6);\n  pbStack_60 = __dest + uVar6;\n  if (pbStack_b0 < pbVar5) goto LAB_0010301d;\nLAB_0010328e:\n  iVar13 = iVar13 + 1;\n  pbVar16 = pbVar5 + 1;\n  if (iVar13 < 1) goto LAB_001032e8;\n  if ((iVar13 == 1) || (iVar13 = 2, param_7 == '\\0')) goto LAB_001032b6;\n  bVar14 = *pbVar5;\n  goto LAB_00103086;\nLAB_001032b6:\n  if ((unaff_R12B != '\\x01') && (unaff_BPL != '\\0')) {\n    FUN_00102d90();\n    pbStack_60 = (byte *)stpcpy((char *)pbStack_60,PTR_DAT_0010b030);\n  }\nLAB_001032e8:\n  pbVar10 = pbStack_60 + 1;\n  if (unaff_retaddr != '\\0') {\n    *pbStack_60 = 0x24;\n    pbVar10 = pbStack_60 + 2;\n    pbStack_60 = pbStack_60 + 1;\n  }\n  *pbStack_60 = 10;\n  pbStack_60 = pbVar10;\n  goto LAB_00103082;\n}\n\n", 
    "00106d04": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "001039f0": "\nvoid FUN_001039f0(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n", 
    "001064c0": "\nvoid FUN_001064c0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_001066e0();\n  }\n  return;\n}\n\n", 
    "0010c070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getpagesize_0010af98)();\n  return iVar1;\n}\n\n", 
    "0010c078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010afb8)();\n  return iVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010af28)();\n  return iVar1;\n}\n\n", 
    "0010c048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105bd0": "\nvoid FUN_00105bd0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103b60(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_001056f0(puVar1,0x3a,1);\n  FUN_001054d0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106cc0": "\nvoid FUN_00106cc0(void)\n\n{\n  return;\n}\n\n", 
    "00106690": "\nvoid FUN_00106690(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_001064c0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00102e10": "\nvoid FUN_00102e10(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010c0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025d0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010af78)();\n  return;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010aee8)();\n  return iVar1;\n}\n\n", 
    "0010c160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a00": "\nvoid FUN_00105a00(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103b60(auStack_58);\n  FUN_001054d0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105d60": "\nvoid FUN_00105d60(void)\n\n{\n  FUN_001054d0();\n  return;\n}\n\n", 
    "00105e80": "\nundefined8\nFUN_00105e80(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00107ebb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106149;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00106149:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_001061eb;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_001061eb:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00105f9d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00105f9d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010c040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010af20)();\n  return pvVar1;\n}\n\n", 
    "00105910": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105910(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0010b0a0;\n  if (1 < DAT_0010b098) {\n    ppvVar2 = (void **)(PTR_DAT_0010b0a0 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0010b0a0 + (ulong)(DAT_0010b098 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0010b120) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0010b0b8 = &DAT_0010b120;\n    _DAT_0010b0b0 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0010b0b0) {\n    free(__ptr_00);\n    PTR_DAT_0010b0a0 = &DAT_0010b0b0;\n  }\n  DAT_0010b098 = 1;\n  return;\n}\n\n", 
    "0010c168": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_stpcpy_0010ae90)();\n  return pcVar1;\n}\n\n", 
    "00102640": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010afb0)();\n  return;\n}\n\n", 
    "00106560": "\nvoid FUN_00106560(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00106520();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001066e0();\n}\n\n", 
    "00105bc0": "\nvoid FUN_00105bc0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105b00(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ioctl(int __fd,ulong __request,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ioctl_0010aee0)();\n  return iVar1;\n}\n\n", 
    "001059b0": "\nvoid FUN_001059b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001054d0(param_1,param_2,0xffffffffffffffff,&DAT_0010b220);\n  return;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_0010af70)();\n  return pvVar1;\n}\n\n", 
    "0010c050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getpagesize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001064e0": "\nvoid FUN_001064e0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_001064c0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001066e0();\n}\n\n", 
    "001041e0": "\nchar * FUN_001041e0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00106aa0();\n    iVar1 = FUN_00104130(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00104130(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00107771;\n      }\n      else {\n        pcVar2 = &DAT_0010776e;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00107775;\n    }\n    else {\n      pcVar2 = &DAT_0010776a;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010afa8)();\n  return sVar1;\n}\n\n", 
    "0010c058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * stpcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105900": "\nvoid FUN_00105900(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105810(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010af18)();\n  return pvVar1;\n}\n\n", 
    "0010c178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}