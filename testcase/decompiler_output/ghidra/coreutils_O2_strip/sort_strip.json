{
    "00103bd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_0011fe20)();\n  return iVar1;\n}\n\n", 
    "00103ab0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_0011fd90)();\n  return pvVar1;\n}\n\n", 
    "00121350": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103cf0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtold(char *__nptr,char **__endptr)\n\n{\n  double dVar1;\n  \n  dVar1 = (double)(*(code *)PTR_strtold_0011feb0)();\n  return dVar1;\n}\n\n", 
    "00121230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_init(pthread_cond_t *__cond,pthread_condattr_t *__cond_attr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114810": "\nulong FUN_00114810(ulong param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x3f) | param_1 << 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00108250": "\nchar * FUN_00108250(char *param_1,long param_2,long param_3)\n\n{\n  byte bVar1;\n  char cVar2;\n  long lVar3;\n  char *pcVar4;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  long extraout_RDX_01;\n  undefined1 *puVar5;\n  ulong uVar6;\n  char *pcVar7;\n  char *pcVar8;\n  ulong uVar9;\n  long lVar10;\n  \n  uVar9 = *(ulong *)(param_3 + 0x18);\n  pcVar4 = param_1 + param_2 + -1;\n  lVar3 = *(long *)(param_3 + 0x10) + (ulong)(uVar9 == 0);\n  pcVar7 = param_1;\n  if (DAT_00120028 == 0x80) {\n    if ((param_1 < pcVar4) && (lVar10 = lVar3 + -1, lVar3 != 0)) {\n      bVar1 = FUN_001053b0((int)*param_1);\n      puVar5 = &DAT_001206c0;\n      cVar2 = (&DAT_001206c0)[bVar1];\n      param_3 = extraout_RDX;\n      while( true ) {\n        while (cVar2 != '\\0') {\n          param_1 = param_1 + 1;\n          pcVar7 = param_1;\n          if (pcVar4 <= param_1) goto LAB_001082a1;\n          bVar1 = FUN_001053b0((int)*param_1);\n          param_3 = extraout_RDX_00;\n          cVar2 = puVar5[bVar1];\n        }\n        pcVar7 = param_1;\n        if (pcVar4 <= param_1) break;\n        do {\n          param_1 = param_1 + 1;\n          pcVar7 = pcVar4;\n          if (pcVar4 == param_1) goto LAB_001082a1;\n          bVar1 = FUN_001053b0((int)*param_1);\n          cVar2 = puVar5[bVar1];\n          param_3 = extraout_RDX_01;\n        } while (cVar2 == '\\0');\n        pcVar7 = param_1;\n        if ((pcVar4 <= param_1) || (lVar10 = lVar10 + -1, lVar10 == -1)) break;\n      }\n    }\n  }\n  else if ((param_1 < pcVar4) && (uVar6 = lVar3 - 1, lVar3 != 0)) {\n    do {\n      while (DAT_00120028 == *param_1) {\n        pcVar7 = param_1;\n        if (pcVar4 <= param_1) goto LAB_001082a1;\n        if ((uVar9 | uVar6) == 0) {\n          return param_1;\n        }\n        pcVar7 = param_1 + 1;\n        if ((pcVar4 <= pcVar7) || (uVar6 = uVar6 - 1, param_1 = pcVar7, uVar6 == 0xffffffffffffffff)\n           ) goto LAB_001082a1;\n      }\n      pcVar7 = param_1 + 1;\n      param_1 = pcVar7;\n    } while (pcVar7 < pcVar4);\n  }\nLAB_001082a1:\n  if (uVar9 == 0) {\n    return pcVar7;\n  }\n  if ((*(char *)(param_3 + 0x31) == '\\0') || (puVar5 = &DAT_001206c0, pcVar4 <= pcVar7)) {\nLAB_001082df:\n    pcVar8 = pcVar7 + uVar9;\n    if (pcVar4 <= pcVar7 + uVar9) {\n      pcVar8 = pcVar4;\n    }\n  }\n  else {\n    do {\n      bVar1 = FUN_001053b0((int)*pcVar7);\n      if (puVar5[bVar1] == '\\0') goto LAB_001082df;\n      pcVar7 = pcVar7 + 1;\n    } while (pcVar4 != pcVar7);\n    pcVar8 = pcVar4 + uVar9;\n    if (pcVar4 <= pcVar4 + uVar9) {\n      pcVar8 = pcVar4;\n    }\n  }\n  return pcVar8;\n}\n\n", 
    "0010ee50": "\nulong FUN_0010ee50(char *param_1)\n\n{\n  char cVar1;\n  char cVar2;\n  ulong uVar3;\n  char *pcVar4;\n  long in_FS_OFFSET;\n  char *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != (char *)0x0) {\n    cVar1 = *param_1;\n    while (cVar1 != '\\0') {\n      cVar2 = FUN_001149d0((int)cVar1);\n      if (cVar2 == '\\0') {\n        cVar1 = FUN_00114940((int)cVar1);\n        goto joined_r0x0010eeaa;\n      }\n      pcVar4 = param_1 + 1;\n      param_1 = param_1 + 1;\n      cVar1 = *pcVar4;\n    }\n    cVar1 = FUN_00114940(0);\njoined_r0x0010eeaa:\n    uVar3 = 0;\n    if (cVar1 == '\\0') goto LAB_0010eeac;\n    local_28 = (char *)0x0;\n    uVar3 = strtoul(param_1,&local_28,10);\n    if (local_28 != (char *)0x0) {\n      cVar1 = *local_28;\n      while (cVar1 != '\\0') {\n        pcVar4 = local_28 + 1;\n        cVar2 = FUN_001149d0((int)cVar1);\n        if (cVar2 == '\\0') {\n          if (cVar1 != ',') goto LAB_0010ef41;\n          break;\n        }\n        local_28 = pcVar4;\n        cVar1 = *pcVar4;\n      }\n      goto LAB_0010eeac;\n    }\n  }\nLAB_0010ef41:\n  uVar3 = 0;\nLAB_0010eeac:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar3;\n}\n\n", 
    "00121228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121108": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001053a0": "\nvoid thunk_FUN_00105320(void)\n\n{\n  FUN_00105320();\n  return;\n}\n\n", 
    "0010d590": "\nbool FUN_0010d590(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00111670": "\nvoid FUN_00111670(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010f600(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00111190(puVar1,0x3a,1);\n  FUN_00110f70(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00112760": "\nvoid FUN_00112760(char *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(param_1);\n  FUN_00112ca0(iVar1);\n  return;\n}\n\n", 
    "00114ad0": "\nulong FUN_00114ad0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_00114090(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00121220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103910": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0011fcc0)();\n  return;\n}\n\n", 
    "00121100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111e30": "\nvoid FUN_00111e30(long *param_1,long *param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long *plVar6;\n  long *plVar7;\n  undefined auVar8 [16];\n  undefined auVar9 [16];\n  \n  plVar6 = param_1 + 0x80;\n  lVar4 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar4 + 1;\n  lVar4 = lVar4 + 1 + param_1[0x101];\n  plVar5 = param_1;\n  plVar7 = param_2;\n  do {\n    uVar3 = param_1[0x80] + ~(uVar3 ^ uVar3 << 0x15);\n    lVar1 = *param_1;\n    auVar8 = FUN_00111e20(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = FUN_00111e20();\n    lVar1 = FUN_00111e10(lVar4 + lVar1);\n    *param_2 = lVar1;\n    auVar8 = FUN_00111e10(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + 0x408);\n    auVar8 = FUN_00111e20(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_00111e20();\n    auVar8 = FUN_00111e10(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    param_2[1] = SUB168(auVar8,0);\n    uVar3 = *(long *)(lVar4 + 0x410) + (uVar3 ^ uVar3 << 0xc);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = FUN_00111e20(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = FUN_00111e20();\n    lVar1 = FUN_00111e10(lVar1 + lVar4);\n    param_2[2] = lVar1;\n    auVar8 = FUN_00111e10(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + 0x418);\n    auVar8 = FUN_00111e20(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_00111e20();\n    auVar8 = FUN_00111e10(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    param_2[3] = lVar4;\n    param_2 = param_2 + 4;\n  } while (param_1 != plVar6);\n  plVar7 = plVar7 + 0x80;\n  plVar6 = plVar5 + 0x100;\n  do {\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + param_1[-0x80];\n    lVar1 = *param_1;\n    auVar8 = FUN_00111e20(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = FUN_00111e20();\n    lVar1 = FUN_00111e10(lVar4 + lVar1);\n    *plVar7 = lVar1;\n    auVar8 = FUN_00111e10(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + -0x3f8);\n    auVar8 = FUN_00111e20(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_00111e20();\n    auVar8 = FUN_00111e10(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    plVar7[1] = SUB168(auVar8,0);\n    uVar3 = (uVar3 ^ uVar3 << 0xc) + *(long *)(lVar4 + -0x3f0);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = FUN_00111e20(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = FUN_00111e20();\n    lVar1 = FUN_00111e10(lVar1 + lVar4);\n    plVar7[2] = lVar1;\n    auVar8 = FUN_00111e10(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + -1000);\n    auVar8 = FUN_00111e20(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_00111e20();\n    auVar8 = FUN_00111e10(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    plVar7[3] = lVar4;\n    plVar7 = plVar7 + 4;\n  } while (param_1 != plVar6);\n  plVar5[0x100] = uVar3;\n  plVar5[0x101] = lVar4;\n  return;\n}\n\n", 
    "0010f650": "\nbool FUN_0010f650(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00114a70(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00121348": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103aa0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_posix_fadvise_0011fd88)();\n  return iVar1;\n}\n\n", 
    "0010de90": "\nulong FUN_0010de90(byte *param_1,ulong param_2)\n\n{\n  byte bVar1;\n  ulong uVar2;\n  \n  uVar2 = 0;\n  bVar1 = *param_1;\n  while (bVar1 != 0) {\n    param_1 = param_1 + 1;\n    uVar2 = (uVar2 * 0x1f + (ulong)bVar1) % param_2;\n    bVar1 = *param_1;\n  }\n  return uVar2;\n}\n\n", 
    "00103ce0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_0011fea8)();\n  return pvVar1;\n}\n\n", 
    "00103bc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getgid_0011fe18)();\n  return _Var1;\n}\n\n", 
    "00121360": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getrlimit(__rlimit_resource_t __resource,rlimit *__rlimits)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109b20": "\nvoid FUN_00109b20(long *param_1,ulong param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined4 *puVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  int iVar6;\n  long lVar7;\n  undefined4 *puVar8;\n  undefined4 *puVar9;\n  long lVar10;\n  long lVar11;\n  undefined4 *puVar12;\n  undefined4 *puVar13;\n  long lVar14;\n  long lVar15;\n  undefined8 *puVar16;\n  long lVar17;\n  undefined4 *puVar18;\n  undefined4 *puVar19;\n  undefined4 *puVar20;\n  \n  puVar1 = (undefined4 *)*param_1;\n  puVar20 = (undefined4 *)param_1[1];\n  puVar8 = (undefined4 *)param_1[2];\n  lVar11 = (param_2 >> ((char)*(uint *)(param_1 + 10) * '\\x02' + 2U & 0x3f)) + 1;\n  puVar9 = puVar1;\n  if (*(uint *)(param_1 + 10) < 2) {\n    lVar7 = lVar11;\n    puVar12 = puVar20;\n    if (puVar1 == puVar8) {\n      lVar14 = 0;\n      lVar10 = 0;\n    }\n    else {\nLAB_00109c97:\n      do {\n        if ((undefined4 *)param_1[3] == puVar12) {\nLAB_00109d17:\n          lVar14 = (long)puVar20 - (long)puVar12 >> 5;\n          if (param_1[6] != lVar14) {\n            lVar15 = param_1[5];\n            lVar10 = (long)puVar1 - (long)puVar9 >> 5;\n            goto LAB_00109d37;\n          }\n          if (((undefined4 *)param_1[2] != puVar9) && (lVar11 = lVar7 + -1, lVar7 != 0))\n          goto LAB_00109d8e;\n          lVar15 = param_1[5];\n          lVar17 = lVar14;\n          goto LAB_00109c3c;\n        }\n        lVar11 = lVar7 + -1;\n        if (lVar7 == 0) {\n          lVar7 = -1;\n          goto LAB_00109d17;\n        }\n        iVar6 = FUN_00108b00(puVar9 + -8,puVar12 + -8);\n        lVar7 = lVar11;\n        if (iVar6 < 1) {\n          lVar14 = *param_1;\n          *param_1 = lVar14 + -0x20;\n          FUN_00109ab0(lVar14 + -0x20,param_3,param_4);\n          puVar9 = (undefined4 *)*param_1;\n          puVar12 = (undefined4 *)param_1[1];\n          if (puVar9 == (undefined4 *)param_1[2]) break;\n          goto LAB_00109c97;\n        }\n        lVar14 = param_1[1];\n        param_1[1] = lVar14 + -0x20;\n        FUN_00109ab0(lVar14 + -0x20,param_3,param_4);\n        puVar9 = (undefined4 *)*param_1;\n        puVar12 = (undefined4 *)param_1[1];\n      } while (puVar9 != (undefined4 *)param_1[2]);\n      lVar10 = (long)puVar1 - (long)puVar9 >> 5;\n      lVar14 = (long)puVar20 - (long)puVar12 >> 5;\n    }\n    lVar15 = param_1[5];\n    lVar7 = lVar11;\n    lVar17 = lVar14;\n    if (param_1[6] != lVar14) {\nLAB_00109d37:\n      if (lVar10 == lVar15) {\n        if ((puVar12 == (undefined4 *)param_1[3]) || (lVar11 = lVar7 + -1, lVar7 == 0)) {\n          lVar14 = param_1[6];\n          lVar17 = (long)puVar20 - param_1[1] >> 5;\n        }\n        else {\n          do {\n            param_1[1] = (long)(puVar12 + -8);\n            FUN_00109ab0(puVar12 + -8,param_3,param_4);\n            puVar12 = (undefined4 *)param_1[1];\n            if (puVar12 == (undefined4 *)param_1[3]) break;\n            lVar11 = lVar11 + -1;\n          } while (lVar11 != -1);\n          puVar9 = (undefined4 *)*param_1;\n          lVar15 = param_1[5];\n          lVar14 = param_1[6];\n          lVar17 = (long)puVar20 - (long)puVar12 >> 5;\n        }\n      }\n      else {\nLAB_00109d43:\n        lVar14 = param_1[6];\n        lVar17 = (long)puVar20 - param_1[1] >> 5;\n      }\n    }\n    goto LAB_00109c3c;\n  }\n  puVar16 = (undefined8 *)param_1[4];\n  lVar17 = 0;\n  lVar10 = 0;\n  puVar19 = (undefined4 *)*puVar16;\n  lVar7 = lVar11;\n  puVar12 = puVar20;\n  puVar13 = puVar1;\n  if (puVar1 != puVar8) {\nLAB_00109baf:\n    do {\n      if ((undefined4 *)param_1[3] == puVar12) {\n        puVar16 = (undefined8 *)param_1[4];\n        puVar9 = (undefined4 *)*param_1;\nLAB_00109dd5:\n        lVar17 = (long)puVar20 - (long)puVar12 >> 5;\n        lVar10 = (long)puVar1 - (long)puVar13 >> 5;\n        lVar14 = param_1[6];\n        lVar15 = param_1[5];\n        if (lVar14 != lVar17) goto LAB_00109c30;\n        if ((puVar8 == puVar9) || (lVar11 = lVar7 + -1, puVar20 = puVar19, lVar7 == 0))\n        goto LAB_00109c39;\n        goto LAB_00109e1a;\n      }\n      lVar11 = lVar7 + -1;\n      if (lVar7 == 0) {\n        puVar16 = (undefined8 *)param_1[4];\n        lVar7 = -1;\n        puVar9 = (undefined4 *)*param_1;\n        goto LAB_00109dd5;\n      }\n      puVar18 = puVar19 + -8;\n      iVar6 = FUN_00108b00(puVar13 + -8,puVar12 + -8);\n      lVar7 = lVar11;\n      if (iVar6 < 1) {\n        lVar14 = *param_1;\n        puVar8 = (undefined4 *)param_1[2];\n        puVar12 = (undefined4 *)param_1[1];\n        uVar2 = *(undefined4 *)(lVar14 + -0x20);\n        uVar3 = *(undefined4 *)(lVar14 + -0x1c);\n        uVar4 = *(undefined4 *)(lVar14 + -0x18);\n        uVar5 = *(undefined4 *)(lVar14 + -0x14);\n        puVar13 = (undefined4 *)(lVar14 + -0x20);\n        *param_1 = (long)puVar13;\n        *puVar18 = uVar2;\n        puVar19[-7] = uVar3;\n        puVar19[-6] = uVar4;\n        puVar19[-5] = uVar5;\n        uVar2 = *(undefined4 *)(lVar14 + -0xc);\n        uVar3 = *(undefined4 *)(lVar14 + -8);\n        uVar4 = *(undefined4 *)(lVar14 + -4);\n        puVar19[-4] = *(undefined4 *)(lVar14 + -0x10);\n        puVar19[-3] = uVar2;\n        puVar19[-2] = uVar3;\n        puVar19[-1] = uVar4;\n        puVar19 = puVar18;\n        if (puVar8 == puVar13) break;\n        goto LAB_00109baf;\n      }\n      lVar14 = param_1[1];\n      puVar13 = (undefined4 *)*param_1;\n      puVar8 = (undefined4 *)param_1[2];\n      uVar2 = *(undefined4 *)(lVar14 + -0x20);\n      uVar3 = *(undefined4 *)(lVar14 + -0x1c);\n      uVar4 = *(undefined4 *)(lVar14 + -0x18);\n      uVar5 = *(undefined4 *)(lVar14 + -0x14);\n      puVar12 = (undefined4 *)(lVar14 + -0x20);\n      param_1[1] = (long)puVar12;\n      *puVar18 = uVar2;\n      puVar19[-7] = uVar3;\n      puVar19[-6] = uVar4;\n      puVar19[-5] = uVar5;\n      uVar2 = *(undefined4 *)(lVar14 + -0xc);\n      uVar3 = *(undefined4 *)(lVar14 + -8);\n      uVar4 = *(undefined4 *)(lVar14 + -4);\n      puVar19[-4] = *(undefined4 *)(lVar14 + -0x10);\n      puVar19[-3] = uVar2;\n      puVar19[-2] = uVar3;\n      puVar19[-1] = uVar4;\n      puVar19 = puVar18;\n    } while (puVar8 != puVar13);\n    puVar16 = (undefined8 *)param_1[4];\n    lVar10 = (long)puVar1 - (long)puVar13 >> 5;\n    lVar17 = (long)puVar20 - (long)puVar12 >> 5;\n    puVar9 = puVar13;\n    puVar19 = puVar18;\n  }\n  lVar14 = param_1[6];\n  lVar15 = param_1[5];\n  lVar7 = lVar11;\n  if (lVar14 != lVar17) {\nLAB_00109c30:\n    if (((lVar15 == lVar10) && (puVar8 = (undefined4 *)param_1[3], puVar8 != puVar12)) &&\n       (lVar11 = lVar7 + -1, puVar13 = puVar19, lVar7 != 0)) {\n      do {\n        puVar18 = puVar12 + -8;\n        uVar2 = *puVar18;\n        uVar3 = puVar12[-7];\n        uVar4 = puVar12[-6];\n        uVar5 = puVar12[-5];\n        puVar19 = puVar13 + -8;\n        param_1[1] = (long)puVar18;\n        *puVar19 = uVar2;\n        puVar13[-7] = uVar3;\n        puVar13[-6] = uVar4;\n        puVar13[-5] = uVar5;\n        uVar2 = puVar12[-3];\n        uVar3 = puVar12[-2];\n        uVar4 = puVar12[-1];\n        puVar13[-4] = puVar12[-4];\n        puVar13[-3] = uVar2;\n        puVar13[-2] = uVar3;\n        puVar13[-1] = uVar4;\n        if (puVar18 == puVar8) {\n          lVar17 = (long)puVar20 - (long)puVar18 >> 5;\n          goto LAB_00109c39;\n        }\n        lVar11 = lVar11 + -1;\n        puVar13 = puVar19;\n        puVar12 = puVar18;\n      } while (lVar11 != -1);\n      lVar17 = (long)puVar20 - (long)puVar18 >> 5;\n    }\n  }\n  goto LAB_00109c39;\n  while (lVar11 = lVar11 + -1, lVar11 != -1) {\nLAB_00109d8e:\n    *param_1 = (long)(puVar9 + -8);\n    FUN_00109ab0(puVar9 + -8,param_3,param_4);\n    puVar9 = (undefined4 *)*param_1;\n    if (puVar9 == (undefined4 *)param_1[2]) {\n      lVar15 = param_1[5];\n      puVar9 = (undefined4 *)param_1[2];\n      goto LAB_00109d43;\n    }\n  }\n  lVar15 = param_1[5];\n  lVar14 = param_1[6];\n  lVar17 = (long)puVar20 - param_1[1] >> 5;\n  goto LAB_00109c3c;\n  while (lVar11 = lVar11 + -1, puVar9 = puVar12, puVar20 = puVar19, lVar11 != -1) {\nLAB_00109e1a:\n    puVar12 = puVar9 + -8;\n    uVar2 = *puVar12;\n    uVar3 = puVar9[-7];\n    uVar4 = puVar9[-6];\n    uVar5 = puVar9[-5];\n    puVar19 = puVar20 + -8;\n    *param_1 = (long)puVar12;\n    *puVar19 = uVar2;\n    puVar20[-7] = uVar3;\n    puVar20[-6] = uVar4;\n    puVar20[-5] = uVar5;\n    uVar2 = puVar9[-3];\n    uVar3 = puVar9[-2];\n    uVar4 = puVar9[-1];\n    puVar20[-4] = puVar9[-4];\n    puVar20[-3] = uVar2;\n    puVar20[-2] = uVar3;\n    puVar20[-1] = uVar4;\n    puVar9 = puVar8;\n    if (puVar12 == puVar8) break;\n  }\nLAB_00109c39:\n  *puVar16 = puVar19;\nLAB_00109c3c:\n  param_1[6] = lVar14 - lVar17;\n  param_1[5] = lVar15 - ((long)puVar1 - (long)puVar9 >> 5);\n  return;\n}\n\n", 
    "001150a0": "\nvoid FUN_001150a0(char *param_1,stat *param_2)\n\n{\n  __xstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00121240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114820": "\nuint FUN_00114820(uint param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x1f) | param_1 >> 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00112520": "\nvoid FUN_00112520(long param_1)\n\n{\n  _obstack_free(param_1 + 0x18,0);\n  _obstack_free(param_1 + 0x70,0);\n  _obstack_free(param_1 + 200,0);\n  return;\n}\n\n", 
    "00113730": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_00113730(void)\n\n{\n  uint *puVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined local_38 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_38._0_16_ = FUN_00114b40();\n  puVar1 = (uint *)__errno_location();\n  do {\n    *puVar1 = 0;\n    uVar2 = FUN_00114400(local_38,0);\n    if ((int)uVar2 == 0) goto LAB_00113784;\n  } while ((*puVar1 & 0xfffffffb) == 0);\n  uVar2 = 0xffffffff;\nLAB_00113784:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114940": "\nbool FUN_00114940(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00107270": "\nvoid FUN_00107270(char *param_1)\n\n{\n  char *pcVar1;\n  int iVar2;\n  long *plVar3;\n  long **pplVar4;\n  long **__ptr;\n  int iVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  long in_FS_OFFSET;\n  undefined local_c8 [136];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  pcVar1 = (char *)((long)DAT_001202e8 + 0xd);\n  pplVar4 = (long **)&DAT_001202e8;\n  __ptr = DAT_001202e8;\n  while (param_1 != pcVar1) {\n    pcVar1 = (char *)((long)*__ptr + 0xd);\n    pplVar4 = __ptr;\n    __ptr = (long **)*__ptr;\n  }\n  if (*(char *)((long)__ptr + 0xc) == '\\x01') {\n    FUN_00107250(*(undefined4 *)(__ptr + 1));\n  }\n  plVar3 = *__ptr;\n  FUN_00105ab0(local_c8);\n  iVar5 = unlink(param_1);\n  piVar6 = __errno_location();\n  iVar2 = *piVar6;\n  *pplVar4 = plVar3;\n  FUN_00105ad0(local_c8);\n  if (iVar5 != 0) {\n    uVar7 = FUN_00111670(0,3,param_1);\n    uVar8 = dcgettext(0,\"warning: cannot remove: %s\",5);\n                    /* WARNING: Subroutine does not return */\n    error(0,iVar2,uVar8,uVar7);\n  }\n  if (plVar3 == (long *)0x0) {\n    PTR_DAT_00120040 = (undefined *)pplVar4;\n  }\n  free(__ptr);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001099c0": "\nchar * FUN_001099c0(char **param_1,FILE *param_2,long param_3)\n\n{\n  long *plVar1;\n  char cVar2;\n  char *__n;\n  int iVar3;\n  char *pcVar4;\n  char *pcVar5;\n  undefined8 uVar6;\n  long lVar7;\n  char *unaff_R13;\n  \n  pcVar5 = *param_1;\n  __n = param_1[1];\n  pcVar4 = pcVar5 + (long)__n;\n  if ((param_3 != 0) || (DAT_00120380 == '\\0')) {\n    pcVar4[-1] = DAT_00120038;\n    pcVar5 = (char *)fwrite_unlocked(pcVar5,1,(size_t)__n,param_2);\n    if (pcVar5 == __n) {\n      pcVar4[-1] = '\\0';\n      return pcVar5;\n    }\n    uVar6 = dcgettext(0,\"write failed\",5);\n                    /* WARNING: Subroutine does not return */\n    FUN_001062b0(uVar6,param_3);\n  }\n  while (lVar7 = DAT_00120390, pcVar5 < pcVar4) {\n    cVar2 = *pcVar5;\n    pcVar5 = pcVar5 + 1;\n    iVar3 = 0x3e;\n    if ((cVar2 != '\\t') && (iVar3 = 10, pcVar4 != pcVar5)) {\n      iVar3 = (int)cVar2;\n    }\n    iVar3 = fputc_unlocked(iVar3,param_2);\n    if (iVar3 == -1) {\n      uVar6 = dcgettext(0,\"write failed\",5);\n                    /* WARNING: Subroutine does not return */\n      FUN_001062b0(uVar6,0);\n    }\n  }\n  do {\n    FUN_001097a0(*param_1,param_1[1],lVar7);\n    if (lVar7 == 0) {\n      return unaff_R13;\n    }\n    plVar1 = (long *)(lVar7 + 0x40);\n    lVar7 = *plVar1;\n  } while (*plVar1 != 0);\n  if ((DAT_00120399 == '\\0') && (DAT_0012039a == '\\0')) {\n    pcVar4 = (char *)FUN_001097a0(*param_1,param_1[1],0);\n    return pcVar4;\n  }\n  return unaff_R13;\n}\n\n", 
    "00121118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_unlocked_0011fcb8)();\n  return sVar1;\n}\n\n", 
    "00121110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107d90": "\nlong * FUN_00107d90(long *param_1,long *param_2,long param_3,ulong param_4,long param_5,char param_6\n                   )\n\n{\n  long *plVar1;\n  int iVar2;\n  long lVar3;\n  long *plVar4;\n  long lVar5;\n  ulong uVar6;\n  long *plVar7;\n  \n  while( true ) {\n    plVar7 = param_2;\n    lVar5 = param_3 + param_5 * -0x20;\n    if (param_6 == '\\0') {\n      uVar6 = (ulong)param_1[6] >> 1;\n      lVar3 = param_1[6] - uVar6;\n      plVar4 = param_1 + 3;\n    }\n    else {\n      uVar6 = (ulong)param_1[5] >> 1;\n      lVar3 = param_1[5] - uVar6;\n      plVar4 = param_1 + 2;\n    }\n    param_3 = lVar5 + uVar6 * -0x20;\n    plVar7[6] = lVar3;\n    iVar2 = *(int *)(param_1 + 10);\n    plVar1 = plVar7 + 0x10;\n    plVar7[7] = (long)param_1;\n    plVar7[2] = lVar5;\n    *plVar7 = lVar5;\n    plVar7[3] = param_3;\n    plVar7[1] = param_3;\n    plVar7[4] = (long)plVar4;\n    plVar7[5] = uVar6;\n    *(int *)(plVar7 + 10) = iVar2 + 1;\n    *(undefined *)((long)plVar7 + 0x54) = 0;\n    pthread_mutex_init((pthread_mutex_t *)(plVar7 + 0xb),(pthread_mutexattr_t *)0x0);\n    if (param_4 < 2) break;\n    plVar7[8] = (long)plVar1;\n    uVar6 = param_4 >> 1;\n    param_4 = param_4 - uVar6;\n    param_2 = (long *)FUN_00107d90(plVar7,plVar1,lVar5,uVar6,param_5);\n    plVar7[9] = (long)param_2;\n    param_6 = '\\0';\n    param_1 = plVar7;\n  }\n  plVar7[8] = 0;\n  plVar7[9] = 0;\n  return plVar1;\n}\n\n", 
    "0010f540": "\nvoid FUN_0010f540(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_00120808 = pcVar1 + 1;\n    uVar3 = (long)DAT_00120808 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_00120808;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_00120808 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00121358": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103bf0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcwidth_0011fe30)();\n  return iVar1;\n}\n\n", 
    "00103ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0011fda0)();\n  return iVar1;\n}\n\n", 
    "00108030": "\nvoid FUN_00108030(undefined8 param_1,long param_2)\n\n{\n  if (1 < *(uint *)(param_2 + 0x50)) {\n    FUN_00107f90(*(undefined8 *)(param_2 + 0x38));\n    FUN_00107fe0(param_1,*(undefined8 *)(param_2 + 0x38));\n    FUN_00108020(*(undefined8 *)(param_2 + 0x38));\n    return;\n  }\n  if (*(long *)(param_2 + 0x30) + *(long *)(param_2 + 0x28) != 0) {\n    return;\n  }\n  FUN_00107fa0(param_1,*(undefined8 *)(param_2 + 0x38));\n  return;\n}\n\n", 
    "0010ef50": "\nlong FUN_0010ef50(void)\n\n{\n  int iVar1;\n  long lVar2;\n  long in_FS_OFFSET;\n  cpu_set_t cStack_98;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = sched_getaffinity(0,0x80,&cStack_98);\n  if (iVar1 == 0) {\n    iVar1 = __sched_cpucount(0x80,&cStack_98);\n    lVar2 = (long)iVar1;\n    if (lVar2 != 0) goto LAB_0010ef83;\n  }\n  lVar2 = 0;\nLAB_0010ef83:\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar2;\n}\n\n", 
    "00121328": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sysinfo(sysinfo *__info)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001053c0": "\nundefined8 FUN_001053c0(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00111e10": "\nundefined8 FUN_00111e10(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00121320": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d690": "\nulong FUN_0010d690(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = thunk_FUN_00114810(param_1,3);\n  return uVar1 % param_2;\n}\n\n", 
    "00103810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unlink_0011fc40)();\n  return iVar1;\n}\n\n", 
    "00103930": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0011fcd0)();\n  return iVar1;\n}\n\n", 
    "00107fa0": "\nvoid FUN_00107fa0(undefined8 *param_1,long param_2)\n\n{\n  pthread_mutex_lock((pthread_mutex_t *)(param_1 + 1));\n  FUN_0010ea10(*param_1,param_2);\n  *(undefined *)(param_2 + 0x54) = 1;\n  pthread_cond_signal((pthread_cond_t *)(param_1 + 6));\n  pthread_mutex_unlock((pthread_mutex_t *)(param_1 + 1));\n  return;\n}\n\n", 
    "001142f0": "\nint FUN_001142f0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00103ac0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0011fd98)();\n  return sVar1;\n}\n\n", 
    "00110f70": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00110f70(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00120180;\n  if (DAT_00120178 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00113560();\n    }\n    if (PTR_DAT_00120180 == &DAT_00120190) {\n      puVar8 = (undefined4 *)FUN_001133a0(0);\n      uVar6 = PTR_DAT_00120198._4_4_;\n      uVar5 = PTR_DAT_00120198._0_4_;\n      uVar3 = _UNK_00120194;\n      PTR_DAT_00120180 = (undefined *)puVar8;\n      *puVar8 = _DAT_00120190;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_001133a0(PTR_DAT_00120180);\n      PTR_DAT_00120180 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00120178 * 4,0,(long)((param_1 + 1) - DAT_00120178) << 4);\n    DAT_00120178 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_0010fdb0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00120820) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00113340(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_0010fdb0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00103be0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_init(pthread_cond_t *__cond,pthread_condattr_t *__cond_attr)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_cond_init_0011fe28)();\n  return iVar1;\n}\n\n", 
    "00121340": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigismember(sigset_t *__set,int __signo)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010db10": "\nbool FUN_0010db10(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  \n  plVar2 = *param_1;\n  plVar3 = (long *)0x0;\n  plVar4 = (long *)0x0;\n  do {\n    while( true ) {\n      if (param_1[1] <= plVar2) {\n        if (param_1[3] != plVar4) {\n          return false;\n        }\n        return param_1[4] == plVar3;\n      }\n      if (*plVar2 != 0) break;\nLAB_0010db30:\n      plVar2 = plVar2 + 2;\n    }\n    lVar1 = plVar2[1];\n    plVar4 = (long *)((long)plVar4 + 1);\n    plVar3 = (long *)((long)plVar3 + 1);\n    if (lVar1 == 0) goto LAB_0010db30;\n    do {\n      lVar1 = *(long *)(lVar1 + 8);\n      plVar3 = (long *)((long)plVar3 + 1);\n    } while (lVar1 != 0);\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "00114920": "\nulong FUN_00114920(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "0010ec00": "\nint FUN_0010ec00(byte *param_1,long param_2,uint param_3)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  int iVar3;\n  size_t sVar4;\n  long lVar5;\n  ushort **ppuVar6;\n  long lVar7;\n  int iVar8;\n  long in_FS_OFFSET;\n  wchar_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  pbVar1 = param_1 + param_2;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar4 = __ctype_get_mb_cur_max();\n  if (sVar4 < 2) {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      ppuVar6 = __ctype_b_loc();\n      iVar8 = 0;\n      do {\n        bVar2 = *param_1;\n        param_1 = param_1 + 1;\n        if (((*ppuVar6)[bVar2] & 0x4000) == 0) {\n          if ((param_3 & 2) != 0) goto LAB_0010ede0;\n          if (((*ppuVar6)[bVar2] & 2) == 0) goto LAB_0010edb9;\n        }\n        else {\nLAB_0010edb9:\n          if (iVar8 == 0x7fffffff) break;\n          iVar8 = iVar8 + 1;\n        }\n      } while (pbVar1 != param_1);\n    }\n  }\n  else {\n    iVar8 = 0;\n    if (param_1 < pbVar1) {\n      do {\n        bVar2 = *param_1;\n        if ((char)bVar2 < '`') {\n          if ('@' < (char)bVar2) goto LAB_0010ed33;\n          if ('#' < (char)bVar2) {\n            if (0x1a < (byte)(bVar2 - 0x25)) goto LAB_0010ec7c;\n            goto LAB_0010ed33;\n          }\n          if ('\\x1f' < (char)bVar2) goto LAB_0010ed33;\nLAB_0010ec7c:\n          local_48 = (mbstate_t)0x0;\n          do {\n            lVar5 = FUN_00114370(&local_4c,param_1,(long)pbVar1 - (long)param_1,&local_48);\n            if (lVar5 == -1) {\n              if ((param_3 & 1) != 0) goto LAB_0010ede0;\n              goto LAB_0010ed33;\n            }\n            if (lVar5 == -2) {\n              if ((param_3 & 1) != 0) goto LAB_0010ede0;\n              iVar8 = iVar8 + 1;\n              param_1 = pbVar1;\n              break;\n            }\n            lVar7 = 1;\n            if (lVar5 != 0) {\n              lVar7 = lVar5;\n            }\n            iVar3 = wcwidth(local_4c);\n            if (iVar3 < 0) {\n              if ((param_3 & 2) != 0) goto LAB_0010ede0;\n              iVar3 = iswcntrl(local_4c);\n              if (iVar3 == 0) {\n                if (iVar8 == 0x7fffffff) goto LAB_0010ee08;\n                iVar8 = iVar8 + 1;\n              }\n            }\n            else {\n              if (0x7fffffff - iVar8 < iVar3) {\nLAB_0010ee08:\n                iVar8 = 0x7fffffff;\n                goto LAB_0010ed48;\n              }\n              iVar8 = iVar8 + iVar3;\n            }\n            param_1 = param_1 + lVar7;\n            iVar3 = mbsinit(&local_48);\n          } while (iVar3 == 0);\n        }\n        else {\n          if (0x1d < (byte)(bVar2 + 0x9f)) goto LAB_0010ec7c;\nLAB_0010ed33:\n          param_1 = param_1 + 1;\n          iVar8 = iVar8 + 1;\n        }\n      } while (param_1 < pbVar1);\n    }\n  }\nLAB_0010ed48:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar8;\nLAB_0010ede0:\n  iVar8 = -1;\n  goto LAB_0010ed48;\n}\n\n", 
    "00108020": "\nvoid FUN_00108020(long param_1)\n\n{\n  pthread_mutex_unlock((pthread_mutex_t *)(param_1 + 0x58));\n  return;\n}\n\n", 
    "00111650": "\nvoid FUN_00111650(undefined8 param_1)\n\n{\n  FUN_00111630(param_1,0x3a);\n  return;\n}\n\n", 
    "0010dd50": "\nlong FUN_0010dd50(long param_1,long param_2)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  \n  plVar2 = (long *)FUN_0010d6c0();\n  plVar3 = plVar2;\n  do {\n    lVar1 = *plVar3;\n    plVar3 = (long *)plVar3[1];\n    if (lVar1 == param_2) {\n      if (plVar3 != (long *)0x0) {\n        return *plVar3;\n      }\n      break;\n    }\n  } while (plVar3 != (long *)0x0);\n  do {\n    plVar2 = plVar2 + 2;\n    if (*(long **)(param_1 + 8) <= plVar2) {\n      return 0;\n    }\n  } while (*plVar2 == 0);\n  return *plVar2;\n}\n\n", 
    "00114800": "\nulong FUN_00114800(ulong param_1,byte param_2)\n\n{\n  return param_1 << (param_2 & 0x3f) | param_1 >> 0x40 - (param_2 & 0x3f);\n}\n\n", 
    "00121338": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stpcpy_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00112870": "\nulong FUN_00112870(byte *param_1,byte *param_2,uint param_3,uint param_4)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  byte bVar3;\n  uint uVar4;\n  uint uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  byte *pbVar8;\n  uint uVar9;\n  \n  uVar4 = (uint)*param_1;\n  bVar2 = *param_2;\n  uVar9 = (uint)bVar2;\n  if (*param_1 == 0x2d) {\n    do {\n      do {\n        bVar3 = param_1[1];\n        param_1 = param_1 + 1;\n      } while (bVar3 == 0x30);\n      uVar4 = (uint)bVar3;\n    } while (bVar3 == param_4);\n    if (bVar2 != 0x2d) {\n      if (bVar3 == param_3) {\n        do {\n          bVar3 = param_1[1];\n          param_1 = param_1 + 1;\n        } while (bVar3 == 0x30);\n      }\n      if (bVar3 - 0x30 < 10) {\n        return 0xffffffff;\n      }\n      while (((char)uVar9 == '0' || (uVar9 == param_4))) {\n        pbVar8 = param_2 + 1;\n        param_2 = param_2 + 1;\n        uVar9 = (uint)*pbVar8;\n      }\n      if (uVar9 == param_3) {\n        do {\n          pbVar8 = param_2 + 1;\n          param_2 = param_2 + 1;\n        } while (*pbVar8 == 0x30);\n        uVar9 = (uint)*pbVar8;\n      }\n      return (ulong)-(uint)(uVar9 - 0x30 < 10);\n    }\n    do {\n      do {\n        bVar2 = param_2[1];\n        param_2 = param_2 + 1;\n      } while (bVar2 == 0x30);\n      uVar5 = (uint)bVar2;\n    } while (bVar2 == param_4);\n    do {\n      pbVar8 = param_2;\n      if (((char)uVar4 != (char)uVar5) || (9 < uVar5 - 0x30)) goto LAB_00112b50;\n      do {\n        pbVar1 = param_1 + 1;\n        uVar4 = (uint)*pbVar1;\n        param_1 = param_1 + 1;\n      } while (*pbVar1 == param_4);\n      do {\n        uVar5 = (uint)pbVar8[1];\n        param_2 = pbVar8 + 1;\n        if (uVar5 != param_4) break;\n        uVar5 = (uint)pbVar8[2];\n        pbVar8 = pbVar8 + 2;\n        param_2 = pbVar8;\n      } while (uVar5 == param_4);\n    } while( true );\n  }\n  if (bVar2 != 0x2d) {\n    while (((char)uVar4 == '0' || (uVar4 == param_4))) {\n      pbVar8 = param_1 + 1;\n      param_1 = param_1 + 1;\n      uVar4 = (uint)*pbVar8;\n    }\n    if (bVar2 != 0x30) goto LAB_001128ef;\n    do {\n      do {\n        pbVar8 = param_2 + 1;\n        uVar9 = (uint)*pbVar8;\n        param_2 = param_2 + 1;\n      } while (*pbVar8 == 0x30);\nLAB_001128ef:\n    } while (uVar9 == param_4);\n    do {\n      pbVar8 = param_2;\n      if (((char)uVar4 != (char)uVar9) || (9 < uVar9 - 0x30)) goto LAB_00112ad0;\n      do {\n        pbVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n        uVar4 = (uint)*pbVar1;\n      } while (uVar4 == param_4);\n      do {\n        uVar9 = (uint)pbVar8[1];\n        param_2 = pbVar8 + 1;\n        if (uVar9 != param_4) break;\n        uVar9 = (uint)pbVar8[2];\n        pbVar8 = pbVar8 + 2;\n        param_2 = pbVar8;\n      } while (uVar9 == param_4);\n    } while( true );\n  }\n  do {\n    do {\n      bVar2 = param_2[1];\n      uVar9 = (uint)bVar2;\n      param_2 = param_2 + 1;\n    } while (bVar2 == 0x30);\n  } while (bVar2 == param_4);\n  if (bVar2 == param_3) {\n    do {\n      uVar9 = (uint)param_2[1];\n      if (param_2[1] != 0x30) break;\n      pbVar8 = param_2 + 2;\n      uVar9 = (uint)*pbVar8;\n      param_2 = param_2 + 2;\n    } while (*pbVar8 == 0x30);\n  }\n  if (uVar9 - 0x30 < 10) {\n    return 1;\n  }\n  while (((char)uVar4 == '0' || (uVar4 == param_4))) {\n    pbVar8 = param_1 + 1;\n    param_1 = param_1 + 1;\n    uVar4 = (uint)*pbVar8;\n  }\n  if (uVar4 == param_3) {\n    do {\n      pbVar8 = param_1 + 1;\n      param_1 = param_1 + 1;\n    } while (*pbVar8 == 0x30);\n    uVar4 = (uint)*pbVar8;\n  }\n  return (ulong)(uVar4 - 0x30 < 10);\nLAB_00112b50:\n  if ((param_3 == uVar4) && (9 < uVar5 - 0x30)) {\nLAB_00112c65:\n    uVar6 = FUN_001127a0(pbVar8,param_1,(int)(char)param_3);\n    return uVar6;\n  }\n  if (uVar5 == param_3) {\n    uVar9 = param_3 - 0x30;\n    uVar5 = param_3 - uVar4;\n    if (9 < uVar4 - 0x30) goto LAB_00112c65;\nLAB_00112b79:\n    uVar6 = 0;\n    do {\n      do {\n        pbVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n      } while (*pbVar1 == param_4);\n      uVar6 = uVar6 + 1;\n    } while (*pbVar1 - 0x30 < 10);\n    if (9 < uVar9) {\n      return (ulong)-(uint)(uVar6 != 0);\n    }\n  }\n  else {\n    uVar9 = uVar5 - 0x30;\n    uVar5 = uVar5 - uVar4;\n    if (uVar4 - 0x30 < 10) goto LAB_00112b79;\n    uVar6 = 0;\n    if (9 < uVar9) {\n      return 0;\n    }\n  }\n  uVar7 = 0;\n  do {\n    do {\n      pbVar1 = pbVar8 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (*pbVar1 == param_4);\n    uVar7 = uVar7 + 1;\n  } while (*pbVar1 - 0x30 < 10);\n  if (uVar6 != uVar7) {\n    return (ulong)((-(uint)(uVar6 < uVar7) & 2) - 1);\n  }\n  goto LAB_00112bc6;\nLAB_00112ad0:\n  if ((param_3 == uVar4) && (9 < uVar9 - 0x30)) {\nLAB_00112bfd:\n    uVar6 = FUN_001127a0(param_1,pbVar8,(int)(char)param_3);\n    return uVar6;\n  }\n  if (uVar9 == param_3) {\n    uVar5 = uVar4 - param_3;\n    uVar9 = param_3 - 0x30;\n    if (9 < uVar4 - 0x30) goto LAB_00112bfd;\nLAB_00112af4:\n    uVar6 = 0;\n    do {\n      do {\n        pbVar1 = param_1 + 1;\n        param_1 = param_1 + 1;\n      } while (*pbVar1 == param_4);\n      uVar6 = uVar6 + 1;\n    } while (*pbVar1 - 0x30 < 10);\n    if (9 < uVar9) {\n      return (ulong)(uVar6 != 0);\n    }\n  }\n  else {\n    uVar5 = uVar4 - uVar9;\n    uVar9 = uVar9 - 0x30;\n    if (uVar4 - 0x30 < 10) goto LAB_00112af4;\n    uVar6 = 0;\n    if (9 < uVar9) {\n      return 0;\n    }\n  }\n  uVar7 = 0;\n  do {\n    do {\n      pbVar1 = pbVar8 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (*pbVar1 == param_4);\n    uVar7 = uVar7 + 1;\n  } while (*pbVar1 - 0x30 < 10);\n  if (uVar6 != uVar7) {\n    return (ulong)(-(uint)(uVar6 < uVar7) | 1);\n  }\nLAB_00112bc6:\n  uVar7 = (ulong)uVar5;\n  if (uVar6 == 0) {\n    uVar7 = 0;\n  }\n  return uVar7;\n}\n\n", 
    "001053b0": "\nundefined4 FUN_001053b0(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00111660": "\nvoid FUN_00111660(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001115a0(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00121330": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pipe2(int *__pipedes,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0011fc38)();\n  return piVar1;\n}\n\n", 
    "00111e20": "\nundefined8 FUN_00111e20(long param_1,uint param_2)\n\n{\n  return *(undefined8 *)(param_1 + (ulong)(param_2 & 0x7f8));\n}\n\n", 
    "00121210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_wait(pthread_cond_t *__cond,pthread_mutex_t *__mutex)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_cond_wait_0011fcc8)();\n  return iVar1;\n}\n\n", 
    "0010f760": "\nundefined8 FUN_0010f760(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f6d0(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00103dd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sysinfo(sysinfo *__info)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sysinfo_0011ff20)();\n  return iVar1;\n}\n\n", 
    "00103cb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0011fe90)();\n  return pcVar1;\n}\n\n", 
    "00103ef0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0011ffb0)();\n  return ppuVar1;\n}\n\n", 
    "00107000": "\nvoid FUN_00107000(char **param_1,long param_2)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  int iVar3;\n  long lVar4;\n  \n  if (param_2 == 0) {\n    return;\n  }\n  lVar4 = 0;\n  do {\n    pcVar1 = *param_1;\n    if ((*pcVar1 != '-') || (pcVar1[1] != '\\0')) {\n      iVar3 = euidaccess(pcVar1,4);\n      if (iVar3 != 0) {\n        pcVar1 = *param_1;\n        uVar2 = dcgettext(0,\"cannot read\",5);\n                    /* WARNING: Subroutine does not return */\n        FUN_001062b0(uVar2,pcVar1);\n      }\n    }\n    lVar4 = lVar4 + 1;\n    param_1 = param_1 + 1;\n  } while (param_2 != lVar4);\n  return;\n}\n\n", 
    "00108b00": "\nuint FUN_00108b00(void **param_1,void **param_2)\n\n{\n  ulong uVar1;\n  void *pvVar2;\n  void *pvVar3;\n  uint uVar4;\n  ulong __n;\n  ulong uVar5;\n  \n  if (DAT_00120390 != 0) {\n    uVar4 = FUN_001083e0();\n    if (uVar4 != 0) {\n      return uVar4;\n    }\n    if (DAT_00120399 != '\\0') {\n      return 0;\n    }\n    if (DAT_0012039a != '\\0') {\n      return 0;\n    }\n  }\n  pvVar2 = param_1[1];\n  pvVar3 = param_2[1];\n  uVar1 = (long)pvVar3 - 1;\n  uVar5 = (long)pvVar2 - 1;\n  if (uVar5 == 0) {\n    uVar4 = -(uint)(uVar1 != 0);\n  }\n  else {\n    uVar4 = 1;\n    if (uVar1 != 0) {\n      if (DAT_001207e1 == '\\0') {\n        __n = uVar1;\n        if (uVar5 <= uVar1) {\n          __n = uVar5;\n        }\n        uVar4 = memcmp(*param_1,*param_2,__n);\n        if ((uVar4 == 0) && (uVar4 = 0xffffffff, uVar1 <= uVar5)) {\n          uVar4 = (uint)(pvVar2 != pvVar3);\n        }\n      }\n      else {\n        uVar4 = FUN_001136d0(*param_1,pvVar2,*param_2,pvVar3);\n      }\n    }\n  }\n  if (DAT_0012039b != '\\0') {\n    uVar4 = -uVar4;\n  }\n  return uVar4;\n}\n\n", 
    "00111500": "\nvoid FUN_00111500(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010f600(auStack_68);\n  FUN_00110f70(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001056c0": "\nulong FUN_001056c0(long param_1)\n\n{\n  ulong uVar1;\n  \n  uVar1 = 0;\n  if ((*(long *)(param_1 + 0x20) == 0) && (*(long *)(param_1 + 0x28) == 0)) {\n    uVar1 = (ulong)*(byte *)(param_1 + 0x30);\n    if (*(byte *)(param_1 + 0x30) != 0) {\n      return 0;\n    }\n    if (*(char *)(param_1 + 0x31) == '\\0') {\n      uVar1 = FUN_001056a0();\n      if ((char)uVar1 != '\\0') {\n        return 0;\n      }\n      if ((*(char *)(param_1 + 0x36) == '\\0') && (*(char *)(param_1 + 0x38) == '\\0')) {\n        return (ulong)(*(byte *)(param_1 + 0x33) ^ 1);\n      }\n    }\n  }\n  return uVar1;\n}\n\n", 
    "001068d0": "\nulong FUN_001068d0(char *param_1,char *param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  int iVar3;\n  ulong uVar4;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  \n  while (bVar1 = FUN_001053b0((int)*param_1), *(char *)(extraout_RDX + (ulong)bVar1) != '\\0') {\n    param_1 = param_1 + 1;\n  }\n  while (bVar1 = FUN_001053b0((int)*param_2), *(char *)(extraout_RDX_00 + (ulong)bVar1) != '\\0') {\n    param_2 = param_2 + 1;\n  }\n  iVar2 = FUN_00105530(param_1);\n  iVar3 = FUN_00105530(param_2);\n  if (iVar2 - iVar3 == 0) {\n    uVar4 = thunk_FUN_00112870(param_1,param_2,DAT_001207e8,DAT_001207e4);\n    return uVar4;\n  }\n  return (ulong)(uint)(iVar2 - iVar3);\n}\n\n", 
    "00121308": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a280": "\nundefined8 FUN_0010a280(undefined8 *param_1)\n\n{\n  FUN_0010a050(*param_1,param_1[1],param_1[2],param_1[3],param_1[4],param_1[5],param_1[6]);\n  return 0;\n}\n\n", 
    "00105a60": "\nvoid FUN_00105a60(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  uVar1 = FUN_00111830();\n  uVar2 = dcgettext(0,param_2,5);\n  uVar3 = dcgettext(0,\"%s: invalid field specification %s\",5);\n                    /* WARNING: Subroutine does not return */\n  error(2,0,uVar3,uVar2,uVar1);\n}\n\n", 
    "00121300": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_join(pthread_t __th,void **__thread_return)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ca0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0011fe88)();\n  return pFVar1;\n}\n\n", 
    "00103ee0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_lock(pthread_mutex_t *__mutex)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_mutex_lock_0011ffa8)();\n  return iVar1;\n}\n\n", 
    "00103dc0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0011ff18)();\n  return;\n}\n\n", 
    "00111630": "\nvoid FUN_00111630(undefined8 param_1,char param_2)\n\n{\n  FUN_001115a0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "0010ee20": "\nvoid FUN_0010ee20(char *param_1,undefined4 param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0010ec00(param_1,sVar1,param_2);\n  return;\n}\n\n", 
    "00111870": "\nvoid FUN_00111870(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = FUN_00111830();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n                    /* WARNING: Subroutine does not return */\n    error(DAT_00120130,*piVar2,uVar3,uVar1);\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114900": "\nuint FUN_00114900(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00113810": "\nuint FUN_00113810(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0011390b;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0011394c:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_001139a0_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_001138d2;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00113976_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00113976_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = FUN_001137b0(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_001139a0_caseD_43;\n        case 0x45:\n          uVar2 = FUN_001137e0(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = FUN_001137e0(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = FUN_001137e0(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = FUN_001137e0(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = FUN_001137e0(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = FUN_001137e0(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = FUN_001137e0(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = FUN_001137e0(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = FUN_001137b0(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = FUN_001137b0(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_001138d2;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0011394c;\n      }\n    }\n  }\nLAB_0011390b:\n  uVar10 = 4;\nLAB_001138d2:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00121318": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a20": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_00106a20(char *param_1,ulong param_2,char *param_3,size_t param_4)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  int iVar3;\n  size_t sVar4;\n  char *pcVar5;\n  long lVar6;\n  ulong uVar7;\n  ulong uVar8;\n  char *pcVar9;\n  ulong uVar10;\n  long in_FS_OFFSET;\n  ulong local_1190;\n  char *local_1188;\n  char *local_1180;\n  int local_116c;\n  undefined local_1148 [16];\n  undefined local_1138 [16];\n  undefined4 local_1128;\n  undefined4 uStack_1124;\n  undefined4 uStack_1120;\n  undefined4 uStack_111c;\n  undefined8 local_1118;\n  undefined8 uStack_1110;\n  undefined8 local_1108;\n  undefined8 uStack_1100;\n  undefined8 local_10f8;\n  undefined8 uStack_10f0;\n  undefined8 local_10e8;\n  undefined8 uStack_10e0;\n  undefined8 local_10d8;\n  undefined8 uStack_10d0;\n  undefined8 local_10c8;\n  undefined8 uStack_10c0;\n  undefined8 local_10b8;\n  undefined8 uStack_10b0;\n  undefined8 local_10a8;\n  undefined8 uStack_10a0;\n  undefined8 local_1098;\n  undefined4 local_1090;\n  undefined4 local_108c;\n  undefined4 uStack_1088;\n  undefined4 uStack_1084;\n  undefined4 uStack_1080;\n  undefined8 local_107c;\n  undefined8 uStack_1074;\n  undefined8 local_106c;\n  undefined8 uStack_1064;\n  undefined8 local_105c;\n  undefined8 uStack_1054;\n  undefined8 local_104c;\n  undefined8 uStack_1044;\n  undefined8 local_103c;\n  undefined4 uStack_1034;\n  undefined4 uStack_1030;\n  undefined4 uStack_102c;\n  undefined4 uStack_1028;\n  undefined8 uStack_1024;\n  undefined8 local_101c;\n  undefined8 uStack_1014;\n  undefined8 local_100c;\n  undefined8 uStack_1004;\n  undefined8 local_ffc;\n  undefined4 local_ff4;\n  char local_fe8 [4008];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_108c = _DAT_00120240;\n  uStack_1088 = uRam0000000000120244;\n  uStack_1084 = uRam0000000000120248;\n  uStack_1080 = uRam000000000012024c;\n  local_ff4 = DAT_001202d8;\n  local_ffc = DAT_001202d0;\n  local_107c = _DAT_00120250;\n  uStack_1074 = uRam0000000000120258;\n  local_106c = _DAT_00120260;\n  uStack_1064 = uRam0000000000120268;\n  local_105c = _DAT_00120270;\n  uStack_1054 = uRam0000000000120278;\n  local_104c = _DAT_00120280;\n  uStack_1044 = uRam0000000000120288;\n  local_103c = _DAT_00120290;\n  uStack_1034 = (undefined4)uRam0000000000120298;\n  uStack_1030 = (undefined4)((ulong)uRam0000000000120298 >> 0x20);\n  uStack_102c = (undefined4)_DAT_001202a0;\n  uStack_1028 = (undefined4)((ulong)_DAT_001202a0 >> 0x20);\n  uStack_1024 = uRam00000000001202a8;\n  local_101c = _DAT_001202b0;\n  uStack_1014 = uRam00000000001202b8;\n  local_100c = _DAT_001202c0;\n  uStack_1004 = uRam00000000001202c8;\n  local_1128 = _DAT_00120240;\n  uStack_1124 = uRam0000000000120244;\n  uStack_1120 = uRam0000000000120248;\n  uStack_111c = uRam000000000012024c;\n  local_1118 = _DAT_00120250;\n  uStack_1110 = uRam0000000000120258;\n  local_1108 = _DAT_00120260;\n  uStack_1100 = uRam0000000000120268;\n  local_10f8 = _DAT_00120270;\n  uStack_10f0 = uRam0000000000120278;\n  local_10e8 = _DAT_00120280;\n  uStack_10e0 = uRam0000000000120288;\n  local_10d8 = _DAT_00120290;\n  uStack_10d0 = uRam0000000000120298;\n  local_10c8 = _DAT_001202a0;\n  uStack_10c0 = uRam00000000001202a8;\n  local_10b8 = _DAT_001202b0;\n  uStack_10b0 = uRam00000000001202b8;\n  local_10a8 = _DAT_001202c0;\n  uStack_10a0 = uRam00000000001202c8;\n  local_1098 = DAT_001202d0;\n  local_1090 = DAT_001202d8;\n  if (DAT_001207e1 == '\\0') {\n    FUN_0010cbc0(param_1,param_2,&local_1128);\n    FUN_0010caa0(&local_1128,local_1148);\n    FUN_0010cbc0(param_3,param_4,&local_108c);\n    FUN_0010caa0(&local_108c,local_1138);\n    local_116c = memcmp(local_1148,local_1138,0x10);\n    local_1180 = (char *)0x0;\n    pcVar5 = param_1;\n  }\n  else {\n    pcVar1 = param_1 + param_2;\n    local_1180 = (char *)0x0;\n    uVar10 = 4000;\n    pcVar2 = param_3 + param_4;\n    uVar8 = (param_2 + param_4) * 3 + 2;\n    local_116c = 0;\n    pcVar5 = local_fe8;\nLAB_00106bd0:\n    if (uVar10 < uVar8) goto LAB_00106c8f;\nLAB_00106bdb:\n    uVar7 = uVar10;\n    if (param_1 < pcVar1) goto LAB_00106cd1;\nLAB_00106be5:\n    if (param_3 < pcVar2) {\n      param_2 = 0;\n      pcVar9 = pcVar5;\n      uVar7 = uVar10;\n      goto LAB_00106cfb;\n    }\n    param_2 = 0;\n    param_4 = 0;\n    local_1188 = pcVar5;\nLAB_00106bfa:\n    if (param_3 < pcVar2) {\nLAB_00106c05:\n      do {\n        sVar4 = strlen(param_3);\n        param_3 = param_3 + sVar4 + 1;\n        do {\n          while( true ) {\n            if ((pcVar1 <= param_1) && (pcVar2 <= param_3)) goto LAB_00106d7f;\n            FUN_0010cbc0(pcVar5,param_2,&local_1128);\n            FUN_0010cbc0(local_1188,param_4,&local_108c);\n            if (local_116c != 0) goto LAB_00106bd0;\n            uVar7 = param_2;\n            if (param_4 <= param_2) {\n              uVar7 = param_4;\n            }\n            local_116c = memcmp(pcVar5,local_1188,uVar7);\n            if (local_116c != 0) goto LAB_00106bd0;\n            local_116c = (uint)(param_4 < param_2) - (uint)(param_2 < param_4);\n            if (uVar8 <= uVar10) goto LAB_00106bdb;\nLAB_00106c8f:\n            uVar10 = uVar10 * 3 >> 1;\n            if (uVar10 < uVar8) {\n              uVar10 = uVar8;\n            }\n            free(local_1180);\n            pcVar5 = (char *)malloc(uVar10);\n            local_1180 = pcVar5;\n            if (pcVar5 == (char *)0x0) {\n              uVar10 = 4000;\n              pcVar5 = local_fe8;\n              goto LAB_00106bdb;\n            }\n            uVar7 = uVar10;\n            if (pcVar1 <= param_1) goto LAB_00106be5;\nLAB_00106cd1:\n            lVar6 = FUN_00106960(pcVar5,param_1,uVar7);\n            param_2 = lVar6 + 1;\n            if (param_3 < pcVar2) {\n              if (uVar7 < param_2) {\n                uVar10 = 0;\n                pcVar9 = (char *)0x0;\n              }\n              else {\n                uVar10 = uVar7 - param_2;\n                pcVar9 = pcVar5 + param_2;\n              }\nLAB_00106cfb:\n              lVar6 = FUN_00106960(pcVar9,param_3,uVar10);\n              param_4 = lVar6 + 1;\n              uVar10 = uVar7;\n              local_1190 = param_4 + param_2;\n            }\n            else {\n              param_4 = 0;\n              uVar10 = uVar7;\n              local_1190 = param_2;\n            }\n            if ((param_2 <= uVar10) && (local_1190 <= uVar10)) break;\n            if (local_1190 < 0x5555555555555555) {\n              local_1190 = local_1190 * 3 >> 1;\n            }\n            free(local_1180);\n            pcVar5 = (char *)FUN_00113340(local_1190);\n            uVar10 = local_1190;\n            local_1180 = pcVar5;\n            if (param_1 < pcVar1) {\n              strxfrm(pcVar5,param_1,param_2);\n              local_1188 = pcVar5 + param_2;\n              if (param_3 < pcVar2) {\n                strxfrm(local_1188,param_3,param_4);\n                sVar4 = strlen(param_1);\n                param_1 = param_1 + sVar4 + 1;\n                goto LAB_00106c05;\n              }\n            }\n            else {\n              local_1188 = pcVar5 + param_2;\n              if (param_3 < pcVar2) {\n                strxfrm(local_1188,param_3,param_4);\n                goto LAB_00106c05;\n              }\n            }\n            local_1188 = pcVar5 + param_2;\n            if (pcVar1 <= param_1) goto LAB_00106d7f;\n            sVar4 = strlen(param_1);\n            param_1 = param_1 + sVar4 + 1;\n          }\n          local_1188 = pcVar5 + param_2;\n          if (pcVar1 <= param_1) goto LAB_00106bfa;\n          sVar4 = strlen(param_1);\n          param_1 = param_1 + sVar4 + 1;\n        } while (pcVar2 <= param_3);\n      } while( true );\n    }\nLAB_00106d7f:\n    FUN_0010cbc0(pcVar5,param_2,&local_1128);\n    FUN_0010caa0(&local_1128,local_1148);\n    FUN_0010cbc0(local_1188,param_4,&local_108c);\n    FUN_0010caa0(&local_108c,local_1138);\n    iVar3 = memcmp(local_1148,local_1138,0x10);\n    param_3 = local_1188;\n    if (iVar3 != 0) goto LAB_00106deb;\n  }\n  iVar3 = local_116c;\n  if (local_116c == 0) {\n    uVar8 = param_4;\n    if (param_2 <= param_4) {\n      uVar8 = param_2;\n    }\n    iVar3 = memcmp(pcVar5,param_3,uVar8);\n    if (iVar3 == 0) {\n      iVar3 = (uint)(param_4 < param_2) - (uint)(param_2 < param_4);\n    }\n  }\nLAB_00106deb:\n  local_116c = iVar3;\n  free(local_1180);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_116c;\n}\n\n", 
    "00107f90": "\nvoid FUN_00107f90(long param_1)\n\n{\n  pthread_mutex_lock((pthread_mutex_t *)(param_1 + 0x58));\n  return;\n}\n\n", 
    "00121310": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint euidaccess(char *__name,int __type)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010a050": "\nvoid FUN_0010a050(long param_1,ulong param_2,long param_3,long *param_4,undefined8 param_5,\n                 undefined8 param_6,undefined8 param_7)\n\n{\n  int iVar1;\n  ulong uVar2;\n  long lVar3;\n  ulong uVar4;\n  long lVar5;\n  ulong uVar6;\n  long in_FS_OFFSET;\n  pthread_t local_80;\n  long local_78;\n  ulong local_70;\n  long local_68;\n  long local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  long local_40;\n  \n  uVar4 = param_2 >> 1;\n  uVar2 = param_4[5];\n  uVar6 = param_4[6];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_60 = param_4[8];\n  local_48 = param_7;\n  local_78 = param_1;\n  local_70 = uVar4;\n  local_68 = param_3;\n  local_58 = param_5;\n  local_50 = param_6;\n  if ((0x1ffff < uVar2 + uVar6) && (1 < param_2)) {\n    iVar1 = pthread_create(&local_80,(pthread_attr_t *)0x0,FUN_0010a280,&local_78);\n    if (iVar1 == 0) {\n      FUN_0010a050(param_1 + param_4[5] * -0x20,param_2 - uVar4,param_3,param_4[9],param_5,param_6,\n                   param_7);\n      pthread_join(local_80,(void **)0x0);\n      goto LAB_0010a1c6;\n    }\n    uVar2 = param_4[5];\n    uVar6 = param_4[6];\n  }\n  lVar5 = param_1 + param_3 * -0x20;\n  lVar3 = param_1 + uVar2 * -0x20;\n  if (1 < uVar6) {\n    FUN_00108cb0(lVar3,uVar6,lVar5 + (uVar2 >> 1) * -0x20,0);\n  }\n  if (1 < uVar2) {\n    FUN_00108cb0(param_1,uVar2,lVar5,0);\n  }\n  *param_4 = param_1;\n  param_4[1] = lVar3;\n  param_4[2] = lVar3;\n  param_4[3] = param_1 + uVar2 * -0x20 + uVar6 * -0x20;\n  FUN_00107fa0(param_5,param_4);\n  FUN_00109fd0(param_5,param_3,param_6,param_7);\nLAB_0010a1c6:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103bb0": "\nvoid __stpcpy_chk(void)\n\n{\n  (*(code *)PTR___stpcpy_chk_0011fe10)();\n  return;\n}\n\n", 
    "00103df0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getppid_0011ff30)();\n  return _Var1;\n}\n\n", 
    "00103cd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_0011fea0)();\n  return iVar1;\n}\n\n", 
    "00108e40": "\nundefined8 FUN_00108e40(char **param_1,FILE *param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  char *pcVar2;\n  char cVar3;\n  long *plVar4;\n  byte bVar5;\n  int iVar6;\n  char *pcVar7;\n  ulong __n;\n  size_t sVar8;\n  char *pcVar9;\n  undefined8 uVar10;\n  char **ppcVar11;\n  long lVar12;\n  char **ppcVar13;\n  char *pcVar14;\n  char *pcVar15;\n  char *pcVar16;\n  char *pcVar17;\n  char *pcVar18;\n  long in_FS_OFFSET;\n  undefined auVar19 [16];\n  char *local_88;\n  \n  plVar4 = DAT_00120390;\n  cVar3 = DAT_00120038;\n  pcVar18 = DAT_00120030;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*(char *)(param_1 + 6) == '\\0') {\n    pcVar17 = param_1[1];\n    pcVar7 = param_1[4];\n    pcVar16 = *param_1;\n    pcVar2 = param_1[5];\n    if (pcVar17 == pcVar7) {\n      pcVar7 = param_1[2];\n    }\n    else {\n      memmove(pcVar16,pcVar16 + ((long)pcVar17 - (long)pcVar7),(size_t)pcVar7);\n      pcVar7 = (char *)0x0;\n      pcVar17 = param_1[4];\n      pcVar16 = *param_1;\n      param_1[2] = (char *)0x0;\n      param_1[1] = pcVar17;\n    }\n    pcVar18 = pcVar18 + -0x22;\n    pcVar15 = param_1[3];\n    do {\n      pcVar17 = pcVar16 + (long)pcVar17;\n      auVar19 = FUN_001080f0(pcVar16,pcVar15,pcVar7);\n      lVar12 = SUB168(auVar19 >> 0x40,0);\n      ppcVar13 = (char **)(SUB168(auVar19,0) + lVar12 * -0x20);\n      pcVar7 = (char *)((SUB168(auVar19,0) - (long)pcVar2 * lVar12) - (long)pcVar17);\n      if (lVar12 != 0) {\n        pcVar16 = ppcVar13[1] + (long)*ppcVar13;\n      }\n      do {\n        if (pcVar7 <= pcVar2 + 1) break;\n        __n = (ulong)(pcVar7 + -1) / (ulong)(pcVar2 + 1);\n        sVar8 = fread_unlocked(pcVar17,1,__n,param_2);\n        pcVar7 = pcVar7 + -sVar8;\n        local_88 = pcVar17 + sVar8;\n        if (__n != sVar8) {\n          iVar6 = ferror_unlocked(param_2);\n          if (iVar6 != 0) {\n            uVar10 = dcgettext(0,\"read failed\",5);\n                    /* WARNING: Subroutine does not return */\n            FUN_001062b0(uVar10,param_3);\n          }\n          iVar6 = feof_unlocked(param_2);\n          if (iVar6 != 0) {\n            *(undefined *)(param_1 + 6) = 1;\n            if (*param_1 == local_88) goto LAB_00109060;\n            if ((pcVar16 != local_88) && (local_88[-1] != cVar3)) {\n              *local_88 = cVar3;\n              local_88 = local_88 + 1;\n            }\n          }\n        }\n        ppcVar11 = ppcVar13;\n        pcVar15 = pcVar16;\n        while (pcVar16 = pcVar15, ppcVar13 = ppcVar11,\n              pcVar9 = (char *)memchr(pcVar17,(int)cVar3,(long)local_88 - (long)pcVar17),\n              pcVar9 != (char *)0x0) {\n          pcVar17 = pcVar9 + 1;\n          ppcVar11 = ppcVar13 + -4;\n          *pcVar9 = '\\0';\n          *ppcVar11 = pcVar16;\n          pcVar14 = pcVar17 + -(long)pcVar16;\n          ppcVar13[-3] = pcVar14;\n          if (pcVar18 < pcVar14) {\n            pcVar18 = pcVar14;\n          }\n          pcVar7 = pcVar7 + -(long)pcVar2;\n          pcVar15 = pcVar17;\n          if (plVar4 != (long *)0x0) {\n            if (plVar4[2] != -1) {\n              pcVar9 = (char *)FUN_00108250(pcVar16,pcVar14,plVar4);\n            }\n            lVar12 = *plVar4;\n            ppcVar13[-1] = pcVar9;\n            if (lVar12 == -1) {\n              if (*(char *)(plVar4 + 6) != '\\0') {\n                while (bVar5 = FUN_001053b0((int)*pcVar16), (&DAT_001206c0)[bVar5] != '\\0') {\n                  pcVar16 = pcVar16 + 1;\n                }\n              }\n              ppcVar13[-2] = pcVar16;\n              pcVar15 = pcVar17;\n            }\n            else {\n              pcVar16 = (char *)FUN_00108100(pcVar16,pcVar14,plVar4);\n              ppcVar13[-2] = pcVar16;\n              pcVar15 = pcVar17;\n            }\n          }\n        }\n        pcVar17 = local_88;\n      } while (*(char *)(param_1 + 6) == '\\0');\n      param_1[1] = pcVar17 + -(long)*param_1;\n      ppcVar11 = param_1;\n      auVar19 = FUN_001080f0(*param_1,param_1[3]);\n      pcVar7 = (char *)(SUB168(auVar19,0) - (long)ppcVar13 >> 5);\n      ppcVar11[2] = pcVar7;\n      if (pcVar7 != (char *)0x0) goto LAB_00109176;\n      pcVar16 = (char *)FUN_00113410();\n      pcVar15 = (char *)(SUB168(auVar19 >> 0x40,0) & 0xffffffffffffffe0);\n      pcVar17 = param_1[1];\n      pcVar7 = param_1[2];\n      *param_1 = pcVar16;\n      param_1[3] = pcVar15;\n    } while( true );\n  }\nLAB_00109060:\n  uVar10 = 0;\nLAB_00109062:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\nLAB_00109176:\n  DAT_00120030 = pcVar18 + 0x22;\n  param_1[4] = pcVar17 + -(long)pcVar16;\n  uVar10 = 1;\n  goto LAB_00109062;\n}\n\n", 
    "00111960": "\nvoid FUN_00111960(ulong *param_1,void *param_2,ulong param_3)\n\n{\n  ulong *puVar1;\n  ulong uVar2;\n  void *pvVar3;\n  ulong *__src;\n  ulong uVar4;\n  \n  __src = param_1 + 0x104;\n  puVar1 = param_1 + 1;\n  uVar4 = *param_1;\n  pvVar3 = param_2;\n  if (param_3 <= uVar4) {\n    __src = (ulong *)((long)__src + (0x800 - uVar4));\nLAB_00111a20:\n    memcpy(param_2,__src,param_3);\n    *param_1 = uVar4 - param_3;\n    return;\n  }\n  while( true ) {\n    param_2 = (void *)((long)pvVar3 + uVar4);\n    param_3 = param_3 - uVar4;\n    memcpy(pvVar3,(void *)((0x800 - uVar4) + (long)__src),uVar4);\n    if (((ulong)param_2 & 7) == 0) break;\n    uVar4 = 0x800;\n    FUN_00111e30(puVar1,__src);\n    pvVar3 = param_2;\n    if (param_3 < 0x801) goto LAB_00111a1a;\n  }\n  uVar2 = (ulong)((uint)param_3 & 0x7ff);\n  uVar4 = param_3;\n  while (pvVar3 = (void *)((long)param_2 + (param_3 - uVar4)), uVar4 != uVar2) {\n    FUN_00111e30(puVar1,pvVar3);\n    uVar4 = uVar4 - 0x800;\n    if (uVar4 == 0) {\n      *param_1 = 0;\n      return;\n    }\n  }\n  FUN_00111e30(puVar1,__src);\n  param_3 = uVar2;\n  param_2 = pvVar3;\nLAB_00111a1a:\n  uVar4 = 0x800;\n  goto LAB_00111a20;\n}\n\n", 
    "00111840": "\nvoid FUN_00111840(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00113340(0x1038);\n  *puVar1 = param_1;\n  puVar1[1] = FUN_00111870;\n  puVar1[2] = param_2;\n  return;\n}\n\n", 
    "00107140": "\n__pid_t FUN_00107140(int param_1)\n\n{\n  char cVar1;\n  __pid_t _Var2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  uint local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  _Var2 = -1;\n  if (param_1 != 0) {\n    _Var2 = param_1;\n  }\n  _Var2 = waitpid(_Var2,(int *)&local_24,(uint)(param_1 == 0));\n  if (_Var2 < 0) {\n    uVar4 = FUN_00111570(4,DAT_00120388);\n    uVar5 = dcgettext(0,\"waiting for %s [-d]\",5);\n    piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(2,*piVar3,uVar5,uVar4);\n  }\n  if ((_Var2 != 0) && ((0 < param_1 || (cVar1 = FUN_001070e0(_Var2), cVar1 != '\\0')))) {\n    if ((local_24 >> 8 & 0xff | local_24 & 0x7f) != 0) {\n      uVar4 = FUN_00111570(4,DAT_00120388);\n      uVar5 = dcgettext(0,\"%s [-d] terminated abnormally\",5);\n                    /* WARNING: Subroutine does not return */\n      error(2,0,uVar5,uVar4);\n    }\n    DAT_001202dc = DAT_001202dc + -1;\n  }\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return _Var2;\n}\n\n", 
    "0010ad90": "\nvoid FUN_0010ad90(long param_1,ulong param_2,ulong param_3,char *param_4)\n\n{\n  byte **ppbVar1;\n  bool bVar2;\n  int iVar3;\n  byte *pbVar4;\n  byte **ppbVar5;\n  uint uVar6;\n  byte *pbVar7;\n  long in_FS_OFFSET;\n  undefined8 local_170;\n  long local_168;\n  long local_160;\n  long local_d8;\n  long local_d0;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_3) {\n    ppbVar1 = (byte **)(param_1 + param_3 * 0x10);\n    pbVar4 = (byte *)0x0;\n    ppbVar5 = (byte **)(param_2 * 0x10 + param_1);\n    bVar2 = false;\n    do {\n      while( true ) {\n        pbVar7 = *ppbVar5;\n        uVar6 = *pbVar7 - 0x2d;\n        if (uVar6 == 0) {\n          uVar6 = (uint)pbVar7[1];\n        }\n        if (((param_4 == (char *)0x0) || (iVar3 = strcmp(param_4,(char *)pbVar7), uVar6 == 0)) ||\n           (iVar3 != 0)) break;\nLAB_0010aec3:\n        if (pbVar4 == (byte *)0x0) {\n          pbVar4 = (byte *)FUN_00107c00(&local_170);\n          pbVar7 = pbVar4 + 0xd;\n          FUN_0010ace0(ppbVar5,0,1,local_170,pbVar7);\n        }\n        else {\n          pbVar7 = pbVar4 + 0xd;\n        }\n        *ppbVar5 = pbVar7;\n        ppbVar5[1] = pbVar4;\nLAB_0010ae1a:\n        ppbVar5 = ppbVar5 + 2;\n        if (ppbVar5 == ppbVar1) goto LAB_0010ae80;\n      }\n      if ((!bVar2) && (iVar3 = FUN_001150c0(1,&local_168), iVar3 != 0)) break;\n      if (uVar6 == 0) {\n        bVar2 = true;\n        iVar3 = FUN_001150c0(0,&local_d8);\n        if (iVar3 == 0) goto LAB_0010ae01;\n        goto LAB_0010ae1a;\n      }\n      bVar2 = true;\n      iVar3 = FUN_001150a0(*ppbVar5,&local_d8);\n      if (iVar3 == 0) {\nLAB_0010ae01:\n        bVar2 = true;\n        if ((local_d0 == local_160) && (local_d8 == local_168)) goto LAB_0010aec3;\n        goto LAB_0010ae1a;\n      }\n      ppbVar5 = ppbVar5 + 2;\n    } while (ppbVar5 != ppbVar1);\n  }\nLAB_0010ae80:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0010dd00": "\nlong FUN_0010dd00(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  \n  if (param_1[4] == (long *)0x0) {\n    return 0;\n  }\n  plVar2 = *param_1;\n  if (param_1[1] <= plVar2) {\n    lVar1 = FUN_00103f05();\n    return lVar1;\n  }\n  do {\n    if (*plVar2 != 0) {\n      return *plVar2;\n    }\n    plVar2 = plVar2 + 2;\n  } while (plVar2 < param_1[1]);\n  lVar1 = FUN_00103f05();\n  return lVar1;\n}\n\n", 
    "0010fae0": "\nundefined8\nFUN_0010fae0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010fa10(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010d770": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong FUN_0010d770(float param_1,ulong param_2,char param_3)\n\n{\n  ulong uVar1;\n  float fVar2;\n  \n  if (param_3 == '\\0') {\n    if ((long)param_2 < 0) {\n      fVar2 = (float)(param_2 >> 1 | (ulong)((uint)param_2 & 1));\n      fVar2 = fVar2 + fVar2;\n    }\n    else {\n      fVar2 = (float)param_2;\n    }\n    fVar2 = fVar2 / param_1;\n    if (_DAT_001180c8 <= fVar2) {\n      return 0;\n    }\n    if (fVar2 < _DAT_001180cc) {\n      param_2 = (ulong)fVar2;\n    }\n    else {\n      param_2 = (long)(fVar2 - _DAT_001180cc) ^ 0x8000000000000000;\n    }\n  }\n  uVar1 = FUN_0010d650(param_2);\n  if (((uVar1 >> 0x3c & 1) == 0) && (uVar1 >> 0x3d == 0)) {\n    return uVar1;\n  }\n  return 0;\n}\n\n", 
    "0010f950": "\nundefined8\nFUN_0010f950(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f8a0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010c320": "\nvoid FUN_0010c320(int *param_1,ulong param_2,int *param_3)\n\n{\n  int *piVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  int iVar14;\n  int iVar15;\n  int iVar16;\n  int iVar17;\n  uint uVar18;\n  uint uVar19;\n  uint uVar20;\n  uint uVar21;\n  uint uVar22;\n  uint uVar23;\n  uint uVar24;\n  uint local_50;\n  int local_48;\n  \n  uVar23 = param_3[1];\n  piVar1 = (int *)((long)param_1 + (param_2 & 0xfffffffffffffffc));\n  local_48 = *param_3;\n  uVar24 = param_3[2];\n  local_50 = param_3[3];\n  uVar18 = param_3[4];\n  param_3[4] = (uint)param_2 + param_3[4];\n  param_3[5] = (int)(param_2 >> 0x20) + param_3[5] + (uint)CARRY4((uint)param_2,uVar18);\n  if (param_1 < piVar1) {\n    do {\n      iVar2 = *param_1;\n      iVar3 = param_1[1];\n      iVar4 = param_1[3];\n      iVar5 = param_1[5];\n      iVar6 = param_1[6];\n      iVar7 = param_1[7];\n      iVar8 = param_1[9];\n      iVar9 = param_1[0xb];\n      uVar18 = ((local_50 ^ uVar24) & uVar23 ^ local_50) + iVar2 + -0x28955b88 + local_48;\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar23;\n      uVar19 = ((uVar23 ^ uVar24) & uVar18 ^ uVar24) + iVar3 + -0x173848aa + local_50;\n      iVar10 = param_1[2];\n      uVar20 = (uVar19 * 0x1000 | uVar19 >> 0x14) + uVar18;\n      uVar19 = ((uVar18 ^ uVar23) & uVar20 ^ uVar23) + iVar10 + 0x242070db + uVar24;\n      iVar11 = param_1[4];\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar4 + -0x3e423112 + uVar23;\n      iVar12 = param_1[0xf];\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar11 + -0xa83f051 + uVar18;\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;\n      uVar20 = ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar5 + 0x4787c62a + uVar20;\n      uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;\n      uVar19 = ((uVar21 ^ uVar18) & uVar20 ^ uVar21) + iVar6 + -0x57cfb9ed + uVar19;\n      iVar13 = param_1[8];\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar7 + -0x2b96aff + uVar21;\n      iVar14 = param_1[0xc];\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar13 + 0x698098d8 + uVar18;\n      iVar15 = param_1[0xe];\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;\n      uVar20 = ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar8 + -0x74bb0851 + uVar20;\n      iVar16 = param_1[10];\n      uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;\n      uVar19 = ((uVar21 ^ uVar18) & uVar20 ^ uVar21) + iVar16 + -0xa44f + uVar19;\n      iVar17 = param_1[0xd];\n      param_1 = param_1 + 0x10;\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar9 + -0x76a32842 + uVar21;\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar20 ^ uVar19) & uVar21 ^ uVar20) + iVar14 + 0x6b901122 + uVar18;\n      uVar18 = (uVar18 * 0x80 | uVar18 >> 0x19) + uVar21;\n      uVar20 = ((uVar19 ^ uVar21) & uVar18 ^ uVar19) + iVar17 + -0x2678e6d + uVar20;\n      uVar20 = (uVar20 * 0x1000 | uVar20 >> 0x14) + uVar18;\n      uVar19 = ((uVar21 ^ uVar18) & uVar20 ^ uVar21) + iVar15 + -0x5986bc72 + uVar19;\n      uVar19 = (uVar19 >> 0xf | uVar19 * 0x20000) + uVar20;\n      uVar21 = ((uVar18 ^ uVar20) & uVar19 ^ uVar18) + iVar12 + 0x49b40821 + uVar21;\n      uVar21 = (uVar21 >> 10 | uVar21 * 0x400000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar3 + -0x9e1da9e + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21;\n      uVar20 = ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar6 + -0x3fbf4cc0 + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar21 ^ uVar18) + iVar9 + 0x265e5a51 + uVar19;\n      uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar21 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar2 + -0x16493856 + uVar21;\n      uVar21 = (uVar21 >> 0xc | uVar21 * 0x100000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar5 + -0x29d0efa3 + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21;\n      uVar20 = ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar16 + 0x2441453 + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar21 ^ uVar18) + iVar12 + -0x275e197f + uVar19;\n      uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar21 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar11 + -0x182c0438 + uVar21;\n      uVar21 = (uVar21 >> 0xc | uVar21 * 0x100000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar21) & uVar20 ^ uVar19) + iVar8 + 0x21e1cde6 + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar21;\n      uVar20 = ((uVar21 ^ uVar18) & uVar19 ^ uVar21) + iVar15 + -0x3cc8f82a + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar21 ^ uVar18) + iVar4 + -0xb2af279 + uVar19;\n      uVar19 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar21 = ((uVar20 ^ uVar19) & uVar18 ^ uVar20) + iVar13 + 0x455a14ed + uVar21;\n      uVar22 = (uVar21 >> 0xc | uVar21 * 0x100000) + uVar19;\n      uVar18 = ((uVar19 ^ uVar22) & uVar20 ^ uVar19) + iVar17 + -0x561c16fb + uVar18;\n      uVar18 = (uVar18 * 0x20 | uVar18 >> 0x1b) + uVar22;\n      uVar20 = ((uVar22 ^ uVar18) & uVar19 ^ uVar22) + iVar10 + -0x3105c08 + uVar20;\n      uVar20 = (uVar20 * 0x200 | uVar20 >> 0x17) + uVar18;\n      uVar19 = ((uVar18 ^ uVar20) & uVar22 ^ uVar18) + iVar7 + 0x676f02d9 + uVar19;\n      uVar21 = (uVar19 * 0x4000 | uVar19 >> 0x12) + uVar20;\n      uVar19 = ((uVar20 ^ uVar21) & uVar18 ^ uVar20) + iVar14 + -0x72d5b376 + uVar22;\n      uVar22 = (uVar19 >> 0xc | uVar19 * 0x100000) + uVar21;\n      uVar18 = (uVar20 ^ uVar21 ^ uVar22) + iVar5 + -0x5c6be + uVar18;\n      uVar19 = (uVar18 * 0x10 | uVar18 >> 0x1c) + uVar22;\n      uVar18 = (uVar21 ^ uVar22 ^ uVar19) + iVar13 + -0x788e097f + uVar20;\n      uVar20 = (uVar18 * 0x800 | uVar18 >> 0x15) + uVar19;\n      uVar18 = (uVar22 ^ uVar19 ^ uVar20) + iVar9 + 0x6d9d6122 + uVar21;\n      uVar21 = (uVar18 * 0x10000 | uVar18 >> 0x10) + uVar20;\n      uVar18 = (uVar19 ^ uVar20 ^ uVar21) + iVar15 + -0x21ac7f4 + uVar22;\n      uVar18 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar21;\n      uVar19 = (uVar20 ^ uVar21 ^ uVar18) + iVar3 + -0x5b4115bc + uVar19;\n      uVar19 = (uVar19 * 0x10 | uVar19 >> 0x1c) + uVar18;\n      uVar20 = (uVar21 ^ uVar18 ^ uVar19) + iVar11 + 0x4bdecfa9 + uVar20;\n      uVar22 = (uVar20 * 0x800 | uVar20 >> 0x15) + uVar19;\n      uVar20 = (uVar18 ^ uVar19 ^ uVar22) + iVar7 + -0x944b4a0 + uVar21;\n      uVar20 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar22;\n      uVar18 = (uVar19 ^ uVar22 ^ uVar20) + iVar16 + -0x41404390 + uVar18;\n      uVar21 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar20;\n      uVar18 = (uVar22 ^ uVar20 ^ uVar21) + iVar17 + 0x289b7ec6 + uVar19;\n      uVar19 = (uVar18 * 0x10 | uVar18 >> 0x1c) + uVar21;\n      uVar18 = (uVar20 ^ uVar21 ^ uVar19) + iVar2 + -0x155ed806 + uVar22;\n      uVar18 = (uVar18 * 0x800 | uVar18 >> 0x15) + uVar19;\n      uVar20 = (uVar21 ^ uVar19 ^ uVar18) + iVar4 + -0x2b10cf7b + uVar20;\n      uVar22 = (uVar20 * 0x10000 | uVar20 >> 0x10) + uVar18;\n      uVar20 = (uVar19 ^ uVar18 ^ uVar22) + iVar6 + 0x4881d05 + uVar21;\n      uVar21 = (uVar20 >> 9 | uVar20 * 0x800000) + uVar22;\n      uVar19 = (uVar18 ^ uVar22 ^ uVar21) + iVar8 + -0x262b2fc7 + uVar19;\n      uVar20 = (uVar19 * 0x10 | uVar19 >> 0x1c) + uVar21;\n      uVar18 = (uVar22 ^ uVar21 ^ uVar20) + iVar14 + -0x1924661b + uVar18;\n      uVar19 = (uVar18 * 0x800 | uVar18 >> 0x15) + uVar20;\n      uVar18 = (uVar21 ^ uVar20 ^ uVar19) + iVar12 + 0x1fa27cf8 + uVar22;\n      uVar22 = (uVar18 * 0x10000 | uVar18 >> 0x10) + uVar19;\n      uVar18 = (uVar20 ^ uVar19 ^ uVar22) + iVar10 + -0x3b53a99b + uVar21;\n      uVar18 = (uVar18 >> 9 | uVar18 * 0x800000) + uVar22;\n      uVar20 = ((~uVar19 | uVar18) ^ uVar22) + iVar2 + -0xbd6ddbc + uVar20;\n      uVar20 = (uVar20 * 0x40 | uVar20 >> 0x1a) + uVar18;\n      uVar19 = ((~uVar22 | uVar20) ^ uVar18) + iVar7 + 0x432aff97 + uVar19;\n      uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar15 + -0x546bdc59 + uVar22;\n      uVar21 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar19;\n      uVar18 = ((~uVar20 | uVar21) ^ uVar19) + iVar5 + -0x36c5fc7 + uVar18;\n      uVar18 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar21;\n      uVar20 = ((~uVar19 | uVar18) ^ uVar21) + iVar14 + 0x655b59c3 + uVar20;\n      uVar20 = (uVar20 * 0x40 | uVar20 >> 0x1a) + uVar18;\n      uVar19 = ((~uVar21 | uVar20) ^ uVar18) + iVar4 + -0x70f3336e + uVar19;\n      uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar16 + -0x100b83 + uVar21;\n      uVar21 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar19;\n      uVar18 = ((~uVar20 | uVar21) ^ uVar19) + iVar3 + -0x7a7ba22f + uVar18;\n      uVar18 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar21;\n      uVar20 = ((~uVar19 | uVar18) ^ uVar21) + iVar13 + 0x6fa87e4f + uVar20;\n      uVar20 = (uVar20 * 0x40 | uVar20 >> 0x1a) + uVar18;\n      uVar19 = ((~uVar21 | uVar20) ^ uVar18) + iVar12 + -0x1d31920 + uVar19;\n      uVar19 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar6 + -0x5cfebcec + uVar21;\n      uVar21 = (uVar21 * 0x8000 | uVar21 >> 0x11) + uVar19;\n      uVar18 = ((~uVar20 | uVar21) ^ uVar19) + iVar17 + 0x4e0811a1 + uVar18;\n      uVar22 = (uVar18 >> 0xb | uVar18 * 0x200000) + uVar21;\n      uVar18 = ((~uVar19 | uVar22) ^ uVar21) + iVar11 + -0x8ac817e + uVar20;\n      uVar18 = (uVar18 * 0x40 | uVar18 >> 0x1a) + uVar22;\n      uVar19 = ((~uVar21 | uVar18) ^ uVar22) + iVar9 + -0x42c50dcb + uVar19;\n      uVar20 = (uVar19 * 0x400 | uVar19 >> 0x16) + uVar18;\n      uVar19 = ((~uVar22 | uVar20) ^ uVar18) + iVar10 + 0x2ad7d2bb + uVar21;\n      uVar19 = (uVar19 * 0x8000 | uVar19 >> 0x11) + uVar20;\n      uVar21 = ((~uVar18 | uVar19) ^ uVar20) + iVar8 + -0x14792c6f + uVar22;\n      local_48 = local_48 + uVar18;\n      uVar24 = uVar24 + uVar19;\n      local_50 = local_50 + uVar20;\n      uVar23 = uVar23 + (uVar21 >> 0xb | uVar21 * 0x200000) + uVar19;\n    } while (param_1 < piVar1);\n  }\n  *param_3 = local_48;\n  param_3[1] = uVar23;\n  param_3[2] = uVar24;\n  param_3[3] = local_50;\n  return;\n}\n\n", 
    "0010e980": "\nundefined8 * FUN_0010e980(code *param_1,long param_2)\n\n{\n  undefined8 *puVar1;\n  undefined8 *puVar2;\n  \n  puVar1 = (undefined8 *)FUN_00113340(0x20);\n  if (param_2 == 0) {\n    param_2 = 1;\n  }\n  puVar2 = (undefined8 *)FUN_00113360(param_2,8);\n  puVar1[1] = param_2;\n  *puVar2 = 0;\n  *puVar1 = puVar2;\n  puVar1[2] = 0;\n  if (param_1 == (code *)0x0) {\n    param_1 = FUN_0010e810;\n  }\n  puVar1[3] = param_1;\n  return puVar1;\n}\n\n", 
    "0010d650": "\nulong FUN_0010d650(ulong param_1)\n\n{\n  char cVar1;\n  ulong uVar2;\n  \n  uVar2 = 10;\n  if (9 < param_1) {\n    uVar2 = param_1;\n  }\n  uVar2 = uVar2 | 1;\n  while ((uVar2 != 0xffffffffffffffff && (cVar1 = FUN_0010d5e0(uVar2), cVar1 == '\\0'))) {\n    uVar2 = uVar2 + 2;\n  }\n  return uVar2;\n}\n\n", 
    "001144f0": "\nvoid FUN_001144f0(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x001144fe. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x40))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x00114503. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x40))(param_2);\n  return;\n}\n\n", 
    "00103cc0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0011fe98)();\n  return;\n}\n\n", 
    "00103ba0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0011fe08)();\n  return iVar1;\n}\n\n", 
    "00103de0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pipe2(int *__pipedes,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pipe2_0011ff28)();\n  return iVar1;\n}\n\n", 
    "00108100": "\nchar * FUN_00108100(char *param_1,long param_2,long *param_3)\n\n{\n  long lVar1;\n  byte bVar2;\n  char cVar3;\n  char *pcVar4;\n  char *pcVar5;\n  long *extraout_RDX;\n  char *pcVar6;\n  long lVar7;\n  undefined1 *puVar8;\n  long lVar9;\n  \n  pcVar6 = param_1 + param_2 + -1;\n  lVar1 = *param_3;\n  lVar9 = param_3[1];\n  pcVar5 = param_1;\n  if (DAT_00120028 == 0x80) {\n    if (pcVar6 <= param_1) goto LAB_00108140;\n    lVar7 = lVar1 + -1;\n    if (lVar1 != 0) {\n      bVar2 = FUN_001053b0((int)*param_1);\n      puVar8 = &DAT_001206c0;\n      cVar3 = (&DAT_001206c0)[bVar2];\n      do {\n        while (cVar3 != '\\0') {\n          param_1 = param_1 + 1;\n          if (pcVar6 <= param_1) {\n            pcVar5 = param_1 + lVar9;\n            if (pcVar6 <= param_1 + lVar9) {\n              pcVar5 = pcVar6;\n            }\n            return pcVar5;\n          }\n          bVar2 = FUN_001053b0((int)*param_1);\n          cVar3 = puVar8[bVar2];\n        }\n        pcVar5 = param_1;\n        if (pcVar6 <= param_1) goto LAB_00108140;\n        do {\n          pcVar5 = pcVar6;\n          param_1 = param_1 + 1;\n          pcVar6 = pcVar5;\n          if (pcVar5 == param_1) goto LAB_00108140;\n          bVar2 = FUN_001053b0((int)*param_1);\n          cVar3 = puVar8[bVar2];\n        } while (cVar3 == '\\0');\n        pcVar5 = param_1;\n        if (pcVar6 <= param_1) goto LAB_00108140;\n        lVar7 = lVar7 + -1;\n        param_3 = extraout_RDX;\n      } while (lVar7 != -1);\n    }\n  }\n  else {\n    if (pcVar6 <= param_1) goto LAB_00108140;\n    lVar7 = lVar1 + -1;\n    if (lVar1 != 0) {\n      do {\n        while (DAT_00120028 == *param_1) {\n          pcVar5 = param_1;\n          if ((pcVar6 <= param_1) || (param_1 = param_1 + 1, pcVar5 = param_1, pcVar6 <= param_1))\n          goto LAB_00108140;\n          lVar7 = lVar7 + -1;\n          if (lVar7 == -1) goto LAB_00108168;\n        }\n        param_1 = param_1 + 1;\n        pcVar5 = param_1;\n      } while (param_1 < pcVar6);\n      goto LAB_00108140;\n    }\n  }\nLAB_00108168:\n  puVar8 = &DAT_001206c0;\n  if (*(char *)(param_3 + 6) != '\\0') {\n    do {\n      bVar2 = FUN_001053b0((int)*pcVar5);\n      if (puVar8[bVar2] == '\\0') {\n        pcVar4 = pcVar5 + lVar9;\n        if (pcVar6 <= pcVar5 + lVar9) {\n          pcVar4 = pcVar6;\n        }\n        return pcVar4;\n      }\n      pcVar5 = pcVar5 + 1;\n    } while (pcVar5 < pcVar6);\n  }\nLAB_00108140:\n  pcVar4 = pcVar5 + lVar9;\n  if (pcVar6 <= pcVar5 + lVar9) {\n    pcVar4 = pcVar6;\n  }\n  return pcVar4;\n}\n\n", 
    "001142b0": "\nvoid FUN_001142b0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00114290(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00107250": "\nulong FUN_00107250(int param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  __pid_t __pid;\n  long in_FS_OFFSET;\n  uint uStack_24;\n  long lStack_20;\n  \n  uVar6 = FUN_001070e0();\n  if ((char)uVar6 == '\\0') {\n    return uVar6;\n  }\n  lStack_20 = *(long *)(in_FS_OFFSET + 0x28);\n  __pid = -1;\n  if (param_1 != 0) {\n    __pid = param_1;\n  }\n  uVar2 = waitpid(__pid,(int *)&uStack_24,(uint)(param_1 == 0));\n  if ((int)uVar2 < 0) {\n    uVar4 = FUN_00111570(4,DAT_00120388);\n    uVar5 = dcgettext(0,\"waiting for %s [-d]\",5);\n    piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n    error(2,*piVar3,uVar5,uVar4);\n  }\n  if ((uVar2 != 0) && ((0 < param_1 || (cVar1 = FUN_001070e0(uVar2), cVar1 != '\\0')))) {\n    if ((uStack_24 >> 8 & 0xff | uStack_24 & 0x7f) != 0) {\n      uVar4 = FUN_00111570(4,DAT_00120388);\n      uVar5 = dcgettext(0,\"%s [-d] terminated abnormally\",5);\n                    /* WARNING: Subroutine does not return */\n      error(2,0,uVar5,uVar4);\n    }\n    DAT_001202dc = DAT_001202dc + -1;\n  }\n  if (lStack_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return (ulong)uVar2;\n}\n\n", 
    "00106040": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00106040(undefined4 param_1,char param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  ulong extraout_RDX;\n  long in_FS_OFFSET;\n  double dVar2;\n  double dVar3;\n  ulong local_30;\n  char *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00113d00(param_3,&local_28,10,&local_30,\"EgGkKmMPtTYZ\");\n  if (iVar1 == 0) {\n    if ((int)local_28[-1] - 0x30U < 10) {\n      if (0x3fffffffffffff < local_30) {\nLAB_00106138:\n        iVar1 = 1;\n        goto LAB_001060f4;\n      }\n      local_30 = local_30 << 10;\n    }\nLAB_001060af:\n    if (local_30 < DAT_001203b8) goto LAB_001060b8;\n  }\n  else {\n    if (((iVar1 == 2) && ((int)local_28[-1] - 0x30U < 10)) && (local_28[1] == '\\0')) {\n      if (*local_28 == '%') {\n        dVar2 = (double)FUN_0010f0c0();\n        if ((long)local_30 < 0) {\n          dVar3 = (double)(local_30 >> 1 | (ulong)((uint)local_30 & 1));\n          dVar3 = dVar3 + dVar3;\n        }\n        else {\n          dVar3 = (double)local_30;\n        }\n        dVar2 = (dVar3 * dVar2) / _DAT_00117f28;\n        if (DAT_00117f30 <= dVar2) goto LAB_00106138;\n        if (DAT_00117f38 <= dVar2) {\n          local_30 = (long)(dVar2 - DAT_00117f38) ^ 0x8000000000000000;\n        }\n        else {\n          local_30 = (ulong)dVar2;\n        }\n      }\n      else if (*local_28 != 'b') goto LAB_001060f4;\n      goto LAB_001060af;\n    }\nLAB_001060f4:\n    FUN_00113c80(iVar1,param_1,(int)param_2,&PTR_s_ignore_leading_blanks_0011f5c0,param_3);\n    local_30 = extraout_RDX;\n  }\n  DAT_001203b8 = (ulong)DAT_00120024 * 0x22;\n  if (DAT_001203b8 < local_30) {\n    DAT_001203b8 = local_30;\n  }\nLAB_001060b8:\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001055b0": "\nundefined4 FUN_001055b0(char *param_1,char **param_2)\n\n{\n  char *pcVar1;\n  byte bVar2;\n  byte bVar3;\n  uint uVar4;\n  ulong uVar5;\n  char *pcVar6;\n  char extraout_DL;\n  long extraout_RDX;\n  ulong uVar7;\n  ulong uVar8;\n  ulong uVar9;\n  ulong uVar10;\n  char *pcVar11;\n  undefined1 *puVar12;\n  \n  while( true ) {\n    uVar4 = FUN_001053b0((int)*param_1);\n    uVar10 = (ulong)uVar4;\n    if (*(char *)(extraout_RDX + (ulong)(uVar4 & 0xff)) == '\\0') break;\n    param_1 = param_1 + 1;\n  }\n  uVar8 = 0;\n  puVar12 = &DAT_001203c0;\n  uVar7 = 0xc;\n  do {\n    uVar9 = uVar8 + uVar7 >> 1;\n    pcVar6 = (&PTR_DAT_00120060)[uVar8 + uVar7 & 0xfffffffffffffffe];\n    if (*pcVar6 == '\\0') {\nLAB_00105670:\n      if (param_2 != (char **)0x0) {\n        *param_2 = param_1;\n      }\n      return (&DAT_00120068)[uVar9 * 4];\n    }\n    uVar5 = uVar10 & 0xffffffff;\n    pcVar11 = param_1;\n    while( true ) {\n      bVar2 = FUN_001053b0((int)(char)puVar12[uVar5 & 0xff]);\n      bVar3 = FUN_001053b0((int)extraout_DL);\n      if (bVar2 < bVar3) break;\n      if (bVar3 < bVar2) {\n        uVar8 = uVar9 + 1;\n        uVar9 = uVar7;\n        break;\n      }\n      pcVar1 = pcVar6 + 1;\n      pcVar6 = pcVar6 + 1;\n      param_1 = param_1 + 1;\n      if (*pcVar1 == '\\0') goto LAB_00105670;\n      uVar5 = FUN_001053b0((int)*param_1);\n    }\n    uVar7 = uVar9;\n    param_1 = pcVar11;\n    if (uVar9 <= uVar8) {\n      return 0;\n    }\n  } while( true );\n}\n\n", 
    "0010f600": "\nint * FUN_0010f600(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105b90": "\nvoid FUN_00105b90(int param_1)\n\n{\n  FUN_00105af0();\n  signal(param_1,(__sighandler_t)0x0);\n  raise(param_1);\n  return;\n}\n\n", 
    "001111f0": "\nvoid FUN_001111f0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00120920;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103eb0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaddset_0011ff90)();\n  return iVar1;\n}\n\n", 
    "0010f0c0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble FUN_0010f0c0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  long in_FS_OFFSET;\n  double dVar3;\n  double dVar4;\n  sysinfo local_88;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = sysconf(0x55);\n  dVar3 = (double)lVar2;\n  lVar2 = sysconf(0x1e);\n  if ((dVar3 < 0.0) || (dVar4 = (double)lVar2, dVar4 < 0.0)) {\n    iVar1 = sysinfo(&local_88);\n    dVar3 = _DAT_001180f8;\n    if (iVar1 != 0) goto LAB_0010f136;\n    if ((long)local_88.totalram < 0) {\n      dVar3 = (double)(local_88.totalram >> 1 | (ulong)((uint)local_88.totalram & 1));\n      dVar3 = dVar3 + dVar3;\n    }\n    else {\n      dVar3 = (double)local_88.totalram;\n    }\n    dVar4 = (double)(ulong)local_88.mem_unit;\n  }\n  dVar3 = dVar3 * dVar4;\nLAB_0010f136:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return dVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001132b0": "\nvoid FUN_001132b0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00111820": "\nvoid FUN_00111820(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00111800(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00113ba0": "\nvoid FUN_00113ba0(uint param_1,int param_2,undefined param_3,long param_4,undefined8 param_5,\n                 undefined4 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  long in_FS_OFFSET;\n  undefined local_32;\n  undefined local_31;\n  undefined8 local_30;\n  \n  local_30 = *(undefined8 *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 4) {\n    if (param_1 < 2) {\n      if (param_1 != 1) {\n        FUN_00103f32();\n        return;\n      }\n      pcVar2 = \"%s%s argument \\'%s\\' too large\";\n    }\n    else {\n      pcVar2 = \"invalid suffix in %s%s argument \\'%s\\'\";\n    }\n  }\n  else {\n    if (param_1 != 4) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    pcVar2 = \"invalid %s%s argument \\'%s\\'\";\n  }\n  if (param_2 < 0) {\n    puVar4 = &local_32;\n    local_31 = 0;\n    puVar3 = &DAT_00118ed5 + -(long)param_2;\n    local_32 = param_3;\n  }\n  else {\n    puVar3 = &DAT_00118ed5;\n    puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n  }\n  uVar1 = dcgettext(0,pcVar2,5);\n                    /* WARNING: Subroutine does not return */\n  error(param_6,0,uVar1,puVar3,puVar4,param_5);\n}\n\n", 
    "00107c00": "\nlong FUN_00107c00(FILE **param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  FILE *pFVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  long in_FS_OFFSET;\n  bool bVar6;\n  int iStack_2c;\n  int iStack_28;\n  int iStack_24;\n  long lStack_20;\n  \n  lStack_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = FUN_00107930(&iStack_2c,0);\n  if (lVar2 != 0) {\n    bVar6 = DAT_00120388 != (char *)0x0;\n    *(undefined *)(lVar2 + 0xc) = 0;\n    if (bVar6) {\n      iVar1 = FUN_00107430(&iStack_28,4);\n      *(int *)(lVar2 + 8) = iVar1;\n      if (iVar1 < 1) {\n        if (iVar1 == 0) {\n          close(iStack_24);\n          FUN_00107070(iStack_2c,1);\n          FUN_00107070(iStack_28,0);\n          execlp(DAT_00120388,DAT_00120388,0);\n          piVar5 = __errno_location();\n          FUN_001075c0(*piVar5,\"couldn\\'t execute compress program\");\n          goto LAB_00107bec;\n        }\n      }\n      else {\n        close(iStack_2c);\n        close(iStack_28);\n        iStack_2c = iStack_24;\n        FUN_00107690(lVar2);\n      }\n    }\n    pFVar3 = fdopen(iStack_2c,\"w\");\n    *param_1 = pFVar3;\n    if (pFVar3 == (FILE *)0x0) {\n      uVar4 = dcgettext(0,\"couldn\\'t create temporary file\",5);\n                    /* WARNING: Subroutine does not return */\n      FUN_001062b0(uVar4,lVar2 + 0xd);\n    }\n  }\n  if (lStack_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar2;\n  }\nLAB_00107bec:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107f60": "\nvoid FUN_00107f60(undefined8 *param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = FUN_0010e980(FUN_001057c0);\n  *param_1 = uVar1;\n  pthread_mutex_init((pthread_mutex_t *)(param_1 + 1),(pthread_mutexattr_t *)0x0);\n  pthread_cond_init((pthread_cond_t *)(param_1 + 6),(pthread_condattr_t *)0x0);\n  return;\n}\n\n", 
    "00105d80": "\nundefined8 FUN_00105d80(undefined8 param_1,undefined8 *param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  long in_FS_OFFSET;\n  undefined8 local_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = FUN_00113d00(param_1,&local_30,10,&local_28,\"\");\n  switch(uVar1) {\n  case 0:\n  case 2:\n    *param_2 = local_28;\n    break;\n  case 1:\n  case 3:\n    *param_2 = 0xffffffffffffffff;\n    break;\n  case 4:\n    if (param_3 != 0) {\n      uVar2 = FUN_00111830(param_1);\n      uVar3 = dcgettext(0,param_3,5);\n      uVar4 = dcgettext(0,\"%s: invalid count at start of %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(2,0,uVar4,uVar3,uVar2);\n    }\n    local_30 = 0;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_30;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00115070": "\nvoid FUN_00115070(void)\n\n{\n  return;\n}\n\n", 
    "00103a80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0011fd78)();\n  return iVar1;\n}\n\n", 
    "00103ea0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_init(pthread_mutex_t *__mutex,pthread_mutexattr_t *__mutexattr)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_mutex_init_0011ff88)();\n  return iVar1;\n}\n\n", 
    "001133e0": "\nvoid FUN_001133e0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_001133a0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00113560();\n}\n\n", 
    "001145f0": "\nvoid _obstack_begin(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                   undefined8 param_5)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) & 0xfe;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  FUN_00114510();\n  return;\n}\n\n", 
    "00107430": "\n__pid_t FUN_00107430(int *param_1,long param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  __pid_t _Var3;\n  int *piVar4;\n  long in_FS_OFFSET;\n  double local_d8;\n  undefined local_c8 [136];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = FUN_0010f2d0(param_1,0x80000);\n  if (iVar2 < 0) {\n    _Var3 = -1;\n  }\n  else {\n    if (DAT_00120024 + 1U < DAT_001202dc) {\n      FUN_001073e0();\n    }\n    piVar4 = __errno_location();\n    param_2 = param_2 + -1;\n    local_d8 = DAT_00117f40;\n    do {\n      FUN_00105ab0(local_c8);\n      uVar1 = DAT_001202e8;\n      DAT_001202e8 = 0;\n      _Var3 = fork();\n      iVar2 = *piVar4;\n      if (_Var3 == 0) {\n        FUN_00105ad0();\n        *piVar4 = iVar2;\n        close(0);\n        close(1);\n        goto LAB_001074ef;\n      }\n      DAT_001202e8 = uVar1;\n      FUN_00105ad0(local_c8);\n      *piVar4 = iVar2;\n      if (-1 < _Var3) {\n        DAT_001202dc = DAT_001202dc + 1;\n        goto LAB_001074ef;\n      }\n      if (iVar2 != 0xb) goto LAB_00107571;\n      param_2 = param_2 + -1;\n      FUN_00113730(local_d8);\n      local_d8 = local_d8 + local_d8;\n      FUN_001073a0();\n    } while (param_2 != -1);\n    iVar2 = *piVar4;\nLAB_00107571:\n    close(*param_1);\n    close(param_1[1]);\n    *piVar4 = iVar2;\n  }\nLAB_001074ef:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return _Var3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001144d0": "\nvoid FUN_001144d0(long param_1,undefined8 param_2)\n\n{\n  if ((*(byte *)(param_1 + 0x50) & 1) != 0) {\n                    /* WARNING: Could not recover jumptable at 0x001144de. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n    (**(code **)(param_1 + 0x38))(*(undefined8 *)(param_1 + 0x48));\n    return;\n  }\n                    /* WARNING: Could not recover jumptable at 0x001144e3. Too many branches */\n                    /* WARNING: Treating indirect jump as call */\n  (**(code **)(param_1 + 0x38))(param_2);\n  return;\n}\n\n", 
    "0010de10": "\nlong FUN_0010de10(long **param_1,code *param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  long lVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (param_1[1] < plVar5 || param_1[1] == plVar5) {\n    lVar4 = 0;\n  }\n  else {\n    lVar4 = 0;\n    do {\n      lVar3 = *plVar5;\n      plVar2 = plVar5;\n      if (lVar3 != 0) {\n        while( true ) {\n          cVar1 = (*param_2)(lVar3,param_3);\n          if (cVar1 == '\\0') {\n            return lVar4;\n          }\n          plVar2 = (long *)plVar2[1];\n          lVar4 = lVar4 + 1;\n          if (plVar2 == (long *)0x0) break;\n          lVar3 = *plVar2;\n        }\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\n  return lVar4;\n}\n\n", 
    "00111830": "\nvoid FUN_00111830(undefined8 param_1)\n\n{\n  FUN_00111820(0,param_1);\n  return;\n}\n\n", 
    "00111710": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00111710(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00120920;\n  uStack_60 = uRam0000000000120928;\n  local_38 = DAT_00120950;\n  local_58 = _DAT_00120930;\n  uStack_50 = uRam0000000000120938;\n  local_48 = _DAT_00120940;\n  uStack_40 = uRam0000000000120948;\n  FUN_001111f0(&local_68);\n  FUN_00110f70(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001037f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0011fc30)();\n  return;\n}\n\n", 
    "00113cd0": "\nuint FUN_00113cd0(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = FUN_00113ca0(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "00114ee0": "\nundefined8 FUN_00114ee0(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_2 == param_4) {\n    iVar1 = memcmp(param_1,param_3,param_2);\n    if (iVar1 == 0) {\n      piVar2 = __errno_location();\n      *piVar2 = 0;\n      return 0;\n    }\n  }\n  uVar3 = FUN_00114d70(param_1,param_2,param_3,param_4);\n  return uVar3;\n}\n\n", 
    "00103a70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fgetc_0011fd70)();\n  return iVar1;\n}\n\n", 
    "00103b90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_0011fe00)();\n  return iVar1;\n}\n\n", 
    "0010e610": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nlong FUN_0010e610(long param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  char cVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  float *pfVar6;\n  long in_FS_OFFSET;\n  float fVar7;\n  float fVar8;\n  long *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar3 = FUN_0010d820(param_1,param_2,&local_28,1);\n  if ((lVar3 == 0) || (*(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + -1, *local_28 != 0))\n  goto LAB_0010e653;\n  uVar4 = *(long *)(param_1 + 0x18) - 1;\n  *(ulong *)(param_1 + 0x18) = uVar4;\n  if ((long)uVar4 < 0) {\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = fVar7 + fVar7;\n    if ((long)uVar5 < 0) goto LAB_0010e78a;\nLAB_0010e6a4:\n    fVar8 = (float)uVar5;\n  }\n  else {\n    pfVar6 = *(float **)(param_1 + 0x28);\n    fVar7 = (float)uVar4;\n    uVar5 = *(ulong *)(param_1 + 0x10);\n    if (-1 < (long)uVar5) goto LAB_0010e6a4;\nLAB_0010e78a:\n    fVar8 = (float)(uVar5 >> 1 | (ulong)((uint)uVar5 & 1));\n    fVar8 = fVar8 + fVar8;\n  }\n  if (fVar7 < fVar8 * *pfVar6) {\n    FUN_0010d6f0(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    pfVar6 = *(float **)(param_1 + 0x28);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar8 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar8 = fVar8 + fVar8;\n    }\n    else {\n      fVar8 = (float)uVar4;\n    }\n    if (fVar8 < *pfVar6 * fVar7) {\n      fVar7 = fVar7 * pfVar6[1];\n      if (*(char *)(pfVar6 + 4) == '\\0') {\n        fVar7 = fVar7 * pfVar6[2];\n      }\n      if (_DAT_001180cc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_001180cc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar2 = FUN_0010e1b0(param_1,uVar4);\n      if (cVar2 == '\\0') {\n        __ptr = *(void **)(param_1 + 0x48);\n        while (__ptr != (void *)0x0) {\n          pvVar1 = *(void **)((long)__ptr + 8);\n          free(__ptr);\n          __ptr = pvVar1;\n        }\n        *(undefined8 *)(param_1 + 0x48) = 0;\n      }\n    }\n  }\nLAB_0010e653:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00115080": "\nvoid FUN_00115080(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00120008);\n  return;\n}\n\n", 
    "00103db0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoul_0011ff10)();\n  return uVar1;\n}\n\n", 
    "00103ed0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_feof_unlocked_0011ffa0)();\n  return iVar1;\n}\n\n", 
    "0010e820": "\nvoid FUN_0010e820(long param_1,ulong param_2,code *param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  int iVar3;\n  undefined8 *puVar4;\n  ulong uVar5;\n  \n  uVar2 = *(undefined8 *)(param_1 + param_2 * 8);\n  if (param_2 != 1) {\n    do {\n      uVar5 = param_2 >> 1;\n      puVar1 = (undefined8 *)(param_1 + uVar5 * 8);\n      iVar3 = (*param_3)(*puVar1,uVar2);\n      puVar4 = (undefined8 *)(param_1 + param_2 * 8);\n      if (0 < iVar3) goto LAB_0010e875;\n      *puVar4 = *puVar1;\n      param_2 = uVar5;\n    } while (uVar5 != 1);\n  }\n  puVar4 = (undefined8 *)(param_1 + 8);\nLAB_0010e875:\n  *puVar4 = uVar2;\n  return;\n}\n\n", 
    "001111d0": "\nundefined4 FUN_001111d0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00120920;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001134d0": "\nvoid FUN_001134d0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00113560();\n}\n\n", 
    "001210f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010be40": "\nlong FUN_0010be40(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "00111800": "\nvoid FUN_00111800(void)\n\n{\n  FUN_00110f70();\n  return;\n}\n\n", 
    "001057c0": "\nbool FUN_001057c0(long param_1,long param_2)\n\n{\n  if (*(uint *)(param_1 + 0x50) != *(uint *)(param_2 + 0x50)) {\n    return *(uint *)(param_1 + 0x50) < *(uint *)(param_2 + 0x50);\n  }\n  return (ulong)(*(long *)(param_1 + 0x30) + *(long *)(param_1 + 0x28)) <\n         (ulong)(*(long *)(param_2 + 0x30) + *(long *)(param_2 + 0x28));\n}\n\n", 
    "001056a0": "\nundefined8 FUN_001056a0(long param_1)\n\n{\n  return CONCAT71(0xffff00ff00,(*(ulong *)(param_1 + 0x30) & 0xffff00ff0000) != 0);\n}\n\n", 
    "001210f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113ca0": "\nbool FUN_00113ca0(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "00103ec0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_fork_0011ff98)();\n  return _Var1;\n}\n\n", 
    "00103da0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint euidaccess(char *__name,int __type)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_euidaccess_0011ff08)();\n  return iVar1;\n}\n\n", 
    "00107690": "\nvoid FUN_00107690(long param_1)\n\n{\n  long lVar1;\n  \n  if (DAT_001202e0 == 0) {\n    DAT_001202e0 = FUN_0010df00(0x2f,0,FUN_001053d0,FUN_001053f0,0);\n    if (DAT_001202e0 == 0) goto LAB_001076e4;\n  }\n  lVar1 = DAT_001202e0;\n  *(undefined *)(param_1 + 0xc) = 1;\n  lVar1 = FUN_0010e5b0(lVar1,param_1);\n  if (lVar1 != 0) {\n    return;\n  }\nLAB_001076e4:\n                    /* WARNING: Subroutine does not return */\n  FUN_00113560();\n}\n\n", 
    "00111810": "\nvoid FUN_00111810(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00111800(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010cf40": "\nundefined8 FUN_0010cf40(FILE *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  void *__ptr;\n  size_t sVar3;\n  long lVar4;\n  long in_FS_OFFSET;\n  undefined auStack_e8 [168];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = FUN_0010c2a0();\n  if ((int)uVar2 != -5) {\n    if ((int)uVar2 == 0) goto LAB_0010cfff;\n    __ptr = malloc(0x8048);\n    if (__ptr != (void *)0x0) {\n      FUN_0010c2b0(auStack_e8);\n      do {\n        lVar4 = 0;\nLAB_0010cfd9:\n        iVar1 = feof_unlocked(param_1);\n        if (iVar1 != 0) goto LAB_0010cfe5;\n        sVar3 = fread_unlocked((void *)((long)__ptr + lVar4),1,0x8000 - lVar4,param_1);\n        lVar4 = lVar4 + sVar3;\n        if (lVar4 != 0x8000) goto code_r0x0010cfd4;\n        FUN_0010c320(__ptr,0x8000,auStack_e8);\n      } while( true );\n    }\n  }\n  uVar2 = 1;\nLAB_0010cfff:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\ncode_r0x0010cfd4:\n  if (sVar3 == 0) {\n    iVar1 = ferror_unlocked(param_1);\n    if (iVar1 == 0) {\nLAB_0010cfe5:\n      if (lVar4 != 0) {\n        FUN_0010cbc0(__ptr,lVar4,auStack_e8);\n      }\n      FUN_0010caa0(auStack_e8,param_2);\n      free(__ptr);\n      uVar2 = 0;\n    }\n    else {\n      free(__ptr);\n      uVar2 = 1;\n    }\n    goto LAB_0010cfff;\n  }\n  goto LAB_0010cfd9;\n}\n\n", 
    "00114fe0": "\nvoid FUN_00114fe0(undefined8 param_1)\n\n{\n  FUN_00114120(param_1,0,3);\n  return;\n}\n\n", 
    "0010fbd0": "\nundefined8\nFUN_0010fbd0(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_0010fae0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00107c10": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nulong FUN_00107c10(void)\n\n{\n  int iVar1;\n  ulong uVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  double dVar4;\n  double dVar5;\n  double dVar6;\n  rlimit local_38;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = getrlimit(RLIMIT_DATA,&local_38);\n  uVar3 = 0xffffffffffffffff;\n  if (iVar1 == 0) {\n    uVar3 = local_38.rlim_cur;\n  }\n  iVar1 = getrlimit(RLIMIT_AS,&local_38);\n  if ((iVar1 == 0) && (local_38.rlim_cur < uVar3)) {\n    uVar3 = local_38.rlim_cur;\n  }\n  uVar3 = uVar3 >> 1;\n  iVar1 = getrlimit(__RLIMIT_RSS,&local_38);\n  if ((iVar1 == 0) &&\n     (uVar2 = (local_38.rlim_cur & 0xfffffffffffffff0) - (local_38.rlim_cur >> 4), uVar2 < uVar3)) {\n    uVar3 = uVar2;\n  }\n  dVar4 = (double)FUN_0010f1a0();\n  dVar5 = (double)FUN_0010f0c0();\n  dVar6 = dVar5 * _DAT_00117f50;\n  if (dVar4 <= DAT_00117f48 * dVar5) {\n    dVar4 = DAT_00117f48 * dVar5;\n  }\n  if (dVar6 < (double)uVar3) {\n    if (dVar6 < DAT_00117f38) {\n      uVar3 = (ulong)dVar6;\n    }\n    else {\n      uVar3 = (long)(dVar6 - DAT_00117f38) ^ 0x8000000000000000;\n    }\n  }\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if (dVar4 < dVar5) {\n    if (dVar4 < DAT_00117f38) {\n      uVar3 = (ulong)dVar4;\n    }\n    else {\n      uVar3 = (long)(dVar4 - DAT_00117f38) ^ 0x8000000000000000;\n    }\n  }\n  uVar2 = (ulong)DAT_00120024 * 0x22;\n  if ((ulong)DAT_00120024 * 0x22 < uVar3) {\n    uVar2 = uVar3;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010df00": "\nvoid ** FUN_0010df00(undefined8 param_1,undefined *param_2,code *param_3,code *param_4,void *param_5\n                    )\n\n{\n  char cVar1;\n  void **__ptr;\n  void *__nmemb;\n  void *pvVar2;\n  void **ppvVar3;\n  \n  if (param_3 == (code *)0x0) {\n    param_3 = FUN_0010d690;\n  }\n  if (param_4 == (code *)0x0) {\n    param_4 = FUN_0010d6b0;\n  }\n  __ptr = (void **)malloc(0x50);\n  ppvVar3 = __ptr;\n  if (__ptr != (void **)0x0) {\n    if (param_2 == (undefined *)0x0) {\n      param_2 = &DAT_001180a0;\n    }\n    __ptr[5] = param_2;\n    cVar1 = FUN_0010d6f0(__ptr + 5);\n    if (cVar1 != '\\0') {\n      __nmemb = (void *)FUN_0010d770(*(undefined4 *)(param_2 + 8),param_1,param_2[0x10]);\n      __ptr[2] = __nmemb;\n      if (__nmemb != (void *)0x0) {\n        pvVar2 = calloc((size_t)__nmemb,0x10);\n        *__ptr = pvVar2;\n        if (pvVar2 != (void *)0x0) {\n          __ptr[6] = param_3;\n          __ptr[7] = param_4;\n          __ptr[1] = (void *)((long)__nmemb * 0x10 + (long)pvVar2);\n          __ptr[3] = (void *)0x0;\n          __ptr[4] = (void *)0x0;\n          __ptr[8] = param_5;\n          __ptr[9] = (void *)0x0;\n          return __ptr;\n        }\n      }\n    }\n    ppvVar3 = (void **)0x0;\n    free(__ptr);\n  }\n  return ppvVar3;\n}\n\n", 
    "00114090": "\nint FUN_00114090(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_001140ff;\n    }\n    iVar1 = FUN_001142b0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_001140ff:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00103a90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pipe(int *__pipedes)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pipe_0011fd80)();\n  return iVar1;\n}\n\n", 
    "00107400": "\nvoid FUN_00107400(void)\n\n{\n  if (DAT_001202dc < 1) {\n    return;\n  }\n  do {\n    FUN_00107140(0xffffffff);\n  } while (0 < DAT_001202dc);\n  return;\n}\n\n", 
    "001134b0": "\nvoid FUN_001134b0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00113340();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00106310": "\nFILE * FUN_00106310(char *param_1,char *param_2)\n\n{\n  int iVar1;\n  FILE *pFVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  \n  if (*param_2 == 'r') {\n    if ((*param_1 == '-') && (param_1[1] == '\\0')) {\n      DAT_00120398 = 1;\n      pFVar2 = stdin;\n    }\n    else {\n      pFVar2 = (FILE *)0x0;\n      iVar1 = open(param_1,0x80000);\n      if (-1 < iVar1) {\n        pFVar2 = fdopen(iVar1,param_2);\n      }\n    }\n    FUN_0010d090(pFVar2,2);\n    return pFVar2;\n  }\n  if (*param_2 == 'w') {\n    if (param_1 != (char *)0x0) {\n      iVar1 = ftruncate(1,0);\n      if (iVar1 != 0) {\n        uVar3 = FUN_00111670(0,3,param_1);\n        uVar4 = dcgettext(0,\"%s: error truncating\",5);\n        piVar5 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n        error(2,*piVar5,uVar4,uVar3);\n      }\n    }\n    return stdout;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"!\\\"unexpected mode passed to stream_open\\\"\",\"src/sort.c\",0x3cc,\"stream_open\");\n}\n\n", 
    "00105460": "\nuint FUN_00105460(byte **param_1)\n\n{\n  byte *pbVar1;\n  byte bVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  uint uVar5;\n  \n  pbVar3 = *param_1;\n  bVar2 = *pbVar3;\n  pbVar4 = pbVar3 + 1;\n  if (bVar2 - 0x30 < 10) {\n    uVar5 = 0;\n    do {\n      if ((byte)uVar5 < bVar2) {\n        uVar5 = (uint)bVar2;\n      }\n      pbVar1 = pbVar3 + 1;\n      pbVar3 = pbVar3 + 2;\n      if ((char)*pbVar1 != DAT_001207e4) {\n        pbVar3 = pbVar4;\n      }\n      bVar2 = *pbVar3;\n      pbVar4 = pbVar3 + 1;\n    } while (bVar2 - 0x30 < 10);\n    if ((char)*pbVar1 == DAT_001207e4) {\n      *param_1 = pbVar3 + -1;\n      return uVar5;\n    }\n  }\n  else {\n    uVar5 = 0;\n  }\n  if (bVar2 == DAT_001207e8) {\n    bVar2 = *pbVar4;\n    while (bVar2 - 0x30 < 10) {\n      pbVar4 = pbVar4 + 1;\n      if ((byte)uVar5 < bVar2) {\n        uVar5 = (uint)bVar2;\n      }\n      bVar2 = *pbVar4;\n    }\n  }\n  else {\n    pbVar4 = pbVar4 + -1;\n  }\n  *param_1 = pbVar4;\n  return uVar5;\n}\n\n", 
    "00112ca0": "\nuint FUN_00112ca0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00114fe0();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "001211f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001210d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_raise_0011fc18)();\n  return iVar1;\n}\n\n", 
    "0010f1a0": "\ndouble FUN_0010f1a0(void)\n\n{\n  int iVar1;\n  long lVar2;\n  long in_FS_OFFSET;\n  double dVar3;\n  double dVar4;\n  sysinfo local_88;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = sysconf(0x56);\n  dVar3 = (double)lVar2;\n  lVar2 = sysconf(0x1e);\n  if ((dVar3 < 0.0) || (dVar4 = (double)lVar2, dVar4 < 0.0)) {\n    iVar1 = sysinfo(&local_88);\n    if (iVar1 != 0) {\n      dVar3 = (double)FUN_0010f0c0();\n      dVar3 = dVar3 * DAT_00117f40;\n      goto LAB_0010f249;\n    }\n    if ((long)local_88.freeram < 0) {\n      dVar3 = (double)(local_88.freeram >> 1 | (ulong)((uint)local_88.freeram & 1));\n      dVar3 = dVar3 + dVar3;\n      if ((long)local_88.bufferram < 0) goto LAB_0010f2a3;\nLAB_0010f22b:\n      dVar4 = (double)local_88.bufferram;\n    }\n    else {\n      dVar3 = (double)local_88.freeram;\n      if (-1 < (long)local_88.bufferram) goto LAB_0010f22b;\nLAB_0010f2a3:\n      dVar4 = (double)(local_88.bufferram >> 1 | (ulong)((uint)local_88.bufferram & 1));\n      dVar4 = dVar4 + dVar4;\n    }\n    dVar3 = dVar3 + dVar4;\n    dVar4 = (double)(ulong)local_88.mem_unit;\n  }\n  dVar3 = dVar3 * dVar4;\nLAB_0010f249:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return dVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_write_0011fca8)();\n  return sVar1;\n}\n\n", 
    "001211f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001210d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __sched_cpucount(size_t __setsize,cpu_set_t *__setp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigemptyset_0011fde8)();\n  return iVar1;\n}\n\n", 
    "00103a40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_gettimeofday_0011fd58)();\n  return iVar1;\n}\n\n", 
    "00103c80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_0011fe78)();\n  return sVar1;\n}\n\n", 
    "001145a0": "\nvoid FUN_001145a0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  exit(DAT_00120130);\n}\n\n", 
    "001080f0": "\nlong FUN_001080f0(long param_1,long param_2)\n\n{\n  return param_1 + param_2;\n}\n\n", 
    "0010a560": "\nvoid FUN_0010a560(long param_1,ulong param_2,ulong param_3,undefined8 param_4,undefined8 param_5,\n                 void *param_6)\n\n{\n  undefined4 *puVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  undefined4 uVar17;\n  undefined4 uVar18;\n  undefined4 uVar19;\n  long lVar20;\n  char cVar21;\n  int iVar22;\n  void *__ptr;\n  long lVar23;\n  void *__ptr_00;\n  ulong *__ptr_01;\n  long lVar24;\n  long lVar25;\n  ulong *puVar26;\n  ulong *puVar27;\n  ulong uVar28;\n  undefined4 *puVar29;\n  undefined8 *puVar30;\n  void **ppvVar31;\n  undefined8 *puVar32;\n  ulong uVar33;\n  void *__n;\n  void *pvVar34;\n  ulong uVar35;\n  ulong uVar36;\n  long in_FS_OFFSET;\n  ulong local_d0;\n  ulong local_c8;\n  void **local_a8;\n  ulong local_88;\n  void *local_80;\n  void *local_68;\n  void *local_60;\n  long local_58;\n  long local_50;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (void *)FUN_00113360(param_3,0x38);\n  lVar23 = FUN_00113360(param_3,8);\n  __ptr_00 = (void *)FUN_00113360(param_3,8);\n  __ptr_01 = (ulong *)FUN_00113360(param_3,8);\n  lVar20 = DAT_00120390;\n  local_68 = (void *)0x0;\n  if (param_3 != 0) {\n    uVar36 = 0;\n    local_c8 = param_3;\n    local_88 = param_2;\n    do {\n      while( true ) {\n        lVar24 = uVar36 * 8;\n        ppvVar31 = (void **)((long)__ptr + uVar36 * 0x38);\n        uVar28 = DAT_00120030;\n        if (DAT_00120030 <= DAT_001203b8 / local_c8) {\n          uVar28 = DAT_001203b8 / local_c8;\n        }\n        FUN_001065e0(ppvVar31,0x20,uVar28);\n        puVar30 = (undefined8 *)(uVar36 * 0x10 + param_1);\n        cVar21 = FUN_00108e40(ppvVar31,*(undefined8 *)((long)param_6 + lVar24),*puVar30);\n        if (cVar21 != '\\0') break;\n        FUN_00106440(*(undefined8 *)((long)param_6 + lVar24),*puVar30);\n        if (uVar36 < local_88) {\n          local_88 = local_88 - 1;\n          FUN_00107270(*puVar30);\n        }\n        free(*ppvVar31);\n        uVar28 = local_c8 - 1;\n        if (uVar28 <= uVar36) goto LAB_0010a6d8;\n        lVar25 = local_c8 * 8;\n        do {\n          puVar29 = (undefined4 *)(param_1 + 0x10 + lVar24 * 2);\n          uVar4 = puVar29[1];\n          uVar5 = puVar29[2];\n          uVar6 = puVar29[3];\n          uVar3 = *(undefined8 *)((long)param_6 + lVar24 + 8);\n          puVar1 = (undefined4 *)(param_1 + lVar24 * 2);\n          *puVar1 = *puVar29;\n          puVar1[1] = uVar4;\n          puVar1[2] = uVar5;\n          puVar1[3] = uVar6;\n          *(undefined8 *)((long)param_6 + lVar24) = uVar3;\n          lVar24 = lVar24 + 8;\n          local_c8 = uVar28;\n        } while (lVar25 + -8 != lVar24);\n      }\n      lVar24 = FUN_001080f0(*ppvVar31,ppvVar31[3]);\n      *(long *)(lVar23 + uVar36 * 8) = lVar24 + -0x20;\n      *(long *)((long)__ptr_00 + uVar36 * 8) = lVar24 + (long)ppvVar31[2] * -0x20;\n      uVar36 = uVar36 + 1;\n      uVar28 = local_c8;\n    } while (uVar36 < local_c8);\nLAB_0010a6d8:\n    local_c8 = uVar28;\n    if (local_c8 != 0) {\n      uVar36 = 0;\n      do {\n        __ptr_01[uVar36] = uVar36;\n        uVar36 = uVar36 + 1;\n      } while (uVar36 != local_c8);\n      if (local_c8 != 1) {\n        uVar36 = 1;\n        do {\n          while( true ) {\n            puVar27 = __ptr_01 + uVar36;\n            uVar28 = *puVar27;\n            uVar2 = __ptr_01[uVar36 - 1];\n            iVar22 = FUN_00108b00(*(undefined8 *)(lVar23 + uVar2 * 8),\n                                  *(undefined8 *)(lVar23 + uVar28 * 8));\n            if (iVar22 < 1) break;\n            __ptr_01[uVar36 - 1] = uVar28;\n            uVar36 = 1;\n            *puVar27 = uVar2;\n          }\n          uVar36 = uVar36 + 1;\n        } while (uVar36 < local_c8);\n      }\n      local_80 = (void *)0x0;\n      local_a8 = (void **)0x0;\nLAB_0010a780:\n      local_d0 = *__ptr_01;\n      lVar24 = local_d0 * 8;\n      puVar27 = (ulong *)(lVar23 + lVar24);\n      ppvVar31 = (void **)*puVar27;\n      if (DAT_00120399 == '\\0') {\n        FUN_001099c0(ppvVar31,param_4,param_5);\n      }\n      else {\n        if (local_a8 != (void **)0x0) {\n          iVar22 = FUN_00108b00(local_a8,ppvVar31);\n          if (iVar22 == 0) goto LAB_0010a7c6;\n          FUN_001099c0(&local_68,param_4,param_5);\n        }\n        __n = ppvVar31[1];\n        if (local_80 < __n) {\n          do {\n            pvVar34 = __n;\n            if (local_80 == (void *)0x0) break;\n            local_80 = (void *)((long)local_80 * 2);\n            pvVar34 = local_80;\n          } while (local_80 < __n);\n          free(local_68);\n          local_68 = (void *)FUN_00113340(pvVar34);\n          __n = ppvVar31[1];\n          local_80 = pvVar34;\n        }\n        local_60 = __n;\n        memcpy(local_68,*ppvVar31,(size_t)__n);\n        local_a8 = &local_68;\n        if (lVar20 != 0) {\n          local_58 = ((long)ppvVar31[2] + (long)local_68) - (long)*ppvVar31;\n          local_50 = ((long)local_68 + (long)ppvVar31[3]) - (long)*ppvVar31;\n        }\n      }\nLAB_0010a7c6:\n      if (*(void ***)(ulong *)((long)__ptr_00 + lVar24) < ppvVar31) {\n        *puVar27 = (ulong)(ppvVar31 + -4);\n        if (local_c8 == 1) goto LAB_0010a923;\nLAB_0010a853:\n        uVar28 = *puVar27;\n        uVar36 = 1;\n        uVar2 = 1;\n        uVar35 = local_c8;\n        do {\n          while( true ) {\n            uVar33 = uVar2;\n            uVar2 = __ptr_01[uVar33];\n            iVar22 = FUN_00108b00(uVar28,*(undefined8 *)(lVar23 + uVar2 * 8));\n            if ((-1 < iVar22) && ((uVar2 <= local_d0 || (iVar22 != 0)))) break;\n            uVar2 = uVar36 + uVar33 >> 1;\n            uVar35 = uVar33;\n            if (uVar33 <= uVar36) goto LAB_0010a8c4;\n          }\n          uVar36 = uVar33 + 1;\n          uVar2 = uVar36 + uVar35 >> 1;\n        } while (uVar36 < uVar35);\nLAB_0010a8c4:\n        if (uVar36 - 1 != 0) {\n          puVar27 = __ptr_01;\n          do {\n            puVar26 = puVar27 + 1;\n            *puVar27 = puVar27[1];\n            puVar27 = puVar26;\n          } while (puVar26 != __ptr_01 + (uVar36 - 1));\n        }\n        __ptr_01[uVar36 - 1] = local_d0;\n        goto LAB_0010a780;\n      }\n      puVar30 = (undefined8 *)((long)param_6 + lVar24);\n      puVar32 = (undefined8 *)(local_d0 * 0x10 + param_1);\n      ppvVar31 = (void **)((long)__ptr + local_d0 * 0x38);\n      cVar21 = FUN_00108e40(ppvVar31,*puVar30,*puVar32);\n      if (cVar21 != '\\0') {\n        lVar25 = FUN_001080f0(*ppvVar31,ppvVar31[3]);\n        *puVar27 = lVar25 - 0x20;\n        *(ulong *)((long)__ptr_00 + lVar24) = lVar25 + (long)ppvVar31[2] * -0x20;\n        if (local_c8 != 1) goto LAB_0010a853;\nLAB_0010a923:\n        *__ptr_01 = local_d0;\n        goto LAB_0010a780;\n      }\n      puVar27 = __ptr_01 + 1;\n      if (local_c8 != 1) {\n        do {\n          if (local_d0 < *puVar27) {\n            *puVar27 = *puVar27 - 1;\n            local_d0 = *__ptr_01;\n          }\n          puVar27 = puVar27 + 1;\n        } while (__ptr_01 + local_c8 != puVar27);\n        puVar32 = (undefined8 *)(local_d0 * 0x10 + param_1);\n        puVar30 = (undefined8 *)((long)param_6 + local_d0 * 8);\n        ppvVar31 = (void **)((long)__ptr + local_d0 * 0x38);\n      }\n      uVar36 = local_c8 - 1;\n      FUN_00106440(*puVar30,*puVar32);\n      if (local_d0 < local_88) {\n        local_88 = local_88 - 1;\n        FUN_00107270(*puVar32);\n      }\n      free(*ppvVar31);\n      if (local_d0 < uVar36) {\n        lVar24 = local_d0 * 8;\n        puVar29 = (undefined4 *)((long)__ptr + local_d0 * 0x38);\n        do {\n          puVar1 = (undefined4 *)(param_1 + 0x10 + lVar24 * 2);\n          uVar4 = *puVar1;\n          uVar5 = puVar1[1];\n          uVar6 = puVar1[2];\n          uVar7 = puVar1[3];\n          uVar8 = puVar29[0xe];\n          uVar9 = puVar29[0xf];\n          uVar10 = puVar29[0x10];\n          uVar11 = puVar29[0x11];\n          uVar12 = puVar29[0x12];\n          uVar13 = puVar29[0x13];\n          uVar14 = puVar29[0x14];\n          uVar15 = puVar29[0x15];\n          *(undefined8 *)((long)param_6 + lVar24) = *(undefined8 *)((long)param_6 + lVar24 + 8);\n          uVar3 = *(undefined8 *)(puVar29 + 0x1a);\n          uVar16 = puVar29[0x16];\n          uVar17 = puVar29[0x17];\n          uVar18 = puVar29[0x18];\n          uVar19 = puVar29[0x19];\n          puVar1 = (undefined4 *)(param_1 + lVar24 * 2);\n          *puVar1 = uVar4;\n          puVar1[1] = uVar5;\n          puVar1[2] = uVar6;\n          puVar1[3] = uVar7;\n          *(undefined8 *)(puVar29 + 0xc) = uVar3;\n          uVar3 = *(undefined8 *)(lVar23 + 8 + lVar24);\n          *puVar29 = uVar8;\n          puVar29[1] = uVar9;\n          puVar29[2] = uVar10;\n          puVar29[3] = uVar11;\n          *(undefined8 *)(lVar23 + lVar24) = uVar3;\n          uVar3 = *(undefined8 *)((long)__ptr_00 + lVar24 + 8);\n          puVar29[4] = uVar12;\n          puVar29[5] = uVar13;\n          puVar29[6] = uVar14;\n          puVar29[7] = uVar15;\n          *(undefined8 *)((long)__ptr_00 + lVar24) = uVar3;\n          lVar24 = lVar24 + 8;\n          puVar29[8] = uVar16;\n          puVar29[9] = uVar17;\n          puVar29[10] = uVar18;\n          puVar29[0xb] = uVar19;\n          puVar29 = puVar29 + 0xe;\n        } while (local_c8 * 8 + -8 != lVar24);\n      }\n      if (uVar36 != 0) {\n        lVar24 = local_c8 - 1;\n        puVar27 = __ptr_01;\n        do {\n          puVar26 = puVar27 + 1;\n          *puVar27 = puVar27[1];\n          puVar27 = puVar26;\n          local_c8 = uVar36;\n        } while (__ptr_01 + lVar24 != puVar26);\n        goto LAB_0010a780;\n      }\n      if ((local_a8 != (void **)0x0) && (DAT_00120399 != '\\0')) {\n        FUN_001099c0(&local_68,param_4,param_5);\n        free(local_68);\n      }\n    }\n  }\n  FUN_00106440(param_4,param_5);\n  free(param_6);\n  free(__ptr);\n  free(__ptr_01);\n  free(__ptr_00);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  (*(code *)PTR_free_0011ffb8)(lVar23);\n  return;\n}\n\n", 
    "0010e0c0": "\nvoid FUN_0010e0c0(long **param_1)\n\n{\n  void *pvVar1;\n  void *__ptr;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = *param_1;\n  plVar2 = param_1[1];\n  if ((param_1[8] != (long *)0x0) && (param_1[4] != (long *)0x0)) {\n    if (plVar2 <= plVar4) goto LAB_0010e16c;\n    do {\n      while (lVar5 = *plVar4, plVar3 = plVar4, lVar5 == 0) {\n        plVar4 = plVar4 + 2;\n        if (plVar2 <= plVar4) goto LAB_0010e12f;\n      }\n      while( true ) {\n        (*(code *)param_1[8])(lVar5);\n        plVar3 = (long *)plVar3[1];\n        if (plVar3 == (long *)0x0) break;\n        lVar5 = *plVar3;\n      }\n      plVar2 = param_1[1];\n      plVar4 = plVar4 + 2;\n    } while (plVar4 < plVar2);\nLAB_0010e12f:\n    plVar4 = *param_1;\n  }\n  if (plVar4 < plVar2) {\n    do {\n      __ptr = (void *)plVar4[1];\n      while (__ptr != (void *)0x0) {\n        pvVar1 = *(void **)((long)__ptr + 8);\n        free(__ptr);\n        __ptr = pvVar1;\n      }\n      plVar4 = plVar4 + 2;\n    } while (plVar4 <= param_1[1] && param_1[1] != plVar4);\n  }\nLAB_0010e16c:\n  plVar4 = param_1[9];\n  while (plVar4 != (long *)0x0) {\n    plVar2 = (long *)plVar4[1];\n    free(plVar4);\n    plVar4 = plVar2;\n  }\n  free(*param_1);\n  (*(code *)PTR_free_0011ffb8)(param_1);\n  return;\n}\n\n", 
    "0010f2d0": "\nint FUN_0010f2d0(undefined8 *param_1,uint param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  uint uVar3;\n  int *piVar4;\n  \n  uVar1 = *param_1;\n  if (-1 < DAT_00120800) {\n    iVar2 = pipe2((int *)param_1,param_2);\n    if ((-1 < iVar2) || (piVar4 = __errno_location(), *piVar4 != 0x26)) {\n      DAT_00120800 = 1;\n      return iVar2;\n    }\n    DAT_00120800 = -1;\n  }\n  if ((param_2 & 0xfff7f7ff) == 0) {\n    iVar2 = pipe((int *)param_1);\n    if (-1 < iVar2) {\n      if (((param_2 & 0x800) == 0) ||\n         ((((uVar3 = FUN_00114120(*(undefined4 *)((long)param_1 + 4),3,0), -1 < (int)uVar3 &&\n            (iVar2 = FUN_00114120(*(undefined4 *)((long)param_1 + 4),4,uVar3 | 0x800), iVar2 != -1))\n           && (uVar3 = FUN_00114120(*(undefined4 *)param_1,3,0), -1 < (int)uVar3)) &&\n          (iVar2 = FUN_00114120(*(undefined4 *)param_1,4,uVar3 | 0x800), iVar2 != -1)))) {\n        if ((param_2 & 0x80000) == 0) {\n          return 0;\n        }\n        uVar3 = FUN_00114120(*(undefined4 *)((long)param_1 + 4),1,0);\n        if (((-1 < (int)uVar3) &&\n            (iVar2 = FUN_00114120(*(undefined4 *)((long)param_1 + 4),2,uVar3 | 1), iVar2 != -1)) &&\n           ((uVar3 = FUN_00114120(*(undefined4 *)param_1,1,0), -1 < (int)uVar3 &&\n            (iVar2 = FUN_00114120(*(undefined4 *)param_1,2,uVar3 | 1), iVar2 != -1)))) {\n          return 0;\n        }\n      }\n      piVar4 = __errno_location();\n      iVar2 = *piVar4;\n      close(*(int *)param_1);\n      close(*(int *)((long)param_1 + 4));\n      *param_1 = uVar1;\n      *piVar4 = iVar2;\n    }\n  }\n  else {\n    piVar4 = __errno_location();\n    *piVar4 = 0x16;\n  }\n  return -1;\n}\n\n", 
    "001133a0": "\nvoid * FUN_001133a0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00113560();\n  }\n  return pvVar1;\n}\n\n", 
    "0010e810": "\nundefined8 FUN_0010e810(void)\n\n{\n  return 0;\n}\n\n", 
    "00106780": "\n/* WARNING: Removing unreachable block (ram,0x00106828) */\n/* WARNING: Removing unreachable block (ram,0x0010682c) */\n/* WARNING: Removing unreachable block (ram,0x0010681b) */\n/* WARNING: Removing unreachable block (ram,0x0010682e) */\n\nint FUN_00106780(char *param_1,char *param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  float10 in_ST0;\n  float10 in_ST1;\n  char *local_30;\n  char *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  strtold(param_1,&local_30);\n  strtold(param_2,&local_28);\n  if (local_30 == param_1) {\n    iVar1 = -(uint)(local_28 != param_2);\n  }\n  else if (local_28 == param_2) {\n    iVar1 = 1;\n  }\n  else {\n    if (in_ST1 <= in_ST0) {\n      iVar1 = 1;\n      if (in_ST1 < in_ST0) goto LAB_001067e1;\n      if (in_ST0 == in_ST1) {\n        iVar1 = 0;\n        goto LAB_001067e1;\n      }\n    }\n    iVar1 = -1;\n  }\nLAB_001067e1:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114a70": "\nint FUN_00114a70(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00114a30(*param_1);\n      bVar2 = FUN_00114a30(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "001210e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010be30": "\nvoid FUN_0010be30(void)\n\n{\n  FUN_0010bae0(1);\n  return;\n}\n\n", 
    "001037b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0011fc10)();\n  return pcVar1;\n}\n\n", 
    "00114fb0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble FUN_00114fb0(long param_1,long param_2)\n\n{\n  return (double)param_2 / _DAT_00119088 + (double)param_1;\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n  (*(code *)PTR_clearerr_unlocked_0011fca0)();\n  return;\n}\n\n", 
    "0010bf50": "\nvoid FUN_0010bf50(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00111820(1,param_1);\n  uVar3 = FUN_001114a0(0,8,param_2);\n                    /* WARNING: Subroutine does not return */\n  error(0,0,uVar1,uVar3,uVar2);\n}\n\n", 
    "001039f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint nanosleep(timespec *__requested_time,timespec *__remaining)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_nanosleep_0011fd30)();\n  return iVar1;\n}\n\n", 
    "001210e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0011fd50)();\n  return _Var1;\n}\n\n", 
    "00103c70": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0011fe70)();\n  return;\n}\n\n", 
    "00103b50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_unlocked_0011fde0)();\n  return iVar1;\n}\n\n", 
    "00103d90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_0011ff00)();\n  return uVar1;\n}\n\n", 
    "00109960": "\nundefined8 FUN_00109960(undefined8 *param_1)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  undefined8 uStack_18;\n  \n  lVar2 = DAT_00120390;\n  do {\n    FUN_001097a0(*param_1,param_1[1],lVar2);\n    if (lVar2 == 0) {\n      return uStack_18;\n    }\n    lVar2 = *(long *)(lVar2 + 0x40);\n  } while (lVar2 != 0);\n  if ((DAT_00120399 == '\\0') && (DAT_0012039a == '\\0')) {\n    uVar1 = FUN_001097a0(*param_1,param_1[1],0);\n    return uVar1;\n  }\n  return uStack_18;\n}\n\n", 
    "0010eac0": "\nchar * FUN_0010eac0(uint param_1,long param_2)\n\n{\n  uint uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0xb) = 0;\n  pcVar2 = (char *)(param_2 + 0xb);\n  if ((int)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (int)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      pcVar2 = pcVar3 + -1;\n      param_1 = uVar1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    param_1 = param_1 / 10;\n  } while (param_1 != 0);\n  return pcVar2;\n}\n\n", 
    "001136d0": "\nundefined4 FUN_001136d0(undefined8 param_1,long param_2,undefined8 param_3,long param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00114ee0();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_001135a0(*piVar2,param_1,param_2 + -1,param_3,param_4 + -1);\n  return uVar1;\n}\n\n", 
    "001112b0": "\nundefined8 FUN_001112b0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00120920;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_0010fdb0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00113340(lVar3 + 1);\n  FUN_0010fdb0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00106690": "\nvoid FUN_00106690(long param_1,long param_2)\n\n{\n  undefined8 uVar1;\n  \n  if (param_1 != 0) {\n    param_1 = param_1 + -1;\n    do {\n      param_1 = param_1 + -1;\n      putchar_unlocked(0x20);\n    } while (param_1 != -1);\n  }\n  if (param_2 != 0) {\n    do {\n      putchar_unlocked(0x5f);\n      param_2 = param_2 + -1;\n    } while (param_2 != 0);\n    putchar_unlocked(10);\n    return;\n  }\n  uVar1 = dcgettext(0,\"^ no match for key\\n\",5);\n  __printf_chk(1,uVar1);\n  return;\n}\n\n", 
    "00105360": "\nvoid FUN_00105360(void)\n\n{\n  if (DAT_00120208 == '\\0') {\n    if (PTR___cxa_finalize_0011ffe8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00120008);\n    }\n    FUN_001052f0();\n    DAT_00120208 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "0010d0c0": "\nchar * FUN_0010d0c0(char **param_1)\n\n{\n  byte bVar1;\n  byte bVar2;\n  char *pcVar3;\n  char cVar4;\n  char *pcVar5;\n  \n  pcVar3 = *param_1;\n  cVar4 = *pcVar3;\n  if (cVar4 == '\\0') {\n    return (char *)0x0;\n  }\n  bVar1 = 0;\n  pcVar5 = (char *)0x0;\n  do {\n    while (bVar1 != 0) {\n      bVar1 = FUN_001148d0((int)cVar4);\n      bVar1 = cVar4 != '~' & (bVar1 ^ 1);\n      if (bVar1 != 0) {\n        bVar1 = 0;\n        pcVar5 = (char *)0x0;\n      }\nLAB_0010d109:\n      pcVar3 = pcVar3 + 1;\n      *param_1 = pcVar3;\n      cVar4 = *pcVar3;\n      if (cVar4 == '\\0') {\n        return pcVar5;\n      }\n    }\n    if (cVar4 == '.') {\n      bVar1 = 1;\n      if (pcVar5 == (char *)0x0) {\n        pcVar5 = pcVar3;\n      }\n      goto LAB_0010d109;\n    }\n    bVar2 = FUN_001148a0((int)cVar4);\n    if ((cVar4 != '~' & (bVar2 ^ 1)) != 0) {\n      pcVar5 = (char *)0x0;\n    }\n    pcVar3 = pcVar3 + 1;\n    *param_1 = pcVar3;\n    cVar4 = *pcVar3;\n    if (cVar4 == '\\0') {\n      return pcVar5;\n    }\n  } while( true );\n}\n\n", 
    "001212f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong sysconf(int __name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1b0": "\nundefined4 FUN_0010e1b0(void **param_1,undefined8 param_2)\n\n{\n  void *pvVar1;\n  char cVar2;\n  undefined4 uVar3;\n  void *__nmemb;\n  long in_FS_OFFSET;\n  void *local_88;\n  void *local_80;\n  void *local_78;\n  void *local_70;\n  undefined8 local_68;\n  void *local_60;\n  void *local_58;\n  void *local_50;\n  void *local_48;\n  void *local_40;\n  long local_30;\n  \n  pvVar1 = param_1[5];\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nmemb = (void *)FUN_0010d770(*(undefined4 *)((long)pvVar1 + 8),param_2,\n                                 *(undefined *)((long)pvVar1 + 0x10));\n  if (__nmemb != (void *)0x0) {\n    if (param_1[2] == __nmemb) {\n      uVar3 = 1;\n      goto LAB_0010e2bc;\n    }\n    local_88 = calloc((size_t)__nmemb,0x10);\n    if (local_88 != (void *)0x0) {\n      local_80 = (void *)((long)__nmemb * 0x10 + (long)local_88);\n      local_58 = param_1[6];\n      local_50 = param_1[7];\n      local_48 = param_1[8];\n      local_70 = (void *)0x0;\n      local_40 = param_1[9];\n      local_68 = 0;\n      local_78 = __nmemb;\n      local_60 = pvVar1;\n      uVar3 = FUN_0010d940(&local_88,param_1,0);\n      if ((char)uVar3 == '\\0') {\n        param_1[9] = local_40;\n        cVar2 = FUN_0010d940(param_1,&local_88,1);\n        if (cVar2 != '\\0') {\n          cVar2 = FUN_0010d940(param_1,&local_88,0);\n          if (cVar2 != '\\0') {\n            free(local_88);\n            goto LAB_0010e2bc;\n          }\n        }\n                    /* WARNING: Subroutine does not return */\n        abort();\n      }\n      free(*param_1);\n      *param_1 = local_88;\n      param_1[1] = local_80;\n      param_1[2] = local_78;\n      param_1[3] = local_70;\n      param_1[9] = local_40;\n      goto LAB_0010e2bc;\n    }\n  }\n  uVar3 = 0;\nLAB_0010e2bc:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001211d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__sighandler_t signal(int __sig,__sighandler_t __handler)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001059c0": "\nvoid FUN_001059c0(void)\n\n{\n  long lVar1;\n  undefined *puVar2;\n  long in_FS_OFFSET;\n  undefined auStack_38 [40];\n  long local_10;\n  \n  puVar2 = auStack_38;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar1 = DAT_00120390;\n  if (DAT_00120390 != 0) {\n    do {\n      if (1 < (uint)(byte)(*(byte *)(lVar1 + 0x38) | *(byte *)(lVar1 + 0x33) |\n                          *(long *)(lVar1 + 0x20) != 0) +\n              (uint)*(byte *)(lVar1 + 0x36) +\n              (uint)*(byte *)(lVar1 + 0x32) + (uint)*(byte *)(lVar1 + 0x34) +\n              (uint)*(byte *)(lVar1 + 0x35)) {\n        *(undefined *)(lVar1 + 0x37) = 0;\n        *(undefined2 *)(lVar1 + 0x30) = 0;\n        FUN_00105710(lVar1,auStack_38);\n        FUN_00105990(puVar2);\n        goto LAB_00105a4c;\n      }\n      lVar1 = *(long *)(lVar1 + 0x40);\n    } while (lVar1 != 0);\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\nLAB_00105a4c:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001210b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_sigmask(int __how,__sigset_t *__newmask,__sigset_t *__oldmask)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_sigmask_0011fc28)();\n  return iVar1;\n}\n\n", 
    "00105b20": "\nvoid FUN_00105b20(void)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_98 [136];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_001202e8 != 0) {\n    FUN_00105ab0(auStack_98);\n    FUN_00105af0();\n    FUN_00105ad0(auStack_98);\n  }\n  FUN_0010c1e0();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111cc0": "\nlong FUN_00111cc0(long param_1,ulong param_2)\n\n{\n  FILE *__stream;\n  long lVar1;\n  size_t __n;\n  \n  if (param_2 == 0) {\n    lVar1 = FUN_00111840(0,0);\n    return lVar1;\n  }\n  if (param_1 != 0) {\n    __stream = (FILE *)FUN_00114c90(param_1,&DAT_001188b4);\n    if (__stream == (FILE *)0x0) {\n      lVar1 = 0;\n    }\n    else {\n      lVar1 = FUN_00111840(__stream,param_1);\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      setvbuf(__stream,(char *)(lVar1 + 0x18),0,__n);\n    }\n    return lVar1;\n  }\n  lVar1 = FUN_00111840(0,0);\n  *(undefined8 *)(lVar1 + 0x18) = 0;\n  FUN_00111a80(lVar1 + 0x20,param_2);\n  FUN_00112100(lVar1 + 0x20);\n  return lVar1;\n}\n\n", 
    "001212f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcngettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001211d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001210b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0011fdf8)();\n  return pvVar1;\n}\n\n", 
    "00103a60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0011fd68)();\n  return pvVar1;\n}\n\n", 
    "0010d820": "\nlong FUN_0010d820(long param_1,long param_2,long **param_3,char param_4)\n\n{\n  long *plVar1;\n  long lVar2;\n  char cVar3;\n  long *plVar4;\n  long lVar5;\n  \n  plVar4 = (long *)FUN_0010d6c0();\n  *param_3 = plVar4;\n  lVar5 = *plVar4;\n  if (lVar5 == 0) {\nLAB_0010d8c1:\n    lVar5 = 0;\n  }\n  else {\n    if (lVar5 != param_2) {\n      cVar3 = (**(code **)(param_1 + 0x38))(param_2);\n      if (cVar3 == '\\0') {\n        for (; (long *)plVar4[1] != (long *)0x0; plVar4 = (long *)plVar4[1]) {\n          if ((*(long *)plVar4[1] == param_2) ||\n             (cVar3 = (**(code **)(param_1 + 0x38))(param_2), cVar3 != '\\0')) {\n            lVar5 = *(long *)plVar4[1];\n            if (param_4 == '\\0') {\n              return lVar5;\n            }\n            plVar4[1] = ((long *)plVar4[1])[1];\n            FUN_0010d800(param_1 + 0x48);\n            return lVar5;\n          }\n        }\n        goto LAB_0010d8c1;\n      }\n      lVar5 = *plVar4;\n    }\n    if (param_4 != '\\0') {\n      plVar1 = (long *)plVar4[1];\n      if (plVar1 != (long *)0x0) {\n        lVar2 = plVar1[1];\n        *plVar4 = *plVar1;\n        plVar4[1] = lVar2;\n        FUN_0010d800(param_1 + 0x48);\n        return lVar5;\n      }\n      *plVar4 = 0;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0010d940": "\nundefined8 FUN_0010d940(long param_1,long **param_2,char param_3)\n\n{\n  long lVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  long lVar6;\n  \n  plVar5 = *param_2;\n  if (param_2[1] <= plVar5) {\n    return 1;\n  }\n  do {\n    while (lVar6 = *plVar5, lVar6 == 0) {\nLAB_0010d970:\n      plVar5 = plVar5 + 2;\n      if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n        return 1;\n      }\n    }\n    plVar3 = (long *)plVar5[1];\n    if ((long *)plVar5[1] != (long *)0x0) {\n      do {\n        while( true ) {\n          lVar6 = *plVar3;\n          plVar2 = (long *)FUN_0010d6c0(param_1,lVar6);\n          plVar4 = (long *)plVar3[1];\n          if (*plVar2 != 0) break;\n          *plVar2 = lVar6;\n          *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n          FUN_0010d800(param_1 + 0x48);\n          plVar3 = plVar4;\n          if (plVar4 == (long *)0x0) goto LAB_0010d9e0;\n        }\n        plVar3[1] = plVar2[1];\n        plVar2[1] = (long)plVar3;\n        plVar3 = plVar4;\n      } while (plVar4 != (long *)0x0);\nLAB_0010d9e0:\n      lVar6 = *plVar5;\n    }\n    plVar5[1] = 0;\n    if (param_3 != '\\0') goto LAB_0010d970;\n    plVar3 = (long *)FUN_0010d6c0(param_1,lVar6);\n    if (*plVar3 == 0) {\n      *plVar3 = lVar6;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n    }\n    else {\n      plVar4 = (long *)FUN_0010d920(param_1 + 0x48);\n      if (plVar4 == (long *)0x0) {\n        return 0;\n      }\n      lVar1 = plVar3[1];\n      *plVar4 = lVar6;\n      plVar4[1] = lVar1;\n      plVar3[1] = (long)plVar4;\n    }\n    *plVar5 = 0;\n    plVar5 = plVar5 + 2;\n    param_2[3] = (long *)((long)param_2[3] + -1);\n    if (param_2[1] < plVar5 || param_2[1] == plVar5) {\n      return 1;\n    }\n  } while( true );\n}\n\n", 
    "001123b0": "\nvoid FUN_001123b0(long *param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long *plVar5;\n  \n  lVar1 = param_1[6];\n  lVar2 = param_1[5];\n  if (lVar1 == lVar2) {\n    *(byte *)(param_1 + 0xd) = *(byte *)(param_1 + 0xd) | 2;\n  }\n  uVar3 = param_1[7];\n  uVar4 = lVar1 + param_1[9] & ~param_1[9];\n  param_1[6] = uVar4;\n  if (uVar3 - param_1[4] < uVar4 - param_1[4]) {\n    param_1[6] = uVar3;\n    uVar4 = uVar3;\n  }\n  param_1[5] = uVar4;\n  plVar5 = (long *)param_1[0x11];\n  if ((ulong)(param_1[0x12] - (long)plVar5) < 8) {\n    _obstack_newchunk(param_1 + 0xe,8);\n    plVar5 = (long *)param_1[0x11];\n  }\n  *plVar5 = lVar2;\n  plVar5 = (long *)param_1[0x1c];\n  param_1[0x11] = param_1[0x11] + 8;\n  if ((ulong)(param_1[0x1d] - (long)plVar5) < 8) {\n    _obstack_newchunk(param_1 + 0x19,8);\n    plVar5 = (long *)param_1[0x1c];\n  }\n  *plVar5 = (lVar1 - lVar2) + -1;\n  param_1[0x1c] = param_1[0x1c] + 8;\n  *param_1 = *param_1 + 1;\n  return;\n}\n\n", 
    "001147d0": "\nlong _obstack_memory_used(long param_1)\n\n{\n  long *plVar1;\n  long lVar2;\n  \n  lVar2 = 0;\n  for (plVar1 = *(long **)(param_1 + 8); plVar1 != (long *)0x0; plVar1 = (long *)plVar1[1]) {\n    lVar2 = lVar2 + (*plVar1 - (long)plVar1);\n  }\n  return lVar2;\n}\n\n", 
    "00114a50": "\nint FUN_00114a50(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010d1f0": "\nint FUN_0010d1f0(long param_1,ulong param_2,long param_3,ulong param_4)\n\n{\n  char cVar1;\n  char cVar2;\n  char cVar3;\n  int iVar4;\n  int iVar5;\n  ulong uVar6;\n  long lVar7;\n  char cVar8;\n  ulong uVar9;\n  \n  uVar9 = 0;\n  uVar6 = 0;\nLAB_0010d214:\n  if (uVar9 < param_2) goto LAB_0010d230;\n  if (param_4 <= uVar6) {\n    return 0;\n  }\n  do {\n    if (uVar9 < param_2) {\nLAB_0010d230:\n      cVar8 = *(char *)(param_1 + uVar9);\n      cVar1 = FUN_00114940((int)cVar8);\n      if (cVar1 != '\\0') goto LAB_0010d26e;\n      iVar4 = FUN_0010d190(cVar8);\n      iVar5 = 0;\n      if (uVar6 != param_4) {\n        cVar8 = *(char *)(param_3 + uVar6);\n        goto LAB_0010d2a6;\n      }\n      if (iVar4 != 0) goto LAB_0010d2b4;\n    }\n    else {\nLAB_0010d26e:\n      cVar8 = *(char *)(param_3 + uVar6);\n      if ((param_4 <= uVar6) || (cVar1 = FUN_00114940((int)cVar8), cVar1 != '\\0')) break;\n      iVar4 = 0;\n      if (uVar9 != param_2) {\n        iVar4 = FUN_0010d190(*(undefined *)(param_1 + uVar9));\n      }\nLAB_0010d2a6:\n      iVar5 = FUN_0010d190(cVar8);\n      if (iVar5 != iVar4) {\nLAB_0010d2b4:\n        return iVar4 - iVar5;\n      }\n    }\n    uVar9 = uVar9 + 1;\n    uVar6 = uVar6 + 1;\n  } while( true );\n  for (; cVar1 = *(char *)(param_1 + uVar9), cVar1 == '0'; uVar9 = uVar9 + 1) {\n  }\n  while (cVar8 == '0') {\n    uVar6 = uVar6 + 1;\n    cVar8 = *(char *)(param_3 + uVar6);\n  }\n  lVar7 = uVar6 - uVar9;\n  iVar4 = 0;\n  while( true ) {\n    uVar6 = uVar9 + lVar7;\n    cVar2 = FUN_00114940((int)cVar1);\n    cVar3 = FUN_00114940((int)cVar8);\n    if (cVar2 == '\\0') break;\n    if (cVar3 == '\\0') {\n      return 1;\n    }\n    if (iVar4 == 0) {\n      iVar4 = (int)cVar1 - (int)cVar8;\n    }\n    uVar9 = uVar9 + 1;\n    cVar1 = *(char *)(param_1 + uVar9);\n    cVar8 = *(char *)(param_3 + lVar7 + uVar9);\n  }\n  if (cVar3 != '\\0') {\n    return -1;\n  }\n  if (iVar4 != 0) {\n    return iVar4;\n  }\n  goto LAB_0010d214;\n}\n\n", 
    "001148f0": "\nbool FUN_001148f0(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00106440": "\nvoid FUN_00106440(FILE *param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  char *pcVar3;\n  \n  iVar2 = fileno(param_1);\n  if (iVar2 == 0) {\n    iVar2 = feof_unlocked(param_1);\n    if (iVar2 != 0) {\n      clearerr_unlocked(param_1);\n      return;\n    }\n  }\n  else if (iVar2 == 1) {\n    iVar2 = fflush_unlocked(param_1);\n    if (iVar2 != 0) {\n      pcVar3 = \"fflush failed\";\n      goto LAB_001064b6;\n    }\n  }\n  else {\n    iVar2 = FUN_00114090(param_1);\n    if (iVar2 != 0) {\n      pcVar3 = \"close failed\";\nLAB_001064b6:\n      uVar1 = dcgettext(0,pcVar3,5);\n                    /* WARNING: Subroutine does not return */\n      FUN_001062b0(uVar1,param_2);\n    }\n  }\n  return;\n}\n\n", 
    "00107890": "\nlong FUN_00107890(undefined8 *param_1,long param_2,long *param_3)\n\n{\n  long lVar1;\n  long lVar2;\n  long lVar3;\n  \n  lVar1 = FUN_00113360(param_2,8);\n  *param_3 = lVar1;\n  if (param_2 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      if ((param_1[1] == 0) || (*(char *)(param_1[1] + 0xc) == '\\0')) {\n        lVar2 = FUN_00106310(*param_1,\"r\");\n        *(long *)(lVar1 + lVar3 * 8) = lVar2;\n      }\n      else {\n        lVar2 = FUN_001076f0();\n        *(long *)(lVar1 + lVar3 * 8) = lVar2;\n      }\n      if (lVar2 == 0) {\n        return lVar3;\n      }\n      lVar3 = lVar3 + 1;\n      param_1 = param_1 + 2;\n    } while (param_2 != lVar3);\n  }\n  return lVar3;\n}\n\n", 
    "00114c90": "\nFILE * FUN_00114c90(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_00114fe0(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_00114090(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_00114090(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "001211e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001210c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_create(pthread_t *__newthread,pthread_attr_t *__attr,__start_routine *__start_routine,\n                  void *__arg)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_create_0011fc20)();\n  return iVar1;\n}\n\n", 
    "001038f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getpid_0011fcb0)();\n  return _Var1;\n}\n\n", 
    "001211e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001210c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_wait(pthread_cond_t *__cond,pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105e70": "\nvoid FUN_00105e70(int param_1,char param_2,undefined8 param_3)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  uint uVar6;\n  long in_FS_OFFSET;\n  ulong local_60;\n  int local_58;\n  long local_30;\n  \n  uVar6 = 0x11;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = FUN_00113d00(param_3,0,10,&local_60,0);\n  iVar3 = getrlimit(RLIMIT_NOFILE,(rlimit *)&local_58);\n  if (iVar3 == 0) {\n    uVar6 = local_58 - 3;\n  }\n  if (iVar2 == 0) {\n    DAT_00120024 = (uint)local_60;\n    if (local_60 == (local_60 & 0xffffffff)) {\n      if (DAT_00120024 < 2) {\n        uVar4 = FUN_00111830(param_3);\n        puVar1 = (&PTR_s_ignore_leading_blanks_0011f5c0)[(long)param_1 * 4];\n        uVar5 = dcgettext(0,\"invalid --%s argument %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar5,puVar1,uVar4);\n      }\n      if (DAT_00120024 <= uVar6) {\n        if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return;\n        }\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n    }\n  }\n  else if (iVar2 != 1) {\n    FUN_00113c80(iVar2,param_1,(int)param_2,&PTR_s_ignore_leading_blanks_0011f5c0,param_3);\n  }\n  uVar4 = FUN_00111830(param_3);\n  puVar1 = (&PTR_s_ignore_leading_blanks_0011f5c0)[(long)param_1 * 4];\n  uVar5 = dcgettext(0,\"--%s argument %s too large\",5);\n                    /* WARNING: Subroutine does not return */\n  error(0,0,uVar5,puVar1,uVar4);\n}\n\n", 
    "00103a50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0011fd60)();\n  return;\n}\n\n", 
    "00105d50": "\nundefined (*) [16] FUN_00105d50(undefined (*param_1) [16])\n\n{\n  *(undefined8 *)param_1[4] = 0;\n  param_1[1] = (undefined  [16])0x0;\n  *param_1 = (undefined  [16])0x0;\n  *(undefined8 *)param_1[1] = 0xffffffffffffffff;\n  param_1[2] = (undefined  [16])0x0;\n  param_1[3] = (undefined  [16])0x0;\n  return param_1;\n}\n\n", 
    "00103c90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0011fe80)();\n  return pvVar1;\n}\n\n", 
    "00103b70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_strtol_0011fdf0)();\n  return lVar1;\n}\n\n", 
    "001134a0": "\nvoid FUN_001134a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00113410(param_1,param_2,1);\n  return;\n}\n\n", 
    "00114290": "\nvoid FUN_00114290(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_001142f0(param_1,0,1);\n  return;\n}\n\n", 
    "00103000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0011ffd0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0011ffd0)();\n  }\n  return;\n}\n\n", 
    "00106870": "\nvoid FUN_00106870(char *param_1,char *param_2)\n\n{\n  byte bVar1;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  \n  while (bVar1 = FUN_001053b0((int)*param_1), *(char *)(extraout_RDX + (ulong)bVar1) != '\\0') {\n    param_1 = param_1 + 1;\n  }\n  while (bVar1 = FUN_001053b0((int)*param_2), *(char *)(extraout_RDX_00 + (ulong)bVar1) != '\\0') {\n    param_2 = param_2 + 1;\n  }\n  thunk_FUN_00112870(param_1);\n  return;\n}\n\n", 
    "00114b40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00114b40(double param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  double dVar3;\n  \n  if (param_1 <= _DAT_00119080) {\n    FUN_00114f50(0x8000000000000000,0);\n    return;\n  }\n  if (param_1 < DAT_00117f38) {\n    dVar3 = (param_1 - (double)(long)param_1) * _DAT_00119088;\n    lVar1 = (long)dVar3;\n    lVar1 = (ulong)((double)lVar1 < dVar3) + lVar1;\n    lVar2 = (long)param_1 + lVar1 / 1000000000;\n    lVar1 = lVar1 % 1000000000;\n    if (-1 < lVar1) {\n      FUN_00114f50(lVar2);\n      return;\n    }\n    FUN_00114f50(lVar2 + -1,lVar1 + 1000000000);\n    return;\n  }\n  FUN_00114f50(0x7fffffffffffffff,999999999);\n  return;\n}\n\n", 
    "001038a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswcntrl_0011fc88)();\n  return iVar1;\n}\n\n", 
    "001212d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0011fd18)();\n  return sVar1;\n}\n\n", 
    "001211b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strxfrm(char *__dest,char *__src,size_t __n)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strxfrm_0011fdc8)();\n  return sVar1;\n}\n\n", 
    "00103a00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0011fd38)();\n  return pcVar1;\n}\n\n", 
    "00103d60": "\nvoid dcngettext(void)\n\n{\n  (*(code *)PTR_dcngettext_0011fee8)();\n  return;\n}\n\n", 
    "00103c40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_0011fe58)();\n  return iVar1;\n}\n\n", 
    "001212d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __explicit_bzero_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103e80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint execlp(char *__file,char *__arg,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_execlp_0011ff78)();\n  return iVar1;\n}\n\n", 
    "001211b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001113b0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001113b0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00120180;\n  if (1 < DAT_00120178) {\n    ppvVar2 = (void **)(PTR_DAT_00120180 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00120180 + (ulong)(DAT_00120178 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00120820) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00120198 = &DAT_00120820;\n    _DAT_00120190 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00120190) {\n    free(__ptr_00);\n    PTR_DAT_00120180 = &DAT_00120190;\n  }\n  DAT_00120178 = 1;\n  return;\n}\n\n", 
    "001124a0": "\nvoid FUN_001124a0(undefined8 *param_1)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  \n  puVar2 = PTR_malloc_0011ffd8;\n  puVar1 = PTR_free_0011ffb8;\n  *param_1 = 0;\n  param_1[1] = 0;\n  param_1[2] = 0;\n  _obstack_begin(param_1 + 3,0,0,puVar2,puVar1);\n  _obstack_begin(param_1 + 0xe,0,0,puVar2,puVar1);\n  _obstack_begin(param_1 + 0x19,0,0,puVar2,puVar1);\n  return;\n}\n\n", 
    "001070e0": "\nbool FUN_001070e0(undefined4 param_1)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  undefined auStack_28 [8];\n  undefined4 local_20;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_20 = param_1;\n  lVar1 = FUN_0010e610(DAT_001202e0,auStack_28);\n  if (lVar1 != 0) {\n    *(undefined *)(lVar1 + 0xc) = 2;\n  }\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return lVar1 != 0;\n}\n\n", 
    "00113170": "\nvoid FUN_00113170(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00112d00();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010daa0": "\nundefined8 FUN_0010daa0(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x20);\n}\n\n", 
    "0010d800": "\nvoid FUN_0010d800(undefined8 *param_1,undefined8 *param_2)\n\n{\n  *param_2 = 0;\n  param_2[1] = *param_1;\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010d920": "\nvoid FUN_0010d920(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    *param_1 = *(long *)(*param_1 + 8);\n    return;\n  }\n  malloc(0x10);\n  return;\n}\n\n", 
    "00105530": "\nint FUN_00105530(char *param_1)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  long in_FS_OFFSET;\n  byte *local_18;\n  long local_10;\n  \n  cVar1 = *param_1;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_18 = (byte *)(param_1 + (cVar1 == '-'));\n  bVar2 = FUN_00105460(&local_18);\n  iVar3 = 0;\n  if (0x30 < bVar2) {\n    iVar3 = (int)(char)(&DAT_00116360)[*local_18];\n    if (cVar1 == '-') {\n      iVar3 = -(int)(char)(&DAT_00116360)[*local_18];\n    }\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001149f0": "\nbool FUN_001149f0(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "001091c0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid FUN_001091c0(undefined8 *param_1,ulong param_2)\n\n{\n  ulong *puVar1;\n  ulong uVar2;\n  char cVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  undefined2 *puVar6;\n  undefined *puVar7;\n  char *pcVar8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  char extraout_DL;\n  ulong *puVar12;\n  undefined4 *puVar13;\n  long lVar14;\n  long in_FS_OFFSET;\n  byte bVar15;\n  undefined8 local_118;\n  undefined8 uStack_110;\n  undefined4 local_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  ulong local_f8;\n  ulong uStack_f0;\n  undefined4 local_e8;\n  undefined4 uStack_e4;\n  uint uStack_e0;\n  undefined4 uStack_dc;\n  undefined8 local_d8;\n  undefined local_c8 [32];\n  undefined local_a8;\n  undefined local_a7 [47];\n  undefined4 local_78;\n  long local_40;\n  \n  bVar15 = 0;\n  local_118 = *param_1;\n  uStack_110 = param_1[1];\n  local_108 = *(undefined4 *)(param_1 + 2);\n  uStack_104 = *(undefined4 *)((long)param_1 + 0x14);\n  uStack_100 = *(undefined4 *)(param_1 + 3);\n  uStack_fc = *(undefined4 *)((long)param_1 + 0x1c);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_f8 = param_1[4];\n  uStack_f0 = param_1[5];\n  local_e8 = *(undefined4 *)(param_1 + 6);\n  uStack_e4 = *(uint *)((long)param_1 + 0x34);\n  uStack_e0 = *(uint *)(param_1 + 7);\n  uStack_dc = *(undefined4 *)((long)param_1 + 0x3c);\n  local_d8 = param_1[8];\n  if (DAT_00120390 == (ulong *)0x0) {\n    uStack_e4._3_1_ = (byte)(uStack_e4 >> 0x18);\n  }\n  else {\n    uVar11 = param_2 & 0xffffffff;\n    lVar14 = 1;\n    puVar12 = DAT_00120390;\n    do {\n      uVar4 = *puVar12;\n      uVar2 = puVar12[2];\n      if (*(char *)((long)puVar12 + 0x39) != '\\0') {\n        lVar14 = uVar4 + 1;\n        if (uVar4 == 0xffffffffffffffff) {\n          lVar14 = 1;\n          uVar4 = 0;\n        }\n        uVar5 = FUN_0010eba0(uVar4,local_c8);\n        local_a8 = 0x2b;\n        puVar6 = (undefined2 *)__stpcpy_chk(local_a7,uVar5,0x2d);\n        uVar5 = FUN_0010eba0(lVar14,local_c8);\n        local_78 = 0x206b2d;\n        puVar7 = (undefined *)__stpcpy_chk((long)&local_78 + 3,uVar5,0x2c);\n        if (puVar12[2] != 0xffffffffffffffff) {\n          pcVar8 = (char *)FUN_0010eba0(uVar2 + 1,local_c8);\n          *puVar6 = 0x2d20;\n          strcpy((char *)(puVar6 + 1),pcVar8);\n          pcVar8 = (char *)FUN_0010eba0((ulong)(puVar12[3] == 0xffffffffffffffff) + uVar2 + 1,\n                                        local_c8);\n          *puVar7 = 0x2c;\n          strcpy(puVar7 + 1,pcVar8);\n        }\n        uVar5 = FUN_00111820(1,&local_78);\n        uVar9 = FUN_00111820(0,&local_a8);\n        uVar10 = dcgettext(0,\"obsolescent key %s used; consider %s instead\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar10,uVar9,uVar5);\n      }\n      if ((uVar4 != 0xffffffffffffffff) && (uVar2 < uVar4)) {\n        uVar5 = dcgettext(0,\"key %lu has zero width and will be ignored\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar5,lVar14);\n      }\n      cVar3 = FUN_001056a0(puVar12,param_2,uVar11);\n      param_2 = 1;\n      if (cVar3 == '\\0') {\n        param_2 = (ulong)*(byte *)((long)puVar12 + 0x36);\n      }\n      if ((uVar2 == 0) && (puVar12[3] != 0)) {\n        if (extraout_DL == '\\0') goto LAB_00109253;\nLAB_00109518:\n        if ((char)uVar11 == '\\0') goto LAB_00109253;\n      }\n      else {\n        if (extraout_DL != '\\0') goto LAB_00109518;\n        if ((DAT_00120028 == 0x80) &&\n           (((*(char *)(puVar12 + 6) == '\\0' && (((int)param_2 == 0 || (puVar12[1] != 0)))) ||\n            ((*(char *)((long)puVar12 + 0x31) == '\\0' && (puVar12[3] != 0)))))) {\n          uVar5 = dcgettext(0,\n                            \"leading blanks are significant in key %lu; consider also specifying \\'b\\'\"\n                            ,5);\n                    /* WARNING: Subroutine does not return */\n          error(0,0,uVar5,lVar14);\n        }\nLAB_00109253:\n        if (cVar3 != '\\0') {\n          uVar4 = *puVar12 + 1;\n          if (uVar4 == 0) {\n            uVar4 = 1;\n          }\n          if ((uVar4 < puVar12[2] + 1) || (puVar12[2] == 0xffffffffffffffff)) {\n            uVar5 = dcgettext(0,\"key %lu is numeric and spans multiple fields\",5);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,uVar5,lVar14);\n          }\n        }\n      }\n      if ((local_f8 != 0) && (local_f8 == puVar12[4])) {\n        local_f8 = 0;\n      }\n      if ((uStack_f0 != 0) && (uStack_f0 == puVar12[5])) {\n        uStack_f0 = 0;\n      }\n      lVar14 = lVar14 + 1;\n      uStack_e4._3_1_ = (*(byte *)((long)puVar12 + 0x37) ^ 1) & uStack_e4._3_1_;\n      local_e8 = CONCAT13((byte)((uint)local_e8 >> 0x18) & (*(byte *)((long)puVar12 + 0x33) ^ 1),\n                          CONCAT12((byte)((uint)local_e8 >> 0x10) &\n                                   (*(byte *)((long)puVar12 + 0x32) ^ 1),\n                                   CONCAT11((byte)((uint)local_e8 >> 8) &\n                                            (*(byte *)((long)puVar12 + 0x31) ^ 1),\n                                            (byte)local_e8 & (*(byte *)(puVar12 + 6) ^ 1))));\n      puVar1 = puVar12 + 7;\n      puVar12 = (ulong *)puVar12[8];\n      uStack_e0 = uStack_e0 & 0xffffff00 | (uint)((byte)uStack_e0 & (*(byte *)puVar1 ^ 1));\n    } while (puVar12 != (ulong *)0x0);\n  }\n  cVar3 = FUN_001056c0(&local_118);\n  if (cVar3 == '\\0') {\n    if ((DAT_0012039a == '\\0') && (DAT_00120399 == '\\0')) {\n      uStack_e4 = uStack_e4 & 0xffffff;\n    }\n    FUN_00105710();\n    uVar11 = 0xffffffffffffffff;\n    puVar13 = &local_78;\n    do {\n      if (uVar11 == 0) break;\n      uVar11 = uVar11 - 1;\n      cVar3 = *(char *)puVar13;\n      puVar13 = (undefined4 *)((long)puVar13 + (ulong)bVar15 * -2 + 1);\n    } while (cVar3 != '\\0');\n    uVar5 = FUN_001053c0(~uVar11 - 1);\n    uVar5 = dcngettext(0,\"option \\'-%s\\' is ignored\",\"options \\'-%s\\' are ignored\",uVar5,5);\n                    /* WARNING: Subroutine does not return */\n    error(0,0,uVar5,&local_78);\n  }\n  if (uStack_e4._3_1_ != 0) {\n    if (DAT_0012039a == '\\0') {\n      if ((DAT_00120399 != '\\0') && (DAT_00120390 != (ulong *)0x0)) {\n        FUN_00105710();\n        uVar11 = 0xffffffffffffffff;\n        puVar13 = &local_78;\n        do {\n          if (uVar11 == 0) break;\n          uVar11 = uVar11 - 1;\n          cVar3 = *(char *)puVar13;\n          puVar13 = (undefined4 *)((long)puVar13 + (ulong)bVar15 * -2 + 1);\n        } while (cVar3 != '\\0');\n        uVar5 = FUN_001053c0(~uVar11 - 1);\n        uVar5 = dcngettext(0,\"option \\'-%s\\' is ignored\",\"options \\'-%s\\' are ignored\",uVar5,5);\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar5,&local_78);\n      }\n      if ((DAT_00120399 == '\\0') && (DAT_00120390 != (ulong *)0x0)) {\n        uVar5 = dcgettext(0,\"option \\'-r\\' only applies to last-resort comparison\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar5);\n      }\n    }\n    else if (DAT_00120390 != (ulong *)0x0) {\n      FUN_00105710();\n      uVar11 = 0xffffffffffffffff;\n      puVar13 = &local_78;\n      do {\n        if (uVar11 == 0) break;\n        uVar11 = uVar11 - 1;\n        cVar3 = *(char *)puVar13;\n        puVar13 = (undefined4 *)((long)puVar13 + (ulong)bVar15 * -2 + 1);\n      } while (cVar3 != '\\0');\n      uVar5 = FUN_001053c0(~uVar11 - 1);\n      uVar5 = dcngettext(0,\"option \\'-%s\\' is ignored\",\"options \\'-%s\\' are ignored\",uVar5,5);\n                    /* WARNING: Subroutine does not return */\n      error(0,0,uVar5,&local_78);\n    }\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0010c0e0": "\nlong FUN_0010c0e0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_0010be40(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_0010bf50(param_1,param_2,lVar1);\n    FUN_0010bfe0(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "001137e0": "\nuint FUN_001137e0(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = FUN_001137b0(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "00114c70": "\nvoid FUN_00114c70(undefined8 param_1,uint param_2)\n\n{\n  param_2 = param_2 & 0x80000;\n  if (param_2 != 0) {\n    param_2 = 0x406;\n  }\n  FUN_00114120(param_1,param_2,3);\n  return;\n}\n\n", 
    "00114a30": "\nint FUN_00114a30(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00111dc0": "\nundefined8 FUN_00111dc0(long *param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (lVar1 != 0) {\n    uVar2 = FUN_00114090(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "001212e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039b0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0011fd10)();\n  return;\n}\n\n", 
    "001211c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strxfrm(char *__dest,char *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001210a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0011fe50)();\n  return pcVar1;\n}\n\n", 
    "0010af30": "\nvoid FUN_0010af30(long *param_1,ulong param_2,ulong param_3,undefined8 param_4)\n\n{\n  long lVar1;\n  ulong uVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  long lVar7;\n  long *plVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long *__dest;\n  long in_FS_OFFSET;\n  ulong local_80;\n  ulong local_78;\n  long local_50;\n  undefined8 local_48;\n  long local_40;\n  \n  uVar9 = (ulong)DAT_00120024;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_78 = param_3;\n  if (uVar9 < param_3) {\n    do {\n      uVar10 = 0;\n      lVar7 = 0;\n      if (local_78 < uVar9) {\n        uVar5 = 0;\n        uVar6 = uVar9;\n        uVar2 = local_78;\n        plVar8 = param_1;\n        __dest = param_1;\n      }\n      else {\n        do {\n          lVar1 = FUN_00107c00(&local_48);\n          uVar6 = (ulong)DAT_00120024;\n          uVar9 = param_2;\n          if (uVar6 <= param_2) {\n            uVar9 = uVar6;\n          }\n          uVar2 = FUN_0010ace0(param_1 + lVar7 * 2,uVar9,uVar6,local_48);\n          uVar6 = (ulong)DAT_00120024;\n          uVar9 = param_2;\n          if (uVar2 <= param_2) {\n            uVar9 = uVar2;\n          }\n          lVar7 = lVar7 + uVar2;\n          param_2 = param_2 - uVar9;\n          uVar9 = uVar10 + 1;\n          param_1[uVar10 * 2] = lVar1 + 0xd;\n          param_1[uVar10 * 2 + 1] = lVar1;\n          uVar10 = uVar9;\n        } while (uVar6 <= local_78 - lVar7);\n        uVar5 = uVar9 % uVar6;\n        uVar9 = uVar6 - uVar5;\n        uVar2 = local_78 - lVar7;\n        plVar8 = param_1 + lVar7 * 2;\n        __dest = param_1 + uVar9 * 2;\n      }\n      if (uVar9 < uVar2) {\n        uVar6 = (uVar2 + 1 + uVar5) - uVar6;\n        lVar1 = FUN_00107c00(&local_48);\n        uVar9 = param_2;\n        if (uVar6 <= param_2) {\n          uVar9 = uVar6;\n        }\n        uVar6 = FUN_0010ace0(plVar8,uVar9,uVar6,local_48);\n        uVar9 = param_2;\n        if (uVar6 <= param_2) {\n          uVar9 = uVar6;\n        }\n        uVar10 = uVar10 + 1;\n        lVar7 = lVar7 + uVar6;\n        *__dest = lVar1 + 0xd;\n        __dest[1] = lVar1;\n        param_2 = param_2 - uVar9;\n        plVar8 = param_1 + lVar7 * 2;\n        __dest = param_1 + uVar10 * 2;\n      }\n      param_2 = param_2 + uVar10;\n      memmove(__dest,plVar8,(local_78 - lVar7) * 0x10);\n      uVar9 = (ulong)DAT_00120024;\n      local_78 = local_78 + (uVar10 - lVar7);\n    } while (uVar9 < local_78);\n  }\n  FUN_0010ad90(param_1,param_2,local_78,param_4);\n  local_80 = param_2;\n  do {\n    uVar9 = FUN_00107890(param_1,local_78,&local_50);\n    if (local_78 == uVar9) {\n      lVar7 = FUN_00106310(param_4,&DAT_00117a91);\n      if (lVar7 != 0) {\n        FUN_0010a560(param_1,local_80,local_78,lVar7,param_4,local_50);\n        if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n          __stack_chk_fail();\n        }\n        return;\n      }\n      piVar3 = __errno_location();\n      if ((*piVar3 != 0x18) || (local_78 < 3)) {\n        uVar4 = dcgettext(0,\"open failed\",5);\n                    /* WARNING: Subroutine does not return */\n        FUN_001062b0(uVar4,param_4);\n      }\n    }\n    else if (uVar9 < 3) {\n      lVar7 = param_1[uVar9 * 2];\n      uVar4 = dcgettext(0,\"open failed\",5);\n                    /* WARNING: Subroutine does not return */\n      FUN_001062b0(uVar4,lVar7);\n    }\n    uVar9 = uVar9 - 1;\n    plVar8 = param_1 + uVar9 * 2;\n    while( true ) {\n      FUN_00106440(*(undefined8 *)(local_50 + uVar9 * 8),*plVar8);\n      lVar7 = FUN_00107ad0(&local_48,2 < uVar9);\n      if (lVar7 != 0) break;\n      uVar9 = uVar9 - 1;\n      plVar8 = plVar8 + -2;\n    }\n    uVar10 = local_80;\n    if (uVar9 < local_80) {\n      uVar10 = uVar9;\n    }\n    lVar1 = local_78 - uVar9;\n    FUN_0010a560(param_1,uVar10,uVar9,local_48,lVar7 + 0xd,local_50);\n    local_78 = lVar1 + 1;\n    *param_1 = lVar7 + 0xd;\n    param_1[1] = lVar7;\n    memmove(param_1 + 2,plVar8,lVar1 * 0x10);\n    local_80 = (local_80 - uVar10) + 1;\n  } while( true );\n}\n\n", 
    "00103b10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0011fdc0)();\n  return pvVar1;\n}\n\n", 
    "00103e70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0011ff70)();\n  return iVar1;\n}\n\n", 
    "00103d50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0011fee0)();\n  return pFVar1;\n}\n\n", 
    "00109ab0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00109ab0(undefined4 *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  \n  if (DAT_00120399 != '\\0') {\n    if (CONCAT44(uRam00000000001207c4,_DAT_001207c0) != 0) {\n      iVar1 = FUN_00108b00(param_1,&DAT_001207c0);\n      if (iVar1 == 0) {\n        return;\n      }\n    }\n    _DAT_001207c0 = *param_1;\n    uRam00000000001207c4 = param_1[1];\n    uRam00000000001207c8 = param_1[2];\n    uRam00000000001207cc = param_1[3];\n    _DAT_001207d0 = param_1[4];\n    uRam00000000001207d4 = param_1[5];\n    uRam00000000001207d8 = param_1[6];\n    uRam00000000001207dc = param_1[7];\n  }\n  FUN_001099c0(param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001212e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001211c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115000": "\nvoid FUN_00115000(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001210a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001135a0": "\nvoid FUN_001135a0(undefined4 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"string comparison failed\",5);\n                    /* WARNING: Subroutine does not return */\n  error(0,param_1,uVar1);\n}\n\n", 
    "001148d0": "\nbool FUN_001148d0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010dab0": "\nulong FUN_0010dab0(long **param_1)\n\n{\n  long lVar1;\n  long *plVar2;\n  ulong uVar3;\n  ulong uVar4;\n  \n  plVar2 = *param_1;\n  uVar4 = 0;\n  do {\n    if (param_1[1] <= plVar2) {\n      return uVar4;\n    }\n    while (*plVar2 != 0) {\n      uVar3 = 1;\n      for (lVar1 = plVar2[1]; lVar1 != 0; lVar1 = *(long *)(lVar1 + 8)) {\n        uVar3 = uVar3 + 1;\n      }\n      if (uVar4 < uVar3) {\n        uVar4 = uVar3;\n      }\n      plVar2 = plVar2 + 2;\n      if (param_1[1] <= plVar2) {\n        return uVar4;\n      }\n    }\n    plVar2 = plVar2 + 2;\n  } while( true );\n}\n\n", 
    "0010fdb0": "\nulong FUN_0010fdb0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00110237:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00110259;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_001107f6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_001101af;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00110237;\n    }\n  case 1:\n    bVar1 = false;\nLAB_001101af:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_0010fc80(&DAT_0011816f,param_5);\n      local_78 = (char *)FUN_0010fc80(\"\\'\");\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_0010ff00:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00110760_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x001106fb;\n          goto LAB_001104eb;\n        default:\nswitchD_00110610_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00114370(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_001109e8;\n              }\n              if (lVar10 == -2) goto joined_r0x00110dfa;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_001103d0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_001109e8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00110171;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_001106b8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_001106b8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_001106b8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_001103c7;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_001103b4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_001103b4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_001100d8;\n          goto LAB_001103c7;\n        case 0x23:\n        case 0x7e:\nLAB_001103ab:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_001103b4;\n          goto LAB_001100d5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00110610_caseD_25;\n        case 0x27:\nswitchD_00110610_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_001100d8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x001100fb;\n          }\n          goto LAB_001103d0;\n        case 0x3f:\nswitchD_00110610_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00110d5e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_001100d8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x001100fb;\n          }\n          goto LAB_001103d0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00110008_caseD_5c;\n          if (!bVar20) {\nLAB_00110648:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00110660;\n          }\n          goto LAB_001103d0;\n        case 0x7b:\n        case 0x7d:\nswitchD_00110610_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_001103ab;\nLAB_001100d5:\n          bVar23 = false;\n          goto LAB_001100d8;\n        }\nLAB_001104e0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_001104eb:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_001100f8;\n          goto LAB_00110020;\n        }\nLAB_00110520:\n        bVar21 = false;\n        goto joined_r0x00110531;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00110740;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00110008_caseD_0;\n          default:\n            goto switchD_00110610_caseD_1;\n          case 7:\n            goto switchD_00110760_caseD_7;\n          case 8:\n            goto switchD_00110760_caseD_8;\n          case 9:\n            goto switchD_00110008_caseD_9;\n          case 10:\n            goto switchD_00110760_caseD_a;\n          case 0xb:\n            goto switchD_00110760_caseD_b;\n          case 0xc:\n            goto switchD_00110760_caseD_c;\n          case 0xd:\n            goto switchD_00110760_caseD_d;\n          case 0x20:\n            goto LAB_00110789;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00110008_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00110771;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00110018;\n          case 0x27:\n            goto switchD_00110610_caseD_27;\n          case 0x3f:\n            goto switchD_00110610_caseD_3f;\n          case 0x5c:\n            goto switchD_00110008_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00110610_caseD_7b;\n          }\n        }\n        goto LAB_001103de;\n      }\nLAB_00110740:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00110760_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00110008_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x001100fb;\n            }\nLAB_00110b9b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00110b9b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00110bd8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x001100fb;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_001103d0;\n      default:\n        bVar23 = false;\n        goto switchD_00110610_caseD_1;\n      case 7:\nswitchD_00110760_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00110760_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00110008_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_001104e0;\n      case 10:\nswitchD_00110760_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00110520;\n      case 0xb:\nswitchD_00110760_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00110520;\n      case 0xc:\nswitchD_00110760_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00110760_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00110520;\n      case 0x20:\n        bVar5 = false;\nLAB_00110789:\n        uVar15 = 0x20;\n        goto LAB_00110018;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00110008_caseD_21:\n        bVar22 = false;\n        goto LAB_001100d5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00110771:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_001100d8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00110020;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00110018:\n        bVar22 = false;\n        goto LAB_00110020;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00110610_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00110610_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00110008_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00110648;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_001104e0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00110610_caseD_7b;\n      }\n      if (bVar20) goto LAB_00110540;\n      bVar21 = false;\n      goto LAB_00110096;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_001103c7:\n      param_5 = 2;\nLAB_001103d0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_001103de:\n      uVar13 = FUN_0010fdb0(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00110418;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00110e65:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00110418:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_0010fdb0(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00110418;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00110e65;\nLAB_001107f6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00110259:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x001106fb:\n  uVar13 = uVar13 + 1;\n  goto LAB_0010ff00;\nswitchD_00110d5e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00110bd8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x001100fb;\n    goto LAB_00110020;\n  }\n  goto LAB_001103de;\njoined_r0x00110dfa:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_001109e8:\n  if (1 < uVar17) {\nLAB_001109f2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_001103d0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_001100a8;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00110660;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00110171:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_001109f2;\n  }\nswitchD_00110610_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_001100d8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00110020:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x001100fb;\n  }\n  else {\nLAB_001100f8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x001100fb:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00110660:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_001100a8;\n    }\n  }\njoined_r0x00110531:\n  if (bVar20) {\nLAB_00110540:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_001103d0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00110096:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_001100a8:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_0010ff00;\n}\n\n", 
    "0010eba0": "\nchar * FUN_0010eba0(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "0010b830": "\nvoid FUN_0010b830(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x117b89;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_00117b0f;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 5;\n    pbVar7 = (byte *)0x117c3b;\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"sort\";\n        goto LAB_0010ba4e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"sort\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"sort\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010ba4e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"sort\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"sort\");\n    if (pcVar4 != \"sort\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001212b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtold(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114a00": "\nulong FUN_00114a00(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00106410": "\nvoid FUN_00106410(undefined8 param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = FUN_00106310();\n  if (lVar1 != 0) {\n    return;\n  }\n  uVar2 = dcgettext(0,\"open failed\",5);\n                    /* WARNING: Subroutine does not return */\n  FUN_001062b0(uVar2,param_1);\n}\n\n", 
    "00106650": "\nlong FUN_00106650(char *param_1,char *param_2)\n\n{\n  int iVar1;\n  long lVar2;\n  char *pcVar3;\n  \n  iVar1 = FUN_0010ec00(param_1,(long)param_2 - (long)param_1,0);\n  lVar2 = (long)iVar1;\n  if (param_1 < param_2) {\n    do {\n      pcVar3 = param_1 + 1;\n      lVar2 = lVar2 + (ulong)(*param_1 == '\\t');\n      param_1 = pcVar3;\n    } while (param_2 != pcVar3);\n  }\n  return lVar2;\n}\n\n", 
    "00105320": "\n/* WARNING: Removing unreachable block (ram,0x00105344) */\n/* WARNING: Removing unreachable block (ram,0x00105350) */\n\nvoid FUN_00105320(void)\n\n{\n  return;\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0011fc08)();\n  return;\n}\n\n", 
    "001212b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c1d0": "\nvoid FUN_0010c1d0(undefined param_1)\n\n{\n  DAT_001207f0 = param_1;\n  return;\n}\n\n", 
    "001038c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0011fc98)();\n  return iVar1;\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0011fd28)();\n  return pcVar1;\n}\n\n", 
    "001037a0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0011ffe8)();\n  return;\n}\n\n", 
    "001213d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114120": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00114120(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_001141a4;\n  }\n  if (DAT_00120958 < 0) {\n    iVar2 = FUN_00114120(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_00120958 != -1)) goto LAB_001141a4;\nLAB_001141e1:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_001141a4;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_00114120(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_001141a4;\n        DAT_00120958 = -1;\n        __fd = iVar2;\n        goto LAB_001141e1;\n      }\n    }\n    DAT_00120958 = 1;\n  }\nLAB_001141a4:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113150": "\nvoid FUN_00113150(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00112d00();\n  return;\n}\n\n", 
    "00103b40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__sighandler_t signal(int __sig,__sighandler_t __handler)\n\n{\n  __sighandler_t p_Var1;\n  \n  p_Var1 = (__sighandler_t)(*(code *)PTR_signal_0011fdd8)();\n  return p_Var1;\n}\n\n", 
    "00103a20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkostemp(char *__template,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkostemp_0011fd48)();\n  return iVar1;\n}\n\n", 
    "00108bd0": "\nvoid FUN_00108bd0(undefined4 *param_1,ulong param_2,long param_3)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  int iVar8;\n  long lVar9;\n  undefined4 *puVar10;\n  undefined4 *puVar11;\n  ulong uVar12;\n  long lVar13;\n  undefined4 *puVar14;\n  long local_40;\n  \n  uVar12 = param_2 >> 1;\n  local_40 = param_2 - uVar12;\n  puVar10 = param_1 + uVar12 * -8 + -8;\n  lVar9 = param_3 + -0x20;\n  puVar14 = param_1 + uVar12 * -8;\n  while( true ) {\n    while( true ) {\n      lVar13 = lVar9;\n      puVar11 = puVar10;\n      puVar10 = param_1 + -8;\n      iVar8 = FUN_00108b00(lVar13,puVar11);\n      if (iVar8 < 1) break;\n      uVar1 = puVar14[-7];\n      uVar2 = puVar14[-6];\n      uVar3 = puVar14[-5];\n      local_40 = local_40 + -1;\n      *puVar10 = puVar14[-8];\n      param_1[-7] = uVar1;\n      param_1[-6] = uVar2;\n      param_1[-5] = uVar3;\n      uVar1 = puVar14[-3];\n      uVar2 = puVar14[-2];\n      uVar3 = puVar14[-1];\n      param_1[-4] = puVar14[-4];\n      param_1[-3] = uVar1;\n      param_1[-2] = uVar2;\n      param_1[-1] = uVar3;\n      if (local_40 == 0) {\n        lVar9 = -0x20;\n        do {\n          puVar14 = (undefined4 *)(param_3 + lVar9);\n          uVar1 = puVar14[1];\n          uVar2 = puVar14[2];\n          uVar3 = puVar14[3];\n          puVar11 = (undefined4 *)(param_3 + 0x10 + lVar9);\n          uVar4 = *puVar11;\n          uVar5 = puVar11[1];\n          uVar6 = puVar11[2];\n          uVar7 = puVar11[3];\n          puVar11 = (undefined4 *)((long)puVar10 + lVar9);\n          *puVar11 = *puVar14;\n          puVar11[1] = uVar1;\n          puVar11[2] = uVar2;\n          puVar11[3] = uVar3;\n          puVar14 = (undefined4 *)((long)param_1 + lVar9 + -0x10);\n          *puVar14 = uVar4;\n          puVar14[1] = uVar5;\n          puVar14[2] = uVar6;\n          puVar14[3] = uVar7;\n          lVar9 = lVar9 + -0x20;\n          uVar12 = uVar12 - 1;\n        } while (uVar12 != 0);\n        return;\n      }\n      param_1 = puVar10;\n      puVar10 = puVar11 + -8;\n      lVar9 = lVar13;\n      puVar14 = puVar11;\n    }\n    uVar1 = *(undefined4 *)(param_3 + -0x1c);\n    uVar2 = *(undefined4 *)(param_3 + -0x18);\n    uVar3 = *(undefined4 *)(param_3 + -0x14);\n    uVar4 = *(undefined4 *)(param_3 + -0x10);\n    uVar5 = *(undefined4 *)(param_3 + -0xc);\n    uVar6 = *(undefined4 *)(param_3 + -8);\n    uVar7 = *(undefined4 *)(param_3 + -4);\n    *puVar10 = *(undefined4 *)(param_3 + -0x20);\n    param_1[-7] = uVar1;\n    param_1[-6] = uVar2;\n    param_1[-5] = uVar3;\n    param_1[-4] = uVar4;\n    param_1[-3] = uVar5;\n    param_1[-2] = uVar6;\n    param_1[-1] = uVar7;\n    uVar12 = uVar12 - 1;\n    if (uVar12 == 0) break;\n    param_1 = puVar10;\n    puVar10 = puVar11;\n    lVar9 = lVar13 + -0x20;\n    param_3 = lVar13;\n  }\n  return;\n}\n\n", 
    "00103d80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_join(pthread_t __th,void **__thread_return)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_join_0011fef8)();\n  return iVar1;\n}\n\n", 
    "00103c60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkstemp_0011fe68)();\n  return iVar1;\n}\n\n", 
    "001213d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001148a0": "\nulong FUN_001148a0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "001137b0": "\nbool FUN_001137b0(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "0010bae0": "\nvoid FUN_0010bae0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = DAT_00120808;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [OPTION]... --files0-from=F\\n\",5\n                     );\n    __printf_chk(1,uVar2,uVar4,uVar4);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"Write sorted concatenation of all FILE(s) to standard output.\\n\",5\n                              );\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_00105920();\n    FUN_00105950();\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"Ordering options:\\n\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -b, --ignore-leading-blanks  ignore leading blanks\\n  -d, --dictionary-order      consider only blanks and alphanumeric characters\\n  -f, --ignore-case           fold lower case to upper case characters\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -g, --general-numeric-sort  compare according to general numerical value\\n  -i, --ignore-nonprinting    consider only printable characters\\n  -M, --month-sort            compare (unknown) < \\'JAN\\' < ... < \\'DEC\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -h, --human-numeric-sort    compare human readable numbers (e.g., 2K 1G)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -n, --numeric-sort          compare according to string numerical value\\n  -R, --random-sort           shuffle, but group identical keys.  See shuf(1)\\n      --random-source=FILE    get random bytes from FILE\\n  -r, --reverse               reverse the result of comparisons\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"      --sort=WORD             sort according to WORD:\\n                                general-numeric -g, human-numeric -h, month -M,\\n                                numeric -n, random -R, version -V\\n  -V, --version-sort          natural sort of (version) numbers within text\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"Other options:\\n\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"      --batch-size=NMERGE   merge at most NMERGE inputs at once;\\n                            for more use temp files\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -c, --check, --check=diagnose-first  check for sorted input; do not sort\\n  -C, --check=quiet, --check=silent  like -c, but do not report first bad line\\n      --compress-program=PROG  compress temporaries with PROG;\\n                              decompress them with PROG -d\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"      --debug               annotate the part of the line used to sort,\\n                              and warn about questionable usage to stderr\\n      --files0-from=F       read input from the files specified by\\n                            NUL-terminated names in file F;\\n                            If F is - then read names from standard input\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -k, --key=KEYDEF          sort via a key; KEYDEF gives location and type\\n  -m, --merge               merge already sorted files; do not sort\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -o, --output=FILE         write result to FILE instead of standard output\\n  -s, --stable              stabilize sort by disabling last-resort comparison\\n  -S, --buffer-size=SIZE    use SIZE for main memory buffer\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    uVar4 = dcgettext(0,\n                      \"  -t, --field-separator=SEP  use SEP instead of non-blank to blank transition\\n  -T, --temporary-directory=DIR  use DIR for temporaries, not $TMPDIR or %s;\\n                              multiple options specify multiple directories\\n      --parallel=N          change the number of sorts run concurrently to N\\n  -u, --unique              with -c, check for strict ordering;\\n                              without -c, output only the first of an equal run\\n\"\n                      ,5);\n    __printf_chk(1,uVar4,&DAT_00117bbc);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"  -z, --zero-terminated     line delimiter is NUL, not newline\\n\",\n                               5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nKEYDEF is F[.C][OPTS][,F[.C][OPTS]] for start and stop position, where F is a\\nfield number and C a character position in the field; both are origin 1, and\\nthe stop position defaults to the line\\'s end.  If neither -t nor -b is in\\neffect, characters in a field are counted from the beginning of the preceding\\nwhitespace.  OPTS is one or more single-letter ordering options [bdfgiMhnRrV],\\nwhich override global ordering options for that key.  If no key is given, use\\nthe entire line as the key.  Use --debug to diagnose incorrect key usage.\\n\\nSIZE may be followed by the following multiplicative suffixes:\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"% 1% of memory, b 1, K 1024 (default), and so on for M, G, T, P, E, Z, Y.\\n\\n*** WARNING ***\\nThe locale specified by the environment affects sort order.\\nSet LC_ALL=C to get the traditional sort order that uses\\nnative byte values.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_0010b830();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00113390": "\nvoid thunk_FUN_00113340(void)\n\n{\n  FUN_00113340();\n  return;\n}\n\n", 
    "001211a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_signal(pthread_cond_t *__cond)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106520": "\nvoid FUN_00106520(undefined8 param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  long in_FS_OFFSET;\n  undefined auStack_38 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = FUN_00111cc0(param_1,0x10);\n  if (lVar2 == 0) {\n    pcVar4 = \"open failed\";\n  }\n  else {\n    FUN_00111da0(lVar2,auStack_38,0x10);\n    iVar1 = FUN_00111dc0(lVar2);\n    if (iVar1 == 0) {\n      FUN_0010c2b0(&DAT_00120240);\n      FUN_0010cbc0(auStack_38,0x10,&DAT_00120240);\n      if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    pcVar4 = \"close failed\";\n  }\n  uVar3 = dcgettext(0,pcVar4,5);\n                    /* WARNING: Subroutine does not return */\n  FUN_001062b0(uVar3,param_1);\n}\n\n", 
    "00113c80": "\nvoid FUN_00113c80(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  FUN_00113ba0(param_1,param_2,(int)param_3,param_4,param_5,DAT_00120130);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114d70": "\nint FUN_00114d70(char *param_1,long param_2,char *param_3,long param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  size_t sVar3;\n  size_t sVar4;\n  \n  piVar2 = __errno_location();\n  while( true ) {\n    *piVar2 = 0;\n    iVar1 = strcoll(param_1,param_3);\n    if (iVar1 != 0) {\n      return iVar1;\n    }\n    sVar3 = strlen(param_1);\n    sVar4 = strlen(param_3);\n    param_1 = param_1 + sVar3 + 1;\n    param_3 = param_3 + sVar4 + 1;\n    param_4 = param_4 - (sVar4 + 1);\n    param_2 = param_2 - (sVar3 + 1);\n    if (param_2 == 0) break;\n    if (param_4 == 0) {\n      return 1;\n    }\n  }\n  return -(uint)(param_4 != 0);\n}\n\n", 
    "001211a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111da0": "\nvoid FUN_00111da0(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    FUN_001118e0();\n    return;\n  }\n  FUN_00111960(param_1 + 3);\n  return;\n}\n\n", 
    "0010c1e0": "\nvoid FUN_0010c1e0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00114ad0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_001207f0 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_001207f8 != 0) {\n        uVar4 = FUN_00111650();\n                    /* WARNING: Subroutine does not return */\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n                    /* WARNING: Subroutine does not return */\n      error(0,*piVar2,&DAT_00117fb4,uVar3);\n    }\n  }\n  iVar1 = FUN_00114ad0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00120130);\n}\n\n", 
    "001039d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint dup2(int __fd,int __fd2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_dup2_0011fd20)();\n  return iVar1;\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n  lconv *plVar1;\n  \n  plVar1 = (lconv *)(*(code *)PTR_localeconv_0011fc90)();\n  return plVar1;\n}\n\n", 
    "0010f4b0": "\nulong FUN_0010f4b0(void)\n\n{\n  char *__nptr;\n  ulong uVar1;\n  ulong uVar2;\n  long in_FS_OFFSET;\n  char *local_18;\n  long local_10;\n  \n  uVar2 = 0x31069;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  __nptr = getenv(\"_POSIX2_VERSION\");\n  if (((__nptr != (char *)0x0) && (*__nptr != '\\0')) &&\n     (uVar1 = strtol(__nptr,&local_18,10), *local_18 == '\\0')) {\n    if ((long)uVar1 < -0x80000000) {\n      uVar2 = 0x80000000;\n    }\n    else {\n      uVar2 = 0x7fffffff;\n      if ((long)uVar1 < 0x80000000) {\n        uVar2 = uVar1;\n      }\n    }\n  }\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2 & 0xffffffff;\n}\n\n", 
    "001212c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ftruncate_0011fd40)();\n  return iVar1;\n}\n\n", 
    "00114370": "\nsize_t FUN_00114370(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010d590(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103c50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcoll(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcoll_0011fe60)();\n  return iVar1;\n}\n\n", 
    "00103b30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0011fdd0)();\n  return iVar1;\n}\n\n", 
    "00103e90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0011ff80)();\n  return iVar1;\n}\n\n", 
    "00103d70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong sysconf(int __name)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_sysconf_0011fef0)();\n  return lVar1;\n}\n\n", 
    "001212c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001113a0": "\nvoid FUN_001113a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001112b0(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "001149d0": "\nbool FUN_001149d0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "001213b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_lock(pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105980": "\nvoid FUN_00105980(char **param_1,char **param_2)\n\n{\n  strcmp(*param_1,*param_2);\n  return;\n}\n\n", 
    "001213b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d20": "\nvoid __explicit_bzero_chk(void)\n\n{\n  (*(code *)PTR___explicit_bzero_chk_0011fec8)();\n  return;\n}\n\n", 
    "00103c00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_0011fe38)();\n  return iVar1;\n}\n\n", 
    "00103e40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getrlimit(__rlimit_resource_t __resource,rlimit *__rlimits)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getrlimit_0011ff58)();\n  return iVar1;\n}\n\n", 
    "0010ddc0": "\nvoid FUN_0010ddc0(ulong **param_1,long param_2,ulong param_3)\n\n{\n  ulong **ppuVar1;\n  ulong *puVar2;\n  ulong uVar3;\n  ulong **ppuVar4;\n  \n  ppuVar4 = (ulong **)*param_1;\n  uVar3 = 0;\n  if (param_1[1] < ppuVar4 || (ulong **)param_1[1] == ppuVar4) {\n    return;\n  }\n  do {\n    ppuVar1 = ppuVar4;\n    puVar2 = *ppuVar4;\n    while (puVar2 != (ulong *)0x0) {\n      if (param_3 <= uVar3) {\n        return;\n      }\n      uVar3 = uVar3 + 1;\n      *(ulong **)(param_2 + -8 + uVar3 * 8) = *ppuVar1;\n      ppuVar1 = (ulong **)ppuVar1[1];\n      puVar2 = (ulong *)ppuVar1;\n    }\n    ppuVar4 = ppuVar4 + 2;\n  } while (ppuVar4 <= param_1[1] && (ulong **)param_1[1] != ppuVar4);\n  return;\n}\n\n", 
    "0010dca0": "\nlong FUN_0010dca0(long param_1,long param_2)\n\n{\n  char cVar1;\n  long *plVar2;\n  long lVar3;\n  \n  plVar2 = (long *)FUN_0010d6c0();\n  lVar3 = *plVar2;\n  if (lVar3 == 0) {\n    return 0;\n  }\n  while( true ) {\n    if (lVar3 == param_2) {\n      return param_2;\n    }\n    cVar1 = (**(code **)(param_1 + 0x38))(param_2);\n    if (cVar1 != '\\0') break;\n    plVar2 = (long *)plVar2[1];\n    if (plVar2 == (long *)0x0) {\n      return 0;\n    }\n    lVar3 = *plVar2;\n  }\n  return *plVar2;\n}\n\n", 
    "001061f0": "\nlong FUN_001061f0(uint param_1,char param_2,undefined8 param_3)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  long local_28;\n  long local_20;\n  \n  uVar4 = (ulong)param_1;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = FUN_00113810(param_3,0,10,&local_28,\"\");\n  if (uVar1 == 1) {\n    local_28 = -1;\n  }\n  else {\n    if (uVar1 != 0) {\n      uVar5 = (ulong)uVar1;\n      FUN_00113c80(uVar5,uVar4,(int)param_2,&PTR_s_ignore_leading_blanks_0011f5c0,param_3);\n      if (uVar4 == 0) {\n        uVar4 = dcgettext(0,\"standard output\",5);\n      }\n      uVar2 = FUN_00111670(0,3,uVar4);\n      piVar3 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n      error(2,*piVar3,\"%s: %s\",uVar5,uVar2);\n    }\n    if (local_28 == 0) {\n      uVar2 = dcgettext(0,\"number in parallel must be nonzero\",5);\n                    /* WARNING: Subroutine does not return */\n      error(2,0,uVar2);\n    }\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_28;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00111190": "\nuint FUN_00111190(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00120920;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "001213c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001212a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111a80": "\n/* WARNING: Type propagation algorithm not settling */\n\nvoid FUN_00111a80(__uid_t *param_1,size_t param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  ssize_t sVar2;\n  ulong uVar3;\n  __uid_t *p_Var4;\n  undefined *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  byte bVar8;\n  undefined local_58 [8];\n  __uid_t _Stack_50;\n  __uid_t _Stack_4c;\n  long local_40;\n  \n  bVar8 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    *param_1 = local_58._0_4_;\n    param_1[1] = local_58._4_4_;\n    param_1[2] = _Stack_50;\n    param_1[3] = _Stack_4c;\n    local_58._0_4_ = getpid();\n    uVar1 = 0;\n    do {\n      uVar7 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar7 + 0x10) = *(undefined *)((long)local_58 + uVar7);\n    } while (uVar1 < 4);\n    uVar7 = 0x14;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    sVar2 = read(__fd,param_1,param_2);\n    close(__fd);\n    if (0x7ff < sVar2) goto LAB_00111aef;\n    if (sVar2 < 0) {\n      sVar2 = 0;\n    }\n    uVar7 = 0x800 - sVar2;\n    if (0x10 < uVar7) {\n      uVar7 = 0x10;\n    }\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    uVar3 = sVar2 + uVar7;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + sVar2);\n    for (uVar7 = uVar7 & 0xffffffff; uVar7 != 0; uVar7 = uVar7 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar3) goto LAB_00111aef;\n    uVar6 = 0x800 - uVar3;\n    if (4 < uVar6) {\n      uVar6 = 4;\n    }\n    local_58._0_4_ = getpid();\n    uVar7 = uVar6 + uVar3;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + uVar3);\n    for (uVar6 = uVar6 & 0xffffffff; uVar6 != 0; uVar6 = uVar6 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar7) goto LAB_00111aef;\n  }\n  uVar3 = 0x800 - uVar7;\n  if (4 < uVar3) {\n    uVar3 = 4;\n  }\n  local_58._0_4_ = getppid();\n  if ((uint)uVar3 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar6 + uVar7) = *(undefined *)((long)local_58 + uVar6);\n    } while (uVar1 < (uint)uVar3);\n  }\n  uVar3 = uVar3 + uVar7;\n  if (uVar3 < 0x800) {\n    uVar7 = 0x800 - uVar3;\n    if (4 < uVar7) {\n      uVar7 = 4;\n    }\n    local_58._0_4_ = getuid();\n    if ((uint)uVar7 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n      } while (uVar1 < (uint)uVar7);\n    }\n    uVar3 = uVar3 + uVar7;\n    if (uVar3 < 0x800) {\n      local_58._0_4_ = getgid();\n      uVar7 = 0x800 - uVar3;\n      if (4 < uVar7) {\n        uVar7 = 4;\n      }\n      if ((uint)uVar7 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n        } while (uVar1 < (uint)uVar7);\n      }\n    }\n  }\nLAB_00111aef:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00112c90": "\nvoid thunk_FUN_00112870(void)\n\n{\n  FUN_00112870();\n  return;\n}\n\n", 
    "00114f90": "\nulong FUN_00114f90(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = 0xffffffff;\n  if (-1 < (long)param_1) {\n    uVar1 = (ulong)((param_1 | param_2) != 0);\n  }\n  return uVar1;\n}\n\n", 
    "00103790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0011ffd8)();\n  return pvVar1;\n}\n\n", 
    "001213c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c1c0": "\nvoid FUN_0010c1c0(undefined8 param_1)\n\n{\n  DAT_001207f8 = param_1;\n  return;\n}\n\n", 
    "001212a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c2e0": "\nvoid FUN_0010c2e0(undefined4 *param_1,undefined8 param_2)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = FUN_0010c290(param_2,*param_1,param_1);\n  auVar1 = FUN_0010c290(SUB168(auVar1,0) + 4,*(undefined4 *)(SUB168(auVar1 >> 0x40,0) + 4));\n  auVar1 = FUN_0010c290(SUB168(auVar1,0) + 8,*(undefined4 *)(SUB168(auVar1 >> 0x40,0) + 8));\n  FUN_0010c290(SUB168(auVar1,0) + 0xc,*(undefined4 *)(SUB168(auVar1 >> 0x40,0) + 0xc));\n  return;\n}\n\n", 
    "0010f7f0": "\nundefined8\nFUN_0010f7f0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f760(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010f6d0": "\nundefined8 FUN_0010f6d0(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f670(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00103e30": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0011ff50)();\n  return;\n}\n\n", 
    "00103d10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_waitpid_0011fec0)();\n  return _Var1;\n}\n\n", 
    "0010cbc0": "\nvoid FUN_0010cbc0(undefined8 *param_1,ulong param_2,long param_3)\n\n{\n  undefined8 *puVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  uint uVar4;\n  long lVar5;\n  uint uVar6;\n  ulong uVar7;\n  undefined8 *puVar8;\n  uint uVar9;\n  ulong uVar10;\n  void *__dest;\n  \n  if (*(uint *)(param_3 + 0x18) != 0) {\n    uVar10 = (ulong)*(uint *)(param_3 + 0x18);\n    lVar5 = param_3 + 0x1c;\n    uVar3 = 0x80 - uVar10;\n    if (param_2 < 0x80 - uVar10) {\n      uVar3 = param_2;\n    }\n    memcpy((void *)(lVar5 + uVar10),param_1,uVar3);\n    uVar9 = *(int *)(param_3 + 0x18) + (int)uVar3;\n    *(uint *)(param_3 + 0x18) = uVar9;\n    if (0x40 < uVar9) {\n      FUN_0010c320(lVar5,uVar9 & 0xffffffc0,param_3);\n      uVar9 = *(uint *)(param_3 + 0x18);\n      puVar8 = (undefined8 *)((uVar10 + uVar3 & 0xffffffffffffffc0) + lVar5);\n      uVar6 = uVar9 & 0x3f;\n      uVar10 = (ulong)uVar6;\n      *(uint *)(param_3 + 0x18) = uVar6;\n      if (uVar6 < 8) {\n        if ((uVar9 & 4) == 0) {\n          if ((uVar6 != 0) &&\n             (*(undefined *)(param_3 + 0x1c) = *(undefined *)puVar8, (uVar9 & 2) != 0)) {\n            *(undefined2 *)(param_3 + 0x1a + uVar10) = *(undefined2 *)((long)puVar8 + (uVar10 - 2));\n          }\n        }\n        else {\n          *(undefined4 *)(param_3 + 0x1c) = *(undefined4 *)puVar8;\n          *(undefined4 *)(param_3 + 0x18 + uVar10) = *(undefined4 *)((long)puVar8 + (uVar10 - 4));\n        }\n      }\n      else {\n        *(undefined8 *)(param_3 + 0x1c) = *puVar8;\n        *(undefined8 *)(param_3 + 0x14 + uVar10) = *(undefined8 *)((long)puVar8 + (uVar10 - 8));\n        uVar10 = param_3 + 0x24U & 0xfffffffffffffff8;\n        lVar5 = lVar5 - uVar10;\n        uVar9 = (int)lVar5 + uVar6 & 0xfffffff8;\n        if (7 < uVar9) {\n          uVar7 = 0;\n          do {\n            uVar6 = (int)uVar7 + 8;\n            *(undefined8 *)(uVar10 + uVar7) = *(undefined8 *)((long)puVar8 + (uVar7 - lVar5));\n            uVar7 = (ulong)uVar6;\n          } while (uVar6 < uVar9);\n        }\n      }\n    }\n    param_1 = (undefined8 *)((long)param_1 + uVar3);\n    param_2 = param_2 - uVar3;\n  }\n  puVar8 = param_1;\n  if (0x3f < param_2) {\n    if (((ulong)param_1 & 3) != 0) {\n      if (param_2 != 0x40) {\n        uVar3 = param_2 - 0x41 >> 6;\n        do {\n          uVar2 = param_1[1];\n          puVar8 = param_1 + 8;\n          *(undefined8 *)(param_3 + 0x1c) = *param_1;\n          *(undefined8 *)(param_3 + 0x24) = uVar2;\n          uVar2 = param_1[3];\n          *(undefined8 *)(param_3 + 0x2c) = param_1[2];\n          *(undefined8 *)(param_3 + 0x34) = uVar2;\n          uVar2 = param_1[5];\n          *(undefined8 *)(param_3 + 0x3c) = param_1[4];\n          *(undefined8 *)(param_3 + 0x44) = uVar2;\n          uVar2 = param_1[7];\n          *(undefined8 *)(param_3 + 0x4c) = param_1[6];\n          *(undefined8 *)(param_3 + 0x54) = uVar2;\n          FUN_0010c320((undefined8 *)(param_3 + 0x1c),0x40,param_3);\n          param_1 = puVar8;\n        } while (puVar8 != param_1 + (uVar3 + 1) * 8);\n        param_2 = (param_2 - 0x40) + uVar3 * -0x40;\n        puVar8 = param_1 + (uVar3 + 1) * 8;\n      }\n      goto LAB_0010cc72;\n    }\n    puVar8 = (undefined8 *)((long)param_1 + (param_2 & 0xffffffffffffffc0));\n    FUN_0010c320(param_1,param_2 & 0xffffffffffffffc0,param_3);\n    param_2 = (ulong)((uint)param_2 & 0x3f);\n  }\n  if (param_2 == 0) {\n    return;\n  }\nLAB_0010cc72:\n  __dest = (void *)(param_3 + 0x1c);\n  uVar9 = *(uint *)(param_3 + 0x18);\n  puVar1 = (undefined8 *)((long)__dest + (ulong)uVar9);\n  uVar6 = (uint)param_2;\n  if (uVar6 < 8) {\n    if ((param_2 & 4) == 0) {\n      if ((uVar6 != 0) && (*(undefined *)puVar1 = *(undefined *)puVar8, (param_2 & 2) != 0)) {\n        *(undefined2 *)((long)puVar1 + ((param_2 & 0xffffffff) - 2)) =\n             *(undefined2 *)((long)puVar8 + ((param_2 & 0xffffffff) - 2));\n      }\n    }\n    else {\n      *(undefined4 *)puVar1 = *(undefined4 *)puVar8;\n      *(undefined4 *)((long)puVar1 + ((param_2 & 0xffffffff) - 4)) =\n           *(undefined4 *)((long)puVar8 + ((param_2 & 0xffffffff) - 4));\n    }\n  }\n  else {\n    *puVar1 = *puVar8;\n    *(undefined8 *)((long)puVar1 + ((param_2 & 0xffffffff) - 8)) =\n         *(undefined8 *)((long)puVar8 + ((param_2 & 0xffffffff) - 8));\n    lVar5 = (long)puVar1 - ((ulong)(puVar1 + 1) & 0xfffffffffffffff8);\n    uVar6 = (int)lVar5 + uVar6 & 0xfffffff8;\n    if (7 < uVar6) {\n      uVar3 = 0;\n      do {\n        uVar4 = (int)uVar3 + 8;\n        *(undefined8 *)(((ulong)(puVar1 + 1) & 0xfffffffffffffff8) + uVar3) =\n             *(undefined8 *)((long)puVar8 + (uVar3 - lVar5));\n        uVar3 = (ulong)uVar4;\n      } while (uVar4 < uVar6);\n    }\n  }\n  param_2 = param_2 + uVar9;\n  if (0x3f < param_2) {\n    param_2 = param_2 - 0x40;\n    FUN_0010c320(__dest,0x40,param_3);\n    memcpy(__dest,(void *)(param_3 + 0x5c),param_2);\n  }\n  *(int *)(param_3 + 0x18) = (int)param_2;\n  return;\n}\n\n", 
    "001114a0": "\nvoid FUN_001114a0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010f600(auStack_58);\n  FUN_00110f70(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010bad0": "\nvoid FUN_0010bad0(void)\n\n{\n  DAT_00120130 = 2;\n  return;\n}\n\n", 
    "0010caa0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010caa0(long param_1,undefined8 param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  int iVar4;\n  long lVar5;\n  undefined8 *puVar6;\n  uint uVar7;\n  undefined8 *puVar8;\n  \n  uVar1 = *(uint *)(param_1 + 0x18);\n  iVar4 = *(int *)(param_1 + 0x14);\n  uVar2 = *(uint *)(param_1 + 0x10);\n  uVar7 = uVar1 + *(uint *)(param_1 + 0x10);\n  *(uint *)(param_1 + 0x10) = uVar7;\n  if (CARRY4(uVar1,uVar2)) {\n    iVar4 = iVar4 + 1;\n    *(int *)(param_1 + 0x14) = iVar4;\n  }\n  uVar3 = ((-(ulong)(uVar1 < 0x38) & 0xffffffffffffffc0) + 0x78) - (ulong)uVar1;\n  *(uint *)(param_1 + 0x1c + ((-(ulong)(uVar1 < 0x38) & 0xfffffffffffffff0) + 0x1e) * 4) = uVar7 * 8\n  ;\n  *(uint *)(param_1 + 0x1c + ((-(ulong)(uVar1 < 0x38) & 0xfffffffffffffff0) + 0x1f) * 4) =\n       iVar4 << 3 | uVar7 >> 0x1d;\n  puVar8 = (undefined8 *)(param_1 + 0x1c + (ulong)uVar1);\n  if (uVar3 < 8) {\n    if ((uVar3 & 4) == 0) {\n      if ((uVar3 != 0) && (*(char *)puVar8 = (char)_DAT_00117fe0, (uVar3 & 2) != 0)) {\n        *(undefined2 *)((long)puVar8 + (uVar3 - 2)) = *(undefined2 *)(&DAT_00117fde + uVar3);\n      }\n    }\n    else {\n      *(undefined4 *)puVar8 = _DAT_00117fe0;\n      *(undefined4 *)((long)puVar8 + (uVar3 - 4)) = *(undefined4 *)(&DAT_00117fdc + uVar3);\n    }\n  }\n  else {\n    *puVar8 = CONCAT44(_UNK_00117fe4,_DAT_00117fe0);\n    *(undefined8 *)((long)puVar8 + (uVar3 - 8)) = *(undefined8 *)(&DAT_00117fd8 + uVar3);\n    lVar5 = (long)puVar8 - (long)(undefined8 *)((ulong)(puVar8 + 1) & 0xfffffffffffffff8);\n    puVar6 = (undefined8 *)(&DAT_00117fe0 + -lVar5);\n    puVar8 = (undefined8 *)((ulong)(puVar8 + 1) & 0xfffffffffffffff8);\n    for (uVar3 = uVar3 + lVar5 >> 3; uVar3 != 0; uVar3 = uVar3 - 1) {\n      *puVar8 = *puVar6;\n      puVar6 = puVar6 + 1;\n      puVar8 = puVar8 + 1;\n    }\n  }\n  FUN_0010c320(param_1 + 0x1c,(-(ulong)(uVar1 < 0x38) & 0xffffffffffffffc0) + 0x80,param_1);\n  FUN_0010c2e0(param_1,param_2);\n  return;\n}\n\n", 
    "00105400": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105400(undefined8 param_1)\n\n{\n  if (DAT_001203a8 == _DAT_001203a0) {\n    DAT_001203b0 = FUN_00113410(DAT_001203b0,&DAT_001203a0,8);\n  }\n  *(undefined8 *)(DAT_001203b0 + DAT_001203a8 * 8) = param_1;\n  DAT_001203a8 = DAT_001203a8 + 1;\n  return;\n}\n\n", 
    "00114f60": "\nint FUN_00114f60(long param_1,int param_2,long param_3,int param_4)\n\n{\n  int iVar1;\n  \n  if (param_3 <= param_1) {\n    iVar1 = 1;\n    if (param_1 <= param_3) {\n      iVar1 = param_2 - param_4;\n    }\n    return iVar1;\n  }\n  return -1;\n}\n\n", 
    "0010fc80": "\nchar * FUN_0010fc80(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00114d30();\n    iVar1 = FUN_0010fbd0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_0010fbd0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00118159;\n      }\n      else {\n        pcVar2 = &DAT_00118156;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0011815d;\n    }\n    else {\n      pcVar2 = &DAT_00118152;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00121098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d5e0": "\nulong FUN_0010d5e0(ulong param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  uVar1 = param_1 - (param_1 / 3 +\n                    (SUB168(ZEXT816(param_1) * ZEXT816(0xaaaaaaaaaaaaaaab) >> 0x40,0) &\n                    0xfffffffffffffffe));\n  uVar3 = uVar1;\n  if ((9 < param_1) && (uVar1 != 0)) {\n    lVar5 = 0x10;\n    uVar4 = 9;\n    uVar2 = 3;\n    do {\n      uVar2 = uVar2 + 2;\n      uVar4 = uVar4 + lVar5;\n      uVar1 = param_1 / uVar2;\n      uVar3 = param_1 % uVar2;\n      if (param_1 <= uVar4) break;\n      lVar5 = lVar5 + 8;\n    } while (uVar3 != 0);\n  }\n  return uVar1 & 0xffffffffffffff00 | (ulong)(uVar3 != 0);\n}\n\n", 
    "0010b2e0": "\nlong FUN_0010b2e0(FILE **param_1,long param_2,ulong param_3,long param_4)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  int iVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  long lVar9;\n  long lVar10;\n  ulong uVar11;\n  long in_FS_OFFSET;\n  bool bVar12;\n  undefined local_d8 [24];\n  uint local_c0;\n  ulong local_a8;\n  long local_40;\n  \n  lVar9 = param_4 + 2;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 == 0) {\nLAB_0010b453:\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return lVar9;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  uVar1 = param_4 + 1;\n  uVar11 = 0;\n  uVar7 = param_3;\n  lVar10 = lVar9;\n  do {\n    if (uVar11 == 0) {\n      iVar4 = fileno(*param_1);\n      iVar4 = FUN_001150c0(iVar4,local_d8);\n      bVar12 = iVar4 != 0;\n    }\n    else {\n      pcVar2 = *(char **)(param_2 + uVar11 * 8);\n      if ((*pcVar2 == '-') && (pcVar2[1] == '\\0')) {\n        iVar4 = FUN_001150c0(0);\n        bVar12 = iVar4 != 0;\n      }\n      else {\n        iVar4 = FUN_001150a0(pcVar2,local_d8,uVar7);\n        bVar12 = iVar4 != 0;\n      }\n    }\n    if (bVar12) {\n      uVar3 = *(undefined8 *)(param_2 + uVar11 * 8);\n      uVar5 = dcgettext(0,\"stat failed\",5);\n                    /* WARNING: Subroutine does not return */\n      FUN_001062b0(uVar5,uVar3);\n    }\n    if ((local_c0 & 0xf000) == 0x8000) {\n      uVar8 = local_a8;\n      lVar9 = DAT_001203b8;\n      if (DAT_00120220 == 0) goto joined_r0x0010b34f;\n    }\n    else {\n      lVar9 = DAT_001203b8;\n      if (DAT_001203b8 != 0) goto LAB_0010b453;\n      uVar8 = 0x20000;\n      lVar9 = DAT_00120220;\njoined_r0x0010b34f:\n      DAT_00120220 = lVar9;\n      if (DAT_00120220 == 0) {\n        DAT_00120220 = FUN_00107c10();\n      }\n    }\n    uVar6 = uVar1 * uVar8 + 1;\n    uVar7 = uVar6 % uVar1;\n    lVar9 = DAT_00120220;\n    if ((uVar6 / uVar1 != uVar8) || ((ulong)(DAT_00120220 - lVar10) <= uVar6)) goto LAB_0010b453;\n    uVar11 = uVar11 + 1;\n    lVar9 = lVar10 + uVar6;\n    lVar10 = lVar9;\n    if (uVar11 == param_3) goto LAB_0010b453;\n  } while( true );\n}\n\n", 
    "0010e5b0": "\nundefined8 FUN_0010e5b0(undefined8 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_0010e340(param_1,param_2,&local_18);\n  if (iVar1 == -1) {\n    param_2 = 0;\n  }\n  else if (iVar1 == 0) {\n    param_2 = local_18;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001039a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getuid_0011fd08)();\n  return _Var1;\n}\n\n", 
    "00107ad0": "\nlong FUN_00107ad0(FILE **param_1,undefined param_2)\n\n{\n  int iVar1;\n  long lVar2;\n  FILE *pFVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  long in_FS_OFFSET;\n  bool bVar6;\n  int local_2c;\n  int local_28;\n  int local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = FUN_00107930(&local_2c,param_2);\n  if (lVar2 != 0) {\n    bVar6 = DAT_00120388 != (char *)0x0;\n    *(undefined *)(lVar2 + 0xc) = 0;\n    if (bVar6) {\n      iVar1 = FUN_00107430(&local_28,4);\n      *(int *)(lVar2 + 8) = iVar1;\n      if (iVar1 < 1) {\n        if (iVar1 == 0) {\n          close(local_24);\n          FUN_00107070(local_2c,1);\n          FUN_00107070(local_28,0);\n          execlp(DAT_00120388,DAT_00120388,0);\n          piVar5 = __errno_location();\n          FUN_001075c0(*piVar5,\"couldn\\'t execute compress program\");\n          goto LAB_00107bec;\n        }\n      }\n      else {\n        close(local_2c);\n        close(local_28);\n        local_2c = local_24;\n        FUN_00107690(lVar2);\n      }\n    }\n    pFVar3 = fdopen(local_2c,\"w\");\n    *param_1 = pFVar3;\n    if (pFVar3 == (FILE *)0x0) {\n      uVar4 = dcgettext(0,\"couldn\\'t create temporary file\",5);\n                    /* WARNING: Subroutine does not return */\n      FUN_001062b0(uVar4,lVar2 + 0xd);\n    }\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar2;\n  }\nLAB_00107bec:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c2b0": "\nvoid FUN_0010c2b0(undefined8 *param_1)\n\n{\n  param_1[2] = 0;\n  *param_1 = 0xefcdab8967452301;\n  param_1[1] = 0x1032547698badcfe;\n  *(undefined4 *)(param_1 + 3) = 0;\n  return;\n}\n\n", 
    "00121090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0011fdb8)();\n  return iVar1;\n}\n\n", 
    "0010d090": "\nvoid FUN_0010d090(FILE *param_1,int param_2)\n\n{\n  int __fd;\n  \n  if (param_1 != (FILE *)0x0) {\n    __fd = fileno(param_1);\n    posix_fadvise(__fd,0,0,param_2);\n    return;\n  }\n  return;\n}\n\n", 
    "00103d40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0011fed8)();\n  return iVar1;\n}\n\n", 
    "0010f030": "\nulong FUN_0010f030(undefined8 param_1)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  ulong uVar3;\n  \n  uVar3 = 0xffffffffffffffff;\n  if ((int)param_1 == 2) {\n    pcVar2 = getenv(\"OMP_NUM_THREADS\");\n    uVar1 = FUN_0010ee50(pcVar2);\n    pcVar2 = getenv(\"OMP_THREAD_LIMIT\");\n    uVar3 = FUN_0010ee50(pcVar2);\n    param_1 = 1;\n    if (uVar3 == 0) {\n      uVar3 = 0xffffffffffffffff;\n    }\n    if (uVar1 != 0) {\n      if (uVar3 <= uVar1) {\n        uVar1 = uVar3;\n      }\n      return uVar1;\n    }\n  }\n  uVar1 = FUN_0010efc0(param_1);\n  if (uVar3 <= uVar1) {\n    uVar1 = uVar3;\n  }\n  return uVar1;\n}\n\n", 
    "00103c20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0011fe48)();\n  return iVar1;\n}\n\n", 
    "00111170": "\nvoid FUN_00111170(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00120920;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00103e60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_unlocked_0011ff68)();\n  return iVar1;\n}\n\n", 
    "00108cb0": "\nvoid FUN_00108cb0(long param_1,ulong param_2,long param_3,char param_4)\n\n{\n  undefined4 uVar1;\n  undefined4 uVar2;\n  undefined4 uVar3;\n  undefined4 uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  undefined4 uVar7;\n  undefined4 uVar8;\n  undefined4 uVar9;\n  undefined4 uVar10;\n  undefined4 uVar11;\n  undefined4 uVar12;\n  undefined4 uVar13;\n  undefined4 uVar14;\n  undefined4 uVar15;\n  undefined4 uVar16;\n  int iVar17;\n  undefined4 *puVar18;\n  long lVar19;\n  undefined4 *puVar20;\n  ulong uVar21;\n  \n  if (param_2 != 2) {\n    uVar21 = param_2 >> 1;\n    lVar19 = param_1 + uVar21 * -0x20;\n    if (param_4 == '\\0') {\n      FUN_00108cb0(lVar19,param_2 - uVar21,param_3,0);\n      lVar19 = param_3;\n      if (param_2 < 4) {\n        uVar1 = *(undefined4 *)(param_1 + -0x1c);\n        uVar2 = *(undefined4 *)(param_1 + -0x18);\n        uVar3 = *(undefined4 *)(param_1 + -0x14);\n        uVar4 = *(undefined4 *)(param_1 + -0x10);\n        uVar5 = *(undefined4 *)(param_1 + -0xc);\n        uVar6 = *(undefined4 *)(param_1 + -8);\n        uVar7 = *(undefined4 *)(param_1 + -4);\n        *(undefined4 *)(param_3 + -0x20) = *(undefined4 *)(param_1 + -0x20);\n        *(undefined4 *)(param_3 + -0x1c) = uVar1;\n        *(undefined4 *)(param_3 + -0x18) = uVar2;\n        *(undefined4 *)(param_3 + -0x14) = uVar3;\n        *(undefined4 *)(param_3 + -0x10) = uVar4;\n        *(undefined4 *)(param_3 + -0xc) = uVar5;\n        *(undefined4 *)(param_3 + -8) = uVar6;\n        *(undefined4 *)(param_3 + -4) = uVar7;\n        param_3 = param_1;\n      }\n      else {\n        FUN_00108cb0(param_1,uVar21,param_3,1);\n        param_3 = param_1;\n      }\n    }\n    else {\n      FUN_00108cb0(lVar19,param_2 - uVar21,uVar21 * -0x20 + param_3,1);\n      lVar19 = param_1;\n      if (3 < param_2) {\n        FUN_00108cb0(param_1,uVar21,param_3,0);\n      }\n    }\n    FUN_00108bd0(param_3,param_2,lVar19);\n    return;\n  }\n  iVar17 = FUN_00108b00(param_1 + -0x20,param_1 + -0x40);\n  if (param_4 == '\\0') {\n    if (0 < iVar17) {\n      uVar1 = *(undefined4 *)(param_1 + -0x20);\n      uVar2 = *(undefined4 *)(param_1 + -0x1c);\n      uVar3 = *(undefined4 *)(param_1 + -0x18);\n      uVar4 = *(undefined4 *)(param_1 + -0x14);\n      uVar5 = *(undefined4 *)(param_1 + -0x10);\n      uVar6 = *(undefined4 *)(param_1 + -0xc);\n      uVar7 = *(undefined4 *)(param_1 + -8);\n      uVar8 = *(undefined4 *)(param_1 + -4);\n      uVar9 = *(undefined4 *)(param_1 + -0x40);\n      uVar10 = *(undefined4 *)(param_1 + -0x3c);\n      uVar11 = *(undefined4 *)(param_1 + -0x38);\n      uVar12 = *(undefined4 *)(param_1 + -0x34);\n      uVar13 = *(undefined4 *)(param_1 + -0x30);\n      uVar14 = *(undefined4 *)(param_1 + -0x2c);\n      uVar15 = *(undefined4 *)(param_1 + -0x28);\n      uVar16 = *(undefined4 *)(param_1 + -0x24);\n      *(undefined4 *)(param_3 + -0x20) = uVar1;\n      *(undefined4 *)(param_3 + -0x1c) = uVar2;\n      *(undefined4 *)(param_3 + -0x18) = uVar3;\n      *(undefined4 *)(param_3 + -0x14) = uVar4;\n      *(undefined4 *)(param_3 + -0x10) = uVar5;\n      *(undefined4 *)(param_3 + -0xc) = uVar6;\n      *(undefined4 *)(param_3 + -8) = uVar7;\n      *(undefined4 *)(param_3 + -4) = uVar8;\n      *(undefined4 *)(param_1 + -0x20) = uVar9;\n      *(undefined4 *)(param_1 + -0x1c) = uVar10;\n      *(undefined4 *)(param_1 + -0x18) = uVar11;\n      *(undefined4 *)(param_1 + -0x14) = uVar12;\n      *(undefined4 *)(param_1 + -0x10) = uVar13;\n      *(undefined4 *)(param_1 + -0xc) = uVar14;\n      *(undefined4 *)(param_1 + -8) = uVar15;\n      *(undefined4 *)(param_1 + -4) = uVar16;\n      *(undefined4 *)(param_1 + -0x40) = uVar1;\n      *(undefined4 *)(param_1 + -0x3c) = uVar2;\n      *(undefined4 *)(param_1 + -0x38) = uVar3;\n      *(undefined4 *)(param_1 + -0x34) = uVar4;\n      *(undefined4 *)(param_1 + -0x30) = uVar5;\n      *(undefined4 *)(param_1 + -0x2c) = uVar6;\n      *(undefined4 *)(param_1 + -0x28) = uVar7;\n      *(undefined4 *)(param_1 + -0x24) = uVar8;\n    }\n    return;\n  }\n  puVar18 = (undefined4 *)((long)(int)~(uint)(0 < iVar17) * 0x20 + param_1);\n  puVar20 = (undefined4 *)(param_1 + (long)(int)((0 < iVar17) - 2) * 0x20);\n  uVar1 = puVar20[1];\n  uVar2 = puVar20[2];\n  uVar3 = puVar20[3];\n  uVar4 = puVar20[4];\n  uVar5 = puVar20[5];\n  uVar6 = puVar20[6];\n  uVar7 = puVar20[7];\n  uVar8 = *puVar18;\n  uVar9 = puVar18[1];\n  uVar10 = puVar18[2];\n  uVar11 = puVar18[3];\n  uVar12 = puVar18[4];\n  uVar13 = puVar18[5];\n  uVar14 = puVar18[6];\n  uVar15 = puVar18[7];\n  *(undefined4 *)(param_3 + -0x40) = *puVar20;\n  *(undefined4 *)(param_3 + -0x3c) = uVar1;\n  *(undefined4 *)(param_3 + -0x38) = uVar2;\n  *(undefined4 *)(param_3 + -0x34) = uVar3;\n  *(undefined4 *)(param_3 + -0x20) = uVar8;\n  *(undefined4 *)(param_3 + -0x1c) = uVar9;\n  *(undefined4 *)(param_3 + -0x18) = uVar10;\n  *(undefined4 *)(param_3 + -0x14) = uVar11;\n  *(undefined4 *)(param_3 + -0x10) = uVar12;\n  *(undefined4 *)(param_3 + -0xc) = uVar13;\n  *(undefined4 *)(param_3 + -8) = uVar14;\n  *(undefined4 *)(param_3 + -4) = uVar15;\n  *(undefined4 *)(param_3 + -0x30) = uVar4;\n  *(undefined4 *)(param_3 + -0x2c) = uVar5;\n  *(undefined4 *)(param_3 + -0x28) = uVar6;\n  *(undefined4 *)(param_3 + -0x24) = uVar7;\n  return;\n}\n\n", 
    "00121088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001127a0": "\nuint FUN_001127a0(char *param_1,char *param_2,char param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  char *pcVar3;\n  char cVar4;\n  char cVar5;\n  int iVar6;\n  int iVar7;\n  char *pcVar8;\n  \n  if (*param_1 != param_3) {\n    if (param_3 != *param_2) {\n      return 0;\n    }\n    iVar7 = (int)param_2[1];\n    param_2 = param_2 + 1;\nLAB_00112838:\n    while ((char)iVar7 == '0') {\n      pcVar8 = param_2 + 1;\n      param_2 = param_2 + 1;\n      iVar7 = (int)*pcVar8;\n    }\n    return -(uint)(iVar7 - 0x30U < 10);\n  }\n  iVar6 = (int)param_1[1];\n  if (param_3 == *param_2) {\n    while( true ) {\n      cVar4 = param_2[1];\n      iVar7 = (int)cVar4;\n      cVar5 = (char)iVar6;\n      param_2 = param_2 + 1;\n      pcVar8 = param_1 + 1;\n      uVar1 = (int)cVar5 - 0x30;\n      if (cVar4 != cVar5) break;\n      if (9 < uVar1) {\n        return 0;\n      }\n      iVar6 = (int)param_1[2];\n      param_1 = pcVar8;\n    }\n    uVar2 = (int)cVar4 - 0x30;\n    if (9 < uVar1) {\n      if (9 < uVar2) {\n        return 0;\n      }\n      goto LAB_00112838;\n    }\n    if (uVar2 < 10) {\n      return (int)cVar5 - (int)cVar4;\n    }\n  }\n  else {\n    pcVar8 = param_1 + 1;\n  }\n  while ((char)iVar6 == '0') {\n    pcVar3 = pcVar8 + 1;\n    pcVar8 = pcVar8 + 1;\n    iVar6 = (int)*pcVar3;\n  }\n  return (uint)(iVar6 - 0x30U < 10);\n}\n\n", 
    "00106720": "\nvoid FUN_00106720(char *param_1,char *param_2)\n\n{\n  long in_FS_OFFSET;\n  undefined local_38 [16];\n  undefined local_28 [24];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  strtold(param_1,(char **)0x0);\n  strtold(param_2,(char **)0x0);\n  memcmp(local_38,local_28,0x10);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107930": "\nundefined8 * FUN_00107930(int *param_1,char param_2)\n\n{\n  int iVar1;\n  char *__s;\n  int iVar2;\n  size_t __n;\n  undefined8 *__ptr;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 *puVar6;\n  long in_FS_OFFSET;\n  undefined local_c8 [136];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s = *(char **)(DAT_001203b0 + DAT_00120228 * 8);\n  __n = strlen(__s);\n  __ptr = (undefined8 *)FUN_00113340(__n + 0x20 & 0xfffffffffffffff8);\n  memcpy((void *)((long)__ptr + 0xd),__s,__n);\n  *(undefined8 *)((long)__ptr + __n + 0xd) = s__sortXXXXXX_001162f0._0_8_;\n  *(undefined4 *)((long)__ptr + __n + 0x15) = s__sortXXXXXX_001162f0._8_4_;\n  *__ptr = 0;\n  DAT_00120228 = DAT_00120228 + 1;\n  if (DAT_00120228 == DAT_001203a8) {\n    DAT_00120228 = 0;\n  }\n  FUN_00105ab0(local_c8);\n  iVar2 = FUN_00112780((void *)((long)__ptr + 0xd),0x80000);\n  piVar3 = __errno_location();\n  if (iVar2 < 0) {\n    iVar1 = *piVar3;\n    FUN_00105ad0(local_c8);\n    *piVar3 = iVar1;\n    if ((param_2 != '\\x01') || (iVar1 != 0x18)) {\n      uVar4 = FUN_00111570(4,__s);\n      uVar5 = dcgettext(0,\"cannot create temporary file in %s\",5);\n                    /* WARNING: Subroutine does not return */\n      error(2,*piVar3,uVar5,uVar4);\n    }\n    puVar6 = (undefined8 *)0x0;\n    free(__ptr);\n  }\n  else {\n    iVar1 = *piVar3;\n    puVar6 = __ptr;\n    *(undefined8 **)PTR_DAT_00120040 = __ptr;\n    PTR_DAT_00120040 = (undefined *)puVar6;\n    FUN_00105ad0(local_c8);\n    *piVar3 = iVar1;\n    puVar6 = __ptr;\n  }\n  *param_1 = iVar2;\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return puVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114d30": "\nchar * FUN_00114d30(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106960": "\nvoid FUN_00106960(char *param_1,char *param_2,size_t param_3)\n\n{\n  int *piVar1;\n  undefined8 uVar2;\n  \n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  strxfrm(param_1,param_2,param_3);\n  if (*piVar1 == 0) {\n    return;\n  }\n  uVar2 = dcgettext(0,\"string transformation failed\",5);\n                    /* WARNING: Subroutine does not return */\n  error(0,*piVar1,uVar2);\n}\n\n", 
    "00114c10": "\nuint FUN_00114c10(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00114c70();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "001213a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105990": "\nvoid FUN_00105990(undefined8 param_1)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"options \\'-%s\\' are incompatible\",5);\n                    /* WARNING: Subroutine does not return */\n  error(2,0,uVar1,param_1);\n}\n\n", 
    "0010ea80": "\nundefined8 FUN_0010ea80(long *param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  lVar1 = param_1[2];\n  uVar4 = 0;\n  if (lVar1 != 0) {\n    lVar2 = *param_1;\n    uVar3 = *(undefined8 *)(lVar2 + lVar1 * 8);\n    uVar4 = *(undefined8 *)(lVar2 + 8);\n    param_1[2] = lVar1 + -1;\n    *(undefined8 *)(lVar2 + 8) = uVar3;\n    FUN_0010e8a0(*param_1,lVar1 + -1,param_1[3]);\n  }\n  return uVar4;\n}\n\n", 
    "001213a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d3b0": "\nint FUN_0010d3b0(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  char cVar2;\n  int iVar3;\n  int iVar4;\n  long lVar5;\n  long lVar6;\n  size_t sVar7;\n  size_t __n;\n  long in_FS_OFFSET;\n  char *local_40;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar3 = strcmp(param_1,param_2);\n  if (iVar3 == 0) goto LAB_0010d419;\n  cVar1 = *param_1;\n  if (cVar1 == '\\0') {\nLAB_0010d518:\n    iVar3 = -1;\n    goto LAB_0010d419;\n  }\n  cVar2 = *param_2;\n  if (cVar2 == '\\0') {\nLAB_0010d413:\n    iVar3 = 1;\n    goto LAB_0010d419;\n  }\n  if ((cVar1 == '.') && (param_1[1] == '\\0')) goto LAB_0010d518;\n  if ((*param_2 == '.') && (param_2[1] == '\\0')) goto LAB_0010d413;\n  if (((*param_1 == '.') && (param_1[1] == '.')) && (param_1[2] == '\\0')) goto LAB_0010d518;\n  if (((*param_2 == '.') && (param_2[1] == '.')) && (param_2[2] == '\\0')) goto LAB_0010d413;\n  if ((cVar2 != '.') && (cVar1 == '.')) goto LAB_0010d518;\n  if ((cVar1 != '.') && (cVar2 == '.')) goto LAB_0010d413;\n  if ((cVar1 == '.') && (cVar2 == '.')) {\n    param_1 = param_1 + 1;\n    param_2 = param_2 + 1;\n  }\n  local_40 = param_1;\n  local_38 = param_2;\n  lVar5 = FUN_0010d0c0(&local_40);\n  lVar6 = FUN_0010d0c0(&local_38);\n  if (lVar5 == 0) {\n    __n = (long)local_40 - (long)param_1;\n    if (lVar6 != 0) goto LAB_0010d4c6;\nLAB_0010d535:\n    sVar7 = (long)local_38 - (long)param_2;\n  }\n  else {\n    __n = lVar5 - (long)param_1;\n    if (lVar6 == 0) {\n      sVar7 = (long)local_38 - (long)param_2;\n    }\n    else {\nLAB_0010d4c6:\n      sVar7 = lVar6 - (long)param_2;\n    }\n    if ((__n == sVar7) && (iVar4 = strncmp(param_1,param_2,__n), iVar4 == 0)) {\n      __n = (long)local_40 - (long)param_1;\n      goto LAB_0010d535;\n    }\n  }\n  iVar4 = FUN_0010d1f0(param_1,__n,param_2,sVar7);\n  if (iVar4 != 0) {\n    iVar3 = iVar4;\n  }\nLAB_0010d419:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar3;\n}\n\n", 
    "00103c10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_unlock(pthread_mutex_t *__mutex)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_mutex_unlock_0011fe40)();\n  return iVar1;\n}\n\n", 
    "00113360": "\nvoid FUN_00113360(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00113340();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00113560();\n}\n\n", 
    "00103e50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sched_getaffinity(__pid_t __pid,size_t __cpusetsize,cpu_set_t *__cpuset)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sched_getaffinity_0011ff60)();\n  return iVar1;\n}\n\n", 
    "00103d30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0011fed0)();\n  return iVar1;\n}\n\n", 
    "0010ded0": "\nvoid FUN_0010ded0(undefined8 *param_1)\n\n{\n  *(undefined *)(param_1 + 2) = 0;\n  *param_1 = 0x3f80000000000000;\n  param_1[1] = 0x3fb4fdf43f4ccccd;\n  return;\n}\n\n", 
    "0010efc0": "\nlong FUN_0010efc0(int param_1)\n\n{\n  long lVar1;\n  \n  if (param_1 == 1) {\n    lVar1 = FUN_0010ef50();\n    if (lVar1 != 0) {\n      return lVar1;\n    }\n    lVar1 = sysconf(0x54);\n  }\n  else {\n    lVar1 = sysconf(0x53);\n    if ((lVar1 == 1) && (lVar1 = FUN_0010ef50(), lVar1 == 0)) {\n      return 1;\n    }\n  }\n  if (lVar1 < 1) {\n    lVar1 = 1;\n  }\n  return lVar1;\n}\n\n", 
    "001115a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001115a0(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00120920;\n  uStack_40 = uRam0000000000120928;\n  local_38 = _DAT_00120930;\n  uStack_30 = uRam0000000000120938;\n  local_28 = _DAT_00120940;\n  uStack_20 = uRam0000000000120948;\n  local_18 = DAT_00120950;\n  FUN_00111190(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00110f70(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001083e0": "\nuint FUN_001083e0(char **param_1,char **param_2)\n\n{\n  ulong uVar1;\n  long lVar2;\n  char cVar3;\n  byte bVar4;\n  uint uVar5;\n  int iVar6;\n  int iVar7;\n  ulong uVar8;\n  char *pcVar9;\n  char *pcVar10;\n  char *__s1;\n  char *pcVar11;\n  char extraout_DL;\n  char extraout_DL_00;\n  int extraout_EDX;\n  uint extraout_EDX_00;\n  long extraout_RDX;\n  long *plVar12;\n  ulong uVar13;\n  char *pcVar14;\n  long in_FS_OFFSET;\n  ulong local_1020;\n  char local_1002;\n  char local_1001;\n  char *local_ff8;\n  char local_fe8;\n  char acStack_fe7 [4007];\n  long local_40;\n  \n  __s1 = param_1[2];\n  pcVar11 = param_2[2];\n  pcVar9 = param_1[3];\n  pcVar10 = param_2[3];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  plVar12 = DAT_00120390;\nLAB_00108440:\n  uVar8 = plVar12[5];\n  uVar1 = plVar12[4];\n  if (pcVar9 <= __s1) {\n    pcVar9 = __s1;\n  }\n  if (pcVar10 <= pcVar11) {\n    pcVar10 = pcVar11;\n  }\n  uVar13 = (long)pcVar9 - (long)__s1;\n  local_1020 = (long)pcVar10 - (long)pcVar11;\n  if ((((DAT_001207e1 != '\\0') || (cVar3 = FUN_001056a0(plVar12), cVar3 != '\\0')) ||\n      ((plVar12[6] & 0xff0000ff000000U) != 0)) || (*(char *)(plVar12 + 7) != '\\0')) {\n    if ((uVar8 | uVar1) == 0) {\n      local_1002 = *pcVar9;\n      *pcVar9 = '\\0';\n      local_1001 = *pcVar10;\n      *pcVar10 = '\\0';\n      pcVar10 = pcVar11;\n    }\n    else {\n      local_ff8 = (char *)0x0;\n      if (uVar13 + 2 + local_1020 < 0xfa1) {\n        pcVar9 = acStack_fe7 + uVar13;\n        pcVar10 = &local_fe8;\n        if (uVar13 != 0) goto LAB_00108823;\nLAB_0010896b:\n        *pcVar10 = '\\0';\n        __s1 = pcVar10;\n      }\n      else {\n        pcVar10 = (char *)FUN_00113340();\n        pcVar9 = pcVar10 + uVar13 + 1;\n        local_ff8 = pcVar10;\n        if (uVar13 == 0) goto LAB_0010896b;\nLAB_00108823:\n        pcVar14 = __s1 + uVar13;\n        uVar13 = 0;\n        do {\n          cVar3 = *__s1;\n          if ((uVar1 == 0) ||\n             (bVar4 = FUN_001053b0((int)cVar3), cVar3 = extraout_DL,\n             *(char *)(uVar1 + bVar4) == '\\0')) {\n            if (uVar8 != 0) {\n              bVar4 = FUN_001053b0((int)cVar3);\n              cVar3 = *(char *)(uVar8 + bVar4);\n            }\n            pcVar10[uVar13] = cVar3;\n            uVar13 = uVar13 + 1;\n          }\n          __s1 = __s1 + 1;\n        } while (pcVar14 != __s1);\n        pcVar10[uVar13] = '\\0';\n        __s1 = pcVar10;\n      }\n      pcVar10 = pcVar9;\n      if (local_1020 != 0) {\n        pcVar9 = pcVar11 + local_1020;\n        local_1020 = 0;\n        do {\n          cVar3 = *pcVar11;\n          if ((uVar1 == 0) ||\n             (bVar4 = FUN_001053b0((int)cVar3), cVar3 = extraout_DL_00,\n             *(char *)(uVar1 + bVar4) == '\\0')) {\n            if (uVar8 != 0) {\n              bVar4 = FUN_001053b0((int)cVar3);\n              cVar3 = *(char *)(uVar8 + bVar4);\n            }\n            pcVar10[local_1020] = cVar3;\n            local_1020 = local_1020 + 1;\n          }\n          pcVar11 = pcVar11 + 1;\n        } while (pcVar9 != pcVar11);\n        pcVar9 = pcVar10 + local_1020;\n      }\n      *pcVar9 = '\\0';\n    }\n    if (*(char *)((long)plVar12 + 0x32) == '\\0') {\n      if (*(char *)((long)plVar12 + 0x34) == '\\0') {\n        if (*(char *)((long)plVar12 + 0x35) == '\\0') {\n          if (*(char *)((long)plVar12 + 0x36) == '\\0') {\n            if (*(char *)((long)plVar12 + 0x33) == '\\0') {\n              if (*(char *)(plVar12 + 7) == '\\0') {\n                if (uVar13 == 0) {\n                  uVar5 = -(uint)(local_1020 != 0);\n                }\n                else {\n                  uVar5 = 1;\n                  if (local_1020 != 0) {\n                    uVar5 = FUN_001136d0(__s1,uVar13 + 1,pcVar10,local_1020 + 1);\n                  }\n                }\n              }\n              else {\n                uVar5 = FUN_0010d3b0(__s1);\n              }\n            }\n            else {\n              uVar5 = FUN_00106a20(__s1,uVar13,pcVar10,local_1020);\n            }\n          }\n          else {\n            iVar6 = FUN_001055b0(__s1,0);\n            iVar7 = FUN_001055b0(pcVar10);\n            uVar5 = iVar6 - iVar7;\n          }\n        }\n        else {\n          uVar5 = FUN_001068d0(__s1,pcVar10);\n        }\n      }\n      else {\n        uVar5 = FUN_00106780(__s1,pcVar10);\n      }\n    }\n    else {\n      uVar5 = FUN_00106870(__s1,pcVar10);\n    }\n    if ((uVar8 | uVar1) == 0) {\n      __s1[uVar13] = local_1002;\n      pcVar10[local_1020] = local_1001;\n    }\n    else {\n      free(local_ff8);\n    }\n    goto joined_r0x00108794;\n  }\n  if (uVar1 != 0) {\n    if (uVar8 == 0) {\n      do {\n        if ((pcVar9 <= __s1) || (bVar4 = FUN_001053b0((int)*__s1), *(char *)(uVar1 + bVar4) == '\\0')\n           ) {\n          pcVar14 = pcVar11;\n          if (pcVar10 <= pcVar11) goto LAB_001089d3;\n          while (uVar8 = FUN_001053b0((int)*pcVar14), *(char *)(uVar1 + (uVar8 & 0xff)) != '\\0') {\n            pcVar14 = pcVar14 + 1;\n            pcVar11 = pcVar10;\n            if (pcVar10 == pcVar14) goto LAB_001089d3;\n          }\n          pcVar11 = pcVar14;\n          if ((pcVar9 <= __s1) || (pcVar10 <= pcVar14)) goto LAB_001089d3;\n          bVar4 = FUN_001053b0((int)*__s1);\n          uVar5 = (uint)bVar4 - extraout_EDX;\n          if (uVar5 != 0) goto LAB_001087a0;\n          pcVar11 = pcVar14 + 1;\n        }\n        __s1 = __s1 + 1;\n      } while( true );\n    }\n    do {\n      if ((pcVar9 <= __s1) || (bVar4 = FUN_001053b0((int)*__s1), *(char *)(uVar1 + bVar4) == '\\0'))\n      {\n        pcVar14 = pcVar11;\n        if (pcVar10 <= pcVar11) goto LAB_00108913;\n        while (bVar4 = FUN_001053b0((int)*pcVar14), *(char *)(uVar1 + bVar4) != '\\0') {\n          pcVar14 = pcVar14 + 1;\n          pcVar11 = pcVar10;\n          if (pcVar10 == pcVar14) goto LAB_00108913;\n        }\n        pcVar11 = pcVar14;\n        if ((pcVar9 <= __s1) || (pcVar10 <= pcVar14)) goto LAB_00108913;\n        bVar4 = FUN_001053b0((int)*__s1);\n        uVar5 = FUN_001053b0((int)*(char *)(uVar8 + bVar4));\n        bVar4 = FUN_001053b0((int)*(char *)(uVar8 + extraout_RDX));\n        uVar5 = (uVar5 & 0xff) - (uint)bVar4;\n        if (uVar5 != 0) goto LAB_001087a0;\n        pcVar11 = pcVar14 + 1;\n      }\n      __s1 = __s1 + 1;\n    } while( true );\n  }\n  if (uVar13 == 0) {\n    uVar5 = -(uint)(local_1020 != 0);\n    goto joined_r0x00108794;\n  }\n  if (local_1020 == 0) {\n    uVar5 = 1;\n  }\n  else {\n    if (uVar8 == 0) {\n      uVar8 = local_1020;\n      if (uVar13 <= local_1020) {\n        uVar8 = uVar13;\n      }\n      uVar5 = memcmp(__s1,pcVar11,uVar8);\n      if (uVar5 != 0) goto LAB_001087a0;\n    }\n    else {\n      while ((__s1 < pcVar9 && (pcVar11 < pcVar10))) {\n        cVar3 = *__s1;\n        __s1 = __s1 + 1;\n        bVar4 = FUN_001053b0((int)cVar3);\n        FUN_001053b0((int)*(char *)(uVar8 + bVar4));\n        bVar4 = FUN_001053b0((int)*pcVar11);\n        uVar5 = FUN_001053b0((int)*(char *)(uVar8 + bVar4));\n        uVar5 = (extraout_EDX_00 & 0xff) - (uVar5 & 0xff);\n        pcVar11 = pcVar11 + 1;\n        if (uVar5 != 0) goto LAB_001087a0;\n      }\n    }\n    if (local_1020 <= uVar13) {\n      uVar5 = (uint)(uVar13 != local_1020);\n      goto joined_r0x00108794;\n    }\n    uVar5 = 0xffffffff;\n  }\n  goto LAB_001087a0;\nLAB_001089d3:\n  uVar5 = (uint)(__s1 < pcVar9) - (uint)(pcVar11 < pcVar10);\n  goto joined_r0x00108794;\nLAB_00108913:\n  uVar5 = (uint)(__s1 < pcVar9) - (uint)(pcVar11 < pcVar10);\njoined_r0x00108794:\n  if (uVar5 != 0) {\nLAB_001087a0:\n    if (*(char *)((long)plVar12 + 0x37) != '\\0') {\n      uVar5 = -uVar5;\n    }\nLAB_001087aa:\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return uVar5;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  plVar12 = (long *)plVar12[8];\n  if (plVar12 == (long *)0x0) goto LAB_001087aa;\n  __s1 = *param_1;\n  pcVar11 = param_1[1];\n  if (plVar12[2] == -1) {\n    lVar2 = *plVar12;\n    pcVar9 = __s1 + -1 + (long)pcVar11;\n    pcVar10 = *param_2 + -1 + (long)param_2[1];\n  }\n  else {\n    pcVar9 = (char *)FUN_00108250(__s1,pcVar11,plVar12);\n    pcVar10 = (char *)FUN_00108250(*param_2);\n    lVar2 = *plVar12;\n  }\n  if (lVar2 == -1) {\n    pcVar11 = *param_2;\n    if (*(char *)(plVar12 + 6) != '\\0') {\n      if (__s1 < pcVar9) {\n        do {\n          bVar4 = FUN_001053b0((int)*__s1);\n          if ((&DAT_001206c0)[bVar4] == '\\0') break;\n          __s1 = __s1 + 1;\n        } while (pcVar9 != __s1);\n      }\n      if (pcVar11 < pcVar10) {\n        do {\n          bVar4 = FUN_001053b0((int)*pcVar11);\n          if ((&DAT_001206c0)[bVar4] == '\\0') break;\n          pcVar11 = pcVar11 + 1;\n        } while (pcVar10 != pcVar11);\n      }\n    }\n  }\n  else {\n    __s1 = (char *)FUN_00108100(__s1,pcVar11,plVar12);\n    pcVar11 = (char *)FUN_00108100(*param_2);\n  }\n  goto LAB_00108440;\n}\n\n", 
    "001117e0": "\nvoid FUN_001117e0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00111710(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0010da80": "\nundefined8 FUN_0010da80(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x10);\n}\n\n", 
    "00121190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n  (*(code *)PTR_qsort_0011fc78)();\n  return;\n}\n\n", 
    "00111d90": "\nvoid FUN_00111d90(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n", 
    "00121070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid qsort(void *__base,size_t __nmemb,size_t __size,__compar_fn_t __compar)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f28": "\nvoid FUN_00103f28(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105ad0": "\nvoid FUN_00105ad0(char *param_1)\n\n{\n  if (*param_1 == '\\0') {\n    return;\n  }\n  pthread_sigmask(2,(__sigset_t *)(param_1 + 8),(__sigset_t *)0x0);\n  return;\n}\n\n", 
    "00103f23": "\nvoid FUN_00103f23(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103e00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigismember(sigset_t *__set,int __signo)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigismember_0011ff38)();\n  return iVar1;\n}\n\n", 
    "0010d190": "\nuint FUN_0010d190(byte param_1)\n\n{\n  char cVar1;\n  uint uVar2;\n  \n  uVar2 = (uint)param_1;\n  cVar1 = FUN_00114940(uVar2);\n  if (cVar1 == '\\0') {\n    cVar1 = FUN_001148d0((uint)param_1);\n    if (cVar1 == '\\0') {\n      if (param_1 == 0x7e) {\n        uVar2 = 0xffffffff;\n      }\n      else {\n        uVar2 = param_1 + 0x100;\n      }\n    }\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "00108090": "\nlong FUN_00108090(undefined8 *param_1)\n\n{\n  pthread_mutex_t *__mutex;\n  long lVar1;\n  \n  __mutex = (pthread_mutex_t *)(param_1 + 1);\n  pthread_mutex_lock(__mutex);\n  while( true ) {\n    lVar1 = FUN_0010ea80(*param_1);\n    if (lVar1 != 0) break;\n    pthread_cond_wait((pthread_cond_t *)(param_1 + 6),__mutex);\n  }\n  pthread_mutex_unlock(__mutex);\n  FUN_00107f90(lVar1);\n  *(undefined *)(lVar1 + 0x54) = 0;\n  return lVar1;\n}\n\n", 
    "00111150": "\nundefined4 FUN_00111150(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00120920;\n  }\n  return *param_1;\n}\n\n", 
    "00103f0f": "\nvoid FUN_00103f0f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00121188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f0a": "\nvoid FUN_00103f0a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010ced0": "\nvoid FUN_0010ced0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_c8 [168];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010c2b0(auStack_c8);\n  FUN_0010cbc0(param_1);\n  FUN_0010caa0(auStack_c8,param_3);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001117b0": "\nvoid FUN_001117b0(void)\n\n{\n  FUN_00111710();\n  return;\n}\n\n", 
    "00103870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_0011fc70)();\n  return iVar1;\n}\n\n", 
    "00121080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103990": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0011fd00)();\n  return;\n}\n\n", 
    "00114f50": "\nundefined  [16] FUN_00114f50(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00114e30": "\nundefined4 FUN_00114e30(void *param_1,size_t param_2,void *param_3,size_t param_4)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  undefined uVar3;\n  undefined uVar4;\n  int iVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  \n  if ((param_2 == param_4) && (iVar5 = memcmp(param_1,param_3,param_2), iVar5 == 0)) {\n    piVar7 = __errno_location();\n    *piVar7 = 0;\n    return 0;\n  }\n  puVar1 = (undefined *)((long)param_1 + param_2);\n  puVar2 = (undefined *)((long)param_3 + param_4);\n  uVar3 = *puVar1;\n  uVar4 = *puVar2;\n  *puVar1 = 0;\n  *puVar2 = 0;\n  uVar6 = FUN_00114d70(param_1,param_2 + 1,param_3,param_4 + 1);\n  *puVar1 = uVar3;\n  *puVar2 = uVar4;\n  return uVar6;\n}\n\n", 
    "00103f19": "\nvoid switchD_0010fe4f::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010da90": "\nundefined8 FUN_0010da90(long param_1)\n\n{\n  return *(undefined8 *)(param_1 + 0x18);\n}\n\n", 
    "0010d6f0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0010d6f0(float **param_1)\n\n{\n  float fVar1;\n  float *pfVar2;\n  float fVar3;\n  \n  pfVar2 = *param_1;\n  if (pfVar2 == (float *)&DAT_001180a0) {\n    return 1;\n  }\n  fVar1 = pfVar2[2];\n  if ((((_DAT_001180b4 < fVar1) && (fVar1 < DAT_001180b8)) && (_DAT_001180bc < pfVar2[3])) &&\n     (_DAT_001180c0 <= *pfVar2)) {\n    fVar3 = *pfVar2 + _DAT_001180b4;\n    if (((fVar3 < pfVar2[1]) && (pfVar2[1] <= DAT_001180c4)) && (fVar3 < fVar1)) {\n      return 1;\n    }\n  }\n  *param_1 = (float *)&DAT_001180a0;\n  return 0;\n}\n\n", 
    "00105be0": "\nundefined8 FUN_00105be0(void)\n\n{\n  ushort uVar1;\n  undefined uVar2;\n  byte bVar3;\n  int iVar4;\n  ushort **ppuVar5;\n  char *__s;\n  size_t sVar6;\n  undefined *puVar7;\n  undefined8 extraout_RAX;\n  long lVar8;\n  long lVar9;\n  undefined *puVar10;\n  ushort *puVar11;\n  ulong uVar12;\n  undefined **ppuVar13;\n  char *pcVar14;\n  undefined8 uStack_38;\n  \n  uVar12 = 0;\n  ppuVar5 = __ctype_b_loc();\n  do {\n    uVar2 = FUN_00105bb0(uVar12 & 0xffffffff);\n    (&DAT_001206c0)[uVar12] = uVar2;\n    uVar1 = (*ppuVar5)[uVar12];\n    (&DAT_001205c0)[uVar12] = ((byte)(uVar1 >> 0xe) ^ 1) & 1;\n    bVar3 = 0;\n    if ((uVar1 & 8) == 0) {\n      bVar3 = FUN_00105bb0(uVar12 & 0xffffffff);\n      bVar3 = bVar3 ^ 1;\n    }\n    (&DAT_001204c0)[uVar12] = bVar3;\n    iVar4 = toupper((int)uVar12);\n    (&DAT_001203c0)[uVar12] = (char)iVar4;\n    uVar12 = uVar12 + 1;\n  } while (uVar12 != 0x100);\n  if (DAT_001207e0 == '\\0') {\n    return uStack_38;\n  }\n  ppuVar13 = &PTR_DAT_00120060;\n  lVar8 = 1;\n  do {\n    __s = nl_langinfo((int)lVar8 + 0x2000d);\n    sVar6 = strlen(__s);\n    puVar7 = (undefined *)FUN_00113340(sVar6 + 1);\n    *(int *)(ppuVar13 + 1) = (int)lVar8;\n    *ppuVar13 = puVar7;\n    if (sVar6 != 0) {\n      puVar11 = *ppuVar5;\n      pcVar14 = __s + sVar6;\n      lVar9 = 0;\n      puVar10 = puVar7;\n      do {\n        bVar3 = FUN_001053b0((int)*__s);\n        if ((*(byte *)(puVar11 + bVar3) & 1) == 0) {\n          lVar9 = lVar9 + 1;\n          *puVar7 = (&DAT_001203c0)[bVar3];\n          puVar7 = puVar10 + lVar9;\n        }\n        __s = __s + 1;\n      } while (pcVar14 != __s);\n    }\n    lVar8 = lVar8 + 1;\n    *puVar7 = 0;\n    ppuVar13 = ppuVar13 + 2;\n  } while (lVar8 != 0xd);\n  qsort(&PTR_DAT_00120060,0xc,0x10,FUN_00105980);\n  return extraout_RAX;\n}\n\n", 
    "00103f14": "\nvoid FUN_00103f14(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010c2a0": "\nundefined8 FUN_0010c2a0(void)\n\n{\n  return 0xffffff9f;\n}\n\n", 
    "0010d080": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n  int iVar1;\n  \n  iVar1 = posix_fadvise(__fd,__offset,__len,__advise);\n  return iVar1;\n}\n\n", 
    "00113340": "\nvoid FUN_00113340(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00113560();\n  }\n  return;\n}\n\n", 
    "001052f0": "\n/* WARNING: Removing unreachable block (ram,0x00105303) */\n/* WARNING: Removing unreachable block (ram,0x0010530f) */\n\nvoid FUN_001052f0(void)\n\n{\n  return;\n}\n\n", 
    "00109fd0": "\nvoid FUN_00109fd0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long lVar1;\n  \n  while( true ) {\n    lVar1 = FUN_00108090(param_1);\n    if (*(int *)(lVar1 + 0x50) == 0) break;\n    FUN_00109b20(lVar1,param_2,param_3,param_4);\n    FUN_00107fe0(param_1,lVar1);\n    FUN_00108030(param_1,lVar1);\n    FUN_00108020(lVar1);\n  }\n  FUN_00108020(lVar1);\n  FUN_00107fa0(param_1,lVar1);\n  return;\n}\n\n", 
    "001118e0": "\nvoid FUN_001118e0(FILE **param_1,void *param_2,size_t param_3)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  int iVar5;\n  \n  piVar3 = __errno_location();\n  while( true ) {\n    sVar4 = fread_unlocked(param_2,1,param_3,*param_1);\n    iVar5 = *piVar3;\n    param_2 = (void *)((long)param_2 + sVar4);\n    param_3 = param_3 - sVar4;\n    if (param_3 == 0) break;\n    iVar2 = ferror_unlocked(*param_1);\n    pFVar1 = param_1[2];\n    if (iVar2 == 0) {\n      iVar5 = 0;\n    }\n    *piVar3 = iVar5;\n    (*(code *)param_1[1])(pFVar1);\n  }\n  return;\n}\n\n", 
    "00121198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001117c0": "\nvoid FUN_001117c0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001117b0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00121078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105800": "\nvoid FUN_00105800(char *param_1,long param_2,uint param_3)\n\n{\n  char cVar1;\n  \n  cVar1 = *param_1;\n  if (cVar1 == '\\0') {\n    return;\n  }\n  do {\n    switch(cVar1) {\n    case 'M':\n      *(undefined *)(param_2 + 0x36) = 1;\n      break;\n    default:\n      goto switchD_00105852_caseD_4e;\n    case 'R':\n      *(undefined *)(param_2 + 0x33) = 1;\n      break;\n    case 'V':\n      *(undefined *)(param_2 + 0x38) = 1;\n      break;\n    case 'b':\n      if ((param_3 & 0xfffffffd) == 0) {\n        *(undefined *)(param_2 + 0x30) = 1;\n      }\n      if (param_3 - 1 < 2) {\n        *(undefined *)(param_2 + 0x31) = 1;\n      }\n      break;\n    case 'd':\n      *(undefined1 **)(param_2 + 0x20) = &DAT_001204c0;\n      break;\n    case 'f':\n      *(undefined1 **)(param_2 + 0x28) = &DAT_001203c0;\n      break;\n    case 'g':\n      *(undefined *)(param_2 + 0x34) = 1;\n      break;\n    case 'h':\n      *(undefined *)(param_2 + 0x35) = 1;\n      break;\n    case 'i':\n      if (*(long *)(param_2 + 0x20) == 0) {\n        *(undefined1 **)(param_2 + 0x20) = &DAT_001205c0;\n      }\n      break;\n    case 'n':\n      *(undefined *)(param_2 + 0x32) = 1;\n      break;\n    case 'r':\n      *(undefined *)(param_2 + 0x37) = 1;\n    }\n    cVar1 = param_1[1];\n    param_1 = param_1 + 1;\n  } while (cVar1 != '\\0');\nswitchD_00105852_caseD_4e:\n  return;\n}\n\n", 
    "00105920": "\nvoid FUN_00105920(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010db80": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010db80(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  double dVar5;\n  double dVar6;\n  \n  uVar1 = FUN_0010daa0();\n  uVar2 = FUN_0010da80();\n  uVar3 = FUN_0010da90();\n  uVar4 = FUN_0010dab0();\n  __fprintf_chk(param_2,1,\"# entries:         %lu\\n\",uVar1);\n  __fprintf_chk(param_2,1,\"# buckets:         %lu\\n\",uVar2);\n  if ((long)uVar3 < 0) {\n    dVar5 = (double)(uVar3 >> 1 | (ulong)((uint)uVar3 & 1));\n    dVar5 = dVar5 + dVar5;\n  }\n  else {\n    dVar5 = (double)uVar3;\n  }\n  if ((long)uVar2 < 0) {\n    dVar6 = (double)(uVar2 >> 1 | (ulong)((uint)uVar2 & 1));\n    dVar6 = dVar6 + dVar6;\n  }\n  else {\n    dVar6 = (double)uVar2;\n  }\n  __fprintf_chk((dVar5 * _DAT_00117f28) / dVar6,param_2,1,\"# buckets used:    %lu (%.2f%%)\\n\",uVar3)\n  ;\n  __fprintf_chk(param_2,1,\"max bucket length: %lu\\n\",uVar4);\n  return;\n}\n\n", 
    "00121290": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010eb50": "\nchar * FUN_0010eb50(ulong param_1,long param_2)\n\n{\n  uint uVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 10) = 0;\n  pcVar2 = (char *)(param_2 + 10);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)((param_1 & 0xffffffff) / 10) * -10 + '0';\n    uVar1 = (uint)param_1;\n    param_1 = (param_1 & 0xffffffff) / 10;\n  } while (9 < uVar1);\n  return pcVar2;\n}\n\n", 
    "00121050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0011ffb8)();\n  return;\n}\n\n", 
    "0010e9f0": "\nvoid FUN_0010e9f0(void **param_1)\n\n{\n  free(*param_1);\n  (*(code *)PTR_free_0011ffb8)(param_1);\n  return;\n}\n\n", 
    "00105af0": "\nvoid FUN_00105af0(void)\n\n{\n  long *plVar1;\n  \n  plVar1 = DAT_001202e8;\n  if (DAT_001202e8 != (long *)0x0) {\n    do {\n      unlink((char *)((long)plVar1 + 0xd));\n      plVar1 = (long *)*plVar1;\n    } while (plVar1 != (long *)0x0);\n  }\n  DAT_001202e8 = (long *)0x0;\n  return;\n}\n\n", 
    "00114510": "\nundefined8\nFUN_00114510(long *param_1,long param_2,long param_3,undefined8 param_4,undefined8 param_5,\n            undefined8 param_6)\n\n{\n  long *plVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  ulong uVar4;\n  long lVar5;\n  \n  if (param_3 == 0) {\n    lVar5 = 0xf;\n    param_3 = 0x10;\n  }\n  else {\n    lVar5 = param_3 + -1;\n  }\n  param_1[6] = lVar5;\n  if (param_2 == 0) {\n    param_2 = 0xfe0;\n  }\n  *param_1 = param_2;\n  plVar1 = (long *)FUN_001144d0(param_1);\n  param_1[1] = (long)plVar1;\n  if (plVar1 != (long *)0x0) {\n    uVar4 = -param_3 & (long)plVar1 + lVar5 + 0x10;\n    lVar5 = *param_1;\n    param_1[2] = uVar4;\n    param_1[3] = uVar4;\n    *plVar1 = lVar5 + (long)plVar1;\n    param_1[4] = lVar5 + (long)plVar1;\n    plVar1[1] = 0;\n    *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xf9;\n    return 1;\n  }\n  uVar2 = (*(code *)obstack_alloc_failed_handler)();\n  uVar3 = dcgettext(0,\"memory exhausted\",5);\n  __fprintf_chk(stderr,1,\"%s\\n\",uVar3,param_5,param_6,uVar2);\n                    /* WARNING: Subroutine does not return */\n  exit(DAT_00120130);\n}\n\n", 
    "0010d6c0": "\nlong FUN_0010d6c0(long *param_1,undefined8 param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)param_1[6])(param_2,param_1[2]);\n  if (uVar1 <= (ulong)param_1[2] && param_1[2] != uVar1) {\n    return uVar1 * 0x10 + *param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103d00": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0011feb8)();\n  return;\n}\n\n", 
    "00103f40": "\n/* WARNING: Could not reconcile some variable overlaps */\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nbyte FUN_00103f40(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  bool bVar2;\n  byte bVar3;\n  char cVar4;\n  int iVar5;\n  int iVar6;\n  char *pcVar7;\n  char *pcVar8;\n  lconv *plVar9;\n  undefined8 *__ptr;\n  long lVar10;\n  char *pcVar11;\n  long *plVar12;\n  ulong uVar13;\n  ulong uVar14;\n  undefined8 uVar15;\n  undefined8 uVar16;\n  uint uVar17;\n  long extraout_RDX;\n  long extraout_RDX_00;\n  long extraout_RDX_01;\n  int *piVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  undefined auVar20 [16];\n  ulong local_300;\n  int *local_2f8;\n  char *local_2f0;\n  char *local_2e0;\n  ulong local_2d8;\n  bool local_2c0;\n  undefined local_2a8 [80];\n  undefined8 local_258 [4];\n  undefined8 local_238;\n  undefined8 local_230;\n  undefined local_228;\n  undefined local_227;\n  undefined local_226;\n  byte local_225;\n  undefined local_224;\n  undefined local_223;\n  undefined local_222;\n  undefined local_221;\n  undefined local_220;\n  undefined4 local_208;\n  undefined4 uStack_204;\n  undefined8 *local_200;\n  undefined local_e8 [12];\n  undefined4 uStack_dc;\n  undefined4 uStack_d8;\n  undefined4 uStack_d4;\n  undefined4 local_d0;\n  undefined4 uStack_cc;\n  undefined4 uStack_c8;\n  undefined4 uStack_c4;\n  undefined4 local_c0;\n  undefined4 uStack_bc;\n  undefined4 uStack_b8;\n  undefined4 uStack_b4;\n  undefined4 local_b0;\n  undefined4 uStack_ac;\n  undefined4 uStack_a8;\n  undefined4 uStack_a4;\n  undefined4 local_a0;\n  undefined4 uStack_9c;\n  undefined4 uStack_98;\n  undefined4 uStack_94;\n  undefined4 local_90;\n  undefined4 uStack_8c;\n  undefined4 uStack_88;\n  undefined4 uStack_84;\n  undefined4 local_80;\n  undefined4 uStack_7c;\n  undefined4 uStack_78;\n  undefined4 uStack_74;\n  undefined4 local_70;\n  undefined4 uStack_6c;\n  undefined4 uStack_68;\n  undefined4 uStack_64;\n  int local_60;\n  undefined local_42;\n  undefined local_41;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  pcVar7 = getenv(\"POSIXLY_CORRECT\");\n  iVar5 = FUN_0010f4b0();\n  bVar1 = 0x2b8 < iVar5 - 0x30db0U;\n  FUN_0010f540(*param_2);\n  pcVar8 = setlocale(6,\"\");\n  bindtextdomain(\"coreutils\");\n  textdomain(\"coreutils\");\n  FUN_0010bad0();\n  DAT_001207e1 = FUN_0010d590(3);\n  DAT_001207e0 = FUN_0010d590(2);\n  plVar9 = localeconv();\n  pcVar11 = plVar9->decimal_point;\n  bVar3 = FUN_001053b0((int)*pcVar11);\n  DAT_001207e8 = (uint)bVar3;\n  if ((DAT_001207e8 == 0) || (pcVar11[1] != '\\0')) {\n    DAT_001207e8 = 0x2e;\n  }\n  bVar3 = FUN_001053b0((int)**(char **)(extraout_RDX + 8));\n  DAT_001207e4 = (uint)bVar3;\n  if ((DAT_001207e4 == 0) || (*(char *)(extraout_RDX_00 + 1) != '\\0')) {\n    DAT_001207e4 = 0xffffffff;\n  }\n  DAT_00120398 = '\\0';\n  FUN_00105be0();\n  piVar18 = &DAT_00116324;\n  sigemptyset((sigset_t *)&DAT_00120300);\n  local_2f8 = &DAT_00116324;\n  iVar5 = 0xe;\n  while( true ) {\n    sigaction(iVar5,(sigaction *)0x0,(sigaction *)local_e8);\n    if (local_e8._0_8_ != (__sighandler_t)0x1) {\n      sigaddset((sigset_t *)&DAT_00120300,iVar5);\n    }\n    if (piVar18 == (int *)&DAT_0011634c) break;\n    iVar5 = *piVar18;\n    piVar18 = piVar18 + 1;\n  }\n  local_e8._0_8_ = FUN_00105b90;\n  local_60 = 0;\n  local_e8._8_4_ = _DAT_00120300;\n  uStack_dc = uRam0000000000120304;\n  uStack_d8 = uRam0000000000120308;\n  uStack_d4 = uRam000000000012030c;\n  local_d0 = _DAT_00120310;\n  uStack_cc = uRam0000000000120314;\n  uStack_c8 = uRam0000000000120318;\n  uStack_c4 = uRam000000000012031c;\n  iVar5 = 0xe;\n  local_c0 = _DAT_00120320;\n  uStack_bc = uRam0000000000120324;\n  uStack_b8 = uRam0000000000120328;\n  uStack_b4 = uRam000000000012032c;\n  local_b0 = _DAT_00120330;\n  uStack_ac = uRam0000000000120334;\n  uStack_a8 = uRam0000000000120338;\n  uStack_a4 = uRam000000000012033c;\n  local_a0 = _DAT_00120340;\n  uStack_9c = uRam0000000000120344;\n  uStack_98 = uRam0000000000120348;\n  uStack_94 = uRam000000000012034c;\n  local_90 = _DAT_00120350;\n  uStack_8c = uRam0000000000120354;\n  uStack_88 = uRam0000000000120358;\n  uStack_84 = uRam000000000012035c;\n  local_80 = _DAT_00120360;\n  uStack_7c = uRam0000000000120364;\n  uStack_78 = uRam0000000000120368;\n  uStack_74 = uRam000000000012036c;\n  local_70 = _DAT_00120370;\n  uStack_6c = uRam0000000000120374;\n  uStack_68 = uRam0000000000120378;\n  uStack_64 = uRam000000000012037c;\n  while( true ) {\n    iVar6 = sigismember((sigset_t *)&DAT_00120300,iVar5);\n    if (iVar6 != 0) {\n      sigaction(iVar5,(sigaction *)local_e8,(sigaction *)0x0);\n    }\n    if (local_2f8 == (int *)&DAT_0011634c) break;\n    iVar5 = *local_2f8;\n    local_2f8 = local_2f8 + 1;\n  }\n  uVar19 = 0;\n  signal(0x11,(__sighandler_t)0x0);\n  bVar2 = false;\n  FUN_00115080(FUN_00105b20);\n  FUN_00105d50(local_258);\n  local_258[0] = 0xffffffffffffffff;\n  __ptr = (undefined8 *)FUN_00113360((long)param_1,8);\n  local_300 = 0;\n  uVar14 = 0;\n  local_2f0 = (char *)0x0;\n  local_2f8 = (int *)0x0;\n  local_2d8 = 0;\n  local_2e0 = (char *)0x0;\n  iVar5 = DAT_00120028;\nLAB_001042ae:\n  DAT_00120028 = iVar5;\n  local_208 = 0xffffffff;\n  if ((int)uVar14 == -1) {\nLAB_001042be:\n    lVar10 = (long)optind;\n  }\n  else {\n    if ((uVar19 == 0) || (pcVar7 == (char *)0x0)) {\nLAB_00104308:\n      uVar13 = getopt_long(param_1,param_2,\"-bcCdfghik:mMno:rRsS:t:T:uVy:z\",\n                           &PTR_s_ignore_leading_blanks_0011f5c0,&local_208);\n      pcVar11 = optarg;\n      iVar5 = (int)uVar13;\n      uVar14 = uVar13 & 0xffffffff;\n      uVar17 = (uint)uVar14;\n      if (iVar5 == -1) goto LAB_001042be;\n      if (iVar5 < 0x88) {\n        if (iVar5 < 1) {\n          if (iVar5 == -0x83) {\n            FUN_00113200(stdout,\"sort\",\"GNU coreutils\",PTR_DAT_00120120,\"Mike Haertel\",\"Paul Eggert\"\n                         ,0,uVar13);\n                    /* WARNING: Subroutine does not return */\n            exit(0);\n          }\n          if (iVar5 == -0x82) {\n            FUN_0010bae0(0);\n            goto LAB_00104488;\n          }\n          goto switchD_00104357_caseD_2;\n        }\n        iVar5 = DAT_00120028;\n        switch(uVar13 & 0xffffffff) {\n        case 1:\n          if (*optarg == '+') {\n            if (optind == param_1) {\n              local_2c0 = false;\n            }\n            else {\n              local_2c0 = false;\n              if (*(char *)param_2[optind] == '-') {\n                local_2c0 = (int)((char *)param_2[optind])[1] - 0x30U < 10;\n              }\n            }\n            bVar1 = (bool)(bVar1 | pcVar7 == (char *)0x0 & local_2c0);\n            if (bVar1) {\n              plVar12 = (long *)FUN_00105d50(local_2a8);\n              pcVar11 = (char *)FUN_00105d80(optarg + 1,plVar12,0);\n              if (pcVar11 == (char *)0x0) {\n                if ((*plVar12 == 0) && (plVar12[1] == 0)) {\n                  *plVar12 = -1;\n                }\n              }\n              else {\n                if (*pcVar11 == '.') {\n                  pcVar11 = (char *)FUN_00105d80(pcVar11 + 1,plVar12 + 1,0);\n                  if ((*plVar12 == 0) && (plVar12[1] == 0)) goto LAB_00104ba6;\nLAB_00104bad:\n                  if (pcVar11 == (char *)0x0) goto LAB_00104967;\n                }\n                else if ((*plVar12 == 0) && (plVar12[1] == 0)) {\nLAB_00104ba6:\n                  *plVar12 = -1;\n                  goto LAB_00104bad;\n                }\n                pcVar11 = (char *)FUN_00105800(pcVar11,plVar12,0);\n                if (*pcVar11 == '\\0') {\n                  if (local_2c0) {\n                    lVar10 = (long)optind;\n                    optind = optind + 1;\n                    lVar10 = param_2[lVar10];\n                    pcVar11 = (char *)FUN_00105d80(lVar10 + 1,plVar12 + 2,\n                                                   \"invalid number after \\'-\\'\");\n                    if (pcVar11 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n                      __assert_fail(\"s\",\"src/sort.c\",0x110d,\"main\");\n                    }\n                    if (*pcVar11 == '.') {\n                      pcVar11 = (char *)FUN_00105d80(pcVar11 + 1,plVar12 + 3,\n                                                     \"invalid number after \\'.\\'\");\n                    }\n                    if ((plVar12[3] == 0) && (plVar12[2] != 0)) {\n                      plVar12[2] = plVar12[2] + -1;\n                    }\n                    pcVar11 = (char *)FUN_00105800(pcVar11,plVar12,1);\n                    if (*pcVar11 != '\\0') {\n                      FUN_00105a60(lVar10,\"stray character in field spec\");\nLAB_00104fad:\n                      uVar15 = FUN_00111830();\n                      uVar16 = dcgettext(0,\"multi-character tab %s\",5);\n                    /* WARNING: Subroutine does not return */\n                      error(2,0,uVar16,uVar15);\n                    }\n                  }\n                  *(undefined *)((long)plVar12 + 0x39) = 1;\n                  FUN_001064d0(plVar12);\n                  iVar5 = DAT_00120028;\n                  break;\n                }\n              }\n            }\n          }\nLAB_00104967:\n          __ptr[uVar19] = optarg;\n          uVar19 = uVar19 + 1;\n          iVar5 = DAT_00120028;\n          break;\n        default:\n          goto switchD_00104357_caseD_2;\n        case 0x4d:\n        case 0x52:\n        case 0x56:\n        case 0x62:\n        case 100:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6e:\n        case 0x72:\n          goto switchD_00104357_caseD_4d;\n        case 0x53:\n          FUN_00106040(local_208,0x53,optarg);\n          iVar5 = DAT_00120028;\n          break;\n        case 0x54:\n          FUN_00105400(optarg);\n          iVar5 = DAT_00120028;\n          break;\n        case 0x6b:\n          plVar12 = (long *)FUN_00105d50(local_2a8);\n          pcVar11 = (char *)FUN_00105d80(optarg,plVar12,\"invalid number at field start\");\n          lVar10 = *plVar12;\n          *plVar12 = lVar10 + -1;\n          if (lVar10 == 0) {\nLAB_00105113:\n            FUN_00105a60(optarg,\"field number is zero\");\n            goto LAB_00105126;\n          }\n          if (*pcVar11 == '.') {\n            pcVar11 = (char *)FUN_00105d80(pcVar11 + 1,plVar12 + 1,\"invalid number after \\'.\\'\");\n            lVar10 = plVar12[1];\n            plVar12[1] = lVar10 + -1;\n            if (lVar10 == 0) {\n              FUN_00105a60(optarg,\"character offset is zero\");\n              goto LAB_00104d2f;\n            }\n          }\n          if ((*plVar12 == 0) && (plVar12[1] == 0)) {\n            *plVar12 = -1;\n          }\n          pcVar11 = (char *)FUN_00105800(pcVar11,plVar12,0);\n          if (*pcVar11 == ',') {\n            pcVar11 = (char *)FUN_00105d80(pcVar11 + 1,plVar12 + 2,\"invalid number after \\',\\'\");\n            lVar10 = plVar12[2];\n            plVar12[2] = lVar10 + -1;\n            if (lVar10 == 0) goto LAB_00105113;\n            if (*pcVar11 == '.') {\n              pcVar11 = (char *)FUN_00105d80(pcVar11 + 1,plVar12 + 3,\"invalid number after \\'.\\'\");\n            }\n            pcVar11 = (char *)FUN_00105800(pcVar11,plVar12,1);\n          }\n          else {\n            plVar12[2] = -1;\n            plVar12[3] = 0;\n          }\n          if (*pcVar11 != '\\0') {\n            FUN_00105a60(optarg,\"stray character in field spec\");\nLAB_001051ee:\n            uVar15 = dcgettext(0,\"multiple output files specified\",5);\n                    /* WARNING: Subroutine does not return */\n            error(2,0,uVar15);\n          }\n          FUN_001064d0(plVar12);\n          iVar5 = DAT_00120028;\n          break;\n        case 0x6d:\n          bVar2 = true;\n          break;\n        case 0x6f:\n          if ((local_2f0 != (char *)0x0) && (iVar5 = strcmp(local_2f0,optarg), iVar5 != 0))\n          goto LAB_001051ee;\n          local_2f0 = pcVar11;\n          iVar5 = DAT_00120028;\n          break;\n        case 0x73:\n          DAT_0012039a = 1;\n          break;\n        case 0x74:\n          iVar5 = (int)*optarg;\n          if (*optarg == '\\0') {\n            uVar15 = dcgettext(0,\"empty tab\",5);\n                    /* WARNING: Subroutine does not return */\n            error(2,0,uVar15);\n          }\n          if (optarg[1] != '\\0') {\n            iVar5 = strcmp(optarg,\"\\\\0\");\n            if (iVar5 != 0) goto LAB_00104fad;\n            iVar5 = 0;\n          }\n          if ((DAT_00120028 != 0x80) && (DAT_00120028 != iVar5)) {\n            uVar15 = dcgettext(0,\"incompatible tabs\",5);\n                    /* WARNING: Subroutine does not return */\n            error(2,0,uVar15);\n          }\n          break;\n        case 0x75:\n          DAT_00120399 = 1;\n          break;\n        case 0x79:\n          lVar10 = (long)optind;\n          if ((char *)param_2[lVar10 + -1] == optarg) goto LAB_001047b4;\n          break;\n        case 0x7a:\n          DAT_00120038 = 0;\n          break;\n        case 0x80:\n          uVar14 = 99;\n          if (optarg != (char *)0x0) {\n            lVar10 = FUN_0010c0e0(\"--check\",optarg,&PTR_s_quiet_0011f5a0,&DAT_00116466,1,\n                                  PTR_FUN_00120128);\n            uVar14 = (ulong)(uint)(int)(char)(&DAT_00116466)[lVar10];\n          }\n        case 0x43:\n        case 99:\n          if (((char)local_300 != '\\0') && ((int)(char)local_300 != (int)uVar14)) {\n            FUN_00105990(&DAT_00117c48);\n            goto LAB_00105278;\n          }\n          local_300 = uVar14 & 0xff;\n          iVar5 = DAT_00120028;\n          break;\n        case 0x81:\n          if ((DAT_00120388 != (char *)0x0) && (iVar5 = strcmp(DAT_00120388,optarg), iVar5 != 0)) {\n            uVar15 = dcgettext(0,\"multiple compress programs specified\",5);\n                    /* WARNING: Subroutine does not return */\n            error(2,0,uVar15);\n          }\n          DAT_00120388 = pcVar11;\n          iVar5 = DAT_00120028;\n          break;\n        case 0x82:\n          DAT_00120380 = '\\x01';\n          break;\n        case 0x83:\n          local_2f8 = (int *)optarg;\n          break;\n        case 0x84:\n          FUN_00105e70(local_208,0xffffff84,optarg);\n          iVar5 = DAT_00120028;\n          break;\n        case 0x85:\n          if ((local_2e0 != (char *)0x0) && (iVar5 = strcmp(local_2e0,optarg), iVar5 != 0))\n          goto LAB_0010529b;\n          local_2e0 = pcVar11;\n          iVar5 = DAT_00120028;\n          break;\n        case 0x86:\n          lVar10 = FUN_0010c0e0(\"--sort\",optarg,&PTR_s_general_numeric_0011f560,&DAT_00116460,1,\n                                PTR_FUN_00120128);\n          uVar17 = (uint)(char)(&DAT_00116460)[lVar10];\nswitchD_00104357_caseD_4d:\n          uVar14 = (ulong)uVar17;\n          local_42 = (undefined)uVar17;\n          local_41 = 0;\n          FUN_00105800(&local_42,local_258,2);\n          iVar5 = DAT_00120028;\n          break;\n        case 0x87:\n          local_2d8 = FUN_001061f0(local_208,0xffffff87,optarg);\n          iVar5 = DAT_00120028;\n        }\n      }\n      else {\nswitchD_00104357_caseD_2:\n        auVar20 = FUN_0010bae0(2);\n        do {\n          lVar10 = SUB168(auVar20,0);\n          pcVar11 = (char *)(SUB168(auVar20 >> 0x40,0) + 1);\nLAB_001047b4:\n          auVar20 = CONCAT88(pcVar11,lVar10);\n        } while ((int)*pcVar11 - 0x30U < 10);\n        optind = (int)lVar10 - (uint)(*pcVar11 != '\\0');\n        iVar5 = DAT_00120028;\n      }\n      goto LAB_001042ae;\n    }\n    lVar10 = (long)optind;\n    if ((bVar1) && ((char)local_300 == '\\0')) {\n      if (param_1 != optind) {\n        pcVar11 = (char *)param_2[optind];\n        if (((*pcVar11 == '-') && (pcVar11[1] == 'o')) &&\n           ((pcVar11[2] != '\\0' || (optind + 1 != param_1)))) goto LAB_00104308;\n        goto LAB_00104290;\n      }\nLAB_00104488:\n      if (local_2f8 != (int *)0x0) goto LAB_00104d50;\n      local_300._0_1_ = '\\0';\nLAB_00104499:\n      if (DAT_00120390 == 0) {\n        cVar4 = FUN_001056c0(local_258);\n        if (cVar4 == '\\0') {\n          FUN_001064d0(local_258);\n          bVar3 = local_225;\n          goto LAB_00104562;\n        }\n        FUN_001059c0();\n        if (DAT_00120380 == '\\0') {\n          DAT_0012039b = local_221;\n          goto LAB_0010460a;\n        }\n      }\n      else {\n        bVar3 = 0;\n        lVar10 = DAT_00120390;\n        do {\n          while ((cVar4 = FUN_001056c0(lVar10), cVar4 == '\\0' ||\n                 (*(char *)(extraout_RDX_01 + 0x37) != '\\0'))) {\n            lVar10 = *(long *)(extraout_RDX_01 + 0x40);\n            bVar3 = bVar3 | *(byte *)(extraout_RDX_01 + 0x33);\n            if (lVar10 == 0) goto LAB_00104562;\n          }\n          *(undefined8 *)(extraout_RDX_01 + 0x20) = local_238;\n          *(undefined8 *)(extraout_RDX_01 + 0x28) = local_230;\n          *(undefined *)(extraout_RDX_01 + 0x30) = local_228;\n          *(undefined *)(extraout_RDX_01 + 0x31) = local_227;\n          *(undefined *)(extraout_RDX_01 + 0x36) = local_222;\n          *(undefined *)(extraout_RDX_01 + 0x32) = local_226;\n          *(undefined *)(extraout_RDX_01 + 0x34) = local_224;\n          *(undefined *)(extraout_RDX_01 + 0x35) = local_223;\n          *(undefined *)(extraout_RDX_01 + 0x37) = local_221;\n          *(undefined *)(extraout_RDX_01 + 0x38) = local_220;\n          *(byte *)(extraout_RDX_01 + 0x33) = local_225;\n          lVar10 = *(long *)(extraout_RDX_01 + 0x40);\n          bVar3 = bVar3 | local_225;\n        } while (lVar10 != 0);\nLAB_00104562:\n        FUN_001059c0();\n        if (DAT_00120380 == '\\0') {\n          DAT_0012039b = local_221;\n          if (bVar3 != 0) {\n            FUN_00106520(local_2e0);\n          }\nLAB_0010460a:\n          if (DAT_001203a8 == 0) {\n            pcVar11 = getenv(\"TMPDIR\");\n            if (pcVar11 == (char *)0x0) {\n              pcVar11 = \"/tmp\";\n            }\n            FUN_00105400(pcVar11);\n          }\n          if (uVar19 == 0) {\n            uVar19 = 1;\n            free(__ptr);\n            __ptr = (undefined8 *)FUN_00113340(8);\n            *__ptr = &DAT_00118ed6;\n          }\n          uVar14 = DAT_001203b8;\n          if ((DAT_001203b8 != 0) &&\n             (uVar14 = (ulong)DAT_00120024 * 0x22, (ulong)DAT_00120024 * 0x22 < DAT_001203b8)) {\n            uVar14 = DAT_001203b8;\n          }\n          DAT_001203b8 = uVar14;\n          if ((char)local_300 == '\\0') {\n            FUN_00107000(__ptr,uVar19);\n            FUN_00107090(local_2f0);\n            if (bVar2) {\n              lVar10 = FUN_001134d0(uVar19,0x10);\n              uVar14 = 0;\n              do {\n                uVar13 = uVar14 + 1;\n                *(undefined8 *)(lVar10 + uVar14 * 0x10) = __ptr[uVar14];\n                uVar14 = uVar13;\n              } while (uVar19 != uVar13);\n              FUN_0010af30(lVar10,0,uVar19,local_2f0);\n            }\n            else {\n              if (local_2d8 == 0) {\nLAB_00104d2f:\n                uVar14 = FUN_0010f030(2);\n                local_2d8 = 8;\n                if (uVar14 < 9) {\n                  local_2d8 = uVar14;\n                }\n              }\n              if (0xffffffffffffff < local_2d8) {\n                local_2d8 = 0xffffffffffffff;\n              }\n              FUN_0010b4b0(__ptr,uVar19,local_2f0,local_2d8);\n            }\n            if ((DAT_00120398 != '\\0') && (iVar5 = FUN_00114090(stdin), iVar5 == -1)) {\n              uVar15 = dcgettext(0,\"close failed\",5);\n                    /* WARNING: Subroutine does not return */\n              FUN_001062b0(uVar15,&DAT_00118ed6);\n            }\n            bVar3 = 0;\n          }\n          else {\n            if (1 < uVar19) {\n              uVar15 = FUN_00111570(4,__ptr[1]);\n              uVar16 = dcgettext(0,\"extra operand %s not allowed with -%c\",5);\n                    /* WARNING: Subroutine does not return */\n              error(2,0,uVar16,uVar15,(int)(char)local_300);\n            }\n            if (local_2f0 != (char *)0x0) {\n              DAT_00120010 = (char)local_300;\n              FUN_00105990(&DAT_00120010);\n              goto LAB_00105267;\n            }\n            bVar3 = FUN_0010a2b0(*__ptr,(int)(char)local_300);\n            bVar3 = bVar3 ^ 1;\n          }\n          if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n            return bVar3;\n          }\nLAB_00105267:\n                    /* WARNING: Subroutine does not return */\n          __stack_chk_fail();\n        }\n      }\n      if ((char)local_300 == '\\0') {\n        if (local_2f0 == (char *)0x0) {\n          if ((pcVar8 != (char *)0x0) && (pcVar11 = setlocale(3,\"\"), pcVar11 != (char *)0x0)) {\n            if (DAT_001207e1 != '\\0') {\n              pcVar11 = setlocale(3,(char *)0x0);\n              uVar15 = FUN_00111830(pcVar11);\n              uVar16 = dcgettext(0,\"using %s sorting rules\",5);\n                    /* WARNING: Subroutine does not return */\n              error(0,0,uVar16,uVar15);\n            }\n            uVar15 = dcgettext(0,\"using simple byte comparison\",5);\n                    /* WARNING: Subroutine does not return */\n            error(0,0,&DAT_00117fb4,uVar15);\n          }\n          uVar15 = dcgettext(0,\"failed to set locale\",5);\n                    /* WARNING: Subroutine does not return */\n          error(0,0,&DAT_00117fb4,uVar15);\n        }\nLAB_00105278:\n        if ((char)local_300 == '\\0') {\n          local_300._0_1_ = 'o';\n        }\n      }\n      s_X___debug_00120018[0] = (char)local_300;\n      FUN_00105990(s_X___debug_00120018);\nLAB_0010529b:\n      uVar15 = dcgettext(0,\"multiple random sources specified\",5);\n                    /* WARNING: Subroutine does not return */\n      error(2,0,uVar15);\n    }\n  }\nLAB_00104290:\n  if (param_1 <= (int)lVar10) {\n    if (local_2f8 != (int *)0x0) {\n      if (uVar19 != 0) {\nLAB_00104d50:\n        uVar15 = FUN_00111570(4,*__ptr);\n        uVar16 = dcgettext(0,\"extra operand %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(0,0,uVar16,uVar15);\n      }\n      uVar15 = FUN_00106410(local_2f8,\"r\");\n      FUN_001124a0(&local_208);\n      cVar4 = FUN_00112550(uVar15,&local_208);\n      if (cVar4 == '\\0') {\n        uVar15 = FUN_00111570(4,local_2f8);\n        uVar16 = dcgettext(0,\"cannot read file names from %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(2,0,uVar16,uVar15);\n      }\n      FUN_00106440(uVar15);\n      uVar14 = CONCAT44(uStack_204,local_208);\n      if (uVar14 == 0) {\nLAB_00105126:\n        uVar15 = FUN_00111570(4,local_2f8);\n        uVar16 = dcgettext(0,\"no input from %s\",5);\n                    /* WARNING: Subroutine does not return */\n        error(2,0,uVar16,uVar15);\n      }\n      free(__ptr);\n      do {\n        pcVar11 = (char *)local_200[uVar19];\n        if ((*pcVar11 == '-') && (pcVar11[1] == '\\0')) {\n          uVar15 = FUN_00111570(4);\n          uVar16 = dcgettext(0,\"when reading file names from stdin, no file name of %s allowed\",5);\n                    /* WARNING: Subroutine does not return */\n          error(2,0,uVar16,uVar15);\n        }\n        uVar19 = uVar19 + 1;\n        if (*pcVar11 == '\\0') {\n          uVar15 = FUN_00111670(0,3,local_2f8);\n          uVar16 = dcgettext(0,\"%s:%lu: invalid zero-length file name\",5);\n                    /* WARNING: Subroutine does not return */\n          error(2,0,uVar16,uVar15,uVar19);\n        }\n        __ptr = local_200;\n      } while (uVar14 != uVar19);\n    }\n    goto LAB_00104499;\n  }\n  optind = (int)lVar10 + 1;\n  __ptr[uVar19] = param_2[lVar10];\n  uVar19 = uVar19 + 1;\n  iVar5 = DAT_00120028;\n  goto LAB_001042ae;\n}\n\n", 
    "00111490": "\nvoid FUN_00111490(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00111470(0,param_1,param_2);\n  return;\n}\n\n", 
    "00103e20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0011ff48)();\n  return sVar1;\n}\n\n", 
    "00112100": "\nvoid FUN_00112100(ulong *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long lVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong *puVar14;\n  ulong *puVar15;\n  ulong uVar16;\n  ulong uVar17;\n  long lVar18;\n  undefined auVar19 [16];\n  \n  uVar2 = 0x98f5704f6c44c0ab;\n  uVar4 = 0x82f053db8355e0ce;\n  uVar9 = 0xb29b2e824a595524;\n  uVar12 = 0x8c0ea5053d4712a0;\n  uVar7 = 0xb9f8b322c73ac862;\n  uVar10 = 0x647c4677a2884b7c;\n  uVar16 = 0xae985bf2cbfc89ed;\n  uVar6 = 0x48fe4a0fa5a09315;\n  puVar5 = param_1;\n  puVar14 = param_1;\n  do {\n    lVar3 = uVar2 + puVar14[7];\n    uVar2 = puVar14[5];\n    uVar1 = puVar14[6];\n    lVar11 = uVar10 + (*puVar14 - (uVar4 + puVar14[4]));\n    uVar4 = FUN_00111e10(lVar3);\n    uVar17 = uVar4 >> 9 ^ uVar6 + uVar2;\n    lVar8 = uVar7 + (puVar14[1] - uVar17);\n    uVar10 = lVar11 + lVar8;\n    uVar4 = uVar16 + uVar1 ^ lVar11 << 9;\n    lVar13 = uVar12 + (puVar14[2] - uVar4);\n    uVar6 = FUN_00111e10(lVar8);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar11;\n    lVar11 = uVar9 + (puVar14[3] - uVar2);\n    uVar12 = lVar13 + lVar11;\n    uVar10 = uVar10 ^ lVar13 << 0xf;\n    auVar19 = FUN_00111e10(lVar11);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar9 = lVar11 + lVar3;\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar8 + lVar13;\n    lVar11 = uVar17 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar8 = uVar4 - uVar12;\n    puVar15 = puVar14 + 8;\n    uVar4 = FUN_00111e10(lVar11);\n    uVar6 = lVar11 + lVar8;\n    *puVar14 = uVar10;\n    uVar9 = uVar9 ^ uVar4 >> 0x11;\n    uVar4 = lVar8 * 0x4000 ^ lVar3 + lVar11;\n    puVar14[1] = uVar7;\n    uVar2 = uVar2 - uVar9;\n    puVar14[2] = uVar12;\n    uVar16 = lVar8 + uVar2;\n    puVar14[3] = uVar9;\n    puVar14[4] = uVar4;\n    puVar14[5] = uVar6;\n    puVar14[6] = uVar16;\n    puVar14[7] = uVar2;\n    puVar14 = puVar15;\n  } while (param_1 + 0x100 != puVar15);\n  do {\n    lVar3 = uVar2 + puVar5[7];\n    uVar2 = puVar5[5];\n    uVar1 = puVar5[6];\n    lVar8 = uVar10 + (*puVar5 - (uVar4 + puVar5[4]));\n    uVar4 = FUN_00111e10(lVar3);\n    uVar4 = uVar4 >> 9 ^ uVar6 + uVar2;\n    uVar16 = uVar16 + uVar1 ^ lVar8 << 9;\n    lVar13 = (puVar5[1] - uVar4) + uVar7;\n    lVar11 = uVar12 + (puVar5[2] - uVar16);\n    uVar10 = lVar8 + lVar13;\n    uVar6 = FUN_00111e10(lVar13);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar8;\n    uVar10 = uVar10 ^ lVar11 << 0xf;\n    lVar18 = (puVar5[3] - uVar2) + uVar9;\n    uVar12 = lVar11 + lVar18;\n    auVar19 = FUN_00111e10(lVar18);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar13 + lVar11;\n    lVar8 = uVar4 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar11 = uVar16 - uVar12;\n    uVar9 = FUN_00111e10(lVar8);\n    uVar6 = lVar8 + lVar11;\n    *puVar5 = uVar10;\n    puVar14 = puVar5 + 8;\n    uVar4 = lVar11 * 0x4000 ^ lVar3 + lVar8;\n    puVar5[1] = uVar7;\n    uVar9 = uVar9 >> 0x11 ^ lVar18 + lVar3;\n    puVar5[2] = uVar12;\n    uVar2 = uVar2 - uVar9;\n    puVar5[3] = uVar9;\n    uVar16 = lVar11 + uVar2;\n    puVar5[4] = uVar4;\n    puVar5[5] = uVar6;\n    puVar5[6] = uVar16;\n    puVar5[7] = uVar2;\n    puVar5 = puVar14;\n  } while (param_1 + 0x100 != puVar14);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n", 
    "00114760": "\nvoid _obstack_free(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  ulong *puVar2;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  while( true ) {\n    if (puVar1 == (ulong *)0x0) {\n      if (param_2 == (ulong *)0x0) {\n        return;\n      }\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    if ((puVar1 < param_2) && (puVar2 = (ulong *)*puVar1, param_2 <= puVar2)) break;\n    puVar1 = (ulong *)puVar1[1];\n    FUN_001144f0(param_1);\n    *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 2;\n  }\n  *(ulong **)(param_1 + 0x18) = param_2;\n  *(ulong **)(param_1 + 0x10) = param_2;\n  *(ulong **)(param_1 + 0x20) = puVar2;\n  *(ulong **)(param_1 + 8) = puVar1;\n  return;\n}\n\n", 
    "00113670": "\nundefined4 FUN_00113670(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  \n  uVar1 = FUN_00114e30();\n  piVar2 = __errno_location();\n  if (*piVar2 == 0) {\n    return uVar1;\n  }\n  FUN_001135a0(*piVar2,param_1,param_2,param_3,param_4);\n  return uVar1;\n}\n\n", 
    "00114880": "\nuint FUN_00114880(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 << (param_2 & 7) | (byte)param_1 >> 8 - (param_2 & 7));\n}\n\n", 
    "001073e0": "\nvoid FUN_001073e0(void)\n\n{\n  int iVar1;\n  \n  FUN_00107140(0xffffffff);\n  if (DAT_001202dc < 1) {\n    return;\n  }\n  do {\n    iVar1 = FUN_00107140(0);\n    if (iVar1 == 0) {\n      return;\n    }\n  } while (0 < DAT_001202dc);\n  return;\n}\n\n", 
    "00103f2d": "\nvoid switchD_00112da8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00121288": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105710": "\nvoid FUN_00105710(long param_1,undefined *param_2)\n\n{\n  if (*(short *)(param_1 + 0x30) != 0) {\n    *param_2 = 0x62;\n    param_2 = param_2 + 1;\n  }\n  if (*(undefined1 **)(param_1 + 0x20) == &DAT_001204c0) {\n    *param_2 = 100;\n    param_2 = param_2 + 1;\n  }\n  if (*(long *)(param_1 + 0x28) != 0) {\n    *param_2 = 0x66;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x34) != '\\0') {\n    *param_2 = 0x67;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x35) != '\\0') {\n    *param_2 = 0x68;\n    param_2 = param_2 + 1;\n  }\n  if (*(undefined1 **)(param_1 + 0x20) == &DAT_001205c0) {\n    *param_2 = 0x69;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x36) != '\\0') {\n    *param_2 = 0x4d;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x32) != '\\0') {\n    *param_2 = 0x6e;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x33) != '\\0') {\n    *param_2 = 0x52;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x37) != '\\0') {\n    *param_2 = 0x72;\n    param_2 = param_2 + 1;\n  }\n  if (*(char *)(param_1 + 0x38) != '\\0') {\n    *param_2 = 0x56;\n    param_2 = param_2 + 1;\n  }\n  *param_2 = 0;\n  return;\n}\n\n", 
    "00105950": "\nvoid FUN_00105950(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00111d80": "\nvoid FUN_00111d80(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n", 
    "00121180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint posix_fadvise(int __fd,__off_t __offset,__off_t __len,int __advise)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint toupper(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaction_0011fc80)();\n  return iVar1;\n}\n\n", 
    "00103f37": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114400": "\nint FUN_00114400(long *param_1,timespec *param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  long in_FS_OFFSET;\n  timespec local_38;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((ulong)param_1[1] < 1000000000) {\n    lVar3 = *param_1;\n    local_38.tv_nsec = param_1[1];\n    while (0x1fa400 < lVar3) {\n      local_38.tv_sec = 0x1fa400;\n      lVar3 = lVar3 + -0x1fa400;\n      iVar1 = nanosleep(&local_38,param_2);\n      if (iVar1 != 0) {\n        if (param_2 != (timespec *)0x0) {\n          param_2->tv_sec = param_2->tv_sec + lVar3;\n        }\n        goto LAB_00114497;\n      }\n      local_38.tv_nsec = 0;\n    }\n    local_38.tv_sec = lVar3;\n    iVar1 = nanosleep(&local_38,param_2);\n  }\n  else {\n    piVar2 = __errno_location();\n    *piVar2 = 0x16;\n    iVar1 = -1;\n  }\nLAB_00114497:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010fa10": "\nundefined8\nFUN_0010fa10(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f950(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00103e10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0011ff40)();\n  return;\n}\n\n", 
    "00103f32": "\nvoid FUN_00103f32(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114890": "\nuint FUN_00114890(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffffff00 |\n         (uint)(byte)((byte)param_1 >> (param_2 & 7) | (byte)param_1 << 8 - (param_2 & 7));\n}\n\n", 
    "0010f8a0": "\nundefined8\nFUN_0010f8a0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f7f0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00113200": "\nvoid FUN_00113200(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00113170();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00113560": "\nvoid FUN_00113560(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n                    /* WARNING: Subroutine does not return */\n  error(DAT_00120130,0,&DAT_00117fb4,uVar1);\n}\n\n", 
    "00103f1e": "\nvoid FUN_00103f1e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00121298": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pipe(int *__pipedes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010ace0": "\nulong FUN_0010ace0(long param_1,undefined8 param_2,ulong param_3,undefined8 param_4,\n                  undefined8 param_5)\n\n{\n  undefined8 uVar1;\n  ulong uVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = FUN_00107890(param_1,param_3,&local_48);\n  if ((uVar2 < param_3) && (uVar2 < 2)) {\n    uVar1 = *(undefined8 *)(param_1 + uVar2 * 0x10);\n    uVar3 = dcgettext(0,\"open failed\",5);\n                    /* WARNING: Subroutine does not return */\n    FUN_001062b0(uVar3,uVar1);\n  }\n  FUN_0010a560(param_1,param_2,uVar2,param_4,param_5,local_48);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103960": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0011fce8)();\n  return;\n}\n\n", 
    "00121390": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121270": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkstemp(char *__template)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105bb0": "\nuint FUN_00105bb0(byte param_1)\n\n{\n  ushort **ppuVar1;\n  uint extraout_EDX;\n  \n  ppuVar1 = __ctype_b_loc();\n  return (*ppuVar1)[param_1] & 1 | extraout_EDX & 0xffffff00 | (uint)(param_1 == 10);\n}\n\n", 
    "00121150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001150d4": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00103af0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0011fdb0)();\n  return iVar1;\n}\n\n", 
    "00114610": "\nvoid _obstack_begin_1(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                     undefined8 param_5,undefined8 param_6)\n\n{\n  *(byte *)(param_1 + 0x50) = *(byte *)(param_1 + 0x50) | 1;\n  *(undefined8 *)(param_1 + 0x38) = param_4;\n  *(undefined8 *)(param_1 + 0x40) = param_5;\n  *(undefined8 *)(param_1 + 0x48) = param_6;\n  FUN_00114510();\n  return;\n}\n\n", 
    "0010a2b0": "\nundefined8 FUN_0010a2b0(undefined8 param_1,char param_2)\n\n{\n  long lVar1;\n  char cVar2;\n  int iVar3;\n  undefined8 uVar4;\n  long lVar5;\n  long lVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  undefined8 uVar9;\n  ulong uVar10;\n  void *__n;\n  uint uVar11;\n  void *pvVar12;\n  void *pvVar13;\n  undefined8 uVar14;\n  void **ppvVar15;\n  long in_FS_OFFSET;\n  long local_d8;\n  void *local_b8;\n  void *local_b0;\n  long local_a8;\n  long local_a0;\n  void *local_98 [2];\n  long local_88;\n  undefined8 local_80;\n  undefined local_58 [24];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar4 = FUN_00106410(param_1,\"r\");\n  lVar6 = DAT_00120390;\n  uVar11 = (uint)DAT_00120399;\n  uVar10 = DAT_00120030;\n  if (DAT_00120030 <= DAT_001203b8) {\n    uVar10 = DAT_001203b8;\n  }\n  pvVar12 = (void *)0x0;\n  FUN_001065e0(local_98,0x20,uVar10);\n  local_b8 = (void *)0x0;\n  local_d8 = 0;\n  do {\n    cVar2 = FUN_00108e40(local_98,uVar4,param_1);\n    if (cVar2 == '\\0') {\n      uVar14 = 1;\nLAB_0010a46a:\n      FUN_00106440(uVar4,param_1);\n      free(local_98[0]);\n      free(local_b8);\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar14;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    lVar5 = FUN_001080f0(local_98[0],local_80);\n    ppvVar15 = (void **)(lVar5 + -0x20);\n    lVar1 = local_88 * -0x20;\n    if (pvVar12 != (void *)0x0) {\n      iVar3 = FUN_00108b00(&local_b8,ppvVar15);\n      goto joined_r0x0010a459;\n    }\n    while ((void **)(lVar5 + lVar1) < ppvVar15) {\n      iVar3 = FUN_00108b00(ppvVar15,ppvVar15 + -4);\n      ppvVar15 = ppvVar15 + -4;\njoined_r0x0010a459:\n      if ((int)(uVar11 ^ 1) <= iVar3) {\n        uVar14 = 0;\n        if (param_2 == 'c') {\n          lVar6 = FUN_001080f0(local_98[0],local_80);\n          uVar7 = FUN_0010eba0((lVar6 - (long)ppvVar15 >> 5) + local_d8,local_58);\n          uVar9 = DAT_00120808;\n          uVar8 = dcgettext(0,\"%s: %s:%s: disorder: \",5);\n          __fprintf_chk(stderr,1,uVar8,uVar9,param_1,uVar7);\n          uVar9 = dcgettext(0,\"standard error\",5);\n          FUN_001099c0(ppvVar15,stderr,uVar9);\n        }\n        goto LAB_0010a46a;\n      }\n    }\n    __n = ppvVar15[1];\n    local_d8 = local_d8 + local_88;\n    pvVar13 = pvVar12;\n    if (pvVar12 < __n) {\n      do {\n        pvVar13 = (void *)((long)pvVar13 * 2);\n        pvVar12 = __n;\n        if (pvVar13 == (void *)0x0) break;\n        pvVar12 = pvVar13;\n      } while (pvVar13 < __n);\n      free(local_b8);\n      local_b8 = (void *)FUN_00113340(pvVar12);\n      __n = ppvVar15[1];\n    }\n    memcpy(local_b8,*ppvVar15,(size_t)__n);\n    local_b0 = ppvVar15[1];\n    if (lVar6 != 0) {\n      local_a8 = ((long)ppvVar15[2] + (long)local_b8) - (long)*ppvVar15;\n      local_a0 = ((long)local_b8 + (long)ppvVar15[3]) - (long)*ppvVar15;\n    }\n  } while( true );\n}\n\n", 
    "0010ea10": "\nundefined8 FUN_0010ea10(long *param_1,undefined8 param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  \n  uVar3 = param_1[2];\n  lVar1 = *param_1;\n  if (param_1[1] - 1U <= uVar3) {\n    lVar1 = FUN_00113410(lVar1,param_1 + 1,8);\n    uVar3 = param_1[2];\n    *param_1 = lVar1;\n  }\n  lVar2 = uVar3 + 1;\n  param_1[2] = lVar2;\n  *(undefined8 *)(lVar1 + lVar2 * 8) = param_2;\n  FUN_0010e820(*param_1,lVar2,param_1[3]);\n  return 0;\n}\n\n", 
    "00111230": "\nvoid FUN_00111230(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00120920;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_0010fdb0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001075c0": "\nvoid FUN_001075c0(int param_1,uint *param_2)\n\n{\n  char cVar1;\n  uint uVar2;\n  uint uVar3;\n  char *__buf;\n  ulong uVar4;\n  uint *puVar5;\n  uint *puVar6;\n  char *pcVar7;\n  long in_FS_OFFSET;\n  bool bVar8;\n  byte bVar9;\n  undefined local_1c [12];\n  undefined8 local_10;\n  \n  bVar9 = 0;\n  local_10 = *(undefined8 *)(in_FS_OFFSET + 0x28);\n  puVar6 = param_2;\n  do {\n    puVar5 = puVar6;\n    uVar2 = *puVar5 + 0xfefefeff & ~*puVar5;\n    uVar3 = uVar2 & 0x80808080;\n    puVar6 = puVar5 + 1;\n  } while (uVar3 == 0);\n  bVar8 = (uVar2 & 0x8080) == 0;\n  if (bVar8) {\n    uVar3 = uVar3 >> 0x10;\n  }\n  if (bVar8) {\n    puVar6 = (uint *)((long)puVar5 + 6);\n  }\n  write(2,param_2,(long)puVar6 + ((-3 - (ulong)CARRY1((byte)uVar3,(byte)uVar3)) - (long)param_2));\n  if (param_1 != 0) {\n    __buf = (char *)FUN_0010eac0(param_1,local_1c);\n    write(2,\": errno \",8);\n    uVar4 = 0xffffffffffffffff;\n    pcVar7 = __buf;\n    do {\n      if (uVar4 == 0) break;\n      uVar4 = uVar4 - 1;\n      cVar1 = *pcVar7;\n      pcVar7 = pcVar7 + (ulong)bVar9 * -2 + 1;\n    } while (cVar1 != '\\0');\n    write(2,__buf,~uVar4 - 1);\n  }\n  write(2,\"\\n\",1);\n                    /* WARNING: Subroutine does not return */\n  _exit(2);\n}\n\n", 
    "0010e8a0": "\nulong FUN_0010e8a0(long param_1,ulong param_2,code *param_3)\n\n{\n  undefined8 uVar1;\n  int iVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  ulong uVar5;\n  ulong uVar6;\n  \n  uVar1 = *(undefined8 *)(param_1 + 8);\n  if (param_2 >> 1 == 0) {\n    puVar3 = (undefined8 *)(param_1 + 8);\n    uVar6 = 1;\n  }\n  else {\n    uVar6 = 1;\n    do {\n      uVar5 = uVar6 * 2;\n      if (uVar5 < param_2) {\n        puVar3 = (undefined8 *)(param_1 + (uVar5 + 1) * 8);\n        puVar4 = (undefined8 *)(uVar6 * 0x10 + param_1);\n        iVar2 = (*param_3)(*puVar4,*puVar3);\n        if (iVar2 < 0) {\n          puVar4 = puVar3;\n          uVar5 = uVar5 + 1;\n        }\n      }\n      else {\n        puVar4 = (undefined8 *)(uVar6 * 0x10 + param_1);\n      }\n      iVar2 = (*param_3)(*puVar4,uVar1);\n      puVar3 = (undefined8 *)(param_1 + uVar6 * 8);\n    } while ((0 < iVar2) &&\n            (*puVar3 = *puVar4, puVar3 = puVar4, uVar6 = uVar5, uVar5 <= param_2 >> 1));\n  }\n  *puVar3 = uVar1;\n  return uVar6;\n}\n\n", 
    "00111110": "\nvoid FUN_00111110(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00120920;\n  }\n  FUN_00113510(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00114860": "\nuint FUN_00114860(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 << (param_2 & 0xf) |\n                       (ushort)param_1 >> 0x10 - (param_2 & 0xf));\n}\n\n", 
    "00111470": "\nvoid FUN_00111470(void)\n\n{\n  FUN_00110f70();\n  return;\n}\n\n", 
    "00114980": "\nulong FUN_00114980(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001052c0": "\nvoid FUN_001052c0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0011ffc8)\n            (FUN_00103f40,unaff_retaddr,&stack0x00000008,FUN_00115000,FUN_00115070,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001064d0": "\nvoid FUN_001064d0(undefined8 param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  long *plVar3;\n  long lVar4;\n  \n  lVar2 = FUN_00113510(param_1,0x48);\n  plVar3 = &DAT_00120390;\n  lVar1 = DAT_00120390;\n  if (DAT_00120390 != 0) {\n    do {\n      lVar4 = lVar1;\n      lVar1 = *(long *)(lVar4 + 0x40);\n    } while (lVar1 != 0);\n    plVar3 = (long *)(lVar4 + 0x40);\n  }\n  *plVar3 = lVar2;\n  *(undefined8 *)(lVar2 + 0x40) = 0;\n  return;\n}\n\n", 
    "00121388": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint execlp(char *__file,char *__arg,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0011fc50)();\n  return;\n}\n\n", 
    "00121268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcoll(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103950": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0011fce0)();\n  return;\n}\n\n", 
    "0010bfe0": "\nvoid FUN_0010bfe0(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = FUN_00111830(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = FUN_00111830(lVar1);\n      __fprintf_chk(stderr,1,&DAT_00117fb2,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "00121148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121280": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ae0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_cond_signal(pthread_cond_t *__cond)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_pthread_cond_signal_0011fda8)();\n  return iVar1;\n}\n\n", 
    "00113410": "\nvoid FUN_00113410(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0011346b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0011346b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00113560(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_001133a0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010d6b0": "\nbool FUN_0010d6b0(long param_1,long param_2)\n\n{\n  return param_2 == param_1;\n}\n\n", 
    "00107070": "\nvoid FUN_00107070(int param_1,int param_2)\n\n{\n  if (param_1 == param_2) {\n    return;\n  }\n  dup2(param_1,param_2);\n  close(param_1);\n  return;\n}\n\n", 
    "00111480": "\nvoid FUN_00111480(undefined8 param_1)\n\n{\n  FUN_00111450(0,param_1);\n  return;\n}\n\n", 
    "00114630": "\nulong * _obstack_newchunk(ulong **param_1,ulong param_2)\n\n{\n  ulong *puVar1;\n  ulong **ppuVar2;\n  ulong *puVar3;\n  ulong *puVar4;\n  ulong **ppuVar5;\n  ulong __n;\n  \n  __n = (long)param_1[3] - (long)param_1[2];\n  puVar1 = param_1[1];\n  puVar4 = (ulong *)(param_2 + __n + (long)param_1[6]);\n  puVar3 = (ulong *)((long)puVar4 + (__n >> 3) + 100);\n  if (puVar4 <= *param_1) {\n    puVar4 = *param_1;\n  }\n  if (puVar3 <= puVar4) {\n    puVar3 = puVar4;\n  }\n  ppuVar5 = param_1;\n  if ((CARRY8(param_2,__n) == false) && (CARRY8(param_2 + __n,(ulong)param_1[6]) == false)) {\n    puVar4 = puVar3;\n    ppuVar2 = (ulong **)FUN_001144d0();\n    if (ppuVar2 != (ulong **)0x0) {\n      param_1[1] = (ulong *)ppuVar2;\n      ppuVar2[1] = puVar1;\n      param_1[4] = (ulong *)((long)ppuVar2 + (long)puVar3);\n      *ppuVar2 = (ulong *)((long)ppuVar2 + (long)puVar3);\n      puVar4 = (ulong *)((long)(ppuVar2 + 2) + (long)param_1[6] & ~(ulong)param_1[6]);\n      puVar3 = (ulong *)memcpy(puVar4,param_1[2],__n);\n      if ((*(byte *)(param_1 + 10) & 2) == 0) {\n        puVar3 = (ulong *)(~(ulong)param_1[6] & (long)(puVar1 + 2) + (long)param_1[6]);\n        if (param_1[2] == puVar3) {\n          ppuVar2[1] = (ulong *)puVar1[1];\n          puVar3 = (ulong *)FUN_001144f0(param_1,puVar1);\n        }\n      }\n      *(byte *)(param_1 + 10) = *(byte *)(param_1 + 10) & 0xfd;\n      param_1[2] = puVar4;\n      param_1[3] = (ulong *)(__n + (long)puVar4);\n      return puVar3;\n    }\n  }\n  (*(code *)obstack_alloc_failed_handler)();\n  puVar3 = ppuVar5[1];\n  if (puVar3 != (ulong *)0x0) {\n    while ((puVar4 <= puVar3 || ((ulong *)*puVar3 < puVar4))) {\n      puVar3 = (ulong *)puVar3[1];\n      if (puVar3 == (ulong *)0x0) {\n        return (ulong *)0x0;\n      }\n    }\n    return (ulong *)0x1;\n  }\n  return puVar3;\n}\n\n", 
    "00113540": "\nvoid FUN_00113540(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00113510(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00114870": "\nuint FUN_00114870(uint param_1,byte param_2)\n\n{\n  return param_1 & 0xffff0000 |\n         (uint)(ushort)((ushort)param_1 >> (param_2 & 0xf) |\n                       (ushort)param_1 << 0x10 - (param_2 & 0xf));\n}\n\n", 
    "001053d0": "\nulong FUN_001053d0(long param_1,ulong param_2)\n\n{\n  return (ulong)(long)*(int *)(param_1 + 8) % param_2;\n}\n\n", 
    "001065e0": "\nvoid FUN_001065e0(void **param_1,void *param_2,ulong param_3)\n\n{\n  void *pvVar1;\n  void *__size;\n  \n  do {\n    __size = (void *)((param_3 & 0xffffffffffffffe0) + 0x20);\n    pvVar1 = malloc((size_t)__size);\n    *param_1 = pvVar1;\n    if (pvVar1 != (void *)0x0) {\n      param_1[5] = param_2;\n      param_1[3] = __size;\n      param_1[2] = (void *)0x0;\n      param_1[4] = (void *)0x0;\n      param_1[1] = (void *)0x0;\n      *(undefined *)(param_1 + 6) = 0;\n      return;\n    }\n    param_3 = (ulong)__size >> 1;\n  } while ((long)param_2 + 1U < param_3);\n                    /* WARNING: Subroutine does not return */\n  FUN_00113560();\n}\n\n", 
    "00121398": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_init(pthread_mutex_t *__mutex,pthread_mutexattr_t *__mutexattr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121278": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __sched_cpucount(size_t __setsize,cpu_set_t *__setp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___sched_cpucount_0011fcd8)();\n  return iVar1;\n}\n\n", 
    "00121158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e010": "\nvoid FUN_0010e010(long **param_1)\n\n{\n  long *plVar1;\n  long *plVar2;\n  long *plVar3;\n  long *plVar4;\n  long *plVar5;\n  \n  plVar5 = *param_1;\n  if (*param_1 < param_1[1]) {\n    do {\n      while (*plVar5 != 0) {\n        plVar4 = param_1[8];\n        plVar3 = (long *)plVar5[1];\n        while (plVar3 != (long *)0x0) {\n          if (plVar4 != (long *)0x0) {\n            (*(code *)plVar4)(*plVar3);\n            plVar4 = param_1[8];\n          }\n          plVar1 = (long *)plVar3[1];\n          plVar2 = param_1[9];\n          *plVar3 = 0;\n          plVar3[1] = (long)plVar2;\n          param_1[9] = plVar3;\n          plVar3 = plVar1;\n        }\n        if (plVar4 != (long *)0x0) {\n          (*(code *)plVar4)(*plVar5);\n        }\n        *plVar5 = 0;\n        plVar4 = plVar5 + 2;\n        plVar5[1] = 0;\n        plVar5 = plVar4;\n        if (param_1[1] < plVar4 || param_1[1] == plVar4) goto LAB_0010e0ab;\n      }\n      plVar5 = plVar5 + 2;\n    } while (plVar5 <= param_1[1] && param_1[1] != plVar5);\n  }\nLAB_0010e0ab:\n  param_1[3] = (long *)0x0;\n  param_1[4] = (long *)0x0;\n  return;\n}\n\n", 
    "00113d00": "\nuint FUN_00113d00(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_00113dfb;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_00113e3c:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_00113e90_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_00113dc2;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00113e66_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00113e66_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = FUN_00113ca0(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_00113e90_caseD_43;\n        case 0x45:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = FUN_00113cd0(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = FUN_00113ca0(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = FUN_00113ca0(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_00113dc2;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_00113e3c;\n      }\n    }\n  }\nLAB_00113dfb:\n  uVar10 = 4;\nLAB_00113dc2:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00121038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0011fc48)();\n  return iVar1;\n}\n\n", 
    "00103980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0011fcf8)();\n  return sVar1;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint toupper(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_toupper_0011fc68)();\n  return iVar1;\n}\n\n", 
    "00121370": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sched_getaffinity(__pid_t __pid,size_t __cpusetsize,cpu_set_t *__cpuset)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105ab0": "\nvoid FUN_00105ab0(long param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = pthread_sigmask(0,(__sigset_t *)&DAT_00120300,(__sigset_t *)(param_1 + 8));\n  *(bool *)param_1 = iVar1 == 0;\n  return;\n}\n\n", 
    "00121010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_create(pthread_t *__newthread,pthread_attr_t *__attr,__start_routine *__start_routine,\n                  void *__arg)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f05": "\nvoid FUN_00103f05(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114830": "\nuint FUN_00114830(uint param_1,byte param_2)\n\n{\n  return param_1 >> (param_2 & 0x1f) | param_1 << 0x20 - (param_2 & 0x1f);\n}\n\n", 
    "00114950": "\nbool FUN_00114950(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00103f00": "\nvoid FUN_00103f00(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00121008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00111450": "\nvoid FUN_00111450(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00110f70(param_1,param_2,0xffffffffffffffff,&DAT_00120920);\n  return;\n}\n\n", 
    "0010c160": "\nlong FUN_0010c160(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00114960": "\nbool FUN_00114960(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001073a0": "\nvoid FUN_001073a0(void)\n\n{\n  int iVar1;\n  \n  if (DAT_001202dc < 1) {\n    return;\n  }\n  do {\n    iVar1 = FUN_00107140(0);\n    if (iVar1 == 0) {\n      return;\n    }\n  } while (0 < DAT_001202dc);\n  return;\n}\n\n", 
    "00112780": "\nvoid FUN_00112780(char *param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = mkostemp(param_1,param_2);\n  FUN_00114c10(iVar1,param_2);\n  return;\n}\n\n", 
    "001062b0": "\nvoid FUN_001062b0(undefined8 param_1,long param_2)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  \n  if (param_2 == 0) {\n    param_2 = dcgettext(0,\"standard output\",5);\n  }\n  uVar1 = FUN_00111670(0,3,param_2);\n  piVar2 = __errno_location();\n                    /* WARNING: Subroutine does not return */\n  error(2,*piVar2,\"%s: %s\",param_1,uVar1);\n}\n\n", 
    "00111570": "\nvoid FUN_00111570(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_001114a0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00121000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00112d00": "\nundefined8\nFUN_00112d00(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_001188ca,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00112fc9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00112fc9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0011306b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0011306b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00112e1d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00112e1d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010f670": "\nundefined8 FUN_0010f670(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_001149f0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010f650(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "0010e340": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_0010e340(long param_1,long param_2,long *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  long *plVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  float fVar7;\n  undefined local_38;\n  undefined7 uStack_37;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  lVar2 = FUN_0010d820(param_1,param_2,&local_38,0);\n  if (lVar2 != 0) {\n    uVar5 = 0;\n    if (param_3 != (long *)0x0) {\n      *param_3 = lVar2;\n    }\n    goto LAB_0010e38e;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x18);\n  if ((long)uVar4 < 0) {\n    fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar7 = fVar7 + fVar7;\n  }\n  else {\n    fVar7 = (float)uVar4;\n  }\n  uVar4 = *(ulong *)(param_1 + 0x10);\n  if ((long)uVar4 < 0) {\n    fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n    fVar6 = fVar6 + fVar6;\n  }\n  else {\n    fVar6 = (float)uVar4;\n  }\n  if (fVar6 * *(float *)(*(long *)(param_1 + 0x28) + 8) < fVar7) {\n    FUN_0010d6f0(param_1 + 0x28);\n    lVar2 = *(long *)(param_1 + 0x28);\n    uVar4 = *(ulong *)(param_1 + 0x10);\n    if ((long)uVar4 < 0) {\n      fVar7 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar7 = fVar7 + fVar7;\n    }\n    else {\n      fVar7 = (float)uVar4;\n    }\n    uVar4 = *(ulong *)(param_1 + 0x18);\n    if ((long)uVar4 < 0) {\n      fVar6 = (float)(uVar4 >> 1 | (ulong)((uint)uVar4 & 1));\n      fVar6 = fVar6 + fVar6;\n    }\n    else {\n      fVar6 = (float)uVar4;\n    }\n    if (fVar6 <= *(float *)(lVar2 + 8) * fVar7) goto LAB_0010e3ea;\n    fVar7 = fVar7 * *(float *)(lVar2 + 0xc);\n    if (*(char *)(lVar2 + 0x10) == '\\0') {\n      fVar7 = fVar7 * *(float *)(lVar2 + 8);\n    }\n    if (fVar7 < _DAT_001180c8) {\n      if (_DAT_001180cc <= fVar7) {\n        uVar4 = (long)(fVar7 - _DAT_001180cc) ^ 0x8000000000000000;\n      }\n      else {\n        uVar4 = (ulong)fVar7;\n      }\n      cVar1 = FUN_0010e1b0(param_1,uVar4);\n      if (cVar1 != '\\0') {\n        lVar2 = FUN_0010d820(param_1,param_2,&local_38,0);\n        if (lVar2 != 0) {\n          uVar5 = FUN_00103f0f();\n          return uVar5;\n        }\n        goto LAB_0010e3ea;\n      }\n    }\n  }\n  else {\nLAB_0010e3ea:\n    if (*(long *)CONCAT71(uStack_37,local_38) == 0) {\n      *(long *)CONCAT71(uStack_37,local_38) = param_2;\n      uVar5 = 1;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      *(long *)(param_1 + 0x18) = *(long *)(param_1 + 0x18) + 1;\n      goto LAB_0010e38e;\n    }\n    plVar3 = (long *)FUN_0010d920(param_1 + 0x48);\n    if (plVar3 != (long *)0x0) {\n      *plVar3 = param_2;\n      uVar5 = 1;\n      plVar3[1] = *(long *)(CONCAT71(uStack_37,local_38) + 8);\n      *(long **)(CONCAT71(uStack_37,local_38) + 8) = plVar3;\n      *(long *)(param_1 + 0x20) = *(long *)(param_1 + 0x20) + 1;\n      goto LAB_0010e38e;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010e38e:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00121368": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_mutex_unlock(pthread_mutex_t *__mutex)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint nanosleep(timespec *__requested_time,timespec *__remaining)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103850": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0011fc60)();\n  return;\n}\n\n", 
    "00103970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0011fcf0)();\n  return sVar1;\n}\n\n", 
    "00121380": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001150c0": "\nvoid FUN_001150c0(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00121260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107ec0": "\nundefined8 * FUN_00107ec0(long param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00113340(param_1 << 8);\n  puVar1[6] = param_2;\n  puVar1[5] = param_2;\n  puVar1[3] = 0;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  *puVar1 = 0;\n  puVar1[4] = 0;\n  puVar1[7] = 0;\n  *(undefined4 *)(puVar1 + 10) = 0;\n  *(undefined *)((long)puVar1 + 0x54) = 0;\n  pthread_mutex_init((pthread_mutex_t *)(puVar1 + 0xb),(pthread_mutexattr_t *)0x0);\n  FUN_00107d90(puVar1,puVar1 + 0x10,param_3,param_1,param_2,0);\n  return puVar1;\n}\n\n", 
    "00121140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkostemp(char *__template,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107fe0": "\nvoid FUN_00107fe0(undefined8 param_1,long *param_2)\n\n{\n  long lVar1;\n  \n  if (*(char *)((long)param_2 + 0x54) == '\\0') {\n    if (*param_2 == param_2[2]) {\n      if (param_2[1] == param_2[3]) {\n        return;\n      }\n      lVar1 = param_2[5];\n    }\n    else {\n      if (param_2[1] != param_2[3]) goto LAB_00107ffc;\n      lVar1 = param_2[6];\n    }\n    if (lVar1 == 0) {\nLAB_00107ffc:\n      FUN_00107fa0();\n      return;\n    }\n  }\n  return;\n}\n\n", 
    "00121020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00113510": "\nvoid FUN_00113510(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00113340(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00114720": "\nulong * _obstack_allocated_p(long param_1,ulong *param_2)\n\n{\n  ulong *puVar1;\n  \n  puVar1 = *(ulong **)(param_1 + 8);\n  if (puVar1 == (ulong *)0x0) {\n    return puVar1;\n  }\n  while ((param_2 <= puVar1 || ((ulong *)*puVar1 < param_2))) {\n    puVar1 = (ulong *)puVar1[1];\n    if (puVar1 == (ulong *)0x0) {\n      return (ulong *)0x0;\n    }\n  }\n  return (ulong *)0x1;\n}\n\n", 
    "00114840": "\nvoid thunk_FUN_00114800(void)\n\n{\n  FUN_00114800();\n  return;\n}\n\n", 
    "001097a0": "\nvoid FUN_001097a0(byte *param_1,long param_2,long *param_3)\n\n{\n  byte bVar1;\n  long lVar2;\n  char cVar3;\n  byte bVar4;\n  byte *pbVar5;\n  undefined8 uVar6;\n  undefined8 uVar7;\n  long extraout_RDX;\n  byte *__nptr;\n  long in_FS_OFFSET;\n  undefined auVar8 [16];\n  byte *local_40;\n  byte *local_38;\n  long local_30;\n  \n  pbVar5 = param_1 + param_2 + -1;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  __nptr = param_1;\n  if (param_3 == (long *)0x0) goto LAB_001098de;\n  lVar2 = *param_3;\n  if (lVar2 == -1) {\n    if (param_3[2] != -1) goto LAB_001097f2;\nLAB_00109803:\n    if ((*(char *)(param_3 + 6) == '\\0') || (lVar2 != -1)) goto LAB_0010980f;\n  }\n  else {\n    auVar8 = FUN_00108100();\n    __nptr = SUB168(auVar8,0);\n    if (*(long *)(SUB168(auVar8 >> 0x40,0) + 0x10) != -1) {\nLAB_001097f2:\n      pbVar5 = (byte *)FUN_00108250(param_1,param_2,param_3);\n      goto LAB_00109803;\n    }\nLAB_0010980f:\n    if ((*(char *)((long)param_3 + 0x36) == '\\0') && (cVar3 = FUN_001056a0(param_3), cVar3 == '\\0'))\n    goto LAB_001098de;\n  }\n  bVar1 = *pbVar5;\n  *pbVar5 = 0;\n  while (bVar4 = FUN_001053b0((int)(char)*__nptr), *(char *)(extraout_RDX + (ulong)bVar4) != '\\0') {\n    __nptr = __nptr + 1;\n  }\n  local_40 = pbVar5;\n  if (__nptr <= pbVar5) {\n    local_40 = __nptr;\n    if (*(char *)((long)param_3 + 0x36) == '\\0') {\n      if (*(char *)((long)param_3 + 0x34) == '\\0') {\n        local_40 = pbVar5;\n        if ((param_3[6] & 0xff0000ff0000U) != 0) {\n          local_38 = __nptr;\n          if (__nptr < pbVar5) {\n            local_38 = __nptr + (*__nptr == 0x2d);\n          }\n          local_40 = __nptr;\n          bVar4 = FUN_00105460(&local_38);\n          if ((0x2f < bVar4) && (local_40 = local_38, *(char *)((long)param_3 + 0x35) != '\\0')) {\n            local_40 = local_38 + ((&DAT_00116360)[*local_38] != '\\0');\n          }\n        }\n      }\n      else {\n        strtold((char *)__nptr,(char **)&local_40);\n      }\n    }\n    else {\n      FUN_001055b0(__nptr,&local_40);\n    }\n  }\n  *pbVar5 = bVar1;\n  pbVar5 = local_40;\nLAB_001098de:\n  uVar6 = FUN_00106650(param_1,__nptr);\n  uVar7 = FUN_00106650(__nptr,pbVar5);\n  FUN_00106690(uVar6,uVar7);\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0010b4b0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010b4b0(undefined8 *param_1,ulong param_2,long param_3,ulong param_4)\n\n{\n  undefined8 uVar1;\n  undefined8 *puVar2;\n  long *plVar3;\n  char cVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  ulong uVar8;\n  long *__ptr;\n  undefined8 uVar9;\n  undefined8 extraout_RDX;\n  char cVar10;\n  ulong uVar11;\n  long in_FS_OFFSET;\n  ulong local_120;\n  long local_118;\n  undefined8 *local_110;\n  undefined8 local_f8;\n  undefined8 local_f0;\n  void *local_e8;\n  ulong local_e0;\n  ulong local_d8;\n  long local_d0;\n  ulong local_c8;\n  char local_b8;\n  undefined local_a8 [104];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d0 = 0;\n  local_120 = param_2;\n  if (param_2 != 0) {\n    uVar11 = 0;\n    local_120 = param_2;\n    local_110 = param_1;\n    do {\n      uVar1 = *local_110;\n      local_f8 = FUN_00106410(uVar1,\"r\");\n      local_118 = 0x30;\n      if (1 < param_4) {\n        local_118 = 1;\n        uVar8 = 1;\n        do {\n          uVar8 = uVar8 * 2;\n          local_118 = local_118 + 1;\n        } while (uVar8 < param_4);\n        local_118 = local_118 * 0x20;\n      }\n      if (local_d0 == 0) {\n        uVar9 = FUN_0010b2e0(&local_f8,local_110,local_120,local_118);\n        FUN_001065e0(&local_e8,local_118,uVar9);\n      }\n      uVar8 = local_120 - 1;\n      local_b8 = '\\0';\n      while (cVar4 = FUN_00108e40(&local_e8,local_f8,uVar1), cVar10 = local_b8, cVar4 != '\\0') {\n        if (local_b8 == '\\0') {\nLAB_0010b62e:\n          _DAT_001207c0 = 0;\n          lVar6 = FUN_001080f0(local_e8);\nLAB_0010b646:\n          uVar11 = uVar11 + 1;\n          cVar10 = '\\0';\n          lVar7 = FUN_00107c00(&local_f0);\n          lVar7 = lVar7 + 0xd;\n        }\n        else {\n          if (uVar8 != 0) {\n            if ((local_d0 - local_e0) - local_118 * local_d8 <= local_118 + 1U) goto LAB_0010b62e;\n            local_c8 = local_e0;\n            FUN_00106440(local_f8,uVar1);\n            goto LAB_0010b6e9;\n          }\n          _DAT_001207c0 = 0;\n          lVar6 = FUN_001080f0(local_e8);\n          if ((uVar11 | local_c8) != 0) goto LAB_0010b646;\n          uVar11 = 0;\n          FUN_00106440(local_f8,uVar1);\n          local_f0 = FUN_00106410(param_3,&DAT_00117a91);\n          lVar7 = param_3;\n        }\n        if (local_d8 < 2) {\n          FUN_00109ab0(lVar6 + -0x20,local_f0,lVar7);\n          uVar9 = extraout_RDX;\n        }\n        else {\n          FUN_00107f60(local_a8,param_4);\n          lVar5 = FUN_00107ec0(param_4,local_d8,lVar6);\n          FUN_0010a050(lVar6,param_4,local_d8,lVar5 + 0x80,local_a8,local_f0,lVar7);\n          uVar9 = 0x10b597;\n        }\n        FUN_00106440(local_f0,lVar7,uVar9);\n        if (cVar10 != '\\0') {\n          free(local_e8);\n          goto LAB_0010b702;\n        }\n      }\n      FUN_00106440(local_f8,uVar1);\n      local_120 = uVar11;\n      if (uVar8 == 0) break;\nLAB_0010b6e9:\n      local_110 = local_110 + 1;\n      local_120 = uVar8;\n    } while( true );\n  }\n  free(local_e8);\n  puVar2 = DAT_001202e8;\n  __ptr = (long *)FUN_00113360(local_120,0x10);\n  plVar3 = __ptr;\n  while (puVar2 != (undefined8 *)0x0) {\n    plVar3[1] = (long)puVar2;\n    lVar6 = (long)puVar2 + 0xd;\n    puVar2 = (undefined8 *)*puVar2;\n    *plVar3 = lVar6;\n    plVar3 = plVar3 + 2;\n  }\n  FUN_0010af30(__ptr,local_120,local_120,param_3);\n  free(__ptr);\nLAB_0010b702:\n  FUN_00107400();\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00107090": "\nvoid FUN_00107090(char *param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  if (param_1 == (char *)0x0) {\n    return;\n  }\n  iVar1 = open(param_1,0x80041,0x1b6);\n  if (-1 < iVar1) {\n    FUN_00107070(iVar1,1);\n    return;\n  }\n  uVar2 = dcgettext(0,\"open failed\",5);\n                    /* WARNING: Subroutine does not return */\n  FUN_001062b0(uVar2,param_1);\n}\n\n", 
    "00114850": "\nvoid thunk_FUN_00114810(void)\n\n{\n  FUN_00114810();\n  return;\n}\n\n", 
    "00112550": "\nulong FUN_00112550(FILE *param_1,long param_2)\n\n{\n  long lVar1;\n  ulong uVar2;\n  int iVar3;\n  undefined *puVar4;\n  ulong uVar5;\n  undefined4 extraout_var;\n  undefined8 *puVar6;\n  \nLAB_0011257e:\n  do {\n    iVar3 = fgetc(param_1);\n    puVar4 = *(undefined **)(param_2 + 0x30);\n    if (iVar3 == -1) {\n      if (puVar4 != *(undefined **)(param_2 + 0x28)) {\n        if (puVar4 == *(undefined **)(param_2 + 0x38)) {\n          _obstack_newchunk(param_2 + 0x18,1);\n          puVar4 = *(undefined **)(param_2 + 0x30);\n        }\n        *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n        *puVar4 = 0;\n        FUN_001123b0(param_2);\n      }\n      puVar6 = *(undefined8 **)(param_2 + 0x88);\n      if ((ulong)(*(long *)(param_2 + 0x90) - (long)puVar6) < 8) {\n        _obstack_newchunk(param_2 + 0x70,8);\n        puVar6 = *(undefined8 **)(param_2 + 0x88);\n      }\n      *puVar6 = 0;\n      lVar1 = *(long *)(param_2 + 0x88) + 8;\n      if (lVar1 == *(long *)(param_2 + 0x80)) {\n        *(byte *)(param_2 + 0xc0) = *(byte *)(param_2 + 0xc0) | 2;\n      }\n      uVar5 = lVar1 + *(ulong *)(param_2 + 0xa0) & ~*(ulong *)(param_2 + 0xa0);\n      uVar2 = *(ulong *)(param_2 + 0x90);\n      *(ulong *)(param_2 + 0x88) = uVar5;\n      if (uVar2 - *(long *)(param_2 + 0x78) < uVar5 - *(long *)(param_2 + 0x78)) {\n        *(ulong *)(param_2 + 0x88) = uVar2;\n        uVar5 = uVar2;\n      }\n      *(long *)(param_2 + 8) = *(long *)(param_2 + 0x80);\n      lVar1 = *(long *)(param_2 + 0xd8);\n      *(ulong *)(param_2 + 0x80) = uVar5;\n      if (*(long *)(param_2 + 0xe0) == lVar1) {\n        *(byte *)(param_2 + 0x118) = *(byte *)(param_2 + 0x118) | 2;\n      }\n      uVar5 = *(long *)(param_2 + 0xe0) + *(ulong *)(param_2 + 0xf8) & ~*(ulong *)(param_2 + 0xf8);\n      uVar2 = *(ulong *)(param_2 + 0xe8);\n      *(ulong *)(param_2 + 0xe0) = uVar5;\n      if (uVar2 - *(long *)(param_2 + 0xd0) < uVar5 - *(long *)(param_2 + 0xd0)) {\n        *(ulong *)(param_2 + 0xe0) = uVar2;\n        uVar5 = uVar2;\n      }\n      *(ulong *)(param_2 + 0xd8) = uVar5;\n      *(long *)(param_2 + 0x10) = lVar1;\n      iVar3 = ferror(param_1);\n      return CONCAT44(extraout_var,iVar3) & 0xffffffffffffff00 | (ulong)(iVar3 == 0);\n    }\n    if (*(undefined **)(param_2 + 0x38) != puVar4) goto LAB_00112570;\n    _obstack_newchunk(param_2 + 0x18,1);\n    puVar4 = *(undefined **)(param_2 + 0x30);\n    *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n    *puVar4 = (char)iVar3;\n  } while (iVar3 != 0);\n  goto LAB_001125c0;\nLAB_00112570:\n  *(undefined **)(param_2 + 0x30) = puVar4 + 1;\n  *puVar4 = (char)iVar3;\n  if (iVar3 == 0) {\nLAB_001125c0:\n    FUN_001123b0(param_2);\n  }\n  goto LAB_0011257e;\n}\n\n", 
    "00114970": "\nbool FUN_00114970(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010c290": "\nvoid FUN_0010c290(undefined4 *param_1,undefined4 param_2)\n\n{\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00111580": "\nvoid FUN_00111580(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00111500(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001076f0": "\nFILE * FUN_001076f0(long param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  FILE *pFVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  long in_FS_OFFSET;\n  int local_28;\n  int local_24;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (*(char *)(param_1 + 0xc) == '\\x01') {\n    FUN_00107250(*(undefined4 *)(param_1 + 8));\n  }\n  iVar1 = open((char *)(param_1 + 0xd),0);\n  if (iVar1 < 0) {\n    pFVar3 = (FILE *)0x0;\n  }\n  else {\n    iVar2 = FUN_00107430(&local_28,9);\n    if (iVar2 == -1) {\n      piVar4 = __errno_location();\n      if (*piVar4 != 0x18) {\n        uVar5 = FUN_00111570(4,DAT_00120388);\n        uVar6 = dcgettext(0,\"couldn\\'t create process for %s -d\",5);\n                    /* WARNING: Subroutine does not return */\n        error(2,*piVar4,uVar6,uVar5);\n      }\n      pFVar3 = (FILE *)0x0;\n      close(iVar1);\n      *piVar4 = 0x18;\n    }\n    else {\n      if (iVar2 == 0) {\n        close(local_28);\n        FUN_00107070(iVar1,0);\n        FUN_00107070(local_24,1);\n        execlp(DAT_00120388,DAT_00120388,&DAT_00117a8e,0);\n        piVar4 = __errno_location();\n        FUN_001075c0(*piVar4,\"couldn\\'t execute compress program (with -d)\");\n        goto LAB_00107847;\n      }\n      *(int *)(param_1 + 8) = iVar2;\n      FUN_00107690(param_1);\n      close(iVar1);\n      close(local_24);\n      pFVar3 = fdopen(local_28,\"r\");\n      if (pFVar3 == (FILE *)0x0) {\n        piVar4 = __errno_location();\n        iVar1 = *piVar4;\n        close(local_28);\n        *piVar4 = iVar1;\n      }\n    }\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pFVar3;\n  }\nLAB_00107847:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001053f0": "\nuint FUN_001053f0(long param_1,long param_2)\n\n{\n  return *(uint *)(param_2 + 8) & 0xffffff00 |\n         (uint)(*(uint *)(param_1 + 8) == *(uint *)(param_2 + 8));\n}\n\n", 
    "00121378": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_0011fc58)();\n  return pcVar1;\n}\n\n", 
    "00121258": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00121018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint pthread_sigmask(int __how,__sigset_t *__newmask,__sigset_t *__oldmask)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}