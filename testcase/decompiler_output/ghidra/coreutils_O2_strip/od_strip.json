{
    "00108810": "\nvoid FUN_00108810(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108790(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00106510": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_00106510(float param_1,char *param_2,ulong param_3,uint param_4,undefined4 param_5)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined2 *puVar4;\n  int iVar5;\n  long in_FS_OFFSET;\n  float fVar6;\n  undefined local_4b [4];\n  char acStack_47 [7];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_4b._0_2_ = 0x2d25;\n  puVar2 = local_4b + (ulong)(param_4 & 1) + 1;\n  puVar1 = puVar2 + (param_4 >> 1 & 1);\n  *puVar2 = 0x2b;\n  *puVar1 = 0x20;\n  puVar1[param_4 >> 2 & 1] = 0x30;\n  puVar4 = (undefined2 *)(puVar1 + (param_4 >> 2 & 1) + (param_4 >> 3 & 1));\n  *puVar4 = 0x2e2a;\n  *(undefined *)(puVar4 + 1) = 0x2a;\n  *(undefined *)(puVar4 + 2) = 0;\n  *(byte *)((long)puVar4 + 3) = (-((param_4 & 0x10) == 0) & 0x20U) + 0x47;\n  iVar5 = (uint)(DAT_0010e820 <=\n                (float)(((uint)param_1 ^ _DAT_0010e810) & -(uint)(param_1 < 0.0) |\n                       ~-(uint)(param_1 < 0.0) & (uint)param_1)) * 5;\n  do {\n    iVar5 = iVar5 + 1;\n    iVar3 = __snprintf_chk((double)param_1,param_2,param_3,1,0xffffffffffffffff,local_4b,param_5,\n                           iVar5);\n    if ((iVar3 < 0) || (8 < iVar5)) break;\n  } while ((param_3 <= (ulong)(long)iVar3) ||\n          (fVar6 = strtof(param_2,(char **)0x0), fVar6 != param_1));\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f90": "\nint FUN_00109f90(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00103ab0": "\nvoid FUN_00103ab0(ulong param_1,ulong param_2,long *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  undefined uVar1;\n  int iVar2;\n  long *plVar3;\n  long *plVar4;\n  ulong uVar5;\n  long lVar6;\n  undefined *puVar7;\n  int iVar8;\n  ulong uVar9;\n  long in_FS_OFFSET;\n  long local_48;\n  long local_40 [2];\n  \n  local_40[0] = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar5 = (param_1 - 1) * (long)param_6;\n    uVar9 = param_1;\n    iVar8 = param_6;\n    do {\n      uVar9 = uVar9 - 1;\n      iVar2 = (int)(uVar5 / param_1);\n      if (DAT_00114101 == '\\0') {\n        lVar6 = *param_3;\n      }\n      else {\n        puVar7 = (undefined *)((long)param_3 + 7);\n        plVar3 = &local_48;\n        do {\n          uVar1 = *puVar7;\n          plVar4 = (long *)((long)plVar3 + 1);\n          puVar7 = puVar7 + -1;\n          *(undefined *)plVar3 = uVar1;\n          plVar3 = plVar4;\n          lVar6 = local_48;\n        } while (local_40 != plVar4);\n      }\n      param_3 = param_3 + 1;\n      FUN_001093e0(param_4,(iVar8 - iVar2) + param_5,lVar6);\n      uVar5 = uVar5 - (long)param_6;\n      iVar8 = iVar2;\n    } while (uVar9 != param_2);\n  }\n  if (local_40[0] != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001091b0": "\nvoid FUN_001091b0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00109170();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109330();\n}\n\n", 
    "00109c30": "\nsize_t FUN_00109c30(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010a080(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001151b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107040": "\nulong FUN_00107040(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_001074c7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_001074e9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00107a86;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010743f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_001074c7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010743f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00106f10(&DAT_0010e89f,param_5);\n      local_78 = (char *)FUN_00106f10(\"\\'\");\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00107190:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_001079f0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010798b;\n          goto LAB_0010777b;\n        default:\nswitchD_001078a0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00109c30(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00107c78;\n              }\n              if (lVar10 == -2) goto joined_r0x0010808a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00107660;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00107c78;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00107401;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00107948;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00107948;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00107948:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00107657;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00107644;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00107644:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00107368;\n          goto LAB_00107657;\n        case 0x23:\n        case 0x7e:\nLAB_0010763b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00107644;\n          goto LAB_00107365;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_001078a0_caseD_25;\n        case 0x27:\nswitchD_001078a0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00107368;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010738b;\n          }\n          goto LAB_00107660;\n        case 0x3f:\nswitchD_001078a0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00107fee_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00107368;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010738b;\n          }\n          goto LAB_00107660;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00107298_caseD_5c;\n          if (!bVar20) {\nLAB_001078d8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_001078f0;\n          }\n          goto LAB_00107660;\n        case 0x7b:\n        case 0x7d:\nswitchD_001078a0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010763b;\nLAB_00107365:\n          bVar23 = false;\n          goto LAB_00107368;\n        }\nLAB_00107770:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010777b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00107388;\n          goto LAB_001072b0;\n        }\nLAB_001077b0:\n        bVar21 = false;\n        goto joined_r0x001077c1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_001079d0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00107298_caseD_0;\n          default:\n            goto switchD_001078a0_caseD_1;\n          case 7:\n            goto switchD_001079f0_caseD_7;\n          case 8:\n            goto switchD_001079f0_caseD_8;\n          case 9:\n            goto switchD_00107298_caseD_9;\n          case 10:\n            goto switchD_001079f0_caseD_a;\n          case 0xb:\n            goto switchD_001079f0_caseD_b;\n          case 0xc:\n            goto switchD_001079f0_caseD_c;\n          case 0xd:\n            goto switchD_001079f0_caseD_d;\n          case 0x20:\n            goto LAB_00107a19;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00107298_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00107a01;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001072a8;\n          case 0x27:\n            goto switchD_001078a0_caseD_27;\n          case 0x3f:\n            goto switchD_001078a0_caseD_3f;\n          case 0x5c:\n            goto switchD_00107298_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_001078a0_caseD_7b;\n          }\n        }\n        goto LAB_0010766e;\n      }\nLAB_001079d0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_001079f0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00107298_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010738b;\n            }\nLAB_00107e2b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00107e2b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00107e68;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010738b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00107660;\n      default:\n        bVar23 = false;\n        goto switchD_001078a0_caseD_1;\n      case 7:\nswitchD_001079f0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_001079f0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00107298_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00107770;\n      case 10:\nswitchD_001079f0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_001077b0;\n      case 0xb:\nswitchD_001079f0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_001077b0;\n      case 0xc:\nswitchD_001079f0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_001079f0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_001077b0;\n      case 0x20:\n        bVar5 = false;\nLAB_00107a19:\n        uVar15 = 0x20;\n        goto LAB_001072a8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00107298_caseD_21:\n        bVar22 = false;\n        goto LAB_00107365;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00107a01:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00107368;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001072b0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001072a8:\n        bVar22 = false;\n        goto LAB_001072b0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_001078a0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_001078a0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00107298_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_001078d8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00107770;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_001078a0_caseD_7b;\n      }\n      if (bVar20) goto LAB_001077d0;\n      bVar21 = false;\n      goto LAB_00107326;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00107657:\n      param_5 = 2;\nLAB_00107660:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010766e:\n      uVar13 = FUN_00107040(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_001076a8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_001080f5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_001076a8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00107040(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_001076a8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_001080f5;\nLAB_00107a86:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_001074e9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010798b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00107190;\nswitchD_00107fee_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00107e68:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010738b;\n    goto LAB_001072b0;\n  }\n  goto LAB_0010766e;\njoined_r0x0010808a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00107c78:\n  if (1 < uVar17) {\nLAB_00107c82:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00107660;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00107338;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_001078f0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00107401:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00107c82;\n  }\nswitchD_001078a0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00107368:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001072b0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010738b;\n  }\n  else {\nLAB_00107388:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010738b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_001078f0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00107338;\n    }\n  }\njoined_r0x001077c1:\n  if (bVar20) {\nLAB_001077d0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00107660;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00107326:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00107338:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00107190;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_feof_unlocked_00113fb0)();\n  return iVar1;\n}\n\n", 
    "00106f10": "\nchar * FUN_00106f10(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_0010a0d0();\n    iVar1 = FUN_00106e60(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00106e60(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010e889;\n      }\n      else {\n        pcVar2 = &DAT_0010e886;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010e88d;\n    }\n    else {\n      pcVar2 = &DAT_0010e882;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00105f40": "\nvoid FUN_00105f40(void)\n\n{\n  FUN_00105cd0(1);\n  return;\n}\n\n", 
    "00108ad0": "\nundefined8\nFUN_00108ad0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010efdb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00108d99;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00108d99:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00108e3b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00108e3b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00108bed;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00108bed:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010a080": "\nbool FUN_0010a080(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00109110": "\nvoid FUN_00109110(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109330();\n  }\n  return;\n}\n\n", 
    "00115110": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102700": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00113f58)();\n  return;\n}\n\n", 
    "001151b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108800": "\nvoid FUN_00108800(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00108730(0,param_1,param_2);\n  return;\n}\n\n", 
    "001092e0": "\nvoid FUN_001092e0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00109110(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00109e80": "\nbool FUN_00109e80(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001151c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001150a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00113dd8)();\n  return;\n}\n\n", 
    "00108480": "\nvoid FUN_00108480(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00114340;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106060": "\nvoid FUN_00106060(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_00108ab0(1,param_1);\n  uVar3 = FUN_00108730(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "001039b0": "\nvoid FUN_001039b0(ulong param_1,ulong param_2,long *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  undefined uVar1;\n  int iVar2;\n  long *plVar3;\n  long *plVar4;\n  ulong uVar5;\n  long lVar6;\n  undefined *puVar7;\n  int iVar8;\n  ulong uVar9;\n  long in_FS_OFFSET;\n  long local_48;\n  long local_40 [2];\n  \n  local_40[0] = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar5 = (param_1 - 1) * (long)param_6;\n    uVar9 = param_1;\n    iVar8 = param_6;\n    do {\n      uVar9 = uVar9 - 1;\n      iVar2 = (int)(uVar5 / param_1);\n      if (DAT_00114101 == '\\0') {\n        lVar6 = *param_3;\n      }\n      else {\n        puVar7 = (undefined *)((long)param_3 + 7);\n        plVar3 = &local_48;\n        do {\n          uVar1 = *puVar7;\n          plVar4 = (long *)((long)plVar3 + 1);\n          puVar7 = puVar7 + -1;\n          *(undefined *)plVar3 = uVar1;\n          plVar3 = plVar4;\n          lVar6 = local_48;\n        } while (local_40 != plVar4);\n      }\n      param_3 = param_3 + 1;\n      FUN_001093e0(param_4,(iVar8 - iVar2) + param_5,lVar6);\n      uVar5 = uVar5 - (long)param_6;\n      iVar8 = iVar2;\n    } while (uVar9 != param_2);\n  }\n  if (local_40[0] != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00113fa8)();\n  return iVar1;\n}\n\n", 
    "00105090": "\nuint FUN_00105090(int *param_1)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  uint uVar5;\n  \n  uVar5 = 1;\n  *param_1 = -1;\n  while( true ) {\n    if (DAT_001141a8 == (FILE *)0x0) {\n      return uVar5;\n    }\n    iVar3 = fgetc(DAT_001141a8);\n    *param_1 = iVar3;\n    if (iVar3 != -1) break;\n    piVar4 = __errno_location();\n    uVar1 = FUN_00104df0(*piVar4);\n    uVar2 = FUN_00104ce0();\n    uVar5 = uVar5 & uVar1 & uVar2;\n  }\n  return uVar5;\n}\n\n", 
    "00115118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103e70": "\nvoid FUN_00103e70(ulong param_1,ulong param_2,undefined *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  undefined uVar1;\n  int iVar2;\n  ulong uVar3;\n  undefined *puVar4;\n  int iVar5;\n  \n  if (param_2 < param_1) {\n    uVar3 = (param_1 - 1) * (long)param_6;\n    puVar4 = param_3 + (param_1 - param_2);\n    iVar5 = param_6;\n    do {\n      uVar1 = *param_3;\n      param_3 = param_3 + 1;\n      iVar2 = (int)(uVar3 / param_1);\n      FUN_001093e0(param_4,(iVar5 - iVar2) + param_5,uVar1);\n      uVar3 = uVar3 - (long)param_6;\n      iVar5 = iVar2;\n    } while (param_3 != puVar4);\n  }\n  return;\n}\n\n", 
    "00115120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f90": "\nvoid FUN_00103f90(ulong param_1,ulong param_2,long param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  undefined uVar1;\n  int iVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  undefined *puVar5;\n  ulong uVar6;\n  int iVar7;\n  ulong uVar8;\n  long in_FS_OFFSET;\n  undefined local_88 [16];\n  undefined local_78 [56];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar6 = (param_1 - 1) * (long)param_6;\n    uVar8 = param_1;\n    iVar7 = param_6;\n    do {\n      uVar8 = uVar8 - 1;\n      iVar2 = (int)(uVar6 / param_1);\n      if (DAT_00114101 != '\\0') {\n        puVar5 = (undefined *)(param_3 + 0xf);\n        puVar3 = local_88;\n        do {\n          uVar1 = *puVar5;\n          puVar4 = puVar3 + 1;\n          puVar5 = puVar5 + -1;\n          *puVar3 = uVar1;\n          puVar3 = puVar4;\n        } while (local_78 != puVar4);\n      }\n      param_3 = param_3 + 0x10;\n      FUN_00106680(local_78,0x2d,0,0);\n      FUN_001093e0(&DAT_0010e08d,(iVar7 - iVar2) + param_5,local_78);\n      uVar6 = uVar6 - (long)param_6;\n      iVar7 = iVar2;\n    } while (uVar8 != param_2);\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00115000": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102810": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nuint FUN_00102810(int param_1,undefined8 *param_2)\n\n{\n  uint *puVar1;\n  bool bVar2;\n  bool bVar3;\n  byte bVar4;\n  char cVar5;\n  byte bVar6;\n  int iVar7;\n  uint uVar8;\n  uint uVar9;\n  undefined4 *puVar10;\n  long lVar11;\n  undefined8 uVar12;\n  int *piVar13;\n  uint *puVar14;\n  ulong uVar15;\n  ulong uVar16;\n  uint *puVar17;\n  char *pcVar18;\n  long in_FS_OFFSET;\n  ulong local_68;\n  ulong local_60;\n  undefined4 local_50;\n  undefined4 uStack_4c;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_001067d0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_0010c130(FUN_001062f0);\n  puVar10 = &DAT_00114180;\n  do {\n    *puVar10 = 0;\n    puVar10 = puVar10 + 1;\n  } while (puVar10 != (undefined4 *)&DAT_001141a4);\n  DAT_00114190 = 3;\n  DAT_001141a0 = 5;\n  _DAT_00114184 = 0x200000001;\n  puVar10 = &DAT_00114120;\n  do {\n    *puVar10 = 0;\n    puVar10 = puVar10 + 1;\n  } while (puVar10 != (undefined4 *)&DAT_00114164);\n  bVar3 = false;\n  bVar6 = 1;\n  bVar2 = false;\n  DAT_00114130 = 6;\n  uVar15 = 0;\n  DAT_00114160 = 8;\n  DAT_00114140 = 7;\n  DAT_001141d0 = 0;\n  _DAT_001141c8 = 0;\n  DAT_001141d8 = 0;\n  DAT_00114200 = FUN_00103670;\n  DAT_00114224 = 8;\n  DAT_00114220 = 7;\n  DAT_00114212 = '\\0';\nLAB_00102960:\n  local_50 = 0xffffffff;\n  iVar7 = getopt_long(param_1,param_2,\"A:aBbcDdeFfHhIij:LlN:OoS:st:vw::Xx\",\n                      &PTR_s_skip_bytes_001139c0,&local_50);\n  if (iVar7 == -1) {\n    if (bVar6 == 0) {\n      uVar8 = 1;\n      goto LAB_001030a6;\n    }\n    if ((DAT_00114212 == '\\0') || (DAT_001141d0 == 0)) {\n      lVar11 = (long)optind;\n      param_1 = param_1 - optind;\n      if (bVar2) {\n        if (DAT_00114211 != '\\0') {\n          if (param_1 == 2) {\n            pcVar18 = (char *)param_2[lVar11 + 1];\n            goto LAB_001031be;\n          }\n          if (param_1 == 3) goto LAB_00103185;\n          if (param_1 == 1) {\n            pcVar18 = (char *)param_2[lVar11];\n            goto LAB_00102ec4;\n          }\nLAB_00102dd7:\n          if (1 < param_1) {\nLAB_00102de1:\n            param_2 = (undefined8 *)FUN_00108ac0(param_2[lVar11 + 1]);\n            uVar12 = dcgettext(0,\"extra operand %s\",5);\n            error(0,0,uVar12,param_2);\n            uVar12 = dcgettext(0,\"compatibility mode supports at most one file\",5);\n            error(0,0,&DAT_0010e7e0,uVar12);\n            goto switchD_001029b4_caseD_43;\n          }\n        }\n      }\n      else if (param_1 == 2) {\n        pcVar18 = (char *)param_2[lVar11 + 1];\n        if (((DAT_00114211 != '\\0') || (*pcVar18 == '+')) || ((int)*pcVar18 - 0x30U < 10)) {\nLAB_001031be:\n          cVar5 = FUN_00103830(pcVar18,&local_48);\n          if (cVar5 == '\\0') {\n            param_1 = 2;\nLAB_001031a0:\n            if (DAT_00114211 != '\\0') {\n              lVar11 = (long)optind;\n              goto LAB_00102de1;\n            }\n          }\n          else if ((DAT_00114211 == '\\0') ||\n                  (cVar5 = FUN_00103830(param_2[optind],&local_50), cVar5 == '\\0')) {\n            param_1 = 1;\n            DAT_001141f8 = local_48;\n            param_2[(long)optind + 1] = param_2[optind];\n            param_2 = param_2 + 1;\n          }\n          else {\n            DAT_001141f8 = CONCAT44(uStack_4c,local_50);\n            DAT_00114210 = '\\x01';\n            param_2 = param_2 + 2;\n            param_1 = 0;\n            local_60 = local_48;\n          }\n        }\n      }\n      else if (param_1 == 3) {\n        if (DAT_00114211 != '\\0') {\nLAB_00103185:\n          cVar5 = FUN_00103830(param_2[lVar11 + 1],&local_50);\n          if ((cVar5 == '\\0') ||\n             (cVar5 = FUN_00103830(param_2[(long)optind + 2],&local_48), cVar5 == '\\0')) {\n            param_1 = 3;\n            goto LAB_001031a0;\n          }\n          DAT_001141f8 = CONCAT44(uStack_4c,local_50);\n          DAT_00114210 = '\\x01';\n          param_1 = 1;\n          local_60 = local_48;\n          param_2[(long)optind + 2] = param_2[optind];\n          param_2 = param_2 + 2;\n        }\n      }\n      else if (param_1 == 1) {\n        pcVar18 = (char *)param_2[lVar11];\n        if ((DAT_00114211 != '\\0') || (*pcVar18 == '+')) {\nLAB_00102ec4:\n          cVar5 = FUN_00103830(pcVar18,&local_50);\n          if (cVar5 != '\\0') {\n            DAT_001141f8 = CONCAT44(uStack_4c,local_50);\n            param_2 = param_2 + 1;\n            param_1 = 0;\n            goto LAB_00102ee7;\n          }\n        }\n        param_1 = 1;\n      }\n      else if (DAT_00114211 != '\\0') goto LAB_00102dd7;\nLAB_00102ee7:\n      if (DAT_00114210 != '\\0') {\n        if (DAT_00114200 == FUN_001035b0) {\n          DAT_00114224 = 8;\n          DAT_00114220 = 7;\n          DAT_00114200 = FUN_001037b0;\n        }\n        else {\n          DAT_00114200 = FUN_00103800;\n        }\n      }\n      if ((DAT_001141f0 == '\\0') ||\n         (DAT_001141e0 = DAT_001141e8 + DAT_001141f8, !CARRY8(DAT_001141e8,DAT_001141f8))) {\n        if (DAT_001141d0 == 0) {\n          FUN_001049e0(&DAT_0010e24a);\n        }\n        DAT_001141b0 = &PTR_DAT_00113b60;\n        if (0 < param_1) {\n          DAT_001141b0 = (undefined **)(param_2 + optind);\n        }\n        uVar8 = FUN_00104ce0();\n        uVar16 = (ulong)uVar8;\n        if (DAT_001141a8 == 0) goto LAB_00103096;\n        uVar9 = FUN_001057f0();\n        uVar16 = (ulong)(uVar8 & uVar9);\n        uVar15 = uVar16 & 0xff;\n        if (DAT_001141a8 == 0) goto LAB_00103096;\n        _DAT_00114208 = 0;\n        if (DAT_00114210 != '\\0') {\n          _DAT_00114208 = local_60 - DAT_001141f8;\n        }\n        iVar7 = FUN_001035c0();\n        uVar16 = (ulong)iVar7;\n        if (!bVar3) goto LAB_0010311e;\n        if ((local_68 == 0) || (local_68 % (ulong)(long)iVar7 != 0)) {\n          uVar12 = dcgettext(0,\"warning: invalid width %lu; using %d instead\",5);\n          error(0,0,uVar12,local_68,iVar7);\n          DAT_001141c0 = (long)iVar7;\n        }\n        else {\n          DAT_001141c0 = local_68;\n        }\n        while( true ) {\n          uVar16 = DAT_001141c0;\n          if (DAT_001141d0 != 0) {\n            uVar8 = 0;\n            puVar14 = (uint *)(DAT_001141d8 + 4);\n            puVar1 = (uint *)(DAT_001141d8 + 4 + DAT_001141d0 * 0x28);\n            puVar17 = puVar14;\n            do {\n              uVar9 = (puVar17[6] + 1) *\n                      (int)(DAT_001141c0 /\n                           (ulong)(long)*(int *)(&DAT_0010e5e0 + (ulong)*puVar17 * 4));\n              if (uVar8 < uVar9) {\n                uVar8 = uVar9;\n              }\n              puVar17 = puVar17 + 10;\n            } while (puVar1 != puVar17);\n            do {\n              puVar17 = puVar14 + 10;\n              puVar14[7] = uVar8 - (int)(uVar16 / (ulong)(long)*(int *)(&DAT_0010e5e0 +\n                                                                       (ulong)*puVar14 * 4)) *\n                                   puVar14[6];\n              puVar14 = puVar17;\n            } while (puVar1 != puVar17);\n          }\n          if (DAT_00114212 == '\\0') {\n            bVar6 = FUN_00105570();\n          }\n          else {\n            bVar6 = FUN_00105100();\n          }\n          uVar8 = (uint)uVar15 & (uint)bVar6;\n          uVar15 = (ulong)uVar8;\n          uVar16 = (ulong)(uVar8 & 1);\nLAB_00103096:\n          if ((DAT_001141a4 == '\\0') || (iVar7 = FUN_00109ac0(stdin), iVar7 != -1)) break;\n          uVar12 = dcgettext(0,\"standard input\",5);\n          piVar13 = __errno_location();\n          error(1,*piVar13,uVar12);\nLAB_0010311e:\n          iVar7 = (int)uVar16;\n          DAT_001141c0 = uVar16;\n          if (iVar7 < 0x10) {\n            DAT_001141c0 = (long)((int)(0x10 / (long)iVar7) * iVar7);\n          }\n        }\n        uVar8 = ((uint)uVar16 ^ 1) & 0xff;\nLAB_001030a6:\n        if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return uVar8;\n        }\nLAB_00103394:\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n    }\n    else {\n      uVar12 = dcgettext(0,\"no type may be specified when dumping strings\",5);\n      error(1,0,uVar12);\n    }\n    uVar12 = dcgettext(0,\"skip-bytes + read-bytes is too large\",5);\n    error(1,0,uVar12);\n    goto LAB_00103394;\n  }\n  if (0x81 < iVar7) {\nswitchD_001029b4_caseD_43:\n    FUN_00105cd0(1);\nLAB_00102e44:\n    bVar2 = true;\n    DAT_00114224 = 10;\n    DAT_00114200 = FUN_00103670;\n    DAT_00114220 = 7;\n    goto LAB_00102960;\n  }\n  if (iVar7 < 0x41) {\n    if (iVar7 == -0x83) {\n      FUN_00108fd0(stdout,&DAT_0010e15c,\"GNU coreutils\",PTR_DAT_00114018,\"Jim Meyering\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (iVar7 == -0x82) {\n      FUN_00105cd0(0);\nLAB_00102d42:\n      DAT_00114218 = 3;\n      goto LAB_00102b93;\n    }\n    goto switchD_001029b4_caseD_43;\n  }\n  switch(iVar7) {\n  case 0x41:\n    cVar5 = *optarg;\n    if (cVar5 == 'o') {\n      bVar2 = true;\n      DAT_00114224 = 8;\n      DAT_00114200 = FUN_00103670;\n      DAT_00114220 = 7;\n    }\n    else if (cVar5 < 'p') {\n      if (cVar5 == 'd') goto LAB_00102e44;\n      if (cVar5 != 'n') goto LAB_001033b7;\n      bVar2 = true;\n      DAT_00114220 = 0;\n      DAT_00114200 = FUN_001035b0;\n    }\n    else {\n      if (cVar5 != 'x') {\nLAB_001033b7:\n        uVar12 = dcgettext(0,\n                           \"invalid output address radix \\'%c\\'; it must be one character from [doxn]\"\n                           ,5);\n        iVar7 = error(1,0,uVar12,(int)cVar5);\nLAB_001033df:\n                    /* WARNING: Subroutine does not return */\n        FUN_001096b0(iVar7,local_50,0x6a,&PTR_s_skip_bytes_001139c0,optarg);\n      }\n      bVar2 = true;\n      DAT_00114224 = 0x10;\n      DAT_00114200 = FUN_00103670;\n      DAT_00114220 = 6;\n    }\n    goto LAB_00102960;\n  case 0x42:\n  case 0x6f:\n    bVar4 = FUN_001049e0(&DAT_0010e223);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  default:\n    goto switchD_001029b4_caseD_43;\n  case 0x44:\n    bVar4 = FUN_001049e0(&DAT_0010e20b);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x46:\n  case 0x65:\n    bVar4 = FUN_001049e0(&DAT_0010e211);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x48:\n  case 0x58:\n    bVar4 = FUN_001049e0(&DAT_0010e217);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x49:\n  case 0x4c:\n  case 0x6c:\n    bVar4 = FUN_001049e0(&DAT_0010e21d);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x4e:\n    DAT_001141f0 = '\\x01';\n    iVar7 = FUN_00109730(optarg,0,0,&DAT_001141e8,\"bEGKkMmPTYZ0\");\n    if (iVar7 != 0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_001096b0(iVar7,local_50,0x4e,&PTR_s_skip_bytes_001139c0,optarg);\n    }\n    break;\n  case 0x4f:\n    bVar4 = FUN_001049e0(&DAT_0010e220);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x53:\n    if (optarg == (char *)0x0) goto LAB_00102d42;\n    iVar7 = FUN_00109730(optarg,0,0,&local_48,\"bEGKkMmPTYZ0\");\n    if (iVar7 != 0) {\n                    /* WARNING: Subroutine does not return */\n      FUN_001096b0(iVar7,local_50,0x53,&PTR_s_skip_bytes_001139c0,optarg);\n    }\n    DAT_00114218 = local_48;\nLAB_00102b93:\n    DAT_00114212 = '\\x01';\n    bVar2 = true;\n    goto LAB_00102960;\n  case 0x61:\n    bVar4 = FUN_001049e0(&DAT_0010e10c);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x62:\n    bVar4 = FUN_001049e0(&DAT_0010e208);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 99:\n    bVar4 = FUN_001049e0(&DAT_0010e0ef);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 100:\n    bVar4 = FUN_001049e0(&DAT_0010e20e);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x66:\n    bVar4 = FUN_001049e0(&DAT_0010e214);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x68:\n  case 0x78:\n    bVar4 = FUN_001049e0(&DAT_0010e229);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x69:\n    bVar4 = FUN_001049e0(&DAT_0010e21a);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x6a:\n    iVar7 = FUN_00109730(optarg,0,0,&DAT_001141f8,\"bEGKkMmPTYZ0\");\n    if (iVar7 != 0) goto LAB_001033df;\n    break;\n  case 0x73:\n    bVar4 = FUN_001049e0(&DAT_0010e226);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x74:\n    bVar2 = true;\n    bVar4 = FUN_001049e0(optarg);\n    bVar6 = bVar6 & bVar4;\n    goto LAB_00102960;\n  case 0x76:\n    DAT_00114011 = 0;\n    bVar2 = true;\n    goto LAB_00102960;\n  case 0x77:\n    if (optarg == (char *)0x0) {\n      bVar3 = true;\n      bVar2 = true;\n      local_68 = 0x20;\n    }\n    else {\n      iVar7 = FUN_00109730(optarg,0,10,&local_48,\"\");\n      if (iVar7 != 0) {\n                    /* WARNING: Subroutine does not return */\n        FUN_001096b0(iVar7,local_50,0x77,&PTR_s_skip_bytes_001139c0,optarg);\n      }\n      local_68 = local_48;\n      bVar3 = true;\n      bVar2 = true;\n    }\n    goto LAB_00102960;\n  case 0x80:\n    DAT_00114211 = '\\x01';\n    goto LAB_00102960;\n  case 0x81:\n    goto switchD_001029b4_caseD_81;\n  }\n  bVar2 = true;\n  goto LAB_00102960;\nswitchD_001029b4_caseD_81:\n  lVar11 = FUN_001061f0(\"--endian\",optarg,&PTR_s_little_00113b40,&DAT_0010e4e8,4);\n  if (*(int *)(&DAT_0010e4e8 + lVar11 * 4) == 0) {\n    DAT_00114101 = 0;\n  }\n  else if (*(int *)(&DAT_0010e4e8 + lVar11 * 4) == 1) {\n    DAT_00114101 = 1;\n  }\n  goto LAB_00102960;\n}\n\n", 
    "0010c150": "\nvoid FUN_0010c150(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "001151c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001150a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108710": "\nvoid FUN_00108710(undefined8 param_1)\n\n{\n  FUN_001086e0(0,param_1);\n  return;\n}\n\n", 
    "00108830": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108830(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00114340;\n  uStack_40 = uRam0000000000114348;\n  local_38 = _DAT_00114350;\n  uStack_30 = uRam0000000000114358;\n  local_28 = _DAT_00114360;\n  uStack_20 = uRam0000000000114368;\n  local_18 = DAT_00114370;\n  FUN_00108420(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00108200(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f70": "\nint FUN_00109f70(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00106890": "\nint * FUN_00106890(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104ce0": "\nundefined8 FUN_00104ce0(void)\n\n{\n  int *piVar1;\n  undefined8 uVar2;\n  \n  uVar2 = 1;\n  do {\n    DAT_001141b8 = *DAT_001141b0;\n    if (DAT_001141b8 == (char *)0x0) {\n      return uVar2;\n    }\n    DAT_001141b0 = DAT_001141b0 + 1;\n    if ((*DAT_001141b8 == '-') && (DAT_001141b8[1] == '\\0')) {\n      DAT_001141b8 = (char *)dcgettext(0,\"standard input\",5);\n      DAT_001141a4 = 1;\n      DAT_001141a8 = stdin;\n    }\n    else {\n      DAT_001141a8 = fopen(DAT_001141b8,\"r\");\n      if (DAT_001141a8 != (FILE *)0x0) break;\n      FUN_00108900(0,3,DAT_001141b8);\n      piVar1 = __errno_location();\n      uVar2 = 0;\n      error(0,*piVar1,&DAT_0010e7e0);\n    }\n  } while (DAT_001141a8 == (FILE *)0x0);\n  if ((DAT_001141f0 != '\\0') && (DAT_00114212 == '\\0')) {\n    setvbuf(DAT_001141a8,(char *)0x0,2,0);\n  }\n  return uVar2;\n}\n\n", 
    "0010c0b0": "\nvoid FUN_0010c0b0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00115208": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027d0": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00113fc0)();\n  return;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00113f30)();\n  return pvVar1;\n}\n\n", 
    "00109de0": "\nulong FUN_00109de0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00108ab0": "\nvoid FUN_00108ab0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108a90(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00109330": "\nvoid FUN_00109330(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00114028,0,&DAT_0010e7e0,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109cc0": "\nulong FUN_00109cc0(FILE *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  size_t sVar2;\n  undefined *__ptr;\n  size_t sVar3;\n  int *piVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  size_t local_810;\n  undefined local_808 [2008];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_810 = 2000;\n  __ptr = (undefined *)FUN_0010a120(local_808,&local_810,param_2,param_3);\n  sVar2 = local_810;\n  if (__ptr != (undefined *)0x0) {\n    sVar3 = fwrite(__ptr,1,local_810,param_1);\n    if (sVar3 < sVar2) {\n      uVar5 = 0xffffffff;\n      if (__ptr != local_808) {\n        piVar4 = __errno_location();\n        iVar1 = *piVar4;\n        free(__ptr);\n        *piVar4 = iVar1;\n      }\n      goto LAB_00109d4d;\n    }\n    if (__ptr != local_808) {\n      free(__ptr);\n    }\n    if (sVar2 < 0x80000000) {\n      uVar5 = sVar2 & 0xffffffff;\n      goto LAB_00109d4d;\n    }\n    piVar4 = __errno_location();\n    *piVar4 = 0x4b;\n  }\n  uVar5 = 0xffffffff;\n  FUN_0010a110(param_1);\nLAB_00109d4d:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c120": "\nvoid FUN_0010c120(void)\n\n{\n  return;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_00113f68)();\n  return pFVar1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00113ed8)();\n  return pvVar1;\n}\n\n", 
    "00108700": "\nvoid FUN_00108700(void)\n\n{\n  FUN_00108200();\n  return;\n}\n\n", 
    "001093e0": "\nvoid FUN_001093e0(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  long local_c0;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  FUN_00109370(param_9,&local_d8);\n  if (local_c0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109e60": "\nulong FUN_00109e60(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00104df0": "\nundefined8 FUN_00104df0(undefined4 param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  \n  pFVar1 = DAT_001141a8;\n  uVar5 = 1;\n  if (DAT_001141a8 != (FILE *)0x0) {\n    iVar2 = ferror_unlocked(DAT_001141a8);\n    if (iVar2 == 0) {\n      if (((**(char **)(DAT_001141b0 + -8) == '-') && ((*(char **)(DAT_001141b0 + -8))[1] == '\\0'))\n         || (iVar2 = FUN_00109ac0(pFVar1), iVar2 == 0)) {\n        uVar5 = 1;\n      }\n      else {\n        uVar3 = FUN_00108900(0,3,DAT_001141b8);\n        piVar4 = __errno_location();\n        uVar5 = 0;\n        error(0,*piVar4,&DAT_0010e7e0,uVar3);\n      }\n    }\n    else {\n      uVar5 = FUN_00108900(0,3,DAT_001141b8);\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n      error(0,param_1,uVar3,uVar5);\n      if ((**(char **)(DAT_001141b0 + -8) != '-') ||\n         (uVar5 = 0, (*(char **)(DAT_001141b0 + -8))[1] != '\\0')) {\n        uVar5 = 0;\n        FUN_00109ac0(DAT_001141a8);\n      }\n    }\n    DAT_001141a8 = (FILE *)0x0;\n  }\n  iVar2 = ferror_unlocked(stdout);\n  if (iVar2 != 0) {\n    uVar5 = dcgettext(0,\"write error\",5);\n    error(0,0,uVar5);\n    return 0;\n  }\n  return uVar5;\n}\n\n", 
    "001151a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00113fb8)();\n  return ppuVar1;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_00113f28)();\n  return sVar1;\n}\n\n", 
    "001038b0": "\nvoid FUN_001038b0(ulong param_1,ulong param_2,byte *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  int iVar1;\n  byte bVar2;\n  int iVar3;\n  ulong uVar4;\n  byte *pbVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  long in_FS_OFFSET;\n  byte local_42;\n  undefined local_41;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar4 = (param_1 - 1) * (long)param_6;\n    pbVar6 = param_3;\n    iVar3 = param_6;\n    do {\n      pbVar7 = pbVar6 + 1;\n      iVar1 = (int)(uVar4 / param_1);\n      bVar2 = (byte)(*pbVar6 & 0x7f);\n      pbVar5 = &DAT_0010e089;\n      if (bVar2 != 0x7f) {\n        if (bVar2 < 0x21) {\n          pbVar5 = &DAT_0010e540 + (ulong)(*pbVar6 & 0x7f) * 4;\n        }\n        else {\n          local_41 = 0;\n          pbVar5 = &local_42;\n          local_42 = bVar2;\n        }\n      }\n      uVar4 = uVar4 - (long)param_6;\n      FUN_001093e0(&DAT_0010e08d,(iVar3 - iVar1) + param_5,pbVar5);\n      pbVar6 = pbVar7;\n      iVar3 = iVar1;\n    } while (pbVar7 != param_3 + (param_1 - param_2));\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00115100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104b00": "\nvoid FUN_00104b00(ulong param_1,ulong param_2,byte *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  byte bVar1;\n  int iVar2;\n  byte *pbVar3;\n  ushort **ppuVar4;\n  undefined *puVar5;\n  undefined *puVar6;\n  ulong uVar7;\n  int iVar8;\n  long in_FS_OFFSET;\n  undefined local_44 [4];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar7 = (param_1 - 1) * (long)param_6;\n    pbVar3 = param_3 + (param_1 - param_2);\n    iVar8 = param_6;\n    do {\n      bVar1 = *param_3;\n      param_3 = param_3 + 1;\n      iVar2 = (int)(uVar7 / param_1);\n      switch((ulong)bVar1) {\n      case 0:\n        puVar6 = &DAT_0010e0f6;\n        break;\n      default:\n        ppuVar4 = __ctype_b_loc();\n        puVar5 = &DAT_0010e0f1;\n        puVar6 = local_44;\n        if ((*(byte *)((long)*ppuVar4 + (ulong)bVar1 * 2 + 1) & 0x40) != 0) {\n          puVar5 = &DAT_0010e0ee;\n        }\n        __sprintf_chk(puVar6,1,4,puVar5,bVar1);\n        break;\n      case 7:\n        puVar6 = &DAT_0010e10b;\n        break;\n      case 8:\n        puVar6 = &DAT_0010e0f9;\n        break;\n      case 9:\n        puVar6 = &DAT_0010e105;\n        break;\n      case 10:\n        puVar6 = &DAT_0010e0ff;\n        break;\n      case 0xb:\n        puVar6 = &DAT_0010e108;\n        break;\n      case 0xc:\n        puVar6 = &DAT_0010e0fc;\n        break;\n      case 0xd:\n        puVar6 = &DAT_0010e102;\n      }\n      FUN_001093e0(&DAT_0010e08d,(iVar8 - iVar2) + param_5,puVar6);\n      uVar7 = uVar7 - (long)param_6;\n      iVar8 = iVar2;\n    } while (param_3 != pbVar3);\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001088c0": "\nvoid FUN_001088c0(undefined8 param_1,char param_2)\n\n{\n  FUN_00108830(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00105f50": "\nlong FUN_00105f50(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "001053b0": "\nvoid FUN_001053b0(undefined8 param_1,size_t param_2,void *param_3,void *param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  ulong uVar4;\n  int iVar5;\n  ulong uVar6;\n  \n  if ((((DAT_00114011 != '\\0') && (DAT_00114010 == '\\0')) && (DAT_001141c0 == param_2)) &&\n     (iVar1 = memcmp(param_3,param_4,param_2), iVar1 == 0)) {\n    if (DAT_00114100 != '\\0') {\n      DAT_00114010 = 0;\n      return;\n    }\n    puts(\"*\");\n    DAT_00114010 = 0;\n    DAT_00114100 = 1;\n    return;\n  }\n  DAT_00114100 = 0;\n  if (DAT_001141d0 != 0) {\n    uVar4 = 0;\n    do {\n      uVar3 = (ulong)*(int *)(&DAT_0010e5e0 + (ulong)*(uint *)(DAT_001141d8 + 4 + uVar4 * 0x28) * 4)\n      ;\n      uVar6 = DAT_001141c0 - param_2;\n      iVar1 = (int)(DAT_001141c0 / uVar3);\n      if (uVar4 == 0) {\n        (*DAT_00114200)(param_1,0,uVar6 % uVar3);\n      }\n      else {\n        __printf_chk(1,&DAT_0010e08d,DAT_00114220,\"\");\n      }\n      iVar5 = (int)(uVar6 / uVar3);\n      lVar2 = DAT_001141d8 + uVar4 * 0x28;\n      (**(code **)(lVar2 + 8))\n                ((long)iVar1,(long)iVar5,param_4,lVar2 + 0x10,*(undefined4 *)(lVar2 + 0x1c),\n                 *(undefined4 *)(lVar2 + 0x20));\n      lVar2 = uVar4 * 0x28 + DAT_001141d8;\n      if (*(char *)(lVar2 + 0x18) != '\\0') {\n        __printf_chk(1,&DAT_0010e08d,\n                     (*(int *)(lVar2 + 0x20) * iVar5) / iVar1 + iVar5 * *(int *)(lVar2 + 0x1c),\"\");\n        FUN_00105010(param_2);\n      }\n      uVar4 = uVar4 + 1;\n      putchar_unlocked(10);\n    } while (uVar4 < DAT_001141d0);\n  }\n  DAT_00114010 = 0;\n  return;\n}\n\n", 
    "00108ac0": "\nvoid FUN_00108ac0(undefined8 param_1)\n\n{\n  FUN_00108ab0(0,param_1);\n  return;\n}\n\n", 
    "00109bb0": "\nint FUN_00109bb0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00103800": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00103800(long param_1,char param_2)\n\n{\n  FUN_00103670(param_1,0x20);\n  FUN_001037b0(param_1 + _DAT_00114208,(int)param_2);\n  return;\n}\n\n", 
    "0010c130": "\nvoid FUN_0010c130(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00114008);\n  return;\n}\n\n", 
    "00106a80": "\nundefined8\nFUN_00106a80(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001069f0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00113f60)();\n  return iVar1;\n}\n\n", 
    "001151a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fread_unlocked_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103cb0": "\nvoid FUN_00103cb0(ulong param_1,ulong param_2,long param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  long lVar1;\n  int iVar2;\n  undefined2 uVar3;\n  ulong uVar4;\n  int iVar5;\n  long lVar6;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar4 = (param_1 - 1) * (long)param_6;\n    lVar6 = 0;\n    iVar5 = param_6;\n    do {\n      iVar2 = (int)(uVar4 / param_1);\n      if (DAT_00114101 == '\\0') {\n        uVar3 = *(undefined2 *)(param_3 + lVar6 * 2);\n      }\n      else {\n        uVar3 = CONCAT11(*(undefined *)(param_3 + lVar6 * 2),*(undefined *)(param_3 + 1 + lVar6 * 2)\n                        );\n      }\n      lVar6 = lVar6 + 1;\n      FUN_001093e0(param_4,(iVar5 - iVar2) + param_5,uVar3);\n      uVar4 = uVar4 - (long)param_6;\n      iVar5 = iVar2;\n    } while (param_1 - param_2 != lVar6);\n  }\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00113ea0)();\n  return;\n}\n\n", 
    "00102470": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00113e10)();\n  return;\n}\n\n", 
    "00109e30": "\nbool FUN_00109e30(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00106270": "\nlong FUN_00106270(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "0010b1e0": "\nvoid FUN_0010b1e0(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = FUN_0010b1c0();\n  FUN_0010b1c0(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "001057e0": "\nbool FUN_001057e0(uint param_1)\n\n{\n  return (param_1 & 0xd000) == 0x8000;\n}\n\n", 
    "001069f0": "\nundefined8 FUN_001069f0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106960(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "001034e0": "\nvoid thunk_FUN_00103460(void)\n\n{\n  FUN_00103460();\n  return;\n}\n\n", 
    "00109dc0": "\nvoid FUN_00109dc0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00109cc0(stdout,param_1,param_2);\n  return;\n}\n\n", 
    "00109310": "\nvoid FUN_00109310(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_001092e0(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "001061f0": "\nlong FUN_001061f0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00105f50(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00106060(param_1,param_2,lVar1);\n    FUN_001060f0(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "00103430": "\n/* WARNING: Removing unreachable block (ram,0x00103443) */\n/* WARNING: Removing unreachable block (ram,0x0010344f) */\n\nvoid FUN_00103430(void)\n\n{\n  return;\n}\n\n", 
    "00103670": "\nvoid FUN_00103670(ulong param_1,undefined param_2)\n\n{\n  bool bVar1;\n  byte bVar2;\n  uint uVar3;\n  char *pcVar4;\n  char *pcVar5;\n  char *__s;\n  long in_FS_OFFSET;\n  char local_22 [18];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  pcVar4 = local_22 + 1;\n  local_22[2] = 0;\n  pcVar5 = pcVar4 + -(long)DAT_00114220;\n  if (DAT_00114224 == 10) {\n    do {\n      pcVar4 = pcVar4 + -1;\n      *pcVar4 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n      bVar1 = 9 < param_1;\n      param_1 = param_1 / 10;\n    } while (bVar1);\n  }\n  else if (DAT_00114224 == 0x10) {\n    do {\n      pcVar4 = pcVar4 + -1;\n      uVar3 = (uint)param_1;\n      param_1 = param_1 >> 4;\n      *pcVar4 = \"0123456789abcdef\"[uVar3 & 0xf];\n    } while (param_1 != 0);\n  }\n  else if (DAT_00114224 == 8) {\n    do {\n      pcVar4 = pcVar4 + -1;\n      bVar2 = (byte)param_1;\n      param_1 = param_1 >> 3;\n      *pcVar4 = (bVar2 & 7) + 0x30;\n    } while (param_1 != 0);\n  }\n  __s = pcVar4;\n  if (pcVar5 < pcVar4) {\n    do {\n      pcVar4 = pcVar4 + -1;\n      *pcVar4 = '0';\n      __s = pcVar5;\n    } while (pcVar5 != pcVar4);\n  }\n  local_22[1] = param_2;\n  fputs_unlocked(__s,stdout);\n  if (local_10 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00113e98)();\n  return _Var1;\n}\n\n", 
    "00108200": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00108200(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00114080;\n  if (DAT_00114078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109330();\n    }\n    if (PTR_DAT_00114080 == &DAT_00114090) {\n      puVar8 = (undefined4 *)FUN_00109170(0);\n      uVar6 = PTR_DAT_00114098._4_4_;\n      uVar5 = PTR_DAT_00114098._0_4_;\n      uVar3 = _UNK_00114094;\n      PTR_DAT_00114080 = (undefined *)puVar8;\n      *puVar8 = _DAT_00114090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00109170(PTR_DAT_00114080);\n      PTR_DAT_00114080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00114078 * 4,0,(long)((param_1 + 1) - DAT_00114078) << 4);\n    DAT_00114078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00107040(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00114240) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00109110(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00107040(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00113e08)();\n  return;\n}\n\n", 
    "001092a0": "\nvoid FUN_001092a0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109330();\n}\n\n", 
    "00109e40": "\nuint FUN_00109e40(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00115200": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108aa0": "\nvoid FUN_00108aa0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108a90(0,param_1,param_2);\n  return;\n}\n\n", 
    "00103bb0": "\nvoid FUN_00103bb0(ulong param_1,ulong param_2,long param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  long lVar1;\n  int iVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  int iVar5;\n  long lVar6;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar4 = (param_1 - 1) * (long)param_6;\n    lVar6 = 0;\n    iVar5 = param_6;\n    do {\n      iVar2 = (int)(uVar4 / param_1);\n      if (DAT_00114101 == '\\0') {\n        uVar3 = *(undefined4 *)(param_3 + lVar6 * 4);\n      }\n      else {\n        uVar3 = CONCAT13(*(undefined *)(param_3 + lVar6 * 4),\n                         CONCAT12(*(undefined *)(param_3 + 1 + lVar6 * 4),\n                                  CONCAT11(*(undefined *)(param_3 + 2 + lVar6 * 4),\n                                           *(undefined *)(param_3 + 3 + lVar6 * 4))));\n      }\n      lVar6 = lVar6 + 1;\n      FUN_001093e0(param_4,(iVar5 - iVar2) + param_5,uVar3);\n      uVar4 = uVar4 - (long)param_6;\n      iVar5 = iVar2;\n    } while (param_1 - param_2 != lVar6);\n  }\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_00113e20)();\n  return iVar1;\n}\n\n", 
    "00103460": "\n/* WARNING: Removing unreachable block (ram,0x00103484) */\n/* WARNING: Removing unreachable block (ram,0x00103490) */\n\nvoid FUN_00103460(void)\n\n{\n  return;\n}\n\n", 
    "001095d0": "\nvoid FUN_001095d0(uint param_1,int param_2,undefined param_3,long param_4,undefined8 param_5,\n                 undefined4 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  long in_FS_OFFSET;\n  undefined local_32;\n  undefined local_31;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 4) {\n    if (param_1 < 2) {\n      if (param_1 != 1) {\n        FUN_001027fe();\n        return;\n      }\n      pcVar2 = \"%s%s argument \\'%s\\' too large\";\n    }\n    else {\n      pcVar2 = \"invalid suffix in %s%s argument \\'%s\\'\";\n    }\n  }\n  else {\n    if (param_1 != 4) {\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    pcVar2 = \"invalid %s%s argument \\'%s\\'\";\n  }\n  if (param_2 < 0) {\n    puVar4 = &local_32;\n    local_31 = 0;\n    puVar3 = &DAT_0010f3bd + -(long)param_2;\n    local_32 = param_3;\n  }\n  else {\n    puVar3 = &DAT_0010f3bd;\n    puVar4 = *(undefined **)(param_4 + (long)param_2 * 0x20);\n  }\n  uVar1 = dcgettext(0,pcVar2,5);\n  error(param_6,0,uVar1,puVar3,puVar4,param_5);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010a0d0": "\nchar * FUN_0010a0d0(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00109f30": "\nbool FUN_00109f30(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010b1c0": "\nlong FUN_0010b1c0(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "00109e10": "\nbool FUN_00109e10(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001067d0": "\nvoid FUN_001067d0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_00114238 = pcVar1 + 1;\n    uVar3 = (long)DAT_00114238 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_00114238;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_00114238 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00104f50": "\nuint FUN_00104f50(ulong param_1,long param_2,long *param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  int *piVar3;\n  size_t sVar4;\n  FILE *__stream;\n  long lVar5;\n  uint uVar6;\n  \n  __stream = DAT_001141a8;\n  if ((param_1 != 0) && (param_1 <= DAT_001141c0)) {\n    *param_3 = 0;\n    if (__stream == (FILE *)0x0) {\n      uVar6 = 1;\n    }\n    else {\n      lVar5 = 0;\n      uVar6 = 1;\n      while( true ) {\n        sVar4 = fread_unlocked((void *)(lVar5 + param_2),1,param_1 - lVar5,__stream);\n        *param_3 = *param_3 + sVar4;\n        if (param_1 - lVar5 == sVar4) break;\n        piVar3 = __errno_location();\n        uVar1 = FUN_00104df0(*piVar3);\n        uVar2 = FUN_00104ce0();\n        uVar6 = uVar6 & uVar1 & uVar2;\n        if (DAT_001141a8 == (FILE *)0x0) {\n          return uVar6;\n        }\n        lVar5 = *param_3;\n        __stream = DAT_001141a8;\n      }\n    }\n    return uVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"0 < n && n <= bytes_per_block\",\"src/od.c\",0x507,\"read_block\");\n}\n\n", 
    "00102803": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_0010a684::caseD_5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00115098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109ec0": "\nulong FUN_00109ec0(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001060f0": "\nvoid FUN_001060f0(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = FUN_00108ac0(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = FUN_00108ac0(lVar1);\n      __fprintf_chk(stderr,1,&DAT_0010e7de,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "0010b230": "\nundefined8 FUN_0010b230(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  undefined *puVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  char **ppcVar9;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar9 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar9 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar9 + 1;\n        }\n        pcVar6 = *ppcVar9;\n        if (pcVar6 == (char *)0x0) {\n          pcVar6 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar6;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        puVar5 = (undefined *)*puVar7;\n        if (puVar5 == (undefined *)0x0) {\n          puVar5 = &DAT_0010f6a0;\n        }\n        *(undefined **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "00115090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108900": "\nvoid FUN_00108900(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106890(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00108420(puVar1,0x3a,1);\n  FUN_00108200(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00113fd8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00113fd8)();\n  }\n  return;\n}\n\n", 
    "00106960": "\nundefined8 FUN_00106960(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106900(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00104300": "\nulong FUN_00104300(undefined8 param_1,char *param_2,char **param_3,int *param_4)\n\n{\n  char cVar1;\n  char cVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  size_t sVar5;\n  lconv *plVar6;\n  code *pcVar7;\n  ulong uVar8;\n  char *pcVar9;\n  undefined *puVar10;\n  uint uVar11;\n  int iVar12;\n  int iVar13;\n  int iVar14;\n  long in_FS_OFFSET;\n  ulong local_50;\n  char *local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_4 == (int *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"tspec != NULL\",\"src/od.c\",0x285,\"decode_one_format\");\n  }\n  cVar1 = *param_2;\n  switch(cVar1) {\n  case 'a':\n    local_48 = param_2 + 1;\n    iVar13 = 3;\n    pcVar7 = FUN_001038b0;\n    iVar14 = 5;\n    iVar12 = 1;\n    break;\n  default:\n    uVar3 = FUN_00108ac0(param_1);\n    cVar1 = *param_2;\n    uVar4 = dcgettext(0,\"invalid character \\'%c\\' in type string %s\",5);\n    uVar11 = 0;\n    error(0,0,uVar4,(int)cVar1,uVar3);\n    goto LAB_00104392;\n  case 'c':\n    local_48 = param_2 + 1;\n    iVar13 = 3;\n    pcVar7 = FUN_00104b00;\n    iVar14 = 6;\n    iVar12 = 1;\n    break;\n  case 'd':\n  case 'o':\n  case 'u':\n  case 'x':\n    cVar2 = param_2[1];\n    if (cVar2 == 'L') {\n      local_50 = 8;\n      local_48 = param_2 + 2;\n      iVar12 = DAT_001141a0;\n    }\n    else if (cVar2 < 'M') {\n      if (cVar2 == 'C') {\n        local_50 = 1;\n        local_48 = param_2 + 2;\n        iVar12 = DAT_00114184;\n      }\n      else {\n        if (cVar2 != 'I') goto LAB_00104860;\n        local_50 = 4;\n        local_48 = param_2 + 2;\n        iVar12 = DAT_00114190;\n      }\n    }\n    else if (cVar2 == 'S') {\n      local_50 = 2;\n      local_48 = param_2 + 2;\n      iVar12 = DAT_00114188;\n    }\n    else {\nLAB_00104860:\n      uVar11 = FUN_00103540(param_2 + 1,&local_48,&local_50);\n      uVar8 = local_50;\n      if ((char)uVar11 == '\\0') {\nLAB_00104720:\n        uVar3 = FUN_00108ac0(param_1);\n        uVar4 = dcgettext(0,\"invalid type string %s\",5);\n        error(0,0,uVar4,uVar3);\n        goto LAB_00104392;\n      }\n      if (local_48 == param_2 + 1) {\n        local_50 = 4;\n        iVar12 = DAT_00114190;\n      }\n      else if ((8 < local_50) ||\n              (iVar12 = (&DAT_00114180)[local_50], (&DAT_00114180)[local_50] == 0)) {\n        uVar3 = FUN_00108ac0(param_1);\n        uVar4 = dcgettext(0,\n                          \"invalid type string %s;\\nthis system doesn\\'t provide a %lu-byte integral type\"\n                          ,5);\nLAB_001048d2:\n        error(0,0,uVar4,uVar3,uVar8);\n        uVar11 = 0;\n        goto LAB_00104392;\n      }\n    }\n    if (cVar1 == 'u') {\n      iVar13 = *(int *)(&DAT_0010e680 + local_50 * 4);\n      puVar10 = &DAT_0010e097;\n      iVar14 = 1;\n      if (1 < iVar12 - 4U) {\n        puVar10 = &DAT_0010e098;\n      }\n      __sprintf_chk(param_4 + 4,1,8,\"%%*%s\",puVar10);\n    }\n    else if (cVar1 < 'v') {\n      if (cVar1 == 'd') {\n        iVar13 = *(int *)(&DAT_0010e6e0 + local_50 * 4);\n        pcVar9 = \"ld\";\n        if (1 < iVar12 - 4U) {\n          pcVar9 = \"d\";\n        }\n        iVar14 = 0;\n        __sprintf_chk(param_4 + 4,1,8,\"%%*%s\",pcVar9);\n      }\n      else {\n        if (cVar1 != 'o') {\n          uVar8 = switchD_0010448e::caseD_0();\n          return uVar8;\n        }\n        puVar10 = &DAT_0010e094;\n        if (1 < iVar12 - 4U) {\n          puVar10 = &DAT_0010e0f4;\n        }\n        iVar13 = *(int *)(&DAT_0010e740 + local_50 * 4);\n        iVar14 = 2;\n        __sprintf_chk(param_4 + 4,1,8,\"%%*.%d%s\",iVar13,puVar10);\n      }\n    }\n    else {\n      if (cVar1 != 'x') {\n        uVar8 = switchD_0010448e::caseD_0();\n        return uVar8;\n      }\n      pcVar9 = \"lx\";\n      if (1 < iVar12 - 4U) {\n        pcVar9 = \"x\";\n      }\n      iVar13 = *(int *)(&DAT_0010e620 + local_50 * 4);\n      iVar14 = 3;\n      __sprintf_chk(param_4 + 4,1,8,\"%%*.%d%s\",iVar13,pcVar9);\n    }\n    sVar5 = strlen((char *)(param_4 + 4));\n    if (7 < sVar5) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"strlen (tspec->fmt_string) < FMT_BYTES_ALLOCATED\",\"src/od.c\",0x2e8,\n                    \"decode_one_format\");\n    }\n    switch(iVar12) {\n    default:\ncode_r0x001027e0:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    case 1:\n      pcVar7 = FUN_00103f00;\n      if (iVar14 != 0) {\n        pcVar7 = FUN_00103e70;\n      }\n      break;\n    case 2:\n      pcVar7 = FUN_00103d90;\n      if (iVar14 != 0) {\n        pcVar7 = FUN_00103cb0;\n      }\n      break;\n    case 3:\n      pcVar7 = FUN_00103bb0;\n      break;\n    case 4:\n      pcVar7 = FUN_00103ab0;\n      break;\n    case 5:\n      pcVar7 = FUN_001039b0;\n    }\n    break;\n  case 'f':\n    cVar1 = param_2[1];\n    if (cVar1 == 'F') {\n      local_50 = 4;\n      local_48 = param_2 + 2;\n      iVar12 = DAT_00114130;\n    }\n    else if (cVar1 == 'L') {\n      local_50 = 0x10;\n      local_48 = param_2 + 2;\n      iVar12 = DAT_00114160;\n    }\n    else if (cVar1 == 'D') {\n      local_50 = 8;\n      local_48 = param_2 + 2;\n      iVar12 = DAT_00114140;\n    }\n    else {\n      uVar11 = FUN_00103540(param_2 + 1,&local_48,&local_50);\n      uVar8 = local_50;\n      if ((char)uVar11 == '\\0') goto LAB_00104720;\n      if (local_48 == param_2 + 1) {\n        local_50 = 8;\n        iVar12 = DAT_00114140;\n      }\n      else if ((0x10 < local_50) || (iVar12 = (&DAT_00114120)[local_50], iVar12 == 0)) {\n        uVar3 = FUN_00108ac0(param_1);\n        uVar4 = dcgettext(0,\n                          \"invalid type string %s;\\nthis system doesn\\'t provide a %lu-byte floating point type\"\n                          ,5);\n        goto LAB_001048d2;\n      }\n    }\n    plVar6 = localeconv();\n    iVar13 = 1;\n    if (*plVar6->decimal_point != '\\0') {\n      sVar5 = strlen(plVar6->decimal_point);\n      iVar13 = (int)sVar5;\n    }\n    if (iVar12 == 7) {\n      iVar13 = iVar13 + 0x17;\n      pcVar7 = FUN_001040b0;\n      iVar14 = 4;\n    }\n    else if (iVar12 == 8) {\n      iVar13 = iVar13 + 0x1c;\n      pcVar7 = FUN_00103f90;\n      iVar14 = 4;\n    }\n    else {\n      if (iVar12 != 6) goto code_r0x001027e0;\n      iVar13 = iVar13 + 0xe;\n      pcVar7 = FUN_001041c0;\n      iVar14 = 4;\n    }\n  }\n  param_4[1] = iVar12;\n  uVar11 = 1;\n  *(code **)(param_4 + 2) = pcVar7;\n  *param_4 = iVar14;\n  param_4[7] = iVar13;\n  cVar1 = *local_48;\n  *(bool *)(param_4 + 6) = cVar1 == 'z';\n  *param_3 = local_48 + (cVar1 == 'z');\nLAB_00104392:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return (ulong)uVar11;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_00113e18)();\n  return iVar1;\n}\n\n", 
    "00109f40": "\nulong FUN_00109f40(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00108460": "\nundefined4 FUN_00108460(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00114340;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001089a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001089a0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00114340;\n  uStack_60 = uRam0000000000114348;\n  local_38 = DAT_00114370;\n  local_58 = _DAT_00114350;\n  uStack_50 = uRam0000000000114358;\n  local_48 = _DAT_00114360;\n  uStack_40 = uRam0000000000114368;\n  FUN_00108480(&local_68);\n  FUN_00108200(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001068e0": "\nbool FUN_001068e0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00109fb0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "001057f0": "\nuint FUN_001057f0(ulong param_1)\n\n{\n  FILE *pFVar1;\n  char cVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  long lVar6;\n  int *piVar7;\n  ulong uVar8;\n  undefined8 uVar9;\n  ulong uVar10;\n  uint uVar11;\n  long in_FS_OFFSET;\n  undefined auStack_20d8 [24];\n  undefined4 local_20c0;\n  ulong local_20a8;\n  long local_20a0;\n  undefined local_2048 [8200];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 != 0) {\n    uVar11 = 1;\n    if (DAT_001141a8 != (FILE *)0x0) {\nLAB_001058c0:\n      pFVar1 = DAT_001141a8;\n      iVar5 = fileno(DAT_001141a8);\n      iVar5 = FUN_0010c150(iVar5,auStack_20d8);\n      if (iVar5 == 0) {\n        cVar2 = FUN_001057e0(local_20c0);\n        if (cVar2 == '\\0') {\nLAB_00105910:\n          uVar10 = 0x2000;\n          do {\n            if (param_1 < uVar10) {\n              uVar10 = param_1;\n            }\n            uVar8 = __fread_unlocked_chk(local_2048,0x2000,1,uVar10,DAT_001141a8);\n            pFVar1 = DAT_001141a8;\n            param_1 = param_1 - uVar8;\n            if (uVar10 != uVar8) {\n              iVar5 = ferror_unlocked(DAT_001141a8);\n              if (iVar5 != 0) {\n                uVar11 = 0;\n                goto LAB_0010596f;\n              }\n              iVar5 = feof_unlocked(pFVar1);\n              if (iVar5 != 0) goto LAB_001059a0;\n            }\n            if (param_1 == 0) goto LAB_0010596f;\n          } while( true );\n        }\n        lVar6 = local_20a0;\n        if (0x1fffffffffffffff < local_20a0 - 1U) {\n          lVar6 = 0x200;\n        }\n        if ((long)local_20a8 <= lVar6) goto LAB_00105910;\n        if (local_20a8 < param_1) {\n          param_1 = param_1 - local_20a8;\n          goto LAB_0010589e;\n        }\n        iVar5 = FUN_00109bb0(pFVar1,param_1,1);\n        if (iVar5 != 0) {\n          uVar11 = 0;\n        }\n        goto LAB_0010596f;\n      }\n      uVar9 = FUN_00108900(0,3,DAT_001141b8);\n      piVar7 = __errno_location();\n      uVar11 = 0;\n      error(0,*piVar7,&DAT_0010e7e0,uVar9);\n      goto LAB_0010589e;\n    }\nLAB_001059d2:\n    uVar9 = dcgettext(0,\"cannot skip past end of combined input\",5);\n    error(1,0,uVar9);\n  }\n  uVar11 = 1;\nLAB_0010596f:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar11;\nLAB_001059a0:\n  if (param_1 == 0) goto LAB_0010596f;\nLAB_0010589e:\n  uVar3 = FUN_00104df0(0);\n  uVar4 = FUN_00104ce0();\n  uVar11 = uVar11 & uVar3 & uVar4;\n  if (DAT_001141a8 == (FILE *)0x0) goto LAB_001059d2;\n  goto LAB_001058c0;\n}\n\n", 
    "001034f0": "\nvoid FUN_001034f0(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  do {\n    uVar1 = param_1 % param_2;\n    param_1 = param_2;\n    param_2 = uVar1;\n  } while (uVar1 != 0);\n  return;\n}\n\n", 
    "001083e0": "\nundefined4 FUN_001083e0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00114340;\n  }\n  return *param_1;\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00113f10)();\n  return pcVar1;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00113e80)();\n  return sVar1;\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00113df0)();\n  return;\n}\n\n", 
    "00103520": "\nlong FUN_00103520(long param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = FUN_001034f0();\n  return (param_2 / uVar1) * param_1;\n}\n\n", 
    "00103640": "\nvoid FUN_00103640(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00113fa0)();\n  return iVar1;\n}\n\n", 
    "001096d0": "\nbool FUN_001096d0(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "00108f40": "\nvoid FUN_00108f40(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00108ad0();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109f10": "\nbool FUN_00109f10(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00113ed0)();\n  return iVar1;\n}\n\n", 
    "00115078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024d0": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00113e40)();\n  return;\n}\n\n", 
    "001034a0": "\nvoid FUN_001034a0(void)\n\n{\n  if (DAT_001140e8 == '\\0') {\n    if (PTR___cxa_finalize_00113fe8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00114008);\n    }\n    FUN_00103430();\n    DAT_001140e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001035c0": "\nundefined8 FUN_001035c0(void)\n\n{\n  undefined8 uVar1;\n  uint *puVar2;\n  undefined *puVar3;\n  uint *puVar4;\n  \n  if (DAT_001141d0 != 0) {\n    puVar3 = &DAT_0010e5e0;\n    puVar4 = (uint *)(DAT_001141d8 + 4 + DAT_001141d0 * 0x28);\n    puVar2 = (uint *)(DAT_001141d8 + 4);\n    uVar1 = 1;\n    do {\n      uVar1 = FUN_00103520((long)(int)uVar1,(long)*(int *)(puVar3 + (ulong)*puVar2 * 4));\n      puVar2 = puVar2 + 10;\n    } while (puVar4 != puVar2);\n    return uVar1;\n  }\n  return 1;\n}\n\n", 
    "00115198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001062d0": "\nvoid FUN_001062d0(undefined8 param_1)\n\n{\n  DAT_00114230 = param_1;\n  return;\n}\n\n", 
    "00109510": "\nvoid FUN_00109510(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  long local_c0;\n  undefined local_b8 [16];\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d0 = &stack0x00000008;\n  local_d8 = 0x10;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  FUN_001094a0(param_9,param_10,&local_d8);\n  if (local_c0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109ea0": "\nbool FUN_00109ea0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106900": "\nundefined8 FUN_00106900(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001068e0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "0010b450": "\nundefined8 FUN_0010b450(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_0010b4cb:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_0010b5a0:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_0010b5f7;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_0010b5a0;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = FUN_0010b1c0(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_0010b5a0;\n  }\n  goto switchD_0010b682_caseD_26;\nLAB_0010b5f7:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_0010b60b:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_0010b614;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_0010b614;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0010b7ec;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = FUN_0010b1c0(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_0010b682_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0010b7ec:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_0010b682_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_0010b807:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_0010b614:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x0010b671;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_0010b614;\n      }\n      goto LAB_0010b9f6;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)FUN_0010b1c0(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010be5a;\nLAB_0010c02a:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010bf5e:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010b807;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010c02a;\n        goto LAB_0010bf5e;\n      }\n      goto LAB_0010c05f;\n    }\n    goto LAB_0010c063;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_0010b87e;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = FUN_0010b1c0(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_0010b682_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_0010b87e:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_0010b682_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_0010b91e:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_0010b9f6;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_0010b60b;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)FUN_0010b1c0(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_0010c063;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_0010bea1;\n      goto LAB_0010b91a;\n    }\n    goto LAB_0010c063;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_0010bea1:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_0010b91a:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_0010b91e;\n  }\n  goto LAB_0010be5a;\ncode_r0x0010b671:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_0010b682_caseD_25;\n  default:\n    goto switchD_0010b682_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_0010b682_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_0010b9f6;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_0010b6cb:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_0010b9f6:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_0010b682_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_0010b4cb;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_0010c05f:\n      __src = (byte **)param_3[1];\n      goto LAB_0010c063;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_0010b798;\n        goto LAB_0010bd2a;\n      }\n      goto LAB_0010c05f;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_0010bd2a:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_0010b798:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_0010b4cb;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_0010be6a;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)FUN_0010b1c0(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010be5a;\nLAB_0010bce1:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010bc98:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010b6cb;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010bce1;\n        goto LAB_0010bc98;\n      }\n      goto LAB_0010c05f;\n    }\nLAB_0010c063:\n    if (ppbVar2 == __src) goto LAB_0010be5a;\n  }\n  free(__src);\nLAB_0010be5a:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_0010be6a:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "0010a120": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * FUN_0010a120(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = FUN_0010b450(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_0010a953;\n  }\n  iVar5 = FUN_0010b230(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_0010a953;\n  }\n  uVar6 = FUN_0010b200(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_0010a1e1:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_0010a2d6;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x10a23c;\n      __n = (int *)FUN_0010b1c0(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_0010a2c7;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_0010a265;\n        }\ncode_r0x0010ad34:\n        *(undefined8 *)(puVar18 + -8) = 0x10ad39;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_0010a7d9;\nLAB_0010a7cc:\n        if (pvVar12 == (void *)0x0) goto LAB_0010a7d9;\n        goto LAB_0010a7d1;\n      }\n      piVar19 = (int *)0xc;\nLAB_0010a265:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ad34;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10acac;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x0010ad34;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x10acf6;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10a2ad;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_0010b1ac;\n      }\nLAB_0010a2c7:\n      *(undefined8 *)(puVar18 + -8) = 0x10a2d6;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_0010a2d6:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x10b089;\n          piVar9 = (int *)FUN_0010b1c0(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x0010ad34;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ad34;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10b174;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010ad34;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10b197;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10b0db;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_0010b1ac;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x10b163;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x10b112;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10b12a;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10b142;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_0010a953;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_00102808;\n          *(undefined8 *)(puVar18 + -8) = 0x10abe7;\n          piVar9 = (int *)FUN_0010b1c0(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x0010ad34;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ad34;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10afc8;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010ad34;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10b001;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10ac3f;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_0010b1ac;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_00102808:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_0010280d;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nswitchD_0010a684_caseD_5:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x102808;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x10a406;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x10a43d;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_00102808;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_00102808;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x10a587;\n            piVar9 = (int *)FUN_0010b1c0(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x0010ad34;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010ad34;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x10af7e;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010ad34;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10afb0;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x10a5d5;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010ad34;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x10a5eb;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_0010a614:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto switchD_0010a684_caseD_5;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_0010aa68;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_0010a6ca:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x10a6eb;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x0010a6fc;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_0010aab4;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x10aa24;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x0010a6fc;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10ae28;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x0010a6fc;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_0010a6ca;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x10adc1;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x0010a6fc;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_0010aabb;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_0010aa68:\n              uVar11 = (ulong)local_3c0[0];\nLAB_0010a872:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10a893;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_0010a872;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_0010aab4:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_0010aabb:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x10aae3;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x0010a6fc:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_0010a71c;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10a903;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10a917;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10a92f;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10a947;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_0010a953;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_0010a614;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_00102808;\n            if (local_3c4 < iVar5) {\nLAB_0010a71c:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10af16;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10af2a;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10af42;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10af5a;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_0010a953;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x10a75a;\n              uVar10 = FUN_0010b1c0(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x10a765;\n              piVar13 = (int *)FUN_0010b220(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x10ab60;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x10ab83;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_0010a614;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x10a7b0;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_0010a614;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_0010a7d9;\n                goto LAB_0010a7cc;\n              }\n              goto LAB_0010a614;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_0010a1e1;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0010a7ed;\nLAB_0010b1ac:\n  *(undefined8 *)(puVar18 + -8) = 0x10b1b1;\n  local_3e0 = __errno_location();\nLAB_0010a7d1:\n  *(undefined8 *)(puVar18 + -8) = 0x10a7d9;\n  free(pvVar12);\nLAB_0010a7d9:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x10a7ed;\n    free(puVar15);\n  }\nLAB_0010a7ed:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10a805;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10a81d;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_0010a953:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x10b1ac;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "00115190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102780": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00113f98)();\n  return;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00113f08)();\n  return iVar1;\n}\n\n", 
    "00102540": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00113e78)();\n  return;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00113de8)();\n  return;\n}\n\n", 
    "00108400": "\nvoid FUN_00108400(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00114340;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00108640": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00108640(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00114080;\n  if (1 < DAT_00114078) {\n    ppvVar2 = (void **)(PTR_DAT_00114080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00114080 + (ulong)(DAT_00114078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00114240) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00114098 = &DAT_00114240;\n    _DAT_00114090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00114090) {\n    free(__ptr_00);\n    PTR_DAT_00114080 = &DAT_00114090;\n  }\n  DAT_00114078 = 1;\n  return;\n}\n\n", 
    "00105010": "\nvoid FUN_00105010(long param_1,byte *param_2)\n\n{\n  byte bVar1;\n  ushort **ppuVar2;\n  byte *pbVar3;\n  uint __c;\n  \n  fwrite_unlocked(&DAT_0010e156,1,3,stdout);\n  if (param_1 != 0) {\n    ppuVar2 = __ctype_b_loc();\n    pbVar3 = param_2 + param_1;\n    do {\n      bVar1 = *param_2;\n      param_2 = param_2 + 1;\n      __c = (uint)bVar1;\n      if ((*(byte *)((long)*ppuVar2 + (ulong)bVar1 * 2 + 1) & 0x40) == 0) {\n        __c = 0x2e;\n      }\n      putchar_unlocked(__c);\n    } while (pbVar3 != param_2);\n  }\n  putchar_unlocked(0x3c);\n  return;\n}\n\n", 
    "001094a0": "\nint FUN_001094a0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = FUN_00109cc0();\n  if (iVar1 < 0) {\n    iVar2 = ferror(param_1);\n    if (iVar2 == 0) {\n      uVar3 = dcgettext(0,\"cannot perform formatted output\",5);\n      piVar4 = __errno_location();\n      error(DAT_00114028,*piVar4,uVar3);\n    }\n  }\n  return iVar1;\n}\n\n", 
    "00109080": "\nvoid FUN_00109080(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00113ec8)();\n  return iVar1;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_unlocked_00113e38)();\n  return sVar1;\n}\n\n", 
    "001035b0": "\nvoid FUN_001035b0(void)\n\n{\n  return;\n}\n\n", 
    "00105a10": "\nvoid FUN_00105a10(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_0010e15f;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'o' || (pcVar2[1] != 'd')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_0010e15c;\n        goto LAB_00105c4e;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_0010e15c;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0010e15c);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_00105c4e:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_0010e15c);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_0010e15c);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_0010e15c) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106e60": "\nundefined8\nFUN_00106e60(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00106d70(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "001086e0": "\nvoid FUN_001086e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108200(param_1,param_2,0xffffffffffffffff,&DAT_00114340);\n  return;\n}\n\n", 
    "00115088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109eb0": "\nbool FUN_00109eb0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00102410": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_00113de0)();\n  return;\n}\n\n", 
    "0010a010": "\nulong FUN_0010a010(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_00109ac0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010b220": "\nulong FUN_0010b220(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "00115080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00113e00)();\n  return iVar1;\n}\n\n", 
    "00103540": "\nundefined8 FUN_00103540(char *param_1,char **param_2,ulong *param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  cVar1 = *param_1;\n  uVar3 = 0;\n  if ((int)cVar1 - 0x30U < 10) {\n    param_1 = param_1 + 1;\n    uVar2 = (ulong)(int)((int)cVar1 - 0x30U);\n    uVar3 = 0;\n    while( true ) {\n      uVar3 = uVar2 + uVar3 * 10;\n      if (9 < (int)*param_1 - 0x30U) break;\n      uVar2 = (ulong)(int)((int)*param_1 - 0x30U);\n      param_1 = param_1 + 1;\n      if (~uVar2 / 10 < uVar3) {\n        return 0;\n      }\n    }\n  }\n  *param_2 = param_1;\n  *param_3 = uVar3;\n  return 1;\n}\n\n", 
    "00109b70": "\nvoid FUN_00109b70(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00109b50(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001150f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102690": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00113f20)();\n  return;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00113e90)();\n  return pcVar1;\n}\n\n", 
    "00106be0": "\nundefined8\nFUN_00106be0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106b30(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001150f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108790": "\nvoid FUN_00108790(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106890(auStack_68);\n  FUN_00108200(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001096b0": "\nvoid FUN_001096b0(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  FUN_001095d0(param_1,param_2,(int)param_3,param_4,param_5,DAT_00114028);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00108f20": "\nvoid FUN_00108f20(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00108ad0();\n  return;\n}\n\n", 
    "00109170": "\nvoid * FUN_00109170(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109330();\n  }\n  return pvVar1;\n}\n\n", 
    "00115178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00113e50)();\n  return;\n}\n\n", 
    "00106b30": "\nundefined8\nFUN_00106b30(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106a80(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106d70": "\nundefined8\nFUN_00106d70(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106ca0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00108fd0": "\nvoid FUN_00108fd0(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00108f40();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00115170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109730": "\nuint FUN_00109730(byte *param_1,byte **param_2,uint param_3,uintmax_t *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  uintmax_t uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  uintmax_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoumax\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoumax((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_0010982b;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_0010986c:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_001098c0_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_001097f2;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00109896_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00109896_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = FUN_001096d0(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_001098c0_caseD_43;\n        case 0x45:\n          uVar2 = FUN_00109700(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = FUN_00109700(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = FUN_00109700(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = FUN_00109700(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = FUN_00109700(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = FUN_00109700(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = FUN_00109700(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = FUN_00109700(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = FUN_001096d0(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = FUN_001096d0(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_001097f2;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_0010986c;\n      }\n    }\n  }\nLAB_0010982b:\n  uVar10 = 4;\nLAB_001097f2:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00115050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtod(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001062f0": "\nvoid FUN_001062f0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0010a010(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00114228 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00114230 == 0) {\n        error(0,*piVar2,&DAT_0010e7e0,uVar3);\n      }\n      else {\n        uVar4 = FUN_001088e0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00106378;\n    }\n  }\n  iVar1 = FUN_0010a010(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00106378:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00114028);\n}\n\n", 
    "00108a90": "\nvoid FUN_00108a90(void)\n\n{\n  FUN_00108200();\n  return;\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00113e88)();\n  return pcVar1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00113df8)();\n  return piVar1;\n}\n\n", 
    "00108420": "\nuint FUN_00108420(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00114340;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00113f18)();\n  return iVar1;\n}\n\n", 
    "00108540": "\nundefined8 FUN_00108540(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00114340;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00107040(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00109110(lVar3 + 1);\n  FUN_00107040(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00113e48)();\n  return iVar1;\n}\n\n", 
    "00115188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtold(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001083a0": "\nvoid FUN_001083a0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00114340;\n  }\n  FUN_001092e0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001084c0": "\nvoid FUN_001084c0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00114340;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00107040(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001062e0": "\nvoid FUN_001062e0(undefined param_1)\n\n{\n  DAT_00114228 = param_1;\n  return;\n}\n\n", 
    "00115180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109fb0": "\nint FUN_00109fb0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00109f70(*param_1);\n      bVar2 = FUN_00109f70(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010a110": "\nvoid FUN_0010a110(uint *param_1)\n\n{\n  *param_1 = *param_1 | 0x20;\n  return;\n}\n\n", 
    "00103400": "\nvoid FUN_00103400(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00113fd0)\n            (FUN_00102810,unaff_retaddr,&stack0x00000008,FUN_0010c0b0,FUN_0010c120,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010b200": "\nvoid FUN_0010b200(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = FUN_0010b1c0();\n  uVar1 = FUN_0010b1c0(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  FUN_0010b1c0(uVar1,in_RCX);\n  return;\n}\n\n", 
    "001151f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102750": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00113f80)();\n  return;\n}\n\n", 
    "00109b50": "\nvoid FUN_00109b50(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_00109bb0(param_1,0,1);\n  return;\n}\n\n", 
    "001150d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106ca0": "\nundefined8\nFUN_00106ca0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109f30((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106be0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00108730": "\nvoid FUN_00108730(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106890(auStack_58);\n  FUN_00108200(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105100": "\nuint FUN_00105100(void)\n\n{\n  long lVar1;\n  char cVar2;\n  ulong uVar3;\n  int iVar4;\n  uint uVar5;\n  char *__ptr;\n  ushort **ppuVar6;\n  ulong uVar7;\n  char *pcVar8;\n  uint uVar9;\n  ulong uVar10;\n  long in_FS_OFFSET;\n  int local_4c;\n  ulong local_48;\n  long local_40;\n  \n  uVar9 = 1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = 100;\n  if (99 < DAT_00114218) {\n    local_48 = DAT_00114218;\n  }\n  __ptr = (char *)FUN_00109110();\n  uVar7 = DAT_001141f8;\nLAB_0010515e:\n  do {\n    if ((DAT_001141f0 != '\\0') &&\n       ((DAT_001141e0 < DAT_00114218 || (DAT_001141e0 - DAT_00114218 <= uVar7)))) {\n      free(__ptr);\n      uVar5 = FUN_00104df0(0);\n      uVar9 = uVar9 & uVar5;\n      goto LAB_001051f3;\n    }\n    uVar10 = 0;\n    if (DAT_00114218 != 0) {\n      lVar1 = uVar7 + 1;\n      do {\n        uVar5 = FUN_00105090(&local_4c);\n        iVar4 = local_4c;\n        uVar9 = uVar9 & uVar5;\n        uVar7 = lVar1 + uVar10;\n        if (local_4c < 0) goto LAB_001051eb;\n        ppuVar6 = __ctype_b_loc();\n        uVar3 = DAT_00114218;\n        if ((*(byte *)((long)*ppuVar6 + (long)iVar4 * 2 + 1) & 0x40) == 0) goto LAB_0010515e;\n        __ptr[uVar10] = (char)iVar4;\n        uVar10 = uVar10 + 1;\n      } while (uVar10 < uVar3);\n    }\n    while ((DAT_001141f0 == '\\0' || (uVar7 < DAT_001141e0))) {\n      if (local_48 == uVar10) {\n        __ptr = (char *)FUN_00109270(__ptr,&local_48);\n      }\n      uVar7 = uVar7 + 1;\n      uVar5 = FUN_00105090(&local_4c);\n      iVar4 = local_4c;\n      uVar9 = uVar9 & uVar5;\n      if (local_4c < 0) goto LAB_001051eb;\n      if (local_4c == 0) break;\n      ppuVar6 = __ctype_b_loc();\n      if ((*(byte *)((long)*ppuVar6 + (long)iVar4 * 2 + 1) & 0x40) == 0) goto LAB_0010515e;\n      __ptr[uVar10] = (char)iVar4;\n      uVar10 = uVar10 + 1;\n    }\n    __ptr[uVar10] = '\\0';\n    (*DAT_00114200)(~uVar10 + uVar7,0x20);\n    cVar2 = *__ptr;\n    pcVar8 = __ptr;\n    while (local_4c = (int)cVar2, cVar2 != '\\0') {\n      pcVar8 = pcVar8 + 1;\n      if ((byte)(local_4c - 7U) < 7) {\n        switch(local_4c - 7U & 0xff) {\n        case 0:\n          fwrite_unlocked(&DAT_0010e10b,1,2,stdout);\n          break;\n        case 1:\n          fwrite_unlocked(&DAT_0010e0f9,1,2,stdout);\n          break;\n        case 2:\n          fwrite_unlocked(&DAT_0010e105,1,2,stdout);\n          break;\n        case 3:\n          fwrite_unlocked(&DAT_0010e0ff,1,2,stdout);\n          break;\n        case 4:\n          fwrite_unlocked(&DAT_0010e108,1,2,stdout);\n          break;\n        case 5:\n          fwrite_unlocked(&DAT_0010e0fc,1,2,stdout);\n          break;\n        case 6:\n          fwrite_unlocked(&DAT_0010e102,1,2,stdout);\n        }\n      }\n      else {\n        putc_unlocked(local_4c,stdout);\n      }\n      cVar2 = *pcVar8;\n    }\n    putchar_unlocked(10);\n  } while( true );\nLAB_001051eb:\n  free(__ptr);\nLAB_001051f3:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar9;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105cd0": "\nvoid FUN_00105cd0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_00114238;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\n                      \"Usage: %s [OPTION]... [FILE]...\\n  or:  %s [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]\\n  or:  %s --traditional [OPTION]... [FILE] [[+]OFFSET[.][b] [+][LABEL][.][b]]\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nWrite an unambiguous representation, octal bytes by default,\\nof FILE to standard output.  With more than one FILE argument,\\nconcatenate them in the listed order to form the input.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103610();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nIf first and second call formats both apply, the second format is assumed\\nif the last operand begins with + or (if there are 2 operands) a digit.\\nAn OFFSET operand means -j OFFSET.  LABEL is the pseudo-address\\nat first byte printed, incremented when dump is progressing.\\nFor OFFSET and LABEL, a 0x or 0X prefix indicates hexadecimal;\\nsuffixes may be . for octal and b for multiply by 512.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103640();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -A, --address-radix=RADIX   output format for file offsets; RADIX is one\\n                                of [doxn], for Decimal, Octal, Hex or None\\n      --endian={big|little}   swap input bytes according the specified order\\n  -j, --skip-bytes=BYTES      skip BYTES input bytes first\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -N, --read-bytes=BYTES      limit dump to BYTES input bytes\\n  -S BYTES, --strings[=BYTES]  output strings of at least BYTES graphic chars;\\n                                3 is implied when BYTES is not specified\\n  -t, --format=TYPE           select output format or formats\\n  -v, --output-duplicates     do not use * to mark line suppression\\n  -w[BYTES], --width[=BYTES]  output BYTES bytes per output line;\\n                                32 is implied when BYTES is not specified\\n      --traditional           accept arguments in third form above\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\n\\nTraditional format specifications may be intermixed; they accumulate:\\n  -a   same as -t a,  select named characters, ignoring high-order bit\\n  -b   same as -t o1, select octal bytes\\n  -c   same as -t c,  select printable characters or backslash escapes\\n  -d   same as -t u2, select unsigned decimal 2-byte units\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -f   same as -t fF, select floats\\n  -i   same as -t dI, select decimal ints\\n  -l   same as -t dL, select decimal longs\\n  -o   same as -t o2, select octal 2-byte units\\n  -s   same as -t d2, select decimal 2-byte units\\n  -x   same as -t x2, select hexadecimal 2-byte units\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\n\\nTYPE is made up of one or more of these specifications:\\n  a          named character, ignoring high-order bit\\n  c          printable character or backslash escape\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  d[SIZE]    signed decimal, SIZE bytes per integer\\n  f[SIZE]    floating point, SIZE bytes per float\\n  o[SIZE]    octal, SIZE bytes per integer\\n  u[SIZE]    unsigned decimal, SIZE bytes per integer\\n  x[SIZE]    hexadecimal, SIZE bytes per integer\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nSIZE is a number.  For TYPE in [doux], SIZE may also be C for\\nsizeof(char), S for sizeof(short), I for sizeof(int) or L for\\nsizeof(long).  If TYPE is f, SIZE may also be F for sizeof(float), D\\nfor sizeof(double) or L for sizeof(long double).\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nAdding a z suffix to any type displays printable characters at the end of\\neach output line.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\n\\nBYTES is hex with 0x or 0X prefix, and may have a multiplier suffix:\\n  b    512\\n  KB   1000\\n  K    1024\\n  MB   1000*1000\\n  M    1024*1024\\nand so on for G, T, P, E, Z, Y.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00105a10();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001151f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint feof_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027f9": "\nvoid switchD_00108b78::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001150d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nfloat strtof(char *__nptr,char **__endptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00113eb0)();\n  return pvVar1;\n}\n\n", 
    "00115148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027f4": "\nvoid FUN_001027f4(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00109270": "\nvoid FUN_00109270(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001091e0(param_1,param_2,1);\n  return;\n}\n\n", 
    "001026d0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00113f40)();\n  return;\n}\n\n", 
    "00115158": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001040b0": "\nvoid FUN_001040b0(ulong param_1,ulong param_2,undefined8 *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  undefined uVar1;\n  int iVar2;\n  undefined8 *puVar3;\n  undefined8 *puVar4;\n  undefined *puVar5;\n  ulong uVar6;\n  int iVar7;\n  ulong uVar8;\n  long in_FS_OFFSET;\n  undefined8 uVar9;\n  undefined8 local_70;\n  undefined8 local_68 [5];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar6 = (param_1 - 1) * (long)param_6;\n    uVar8 = param_1;\n    iVar7 = param_6;\n    do {\n      uVar8 = uVar8 - 1;\n      iVar2 = (int)(uVar6 / param_1);\n      if (DAT_00114101 == '\\0') {\n        uVar9 = *param_3;\n      }\n      else {\n        puVar5 = (undefined *)((long)param_3 + 7);\n        puVar3 = &local_70;\n        do {\n          uVar1 = *puVar5;\n          puVar4 = (undefined8 *)((long)puVar3 + 1);\n          puVar5 = puVar5 + -1;\n          *(undefined *)puVar3 = uVar1;\n          puVar3 = puVar4;\n          uVar9 = local_70;\n        } while (local_68 != puVar4);\n      }\n      FUN_001063a0(uVar9,local_68,0x28,0,0);\n      param_3 = param_3 + 1;\n      FUN_001093e0(&DAT_0010e08d,(iVar7 - iVar2) + param_5,local_68);\n      uVar6 = uVar6 - (long)param_6;\n      iVar7 = iVar2;\n    } while (uVar8 != param_2);\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00115030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001088f0": "\nvoid FUN_001088f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108830(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00115150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuintmax_t strtoumax(char *__nptr,char **__endptr,int __base)\n\n{\n  uintmax_t uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoumax_00113f78)();\n  return uVar1;\n}\n\n", 
    "00103830": "\nundefined  [16] FUN_00103830(char *param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  char *pcVar1;\n  ulong uVar2;\n  char cVar3;\n  \n  if (*param_1 != '\\0') {\n    if (*param_1 == '+') {\n      param_1 = param_1 + 1;\n    }\n    pcVar1 = strchr(param_1,0x2e);\n    cVar3 = '\\n';\n    if ((pcVar1 == (char *)0x0) && (cVar3 = '\\b', *param_1 == '0')) {\n      cVar3 = ((param_1[1] & 0xdfU) == 0x58) * '\\b' + '\\b';\n    }\n    uVar2 = FUN_00109730(param_1,0,cVar3,param_2,&DAT_0010e086);\n    return CONCAT88(param_4,uVar2 & 0xffffffffffffff00 | (ulong)((int)uVar2 == 0));\n  }\n  return ZEXT116(0) << 0x40;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_00113ee8)();\n  return iVar1;\n}\n\n", 
    "00102500": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00113e58)();\n  return;\n}\n\n", 
    "00108a70": "\nvoid FUN_00108a70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_001089a0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001150e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108720": "\nvoid FUN_00108720(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108700(0,param_1,param_2);\n  return;\n}\n\n", 
    "00105570": "\nuint FUN_00105570(void)\n\n{\n  void *pvVar1;\n  uint uVar2;\n  int iVar3;\n  void *__ptr;\n  ulong uVar4;\n  ulong uVar5;\n  uint uVar6;\n  ulong uVar7;\n  uint uVar8;\n  void *pvVar9;\n  long in_FS_OFFSET;\n  ulong local_60;\n  void *local_58;\n  long local_50;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (void *)FUN_00109130(2,DAT_001141c0);\n  uVar8 = (uint)DAT_001141f0;\n  local_50 = (long)__ptr + DAT_001141c0;\n  uVar5 = DAT_001141f8;\n  local_58 = __ptr;\n  if (DAT_001141f0 == 0) {\n    uVar2 = 1;\n    pvVar9 = __ptr;\n    while( true ) {\n      uVar6 = FUN_00104f50(DAT_001141c0,pvVar9,&local_60);\n      uVar2 = uVar2 & uVar6;\n      uVar6 = uVar8;\n      if (local_60 < DAT_001141c0) break;\n      if (local_60 != DAT_001141c0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"n_bytes_read == bytes_per_block\",\"src/od.c\",0x583,\"dump\");\n      }\n      uVar8 = uVar8 ^ 1;\n      pvVar1 = (&local_58)[uVar8];\n      FUN_001053b0(uVar5,local_60,pvVar1,pvVar9);\n      uVar5 = uVar5 + local_60;\n      pvVar9 = pvVar1;\n    }\nLAB_001056d8:\n    uVar7 = local_60;\n    if (local_60 != 0) {\n      iVar3 = FUN_001035c0();\n      uVar4 = (ulong)iVar3;\n      pvVar9 = (&local_58)[uVar6];\n      memset((void *)((long)pvVar9 + uVar7),0,(((uVar4 - 1) + uVar7) / uVar4) * uVar4 - uVar7);\n      FUN_001053b0(uVar5,uVar7,(&local_58)[uVar6 ^ 1],pvVar9);\n      uVar5 = uVar5 + local_60;\n    }\n  }\n  else {\n    if (DAT_001141f8 < DAT_001141e0) {\n      uVar6 = 0;\n      pvVar9 = __ptr;\n      do {\n        uVar7 = DAT_001141e0 - uVar5;\n        if (DAT_001141c0 < DAT_001141e0 - uVar5) {\n          uVar7 = DAT_001141c0;\n        }\n        uVar2 = FUN_00104f50(uVar7,pvVar9,&local_60);\n        uVar8 = uVar8 & uVar2;\n        uVar2 = uVar8;\n        if (local_60 < DAT_001141c0) goto LAB_001056d8;\n        if (local_60 != DAT_001141c0) {\n                    /* WARNING: Subroutine does not return */\n          __assert_fail(\"n_bytes_read == bytes_per_block\",\"src/od.c\",0x575,\"dump\");\n        }\n        uVar6 = uVar6 ^ 1;\n        pvVar1 = (&local_58)[uVar6];\n        FUN_001053b0(uVar5,local_60,pvVar1,pvVar9);\n        uVar5 = uVar5 + local_60;\n        pvVar9 = pvVar1;\n      } while (uVar5 < DAT_001141e0);\n    }\n    local_60 = 0;\n    uVar2 = uVar8;\n  }\n  (*DAT_00114200)(uVar5,10);\n  if ((DAT_001141f0 != 0) && (DAT_001141e0 <= uVar5)) {\n    uVar8 = FUN_00104df0(0);\n    uVar2 = uVar2 & uVar8;\n  }\n  free(__ptr);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "001027e5": "\nvoid FUN_001027e5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001150e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00113f38)();\n  return pcVar1;\n}\n\n", 
    "001037b0": "\nvoid FUN_001037b0(undefined8 param_1,char param_2)\n\n{\n  putchar_unlocked(0x28);\n  FUN_00103670(param_1,0x29);\n  if (param_2 == '\\0') {\n    return;\n  }\n  putchar_unlocked((int)param_2);\n  return;\n}\n\n", 
    "00115038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nfloat strtof(char *__nptr,char **__endptr)\n\n{\n  float fVar1;\n  \n  fVar1 = (float)(*(code *)PTR_strtof_00113ea8)();\n  return fVar1;\n}\n\n", 
    "00109280": "\nvoid FUN_00109280(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00109110();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00109160": "\nvoid thunk_FUN_00109110(void)\n\n{\n  FUN_00109110();\n  return;\n}\n\n", 
    "00115168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027e0": "\nvoid switchD_0010448e::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00115048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001041c0": "\nvoid FUN_001041c0(ulong param_1,ulong param_2,undefined8 param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  int iVar1;\n  ulong uVar2;\n  long lVar3;\n  int iVar4;\n  long in_FS_OFFSET;\n  undefined local_68 [40];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    lVar3 = 0;\n    uVar2 = (param_1 - 1) * (long)param_6;\n    iVar4 = param_6;\n    do {\n      iVar1 = (int)(uVar2 / param_1);\n      FUN_00106510(local_68,0x1f,0,0);\n      lVar3 = lVar3 + 1;\n      FUN_001093e0(&DAT_0010e08d,(iVar4 - iVar1) + param_5,local_68);\n      uVar2 = uVar2 - (long)param_6;\n      iVar4 = iVar1;\n    } while (param_1 - param_2 != lVar3);\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001063a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_001063a0(double param_1,char *param_2,ulong param_3,uint param_4,undefined4 param_5)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined2 *puVar4;\n  int iVar5;\n  long in_FS_OFFSET;\n  double dVar6;\n  undefined local_4b [4];\n  char acStack_47 [7];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_4b._0_2_ = 0x2d25;\n  puVar2 = local_4b + (ulong)(param_4 & 1) + 1;\n  puVar1 = puVar2 + (param_4 >> 1 & 1);\n  *puVar2 = 0x2b;\n  *puVar1 = 0x20;\n  puVar1[param_4 >> 2 & 1] = 0x30;\n  puVar4 = (undefined2 *)(puVar1 + (param_4 >> 2 & 1) + (param_4 >> 3 & 1));\n  *puVar4 = 0x2e2a;\n  *(undefined *)(puVar4 + 1) = 0x2a;\n  *(undefined *)(puVar4 + 2) = 0;\n  *(byte *)((long)puVar4 + 3) = (-((param_4 & 0x10) == 0) & 0x20U) + 0x47;\n  iVar5 = 1;\n  if (DAT_0010e800 <=\n      (double)(((ulong)param_1 ^ _DAT_0010e7f0) & -(ulong)(param_1 < 0.0) |\n              ~-(ulong)(param_1 < 0.0) & (ulong)param_1)) {\n    iVar5 = 0xf;\n  }\n  while (((iVar3 = __snprintf_chk(param_1,param_2,param_3,1,0xffffffffffffffff,local_4b,param_5,\n                                  iVar5), -1 < iVar3 && (iVar5 < 0x11)) &&\n         ((param_3 <= (ulong)(long)iVar3 || (dVar6 = strtod(param_2,(char **)0x0), dVar6 != param_1)\n          )))) {\n    iVar5 = iVar5 + 1;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001088e0": "\nvoid FUN_001088e0(undefined8 param_1)\n\n{\n  FUN_001088c0(param_1,0x3a);\n  return;\n}\n\n", 
    "00103d90": "\nvoid FUN_00103d90(ulong param_1,ulong param_2,long param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  long lVar1;\n  int iVar2;\n  short sVar3;\n  ulong uVar4;\n  int iVar5;\n  long lVar6;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 < param_1) {\n    uVar4 = (param_1 - 1) * (long)param_6;\n    lVar6 = 0;\n    iVar5 = param_6;\n    do {\n      iVar2 = (int)(uVar4 / param_1);\n      if (DAT_00114101 == '\\0') {\n        sVar3 = *(short *)(param_3 + lVar6 * 2);\n      }\n      else {\n        sVar3 = CONCAT11(*(undefined *)(param_3 + lVar6 * 2),*(undefined *)(param_3 + 1 + lVar6 * 2)\n                        );\n      }\n      lVar6 = lVar6 + 1;\n      FUN_001093e0(param_4,(iVar5 - iVar2) + param_5,(int)sVar3);\n      uVar4 = uVar4 - (long)param_6;\n      iVar5 = iVar2;\n    } while (param_1 - param_2 != lVar6);\n  }\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00115160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102730": "\nvoid __fread_unlocked_chk(void)\n\n{\n  (*(code *)PTR___fread_unlocked_chk_00113f70)();\n  return;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00113ee0)();\n  return pvVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00113f90)();\n  return sVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00113f00)();\n  return pvVar1;\n}\n\n", 
    "00109e90": "\nbool FUN_00109e90(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00102530": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00113e70)();\n  return;\n}\n\n", 
    "00108a40": "\nvoid FUN_00108a40(void)\n\n{\n  FUN_001089a0();\n  return;\n}\n\n", 
    "001151d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108630": "\nvoid FUN_00108630(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108540(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "001150b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f00": "\nvoid FUN_00103f00(ulong param_1,ulong param_2,char *param_3,undefined8 param_4,int param_5,\n                 int param_6)\n\n{\n  char cVar1;\n  int iVar2;\n  ulong uVar3;\n  char *pcVar4;\n  int iVar5;\n  \n  if (param_2 < param_1) {\n    uVar3 = (param_1 - 1) * (long)param_6;\n    pcVar4 = param_3 + (param_1 - param_2);\n    iVar5 = param_6;\n    do {\n      cVar1 = *param_3;\n      param_3 = param_3 + 1;\n      iVar2 = (int)(uVar3 / param_1);\n      FUN_001093e0(param_4,(iVar5 - iVar2) + param_5,(int)cVar1);\n      uVar3 = uVar3 - (long)param_6;\n      iVar5 = iVar2;\n    } while (param_3 != pcVar4);\n  }\n  return;\n}\n\n", 
    "00115128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtold(char *__nptr,char **__endptr)\n\n{\n  double dVar1;\n  \n  dVar1 = (double)(*(code *)PTR_strtold_00113f50)();\n  return dVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00113ec0)();\n  return iVar1;\n}\n\n", 
    "00109370": "\nint FUN_00109370(void)\n\n{\n  int iVar1;\n  int iVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  \n  iVar1 = FUN_00109dc0();\n  if (iVar1 < 0) {\n    iVar2 = ferror(stdout);\n    if (iVar2 == 0) {\n      uVar3 = dcgettext(0,\"cannot perform formatted output\",5);\n      piVar4 = __errno_location();\n      error(DAT_00114028,*piVar4,uVar3);\n    }\n  }\n  return iVar1;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n  lconv *plVar1;\n  \n  plVar1 = (lconv *)(*(code *)PTR_localeconv_00113e30)();\n  return plVar1;\n}\n\n", 
    "00109130": "\nvoid FUN_00109130(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00109110();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109330();\n}\n\n", 
    "00109ac0": "\nint FUN_00109ac0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_00109b2f;\n    }\n    iVar1 = FUN_00109b70(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_00109b2f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00115130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c164": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00113e68)();\n  return sVar1;\n}\n\n", 
    "00103610": "\nvoid FUN_00103610(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "001151d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102400": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00113fe8)();\n  return;\n}\n\n", 
    "001150b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027fe": "\nvoid FUN_001027fe(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00113f88)();\n  return;\n}\n\n", 
    "001091e0": "\nvoid FUN_001091e0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010923b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010923b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00109330(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00109170(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00113ef8)();\n  return iVar1;\n}\n\n", 
    "00108a50": "\nvoid FUN_00108a50(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108a40(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001151e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001150c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106680": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nint FUN_00106680(char *param_1,ulong param_2,uint param_3,undefined4 param_4,undefined8 param_5,\n                undefined8 param_6,undefined8 param_7,undefined2 param_8)\n\n{\n  undefined *puVar1;\n  undefined *puVar2;\n  int iVar3;\n  undefined4 *puVar4;\n  int iVar5;\n  long in_FS_OFFSET;\n  float10 in_ST0;\n  float10 fVar6;\n  float10 in_ST1;\n  float10 in_ST2;\n  float10 in_ST3;\n  float10 in_ST4;\n  float10 fVar7;\n  float10 fVar8;\n  undefined local_4b [6];\n  undefined auStack_45 [5];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_4b._0_2_ = 0x2d25;\n  fVar6 = (float10)CONCAT28(param_8,param_7);\n  if (fVar6 <= (float10)0 || (float10)0 != fVar6) {\n    fVar6 = -(float10)CONCAT28(param_8,param_7);\n  }\n  puVar2 = local_4b + (ulong)(param_3 & 1) + 1;\n  puVar1 = puVar2 + (param_3 >> 1 & 1);\n  *puVar2 = 0x2b;\n  *puVar1 = 0x20;\n  puVar1[param_3 >> 2 & 1] = 0x30;\n  puVar4 = (undefined4 *)(puVar1 + (param_3 >> 2 & 1) + (param_3 >> 3 & 1));\n  *puVar4 = 0x4c2a2e2a;\n  *(undefined *)((long)puVar4 + 5) = 0;\n  *(byte *)(puVar4 + 1) = (-((param_3 & 0x10) == 0) & 0x20U) + 0x47;\n  iVar5 = 1;\n  fVar7 = in_ST4;\n  fVar8 = in_ST4;\n  if (_DAT_0010e830 <= fVar6) {\n    iVar5 = 0x12;\n  }\n  while (((iVar3 = __snprintf_chk(param_1,param_2,1,0xffffffffffffffff,local_4b,param_4,iVar5),\n          -1 < iVar3 && (iVar5 < 0x15)) &&\n         ((fVar6 = in_ST0, param_2 <= (ulong)(long)iVar3 ||\n          (fVar6 = in_ST1, in_ST1 = in_ST2, in_ST2 = in_ST3, in_ST3 = in_ST4, in_ST4 = fVar7,\n          fVar7 = fVar8, strtold(param_1,(char **)0x0), fVar8 = fVar7,\n          in_ST0 != (float10)CONCAT28(param_8,param_7)))))) {\n    iVar5 = iVar5 + 1;\n    in_ST0 = fVar6;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001151e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtod(char *__nptr,char **__endptr)\n\n{\n  double dVar1;\n  \n  dVar1 = (double)(*(code *)PTR_strtod_00113e28)();\n  return dVar1;\n}\n\n", 
    "00115138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001049e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined8 FUN_001049e0(char *param_1)\n\n{\n  char cVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"s != NULL\",\"src/od.c\",0x3d7,\"decode_format_string\");\n  }\n  cVar1 = *param_1;\n  pcVar2 = param_1;\n  while (cVar1 != '\\0') {\n    if (_DAT_001141c8 <= DAT_001141d0) {\n      DAT_001141d8 = FUN_001091e0(DAT_001141d8,&DAT_001141c8,0x28);\n    }\n    uVar3 = FUN_00104300(param_1,pcVar2,&local_38,DAT_001141d8 + DAT_001141d0 * 0x28);\n    if ((char)uVar3 == '\\0') goto LAB_00104a9d;\n    if (local_38 == pcVar2) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"s != next\",\"src/od.c\",0x3e3,\"decode_format_string\");\n    }\n    DAT_001141d0 = DAT_001141d0 + 1;\n    pcVar2 = local_38;\n    cVar1 = *local_38;\n  }\n  uVar3 = 1;\nLAB_00104a9d:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_00113f48)();\n  return iVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fgetc(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fgetc_00113eb8)();\n  return iVar1;\n}\n\n", 
    "00115140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00115020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027ef": "\nvoid FUN_001027ef(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00113ef0)();\n  return iVar1;\n}\n\n", 
    "001027ea": "\nvoid switchD_001070df::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001150c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00113e60)();\n  return sVar1;\n}\n\n", 
    "00109700": "\nuint FUN_00109700(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = FUN_001096d0(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n"
}