{
    "00106ea0": "\nvoid FUN_00106ea0(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_0010b3b0(1,param_1);\n  uVar3 = FUN_0010b030(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "00103bd0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00116f98)();\n  return iVar1;\n}\n\n", 
    "00105ed0": "\nulong FUN_00105ed0(undefined8 param_1,undefined8 param_2,undefined4 param_3,undefined8 param_4,\n                  char *param_5,undefined8 *param_6)\n\n{\n  byte bVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  char *pcVar4;\n  char *__ptr;\n  undefined8 uVar5;\n  int *piVar6;\n  char *pcVar7;\n  undefined8 uVar8;\n  passwd *ppVar9;\n  void *__ptr_00;\n  long lVar10;\n  ulong uVar11;\n  undefined auVar12 [16];\n  \n  switch(param_3) {\n  case 0x41:\n    pcVar7 = (char *)FUN_001056c0(param_6);\n    goto LAB_00105f43;\n  case 0x42:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,0x200);\n    break;\n  case 0x43:\n    uVar11 = FUN_00105a50(param_1,param_2,param_5);\n    return uVar11;\n  case 0x44:\n    uVar11 = 0;\n    FUN_00104340(param_1,param_2,*param_6);\n    break;\n  default:\n    fputc_unlocked(0x3f,stdout);\n    goto LAB_00105f11;\n  case 0x46:\n    pcVar7 = (char *)FUN_00107340(param_6);\n    goto LAB_00105f43;\n  case 0x47:\n    ppVar9 = (passwd *)getgrgid(*(__gid_t *)(param_6 + 4));\n    goto joined_r0x001061ab;\n  case 0x4e:\n    uVar11 = 0;\n    uVar3 = FUN_0010ace0(0);\n    uVar8 = FUN_0010b100(uVar3,param_5);\n    FUN_00104380(param_1,param_2,uVar8);\n    if ((*(uint *)(param_6 + 3) & 0xf000) == 0xa000) {\n      __ptr_00 = (void *)FUN_00106c90(param_5,param_6[6]);\n      if (__ptr_00 == (void *)0x0) {\n        uVar8 = FUN_0010b100(4,param_5);\n        uVar5 = dcgettext(0,\"cannot read symbolic link %s\",5);\n        piVar6 = __errno_location();\n        uVar11 = 1;\n        error(0,*piVar6,uVar5,uVar8);\n      }\n      else {\n        __printf_chk(1,&DAT_0011137d);\n        uVar3 = FUN_0010ace0(0);\n        uVar8 = FUN_0010b100(uVar3,__ptr_00);\n        FUN_00104380(param_1,param_2,uVar8);\n        free(__ptr_00);\n      }\n    }\n    break;\n  case 0x54:\n    uVar2 = gnu_dev_minor(param_6[5]);\n    goto LAB_00105ff1;\n  case 0x55:\n    ppVar9 = getpwuid(*(__uid_t *)((long)param_6 + 0x1c));\njoined_r0x001061ab:\n    pcVar7 = \"UNKNOWN\";\n    if (ppVar9 != (passwd *)0x0) {\n      pcVar7 = ppVar9->pw_name;\n    }\n    goto LAB_00105f43;\n  case 0x57:\n    auVar12 = thunk_FUN_00105b70();\n    auVar12 = FUN_00104010(SUB168(auVar12,0),SUB168(auVar12 >> 0x40,0));\n    goto LAB_0010613d;\n  case 0x58:\n    auVar12 = FUN_00105b60(param_6[9],param_6[10]);\n    goto LAB_0010613d;\n  case 0x59:\n    auVar12 = FUN_00105b60(param_6[0xb],param_6[0xc]);\n    goto LAB_0010613d;\n  case 0x5a:\n    auVar12 = FUN_00105b60(param_6[0xd],param_6[0xe]);\nLAB_0010613d:\n    FUN_00105b90(param_1,param_2,SUB168(auVar12,0),SUB168(auVar12 >> 0x40,0));\n    return 0;\n  case 0x61:\n    uVar11 = 0;\n    FUN_00104440(param_1,param_2,*(uint *)(param_6 + 3) & 0xfff);\n    break;\n  case 0x62:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,param_6[8]);\n    break;\n  case 100:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,*param_6);\n    break;\n  case 0x66:\n    uVar11 = 0;\n    FUN_00104340(param_1,param_2,*(undefined4 *)(param_6 + 3));\n    break;\n  case 0x67:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,*(undefined4 *)(param_6 + 4));\n    break;\n  case 0x68:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,param_6[2]);\n    break;\n  case 0x69:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,param_6[1]);\n    break;\n  case 0x6d:\n    if ((DAT_001171a1 == '\\0') && ((*(uint *)(param_6 + 3) & 0xf000) == 0xa000)) {\nLAB_001058c0:\n      __ptr = (char *)FUN_00106890(param_5,param_6);\n      if (__ptr != (char *)0x0) {\n        pcVar4 = (char *)FUN_001056f0(__ptr);\n        if (pcVar4 == (char *)0x0) {\n          bVar1 = 0;\n          pcVar4 = __ptr;\n        }\n        else {\n          bVar1 = 0;\n        }\n        goto LAB_0010588e;\n      }\n    }\n    else {\n      pcVar7 = canonicalize_file_name(param_5);\n      if (pcVar7 != (char *)0x0) {\n        pcVar4 = (char *)FUN_001056f0(pcVar7);\n        __ptr = (char *)0x0;\n        free(pcVar7);\n        bVar1 = 0;\n        if (pcVar4 != (char *)0x0) goto LAB_0010588e;\n        goto LAB_001058c0;\n      }\n      uVar8 = FUN_0010b100(4,param_5);\n      uVar5 = dcgettext(0,\"failed to canonicalize %s\",5);\n      piVar6 = __errno_location();\n      error(0,*piVar6,uVar5,uVar8);\n      __ptr = pcVar7;\n    }\n    bVar1 = 1;\n    pcVar4 = \"?\";\nLAB_0010588e:\n    FUN_00104380(param_1,param_2,pcVar4);\n    free(__ptr);\n    return (ulong)bVar1;\n  case 0x6e:\n    uVar11 = 0;\n    FUN_00104380(param_1,param_2,param_5);\n    break;\n  case 0x6f:\n    lVar10 = param_6[7];\n    if (0x1fffffffffffffff < lVar10 - 1U) {\n      lVar10 = 0x200;\n    }\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,lVar10);\n    break;\n  case 0x73:\n    uVar11 = 0;\n    FUN_00104400(param_1,param_2,param_6[6]);\n    break;\n  case 0x74:\n    uVar2 = gnu_dev_major(param_6[5]);\nLAB_00105ff1:\n    uVar11 = 0;\n    FUN_00104340(param_1,param_2,uVar2);\n    break;\n  case 0x75:\n    uVar11 = 0;\n    FUN_001043c0(param_1,param_2,*(undefined4 *)((long)param_6 + 0x1c));\n    break;\n  case 0x77:\n    auVar12 = thunk_FUN_00105b70();\n    if (auVar12 < (undefined  [16])0x0) {\n      FUN_00104380(param_1,param_2,&DAT_00110fbe);\n    }\n    else {\n      uVar8 = FUN_00105960(SUB168(auVar12,0),SUB168(auVar12 >> 0x40,0));\n      FUN_00104380(param_1,param_2,uVar8);\n    }\nLAB_00105f11:\n    uVar11 = 0;\n    break;\n  case 0x78:\n    auVar12 = FUN_00105b60(param_6[9],param_6[10]);\n    pcVar7 = (char *)FUN_00105960(SUB168(auVar12,0),SUB168(auVar12 >> 0x40,0));\n    goto LAB_00105f43;\n  case 0x79:\n    auVar12 = FUN_00105b60(param_6[0xb],param_6[0xc]);\n    pcVar7 = (char *)FUN_00105960(SUB168(auVar12,0),SUB168(auVar12 >> 0x40,0));\n    goto LAB_00105f43;\n  case 0x7a:\n    auVar12 = FUN_00105b60(param_6[0xd],param_6[0xe]);\n    pcVar7 = (char *)FUN_00105960(SUB168(auVar12,0),SUB168(auVar12 >> 0x40,0));\nLAB_00105f43:\n    FUN_00104380(param_1,param_2,pcVar7);\n    return 0;\n  }\n  return uVar11;\n}\n\n", 
    "00103ab0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00116f08)();\n  return pcVar1;\n}\n\n", 
    "0010c380": "\nundefined8 FUN_0010c380(void)\n\n{\n  return 0xffffffffffffffff;\n}\n\n", 
    "00118188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid lgetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103910": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00116e38)();\n  return iVar1;\n}\n\n", 
    "0010d350": "\nulong FUN_0010d350(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "0010c260": "\nsize_t FUN_0010c260(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010d510(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00118180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103aa0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00116f00)();\n  return pvVar1;\n}\n\n", 
    "00103bc0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00116f90)();\n  return iVar1;\n}\n\n", 
    "0010bb90": "\nvoid FUN_0010bb90(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010bbeb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010bbeb:\n                    /* WARNING: Subroutine does not return */\n      FUN_0010bce0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_0010bb20(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00107030": "\nlong FUN_00107030(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00106d90(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00106ea0(param_1,param_2,lVar1);\n    FUN_00106f30(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "0010da10": "\nvoid FUN_0010da10(undefined8 param_1)\n\n{\n  FUN_0010daa0(param_1,0,3);\n  return;\n}\n\n", 
    "0010d8a0": "\nvoid FUN_0010d8a0(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010d900(param_1,0,1);\n  return;\n}\n\n", 
    "001056f0": "\nchar * FUN_001056f0(char *param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  char **ppcVar5;\n  long in_FS_OFFSET;\n  long local_158;\n  long local_150;\n  long local_c8;\n  long local_c0;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_00117150 == '\\0') {\n    DAT_00117148 = (char **)FUN_0010c3e0(0);\n    if (DAT_00117148 == (char **)0x0) {\n      uVar3 = dcgettext(0,\"cannot read table of mounted file systems\",5);\n      piVar4 = __errno_location();\n      error(0,*piVar4,&DAT_0011183a,uVar3);\n    }\n    DAT_00117150 = '\\x01';\n  }\n  iVar1 = FUN_0010fbd0(param_1,&local_158);\n  if ((iVar1 == 0) && (DAT_00117148 != (char **)0x0)) {\n    ppcVar5 = DAT_00117148;\n    do {\n      if (((*(byte *)(ppcVar5 + 5) & 1) != 0) && (pcVar2 = *ppcVar5, *pcVar2 == '/')) {\n        iVar1 = strcmp(ppcVar5[1],param_1);\n        if (iVar1 == 0) {\n          iVar1 = FUN_0010fbd0(pcVar2,&local_c8);\n          if (((iVar1 == 0) && (local_150 == local_c0)) && (local_158 == local_c8)) {\n            pcVar2 = *ppcVar5;\n            goto LAB_001057aa;\n          }\n        }\n      }\n      ppcVar5 = (char **)ppcVar5[6];\n    } while (ppcVar5 != (char **)0x0);\n  }\n  pcVar2 = (char *)0x0;\nLAB_001057aa:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pcVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00118078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c390": "\nvoid FUN_0010c390(void **param_1)\n\n{\n  free(*param_1);\n  free(param_1[1]);\n  free(param_1[2]);\n  if ((*(byte *)(param_1 + 5) & 4) == 0) {\n    free(param_1);\n    return;\n  }\n  free(param_1[3]);\n  free(param_1);\n  return;\n}\n\n", 
    "00118198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001043c0": "\nvoid FUN_001043c0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00104280(param_1,param_2,&DAT_00110fc3,&DAT_00110fc0);\n  __printf_chk(1,param_1,param_3);\n  return;\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00116e30)();\n  return iVar1;\n}\n\n", 
    "0010d000": "\nundefined4 FUN_0010d000(long param_1)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  int iVar3;\n  \n  uVar1 = 1;\n  if (param_1 != 1) {\n    piVar2 = __errno_location();\n    iVar3 = *piVar2;\n    uVar1 = FUN_0010cce0(param_1);\n    if ((char)uVar1 == '\\0') {\n      iVar3 = *piVar2;\n    }\n    FUN_0010cf10(param_1);\n    *piVar2 = iVar3;\n  }\n  return uVar1;\n}\n\n", 
    "0010d240": "\nbool FUN_0010d240(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0010afe0": "\nvoid FUN_0010afe0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010ab00(param_1,param_2,0xffffffffffffffff,&DAT_001172c0);\n  return;\n}\n\n", 
    "00118070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103bf0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulonglong gnu_dev_makedev(uint __major,uint __minor)\n\n{\n  ulonglong uVar1;\n  \n  uVar1 = (*(code *)PTR_gnu_dev_makedev_00116fa8)();\n  return uVar1;\n}\n\n", 
    "00103ad0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t timegm(tm *__tp)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_timegm_00116f18)();\n  return tVar1;\n}\n\n", 
    "0010bb60": "\nvoid FUN_0010bb60(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_0010bb20();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010bce0();\n}\n\n", 
    "00118048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b8d0": "\nvoid FUN_0010b8d0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_0010b480();\n  return;\n}\n\n", 
    "0010b390": "\nvoid FUN_0010b390(void)\n\n{\n  FUN_0010ab00();\n  return;\n}\n\n", 
    "00118168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118288": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b030": "\nvoid FUN_0010b030(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00109190(auStack_58);\n  FUN_0010ab00(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010c240": "\nuint FUN_0010c240(undefined8 param_1,byte **param_2)\n\n{\n  uint uVar1;\n  int *piVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  uVar1 = fgetfilecon();\n  if (uVar1 == 0) {\n    piVar2 = __errno_location();\n    *piVar2 = 0x5f;\n    return 0xffffffff;\n  }\n  bVar6 = uVar1 < 10;\n  bVar7 = uVar1 == 10;\n  if (bVar7) {\n    lVar3 = 10;\n    pbVar4 = *param_2;\n    pbVar5 = (byte *)\"unlabeled\";\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar7 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n    } while (bVar7);\n    if ((!bVar6 && !bVar7) == bVar6) {\n      freecon(*param_2);\n      *param_2 = (byte *)0x0;\n      piVar2 = __errno_location();\n      *piVar2 = 0x3d;\n      return 0xffffffff;\n    }\n  }\n  return uVar1;\n}\n\n", 
    "00118040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00116db8)();\n  return sVar1;\n}\n\n", 
    "00118160": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103930": "\nvoid lgetfilecon(void)\n\n{\n  (*(code *)PTR_lgetfilecon_00116e48)();\n  return;\n}\n\n", 
    "00118280": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ac0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00116f10)();\n  return;\n}\n\n", 
    "0010bc90": "\nvoid FUN_0010bc90(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_0010bac0(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00103be0": "\nvoid hasmntopt(void)\n\n{\n  (*(code *)PTR_hasmntopt_00116fa0)();\n  return;\n}\n\n", 
    "0010b8f0": "\nvoid FUN_0010b8f0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_0010b480();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001076b0": "\nlong FUN_001076b0(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_tolower_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n", 
    "00118298": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unsetenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d220": "\nbool FUN_0010d220(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00103800": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00116db0)();\n  return;\n}\n\n", 
    "0010d340": "\nbool FUN_0010d340(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00118290": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103920": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00116e40)();\n  return pvVar1;\n}\n\n", 
    "00118050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d100": "\ntime_t FUN_0010d100(long param_1,tm *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  tm *ptVar4;\n  time_t tVar5;\n  long in_FS_OFFSET;\n  time_t local_70;\n  tm local_68;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    tVar5 = timegm(param_2);\n    goto LAB_0010d172;\n  }\n  lVar3 = FUN_0010cf50();\n  if (lVar3 != 0) {\n    local_70 = mktime(param_2);\n    if (local_70 == -1) {\n      ptVar4 = localtime_r(&local_70,&local_68);\n      if ((ptVar4 != (tm *)0x0) && (iVar2 = FUN_0010cc40(param_2,&local_68), iVar2 != 0))\n      goto LAB_0010d152;\n    }\n    else {\nLAB_0010d152:\n      cVar1 = FUN_0010cdc0(param_1,param_2);\n      if (cVar1 == '\\0') {\n        local_70 = -1;\n      }\n    }\n    cVar1 = FUN_0010d000(lVar3);\n    tVar5 = local_70;\n    if (cVar1 != '\\0') goto LAB_0010d172;\n  }\n  tVar5 = -1;\nLAB_0010d172:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return tVar5;\n}\n\n", 
    "00118170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107120": "\nvoid FUN_00107120(undefined param_1)\n\n{\n  DAT_001171a8 = param_1;\n  return;\n}\n\n", 
    "00107240": "\nundefined * FUN_00107240(void *param_1)\n\n{\n  size_t __n;\n  undefined *__dest;\n  \n  __n = FUN_00107200();\n  __dest = (undefined *)malloc(__n + 1 + (ulong)(__n == 0));\n  if (__dest != (undefined *)0x0) {\n    __dest = (undefined *)memcpy(__dest,param_1,__n);\n    if (__n == 0) {\n      *__dest = 0x2e;\n      __n = 1;\n    }\n    __dest[__n] = 0;\n  }\n  return __dest;\n}\n\n", 
    "00118148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118268": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001056c0": "\nundefined * FUN_001056c0(undefined8 param_1)\n\n{\n  FUN_001075c0(param_1,&DAT_00117158);\n  DAT_00117162 = 0;\n  return &DAT_00117158;\n}\n\n", 
    "00118028": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid is_selinux_enabled(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109670": "\nundefined8\nFUN_00109670(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001095a0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00109430": "\nundefined8\nFUN_00109430(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00109380(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00118140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * canonicalize_file_name(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b130": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010b130(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_001172c0;\n  uStack_40 = uRam00000000001172c8;\n  local_38 = _DAT_001172d0;\n  uStack_30 = uRam00000000001172d8;\n  local_28 = _DAT_001172e0;\n  uStack_20 = uRam00000000001172e8;\n  local_18 = DAT_001172f0;\n  FUN_0010ad20(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_0010ab00(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00118260": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t timegm(tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105b80": "\nundefined  [16] thunk_FUN_00105b70(void)\n\n{\n  return CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\n}\n\n", 
    "00106d90": "\nlong FUN_00106d90(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "0010b370": "\nvoid FUN_0010b370(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_0010b2a0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00118020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid endmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b010": "\nvoid FUN_0010b010(undefined8 param_1)\n\n{\n  FUN_0010afe0(0,param_1);\n  return;\n}\n\n", 
    "0010c220": "\nuint FUN_0010c220(undefined8 param_1,byte **param_2)\n\n{\n  uint uVar1;\n  int *piVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  uVar1 = lgetfilecon();\n  if (uVar1 == 0) {\n    piVar2 = __errno_location();\n    *piVar2 = 0x5f;\n    return 0xffffffff;\n  }\n  bVar6 = uVar1 < 10;\n  bVar7 = uVar1 == 10;\n  if (bVar7) {\n    lVar3 = 10;\n    pbVar4 = *param_2;\n    pbVar5 = (byte *)\"unlabeled\";\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar7 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n    } while (bVar7);\n    if ((!bVar6 && !bVar7) == bVar6) {\n      freecon(*param_2);\n      *param_2 = (byte *)0x0;\n      piVar2 = __errno_location();\n      *piVar2 = 0x3d;\n      return 0xffffffff;\n    }\n  }\n  return uVar1;\n}\n\n", 
    "00107110": "\nvoid FUN_00107110(undefined8 param_1)\n\n{\n  DAT_001171b0 = param_1;\n  return;\n}\n\n", 
    "0010cc40": "\nbool FUN_0010cc40(uint *param_1,uint *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  byte bVar1;\n  uint uVar2;\n  \n  uVar2 = *param_1 ^ *param_2 | param_1[1] ^ param_2[1] | param_1[2] ^ param_2[2] |\n          param_1[3] ^ param_2[3] | param_1[4] ^ param_2[4] | param_1[5] ^ param_2[5];\n  bVar1 = FUN_0010cc20(param_1[8],param_2[8],param_3,param_4,uVar2);\n  return (bVar1 | uVar2) == 0;\n}\n\n", 
    "0010ba30": "\nvoid FUN_0010ba30(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010dc10": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * FUN_0010dc10(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = FUN_0010eed0(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_0010e443;\n  }\n  iVar5 = FUN_0010ecb0(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_0010e443;\n  }\n  uVar6 = FUN_0010da70(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_0010dcd1:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_0010ddc6;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x10dd2c;\n      __n = (int *)FUN_0010da30(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_0010ddb7;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_0010dd55;\n        }\ncode_r0x0010e824:\n        *(undefined8 *)(puVar18 + -8) = 0x10e829;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_0010e2c9;\nLAB_0010e2bc:\n        if (pvVar12 == (void *)0x0) goto LAB_0010e2c9;\n        goto LAB_0010e2c1;\n      }\n      piVar19 = (int *)0xc;\nLAB_0010dd55:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010e824;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10e79c;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x0010e824;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x10e7e6;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x10dd9d;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_0010ec9c;\n      }\nLAB_0010ddb7:\n      *(undefined8 *)(puVar18 + -8) = 0x10ddc6;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_0010ddc6:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x10eb79;\n          piVar9 = (int *)FUN_0010da30(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x0010e824;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010e824;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10ec64;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010e824;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10ec87;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10ebcb;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_0010ec9c;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x10ec53;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x10ec02;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10ec1a;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x10ec32;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_0010e443;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_00103c5e;\n          *(undefined8 *)(puVar18 + -8) = 0x10e6d7;\n          piVar9 = (int *)FUN_0010da30(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x0010e824;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010e824;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x10eab8;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x0010e824;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x10eaf1;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x10e72f;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_0010ec9c;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_00103c5e:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_00103c63;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nswitchD_0010e174_caseD_5:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x103c5e;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x10def6;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x10df2d;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_00103c5e;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_00103c5e;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x10e077;\n            piVar9 = (int *)FUN_0010da30(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x0010e824;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x0010e824;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x10ea6e;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010e824;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10eaa0;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x10e0c5;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x0010e824;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x10e0db;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_0010e104:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto switchD_0010e174_caseD_5;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_0010e558;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_0010e1ba:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x10e1db;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x0010e1ec;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_0010e5a4;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x10e514;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x0010e1ec;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10e918;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x0010e1ec;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_0010e1ba;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x10e8b1;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x0010e1ec;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_0010e5ab;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_0010e558:\n              uVar11 = (ulong)local_3c0[0];\nLAB_0010e362:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x10e383;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_0010e362;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_0010e5a4:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_0010e5ab:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x10e5d3;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x0010e1ec:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_0010e20c;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10e3f3;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10e407;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10e41f;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10e437;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_0010e443;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_0010e104;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_00103c5e;\n            if (local_3c4 < iVar5) {\nLAB_0010e20c:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea06;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea1a;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea32;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x10ea4a;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_0010e443;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x10e24a;\n              uVar10 = FUN_0010da30(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x10e255;\n              piVar13 = (int *)FUN_0010da90(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x10e650;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x10e673;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_0010e104;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x10e2a0;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_0010e104;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_0010e2c9;\n                goto LAB_0010e2bc;\n              }\n              goto LAB_0010e104;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_0010dcd1;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0010e2dd;\nLAB_0010ec9c:\n  *(undefined8 *)(puVar18 + -8) = 0x10eca1;\n  local_3e0 = __errno_location();\nLAB_0010e2c1:\n  *(undefined8 *)(puVar18 + -8) = 0x10e2c9;\n  free(pvVar12);\nLAB_0010e2c9:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x10e2dd;\n    free(puVar15);\n  }\nLAB_0010e2dd:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10e2f5;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x10e30d;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_0010e443:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x10ec9c;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "00118038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118278": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a50": "\nuint FUN_00105a50(long param_1,long param_2,undefined8 param_3)\n\n{\n  uint uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (DAT_001171a1 == '\\0') {\n    uVar1 = FUN_0010c220(param_3,&local_38);\n  }\n  else {\n    uVar1 = FUN_0010c200();\n  }\n  if ((int)uVar1 < 0) {\n    uVar2 = FUN_0010b100(4,param_3);\n    uVar3 = dcgettext(0,\"failed to get security context of %s\",5);\n    piVar4 = __errno_location();\n    error(0,*piVar4,uVar3,uVar2);\n    local_38 = (undefined *)0x0;\n    puVar5 = &DAT_0011130c;\n    *(undefined2 *)(param_1 + param_2) = 0x73;\n  }\n  else {\n    *(undefined2 *)(param_1 + param_2) = 0x73;\n    puVar5 = local_38;\n    if (local_38 == (undefined *)0x0) {\n      puVar5 = &DAT_0011130c;\n    }\n  }\n  __printf_chk(1,param_1,puVar5);\n  if (local_38 != (undefined *)0x0) {\n    freecon();\n  }\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar1 >> 0x1f;\n}\n\n", 
    "00109200": "\nundefined8 FUN_00109200(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001091e0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00118030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b020": "\nvoid FUN_0010b020(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010b000(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010d560": "\nchar * FUN_0010d560(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00118150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106d80": "\nvoid FUN_00106d80(void)\n\n{\n  FUN_00106600(1);\n  return;\n}\n\n", 
    "00105b70": "\nundefined  [16] FUN_00105b70(void)\n\n{\n  return CONCAT88(0xffffffffffffffff,0xffffffffffffffff);\n}\n\n", 
    "00118270": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d320": "\nbool FUN_0010d320(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00103bb0": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00116f88)();\n  return;\n}\n\n", 
    "00118118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * gmtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bb20": "\nvoid * FUN_0010bb20(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010bce0();\n  }\n  return pvVar1;\n}\n\n", 
    "00118128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b350": "\nvoid FUN_0010b350(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0010b340(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00118120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint gnu_dev_major(ulonglong __dev)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106c90": "\nchar * FUN_00106c90(char *param_1,ulong param_2)\n\n{\n  char *__buf;\n  ulong uVar1;\n  int *piVar2;\n  size_t __size;\n  \n  __size = param_2 + 1;\n  if (0x400 < param_2) {\n    __size = 0x401;\n  }\n  do {\n    __buf = (char *)malloc(__size);\n    while( true ) {\n      if (__buf == (char *)0x0) {\n        return (char *)0x0;\n      }\n      uVar1 = readlink(param_1,__buf,__size);\n      if (((long)uVar1 < 0) && (piVar2 = __errno_location(), *piVar2 != 0x22)) {\n        free(__buf);\n        return (char *)0x0;\n      }\n      if (uVar1 < __size) {\n        __buf[uVar1] = '\\0';\n        return __buf;\n      }\n      free(__buf);\n      if (0x3fffffffffffffff < __size) break;\n      __size = __size * 2;\n      __buf = (char *)malloc(__size);\n    }\n    if (0x7ffffffffffffffe < __size) {\n      piVar2 = __errno_location();\n      *piVar2 = 0xc;\n      return (char *)0x0;\n    }\n    __size = 0x7fffffffffffffff;\n  } while( true );\n}\n\n", 
    "0010c200": "\nuint FUN_0010c200(undefined8 param_1,byte **param_2)\n\n{\n  uint uVar1;\n  int *piVar2;\n  long lVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  uVar1 = getfilecon();\n  if (uVar1 == 0) {\n    piVar2 = __errno_location();\n    *piVar2 = 0x5f;\n    return 0xffffffff;\n  }\n  bVar6 = uVar1 < 10;\n  bVar7 = uVar1 == 10;\n  if (bVar7) {\n    lVar3 = 10;\n    pbVar4 = *param_2;\n    pbVar5 = (byte *)\"unlabeled\";\n    do {\n      if (lVar3 == 0) break;\n      lVar3 = lVar3 + -1;\n      bVar6 = *pbVar4 < *pbVar5;\n      bVar7 = *pbVar4 == *pbVar5;\n      pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n      pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n    } while (bVar7);\n    if ((!bVar6 && !bVar7) == bVar6) {\n      freecon(*param_2);\n      *param_2 = (byte *)0x0;\n      piVar2 = __errno_location();\n      *piVar2 = 0x3d;\n      return 0xffffffff;\n    }\n  }\n  return uVar1;\n}\n\n", 
    "0010b110": "\nvoid FUN_0010b110(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0010b090(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00103ba0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00116f80)();\n  return sVar1;\n}\n\n", 
    "0010bc50": "\nvoid FUN_0010bc50(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010bce0();\n}\n\n", 
    "00107130": "\nvoid FUN_00107130(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0010d420(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_001171a8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_001171b0 == 0) {\n        error(0,*piVar2,&DAT_0011183a,uVar3);\n      }\n      else {\n        uVar4 = FUN_0010b1e0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_001071b8;\n    }\n  }\n  iVar1 = FUN_0010d420(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_001071b8:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00117028);\n}\n\n", 
    "0010be90": "\nundefined8 FUN_0010be90(int *param_1,char *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  \n  iVar1 = openat(*param_1,param_2,0x10900);\n  if (iVar1 < 0) {\n    uVar2 = 0xffffffff;\n  }\n  else {\n    FUN_0010be50(*param_1);\n    *param_1 = iVar1;\n    uVar2 = 0;\n  }\n  return uVar2;\n}\n\n", 
    "00118008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010cc20": "\nuint FUN_0010cc20(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 == 0) != (param_2 == 0)) {\n    uVar1 = (~param_1 & ~param_2) >> 0x1f;\n  }\n  return uVar1;\n}\n\n", 
    "00118258": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001044c0": "\nchar * FUN_001044c0(long *param_1)\n\n{\n  long lVar1;\n  char *pcVar2;\n  \n  lVar1 = *param_1;\n  if (lVar1 == 0x2bad1dea) {\n    return \"inotifyfs\";\n  }\n  if (lVar1 < 0x2bad1deb) {\n    if (lVar1 == 0xadff) {\n      return \"affs\";\n    }\n    if (lVar1 < 0xae00) {\n      pcVar2 = \"hfs+\";\n      if (lVar1 != 0x482b) {\n        if (lVar1 < 0x482c) {\n          pcVar2 = \"devpts\";\n          if (lVar1 != 0x1cd1) {\n            if (lVar1 < 0x1cd2) {\n              pcVar2 = \"devfs\";\n              if (lVar1 != 0x1373) {\n                if (lVar1 < 0x1374) {\n                  if (lVar1 == 0x187) {\n                    return \"autofs\";\n                  }\n                  if (lVar1 == 0x7c0) {\n                    return \"jffs\";\n                  }\n                  if (lVar1 == 0x2f) {\n                    return \"qnx4\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x137f) {\n                    return \"minix\";\n                  }\n                  if (lVar1 == 0x138f) {\n                    return \"minix (30 char.)\";\n                  }\n                  if (lVar1 == 0x137d) {\n                    return \"ext\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"isofs\";\n              if (lVar1 != 0x4000) {\n                if (lVar1 < 0x4001) {\n                  if (lVar1 == 0x2478) {\n                    return \"minix v2 (30 char.)\";\n                  }\n                  if (lVar1 == 0x3434) {\n                    return \"nilfs\";\n                  }\n                  if (lVar1 == 0x2468) {\n                    return \"minix v2\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x4006) {\n                    return \"fat\";\n                  }\n                  if (lVar1 == 0x4244) {\n                    return \"hfs\";\n                  }\n                  if (lVar1 == 0x4004) {\n                    return \"isofs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n        else {\n          pcVar2 = \"romfs\";\n          if (lVar1 != 0x7275) {\n            if (lVar1 < 0x7276) {\n              pcVar2 = \"smb\";\n              if (lVar1 != 0x517b) {\n                if (lVar1 < 0x517c) {\n                  if (lVar1 == 0x4d44) {\n                    return \"msdos\";\n                  }\n                  if (lVar1 == 0x4d5a) {\n                    return \"minix3\";\n                  }\n                  if (lVar1 == 0x4858) {\n                    return \"hfsx\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x5df5) {\n                    return \"exofs\";\n                  }\n                  if (lVar1 == 0x6969) {\n                    return \"nfs\";\n                  }\n                  if (lVar1 == 0x564c) {\n                    return \"novell\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"openprom\";\n              if (lVar1 != 0x9fa1) {\n                if (lVar1 < 0x9fa2) {\n                  if (lVar1 == 0x9660) {\n                    return \"isofs\";\n                  }\n                  if (lVar1 == 0x9fa0) {\n                    return \"proc\";\n                  }\n                  if (lVar1 == 0x72b6) {\n                    return \"jffs2\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x9fa2) {\n                    return \"usbdevfs\";\n                  }\n                  if (lVar1 == 0xadf5) {\n                    return \"adfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n      }\n    }\n    else {\n      pcVar2 = \"sysv2\";\n      if (lVar1 != 0x12ff7b6) {\n        if (lVar1 < 0x12ff7b7) {\n          pcVar2 = \"ceph\";\n          if (lVar1 != 0xc36400) {\n            if (lVar1 < 0xc36401) {\n              pcVar2 = \"ufs\";\n              if (lVar1 != 0x11954) {\n                if (lVar1 < 0x11955) {\n                  if (lVar1 == 0xef53) {\n                    return \"ext2/ext3\";\n                  }\n                  if (lVar1 == 0xf15f) {\n                    return \"ecryptfs\";\n                  }\n                  if (lVar1 == 0xef51) {\n                    return \"ext2\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x414a53) {\n                    return \"efs\";\n                  }\n                  if (lVar1 == 0xc0ffee) {\n                    return \"hostfs\";\n                  }\n                  if (lVar1 == 0x27e0eb) {\n                    return \"cgroupfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"xia\";\n              if (lVar1 != 0x12fd16d) {\n                if (lVar1 < 0x12fd16e) {\n                  if (lVar1 == 0x1021997) {\n                    return \"v9fs\";\n                  }\n                  if (lVar1 == 0x1161970) {\n                    return \"gfs/gfs2\";\n                  }\n                  if (lVar1 == 0x1021994) {\n                    return \"tmpfs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x12ff7b4) {\n                    return \"xenix\";\n                  }\n                  if (lVar1 == 0x12ff7b5) {\n                    return \"sysv4\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n        else {\n          pcVar2 = \"balloon-kvm-fs\";\n          if (lVar1 != 0x13661366) {\n            if (lVar1 < 0x13661367) {\n              pcVar2 = \"anon-inode FS\";\n              if (lVar1 != 0x9041934) {\n                if (lVar1 < 0x9041935) {\n                  if (lVar1 == 0x13111a8) {\n                    return \"ibrix\";\n                  }\n                  if (lVar1 == 0x7655821) {\n                    return \"rdt\";\n                  }\n                  if (lVar1 == 0x12ff7b7) {\n                    return \"coh\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0xbd00bd0) {\n                    return \"lustre\";\n                  }\n                  if (lVar1 == 0x11307854) {\n                    return \"inodefs\";\n                  }\n                  if (lVar1 == 0xbad1dea) {\n                    return \"futexfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"bfs\";\n              if (lVar1 != 0x1badface) {\n                if (lVar1 < 0x1badfacf) {\n                  if (lVar1 == 0x19800202) {\n                    return \"mqueue\";\n                  }\n                  if (lVar1 == 0x19830326) {\n                    return \"fhgfs\";\n                  }\n                  if (lVar1 == 0x15013346) {\n                    return \"udf\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x24051905) {\n                    return \"ubifs\";\n                  }\n                  if (lVar1 == 0x28cd3d45) {\n                    return \"cramfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  else {\n    if (lVar1 == 0x65735546) {\n      return \"fuseblk\";\n    }\n    if (lVar1 < 0x65735547) {\n      pcVar2 = \"ufs\";\n      if (lVar1 != 0x54190100) {\n        if (lVar1 < 0x54190101) {\n          pcVar2 = \"gpfs\";\n          if (lVar1 != 0x47504653) {\n            if (lVar1 < 0x47504654) {\n              pcVar2 = \"binfmt_misc\";\n              if (lVar1 != 0x42494e4d) {\n                if (lVar1 < 0x42494e4e) {\n                  if (lVar1 == 0x3153464a) {\n                    return \"jfs\";\n                  }\n                  if (lVar1 == 0x42465331) {\n                    return \"befs\";\n                  }\n                  if (lVar1 == 0x2fc12fc1) {\n                    return \"zfs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x453dcd28) {\n                    return \"cramfs-wend\";\n                  }\n                  if (lVar1 == 0x45584653) {\n                    return \"exfs\";\n                  }\n                  if (lVar1 == 0x43415d53) {\n                    return \"smackfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"afs\";\n              if (lVar1 != 0x5346414f) {\n                if (lVar1 < 0x53464150) {\n                  if (lVar1 == 0x52654973) {\n                    return \"reiserfs\";\n                  }\n                  if (lVar1 == 0x5346314d) {\n                    return \"m1fs\";\n                  }\n                  if (lVar1 == 0x50495045) {\n                    return \"pipefs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x5346544e) {\n                    return \"ntfs\";\n                  }\n                  if (lVar1 == 0x534f434b) {\n                    return \"sockfs\";\n                  }\n                  if (lVar1 == 0x53464846) {\n                    return \"wslfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n        else {\n          pcVar2 = \"bdevfs\";\n          if (lVar1 != 0x62646576) {\n            if (lVar1 < 0x62646577) {\n              pcVar2 = \"aafs\";\n              if (lVar1 != 0x5a3c69f0) {\n                if (lVar1 < 0x5a3c69f1) {\n                  if (lVar1 == 0x58295829) {\n                    return \"zsmallocfs\";\n                  }\n                  if (lVar1 == 0x58465342) {\n                    return \"xfs\";\n                  }\n                  if (lVar1 == 0x565a4653) {\n                    return \"vzfs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x6165676c) {\n                    return \"pstorefs\";\n                  }\n                  if (lVar1 == 0x61756673) {\n                    return \"aufs\";\n                  }\n                  if (lVar1 == 0x61636673) {\n                    return \"acfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"debugfs\";\n              if (lVar1 != 0x64626720) {\n                if (lVar1 < 0x64626721) {\n                  if (lVar1 == 0x62656572) {\n                    return \"sysfs\";\n                  }\n                  if (lVar1 == 0x63677270) {\n                    return \"cgroup2fs\";\n                  }\n                  if (lVar1 == 0x62656570) {\n                    return \"configfs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x64646178) {\n                    return \"daxfs\";\n                  }\n                  if (lVar1 == 0x65735543) {\n                    return \"fusectl\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n      }\n    }\n    else {\n      pcVar2 = \"btrfs\";\n      if (lVar1 != 0x9123683e) {\n        if (lVar1 < 0x9123683f) {\n          pcVar2 = \"btrfs_test\";\n          if (lVar1 != 0x73727279) {\n            if (lVar1 < 0x7372727a) {\n              pcVar2 = \"nfsd\";\n              if (lVar1 != 0x6e667364) {\n                if (lVar1 < 0x6e667365) {\n                  if (lVar1 == 0x68191122) {\n                    return \"qnx6\";\n                  }\n                  if (lVar1 == 0x6b414653) {\n                    return \"k-afs\";\n                  }\n                  if (lVar1 == 0x67596969) {\n                    return \"rpc_pipefs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x73636673) {\n                    return \"securityfs\";\n                  }\n                  if (lVar1 == 0x73717368) {\n                    return \"squashfs\";\n                  }\n                  if (lVar1 == 0x6e736673) {\n                    return \"nsfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"overlayfs\";\n              if (lVar1 != 0x794c7630) {\n                if (lVar1 < 0x794c7631) {\n                  if (lVar1 == 0x7461636f) {\n                    return \"ocfs2\";\n                  }\n                  if (lVar1 == 0x74726163) {\n                    return \"tracefs\";\n                  }\n                  if (lVar1 == 0x73757245) {\n                    return \"coda\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0x7c7c6673) {\n                    return \"prl_fs\";\n                  }\n                  if (lVar1 == 0x858458f6) {\n                    return \"ramfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n          }\n        }\n        else {\n          pcVar2 = \"bpf_fs\";\n          if (lVar1 != 0xcafe4a11) {\n            if (lVar1 < 0xcafe4a12) {\n              pcVar2 = \"xenfs\";\n              if (lVar1 != 0xabba1974) {\n                if (lVar1 < 0xabba1975) {\n                  if (lVar1 == 0xa501fcf5) {\n                    return \"vxfs\";\n                  }\n                  if (lVar1 == 0xaad7aaea) {\n                    return \"panfs\";\n                  }\n                  if (lVar1 == 0x958458f6) {\n                    return \"hugetlbfs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0xbeefdead) {\n                    return \"snfs\";\n                  }\n                  if (lVar1 == 0xc97e8168) {\n                    return \"logfs\";\n                  }\n                  if (lVar1 == 0xbacbacbc) {\n                    return \"vmhgfs\";\n                  }\n                }\n                goto LAB_00104ee0;\n              }\n            }\n            else {\n              pcVar2 = \"hpfs\";\n              if (lVar1 != 0xf995e849) {\n                if (lVar1 < 0xf995e84a) {\n                  if (lVar1 == 0xf2f52010) {\n                    return \"f2fs\";\n                  }\n                  if (lVar1 == 0xf97cff8c) {\n                    return \"selinux\";\n                  }\n                  if (lVar1 == 0xde5e81e4) {\n                    return \"efivarfs\";\n                  }\n                }\n                else {\n                  if (lVar1 == 0xfe534d42) {\n                    return \"smb2\";\n                  }\n                  if (lVar1 == 0xff534d42) {\n                    return \"cifs\";\n                  }\n                }\nLAB_00104ee0:\n                __sprintf_chk(&DAT_00117170,1,0x1d,\"UNKNOWN (0x%lx)\");\n                return &DAT_00117170;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00118018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118250": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b480": "\nundefined8\nFUN_0010b480(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0011225b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010b749;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0010b749:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010b7eb;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010b7eb:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010b59d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010b59d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00118130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105b90": "\nulong FUN_00105b90(char *param_1,size_t param_2,long param_3,long param_4)\n\n{\n  bool bVar1;\n  int iVar2;\n  int iVar3;\n  char *pcVar4;\n  long lVar5;\n  char *pcVar6;\n  ulong uVar7;\n  int iVar8;\n  long lVar9;\n  char *pcVar10;\n  int iVar11;\n  int iVar12;\n  long lVar13;\n  int iVar14;\n  \n  pcVar4 = (char *)memchr(param_1,0x2e,param_2);\n  if (pcVar4 == (char *)0x0) {\n    iVar11 = 0;\n    iVar2 = 0;\nLAB_00105d33:\n    iVar12 = 1;\n    iVar8 = iVar2;\n    do {\n      iVar8 = iVar8 + 1;\n      iVar12 = iVar12 * 10;\n    } while (iVar8 != 9);\n    lVar9 = (long)iVar12;\n    lVar13 = param_4 / lVar9;\n  }\n  else {\n    param_1[param_2] = '\\0';\n    param_2 = (long)pcVar4 - (long)param_1;\n    lVar13 = param_4;\n    if ((int)pcVar4[1] - 0x30U < 10) {\n      lVar9 = strtol(pcVar4 + 1,(char **)0x0,10);\n      if (0x7fffffff < lVar9) {\n        lVar9 = 0x7fffffff;\n      }\n      iVar2 = (int)lVar9;\n      if (iVar2 != 0) {\n        if ((int)pcVar4[-1] - 0x30U < 10) goto LAB_00105c00;\n        iVar11 = 0;\n        goto LAB_00105d29;\n      }\n      iVar11 = 0;\n      goto LAB_00105d33;\n    }\n    iVar2 = 9;\n    if ((int)pcVar4[-1] - 0x30U < 10) {\nLAB_00105c00:\n      *pcVar4 = '\\0';\n      do {\n        pcVar10 = pcVar4 + -2;\n        pcVar4 = pcVar4 + -1;\n      } while ((int)*pcVar10 - 0x30U < 10);\n      lVar5 = strtol(pcVar4,(char **)0x0,10);\n      lVar9 = 0x7fffffff;\n      if (lVar5 < 0x80000000) {\n        lVar9 = lVar5;\n      }\n      iVar11 = (int)lVar9;\n      if (1 < iVar11) {\n        pcVar4 = pcVar4 + (*pcVar4 == '0');\n        param_2 = (long)pcVar4 - (long)param_1;\n        if (((DAT_00117190 < (ulong)(long)iVar11) &&\n            (iVar12 = iVar11 - (int)DAT_00117190, 1 < iVar12)) && (1 < iVar12 - iVar2)) {\n          pcVar10 = param_1;\n          if (param_1 < pcVar4) {\n            bVar1 = false;\n            pcVar6 = param_1;\n            do {\n              if (*pcVar6 == '-') {\n                bVar1 = true;\n              }\n              else {\n                *pcVar10 = *pcVar6;\n                pcVar10 = pcVar10 + 1;\n              }\n              pcVar6 = pcVar6 + 1;\n            } while (pcVar4 != pcVar6);\n            param_2 = (long)pcVar10 - (long)param_1;\n            if (bVar1) goto LAB_00105d29;\n          }\n          else {\n            param_2 = 0;\n          }\n          iVar12 = __sprintf_chk(pcVar10,1,0xffffffffffffffff,&DAT_001118dd);\n          param_2 = param_2 + (long)iVar12;\n        }\n      }\nLAB_00105d29:\n      if (iVar2 < 9) goto LAB_00105d33;\n      lVar9 = 1;\n      iVar12 = 1;\n    }\n    else {\n      lVar9 = 1;\n      iVar11 = 0;\n      iVar12 = 1;\n    }\n  }\n  iVar8 = (int)lVar13;\n  if ((param_3 < 0) && (param_4 != 0)) {\n    iVar8 = ((int)(1000000000 / (long)iVar12) - iVar8) - (uint)(param_4 % lVar9 != 0);\n    param_3 = (ulong)(iVar8 != 0) + param_3;\n    if (param_3 == 0) {\n      uVar7 = FUN_00104480(param_1,param_2);\n      goto LAB_00105d7f;\n    }\n  }\n  uVar7 = FUN_00104400(param_1,param_2,param_3);\nLAB_00105d7f:\n  if (iVar2 != 0) {\n    iVar12 = 9;\n    if (iVar2 < 10) {\n      iVar12 = iVar2;\n    }\n    iVar3 = (int)uVar7;\n    if (iVar3 < 0) {\n      iVar3 = 0;\n    }\n    iVar14 = 0;\n    if ((iVar3 < iVar11) && (DAT_00117190 < (ulong)(long)(iVar11 - iVar3))) {\n      iVar14 = (iVar11 - iVar3) - (iVar12 + (int)DAT_00117190);\n    }\n    uVar7 = (ulong)(uint)(iVar2 - iVar12);\n    __printf_chk(1,\"%s%.*d%-*.*d\",DAT_00117198,iVar12,iVar8,iVar14,(ulong)(uint)(iVar2 - iVar12),0);\n  }\n  return uVar7;\n}\n\n", 
    "0010d420": "\nulong FUN_0010d420(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010d810(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010b000": "\nvoid FUN_0010b000(void)\n\n{\n  FUN_0010ab00();\n  return;\n}\n\n", 
    "00107200": "\nvoid FUN_00107200(char *param_1)\n\n{\n  char cVar1;\n  long lVar2;\n  ulong uVar3;\n  \n  cVar1 = *param_1;\n  lVar2 = FUN_001072b0();\n  uVar3 = lVar2 - (long)param_1;\n  do {\n    if (uVar3 <= (cVar1 == '/')) {\n      return;\n    }\n    lVar2 = uVar3 - 1;\n    uVar3 = uVar3 - 1;\n  } while (param_1[lVar2] == '/');\n  return;\n}\n\n", 
    "00118218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __isoc99_sscanf(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bc20": "\nvoid FUN_0010bc20(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010bb90(param_1,param_2,1);\n  return;\n}\n\n", 
    "0010cf50": "\nlong FUN_0010cf50(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s2;\n  long lVar3;\n  int *piVar4;\n  long lVar5;\n  \n  __s2 = (char *)FUN_0010cca0();\n  if (__s2 == (char *)0x0) {\n    if (*(char *)(param_1 + 8) == '\\0') {\n      return 1;\n    }\n  }\n  else if (*(char *)(param_1 + 8) != '\\0') {\n    iVar2 = strcmp((char *)(param_1 + 9),__s2);\n    if (iVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar3 = FUN_0010cd20(__s2);\n  lVar5 = lVar3;\n  if (lVar3 != 0) {\n    cVar1 = FUN_0010cce0(param_1);\n    if (cVar1 == '\\0') {\n      piVar4 = __errno_location();\n      lVar5 = 0;\n      iVar2 = *piVar4;\n      FUN_0010cf10(lVar3);\n      *piVar4 = iVar2;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "001036e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00116d20)();\n  return;\n}\n\n", 
    "00118100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrgid(__gid_t __gid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a80": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fchdir_00116ef0)();\n  return iVar1;\n}\n\n", 
    "0010d510": "\nbool FUN_0010d510(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00107310": "\nvoid FUN_00107310(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00107430": "\nundefined8 FUN_00107430(uint param_1)\n\n{\n  undefined8 uVar1;\n  \n  param_1 = param_1 & 0xf000;\n  uVar1 = 0x2d;\n  if ((((param_1 != 0x8000) && (uVar1 = 100, param_1 != 0x4000)) &&\n      (uVar1 = 0x62, param_1 != 0x6000)) &&\n     (((uVar1 = 99, param_1 != 0x2000 && (uVar1 = 0x6c, param_1 != 0xa000)) &&\n      ((uVar1 = 0x70, param_1 != 0x1000 && (uVar1 = 0x3f, param_1 == 0xc000)))))) {\n    uVar1 = 0x73;\n  }\n  return uVar1;\n}\n\n", 
    "00104280": "\nvoid FUN_00104280(long param_1,long param_2,char *param_3,char *param_4)\n\n{\n  char *pcVar1;\n  char cVar2;\n  char *pcVar3;\n  long lVar4;\n  char *pcVar5;\n  char *__dest;\n  uint __c;\n  \n  pcVar1 = (char *)(param_1 + param_2);\n  pcVar5 = (char *)(param_1 + 1);\n  __dest = pcVar5;\n  do {\n    if (pcVar1 <= pcVar5) {\nLAB_0010431e:\n      strcpy(__dest,param_4);\n      return;\n    }\n    cVar2 = *pcVar5;\n    __c = (uint)cVar2;\n    pcVar3 = strchr(\"\\'-+ #0I\",__c);\n    if (pcVar3 == (char *)0x0) {\n      if (pcVar5 < pcVar1) {\n        lVar4 = 0;\n        while( true ) {\n          __dest[lVar4] = (char)__c;\n          lVar4 = lVar4 + 1;\n          if ((long)pcVar1 - (long)pcVar5 == lVar4) break;\n          __c = (uint)(byte)pcVar5[lVar4];\n        }\n        __dest = __dest + ((long)pcVar1 - (long)pcVar5);\n      }\n      goto LAB_0010431e;\n    }\n    pcVar3 = strchr(param_3,__c);\n    if (pcVar3 != (char *)0x0) {\n      *__dest = cVar2;\n      __dest = __dest + 1;\n    }\n    pcVar5 = pcVar5 + 1;\n  } while( true );\n}\n\n", 
    "00107670": "\nint FUN_00107670(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = (param_1 - param_2) + 0x17e;\n  return (param_1 - iVar1) + 3 + (iVar1 / 7) * 7;\n}\n\n", 
    "0010ad80": "\nvoid FUN_0010ad80(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_001172c0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00118108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bb10": "\nvoid thunk_FUN_0010bac0(void)\n\n{\n  FUN_0010bac0();\n  return;\n}\n\n", 
    "0010cd20": "\nundefined8 * FUN_0010cd20(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  undefined8 *puVar3;\n  ulong uVar4;\n  \n  if (param_1 == (char *)0x0) {\n    puVar3 = (undefined8 *)malloc(0x80);\n    if (puVar3 != (undefined8 *)0x0) {\n      *puVar3 = 0;\n      *(undefined2 *)(puVar3 + 1) = 0;\n      return puVar3;\n    }\n  }\n  else {\n    sVar2 = strlen(param_1);\n    uVar1 = sVar2 + 1;\n    uVar4 = 0x76;\n    if (0x75 < uVar1) {\n      uVar4 = uVar1;\n    }\n    puVar3 = (undefined8 *)malloc(uVar4 + 0x11 & 0xfffffffffffffff8);\n    if (puVar3 != (undefined8 *)0x0) {\n      *puVar3 = 0;\n      *(undefined2 *)(puVar3 + 1) = 1;\n      FUN_0010cc90((long)puVar3 + 9,param_1,uVar1);\n    }\n  }\n  return puVar3;\n}\n\n", 
    "00118228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t mktime(tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bc30": "\nvoid FUN_0010bc30(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_0010bac0();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010bd50": "\nvoid FUN_0010bd50(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  long local_c0;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_d0 = &stack0x00000008;\n  local_d8 = 8;\n  local_c8 = local_b8;\n  local_d4 = 0x30;\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  FUN_0010d760(param_9,&local_d8);\n  if (local_c0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001037f0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00116da8)();\n  return;\n}\n\n", 
    "0010fbf0": "\nvoid FUN_0010fbf0(int param_1,stat *param_2)\n\n{\n  __fxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00118238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fchdir(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001036d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_localtime_r_00116d18)();\n  return ptVar1;\n}\n\n", 
    "00118110": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid fgetfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109760": "\nundefined8\nFUN_00109760(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00109670(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00103a70": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00116ee8)();\n  return;\n}\n\n", 
    "0010b460": "\nvoid FUN_0010b460(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    close(*param_1);\n  }\n  free(*(void **)(param_1 + 2));\n  return;\n}\n\n", 
    "00118230": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103b90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00116f78)();\n  return;\n}\n\n", 
    "0010b100": "\nvoid FUN_0010b100(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_0010b030(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010b340": "\nvoid FUN_0010b340(void)\n\n{\n  FUN_0010b2a0();\n  return;\n}\n\n", 
    "00103fb0": "\nvoid FUN_00103fb0(void)\n\n{\n  if (DAT_001170e8 == '\\0') {\n    if (PTR___cxa_finalize_00116ff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00117008);\n    }\n    FUN_00103f40();\n    DAT_001170e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "0010d760": "\nundefined8 FUN_0010d760(char *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  long lVar4;\n  long in_FS_OFFSET;\n  undefined8 local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar1 = *param_1;\n  lVar4 = 0;\n  do {\n    if (cVar1 == '\\0') {\n      local_18 = FUN_0010d600(lVar4,param_2);\nLAB_0010d7c0:\n      if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return local_18;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if ((cVar1 != '%') || (param_1[lVar4 * 2 + 1] != 's')) {\n      iVar2 = FUN_0010d980(&local_18,param_1);\n      if (iVar2 < 0) {\n        piVar3 = __errno_location();\n        if (*piVar3 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n          FUN_0010bce0();\n        }\n        local_18 = 0;\n      }\n      goto LAB_0010d7c0;\n    }\n    lVar4 = lVar4 + 1;\n    cVar1 = param_1[lVar4 * 2];\n  } while( true );\n}\n\n", 
    "00103ff0": "\nvoid thunk_FUN_00103f70(void)\n\n{\n  FUN_00103f70();\n  return;\n}\n\n", 
    "00105040": "\nvoid FUN_00105040(char param_1)\n\n{\n  undefined8 uVar1;\n  int __c;\n  \n  if (param_1 == '\\\"') {\n    __c = 0x22;\n  }\n  else {\n    switch(param_1) {\n    case '\\\\':\n      putchar_unlocked(0x5c);\n      return;\n    default:\n      uVar1 = dcgettext(0,\"warning: unrecognized escape \\'\\\\%c\\'\",5);\n      error(0,0,uVar1,(int)param_1);\n      putchar_unlocked((int)param_1);\n      return;\n    case 'a':\n      __c = 7;\n      break;\n    case 'b':\n      putchar_unlocked(8);\n      return;\n    case 'e':\n      putchar_unlocked(0x1b);\n      return;\n    case 'f':\n      putchar_unlocked(0xc);\n      return;\n    case 'n':\n      putchar_unlocked(10);\n      return;\n    case 'r':\n      putchar_unlocked(0xd);\n      return;\n    case 't':\n      putchar_unlocked(9);\n      return;\n    case 'v':\n      putchar_unlocked(0xb);\n      return;\n    }\n  }\n  putchar_unlocked(__c);\n  return;\n}\n\n", 
    "00107340": "\nvoid FUN_00107340(long param_1)\n\n{\n  uint uVar1;\n  \n  uVar1 = *(uint *)(param_1 + 0x18) & 0xf000;\n  if (uVar1 == 0x8000) {\n    if (*(long *)(param_1 + 0x30) == 0) {\n      dcgettext(0,\"regular empty file\",5);\n      return;\n    }\n    dcgettext(0,\"regular file\",5);\n    return;\n  }\n  if (uVar1 == 0x4000) {\n    dcgettext(0,\"directory\",5);\n    return;\n  }\n  if (uVar1 == 0xa000) {\n    dcgettext(0,\"symbolic link\",5);\n    return;\n  }\n  if (uVar1 != 0x6000) {\n    if (uVar1 == 0x2000) {\n      dcgettext(0,\"character special file\",5);\n      return;\n    }\n    if (uVar1 != 0x1000) {\n      if (uVar1 != 0xc000) {\n        dcgettext(0,\"weird file\",5);\n        return;\n      }\n      dcgettext(0,\"socket\",5);\n      return;\n    }\n    dcgettext(0,&DAT_001118a8,5);\n    return;\n  }\n  dcgettext(0,\"block special file\",5);\n  return;\n}\n\n", 
    "0010bd20": "\nchar * FUN_0010bd20(void)\n\n{\n  char *pcVar1;\n  int *piVar2;\n  \n  pcVar1 = getcwd((char *)0x0,0);\n  if (pcVar1 == (char *)0x0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010bce0();\n    }\n  }\n  return pcVar1;\n}\n\n", 
    "0010be40": "\nvoid FUN_0010be40(void)\n\n{\n  (*(code *)PTR_fchdir_00116ef0)();\n  return;\n}\n\n", 
    "00118318": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010ab00": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_0010ab00(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00117080;\n  if (DAT_00117078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010bce0();\n    }\n    if (PTR_DAT_00117080 == &DAT_00117090) {\n      puVar8 = (undefined4 *)FUN_0010bb20(0);\n      uVar6 = PTR_DAT_00117098._4_4_;\n      uVar5 = PTR_DAT_00117098._0_4_;\n      uVar3 = _UNK_00117094;\n      PTR_DAT_00117080 = (undefined *)puVar8;\n      *puVar8 = _DAT_00117090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_0010bb20(PTR_DAT_00117080);\n      PTR_DAT_00117080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00117078 * 4,0,(long)((param_1 + 1) - DAT_00117078) << 4);\n    DAT_00117078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00109940(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_001171c0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_0010bac0(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00109940(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00118320": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00118200": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105b60": "\nundefined  [16] FUN_00105b60(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "0010b430": "\nvoid FUN_0010b430(int *param_1)\n\n{\n  if (-1 < *param_1) {\n    fchdir(*param_1);\n    return;\n  }\n  FUN_0010bed0(*(undefined8 *)(param_1 + 2));\n  return;\n}\n\n", 
    "00104060": "\nvoid FUN_00104060(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined4 uVar5;\n  undefined8 uStack_18;\n  \n  pcVar2 = getenv(\"QUOTING_STYLE\");\n  if (pcVar2 == (char *)0x0) {\n    uVar5 = 4;\n  }\n  else {\n    iVar1 = FUN_00106d90(pcVar2,&DAT_00116a60,&DAT_00112220,4);\n    if (iVar1 < 0) {\n      FUN_0010ad00(0,4);\n      uVar3 = FUN_0010b3c0(pcVar2);\n      uVar4 = dcgettext(0,\"ignoring invalid value of environment variable QUOTING_STYLE: %s\",5);\n      error(0,0,uVar4,uVar3,uStack_18);\n      return;\n    }\n    uVar5 = *(undefined4 *)(&DAT_00112220 + (long)iVar1 * 4);\n  }\n  FUN_0010ad00(0,uVar5);\n  return;\n}\n\n", 
    "00106360": "\nvoid FUN_00106360(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  long lVar4;\n  undefined **ppuVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  undefined1 *puVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar7 = (byte *)0x111401;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_00111387;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar5 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar7 == (byte *)0x0;\n    if (bVar10) break;\n    lVar4 = 5;\n    pbVar6 = &DAT_00111382;\n    do {\n      if (lVar4 == 0) break;\n      lVar4 = lVar4 + -1;\n      bVar9 = *pbVar6 < *pbVar7;\n      bVar10 = *pbVar6 == *pbVar7;\n      pbVar6 = pbVar6 + 1;\n      pbVar7 = pbVar7 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar7 = *(byte **)((long)ppuVar5 + 0x20);\n    ppuVar5 = (undefined **)((long)ppuVar5 + 0x10);\n  }\n  puVar8 = *(undefined1 **)((long)ppuVar5 + 0x18);\n  if (puVar8 == (undefined1 *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar8 = &DAT_00111382;\n        goto LAB_0010657e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar8 = &DAT_00111382;\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_00111382);\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010657e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,&DAT_00111382);\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_00111382);\n    if (puVar8 != &DAT_00111382) {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,puVar8,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010ad60": "\nundefined4 FUN_0010ad60(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_001172c0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "0010be50": "\nvoid FUN_0010be50(int param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 < 0) {\n    return;\n  }\n  iVar1 = close(param_1);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"! close_fail\",\"lib/chdir-long.c\",0x40,\"cdb_free\");\n}\n\n", 
    "00118208": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid setmntent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001036f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_00116d28)();\n  return pcVar1;\n}\n\n", 
    "0010fbd0": "\nvoid FUN_0010fbd0(char *param_1,stat *param_2)\n\n{\n  __xstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00118210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a90": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint gnu_dev_major(ulonglong __dev)\n\n{\n  uint uVar1;\n  \n  uVar1 = (*(code *)PTR_gnu_dev_major_00116ef8)();\n  return uVar1;\n}\n\n", 
    "0010b200": "\nvoid FUN_0010b200(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00109190(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_0010ad20(puVar1,0x3a,1);\n  FUN_0010ab00(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d980": "\nulong FUN_0010d980(void **param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  void *__ptr;\n  int *piVar1;\n  long in_FS_OFFSET;\n  ulong local_18;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  __ptr = (void *)FUN_0010dc10(0,&local_18,param_2,param_3);\n  if (__ptr == (void *)0x0) {\n    local_18 = 0xffffffff;\n  }\n  else if (local_18 < 0x80000000) {\n    *param_1 = __ptr;\n    local_18 = local_18 & 0xffffffff;\n  }\n  else {\n    free(__ptr);\n    piVar1 = __errno_location();\n    *piVar1 = 0x4b;\n    local_18 = 0xffffffff;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return local_18;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001090d0": "\nvoid FUN_001090d0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  uint *puVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(&UINT_00111ad0,1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_001171b8 = pcVar1 + 1;\n    uVar3 = (long)DAT_001171b8 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      puVar5 = &UINT_00111b08;\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *(byte *)puVar5;\n        bVar7 = *pbVar4 == *(byte *)puVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        puVar5 = (uint *)((long)puVar5 + (ulong)bVar8 * -2 + 1);\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_001171b8;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_001171b8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00104010": "\nundefined  [16] FUN_00104010(long param_1,long param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = lVar2;\n  if (-1 < param_2) {\n    lVar2 = param_2;\n    lVar1 = param_1;\n  }\n  return CONCAT88(lVar2,lVar1);\n}\n\n", 
    "001036a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00116d00)();\n  return;\n}\n\n", 
    "001037c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_00116d90)();\n  return iVar1;\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_00116e20)();\n  return pvVar1;\n}\n\n", 
    "0010ad20": "\nuint FUN_0010ad20(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_001172c0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "0010be10": "\nchar * FUN_0010be10(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strspn(param_1,(char *)((long)&UINT_00111b0c + 2));\n  return param_1 + sVar1;\n}\n\n", 
    "00103b60": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00116f60)();\n  return;\n}\n\n", 
    "00118300": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a40": "\nvoid __isoc99_sscanf(void)\n\n{\n  (*(code *)PTR___isoc99_sscanf_00116ed0)();\n  return;\n}\n\n", 
    "0010fba0": "\nvoid FUN_0010fba0(void)\n\n{\n  return;\n}\n\n", 
    "0010d600": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined * FUN_0010d600(long param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  long lVar2;\n  ulong uVar3;\n  char *__s;\n  size_t sVar4;\n  ulong uVar5;\n  ulong uVar6;\n  undefined *puVar7;\n  int *piVar8;\n  char **ppcVar9;\n  long lVar10;\n  undefined *__dest;\n  long in_FS_OFFSET;\n  ulong local_58;\n  char **ppcStack_50;\n  \n  lVar2 = *(long *)(in_FS_OFFSET + 0x28);\n  local_58 = *param_2;\n  ppcStack_50 = (char **)param_2[1];\n  uVar3 = param_2[2];\n  if (param_1 == 0) {\n    __dest = (undefined *)FUN_0010bac0(1);\n    puVar7 = __dest;\n  }\n  else {\n    uVar5 = 0;\n    lVar10 = param_1;\n    do {\n      uVar6 = local_58 & 0xffffffff;\n      if ((uint)local_58 < 0x30) {\n        local_58 = (ulong)((uint)local_58 + 8);\n        ppcVar9 = (char **)(uVar6 + uVar3);\n      }\n      else {\n        ppcVar9 = ppcStack_50;\n        ppcStack_50 = ppcStack_50 + 1;\n      }\n      sVar4 = strlen(*ppcVar9);\n      uVar5 = FUN_0010da30(uVar5,sVar4);\n      lVar10 = lVar10 + -1;\n    } while (lVar10 != 0);\n    if (0x7fffffff < uVar5) {\n      piVar8 = __errno_location();\n      puVar7 = (undefined *)0x0;\n      *piVar8 = 0x4b;\n      goto LAB_0010d714;\n    }\n    puVar7 = (undefined *)FUN_0010bac0(uVar5 + 1);\n    __dest = puVar7;\n    do {\n      uVar1 = *(uint *)param_2;\n      if (uVar1 < 0x30) {\n        ppcVar9 = (char **)((ulong)uVar1 + param_2[2]);\n        *(uint *)param_2 = uVar1 + 8;\n      }\n      else {\n        ppcVar9 = (char **)param_2[1];\n        param_2[1] = (ulong)(ppcVar9 + 1);\n      }\n      __s = *ppcVar9;\n      sVar4 = strlen(__s);\n      memcpy(__dest,__s,sVar4);\n      __dest = __dest + sVar4;\n      param_1 = param_1 + -1;\n    } while (param_1 != 0);\n  }\n  *__dest = 0;\nLAB_0010d714:\n  if (lVar2 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return puVar7;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107750": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nlong FUN_00107750(char *param_1,long param_2,char *param_3,tm *param_4,char param_5,\n                 undefined8 param_6,undefined8 param_7,uint param_8)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  bool bVar3;\n  int iVar4;\n  char *pcVar5;\n  ulong uVar6;\n  char *pcVar7;\n  long lVar8;\n  int iVar9;\n  uint uVar10;\n  uint uVar11;\n  ulong uVar12;\n  size_t sVar13;\n  char *pcVar14;\n  size_t __n;\n  char *pcVar15;\n  long lVar16;\n  char cVar17;\n  uint uVar18;\n  int iVar19;\n  long lVar20;\n  char cVar21;\n  int iVar22;\n  ulong __n_00;\n  char *pcVar23;\n  int iVar24;\n  uint uVar25;\n  uint uVar26;\n  char cVar27;\n  uint uVar28;\n  uint uVar29;\n  int iVar30;\n  char cVar31;\n  char *__s;\n  ulong uVar32;\n  long in_FS_OFFSET;\n  char *local_4c8;\n  undefined8 local_488;\n  undefined8 uStack_480;\n  undefined8 local_478;\n  undefined8 uStack_470;\n  undefined8 local_468;\n  long lStack_460;\n  char *local_458;\n  undefined2 local_44d;\n  char local_44b;\n  char local_44a [2];\n  char local_448;\n  undefined local_447 [21];\n  char local_432 [1010];\n  long local_40;\n  \n  __s = param_4->tm_zone;\n  uVar28 = param_4->tm_hour;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__s == (char *)0x0) {\n    __s = \"\";\n  }\n  if ((int)uVar28 < 0xd) {\n    if (uVar28 == 0) {\n      uVar28 = 0xc;\n    }\n  }\n  else {\n    uVar28 = uVar28 - 0xc;\n  }\n  cVar27 = *param_3;\n  lVar16 = 0;\n  do {\n    if (cVar27 == '\\0') {\n      if ((param_1 != (char *)0x0) && (param_2 != 0)) {\n        *param_1 = '\\0';\n      }\nLAB_00107833:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return lVar16;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (cVar27 != '%') {\n      if ((ulong)(param_2 - lVar16) < 2) goto LAB_00107830;\n      if (param_1 != (char *)0x0) {\n        *param_1 = cVar27;\n        param_1 = param_1 + 1;\n      }\n      lVar16 = lVar16 + 1;\n      goto LAB_00107804;\n    }\n    cVar17 = '\\0';\n    iVar30 = 0;\n    cVar27 = param_5;\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            cVar21 = param_3[1];\n            uVar26 = (uint)cVar21;\n            param_3 = param_3 + 1;\n            uVar32 = (ulong)uVar26;\n            if (cVar21 != '0') break;\n            iVar30 = 0x30;\n          }\n          if ('0' < cVar21) break;\n          if (cVar21 == '#') {\n            cVar17 = '\\x01';\n          }\n          else {\n            if (cVar21 != '-') {\n              uVar29 = 0xffffffff;\n              goto LAB_001078ee;\n            }\n            iVar30 = 0x2d;\n          }\n        }\n        if (cVar21 != '^') break;\n        cVar27 = '\\x01';\n      }\n      if (cVar21 != '_') break;\n      iVar30 = 0x5f;\n    }\n    if (uVar26 - 0x30 < 10) {\n      uVar29 = 0;\n      pcVar5 = param_3;\n      do {\n        uVar26 = (uint)pcVar5[1];\n        param_3 = pcVar5 + 1;\n        uVar32 = (ulong)uVar26;\n        uVar11 = uVar26 - 0x30;\n        if ((int)uVar29 < 0xccccccd) {\n          if ((uVar29 == 0xccccccc) && ('7' < *pcVar5)) goto LAB_00107a8d;\n          uVar29 = *pcVar5 + -0x30 + uVar29 * 10;\n        }\n        else {\nLAB_00107a8d:\n          if (9 < uVar11) {\n            uVar29 = 0x7fffffff;\n            break;\n          }\n          uVar26 = (uint)pcVar5[2];\n          uVar29 = 0x7fffffff;\n          param_3 = pcVar5 + 2;\n          uVar32 = (ulong)uVar26;\n          uVar11 = uVar26 - 0x30;\n        }\n        pcVar5 = param_3;\n      } while (uVar11 < 10);\n    }\n    else {\n      uVar29 = 0xffffffff;\n    }\n    if ((char)uVar32 != 'E') {\nLAB_001078ee:\n      if ((byte)uVar32 == 0x4f) goto LAB_00107926;\n      uVar26 = 0;\n      if ((byte)uVar32 < 0x7b) goto LAB_001078fd;\n      goto switchD_0010790f_caseD_1;\n    }\nLAB_00107926:\n    pbVar1 = (byte *)(param_3 + 1);\n    uVar32 = (ulong)*pbVar1;\n    param_3 = param_3 + 1;\n    if (0x7a < *pbVar1) goto switchD_0010790f_caseD_1;\nLAB_001078fd:\n    cVar21 = (char)uVar32;\n    uVar11 = uVar28;\n                    /* WARNING (jumptable): Sanity check requires truncation of jumptable */\n                    /* WARNING: Could not find normalized switch variable to match jumptable */\n    switch(uVar32 & 0xff) {\n    case 0:\n      cVar17 = param_3[-1];\n      param_3 = param_3 + -1;\nLAB_001086b2:\n      uVar12 = param_2 - lVar16;\n      uVar26 = 0;\n      if (-1 < (int)uVar29) {\n        uVar26 = uVar29;\n      }\n      uVar6 = (ulong)(int)uVar26;\n      if (cVar17 != '%') break;\n      __n_00 = 1;\n      pcVar5 = param_3;\n      uVar32 = 1;\n      if (uVar6 != 0) {\n        uVar32 = uVar6;\n      }\n      goto LAB_00107978;\n    case 0x25:\n      uVar12 = param_2 - lVar16;\n      uVar11 = 0;\n      if (-1 < (int)uVar29) {\n        uVar11 = uVar29;\n      }\n      uVar6 = (ulong)(int)uVar11;\n      uVar32 = 1;\n      if (uVar6 != 0) {\n        uVar32 = uVar6;\n      }\n      if (uVar26 != 0) {\n        __n_00 = 1;\n        pcVar5 = param_3;\n        goto LAB_00107978;\n      }\n      if (uVar32 < uVar12) {\n        if (param_1 != (char *)0x0) {\n          pcVar5 = param_1;\n          if (1 < (int)uVar29) {\n            iVar22 = 0x30;\n            pcVar5 = param_1 + ((long)(int)uVar29 - 1U);\n            if (iVar30 != 0x30) {\n              iVar22 = 0x20;\n            }\n            memset(param_1,iVar22,(long)(int)uVar29 - 1U);\n            cVar21 = *param_3;\n          }\n          *pcVar5 = cVar21;\n          param_1 = pcVar5 + 1;\n        }\n        goto LAB_00108176;\n      }\n      goto LAB_00107830;\n    case 0x3a:\n      pcVar5 = param_3 + 1;\n      uVar32 = 1;\n      cVar17 = param_3[1];\n      while (cVar17 == ':') {\n        uVar32 = uVar32 + 1;\n        pcVar5 = param_3 + uVar32;\n        cVar17 = param_3[uVar32];\n      }\n      if (cVar17 == 'z') goto LAB_001088dd;\n      break;\n    case 0x41:\n    case 0x61:\n      if (uVar26 != 0) break;\n      pcVar5 = &local_44b;\n      if (cVar17 != '\\0') {\n        cVar27 = cVar17;\n      }\n      cVar31 = '\\0';\n      uVar26 = 0;\n      goto LAB_00107aec;\n    case 0x42:\n      if (uVar26 != 0x45) {\n        if (cVar17 != '\\0') {\n          cVar27 = cVar17;\n        }\n        cVar31 = '\\0';\n        goto LAB_00107acb;\n      }\n      break;\n    case 0x43:\n      if (uVar26 != 0x45) {\n        iVar19 = param_4->tm_year;\n        bVar3 = false;\n        uVar25 = 2;\n        iVar22 = iVar19 / 100 + 0x13;\n        local_4c8._0_1_ = iVar19 < -0x76c;\n        uVar11 = iVar22 - ((uint)(0 < iVar22) & (uint)(iVar19 % 100) >> 0x1f);\n        uVar10 = 0;\n        goto LAB_00107d70;\n      }\nLAB_00108d08:\n      uVar25 = 0;\n      goto LAB_00107d85;\n    case 0x44:\n      if (uVar26 == 0) {\n        local_4c8 = \"%m/%d/%y\";\n        goto LAB_00108587;\n      }\n      break;\n    case 0x46:\n      if (uVar26 == 0) {\n        local_4c8 = \"%Y-%m-%d\";\n        goto LAB_00108587;\n      }\n      break;\n    case 0x47:\n    case 0x56:\n    case 0x67:\n      if (uVar26 != 0x45) {\n        iVar22 = param_4->tm_year;\n        iVar19 = param_4->tm_yday;\n        uVar32 = (ulong)(iVar22 + -100 + (iVar22 >> 0x1f & 400U));\n        iVar4 = FUN_00107670();\n        iVar24 = (int)uVar32;\n        if (iVar4 < 0) {\n          uVar11 = iVar24 - 1;\n          iVar4 = 0x16d;\n          if (((uVar11 & 3) == 0) &&\n             (iVar4 = 0x16e,\n             (uVar11 * -0x3d70a3d7 + 0x51eb850 >> 2 | uVar11 * 0x40000000) < 0x28f5c29)) {\n            iVar4 = ~-(uint)((int)uVar11 % 400 == 0) + 0x16e;\n          }\n          iVar4 = FUN_00107670(iVar19 + iVar4);\n          iVar19 = -1;\n        }\n        else {\n          iVar9 = 0x16d;\n          if ((uVar32 & 3) == 0) {\n            iVar9 = 0x16e;\n            uVar11 = iVar24 * -0x3d70a3d7 + 0x51eb850;\n            if ((uVar11 >> 2 | iVar24 * 0x40000000) < 0x28f5c29) {\n              iVar9 = ((uVar11 >> 4 | iVar24 * -0x70000000) < 0xa3d70b) + 0x16d;\n            }\n          }\n          iVar19 = FUN_00107670(iVar19 - iVar9);\n          if (-1 < iVar19) {\n            iVar4 = iVar19;\n          }\n          iVar19 = (iVar19 >> 0x1f) + 1;\n        }\n        if (cVar21 == 'G') {\n          bVar3 = false;\n          uVar25 = 4;\n          uVar11 = iVar22 + 0x76c + iVar19;\n          local_4c8._0_1_ = iVar22 < -0x76c - iVar19;\n          uVar10 = 0;\n          goto LAB_00107d70;\n        }\n        if (cVar21 == 'g') {\n          uVar25 = 2;\n          uVar18 = (iVar22 % 100 + iVar19) % 100;\n          uVar11 = uVar18;\n          if ((int)uVar18 < 0) {\n            uVar11 = uVar18 + 100;\n            if (iVar22 < -0x76c - iVar19) {\n              uVar11 = -uVar18;\n            }\n          }\n        }\n        else {\n          uVar11 = iVar4 / 7 + 1;\n          uVar25 = 2;\n        }\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x48:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_hour;\n        uVar25 = 2;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x49:\n      if (uVar26 != 0x45) {\n        uVar25 = 2;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x4d:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_min;\n        uVar25 = 2;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x4e:\n      if (uVar26 != 0x45) {\n        uVar11 = param_8;\n        if (uVar29 == 0xffffffff) {\n          uVar29 = 9;\n          uVar25 = 9;\n        }\n        else {\n          uVar18 = param_8;\n          uVar25 = uVar29;\n          uVar10 = uVar29;\n          if ((int)uVar29 < 9) {\n            do {\n              uVar10 = uVar10 + 1;\n              uVar11 = (int)uVar18 / 10;\n              uVar18 = (int)uVar18 / 10;\n            } while (uVar10 != 9);\n          }\n        }\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x50:\n      cVar31 = '\\x01';\n      goto LAB_0010899f;\n    case 0x52:\n      local_4c8 = \"%H:%M\";\n      goto LAB_00108587;\n    case 0x53:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_sec;\n        uVar25 = 2;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x54:\n      local_4c8 = \"%H:%M:%S\";\nLAB_00108587:\n      uVar32 = FUN_00107750(0,0xffffffffffffffff,local_4c8,param_4,cVar27,param_6,param_7,param_8);\n      uVar26 = 0;\n      if (-1 < (int)uVar29) {\n        uVar26 = uVar29;\n      }\n      uVar6 = (ulong)(int)uVar26;\n      uVar12 = uVar6;\n      if (uVar6 <= uVar32) {\n        uVar12 = uVar32;\n      }\n      if ((ulong)(param_2 - lVar16) <= uVar12) goto LAB_00107830;\n      if (param_1 != (char *)0x0) {\n        pcVar5 = param_1;\n        if (uVar32 < uVar6) {\n          sVar13 = (long)(int)uVar29 - uVar32;\n          pcVar5 = param_1 + sVar13;\n          if (iVar30 == 0x30) {\n            memset(param_1,0x30,sVar13);\n          }\n          else {\n            memset(param_1,0x20,sVar13);\n          }\n        }\n        param_1 = pcVar5 + uVar32;\n        FUN_00107750(pcVar5,param_2 - lVar16,local_4c8,param_4,cVar27,param_6,param_7,param_8);\n      }\n      lVar16 = lVar16 + uVar12;\n      goto LAB_00107804;\n    case 0x55:\n      if (uVar26 != 0x45) {\n        iVar22 = (param_4->tm_yday - param_4->tm_wday) + 7;\nLAB_00108377:\n        uVar11 = iVar22 / 7;\n        uVar25 = 2;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x57:\n      if (uVar26 != 0x45) {\n        iVar22 = param_4->tm_wday + 6;\n        iVar22 = ((iVar22 / 7) * 7 - iVar22) + 7 + param_4->tm_yday;\n        goto LAB_00108377;\n      }\n      break;\n    case 0x58:\n    case 99:\n    case 0x78:\n      if (uVar26 != 0x4f) goto switchD_0010790f_caseD_72;\n      break;\n    case 0x59:\n      if (uVar26 == 0x45) goto LAB_00108d08;\n      if (uVar26 == 0x4f) break;\n      bVar3 = false;\n      uVar18 = 4;\n      local_4c8._0_1_ = param_4->tm_year < -0x76c;\n      uVar11 = param_4->tm_year + 0x76c;\n      uVar10 = 0;\n      goto LAB_00107e30;\n    case 0x5a:\n      if (cVar17 != '\\0') {\n        cVar27 = '\\0';\n      }\n      sVar13 = strlen(__s);\n      uVar26 = 0;\n      if (-1 < (int)uVar29) {\n        uVar26 = uVar29;\n      }\n      uVar12 = (ulong)(int)uVar26;\n      uVar32 = uVar12;\n      if (uVar12 <= sVar13) {\n        uVar32 = sVar13;\n      }\n      if (uVar32 < (ulong)(param_2 - lVar16)) {\n        if (param_1 != (char *)0x0) {\n          pcVar5 = param_1;\n          if (sVar13 < uVar12) {\n            __n = (long)(int)uVar29 - sVar13;\n            pcVar5 = param_1 + __n;\n            if (iVar30 == 0x30) {\n              memset(param_1,0x30,__n);\n            }\n            else {\n              memset(param_1,0x20,__n);\n            }\n          }\n          if (cVar17 == '\\0') {\n            if (cVar27 == '\\0') {\n              memcpy(pcVar5,__s,sVar13);\n            }\n            else {\n              FUN_00107700();\n            }\n          }\n          else {\n            FUN_001076b0();\n          }\n          param_1 = pcVar5 + sVar13;\n        }\n        lVar16 = lVar16 + uVar32;\n        goto LAB_00107804;\n      }\n      goto LAB_00107830;\n    case 0x62:\n    case 0x68:\n      if (cVar17 != '\\0') {\n        cVar27 = cVar17;\n      }\n      if (uVar26 != 0x45) goto switchD_0010790f_caseD_72;\n      break;\n    case 100:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_mday;\n        uVar25 = 2;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x65:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_mday;\nLAB_001087af:\n        uVar25 = 2;\n        if ((iVar30 != 0x30) && (iVar30 != 0x2d)) {\n          iVar30 = 0x5f;\n        }\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x6a:\n      if (uVar26 != 0x45) {\n        bVar3 = false;\n        uVar25 = 3;\n        local_4c8._0_1_ = param_4->tm_yday < -1;\n        uVar11 = param_4->tm_yday + 1;\n        uVar10 = 0;\n        goto LAB_00107d70;\n      }\n      break;\n    case 0x6b:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_hour;\n        goto LAB_001087af;\n      }\n      break;\n    case 0x6c:\n      if (uVar26 != 0x45) goto LAB_001087af;\n      break;\n    case 0x6d:\n      if (uVar26 != 0x45) {\n        bVar3 = false;\n        uVar25 = 2;\n        local_4c8._0_1_ = param_4->tm_mon < -1;\n        uVar11 = param_4->tm_mon + 1;\n        uVar10 = 0;\n        goto LAB_00107d70;\n      }\n      break;\n    case 0x6e:\n      uVar26 = 0;\n      if (-1 < (int)uVar29) {\n        uVar26 = uVar29;\n      }\n      uVar32 = (ulong)(int)uVar26;\n      if (uVar32 == 0) {\n        uVar32 = 1;\n      }\n      if (uVar32 < (ulong)(param_2 - lVar16)) {\n        if (param_1 != (char *)0x0) {\n          pcVar5 = param_1;\n          if (1 < (int)uVar29) {\n            sVar13 = (long)(int)uVar29 - 1;\n            pcVar5 = param_1 + sVar13;\n            if (iVar30 == 0x30) {\n              memset(param_1,0x30,sVar13);\n            }\n            else {\n              memset(param_1,0x20,sVar13);\n            }\n          }\n          *pcVar5 = '\\n';\n          param_1 = pcVar5 + 1;\n        }\nLAB_00108176:\n        lVar16 = lVar16 + uVar32;\n        goto LAB_00107804;\n      }\n      goto LAB_00107830;\n    case 0x70:\n      cVar31 = '\\0';\nLAB_0010899f:\n      cVar21 = 'p';\n      if (cVar17 != '\\0') {\n        cVar27 = '\\0';\n        cVar31 = cVar17;\n      }\nLAB_00107acb:\n      if (uVar26 != 0) {\n        uVar25 = 0;\n        goto LAB_00107d95;\n      }\n      pcVar5 = &local_44b;\n      goto LAB_00107aec;\n    case 0x71:\n      uVar25 = 1;\n      uVar18 = 1;\n      if (uVar26 == 0x4f) goto LAB_00107d85;\n      bVar3 = false;\n      uVar10 = 0;\n      local_4c8._0_1_ = false;\n      uVar11 = (param_4->tm_mon * 0xb >> 5) + 1;\n      goto LAB_00107e39;\n    case 0x72:\nswitchD_0010790f_caseD_72:\n      cVar31 = '\\0';\n      goto LAB_00107acb;\n    case 0x73:\n      local_488 = *(undefined8 *)param_4;\n      uStack_480 = *(undefined8 *)&param_4->tm_hour;\n      local_478 = *(undefined8 *)&param_4->tm_mon;\n      uStack_470 = *(undefined8 *)&param_4->tm_wday;\n      local_468 = *(undefined8 *)&param_4->tm_isdst;\n      lStack_460 = param_4->tm_gmtoff;\n      local_458 = param_4->tm_zone;\n      lVar8 = FUN_0010d100(param_7,&local_488);\n      pcVar5 = local_432 + 1;\n      lVar20 = lVar8;\n      do {\n        lVar2 = lVar20 / 10;\n        cVar17 = (char)lVar20 + (char)lVar2 * -10;\n        if (lVar8 < 0) {\n          cVar17 = -cVar17;\n        }\n        pcVar5 = pcVar5 + -1;\n        *pcVar5 = cVar17 + '0';\n        lVar20 = lVar2;\n      } while (lVar2 != 0);\n      uVar18 = 1;\n      if (0 < (int)uVar29) {\n        uVar18 = uVar29;\n      }\n      if (lVar8 < 0) goto LAB_00108a00;\n      goto LAB_001082db;\n    case 0x74:\n      uVar26 = 0;\n      if (-1 < (int)uVar29) {\n        uVar26 = uVar29;\n      }\n      uVar32 = (ulong)(int)uVar26;\n      if (uVar32 == 0) {\n        uVar32 = 1;\n      }\n      if (uVar32 < (ulong)(param_2 - lVar16)) {\n        if (param_1 != (char *)0x0) {\n          pcVar5 = param_1;\n          if (1 < (int)uVar29) {\n            sVar13 = (long)(int)uVar29 - 1;\n            pcVar5 = param_1 + sVar13;\n            if (iVar30 == 0x30) {\n              memset(param_1,0x30,sVar13);\n            }\n            else {\n              memset(param_1,0x20,sVar13);\n            }\n          }\n          *pcVar5 = '\\t';\n          param_1 = pcVar5 + 1;\n        }\n        goto LAB_00108176;\n      }\n      goto LAB_00107830;\n    case 0x75:\n      uVar11 = (param_4->tm_wday + 6) % 7 + 1;\n      uVar25 = 1;\n      goto LAB_00107d60;\n    case 0x77:\n      if (uVar26 != 0x45) {\n        uVar11 = param_4->tm_wday;\n        uVar25 = 1;\n        goto LAB_00107d60;\n      }\n      break;\n    case 0x79:\n      if (uVar26 == 0x45) goto LAB_00108d08;\n      uVar25 = 2;\n      uVar18 = param_4->tm_year % 100;\n      uVar11 = uVar18;\n      if ((int)uVar18 < 0) {\n        uVar11 = uVar18 + 100;\n        if (param_4->tm_year < -0x76c) {\n          uVar11 = -uVar18;\n        }\n      }\nLAB_00107d60:\n      bVar3 = false;\n      uVar10 = 0;\n      local_4c8._0_1_ = (char)(uVar11 >> 0x1f);\nLAB_00107d70:\n      uVar18 = uVar25;\n      if (uVar26 != 0x4f) {\nLAB_00107e30:\n        if ((bool)(char)local_4c8 != false) goto LAB_00107e37;\nLAB_00107e39:\n        pcVar15 = local_432 + 1;\n        pcVar5 = local_432;\n        while( true ) {\n          if ((uVar10 & 1) != 0) {\n            pcVar15[-1] = ':';\n            pcVar7 = pcVar15 + -2;\n            pcVar15 = pcVar5;\n            pcVar5 = pcVar7;\n          }\n          uVar10 = (int)uVar10 >> 1;\n          pcVar15[-1] = (char)(uVar11 % 10) + '0';\n          if ((uVar11 < 10) && (uVar10 == 0)) break;\n          uVar11 = uVar11 / 10;\n          pcVar15 = pcVar5;\n          pcVar5 = pcVar5 + -1;\n        }\n        if ((int)uVar18 < (int)uVar29) {\n          uVar18 = uVar29;\n        }\n        if ((bool)(char)local_4c8 != false) {\nLAB_00108a00:\n          local_4c8._0_1_ = '-';\n          cVar17 = '-';\n          if (iVar30 != 0x2d) goto LAB_00107eea;\nLAB_00108a15:\n          uVar26 = 0;\n          if (-1 < (int)uVar29) {\n            uVar26 = uVar29;\n          }\n          pcVar23 = (char *)(long)(int)uVar26;\n          pcVar15 = (char *)0x1;\n          if (pcVar23 != (char *)0x0) {\n            pcVar15 = pcVar23;\n          }\n          if ((char *)(param_2 - lVar16) <= pcVar15) goto LAB_00107830;\n          if (param_1 != (char *)0x0) {\n            if ((uVar18 == 0) && ((char *)0x1 < pcVar23)) {\n              memset(param_1,0x20,(long)(int)uVar29 - 1U);\n              param_1 = param_1 + ((long)(int)uVar29 - 1U);\n            }\n            *param_1 = cVar17;\n            param_1 = param_1 + 1;\n          }\n          lVar16 = lVar16 + (long)pcVar15;\n          iVar30 = 0x2d;\n          pcVar14 = local_432 + (1 - (long)pcVar5);\n          pcVar7 = (char *)(param_2 - lVar16);\n          goto LAB_00108011;\n        }\n        if (bVar3) {\n          if (iVar30 == 0x2d) {\n            cVar17 = '+';\n            goto LAB_00108a15;\n          }\n          local_4c8._0_1_ = '+';\nLAB_00107eea:\n          pcVar14 = local_432 + (1 - (long)pcVar5);\n          iVar22 = (uVar18 - 1) - (int)pcVar14;\n          pcVar7 = (char *)(param_2 - lVar16);\n          if (iVar22 < 1) {\n            uVar26 = 0;\n            if (-1 < (int)uVar29) {\n              uVar26 = uVar29;\n            }\n            pcVar23 = (char *)(long)(int)uVar26;\n            pcVar15 = (char *)0x1;\n            if (pcVar23 != (char *)0x0) {\n              pcVar15 = pcVar23;\n            }\n            if (pcVar7 <= pcVar15) goto LAB_00107830;\n            if (param_1 != (char *)0x0) {\n              pcVar7 = param_1;\n              if ((uVar18 == 0) && ((char *)0x1 < pcVar23)) {\n                sVar13 = (long)(int)uVar29 - 1;\n                pcVar7 = param_1 + sVar13;\n                if (iVar30 == 0x30) {\n                  memset(param_1,0x30,sVar13);\n                }\n                else {\n                  memset(param_1,0x20,sVar13);\n                }\n              }\n              param_1 = pcVar7 + 1;\n              *pcVar7 = (char)local_4c8;\n            }\n            lVar16 = lVar16 + (long)pcVar15;\n            pcVar7 = (char *)(param_2 - lVar16);\n            goto LAB_00108011;\n          }\n        }\n        else {\nLAB_001082db:\n          pcVar14 = local_432 + (1 - (long)pcVar5);\n          pcVar7 = (char *)(param_2 - lVar16);\n          if ((iVar30 == 0x2d) || (iVar22 = uVar18 - (int)pcVar14, iVar22 < 1)) {\n            uVar26 = 0;\n            if (-1 < (int)uVar29) {\n              uVar26 = uVar29;\n            }\n            pcVar23 = (char *)(long)(int)uVar26;\n            goto LAB_00108011;\n          }\n          local_4c8._0_1_ = '\\0';\n        }\n        if (iVar30 == 0x5f) {\n          pcVar15 = (char *)(long)iVar22;\n          if (pcVar15 < pcVar7) {\n            pcVar14 = param_1;\n            if (param_1 != (char *)0x0) {\n              memset(param_1,0x20,(size_t)pcVar15);\n              pcVar14 = param_1 + (long)pcVar15;\n            }\n            lVar16 = lVar16 + (long)pcVar15;\n            if (iVar22 < (int)uVar29) {\n              uVar29 = uVar29 - iVar22;\n              pcVar23 = (char *)(long)(int)uVar29;\n            }\n            else {\n              pcVar23 = (char *)0x0;\n              uVar29 = 0;\n            }\n            pcVar7 = (char *)(param_2 - lVar16);\n            param_1 = pcVar14;\n            if ((char)local_4c8 == '\\0') {\n              pcVar14 = local_432 + (1 - (long)pcVar5);\n            }\n            else {\n              pcVar15 = (char *)0x1;\n              if (pcVar23 != (char *)0x0) {\n                pcVar15 = pcVar23;\n              }\n              if (pcVar7 <= pcVar15) goto LAB_00107830;\n              if (pcVar14 != (char *)0x0) {\n                if ((uVar18 == 0) && ((char *)0x1 < pcVar23)) {\n                  memset(pcVar14,0x20,(long)(int)uVar29 - 1U);\n                  pcVar14 = pcVar14 + ((long)(int)uVar29 - 1U);\n                }\n                param_1 = pcVar14 + 1;\n                *pcVar14 = (char)local_4c8;\n              }\n              lVar16 = lVar16 + (long)pcVar15;\n              pcVar14 = local_432 + (1 - (long)pcVar5);\n              pcVar7 = (char *)(param_2 - lVar16);\n            }\n            goto LAB_00108011;\n          }\n        }\n        else if ((char *)(long)(int)uVar18 < pcVar7) {\n          if ((char)local_4c8 == '\\0') {\n            if (param_1 != (char *)0x0) {\nLAB_00107fc3:\n              memset(param_1,0x30,(long)iVar22);\n              param_1 = param_1 + iVar22;\n            }\n          }\n          else {\n            uVar26 = 0;\n            if (-1 < (int)uVar29) {\n              uVar26 = uVar29;\n            }\n            pcVar14 = (char *)(long)(int)uVar26;\n            pcVar15 = (char *)0x1;\n            if (pcVar14 != (char *)0x0) {\n              pcVar15 = pcVar14;\n            }\n            if (pcVar7 <= pcVar15) goto LAB_00107830;\n            lVar16 = lVar16 + (long)pcVar15;\n            if (param_1 != (char *)0x0) {\n              pcVar15 = param_1;\n              if ((uVar18 == 0) && ((char *)0x1 < pcVar14)) {\n                sVar13 = (long)(int)uVar29 - 1;\n                pcVar15 = param_1 + sVar13;\n                if (iVar30 == 0x30) {\n                  memset(param_1,0x30,sVar13);\n                }\n                else {\n                  memset(param_1,0x20,sVar13);\n                }\n              }\n              param_1 = pcVar15 + 1;\n              *pcVar15 = (char)local_4c8;\n              goto LAB_00107fc3;\n            }\n          }\n          lVar16 = lVar16 + iVar22;\n          pcVar23 = (char *)0x0;\n          uVar29 = 0;\n          pcVar14 = local_432 + (1 - (long)pcVar5);\n          pcVar7 = (char *)(param_2 - lVar16);\nLAB_00108011:\n          pcVar15 = pcVar23;\n          if (pcVar23 <= pcVar14) {\n            pcVar15 = pcVar14;\n          }\n          if (pcVar15 < pcVar7) {\n            if (param_1 != (char *)0x0) {\n              pcVar7 = param_1;\n              if ((uVar18 == 0) && (pcVar14 < pcVar23)) {\n                sVar13 = (long)(int)uVar29 - (long)pcVar14;\n                pcVar7 = param_1 + sVar13;\n                if (iVar30 == 0x30) {\n                  memset(param_1,0x30,sVar13);\n                }\n                else {\n                  memset(param_1,0x20,sVar13);\n                }\n              }\n              if (cVar27 == '\\0') {\n                memcpy(pcVar7,pcVar5,(size_t)pcVar14);\n              }\n              else {\n                FUN_00107700();\n              }\n              param_1 = pcVar7 + (long)pcVar14;\n            }\n            goto LAB_00107c12;\n          }\n        }\n        goto LAB_00107830;\n      }\n      if ((bool)(char)local_4c8 != false) {\nLAB_00107e37:\n        uVar11 = -uVar11;\n        goto LAB_00107e39;\n      }\nLAB_00107d85:\n      cVar31 = '\\0';\nLAB_00107d95:\n      local_44b = (char)uVar26;\n      pcVar5 = local_44a;\n      uVar26 = uVar25;\nLAB_00107aec:\n      local_44d = 0x2520;\n      *pcVar5 = cVar21;\n      pcVar5[1] = '\\0';\n      sVar13 = strftime(&local_448,0x400,(char *)&local_44d,param_4);\n      if (sVar13 != 0) {\n        pcVar5 = (char *)(sVar13 - 1);\n        uVar11 = 0;\n        if (-1 < (int)uVar29) {\n          uVar11 = uVar29;\n        }\n        pcVar7 = (char *)(long)(int)uVar11;\n        pcVar15 = pcVar7;\n        if (pcVar7 <= pcVar5) {\n          pcVar15 = pcVar5;\n        }\n        if ((char *)(param_2 - lVar16) <= pcVar15) goto LAB_00107830;\n        if (param_1 != (char *)0x0) {\n          pcVar14 = param_1;\n          if ((uVar26 == 0) && (pcVar5 < pcVar7)) {\n            sVar13 = (long)(int)uVar29 - (long)pcVar5;\n            pcVar14 = param_1 + sVar13;\n            if (iVar30 == 0x30) {\n              memset(param_1,0x30,sVar13);\n            }\n            else {\n              memset(param_1,0x20,sVar13);\n            }\n          }\n          if (cVar31 == '\\0') {\n            if (cVar27 == '\\0') {\n              memcpy(pcVar14,local_447,(size_t)pcVar5);\n            }\n            else {\n              FUN_00107700();\n            }\n          }\n          else {\n            FUN_001076b0();\n          }\n          param_1 = pcVar14 + (long)pcVar5;\n        }\nLAB_00107c12:\n        lVar16 = lVar16 + (long)pcVar15;\n      }\n      goto LAB_00107804;\n    case 0x7a:\n      uVar32 = 0;\n      pcVar5 = param_3;\nLAB_001088dd:\n      param_3 = pcVar5;\n      if (param_4->tm_isdst < 0) goto LAB_00107804;\n      local_4c8._0_1_ = true;\n      iVar22 = (int)param_4->tm_gmtoff;\n      if ((-1 < iVar22) && (local_4c8._0_1_ = false, iVar22 == 0)) {\n        local_4c8._0_1_ = *__s == '-';\n      }\n      uVar11 = iVar22 / 0xe10;\n      uVar10 = (iVar22 / 0x3c) % 0x3c;\n      if (uVar32 == 2) {\nLAB_00108f29:\n        bVar3 = true;\n        uVar25 = 9;\n        iVar19 = uVar10 * 100;\n        uVar10 = 0x14;\n        uVar11 = uVar11 * 10000 + iVar19 + iVar22 % 0x3c;\n      }\n      else if (uVar32 < 3) {\n        if (uVar32 == 0) {\n          bVar3 = true;\n          uVar25 = 5;\n          uVar11 = uVar11 * 100 + uVar10;\n          uVar10 = 0;\n        }\n        else {\nLAB_00108974:\n          bVar3 = true;\n          uVar25 = 6;\n          uVar11 = uVar11 * 100 + uVar10;\n          uVar10 = 4;\n        }\n      }\n      else {\n        if (uVar32 != 3) {\n          cVar17 = *param_3;\n          goto LAB_001086b2;\n        }\n        if (iVar22 % 0x3c != 0) goto LAB_00108f29;\n        if (uVar10 != 0) goto LAB_00108974;\n        bVar3 = true;\n        uVar25 = 3;\n      }\n      goto LAB_00107d70;\n    case 0x7b:\n      return (long)*(int *)((uVar32 & 0xff) * 4 + 0x1118e0) + 0x1118e0;\n    }\nswitchD_0010790f_caseD_1:\n    pcVar5 = param_3;\n    do {\n      pcVar5 = pcVar5 + -1;\n    } while (*pcVar5 != '%');\n    __n_00 = (ulong)(((int)param_3 + 1) - (int)pcVar5);\n    uVar12 = param_2 - lVar16;\n    uVar26 = 0;\n    if (-1 < (int)uVar29) {\n      uVar26 = uVar29;\n    }\n    uVar6 = (ulong)(int)uVar26;\n    uVar32 = __n_00;\n    if (__n_00 <= uVar6) {\n      uVar32 = uVar6;\n    }\nLAB_00107978:\n    if (uVar12 <= uVar32) {\nLAB_00107830:\n      lVar16 = 0;\n      goto LAB_00107833;\n    }\n    if (param_1 != (char *)0x0) {\n      pcVar15 = param_1;\n      if (__n_00 < uVar6) {\n        sVar13 = (long)(int)uVar29 - __n_00;\n        pcVar15 = param_1 + sVar13;\n        if (iVar30 == 0x30) {\n          memset(param_1,0x30,sVar13);\n        }\n        else {\n          memset(param_1,0x20,sVar13);\n        }\n      }\n      if (cVar27 == '\\0') {\n        memcpy(pcVar15,pcVar5,__n_00);\n      }\n      else {\n        FUN_00107700();\n      }\n      param_1 = pcVar15 + __n_00;\n    }\n    lVar16 = lVar16 + uVar32;\nLAB_00107804:\n    cVar27 = param_3[1];\n    param_3 = param_3 + 1;\n  } while( true );\n}\n\n", 
    "00104000": "\nundefined4 FUN_00104000(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00105450": "\nuint FUN_00105450(char *param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  long in_FS_OFFSET;\n  statfs sStack_a8;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*param_1 == '-') && (param_1[1] == '\\0')) {\n    uVar3 = FUN_0010b100(4,param_1);\n    uVar4 = dcgettext(0,\"using %s to denote standard input does not work in file system mode\",5);\n    error(0,0,uVar4,uVar3);\n    uVar2 = 0;\n  }\n  else {\n    iVar1 = statfs(param_1,&sStack_a8);\n    if (iVar1 == 0) {\n      uVar2 = FUN_00105120(param_2,0xffffffff,param_1,FUN_00104f10,&sStack_a8);\n      uVar2 = uVar2 ^ 1;\n    }\n    else {\n      uVar3 = FUN_0010b100(4,param_1);\n      uVar4 = dcgettext(0,\"cannot read file system information for %s\",5);\n      piVar5 = __errno_location();\n      error(0,*piVar5,uVar4,uVar3);\n      uVar2 = 0;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104480": "\nvoid FUN_00104480(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00104280(param_1,param_2,\"\\'-+ 0\",&DAT_00110fd3);\n  __printf_chk(DAT_00111740,1,param_1);\n  return;\n}\n\n", 
    "001037b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00116d88)();\n  return sVar1;\n}\n\n", 
    "0010be30": "\nvoid FUN_0010be30(undefined4 *param_1)\n\n{\n  *param_1 = 0xffffff9c;\n  return;\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_00116e18)();\n  return sVar1;\n}\n\n", 
    "00118308": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00116ea8)();\n  return pvVar1;\n}\n\n", 
    "0010cf10": "\nvoid FUN_0010cf10(long *param_1)\n\n{\n  long *plVar1;\n  \n  if (param_1 == (long *)0x1) {\n    return;\n  }\n  if (param_1 != (long *)0x0) {\n    do {\n      plVar1 = (long *)*param_1;\n      free(param_1);\n      param_1 = plVar1;\n    } while (plVar1 != (long *)0x0);\n  }\n  return;\n}\n\n", 
    "00103a30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00116ec8)();\n  return pcVar1;\n}\n\n", 
    "00103c70": "\nundefined  [16] FUN_00103c70(uint param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  int iVar2;\n  uint uVar3;\n  lconv *plVar4;\n  char *pcVar5;\n  char *__haystack;\n  char *pcVar6;\n  long lVar7;\n  byte bVar8;\n  char cVar9;\n  undefined8 uVar10;\n  undefined8 *puVar11;\n  undefined8 uStack_38;\n  \n  FUN_001090d0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  plVar4 = localeconv();\n  DAT_00117198 = plVar4->decimal_point;\n  if (*DAT_00117198 == '\\0') {\n    DAT_00117198 = \".\";\n  }\n  uVar10 = 0;\n  cVar9 = '\\0';\n  DAT_00117190 = strlen(DAT_00117198);\n  FUN_0010fbb0(FUN_00107130);\n  __haystack = (char *)0x0;\nLAB_00103d08:\n  do {\n    iVar2 = getopt_long(param_1,param_2,\"c:fLt\",&PTR_s_dereference_00116960,0);\n    if (iVar2 == -1) {\n      if (optind != param_1) {\n        if (__haystack == (char *)0x0) {\n          __haystack = (char *)FUN_00104100(cVar9,uVar10,0);\n          pcVar6 = (char *)FUN_00104100(cVar9,uVar10,1);\n        }\n        else {\n          pcVar5 = strstr(__haystack,\"%N\");\n          pcVar6 = __haystack;\n          if (pcVar5 != (char *)0x0) {\n            FUN_00104060();\n          }\n        }\n        if ((int)optind < (int)param_1) {\n          lVar7 = (long)(int)optind;\n          uVar3 = ~optind;\n          puVar11 = param_2 + lVar7;\n          bVar8 = 1;\n          do {\n            if (cVar9 == '\\0') {\n              bVar1 = FUN_00105560(*puVar11,__haystack,pcVar6);\n            }\n            else {\n              bVar1 = FUN_00105450(*puVar11,__haystack);\n            }\n            puVar11 = puVar11 + 1;\n            bVar8 = bVar8 & bVar1;\n          } while (puVar11 != param_2 + (ulong)(uVar3 + param_1) + lVar7 + 1);\n        }\n        else {\n          bVar8 = 1;\n        }\n        return CONCAT88(uStack_38,(ulong)(bVar8 ^ 1));\n      }\nLAB_00103ee9:\n      uVar10 = dcgettext(0,\"missing operand\",5);\n      error(0,0,uVar10);\n      goto LAB_00103d9f;\n    }\n    if (iVar2 != 99) {\n      if (iVar2 < 100) {\n        if (iVar2 == -0x82) {\n          FUN_00106600(0);\n          goto LAB_00103ee9;\n        }\n        if (iVar2 == 0x4c) {\n          DAT_001171a1 = 1;\n          goto LAB_00103d08;\n        }\n        if (iVar2 == -0x83) {\n          FUN_0010b980(stdout,&DAT_00111382,\"GNU coreutils\",PTR_DAT_00117018,\"Michael Meskes\",0);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\nLAB_00103d9f:\n        FUN_00106600(1);\n      }\n      else if (iVar2 != 0x74) {\n        if (iVar2 == 0x80) {\n          DAT_001171a0 = 1;\n          PTR_s__00117010 = \"\";\n          __haystack = optarg;\n        }\n        else {\n          if (iVar2 != 0x66) goto LAB_00103d9f;\n          cVar9 = '\\x01';\n        }\n        goto LAB_00103d08;\n      }\n      uVar10 = 1;\n      goto LAB_00103d08;\n    }\n    DAT_001171a0 = 0;\n    PTR_s__00117010 = \"\\n\";\n    __haystack = optarg;\n  } while( true );\n}\n\n", 
    "00103b50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint gnu_dev_minor(ulonglong __dev)\n\n{\n  uint uVar1;\n  \n  uVar1 = (*(code *)PTR_gnu_dev_minor_00116f58)();\n  return uVar1;\n}\n\n", 
    "00118310": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010fbb0": "\nvoid FUN_0010fbb0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00117008);\n  return;\n}\n\n", 
    "0010d810": "\nint FUN_0010d810(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010d87f;\n    }\n    iVar1 = FUN_0010d8c0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010d87f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "001092f0": "\nundefined8 FUN_001092f0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00109260(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00104030": "\nvoid FUN_00104030(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00105120": "\nuint FUN_00105120(char *param_1,undefined4 param_2,undefined8 param_3,code *param_4,\n                 undefined8 param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  size_t sVar3;\n  undefined8 uVar4;\n  size_t sVar5;\n  long lVar6;\n  ushort **ppuVar7;\n  undefined8 uVar8;\n  int *piVar9;\n  int iVar10;\n  int extraout_EDX;\n  int iVar11;\n  int __c;\n  ushort *puVar12;\n  char *pcVar13;\n  char cVar14;\n  long in_FS_OFFSET;\n  statfs sStack_100;\n  long lStack_88;\n  char *pcStack_78;\n  void *pvStack_70;\n  undefined8 uStack_68;\n  long lStack_60;\n  byte local_55;\n  undefined4 local_54;\n  undefined8 local_50;\n  code *local_48;\n  undefined8 local_40;\n  \n  lStack_60 = 0x105149;\n  local_54 = param_2;\n  local_50 = param_3;\n  local_48 = param_4;\n  local_40 = param_5;\n  sVar3 = strlen(param_1);\n  lStack_60 = 0x105152;\n  pvStack_70 = (void *)FUN_0010bac0(sVar3 + 3);\n  cVar14 = *param_1;\n  local_55 = 0;\n  do {\n    while( true ) {\n      if (cVar14 == '\\0') {\n        lStack_60 = 0x105206;\n        free(pvStack_70);\n        lStack_60 = 0x105219;\n        fputs_unlocked(PTR_s__00117010,stdout);\n        return (uint)local_55;\n      }\n      pcVar13 = param_1 + 1;\n      if (cVar14 != '%') break;\n      lStack_60 = 0x10523f;\n      sVar3 = strspn(pcVar13,\"\\'-+ #0I\");\n      lStack_60 = 0x105253;\n      sVar5 = strspn(param_1 + sVar3 + 1,\"0123456789\");\n      pcStack_78 = param_1 + sVar3 + 1 + sVar5;\n      cVar14 = *pcStack_78;\n      if (cVar14 == '.') {\n        lStack_60 = 0x105270;\n        sVar3 = strspn(pcStack_78 + 1,\"0123456789\");\n        pcStack_78 = pcStack_78 + sVar3 + 1;\n        cVar14 = *pcStack_78;\n      }\n      lVar6 = (long)pcStack_78 - (long)pcVar13;\n      sVar3 = lVar6 + 1;\n      lStack_60 = 0x105294;\n      memcpy(pvStack_70,param_1,sVar3);\n      if (cVar14 == '\\0') {\n        pcStack_78 = pcStack_78 + -1;\n      }\n      else if (cVar14 != '%') {\n        pcVar13 = pcStack_78 + 1;\n        lStack_60 = 0x1052c2;\n        bVar1 = (*local_48)(pvStack_70,sVar3,(int)cVar14,local_54,local_50,local_40);\n        local_55 = local_55 | bVar1;\n        goto LAB_0010517b;\n      }\n      if (lVar6 != 0) {\n        *(char *)((long)pvStack_70 + sVar3) = cVar14;\n        *(undefined *)((long)pvStack_70 + lVar6 + 2) = 0;\n        lStack_60 = 0x105420;\n        uStack_68 = FUN_0010b3c0(pvStack_70);\n        lStack_60 = 0x105436;\n        uVar4 = dcgettext(0,\"%s: invalid directive\",5);\n        uVar8 = 0;\n        pcVar13 = (char *)0x1;\n        lStack_60 = 0x10544a;\n        error(1,0,uVar4,uStack_68);\n        lStack_88 = *(long *)(in_FS_OFFSET + 0x28);\n        lStack_60 = lVar6;\n        if ((*pcVar13 == '-') && (pcVar13[1] == '\\0')) {\n          uVar4 = FUN_0010b100(4,pcVar13);\n          uVar8 = dcgettext(0,\"using %s to denote standard input does not work in file system mode\",\n                            5);\n          error(0,0,uVar8,uVar4);\n          uVar2 = 0;\n        }\n        else {\n          iVar10 = statfs(pcVar13,&sStack_100);\n          if (iVar10 == 0) {\n            uVar2 = FUN_00105120(uVar8,0xffffffff,pcVar13,FUN_00104f10,&sStack_100);\n            uVar2 = uVar2 ^ 1;\n          }\n          else {\n            uVar4 = FUN_0010b100(4,pcVar13);\n            uVar8 = dcgettext(0,\"cannot read file system information for %s\",5);\n            piVar9 = __errno_location();\n            error(0,*piVar9,uVar8,uVar4);\n            uVar2 = 0;\n          }\n        }\n        if (lStack_88 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return uVar2;\n        }\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      pcVar13 = pcStack_78 + 1;\n      lStack_60 = 0x1052eb;\n      putchar_unlocked(0x25);\nLAB_0010517b:\n      cVar14 = pcStack_78[1];\n      param_1 = pcVar13;\n    }\n    if (cVar14 != '\\\\') {\n      lStack_60 = 0x105175;\n      putchar_unlocked((int)cVar14);\n      pcStack_78 = param_1;\n      goto LAB_0010517b;\n    }\n    if (DAT_001171a0 != '\\0') {\n      cVar14 = param_1[1];\n      if ((byte)(cVar14 - 0x30U) < 8) {\n        iVar10 = cVar14 + -0x30;\n        if ((byte)(param_1[2] - 0x30U) < 8) {\n          iVar10 = param_1[2] + -0x30 + iVar10 * 8;\n          if ((byte)(param_1[3] - 0x30U) < 8) {\n            iVar10 = param_1[3] + -0x30 + iVar10 * 8;\n            pcVar13 = param_1 + 4;\n          }\n          else {\n            pcVar13 = param_1 + 3;\n          }\n        }\n        else {\n          pcVar13 = param_1 + 2;\n        }\n        lStack_60 = 0x10536b;\n        putchar_unlocked(iVar10);\n        pcStack_78 = pcVar13 + -1;\n      }\n      else {\n        if (cVar14 == 'x') {\n          lStack_60 = 0x1052f5;\n          ppuVar7 = __ctype_b_loc();\n          iVar11 = (int)param_1[2];\n          puVar12 = *ppuVar7;\n          lStack_60 = 0x105308;\n          iVar10 = iVar11;\n          bVar1 = FUN_00104000(iVar11);\n          if ((*(byte *)((long)puVar12 + (ulong)bVar1 * 2 + 1) & 0x10) != 0) {\n            if ((byte)((char)iVar10 + 0x9fU) < 6) {\n              __c = iVar10 + -0x57;\n            }\n            else {\n              __c = iVar10 + -0x37;\n              if (5 < (byte)((char)iVar11 + 0xbfU)) {\n                __c = iVar10 + -0x30;\n              }\n            }\n            iVar10 = (int)param_1[3];\n            pcStack_78 = param_1 + 2;\n            lStack_60 = 0x105397;\n            bVar1 = FUN_00104000(iVar10);\n            if ((*(byte *)((long)puVar12 + (ulong)bVar1 * 2 + 1) & 0x10) != 0) {\n              pcStack_78 = param_1 + 3;\n              if ((byte)((char)extraout_EDX + 0x9fU) < 6) {\n                iVar11 = extraout_EDX + -0x57;\n              }\n              else {\n                iVar11 = extraout_EDX + -0x30;\n                if ((byte)((char)iVar10 + 0xbfU) < 6) {\n                  iVar11 = extraout_EDX + -0x37;\n                }\n              }\n              __c = __c * 0x10 + iVar11;\n            }\n            pcVar13 = pcStack_78 + 1;\n            lStack_60 = 0x1053d5;\n            putchar_unlocked(__c);\n            goto LAB_0010517b;\n          }\n        }\n        else if (cVar14 == '\\0') {\n          lStack_60 = 0x1051d7;\n          uVar4 = dcgettext(0,\"warning: backslash at end of format\",5);\n          lStack_60 = 0x1051e5;\n          error(0,0,uVar4);\n          goto LAB_001051e5;\n        }\n        lStack_60 = 0x105322;\n        FUN_00105040((int)cVar14);\n        pcStack_78 = pcVar13;\n        pcVar13 = param_1 + 2;\n      }\n      goto LAB_0010517b;\n    }\nLAB_001051e5:\n    lStack_60 = 0x1051f5;\n    putchar_unlocked(0x5c);\n    cVar14 = param_1[1];\n    param_1 = pcVar13;\n  } while( true );\n}\n\n", 
    "0010ad00": "\nvoid FUN_0010ad00(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_001172c0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "001036c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00116d10)();\n  return iVar1;\n}\n\n", 
    "001037e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chdir(char *__path)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_chdir_00116da0)();\n  return iVar1;\n}\n\n", 
    "0010af40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010af40(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00117080;\n  if (1 < DAT_00117078) {\n    ppvVar2 = (void **)(PTR_DAT_00117080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00117080 + (ulong)(DAT_00117078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_001171c0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00117098 = &DAT_001171c0;\n    _DAT_00117090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00117090) {\n    free(__ptr_00);\n    PTR_DAT_00117080 = &DAT_00117090;\n  }\n  DAT_00117078 = 1;\n  return;\n}\n\n", 
    "00103b80": "\nvoid freecon(void)\n\n{\n  (*(code *)PTR_freecon_00116f70)();\n  return;\n}\n\n", 
    "00103a60": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t mktime(tm *__tp)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_mktime_00116ee0)();\n  return tVar1;\n}\n\n", 
    "00109810": "\nuint * FUN_00109810(uint *param_1,int param_2)\n\n{\n  int iVar1;\n  uint *puVar2;\n  undefined8 uVar3;\n  \n  puVar2 = (uint *)dcgettext(0,param_1,5);\n  if (param_1 == puVar2) {\n    uVar3 = FUN_0010d560();\n    iVar1 = FUN_00109760(uVar3,0x111b21,0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00109760(uVar3,0x111b27,0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        puVar2 = &UINT_00111b10;\n        if (param_2 != 9) {\n          puVar2 = (uint *)&DAT_001125fc;\n        }\n        return puVar2;\n      }\n      if (*(char *)puVar2 == '`') {\n        puVar2 = (uint *)((long)&UINT_00111b18 + 1);\n      }\n      else {\n        puVar2 = (uint *)((long)&UINT_00111b14 + 2);\n      }\n    }\n    else if (*(char *)puVar2 == '`') {\n      puVar2 = (uint *)((long)&UINT_00111b1c + 1);\n    }\n    else {\n      puVar2 = (uint *)((long)&UINT_00111b10 + 2);\n    }\n  }\n  return puVar2;\n}\n\n", 
    "001091e0": "\nbool FUN_001091e0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0010d3c0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "0010d1f0": "\nulong FUN_0010d1f0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00104380": "\nvoid FUN_00104380(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00104280(param_1,param_2,&DAT_00110fbe,&DAT_0011183b);\n  __printf_chk(1,param_1,param_3);\n  return;\n}\n\n", 
    "0010ae40": "\nundefined8 FUN_0010ae40(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_001172c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00109940(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_0010bac0(lVar3 + 1);\n  FUN_00109940(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "001036b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00116d08)();\n  return piVar1;\n}\n\n", 
    "001037d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_openat_00116d98)();\n  return iVar1;\n}\n\n", 
    "001038f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00116e28)();\n  return iVar1;\n}\n\n", 
    "00103a50": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __fxstat(int __ver,int __fildes,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___fxstat_00116ed8)();\n  return iVar1;\n}\n\n", 
    "00103b70": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_00116f68)();\n  return _Var1;\n}\n\n", 
    "00109940": "\nulong FUN_00109940(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,uint *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  uint *local_98;\n  ulong local_90;\n  uint *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (uint *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00109dc7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00109de9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_0010a386;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = (uint *)&DAT_001125fc;\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00109d3f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00109dc7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00109d3f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = (uint *)&DAT_001125fc;\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = &UINT_00111b10;\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = &UINT_00111b10;\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = &UINT_00111b10;\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (uint *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00109810(0x111b2f,param_5);\n      local_78 = (uint *)FUN_00109810(&DAT_001125fc);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen((char *)local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00109a90:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_0010a2f0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010a28b;\n          goto LAB_0010a07b;\n        default:\nswitchD_0010a1a0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_0010c260(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_0010a578;\n              }\n              if (lVar10 == -2) goto joined_r0x0010a98a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00109f60;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_0010a578;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00109d01;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_0010a248;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_0010a248;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_0010a248:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00109f57;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00109f44;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00109f44:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00109c68;\n          goto LAB_00109f57;\n        case 0x23:\n        case 0x7e:\nLAB_00109f3b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00109f44;\n          goto LAB_00109c65;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_0010a1a0_caseD_25;\n        case 0x27:\nswitchD_0010a1a0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00109c68;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x00109c8b;\n          }\n          goto LAB_00109f60;\n        case 0x3f:\nswitchD_0010a1a0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010a8ee_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00109c68;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x00109c8b;\n          }\n          goto LAB_00109f60;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00109b98_caseD_5c;\n          if (!bVar20) {\nLAB_0010a1d8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_0010a1f0;\n          }\n          goto LAB_00109f60;\n        case 0x7b:\n        case 0x7d:\nswitchD_0010a1a0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00109f3b;\nLAB_00109c65:\n          bVar23 = false;\n          goto LAB_00109c68;\n        }\nLAB_0010a070:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010a07b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00109c88;\n          goto LAB_00109bb0;\n        }\nLAB_0010a0b0:\n        bVar21 = false;\n        goto joined_r0x0010a0c1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_0010a2d0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00109b98_caseD_0;\n          default:\n            goto switchD_0010a1a0_caseD_1;\n          case 7:\n            goto switchD_0010a2f0_caseD_7;\n          case 8:\n            goto switchD_0010a2f0_caseD_8;\n          case 9:\n            goto switchD_00109b98_caseD_9;\n          case 10:\n            goto switchD_0010a2f0_caseD_a;\n          case 0xb:\n            goto switchD_0010a2f0_caseD_b;\n          case 0xc:\n            goto switchD_0010a2f0_caseD_c;\n          case 0xd:\n            goto switchD_0010a2f0_caseD_d;\n          case 0x20:\n            goto LAB_0010a319;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00109b98_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_0010a301;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00109ba8;\n          case 0x27:\n            goto switchD_0010a1a0_caseD_27;\n          case 0x3f:\n            goto switchD_0010a1a0_caseD_3f;\n          case 0x5c:\n            goto switchD_00109b98_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_0010a1a0_caseD_7b;\n          }\n        }\n        goto LAB_00109f6e;\n      }\nLAB_0010a2d0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_0010a2f0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00109b98_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x00109c8b;\n            }\nLAB_0010a72b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010a72b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_0010a768;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x00109c8b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00109f60;\n      default:\n        bVar23 = false;\n        goto switchD_0010a1a0_caseD_1;\n      case 7:\nswitchD_0010a2f0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_0010a2f0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00109b98_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_0010a070;\n      case 10:\nswitchD_0010a2f0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_0010a0b0;\n      case 0xb:\nswitchD_0010a2f0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_0010a0b0;\n      case 0xc:\nswitchD_0010a2f0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_0010a2f0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_0010a0b0;\n      case 0x20:\n        bVar5 = false;\nLAB_0010a319:\n        uVar15 = 0x20;\n        goto LAB_00109ba8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00109b98_caseD_21:\n        bVar22 = false;\n        goto LAB_00109c65;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_0010a301:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00109c68;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00109bb0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00109ba8:\n        bVar22 = false;\n        goto LAB_00109bb0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_0010a1a0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_0010a1a0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00109b98_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_0010a1d8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_0010a070;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_0010a1a0_caseD_7b;\n      }\n      if (bVar20) goto LAB_0010a0d0;\n      bVar21 = false;\n      goto LAB_00109c26;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00109f57:\n      param_5 = 2;\nLAB_00109f60:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00109f6e:\n      uVar13 = FUN_00109940(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00109fa8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_0010a9f5:\n      uVar13 = uVar18;\n      if (((local_98 != (uint *)0x0) && (bVar20)) && (cVar11 = *(char *)local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = *(char *)((long)local_98 + (uVar13 - uVar18));\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00109fa8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00109940(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00109fa8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_0010a9f5;\nLAB_0010a386:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00109de9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = (uint *)&DAT_001125fc;\n  } while( true );\ncode_r0x0010a28b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00109a90;\nswitchD_0010a8ee_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_0010a768:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x00109c8b;\n    goto LAB_00109bb0;\n  }\n  goto LAB_00109f6e;\njoined_r0x0010a98a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_0010a578:\n  if (1 < uVar17) {\nLAB_0010a582:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00109f60;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00109c38;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_0010a1f0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00109d01:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_0010a582;\n  }\nswitchD_0010a1a0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00109c68:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00109bb0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x00109c8b;\n  }\n  else {\nLAB_00109c88:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x00109c8b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_0010a1f0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00109c38;\n    }\n  }\njoined_r0x0010a0c1:\n  if (bVar20) {\nLAB_0010a0d0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00109f60;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00109c26:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00109c38:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00109a90;\n}\n\n", 
    "00103000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00116fe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00116fe0)();\n  }\n  return;\n}\n\n", 
    "00103c45": "\nvoid switchD_001099df::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001038a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getcwd(char *__buf,size_t __size)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getcwd_00116e00)();\n  return pcVar1;\n}\n\n", 
    "001039c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint statfs(char *__file,statfs *__buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_statfs_00116e90)();\n  return iVar1;\n}\n\n", 
    "00103b20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00116f40)();\n  return iVar1;\n}\n\n", 
    "00103a00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00116eb0)();\n  return iVar1;\n}\n\n", 
    "00103c40": "\nvoid FUN_00103c40(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010ecb0": "\nundefined8 FUN_0010ecb0(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  undefined *puVar5;\n  char *pcVar6;\n  undefined8 *puVar7;\n  undefined4 *puVar8;\n  char **ppcVar9;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar8;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar8;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar8 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar8 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar8 + 2;\n        }\n        puVar2[4] = *puVar8;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar7;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppcVar9 = (char **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppcVar9 = *(char ***)(param_1 + 2);\n          *(char ***)(param_1 + 2) = ppcVar9 + 1;\n        }\n        pcVar6 = *ppcVar9;\n        if (pcVar6 == (char *)0x0) {\n          pcVar6 = \"(NULL)\";\n        }\n        *(char **)(puVar2 + 4) = pcVar6;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar7 + 1;\n        }\n        puVar5 = (undefined *)*puVar7;\n        if (puVar5 == (undefined *)0x0) {\n          puVar5 = &DAT_001127d0;\n        }\n        *(undefined **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "0010daa0": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_0010daa0(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_0010db24;\n  }\n  if (DAT_001172f8 < 0) {\n    iVar2 = FUN_0010daa0(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_001172f8 != -1)) goto LAB_0010db24;\nLAB_0010db61:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_0010db24;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_0010daa0(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_0010db24;\n        DAT_001172f8 = -1;\n        __fd = iVar2;\n        goto LAB_0010db61;\n      }\n    }\n    DAT_001172f8 = 1;\n  }\nLAB_0010db24:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104440": "\nvoid FUN_00104440(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00104280(param_1,param_2,&DAT_00110fba,&DAT_00110fd0);\n  __printf_chk(1,param_1,param_3);\n  return;\n}\n\n", 
    "001039b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00116e88)();\n  return iVar1;\n}\n\n", 
    "00103c30": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00116fc8)();\n  return;\n}\n\n", 
    "0010af30": "\nvoid FUN_0010af30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0010ae40(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "00103b10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_00116f38)();\n  return iVar1;\n}\n\n", 
    "0010b980": "\nvoid FUN_0010b980(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010b8f0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106890": "\nchar * FUN_00106890(char *param_1,undefined4 *param_2)\n\n{\n  long lVar1;\n  uint uVar2;\n  int iVar3;\n  uint *puVar4;\n  char *pcVar5;\n  size_t sVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  ulong uVar9;\n  int *piVar10;\n  undefined *puVar11;\n  undefined *puVar13;\n  undefined *puVar14;\n  undefined *puVar15;\n  char *pcVar16;\n  char *__path;\n  long in_FS_OFFSET;\n  undefined local_178 [16];\n  undefined4 local_168;\n  undefined4 uStack_164;\n  undefined4 uStack_160;\n  undefined4 uStack_15c;\n  undefined4 local_158;\n  undefined4 uStack_154;\n  undefined4 uStack_150;\n  undefined4 uStack_14c;\n  undefined4 local_148;\n  undefined4 uStack_144;\n  undefined4 uStack_140;\n  undefined4 uStack_13c;\n  undefined4 local_138;\n  undefined4 uStack_134;\n  undefined4 uStack_130;\n  undefined4 uStack_12c;\n  undefined4 local_128;\n  undefined4 uStack_124;\n  undefined4 uStack_120;\n  undefined4 uStack_11c;\n  undefined4 local_118;\n  undefined4 uStack_114;\n  undefined4 uStack_110;\n  undefined4 uStack_10c;\n  undefined4 local_108;\n  undefined4 uStack_104;\n  undefined4 uStack_100;\n  undefined4 uStack_fc;\n  undefined4 local_f8;\n  undefined4 uStack_f4;\n  undefined4 uStack_f0;\n  undefined4 uStack_ec;\n  undefined local_e8 [16];\n  undefined4 local_d8;\n  undefined4 uStack_d4;\n  undefined4 uStack_d0;\n  undefined4 uStack_cc;\n  undefined4 local_c8;\n  undefined4 uStack_c4;\n  undefined4 uStack_c0;\n  undefined4 uStack_bc;\n  undefined4 local_b8;\n  undefined4 uStack_b4;\n  undefined4 uStack_b0;\n  undefined4 uStack_ac;\n  undefined4 local_a8;\n  undefined4 uStack_a4;\n  undefined4 uStack_a0;\n  undefined4 uStack_9c;\n  undefined4 local_98;\n  undefined4 uStack_94;\n  undefined4 uStack_90;\n  undefined4 uStack_8c;\n  undefined4 local_88;\n  undefined4 uStack_84;\n  undefined4 uStack_80;\n  undefined4 uStack_7c;\n  undefined4 local_78;\n  undefined4 uStack_74;\n  undefined4 uStack_70;\n  undefined4 uStack_6c;\n  undefined4 local_68;\n  undefined4 uStack_64;\n  undefined4 uStack_60;\n  undefined4 uStack_5c;\n  undefined local_58 [16];\n  long local_40;\n  undefined *puVar12;\n  \n  puVar12 = local_178;\n  puVar11 = local_178;\n  puVar15 = local_178;\n  puVar14 = local_178;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = FUN_0010b3d0(local_178);\n  pcVar5 = (char *)(ulong)uVar2;\n  puVar4 = (uint *)__errno_location();\n  if (uVar2 != 0) {\n    pcVar16 = (char *)0x0;\n    uVar7 = dcgettext(0,\"cannot get current directory\",5);\n    error(0,*puVar4,uVar7);\n    goto LAB_00106ba8;\n  }\n  if ((param_2[6] & 0xf000) == 0x4000) {\n    local_168 = *param_2;\n    uStack_164 = param_2[1];\n    uStack_160 = param_2[2];\n    uStack_15c = param_2[3];\n    local_158 = param_2[4];\n    uStack_154 = param_2[5];\n    uStack_150 = param_2[6];\n    uStack_14c = param_2[7];\n    local_148 = param_2[8];\n    uStack_144 = param_2[9];\n    uStack_140 = param_2[10];\n    uStack_13c = param_2[0xb];\n    local_138 = param_2[0xc];\n    uStack_134 = param_2[0xd];\n    uStack_130 = param_2[0xe];\n    uStack_12c = param_2[0xf];\n    local_128 = param_2[0x10];\n    uStack_124 = param_2[0x11];\n    uStack_120 = param_2[0x12];\n    uStack_11c = param_2[0x13];\n    local_118 = param_2[0x14];\n    uStack_114 = param_2[0x15];\n    uStack_110 = param_2[0x16];\n    uStack_10c = param_2[0x17];\n    local_108 = param_2[0x18];\n    uStack_104 = param_2[0x19];\n    uStack_100 = param_2[0x1a];\n    uStack_fc = param_2[0x1b];\n    local_f8 = param_2[0x1c];\n    uStack_f4 = param_2[0x1d];\n    uStack_f0 = param_2[0x1e];\n    uStack_ec = param_2[0x1f];\n    local_e8 = *(undefined (*) [16])(param_2 + 0x20);\n    iVar3 = chdir(param_1);\n    puVar14 = local_178;\n    if (iVar3 < 0) goto LAB_00106c23;\nLAB_00106a5e:\n    puVar13 = puVar14;\n    while( true ) {\n      *(undefined8 *)(puVar13 + -8) = 0x106b36;\n      iVar3 = FUN_0010fbd0(&DAT_00111783,&local_d8);\n      if (iVar3 < 0) break;\n      if ((CONCAT44(uStack_d4,local_d8) != CONCAT44(uStack_164,local_168)) ||\n         (CONCAT44(uStack_cc,uStack_d0) == CONCAT44(uStack_15c,uStack_160))) {\n        *(undefined8 *)(puVar13 + -8) = 0x106b85;\n        pcVar16 = (char *)FUN_0010bd20();\n        goto LAB_00106b88;\n      }\n      *(undefined8 *)(puVar13 + -8) = 0x106aa8;\n      iVar3 = chdir(\"..\");\n      if (iVar3 < 0) {\n        *(undefined8 *)(puVar13 + -8) = 0x106be1;\n        uVar7 = FUN_0010b100(4,&DAT_00111783);\n        pcVar16 = \"cannot change to directory %s\";\n        goto LAB_00106b5e;\n      }\n      local_168 = local_d8;\n      uStack_164 = uStack_d4;\n      uStack_160 = uStack_d0;\n      uStack_15c = uStack_cc;\n      local_158 = local_c8;\n      uStack_154 = uStack_c4;\n      uStack_150 = uStack_c0;\n      uStack_14c = uStack_bc;\n      local_148 = local_b8;\n      uStack_144 = uStack_b4;\n      uStack_140 = uStack_b0;\n      uStack_13c = uStack_ac;\n      local_138 = local_a8;\n      uStack_134 = uStack_a4;\n      uStack_130 = uStack_a0;\n      uStack_12c = uStack_9c;\n      local_128 = local_98;\n      uStack_124 = uStack_94;\n      uStack_120 = uStack_90;\n      uStack_11c = uStack_8c;\n      local_118 = local_88;\n      uStack_114 = uStack_84;\n      uStack_110 = uStack_80;\n      uStack_10c = uStack_7c;\n      local_108 = local_78;\n      uStack_104 = uStack_74;\n      uStack_100 = uStack_70;\n      uStack_fc = uStack_6c;\n      local_f8 = local_68;\n      uStack_f4 = uStack_64;\n      uStack_f0 = uStack_60;\n      uStack_ec = uStack_5c;\n      local_e8 = local_58;\n    }\n    *(undefined8 *)(puVar13 + -8) = 0x106b4f;\n    uVar7 = FUN_0010b100(4,&DAT_00111783);\n    pcVar16 = \"cannot stat %s\";\nLAB_00106b5e:\n    *(undefined8 *)(puVar13 + -8) = 0x106b65;\n    uVar8 = dcgettext(0,pcVar16,5);\n    uVar2 = *puVar4;\n    pcVar16 = (char *)0x0;\n    *(undefined8 *)(puVar13 + -8) = 0x106b7b;\n    error(0,uVar2,uVar8,uVar7);\n  }\n  else {\n    pcVar5 = (char *)FUN_001071e0(param_1);\n    sVar6 = strlen(pcVar5);\n    puVar14 = local_178;\n    while (puVar12 != local_178 + -(sVar6 + 0x18 & 0xfffffffffffff000)) {\n      puVar11 = puVar14 + -0x1000;\n      *(undefined8 *)(puVar14 + -8) = *(undefined8 *)(puVar14 + -8);\n      puVar12 = puVar14 + -0x1000;\n      puVar14 = puVar14 + -0x1000;\n    }\n    uVar9 = (ulong)((uint)(sVar6 + 0x18) & 0xff0);\n    lVar1 = -uVar9;\n    puVar13 = puVar11 + lVar1;\n    puVar15 = puVar11 + lVar1;\n    if (uVar9 != 0) {\n      *(undefined8 *)(puVar11 + -8) = *(undefined8 *)(puVar11 + -8);\n    }\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x106966;\n    param_1 = (char *)memcpy((void *)((ulong)(puVar11 + lVar1 + 0xf) & 0xfffffffffffffff0),pcVar5,\n                             sVar6 + 1);\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x106971;\n    free(pcVar5);\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x106979;\n    iVar3 = chdir(param_1);\n    if (iVar3 < 0) {\nLAB_00106c23:\n      *(undefined8 *)(puVar15 + -8) = 0x106c2d;\n      uVar7 = FUN_0010b100(4,param_1);\n      *(undefined8 *)(puVar15 + -8) = 0x106c43;\n      uVar8 = dcgettext(0,\"cannot change to directory %s\",5);\n      uVar2 = *puVar4;\n      pcVar16 = (char *)0x0;\n      *(undefined8 *)(puVar15 + -8) = 0x106c59;\n      error(0,uVar2,uVar8,uVar7);\n      puVar14 = puVar15;\n      goto LAB_00106ba8;\n    }\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x106994;\n    iVar3 = FUN_0010fbd0(&DAT_00111784,&local_168);\n    puVar14 = puVar11 + lVar1;\n    pcVar5 = param_1;\n    if (-1 < iVar3) goto LAB_00106a5e;\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x1069a9;\n    uVar7 = FUN_0010b100(4,param_1);\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x1069bf;\n    uVar8 = dcgettext(0,\"cannot stat current directory (now %s)\",5);\n    uVar2 = *puVar4;\n    pcVar16 = (char *)0x0;\n    *(undefined8 *)(puVar11 + lVar1 + -8) = 0x1069d5;\n    error(0,uVar2,uVar8,uVar7);\n  }\nLAB_00106b88:\n  uVar2 = *puVar4;\n  *(undefined8 *)(puVar13 + -8) = 0x106b94;\n  iVar3 = FUN_0010b430(local_178);\n  if (iVar3 != 0) {\n    *(undefined8 *)(puVar13 + -8) = 0x106c7b;\n    uVar7 = dcgettext(0,\"failed to return to initial working directory\",5);\n    uVar9 = (ulong)*puVar4;\n    __path = (char *)0x1;\n    *(undefined8 *)(puVar13 + -8) = 0x106c8e;\n    error(1,uVar9,uVar7);\n    *(char **)(puVar13 + -8) = pcVar5;\n    *(undefined **)(puVar13 + -0x10) = local_178;\n    *(uint **)(puVar13 + -0x18) = puVar4;\n    *(char **)(puVar13 + -0x20) = pcVar16;\n    *(undefined **)(puVar13 + -0x28) = &stack0xfffffffffffffff8;\n    *(ulong *)(puVar13 + -0x30) = (ulong)uVar2;\n    sVar6 = uVar9 + 1;\n    if (0x400 < uVar9) {\n      sVar6 = 0x401;\n    }\n    do {\n      *(undefined8 *)(puVar13 + -0x40) = 0x106cd8;\n      pcVar5 = (char *)malloc(sVar6);\n      while( true ) {\n        if (pcVar5 == (char *)0x0) {\n          return (char *)0x0;\n        }\n        *(undefined8 *)(puVar13 + -0x40) = 0x106cee;\n        uVar9 = readlink(__path,pcVar5,sVar6);\n        if ((long)uVar9 < 0) {\n          *(undefined8 *)(puVar13 + -0x40) = 0x106d4d;\n          piVar10 = __errno_location();\n          if (*piVar10 != 0x22) {\n            *(undefined8 *)(puVar13 + -0x40) = 0x106d5c;\n            free(pcVar5);\n            return (char *)0x0;\n          }\n        }\n        if (uVar9 < sVar6) {\n          pcVar5[uVar9] = '\\0';\n          return pcVar5;\n        }\n        *(undefined8 *)(puVar13 + -0x40) = 0x106d03;\n        free(pcVar5);\n        if (0x3fffffffffffffff < sVar6) break;\n        sVar6 = sVar6 * 2;\n        *(undefined8 *)(puVar13 + -0x40) = 0x106d13;\n        pcVar5 = (char *)malloc(sVar6);\n      }\n      if (0x7ffffffffffffffe < sVar6) {\n        *(undefined8 *)(puVar13 + -0x40) = 0x106d75;\n        piVar10 = __errno_location();\n        *piVar10 = 0xc;\n        return (char *)0x0;\n      }\n      sVar6 = 0x7fffffffffffffff;\n    } while( true );\n  }\n  *(undefined8 *)(puVar13 + -8) = 0x106ba4;\n  FUN_0010b460(local_178);\n  *puVar4 = uVar2;\n  puVar14 = puVar13;\nLAB_00106ba8:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar14 + -8) = 0x106c68;\n    __stack_chk_fail();\n  }\n  return pcVar16;\n}\n\n", 
    "001180e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00116cc8)();\n  return;\n}\n\n", 
    "00105560": "\nuint FUN_00105560(char *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  int iVar2;\n  uint uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  undefined8 uVar6;\n  long in_FS_OFFSET;\n  undefined auStack_c8 [24];\n  uint local_b0;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*param_1 == '-') && (param_1[1] == '\\0')) {\n    iVar1 = FUN_0010fbf0(0,auStack_c8);\n    if (iVar1 != 0) {\n      uVar4 = dcgettext(0,\"cannot stat standard input\",5);\n      piVar5 = __errno_location();\n      error(0,*piVar5,uVar4);\n      uVar3 = 0;\n      goto LAB_00105629;\n    }\n  }\n  else {\n    if (DAT_001171a1 == '\\0') {\n      iVar2 = FUN_0010fc10(param_1,auStack_c8);\n    }\n    else {\n      iVar2 = FUN_0010fbd0(param_1,auStack_c8);\n    }\n    iVar1 = -1;\n    if (iVar2 != 0) {\n      uVar4 = FUN_0010b100(4,param_1);\n      uVar6 = dcgettext(0,\"cannot stat %s\",5);\n      piVar5 = __errno_location();\n      error(0,*piVar5,uVar6,uVar4);\n      uVar3 = 0;\n      goto LAB_00105629;\n    }\n  }\n  if ((local_b0 & 0xb000) == 0x2000) {\n    param_2 = param_3;\n  }\n  uVar3 = FUN_00105120(param_2,iVar1,param_1,FUN_00105ed0,auStack_c8);\n  uVar3 = uVar3 ^ 1;\nLAB_00105629:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar3;\n}\n\n", 
    "0010d2c0": "\nbool FUN_0010d2c0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010c2f0": "\nvoid FUN_0010c2f0(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  char *pcVar3;\n  ulong uVar4;\n  \n  sVar2 = strlen(param_1);\n  uVar4 = 0;\n  pcVar3 = param_1;\n  do {\n    uVar1 = uVar4 + 1;\n    if ((((param_1[uVar4] == '\\\\') && (uVar4 + 4 < sVar2 + 1)) &&\n        ((byte)(param_1[uVar1] - 0x30U) < 4)) &&\n       (((byte)(param_1[uVar4 + 2] - 0x30U) < 8 && ((byte)(param_1[uVar4 + 3] - 0x30U) < 8)))) {\n      *pcVar3 = param_1[uVar4 + 3] + 'P' + (param_1[uVar4 + 2] + param_1[uVar1] * '\\b') * '\\b';\n      uVar4 = uVar4 + 4;\n    }\n    else {\n      *pcVar3 = param_1[uVar4];\n      uVar4 = uVar1;\n      if (sVar2 + 1 <= uVar1) {\n        return;\n      }\n    }\n    pcVar3 = pcVar3 + 1;\n  } while( true );\n}\n\n", 
    "001038c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_00116e10)();\n  return iVar1;\n}\n\n", 
    "001039e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_00116ea0)();\n  return iVar1;\n}\n\n", 
    "001180e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00116d80)();\n  return sVar1;\n}\n\n", 
    "00106f30": "\nvoid FUN_00106f30(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = FUN_0010b3c0(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = FUN_0010b3c0(lVar1);\n      __fprintf_chk(stderr,1,&DAT_00111838,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "00103b40": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unsetenv(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unsetenv_00116f50)();\n  return iVar1;\n}\n\n", 
    "00103a20": "\nvoid setmntent(void)\n\n{\n  (*(code *)PTR_setmntent_00116ec0)();\n  return;\n}\n\n", 
    "0010bae0": "\nvoid FUN_0010bae0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_0010bac0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010bce0();\n}\n\n", 
    "00103c4f": "\nvoid FUN_00103c4f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010eed0": "\nundefined8 FUN_0010eed0(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_0010ef4b:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_0010f020:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_0010f077;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_0010f020;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = FUN_0010da30(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_0010f020;\n  }\n  goto switchD_0010f102_caseD_26;\nLAB_0010f077:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_0010f08b:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_0010f094;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_0010f094;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0010f26c;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = FUN_0010da30(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_0010f102_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0010f26c:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_0010f102_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_0010f287:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_0010f094:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x0010f0f1;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_0010f094;\n      }\n      goto LAB_0010f476;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)FUN_0010da30(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010f8da;\nLAB_0010faaa:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010f9de:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010f287;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010faaa;\n        goto LAB_0010f9de;\n      }\n      goto LAB_0010fadf;\n    }\n    goto LAB_0010fae3;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_0010f2fe;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = FUN_0010da30(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_0010f102_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_0010f2fe:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_0010f102_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_0010f39e:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_0010f476;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_0010f08b;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)FUN_0010da30(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_0010fae3;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_0010f921;\n      goto LAB_0010f39a;\n    }\n    goto LAB_0010fae3;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_0010f921:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_0010f39a:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_0010f39e;\n  }\n  goto LAB_0010f8da;\ncode_r0x0010f0f1:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_0010f102_caseD_25;\n  default:\n    goto switchD_0010f102_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_0010f102_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_0010f476;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_0010f14b:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_0010f476:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_0010f102_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_0010ef4b;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_0010fadf:\n      __src = (byte **)param_3[1];\n      goto LAB_0010fae3;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_0010f218;\n        goto LAB_0010f7aa;\n      }\n      goto LAB_0010fadf;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_0010f7aa:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_0010f218:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_0010ef4b;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_0010f8ea;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)FUN_0010da30(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0010f8da;\nLAB_0010f761:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_0010f718:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_0010f14b;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_0010f761;\n        goto LAB_0010f718;\n      }\n      goto LAB_0010fadf;\n    }\nLAB_0010fae3:\n    if (ppbVar2 == __src) goto LAB_0010f8da;\n  }\n  free(__src);\nLAB_0010f8da:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_0010f8ea:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "00104100": "\nundefined8 FUN_00104100(char param_1,char param_2,char param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  void *pvVar3;\n  void *__ptr;\n  void *__ptr_00;\n  char *pcVar4;\n  \n  if (param_1 != '\\0') {\n    if (param_2 != '\\0') {\n      uVar2 = FUN_0010bcc0(\"%n %i %l %t %s %S %b %f %a %c %d\\n\");\n      return uVar2;\n    }\n    uVar2 = dcgettext(0,\n                      \"  File: \\\"%n\\\"\\n    ID: %-8i Namelen: %-7l Type: %T\\nBlock size: %-10s Fundamental block size: %S\\nBlocks: Total: %-10b Free: %-10f Available: %a\\nInodes: Total: %-10c Free: %d\\n\"\n                      ,5);\n    uVar2 = FUN_0010bcc0(uVar2);\n    return uVar2;\n  }\n  if (param_2 == '\\0') {\n    uVar2 = dcgettext(0,\"  File: %N\\n  Size: %-10s\\tBlocks: %-10b IO Block: %-6o %F\\n\",5);\n    pvVar3 = (void *)FUN_0010bcc0(uVar2);\n    pcVar4 = \"Device: %Dh/%dd\\tInode: %-10i  Links: %-5h Device type: %t,%T\\n\";\n    if (param_3 == '\\0') {\n      pcVar4 = \"Device: %Dh/%dd\\tInode: %-10i  Links: %h\\n\";\n    }\n    uVar2 = dcgettext(0,pcVar4,5);\n    __ptr = (void *)FUN_0010bd50(&DAT_00110fa5,pvVar3,uVar2);\n    free(pvVar3);\n    uVar2 = dcgettext(0,\"Access: (%04a/%10.10A)  Uid: (%5u/%8U)   Gid: (%5g/%8G)\\n\",5);\n    __ptr_00 = (void *)FUN_0010bd50(&DAT_00110fa5,__ptr,uVar2);\n    free(__ptr);\n    iVar1 = is_selinux_enabled();\n    pvVar3 = __ptr_00;\n    if (0 < iVar1) {\n      uVar2 = dcgettext(0,\"Context: %C\\n\",5);\n      pvVar3 = (void *)FUN_0010bd50(&DAT_00110fa5,__ptr_00,uVar2);\n      free(__ptr_00);\n    }\n    uVar2 = dcgettext(0,\"Access: %x\\nModify: %y\\nChange: %z\\n Birth: %w\\n\",5);\n    uVar2 = FUN_0010bd50(&DAT_00110fa5,pvVar3,uVar2);\n    free(pvVar3);\n    return uVar2;\n  }\n  iVar1 = is_selinux_enabled();\n  if (0 < iVar1) {\n    uVar2 = FUN_0010bcc0(\"%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o %C\\n\");\n    return uVar2;\n  }\n  uVar2 = FUN_0010bcc0(\"%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o\\n\");\n  return uVar2;\n}\n\n", 
    "00103c4a": "\nvoid FUN_00103c4a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104340": "\nvoid FUN_00104340(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00104280(param_1,param_2,&DAT_00110fba,&DAT_00110fb7);\n  __printf_chk(1,param_1,param_3);\n  return;\n}\n\n", 
    "0010d900": "\nint FUN_0010d900(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001180f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d2d0": "\nulong FUN_0010d2d0(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001039d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_00116e98)();\n  return iVar1;\n}\n\n", 
    "00103c59": "\nvoid switchD_0010e174::caseD_5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * canonicalize_file_name(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_canonicalize_file_name_00116e08)();\n  return pcVar1;\n}\n\n", 
    "001180f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c54": "\nvoid switchD_0010b528::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103a10": "\nvoid getmntent(void)\n\n{\n  (*(code *)PTR_getmntent_00116eb8)();\n  return;\n}\n\n", 
    "00103b30": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_00116f48)();\n  return pFVar1;\n}\n\n", 
    "001180c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001181e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103680": "\nvoid endmntent(void)\n\n{\n  (*(code *)PTR_endmntent_00116cf0)();\n  return;\n}\n\n", 
    "0010d3c0": "\nint FUN_0010d3c0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_0010d380(*param_1);\n      bVar2 = FUN_0010d380(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "001180c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001181e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b1e0": "\nvoid FUN_0010b1e0(undefined8 param_1)\n\n{\n  FUN_0010b1c0(param_1,0x3a);\n  return;\n}\n\n", 
    "0010d2a0": "\nbool FUN_0010d2a0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "00103c00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strstr(char *__haystack,char *__needle)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strstr_00116fb0)();\n  return pcVar1;\n}\n\n", 
    "0010bac0": "\nvoid FUN_0010bac0(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010bce0();\n  }\n  return;\n}\n\n", 
    "001180d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint chdir(char *__path)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104400": "\nvoid FUN_00104400(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00104280(param_1,param_2,\"\\'-+ 0\",&DAT_00110fc7);\n  __printf_chk(1,param_1,param_3);\n  return;\n}\n\n", 
    "001094e0": "\nundefined8\nFUN_001094e0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00109430(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00103670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00116ce8)();\n  return;\n}\n\n", 
    "001181f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103790": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00116d78)();\n  return;\n}\n\n", 
    "0010d2b0": "\nbool FUN_0010d2b0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001180d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint openat(int __fd,char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b1f0": "\nvoid FUN_0010b1f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010b130(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "001181f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010cce0": "\nbool FUN_0010cce0(long param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = param_1 + 9;\n  if (*(char *)(param_1 + 8) == '\\0') {\n    lVar2 = 0;\n  }\n  iVar1 = FUN_0010ccb0(lVar2);\n  if (iVar1 == 0) {\n    tzset();\n  }\n  return iVar1 == 0;\n}\n\n", 
    "00107700": "\nlong FUN_00107700(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_toupper_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n", 
    "001182e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001180a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001181c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid tzset(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001182e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001039a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid tzset(void)\n\n{\n  (*(code *)PTR_tzset_00116e80)();\n  return;\n}\n\n", 
    "0010b1c0": "\nvoid FUN_0010b1c0(undefined8 param_1,char param_2)\n\n{\n  FUN_0010b130(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "001180a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwuid(__uid_t __uid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001181c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getfilecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d3a0": "\nint FUN_0010d3a0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "00103b00": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memrchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memrchr_00116f30)();\n  return pvVar1;\n}\n\n", 
    "00103c20": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00116fc0)();\n  return ppuVar1;\n}\n\n", 
    "0010bce0": "\nvoid FUN_0010bce0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00117028,0,&DAT_0011183a,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001071e0": "\nvoid FUN_001071e0(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00107240();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010bce0();\n}\n\n", 
    "0010ccb0": "\nvoid FUN_0010ccb0(char *param_1)\n\n{\n  if (param_1 != (char *)0x0) {\n    setenv(\"TZ\",param_1,1);\n    return;\n  }\n  unsetenv(\"TZ\");\n  return;\n}\n\n", 
    "001181d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint statfs(char *__file,statfs *__buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106600": "\nvoid FUN_00106600(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  undefined8 uVar4;\n  \n  uVar4 = DAT_001171b8;\n  if (param_1 == 0) {\n    uVar2 = dcgettext(0,\"Usage: %s [OPTION]... FILE...\\n\",5);\n    __printf_chk(1,uVar2,uVar4);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"Display file or file system status.\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    FUN_00104030();\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -L, --dereference     follow links\\n  -f, --file-system     display file system status instead of file status\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  -c  --format=FORMAT   use the specified FORMAT instead of the default;\\n                          output a newline after each use of FORMAT\\n      --printf=FORMAT   like --format, but interpret backslash escapes,\\n                          and do not output a mandatory trailing newline;\\n                          if you want a newline, include \\\\n in FORMAT\\n  -t, --terse           print the information in terse form\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"\\nThe valid format sequences for files (without --file-system):\\n\\n  %a   access rights in octal (note \\'#\\' and \\'0\\' printf flags)\\n  %A   access rights in human readable form\\n  %b   number of blocks allocated (see %B)\\n  %B   the size in bytes of each block reported by %b\\n  %C   SELinux security context string\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  %d   device number in decimal\\n  %D   device number in hex\\n  %f   raw mode in hex\\n  %F   file type\\n  %g   group ID of owner\\n  %G   group name of owner\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  %h   number of hard links\\n  %i   inode number\\n  %m   mount point\\n  %n   file name\\n  %N   quoted file name with dereference if symbolic link\\n  %o   optimal I/O transfer size hint\\n  %s   total size, in bytes\\n  %t   major device type in hex, for character/block device special files\\n  %T   minor device type in hex, for character/block device special files\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  %u   user ID of owner\\n  %U   user name of owner\\n  %w   time of file birth, human-readable; - if unknown\\n  %W   time of file birth, seconds since Epoch; 0 if unknown\\n  %x   time of last access, human-readable\\n  %X   time of last access, seconds since Epoch\\n  %y   time of last data modification, human-readable\\n  %Y   time of last data modification, seconds since Epoch\\n  %z   time of last status change, human-readable\\n  %Z   time of last status change, seconds since Epoch\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"Valid format sequences for file systems:\\n\\n  %a   free blocks available to non-superuser\\n  %b   total data blocks in file system\\n  %c   total file nodes in file system\\n  %d   free file nodes in file system\\n  %f   free blocks in file system\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    pFVar1 = stdout;\n    pcVar3 = (char *)dcgettext(0,\n                               \"  %i   file system ID in hex\\n  %l   maximum length of filenames\\n  %n   file name\\n  %s   block size (for faster transfers)\\n  %S   fundamental block size (for block counts)\\n  %t   file system type in hex\\n  %T   file system type in human readable form\\n\"\n                               ,5);\n    fputs_unlocked(pcVar3,pFVar1);\n    uVar4 = dcgettext(0,\"\\n--terse is equivalent to the following FORMAT:\\n    %s\",5);\n    __printf_chk(1,uVar4,\"%n %s %b %f %u %g %D %i %h %t %T %X %Y %Z %W %o %C\\n\");\n    uVar4 = dcgettext(0,\"--terse --file-system is equivalent to the following FORMAT:\\n    %s\",5);\n    __printf_chk(1,uVar4,\"%n %i %l %t %s %S %b %f %a %c %d\\n\");\n    uVar4 = dcgettext(0,\n                      \"\\nNOTE: your shell may have its own version of %s, which usually supersedes\\nthe version described here.  Please refer to your shell\\'s documentation\\nfor details about the options it supports.\\n\"\n                      ,5);\n    __printf_chk(1,uVar4,&DAT_00111382);\n    FUN_00106360();\n  }\n  else {\n    uVar2 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar2,uVar4);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001182f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulonglong gnu_dev_makedev(uint __major,uint __minor)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001180b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103690": "\nvoid is_selinux_enabled(void)\n\n{\n  (*(code *)PTR_is_selinux_enabled_00116cf8)();\n  return;\n}\n\n", 
    "001181d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c3e0": "\nbyte * FUN_0010c3e0(void)\n\n{\n  byte **ppbVar1;\n  undefined8 uVar2;\n  uint uVar3;\n  int iVar4;\n  FILE *__stream;\n  __ssize_t _Var5;\n  char *pcVar6;\n  byte **ppbVar7;\n  byte *pbVar8;\n  byte *pbVar9;\n  undefined8 *puVar10;\n  byte *pbVar11;\n  int *piVar12;\n  long lVar13;\n  long lVar14;\n  byte *pbVar15;\n  byte *pbVar16;\n  long in_FS_OFFSET;\n  undefined uVar17;\n  bool bVar18;\n  bool bVar19;\n  undefined uVar20;\n  bool bVar21;\n  bool bVar22;\n  byte bVar23;\n  byte **local_98;\n  undefined local_81;\n  uint local_80;\n  uint local_7c;\n  int local_78;\n  int local_74;\n  int local_70;\n  int local_6c;\n  int local_68;\n  int local_64;\n  int local_60;\n  int local_5c;\n  byte *local_58;\n  char *local_50;\n  size_t local_48;\n  long local_40;\n  \n  bVar23 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __stream = fopen(\"/proc/self/mountinfo\",\"r\");\n  if (__stream == (FILE *)0x0) {\n    pbVar8 = (byte *)setmntent(\"/etc/mtab\",\"r\");\n    if (pbVar8 == (byte *)0x0) goto LAB_0010c69b;\n    local_98 = &local_58;\n    puVar10 = (undefined8 *)getmntent(pbVar8);\n    while (puVar10 != (undefined8 *)0x0) {\n      lVar13 = hasmntopt(puVar10,&DAT_001126a4);\n      ppbVar7 = (byte **)FUN_0010bac0(0x38);\n      pbVar11 = (byte *)FUN_0010bcc0(*puVar10);\n      uVar2 = puVar10[1];\n      *ppbVar7 = pbVar11;\n      pbVar11 = (byte *)FUN_0010bcc0(uVar2);\n      ppbVar7[2] = (byte *)0x0;\n      uVar2 = puVar10[2];\n      bVar22 = true;\n      ppbVar7[1] = pbVar11;\n      pbVar11 = (byte *)FUN_0010bcc0(uVar2);\n      lVar14 = 7;\n      ppbVar1 = ppbVar7 + 5;\n      bVar18 = false;\n      *(byte *)ppbVar1 = *(byte *)ppbVar1 | 4;\n      bVar21 = *(byte *)ppbVar1 == 0;\n      ppbVar7[3] = pbVar11;\n      pbVar15 = pbVar11;\n      pbVar9 = (byte *)\"autofs\";\n      do {\n        if (lVar14 == 0) break;\n        lVar14 = lVar14 + -1;\n        bVar18 = *pbVar15 < *pbVar9;\n        bVar21 = *pbVar15 == *pbVar9;\n        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n      } while (bVar21);\n      bVar19 = false;\n      bVar18 = (!bVar18 && !bVar21) == bVar18;\n      if (!bVar18) {\n        lVar14 = 5;\n        pbVar15 = pbVar11;\n        pbVar9 = &DAT_00111143;\n        do {\n          if (lVar14 == 0) break;\n          lVar14 = lVar14 + -1;\n          bVar19 = *pbVar15 < *pbVar9;\n          bVar18 = *pbVar15 == *pbVar9;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n        } while (bVar18);\n        bVar21 = false;\n        bVar18 = (!bVar19 && !bVar18) == bVar19;\n        if (!bVar18) {\n          lVar14 = 6;\n          pbVar15 = pbVar11;\n          pbVar9 = (byte *)\"subfs\";\n          do {\n            if (lVar14 == 0) break;\n            lVar14 = lVar14 + -1;\n            bVar21 = *pbVar15 < *pbVar9;\n            bVar18 = *pbVar15 == *pbVar9;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar18);\n          bVar19 = false;\n          bVar18 = (!bVar21 && !bVar18) == bVar21;\n          if (!bVar18) {\n            lVar14 = 8;\n            pbVar15 = pbVar11;\n            pbVar9 = (byte *)\"debugfs\";\n            do {\n              if (lVar14 == 0) break;\n              lVar14 = lVar14 + -1;\n              bVar19 = *pbVar15 < *pbVar9;\n              bVar18 = *pbVar15 == *pbVar9;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n              pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n            } while (bVar18);\n            bVar21 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar14 = 7;\n              pbVar15 = pbVar11;\n              pbVar9 = (byte *)\"devpts\";\n              do {\n                if (lVar14 == 0) break;\n                lVar14 = lVar14 + -1;\n                bVar21 = *pbVar15 < *pbVar9;\n                bVar18 = *pbVar15 == *pbVar9;\n                pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar21 && !bVar18) == bVar21;\n              if (!bVar18) {\n                lVar14 = 8;\n                pbVar15 = pbVar11;\n                pbVar9 = (byte *)\"fusectl\";\n                do {\n                  if (lVar14 == 0) break;\n                  lVar14 = lVar14 + -1;\n                  bVar19 = *pbVar15 < *pbVar9;\n                  bVar18 = *pbVar15 == *pbVar9;\n                  pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                  pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                } while (bVar18);\n                bVar21 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar14 = 7;\n                  pbVar15 = pbVar11;\n                  pbVar9 = (byte *)\"mqueue\";\n                  do {\n                    if (lVar14 == 0) break;\n                    lVar14 = lVar14 + -1;\n                    bVar21 = *pbVar15 < *pbVar9;\n                    bVar18 = *pbVar15 == *pbVar9;\n                    pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                    pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar21 && !bVar18) == bVar21;\n                  if (!bVar18) {\n                    lVar14 = 0xb;\n                    pbVar15 = pbVar11;\n                    pbVar9 = (byte *)\"rpc_pipefs\";\n                    do {\n                      if (lVar14 == 0) break;\n                      lVar14 = lVar14 + -1;\n                      bVar19 = *pbVar15 < *pbVar9;\n                      bVar18 = *pbVar15 == *pbVar9;\n                      pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                      pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                    } while (bVar18);\n                    bVar21 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar14 = 6;\n                      pbVar15 = pbVar11;\n                      pbVar9 = (byte *)\"sysfs\";\n                      do {\n                        if (lVar14 == 0) break;\n                        lVar14 = lVar14 + -1;\n                        bVar21 = *pbVar15 < *pbVar9;\n                        bVar18 = *pbVar15 == *pbVar9;\n                        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                        pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar21 && !bVar18) == bVar21;\n                      if (!bVar18) {\n                        lVar14 = 6;\n                        pbVar15 = pbVar11;\n                        pbVar9 = (byte *)\"devfs\";\n                        do {\n                          if (lVar14 == 0) break;\n                          lVar14 = lVar14 + -1;\n                          bVar19 = *pbVar15 < *pbVar9;\n                          bVar18 = *pbVar15 == *pbVar9;\n                          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                        } while (bVar18);\n                        bVar21 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar14 = 7;\n                          pbVar15 = pbVar11;\n                          pbVar9 = (byte *)\"kernfs\";\n                          do {\n                            if (lVar14 == 0) break;\n                            lVar14 = lVar14 + -1;\n                            bVar21 = *pbVar15 < *pbVar9;\n                            bVar18 = *pbVar15 == *pbVar9;\n                            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n                          } while (bVar18);\n                          if (((!bVar21 && !bVar18) != bVar21) &&\n                             (iVar4 = strcmp((char *)pbVar11,\"ignore\"), iVar4 != 0)) {\n                            iVar4 = strcmp((char *)pbVar11,\"none\");\n                            bVar22 = lVar13 == 0 && iVar4 == 0;\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      pbVar15 = *ppbVar7;\n      *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfe | bVar22;\n      pcVar6 = strchr((char *)pbVar15,0x3a);\n      bVar22 = true;\n      if (pcVar6 != (char *)0x0) goto LAB_0010ca8f;\n      bVar18 = *pbVar15 < 0x2f;\n      bVar21 = *pbVar15 == 0x2f;\n      if (bVar21) {\n        bVar18 = pbVar15[1] < 0x2f;\n        bVar21 = pbVar15[1] == 0x2f;\n        if (!bVar21) goto LAB_0010cb32;\n        lVar13 = 6;\n        pbVar9 = pbVar11;\n        pbVar16 = &DAT_0011268d;\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar9 < *pbVar16;\n          bVar21 = *pbVar9 == *pbVar16;\n          pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          pbVar16 = pbVar16 + (ulong)bVar23 * -2 + 1;\n        } while (bVar21);\n        bVar19 = false;\n        bVar21 = (!bVar18 && !bVar21) == bVar18;\n        if (!bVar21) {\n          lVar13 = 5;\n          pbVar9 = &DAT_001112b7;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar19 = *pbVar11 < *pbVar9;\n            bVar21 = *pbVar11 == *pbVar9;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar18 = false;\n          bVar21 = (!bVar19 && !bVar21) == bVar19;\n          if (!bVar21) goto LAB_0010cb32;\n        }\n      }\n      else {\nLAB_0010cb32:\n        lVar13 = 7;\n        pbVar11 = (byte *)\"-hosts\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          bVar18 = *pbVar11 < *pbVar15;\n          bVar21 = *pbVar11 == *pbVar15;\n          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        } while (bVar21);\n        bVar22 = (!bVar18 && !bVar21) == bVar18;\n      }\nLAB_0010ca8f:\n      *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfd | bVar22 * '\\x02';\n      pbVar11 = (byte *)FUN_0010c380();\n      ppbVar7[4] = pbVar11;\n      *local_98 = (byte *)ppbVar7;\n      local_98 = ppbVar7 + 6;\n      puVar10 = (undefined8 *)getmntent(pbVar8);\n    }\n    iVar4 = endmntent(pbVar8);\n    if (iVar4 != 0) goto LAB_0010c68b;\nLAB_0010cada:\n    piVar12 = __errno_location();\n    iVar4 = *piVar12;\n  }\n  else {\n    local_98 = &local_58;\n    local_50 = (char *)0x0;\n    local_48 = 0;\n    while (_Var5 = getline(&local_50,&local_48,__stream), _Var5 != -1) {\n      uVar3 = __isoc99_sscanf(local_50,\"%*u %*u %u:%u %n%*s%n %n%*s%n%c\",&local_80,&local_7c,\n                              &local_60,&local_5c,&local_78,&local_74,&local_81);\n      if ((((uVar3 & 0xfffffffb) == 3) &&\n          (pcVar6 = strstr(local_50 + local_74,\" - \"), pcVar6 != (char *)0x0)) &&\n         (uVar3 = __isoc99_sscanf(pcVar6,\" - %n%*s%n %n%*s%n %c\",&local_70,&local_6c,&local_68,\n                                  &local_64,&local_81), (uVar3 & 0xfffffffb) == 1)) {\n        local_50[local_5c] = '\\0';\n        local_50[local_74] = '\\0';\n        pcVar6[local_6c] = '\\0';\n        pcVar6[local_64] = '\\0';\n        FUN_0010c2f0(pcVar6 + local_68);\n        FUN_0010c2f0(local_50 + local_78);\n        FUN_0010c2f0(local_50 + local_60);\n        ppbVar7 = (byte **)FUN_0010bac0(0x38);\n        pbVar8 = (byte *)FUN_0010bcc0(pcVar6 + local_68);\n        *ppbVar7 = pbVar8;\n        pbVar8 = (byte *)FUN_0010bcc0(local_50 + local_78);\n        ppbVar7[1] = pbVar8;\n        pbVar8 = (byte *)FUN_0010bcc0(local_50 + local_60);\n        ppbVar7[2] = pbVar8;\n        bVar22 = true;\n        pbVar8 = (byte *)FUN_0010bcc0(pcVar6 + local_70);\n        ppbVar1 = ppbVar7 + 5;\n        uVar17 = 0;\n        *(byte *)ppbVar1 = *(byte *)ppbVar1 | 4;\n        uVar20 = *(char *)ppbVar1 == '\\0';\n        ppbVar7[3] = pbVar8;\n        pbVar9 = (byte *)gnu_dev_makedev(local_80,local_7c);\n        lVar13 = 7;\n        pbVar11 = pbVar8;\n        pbVar15 = (byte *)\"autofs\";\n        do {\n          if (lVar13 == 0) break;\n          lVar13 = lVar13 + -1;\n          uVar17 = *pbVar11 < *pbVar15;\n          uVar20 = *pbVar11 == *pbVar15;\n          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n        } while ((bool)uVar20);\n        ppbVar7[4] = pbVar9;\n        bVar18 = false;\n        bVar21 = (!(bool)uVar17 && !(bool)uVar20) == (bool)uVar17;\n        if (!bVar21) {\n          lVar13 = 5;\n          pbVar11 = pbVar8;\n          pbVar15 = &DAT_00111143;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar11 < *pbVar15;\n            bVar21 = *pbVar11 == *pbVar15;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar19 = false;\n          bVar18 = (!bVar18 && !bVar21) == bVar18;\n          if (!bVar18) {\n            lVar13 = 6;\n            pbVar11 = pbVar8;\n            pbVar15 = (byte *)\"subfs\";\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar11 < *pbVar15;\n              bVar18 = *pbVar11 == *pbVar15;\n              pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            } while (bVar18);\n            bVar21 = false;\n            bVar18 = (!bVar19 && !bVar18) == bVar19;\n            if (!bVar18) {\n              lVar13 = 8;\n              pbVar11 = pbVar8;\n              pbVar15 = (byte *)\"debugfs\";\n              do {\n                if (lVar13 == 0) break;\n                lVar13 = lVar13 + -1;\n                bVar21 = *pbVar11 < *pbVar15;\n                bVar18 = *pbVar11 == *pbVar15;\n                pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n              } while (bVar18);\n              bVar19 = false;\n              bVar18 = (!bVar21 && !bVar18) == bVar21;\n              if (!bVar18) {\n                lVar13 = 7;\n                pbVar11 = pbVar8;\n                pbVar15 = (byte *)\"devpts\";\n                do {\n                  if (lVar13 == 0) break;\n                  lVar13 = lVar13 + -1;\n                  bVar19 = *pbVar11 < *pbVar15;\n                  bVar18 = *pbVar11 == *pbVar15;\n                  pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                  pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                } while (bVar18);\n                bVar21 = false;\n                bVar18 = (!bVar19 && !bVar18) == bVar19;\n                if (!bVar18) {\n                  lVar13 = 8;\n                  pbVar11 = pbVar8;\n                  pbVar15 = (byte *)\"fusectl\";\n                  do {\n                    if (lVar13 == 0) break;\n                    lVar13 = lVar13 + -1;\n                    bVar21 = *pbVar11 < *pbVar15;\n                    bVar18 = *pbVar11 == *pbVar15;\n                    pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                    pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                  } while (bVar18);\n                  bVar19 = false;\n                  bVar18 = (!bVar21 && !bVar18) == bVar21;\n                  if (!bVar18) {\n                    lVar13 = 7;\n                    pbVar11 = pbVar8;\n                    pbVar15 = (byte *)\"mqueue\";\n                    do {\n                      if (lVar13 == 0) break;\n                      lVar13 = lVar13 + -1;\n                      bVar19 = *pbVar11 < *pbVar15;\n                      bVar18 = *pbVar11 == *pbVar15;\n                      pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                      pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                    } while (bVar18);\n                    bVar21 = false;\n                    bVar18 = (!bVar19 && !bVar18) == bVar19;\n                    if (!bVar18) {\n                      lVar13 = 0xb;\n                      pbVar11 = pbVar8;\n                      pbVar15 = (byte *)\"rpc_pipefs\";\n                      do {\n                        if (lVar13 == 0) break;\n                        lVar13 = lVar13 + -1;\n                        bVar21 = *pbVar11 < *pbVar15;\n                        bVar18 = *pbVar11 == *pbVar15;\n                        pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                        pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                      } while (bVar18);\n                      bVar19 = false;\n                      bVar18 = (!bVar21 && !bVar18) == bVar21;\n                      if (!bVar18) {\n                        lVar13 = 6;\n                        pbVar11 = pbVar8;\n                        pbVar15 = (byte *)\"sysfs\";\n                        do {\n                          if (lVar13 == 0) break;\n                          lVar13 = lVar13 + -1;\n                          bVar19 = *pbVar11 < *pbVar15;\n                          bVar18 = *pbVar11 == *pbVar15;\n                          pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                          pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                        } while (bVar18);\n                        bVar21 = false;\n                        bVar18 = (!bVar19 && !bVar18) == bVar19;\n                        if (!bVar18) {\n                          lVar13 = 6;\n                          pbVar11 = pbVar8;\n                          pbVar15 = (byte *)\"devfs\";\n                          do {\n                            if (lVar13 == 0) break;\n                            lVar13 = lVar13 + -1;\n                            bVar21 = *pbVar11 < *pbVar15;\n                            bVar18 = *pbVar11 == *pbVar15;\n                            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                          } while (bVar18);\n                          bVar19 = false;\n                          bVar18 = (!bVar21 && !bVar18) == bVar21;\n                          if (!bVar18) {\n                            lVar13 = 7;\n                            pbVar11 = pbVar8;\n                            pbVar15 = (byte *)\"kernfs\";\n                            do {\n                              if (lVar13 == 0) break;\n                              lVar13 = lVar13 + -1;\n                              bVar19 = *pbVar11 < *pbVar15;\n                              bVar18 = *pbVar11 == *pbVar15;\n                              pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n                              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n                            } while (bVar18);\n                            if (((!bVar19 && !bVar18) != bVar19) &&\n                               (iVar4 = strcmp((char *)pbVar8,\"ignore\"), iVar4 != 0)) {\n                              iVar4 = strcmp((char *)pbVar8,\"none\");\n                              bVar22 = iVar4 == 0;\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        pbVar11 = *ppbVar7;\n        *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfe | bVar22;\n        pcVar6 = strchr((char *)pbVar11,0x3a);\n        bVar22 = true;\n        if (pcVar6 != (char *)0x0) goto LAB_0010c639;\n        bVar18 = *pbVar11 < 0x2f;\n        bVar21 = *pbVar11 == 0x2f;\n        if (bVar21) {\n          bVar18 = pbVar11[1] < 0x2f;\n          bVar21 = pbVar11[1] == 0x2f;\n          if (!bVar21) goto LAB_0010c819;\n          lVar13 = 6;\n          pbVar15 = pbVar8;\n          pbVar9 = &DAT_0011268d;\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar15 < *pbVar9;\n            bVar21 = *pbVar15 == *pbVar9;\n            pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            pbVar9 = pbVar9 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar19 = false;\n          bVar21 = (!bVar18 && !bVar21) == bVar18;\n          if (!bVar21) {\n            lVar13 = 5;\n            pbVar15 = &DAT_001112b7;\n            do {\n              if (lVar13 == 0) break;\n              lVar13 = lVar13 + -1;\n              bVar19 = *pbVar8 < *pbVar15;\n              bVar21 = *pbVar8 == *pbVar15;\n              pbVar8 = pbVar8 + (ulong)bVar23 * -2 + 1;\n              pbVar15 = pbVar15 + (ulong)bVar23 * -2 + 1;\n            } while (bVar21);\n            bVar18 = false;\n            bVar21 = (!bVar19 && !bVar21) == bVar19;\n            if (!bVar21) goto LAB_0010c819;\n          }\n        }\n        else {\nLAB_0010c819:\n          lVar13 = 7;\n          pbVar8 = (byte *)\"-hosts\";\n          do {\n            if (lVar13 == 0) break;\n            lVar13 = lVar13 + -1;\n            bVar18 = *pbVar8 < *pbVar11;\n            bVar21 = *pbVar8 == *pbVar11;\n            pbVar8 = pbVar8 + (ulong)bVar23 * -2 + 1;\n            pbVar11 = pbVar11 + (ulong)bVar23 * -2 + 1;\n          } while (bVar21);\n          bVar22 = (!bVar18 && !bVar21) == bVar18;\n        }\nLAB_0010c639:\n        *(byte *)(ppbVar7 + 5) = *(byte *)(ppbVar7 + 5) & 0xfd | bVar22 * '\\x02';\n        *local_98 = (byte *)ppbVar7;\n        local_98 = ppbVar7 + 6;\n      }\n    }\n    free(local_50);\n    iVar4 = ferror_unlocked(__stream);\n    if (iVar4 == 0) {\n      iVar4 = FUN_0010d810(__stream);\n      if (iVar4 != -1) {\nLAB_0010c68b:\n        *local_98 = (byte *)0x0;\n        pbVar8 = local_58;\n        goto LAB_0010c69b;\n      }\n      goto LAB_0010cada;\n    }\n    piVar12 = __errno_location();\n    iVar4 = *piVar12;\n    FUN_0010d810(__stream);\n    *piVar12 = iVar4;\n  }\n  *local_98 = (byte *)0x0;\n  while (local_58 != (byte *)0x0) {\n    pbVar8 = *(byte **)(local_58 + 0x30);\n    FUN_0010c390(local_58);\n    local_58 = pbVar8;\n  }\n  *piVar12 = iVar4;\n  pbVar8 = (byte *)0x0;\nLAB_0010c69b:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return pbVar8;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001182f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid hasmntopt(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001180b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c10": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_00116fb8)();\n  return pp_Var1;\n}\n\n", 
    "00103f70": "\n/* WARNING: Removing unreachable block (ram,0x00103f94) */\n/* WARNING: Removing unreachable block (ram,0x00103fa0) */\n\nvoid FUN_00103f70(void)\n\n{\n  return;\n}\n\n", 
    "001070b0": "\nlong FUN_001070b0(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00103760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00116d60)();\n  return iVar1;\n}\n\n", 
    "00103880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00116df0)();\n  return;\n}\n\n", 
    "001182c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_00116cd0)();\n  return pp_Var1;\n}\n\n", 
    "001181a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001182c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109190": "\nint * FUN_00109190(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001181a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bcc0": "\nvoid FUN_0010bcc0(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0010bc90(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00103870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00116de8)();\n  return _Var1;\n}\n\n", 
    "00103990": "\nvoid getfilecon(void)\n\n{\n  (*(code *)PTR_getfilecon_00116e78)();\n  return;\n}\n\n", 
    "00103630": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00116ff0)();\n  return;\n}\n\n", 
    "001181b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103750": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00116d58)();\n  return;\n}\n\n", 
    "001182d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010da90": "\nulong FUN_0010da90(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "001181b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001182d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109080": "\nvoid FUN_00109080(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00107750();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103f10": "\nvoid FUN_00103f10(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00116fd8)\n            (FUN_00103c70,unaff_retaddr,&stack0x00000008,FUN_0010fb30,FUN_0010fba0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010cca0": "\nvoid FUN_0010cca0(void)\n\n{\n  getenv(\"TZ\");\n  return;\n}\n\n", 
    "0010cdc0": "\nundefined8 FUN_0010cdc0(long *param_1,char *param_2)\n\n{\n  char *__s2;\n  long *plVar1;\n  int iVar2;\n  size_t sVar3;\n  ulong uVar4;\n  int *piVar5;\n  long lVar6;\n  char *__s1;\n  \n  __s2 = *(char **)(param_2 + 0x30);\n  if (__s2 == (char *)0x0) {\n    return 1;\n  }\n  if ((__s2 < param_2) || (param_2 + 0x38 <= __s2)) {\n    __s1 = (char *)((long)param_1 + 9);\n    if (*__s2 != '\\0') {\n      do {\n        iVar2 = strcmp(__s1,__s2);\n        while( true ) {\n          if (iVar2 == 0) goto LAB_0010ce58;\n          if ((*__s1 == '\\0') &&\n             (((char *)((long)param_1 + 9) != __s1 || (*(char *)(param_1 + 1) == '\\0')))) {\n            sVar3 = strlen(__s2);\n            uVar4 = (long)__s1 - (long)(char *)((long)param_1 + 9);\n            if (~uVar4 < sVar3 + 1) {\n              piVar5 = __errno_location();\n              *piVar5 = 0xc;\n              return 0;\n            }\n            if (uVar4 + sVar3 + 1 < 0x77) {\n              FUN_0010cc90(__s1,__s2);\n            }\n            else {\n              lVar6 = FUN_0010cd20(__s2);\n              *param_1 = lVar6;\n              if (lVar6 == 0) {\n                return 0;\n              }\n              *(undefined *)(lVar6 + 8) = 0;\n              __s1 = (char *)(lVar6 + 9);\n            }\n            goto LAB_0010ce58;\n          }\n          sVar3 = strlen(__s1);\n          __s1 = __s1 + sVar3 + 1;\n          if ((*__s1 != '\\0') || (plVar1 = (long *)*param_1, plVar1 == (long *)0x0)) break;\n          __s1 = (char *)((long)plVar1 + 9);\n          iVar2 = strcmp(__s1,__s2);\n          param_1 = plVar1;\n        }\n      } while( true );\n    }\n    __s1 = \"\";\nLAB_0010ce58:\n    *(char **)(param_2 + 0x30) = __s1;\n  }\n  return 1;\n}\n\n", 
    "00103660": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_00116ce0)();\n  return;\n}\n\n", 
    "00105960": "\nundefined * FUN_00105960(undefined8 param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  long lVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  long in_FS_OFFSET;\n  undefined8 local_88;\n  ulong local_80;\n  undefined local_78 [64];\n  undefined local_38 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_88 = param_1;\n  local_80 = param_2;\n  if (DAT_00117140 == 0) {\n    pcVar4 = getenv(\"TZ\");\n    DAT_00117140 = FUN_0010cd20(pcVar4);\n  }\n  uVar1 = local_80;\n  lVar2 = FUN_0010d060(DAT_00117140,&local_88,local_78);\n  if (lVar2 == 0) {\n    uVar3 = thunk_FUN_001075d0(local_88,local_38);\n    __sprintf_chk(&DAT_00117100,1,0x3d,\"%s.%09d\",uVar3,uVar1 & 0xffffffff);\n  }\n  else {\n    FUN_00109080(&DAT_00117100,0x3d,\"%Y-%m-%d %H:%M:%S.%N %z\",local_78,DAT_00117140,\n                 uVar1 & 0xffffffff);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return &DAT_00117100;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001182a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint gnu_dev_minor(ulonglong __dev)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103780": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00116d70)();\n  return;\n}\n\n", 
    "0010b2a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010b2a0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_001172c0;\n  uStack_60 = uRam00000000001172c8;\n  local_38 = DAT_001172f0;\n  local_58 = _DAT_001172d0;\n  uStack_50 = uRam00000000001172d8;\n  local_48 = _DAT_001172e0;\n  uStack_40 = uRam00000000001172e8;\n  FUN_0010ad80(&local_68);\n  FUN_0010ab00(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010d5a0": "\nuint FUN_0010d5a0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_0010da10();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00104f10": "\nundefined8\nFUN_00104f10(undefined8 param_1,undefined8 param_2,undefined4 param_3,undefined8 param_4,\n            undefined8 param_5,undefined8 *param_6)\n\n{\n  undefined8 uVar1;\n  long lVar2;\n  \n  switch(param_3) {\n  case 0x53:\n    lVar2 = param_6[9];\n    if (lVar2 != 0) goto LAB_00104f65;\n  case 0x73:\n    lVar2 = param_6[1];\nLAB_00104f65:\n    FUN_001043c0(param_1,param_2,lVar2);\n    return 0;\n  case 0x54:\n    uVar1 = FUN_001044c0(param_6);\n    FUN_00104380(param_1,param_2,uVar1);\n    break;\n  default:\n    fputc_unlocked(0x3f,stdout);\n    break;\n  case 0x61:\n    FUN_00104400(param_1,param_2,param_6[4]);\n    break;\n  case 0x62:\n    FUN_00104400(param_1,param_2,param_6[2]);\n    break;\n  case 99:\n    lVar2 = param_6[5];\n    goto LAB_00104f65;\n  case 100:\n    FUN_00104400(param_1,param_2,param_6[6]);\n    break;\n  case 0x66:\n    FUN_00104400(param_1,param_2,param_6[3]);\n    break;\n  case 0x69:\n    FUN_00104340(param_1,param_2,\n                 CONCAT44(*(undefined4 *)(param_6 + 7),*(undefined4 *)((long)param_6 + 0x3c)));\n    break;\n  case 0x6c:\n    FUN_001043c0(param_1,param_2,param_6[8]);\n    break;\n  case 0x6e:\n    FUN_00104380(param_1,param_2,param_5);\n    break;\n  case 0x74:\n    FUN_00104340(param_1,param_2,*param_6);\n  }\n  return 0;\n}\n\n", 
    "0010b3c0": "\nvoid FUN_0010b3c0(undefined8 param_1)\n\n{\n  FUN_0010b3b0(0,param_1);\n  return;\n}\n\n", 
    "00103f40": "\n/* WARNING: Removing unreachable block (ram,0x00103f53) */\n/* WARNING: Removing unreachable block (ram,0x00103f5f) */\n\nvoid FUN_00103f40(void)\n\n{\n  return;\n}\n\n", 
    "0010d290": "\nbool FUN_0010d290(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001182a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_00116cd8)();\n  return pcVar1;\n}\n\n", 
    "00105950": "\nchar * thunk_FUN_001075d0(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "00103770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwuid(__uid_t __uid)\n\n{\n  passwd *ppVar1;\n  \n  ppVar1 = (passwd *)(*(code *)PTR_getpwuid_00116d68)();\n  return ppVar1;\n}\n\n", 
    "00105830": "\nundefined FUN_00105830(char *param_1,undefined8 param_2,undefined8 param_3,long param_4)\n\n{\n  undefined uVar1;\n  char *__ptr;\n  char *pcVar2;\n  char *__ptr_00;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  int *piVar5;\n  \n  if ((DAT_001171a1 == '\\0') && ((*(uint *)(param_4 + 0x18) & 0xf000) == 0xa000)) {\nLAB_001058c0:\n    __ptr_00 = (char *)FUN_00106890(param_1,param_4);\n    if (__ptr_00 != (char *)0x0) {\n      pcVar2 = (char *)FUN_001056f0(__ptr_00);\n      if (pcVar2 == (char *)0x0) {\n        uVar1 = 0;\n        pcVar2 = __ptr_00;\n      }\n      else {\n        uVar1 = 0;\n      }\n      goto LAB_0010588e;\n    }\n  }\n  else {\n    __ptr = canonicalize_file_name(param_1);\n    if (__ptr != (char *)0x0) {\n      pcVar2 = (char *)FUN_001056f0(__ptr);\n      __ptr_00 = (char *)0x0;\n      free(__ptr);\n      uVar1 = 0;\n      if (pcVar2 != (char *)0x0) goto LAB_0010588e;\n      goto LAB_001058c0;\n    }\n    uVar3 = FUN_0010b100(4,param_1);\n    uVar4 = dcgettext(0,\"failed to canonicalize %s\",5);\n    piVar5 = __errno_location();\n    error(0,*piVar5,uVar4,uVar3);\n    __ptr_00 = __ptr;\n  }\n  uVar1 = 1;\n  pcVar2 = \"?\";\nLAB_0010588e:\n  FUN_00104380(param_2,param_3,pcVar2);\n  free(__ptr_00);\n  return uVar1;\n}\n\n", 
    "0010da70": "\nvoid FUN_0010da70(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = FUN_0010da30();\n  uVar1 = FUN_0010da30(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  FUN_0010da30(uVar1,in_RCX);\n  return;\n}\n\n", 
    "001182b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00116df8)();\n  return pvVar1;\n}\n\n", 
    "001095a0": "\nundefined8\nFUN_001095a0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001094e0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010fb30": "\nvoid FUN_0010fb30(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010b3d0": "\nint FUN_0010b3d0(int *param_1)\n\n{\n  int iVar1;\n  char *pcVar2;\n  \n  *(undefined8 *)(param_1 + 2) = 0;\n  iVar1 = FUN_0010d490();\n  *param_1 = iVar1;\n  if (-1 < iVar1) {\n    return 0;\n  }\n  pcVar2 = getcwd((char *)0x0,0);\n  *(char **)(param_1 + 2) = pcVar2;\n  return -(uint)(pcVar2 == (char *)0x0);\n}\n\n", 
    "0010d060": "\ntm * FUN_0010d060(long param_1,time_t *param_2,tm *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  \n  if (param_1 == 0) {\n    ptVar3 = gmtime_r(param_2,param_3);\n    return ptVar3;\n  }\n  lVar2 = FUN_0010cf50();\n  if (lVar2 != 0) {\n    ptVar3 = localtime_r(param_2,param_3);\n    if ((ptVar3 != (tm *)0x0) && (cVar1 = FUN_0010cdc0(param_1,param_3), cVar1 != '\\0')) {\n      cVar1 = FUN_0010d000(lVar2);\n      if (cVar1 == '\\0') {\n        return (tm *)0x0;\n      }\n      return param_3;\n    }\n    FUN_0010d000(lVar2);\n  }\n  return (tm *)0x0;\n}\n\n", 
    "001072b0": "\nchar * FUN_001072b0(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "001182b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid freecon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010ace0": "\nundefined4 FUN_0010ace0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_001172c0;\n  }\n  return *param_1;\n}\n\n", 
    "00103960": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_strtol_00116e60)();\n  return lVar1;\n}\n\n", 
    "00103af0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00116f28)();\n  return;\n}\n\n", 
    "0010fc24": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "0010b3a0": "\nvoid FUN_0010b3a0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010b390(0,param_1,param_2);\n  return;\n}\n\n", 
    "001074a0": "\nvoid FUN_001074a0(uint param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  undefined uVar2;\n  char cVar3;\n  ulong uVar4;\n  \n  uVar4 = (ulong)param_1;\n  uVar2 = FUN_00107430();\n  *param_2 = uVar2;\n  param_2[1] = (-((uVar4 & 0x100) == 0) & 0xbbU) + 0x72;\n  param_2[2] = (-((uVar4 & 0x80) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 0x40) == 0);\n  if ((uVar4 & 0x800) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[3] = cVar3;\n  param_2[4] = (-((uVar4 & 0x20) == 0) & 0xbbU) + 0x72;\n  param_2[5] = (-((uVar4 & 0x10) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 8) == 0);\n  if ((uVar4 & 0x400) == 0) {\n    cVar3 = (bVar1 & 0xb5) + 0x78;\n  }\n  else {\n    cVar3 = (bVar1 & 0xe0) + 0x73;\n  }\n  param_2[6] = cVar3;\n  param_2[7] = (-((uVar4 & 4) == 0) & 0xbbU) + 0x72;\n  param_2[8] = (-((uVar4 & 2) == 0) & 0xb6U) + 0x77;\n  bVar1 = -((uVar4 & 1) == 0);\n  if ((uVar4 & 0x200) != 0) {\n    param_2[9] = (bVar1 & 0xe0) + 0x74;\n    *(undefined2 *)(param_2 + 10) = 0x20;\n    return;\n  }\n  param_2[9] = (bVar1 & 0xb5) + 0x78;\n  *(undefined2 *)(param_2 + 10) = 0x20;\n  return;\n}\n\n", 
    "001075c0": "\nvoid FUN_001075c0(long param_1)\n\n{\n  FUN_001074a0(*(undefined4 *)(param_1 + 0x18));\n  return;\n}\n\n", 
    "0010d270": "\nulong FUN_0010d270(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "0010b090": "\nvoid FUN_0010b090(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00109190(auStack_68);\n  FUN_0010ab00(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrgid(__gid_t __gid)\n\n{\n  group *pgVar1;\n  \n  pgVar1 = (group *)(*(code *)PTR_getgrgid_00116dc8)();\n  return pgVar1;\n}\n\n", 
    "00103950": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_unlocked_00116e58)();\n  return iVar1;\n}\n\n", 
    "00103710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlconv * localeconv(void)\n\n{\n  lconv *plVar1;\n  \n  plVar1 = (lconv *)(*(code *)PTR_localeconv_00116d38)();\n  return plVar1;\n}\n\n", 
    "0010da50": "\nvoid FUN_0010da50(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = FUN_0010da30();\n  FUN_0010da30(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "00103ae0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strftime_00116f20)();\n  return sVar1;\n}\n\n", 
    "0010b3b0": "\nvoid FUN_0010b3b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010b390(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "0010c190": "\nuint FUN_0010c190(uint param_1,byte **param_2)\n\n{\n  int *piVar1;\n  long lVar2;\n  byte *pbVar3;\n  byte *pbVar4;\n  bool bVar5;\n  bool bVar6;\n  \n  if (param_1 == 0) {\n    piVar1 = __errno_location();\n    *piVar1 = 0x5f;\n    return 0xffffffff;\n  }\n  bVar5 = param_1 < 10;\n  bVar6 = param_1 == 10;\n  if (bVar6) {\n    lVar2 = 10;\n    pbVar3 = *param_2;\n    pbVar4 = (byte *)\"unlabeled\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar5 = *pbVar3 < *pbVar4;\n      bVar6 = *pbVar3 == *pbVar4;\n      pbVar3 = pbVar3 + 1;\n      pbVar4 = pbVar4 + 1;\n    } while (bVar6);\n    if ((!bVar5 && !bVar6) == bVar5) {\n      freecon(*param_2);\n      *param_2 = (byte *)0x0;\n      piVar1 = __errno_location();\n      *piVar1 = 0x3d;\n      return 0xffffffff;\n    }\n  }\n  return param_1;\n}\n\n", 
    "00103940": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00116e50)();\n  return iVar1;\n}\n\n", 
    "0010bed0": "\nint FUN_0010bed0(char *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  ulong uVar5;\n  size_t sVar6;\n  undefined *puVar7;\n  char *__s;\n  long in_FS_OFFSET;\n  undefined4 local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar2 = chdir(param_1);\n  if ((iVar2 == 0) || (piVar3 = __errno_location(), *piVar3 != 0x24)) goto LAB_0010bf0e;\n  sVar4 = strlen(param_1);\n  uVar5 = FUN_0010be30(&local_44);\n  if (uVar5 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 < len\",\"lib/chdir-long.c\",0x7e,\"chdir_long\");\n  }\n  if (uVar5 < 0x1000) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"4096 <= len\",\"lib/chdir-long.c\",0x7f,\"chdir_long\");\n  }\n  sVar6 = strspn(param_1,(char *)((long)&UINT_00111b0c + 2));\n  if (sVar6 == 2) {\n    puVar7 = (undefined *)memchr(param_1 + 3,0x2f,sVar4 - 3);\n    if (puVar7 == (undefined *)0x0) {\nLAB_0010c0b0:\n      *piVar3 = 0x24;\n      iVar2 = -1;\n      goto LAB_0010bf0e;\n    }\n    *puVar7 = 0;\n    iVar2 = FUN_0010be90(&local_44,param_1);\n    *puVar7 = 0x2f;\n    if (iVar2 != 0) goto LAB_0010c090;\n    __s = (char *)FUN_0010be10(puVar7 + 1);\nLAB_0010bf8d:\n    if (*__s == '/') {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"*dir != \\'/\\'\",\"lib/chdir-long.c\",0xa2,\"chdir_long\");\n    }\n    param_1 = param_1 + sVar4;\n    if (param_1 < __s) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"dir <= dir_end\",\"lib/chdir-long.c\",0xa3,\"chdir_long\");\n    }\n    while (0xfff < (long)param_1 - (long)__s) {\n      puVar7 = (undefined *)memrchr(__s,0x2f,0x1000);\n      if (puVar7 == (undefined *)0x0) goto LAB_0010c0b0;\n      *puVar7 = 0;\n      if (0xfff < (long)puVar7 - (long)__s) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"slash - dir < 4096\",\"lib/chdir-long.c\",0xb3,\"chdir_long\");\n      }\n      iVar2 = FUN_0010be90(&local_44,__s);\n      *puVar7 = 0x2f;\n      if (iVar2 != 0) goto LAB_0010c090;\n      __s = (char *)FUN_0010be10(puVar7 + 1);\n    }\n    if (((param_1 <= __s) || (iVar2 = FUN_0010be90(&local_44,__s), iVar2 == 0)) &&\n       (iVar2 = FUN_0010be40(local_44), iVar2 == 0)) {\n      FUN_0010be50(local_44);\n      goto LAB_0010bf0e;\n    }\n  }\n  else {\n    __s = param_1;\n    if (sVar6 == 0) goto LAB_0010bf8d;\n    iVar2 = FUN_0010be90(&local_44,0x111b0e);\n    if (iVar2 == 0) {\n      __s = param_1 + sVar6;\n      goto LAB_0010bf8d;\n    }\n  }\nLAB_0010c090:\n  iVar1 = *piVar3;\n  iVar2 = -1;\n  FUN_0010be50(local_44);\n  *piVar3 = iVar1;\nLAB_0010bf0e:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return iVar2;\n}\n\n", 
    "00103700": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00116d30)();\n  return;\n}\n\n", 
    "00103820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00116dc0)();\n  return pcVar1;\n}\n\n", 
    "00103980": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_00116e70)();\n  return iVar1;\n}\n\n", 
    "00103740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setenv_00116d50)();\n  return iVar1;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * gmtime_r(time_t *__timer,tm *__tp)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_gmtime_r_00116de0)();\n  return ptVar1;\n}\n\n", 
    "0010cc90": "\nvoid FUN_0010cc90(void *param_1,void *param_2,size_t param_3)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(param_1,param_2,param_3);\n  *(undefined *)((long)pvVar1 + param_3) = 0;\n  return;\n}\n\n", 
    "0010d490": "\nvoid FUN_0010d490(char *param_1,uint param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  ulong uVar3;\n  long in_FS_OFFSET;\n  \n  uVar3 = 0;\n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((param_2 & 0x40) != 0) {\n    uVar3 = param_3 & 0xffffffff;\n  }\n  iVar2 = open(param_1,param_2,uVar3);\n  FUN_0010d5a0(iVar2);\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00118088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d250": "\nuint FUN_0010d250(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00103730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_00116d48)();\n  return iVar1;\n}\n\n", 
    "00118080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103850": "\nvoid fgetfilecon(void)\n\n{\n  (*(code *)PTR_fgetfilecon_00116dd8)();\n  return;\n}\n\n", 
    "0010aca0": "\nvoid FUN_0010aca0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_001172c0;\n  }\n  FUN_0010bc90(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00118090": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103970": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00116e68)();\n  return pvVar1;\n}\n\n", 
    "0010da30": "\nlong FUN_0010da30(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "0010fc10": "\nvoid FUN_0010fc10(char *param_1,stat *param_2)\n\n{\n  __lxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00109380": "\nundefined8\nFUN_00109380(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001092f0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00109260": "\nundefined8 FUN_00109260(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010d340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00109200(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "0010d8c0": "\nvoid FUN_0010d8c0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010d8a0(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0010d380": "\nint FUN_0010d380(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "001075d0": "\nchar * FUN_001075d0(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "00118098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t readlink(char *__path,char *__buf,size_t __len)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_readlink_00116d40)();\n  return sVar1;\n}\n\n", 
    "0010adc0": "\nvoid FUN_0010adc0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_001172c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00109940(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00103840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00116dd0)();\n  return pcVar1;\n}\n\n"
}