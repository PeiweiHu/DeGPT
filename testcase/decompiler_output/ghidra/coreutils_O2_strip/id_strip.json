{
    "00103000": "\nvoid FUN_00103000(undefined4 param_1)\n\n{\n  FUN_00103b10(param_1,&DAT_0010d0f0);\n  return;\n}\n\n", 
    "00105780": "\nundefined4 FUN_00105780(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d260;\n  }\n  return *param_1;\n}\n\n", 
    "001027b4": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_00106378::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001077c4": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "001030a0": "\nvoid FUN_001030a0(long param_1)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  passwd *ppVar5;\n  group *pgVar6;\n  char *pcVar7;\n  int *piVar8;\n  long lVar9;\n  __gid_t _Var10;\n  long in_FS_OFFSET;\n  void *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar3 = FUN_00103000(DAT_0010d11c);\n  uVar4 = dcgettext(0,\"uid=%s\",5);\n  __printf_chk(1,uVar4,uVar3);\n  ppVar5 = getpwuid(DAT_0010d11c);\n  if (ppVar5 != (passwd *)0x0) {\n    __printf_chk(1,&DAT_0010859e,ppVar5->pw_name);\n  }\n  uVar3 = FUN_00103090(DAT_0010d114);\n  uVar4 = dcgettext(0,\" gid=%s\",5);\n  __printf_chk(1,uVar4,uVar3);\n  pgVar6 = getgrgid(DAT_0010d114);\n  if (pgVar6 != (group *)0x0) {\n    __printf_chk(1,&DAT_0010859e,pgVar6->gr_name);\n  }\n  if (DAT_0010d118 != DAT_0010d11c) {\n    uVar3 = FUN_00103000();\n    uVar4 = dcgettext(0,\" euid=%s\",5);\n    __printf_chk(1,uVar4,uVar3);\n    ppVar5 = getpwuid(DAT_0010d118);\n    if (ppVar5 != (passwd *)0x0) {\n      __printf_chk(1,&DAT_0010859e,ppVar5->pw_name);\n    }\n  }\n  if (DAT_0010d110 != DAT_0010d114) {\n    uVar3 = FUN_00103090();\n    uVar4 = dcgettext(0,\" egid=%s\",5);\n    __printf_chk(1,uVar4,uVar3);\n    pgVar6 = getgrgid(DAT_0010d110);\n    if (pgVar6 != (group *)0x0) {\n      __printf_chk(1,&DAT_0010859e,pgVar6->gr_name);\n    }\n  }\n  if (param_1 == 0) {\n    iVar2 = FUN_00106b70(0,DAT_0010d110,&local_38);\n    if (iVar2 < 0) {\n      uVar3 = dcgettext(0,\"failed to get groups for the current process\",5);\n      piVar8 = __errno_location();\n      error(0,*piVar8,uVar3);\n      goto LAB_001033af;\n    }\n  }\n  else {\n    _Var10 = 0xffffffff;\n    if (ppVar5 != (passwd *)0x0) {\n      _Var10 = ppVar5->pw_gid;\n    }\n    iVar2 = FUN_00106b70(param_1,_Var10,&local_38);\n    if (iVar2 < 0) {\n      uVar3 = FUN_00105e60(param_1);\n      uVar4 = dcgettext(0,\"failed to get groups for user %s\",5);\n      piVar8 = __errno_location();\n      error(0,*piVar8,uVar4,uVar3);\nLAB_001033af:\n      DAT_0010d010 = 0;\n      goto LAB_001031ff;\n    }\n  }\n  pFVar1 = stdout;\n  if (iVar2 != 0) {\n    pcVar7 = (char *)dcgettext(0,\" groups=\",5);\n    lVar9 = 0;\n    fputs_unlocked(pcVar7,pFVar1);\n    while( true ) {\n      pFVar1 = stdout;\n      pcVar7 = (char *)FUN_00103090(*(undefined4 *)((long)local_38 + lVar9));\n      fputs_unlocked(pcVar7,pFVar1);\n      pgVar6 = getgrgid(*(__gid_t *)((long)local_38 + lVar9));\n      if (pgVar6 != (group *)0x0) {\n        __printf_chk(1,&DAT_0010859e,pgVar6->gr_name);\n      }\n      if ((ulong)(iVar2 - 1) << 2 == lVar9) break;\n      lVar9 = lVar9 + 4;\n      putchar_unlocked(0x2c);\n    }\n  }\n  free(local_38);\n  lVar9 = DAT_0010d108;\n  if (DAT_0010d108 != 0) {\n    uVar3 = dcgettext(0,\" context=%s\",5);\n    __printf_chk(1,uVar3,lVar9);\n  }\nLAB_001031ff:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001042b0": "\nchar * FUN_001042b0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00107310();\n    iVar1 = FUN_00104200(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00104200(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_001088e1;\n      }\n      else {\n        pcVar2 = &DAT_001088de;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_001088e5;\n    }\n    else {\n      pcVar2 = &DAT_001088da;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getgrouplist(char *__user,__gid_t __group,__gid_t *__groups,int *__ngroups)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getgrouplist_0010cf78)();\n  return iVar1;\n}\n\n", 
    "00106a70": "\nvoid FUN_00106a70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001069e0(param_1,param_2,1);\n  return;\n}\n\n", 
    "001070e0": "\nbool FUN_001070e0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00104200": "\nundefined8\nFUN_00104200(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00104110(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00106740": "\nvoid FUN_00106740(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_001062d0();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001027a5": "\nvoid switchD_0010447f::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010cde8)();\n  return;\n}\n\n", 
    "00107150": "\nbool FUN_00107150(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00107390": "\nuint FUN_00107390(char *param_1,__gid_t param_2,__gid_t **param_3)\n\n{\n  __gid_t _Var1;\n  __gid_t _Var2;\n  __gid_t *p_Var3;\n  int iVar4;\n  uint uVar5;\n  __gid_t *p_Var6;\n  int *piVar7;\n  __gid_t *p_Var8;\n  long in_FS_OFFSET;\n  uint local_44;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (char *)0x0) {\n    local_44 = getgroups(0,(__gid_t *)0x0);\n    if ((int)local_44 < 0) {\n      piVar7 = __errno_location();\n      if ((*piVar7 == 0x26) && (p_Var8 = (__gid_t *)FUN_00107350(0,1), p_Var8 != (__gid_t *)0x0)) {\n        *param_3 = p_Var8;\n        *p_Var8 = param_2;\n        uVar5 = (uint)(param_2 != 0xffffffff);\n        goto LAB_0010742c;\n      }\n    }\n    else if ((local_44 == 0) || (param_2 != 0xffffffff)) {\n      local_44 = local_44 + 1;\n      p_Var8 = (__gid_t *)FUN_00107350(0,(long)(int)local_44);\n      if (p_Var8 != (__gid_t *)0x0) {\n        if (param_2 == 0xffffffff) goto LAB_001075a1;\n        iVar4 = getgroups(local_44 - 1,p_Var8 + 1);\n        if (iVar4 < 0) goto LAB_00107411;\n        *p_Var8 = param_2;\n        uVar5 = iVar4 + 1;\n        goto LAB_001074fe;\n      }\n    }\n    else {\n      p_Var8 = (__gid_t *)FUN_00107350(0,(long)(int)local_44);\n      if (p_Var8 != (__gid_t *)0x0) {\nLAB_001075a1:\n        uVar5 = getgroups(local_44 - (param_2 != 0xffffffff),p_Var8);\n        if ((int)uVar5 < 0) goto LAB_00107411;\nLAB_001074fe:\n        *param_3 = p_Var8;\n        if (1 < (int)uVar5) {\n          _Var1 = *p_Var8;\n          p_Var6 = p_Var8 + (int)uVar5;\n          p_Var3 = p_Var8;\n          while (p_Var3 = p_Var3 + 1, p_Var3 < p_Var6) {\n            _Var2 = *p_Var3;\n            if ((_Var2 == _Var1) || (_Var2 == *p_Var8)) {\n              uVar5 = uVar5 - 1;\n            }\n            else {\n              p_Var8[1] = _Var2;\n              p_Var8 = p_Var8 + 1;\n            }\n          }\n        }\n        goto LAB_0010742c;\n      }\n    }\n  }\n  else {\n    local_44 = 10;\n    p_Var6 = (__gid_t *)FUN_00107350(0,10);\n    if (p_Var6 != (__gid_t *)0x0) {\n      do {\n        p_Var8 = p_Var6;\n        uVar5 = local_44;\n        iVar4 = getgrouplist(param_1,param_2,p_Var8,(int *)&local_44);\n        if (-1 < iVar4) {\n          p_Var6 = (__gid_t *)FUN_00107350(p_Var8,(long)(int)local_44);\n          if (p_Var6 != (__gid_t *)0x0) {\n            *param_3 = p_Var6;\n            uVar5 = local_44;\n            goto LAB_0010742c;\n          }\n          break;\n        }\n        if (local_44 == uVar5) {\n          local_44 = local_44 * 2;\n        }\n        p_Var6 = (__gid_t *)FUN_00107350(p_Var8,(long)(int)local_44);\n      } while (p_Var6 != (__gid_t *)0x0);\nLAB_00107411:\n      piVar7 = __errno_location();\n      iVar4 = *piVar7;\n      free(p_Var8);\n      *piVar7 = iVar4;\n    }\n  }\n  uVar5 = 0xffffffff;\nLAB_0010742c:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar5;\n}\n\n", 
    "0010e1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getgrouplist(char *__user,__gid_t __group,__gid_t *__groups,int *__ngroups)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027a0": "\nvoid FUN_001027a0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105e10": "\nvoid FUN_00105e10(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00105d40(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00103c30": "\nint * FUN_00103c30(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001077b0": "\nvoid FUN_001077b0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0010d008);\n  return;\n}\n\n", 
    "00103b10": "\nchar * FUN_00103b10(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "001070d0": "\nbool FUN_001070d0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "001071f0": "\nint FUN_001071f0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_001071b0(*param_1);\n      bVar2 = FUN_001071b0(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00104110": "\nundefined8\nFUN_00104110(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104040(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001026b0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010cf50)();\n  return;\n}\n\n", 
    "00107180": "\nulong FUN_00107180(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00105e40": "\nvoid FUN_00105e40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105e30(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n  ulong uVar1;\n  \n  uVar1 = (*(code *)PTR_strtoul_0010cf88)();\n  return uVar1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010cef8)();\n  return pvVar1;\n}\n\n", 
    "00105ca0": "\nvoid FUN_00105ca0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103c30(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_001057c0(puVar1,0x3a,1);\n  FUN_001055a0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107730": "\nvoid FUN_00107730(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00103010": "\nvoid FUN_00103010(__uid_t param_1)\n\n{\n  passwd *ppVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *__s;\n  \n  if (DAT_0010d120 != '\\0') {\n    ppVar1 = getpwuid(param_1);\n    if (ppVar1 != (passwd *)0x0) {\n      __s = ppVar1->pw_name;\n      goto LAB_00103070;\n    }\n    uVar2 = FUN_00103000(param_1);\n    uVar3 = dcgettext(0,\"cannot find name for user ID %s\",5);\n    error(0,0,uVar3,uVar2);\n    DAT_0010d010 = 0;\n  }\n  __s = (char *)FUN_00103000(param_1);\nLAB_00103070:\n  fputs_unlocked(__s,stdout);\n  return;\n}\n\n", 
    "00106880": "\nvoid FUN_00106880(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00107050": "\nbool FUN_00107050(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001027c0": "\nbyte FUN_001027c0(int param_1,undefined8 *param_2)\n\n{\n  bool bVar1;\n  char cVar2;\n  int iVar3;\n  long lVar4;\n  undefined8 uVar5;\n  passwd *ppVar6;\n  char *pcVar7;\n  undefined8 uVar8;\n  int *piVar9;\n  __gid_t _Var10;\n  uint uVar11;\n  byte bVar12;\n  undefined auVar13 [16];\n  undefined8 uStack_48;\n  undefined auStack_40 [2];\n  byte local_3e;\n  char local_3d;\n  int local_3c;\n  \n  bVar12 = 0;\n  bVar1 = false;\n  uVar11 = 0;\n  local_3c = is_selinux_enabled();\n  FUN_00103b70(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_001077b0(FUN_00103a60);\n  local_3e = 0;\n  local_3d = '\\0';\nswitchD_00102884_caseD_61:\n  iVar3 = getopt_long(param_1,param_2,\"agnruzGZ\",&PTR_s_context_0010ca40,0);\n  if (iVar3 != -1) {\n    if (0x7a < iVar3) goto switchD_00102884_caseD_48;\n    if (iVar3 < 0x47) {\n      if (iVar3 == -0x83) {\n        FUN_001067d0(stdout,&DAT_001085d2,\"GNU coreutils\",PTR_DAT_0010d018,\"Arnold Robbins\",\n                     \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar3 == -0x82) {\n        FUN_001036c0();\n        goto LAB_0010292f;\n      }\n      goto switchD_00102884_caseD_48;\n    }\n    switch(iVar3) {\n    case 0x47:\n      local_3e = 1;\n      goto switchD_00102884_caseD_61;\n    default:\n      goto switchD_00102884_caseD_48;\n    case 0x5a:\n      if (local_3c < 1) goto LAB_00102e83;\n      DAT_0010d121 = 1;\n    case 0x61:\n      goto switchD_00102884_caseD_61;\n    case 0x67:\n      uVar11 = 1;\n      goto switchD_00102884_caseD_61;\n    case 0x6e:\n      DAT_0010d120 = '\\x01';\n      goto switchD_00102884_caseD_61;\n    case 0x72:\n      bVar1 = true;\n      goto switchD_00102884_caseD_61;\n    case 0x75:\n      bVar12 = 1;\n      goto switchD_00102884_caseD_61;\n    case 0x7a:\n      local_3d = '\\x01';\n      goto switchD_00102884_caseD_61;\n    }\n  }\nLAB_0010292f:\n  piVar9 = (int *)(long)(param_1 - optind);\n  if ((int *)0x1 < piVar9) {\n    uVar5 = FUN_00105e60(param_2[(long)optind + 1]);\n    uVar8 = dcgettext(0,\"extra operand %s\",5);\n    error(0,0,uVar8,uVar5);\n    goto switchD_00102884_caseD_48;\n  }\n  if ((piVar9 != (int *)0x0) && (DAT_0010d121 != 0)) goto LAB_00102ecb;\n  if (1 < bVar12 + uVar11 + (uint)local_3e + (uint)DAT_0010d121) goto LAB_00102ea7;\n  ppVar6 = (passwd *)(ulong)(local_3e | uVar11);\n  if (((bVar12 | DAT_0010d121) == 0) && ((char)(local_3e | uVar11) == '\\0')) {\n    if ((bVar1) || (DAT_0010d120 != '\\0')) goto LAB_00102de4;\n    if (local_3d != '\\0') {\n      uVar5 = dcgettext(0,\"option --zero not permitted in default format\",5);\n      error(1,0,uVar5);\nLAB_00102db5:\n      if (*piVar9 == 0) goto LAB_00102ba1;\nLAB_00102dbf:\n      uVar5 = dcgettext(0,\"cannot get effective UID\",5);\n      error(1,*piVar9,uVar5);\nLAB_00102de4:\n      uVar5 = dcgettext(0,\"cannot print only names or real IDs in default format\",5);\n      error(1,0,uVar5);\nLAB_00102e08:\n      uVar5 = FUN_00105e60(piVar9);\n      uVar8 = dcgettext(0,\"%s: no such user\",5);\n      error(1,0,uVar8,uVar5);\nLAB_00102e3a:\n      uVar5 = dcgettext(0,\"cannot get real UID\",5);\n      error(1,*piVar9,uVar5);\nLAB_00102e5f:\n      uVar5 = dcgettext(0,\"cannot get effective GID\",5);\n      error(1,*(undefined4 *)&ppVar6->pw_name,uVar5);\nLAB_00102e83:\n      uVar5 = dcgettext(0,\"--context (-Z) works only on an SELinux-enabled kernel\",5);\n      error(1,0,uVar5);\nLAB_00102ea7:\n      uVar5 = dcgettext(0,\"cannot print \\\"only\\\" of more than one choice\",5);\n      error(1,0,uVar5);\nLAB_00102ecb:\n      uVar5 = dcgettext(0,\"cannot print security context when user specified\",5);\n      auVar13 = error(1,0,uVar5);\n      uVar5 = uStack_48;\n      uStack_48 = SUB168(auVar13,0);\n      (*(code *)PTR___libc_start_main_0010cfd0)\n                (FUN_001027c0,uVar5,auStack_40,FUN_00107730,FUN_001077a0,SUB168(auVar13 >> 0x40,0),\n                 &uStack_48);\n      do {\n                    /* WARNING: Do nothing block with infinite loop */\n      } while( true );\n    }\n    if (piVar9 == (int *)0x0) {\n      pcVar7 = getenv(\"POSIXLY_CORRECT\");\n      if (pcVar7 != (char *)0x0) goto LAB_00102cd7;\nLAB_0010299c:\n      if ((((0 < local_3c) && (iVar3 = getcon(), iVar3 != 0)) && (DAT_0010d121 != 0)) ||\n         (((cVar2 = FUN_00102fe0(), cVar2 != '\\0' && (lVar4 = FUN_00102ff0(), lVar4 < 0)) &&\n          (DAT_0010d121 != 0)))) {\n        uVar5 = dcgettext(0,\"can\\'t get process context\",5);\n        error(1,0,uVar5);\n      }\n      goto LAB_001029e7;\n    }\n  }\n  else if (piVar9 == (int *)0x0) {\n    if (DAT_0010d121 != 0) goto LAB_0010299c;\nLAB_001029e7:\n    if (bVar12 == 0) goto LAB_00102c87;\n    if (bVar1) goto LAB_001029f9;\n    piVar9 = __errno_location();\n    *piVar9 = 0;\n    DAT_0010d118 = geteuid();\n    if (DAT_0010d118 == 0xffffffff) goto LAB_00102db5;\n    goto LAB_00102ba1;\n  }\n  piVar9 = (int *)param_2[optind];\n  if (((*(char *)piVar9 == '\\0') || (lVar4 = FUN_001061f0(piVar9,&DAT_0010d118,0,0,0), lVar4 != 0))\n     || (ppVar6 = getpwuid(DAT_0010d118), ppVar6 == (passwd *)0x0)) goto LAB_00102e08;\n  uVar5 = FUN_00106b10(ppVar6->pw_name);\n  DAT_0010d118 = ppVar6->pw_uid;\n  DAT_0010d110 = ppVar6->pw_gid;\n  DAT_0010d114 = DAT_0010d110;\n  DAT_0010d11c = DAT_0010d118;\n  if (bVar12 != 0) goto LAB_00102ba1;\nLAB_00102afb:\n  if ((char)uVar11 != '\\0') {\n    _Var10 = DAT_0010d110;\n    if (bVar1) {\n      _Var10 = DAT_0010d114;\n    }\n    cVar2 = FUN_00103800(_Var10,DAT_0010d120);\n    if (cVar2 == '\\0') goto LAB_00102b23;\n    goto LAB_00102b2a;\n  }\n  if (local_3e == 0) {\n    if (DAT_0010d121 == 0) {\n      FUN_001030a0();\n    }\n    else {\nLAB_00102a43:\n      fputs_unlocked(DAT_0010d108,stdout);\n    }\n    goto LAB_00102b2a;\n  }\n  if (local_3d != '\\0') {\n    cVar2 = FUN_00103880(uVar5,DAT_0010d11c,DAT_0010d114,DAT_0010d110,DAT_0010d120,0);\n    if (cVar2 == '\\0') goto LAB_00102b23;\n    goto LAB_00102be8;\n  }\n  cVar2 = FUN_00103880(uVar5,DAT_0010d11c,DAT_0010d114,DAT_0010d110,DAT_0010d120,0x20);\n  if (cVar2 == '\\0') {\nLAB_00102b23:\n    DAT_0010d010 = 0;\n    goto LAB_00102b2a;\n  }\n  goto LAB_00102b35;\nswitchD_00102884_caseD_48:\n  FUN_001036c0(1);\n  goto LAB_00102ba1;\nLAB_001029f9:\n  piVar9 = __errno_location();\n  *piVar9 = 0;\n  DAT_0010d11c = getuid();\n  if (DAT_0010d11c == 0xffffffff) {\n    while (*piVar9 == 0) {\n      do {\n        if (bVar12 != 0) goto LAB_00102ba1;\n        if ((char)ppVar6 != '\\0') goto LAB_00102c19;\n        do {\n          if (DAT_0010d121 != 0) goto LAB_00102a43;\nLAB_00102c19:\n          do {\n            ppVar6 = (passwd *)__errno_location();\n            *(undefined4 *)&ppVar6->pw_name = 0;\n            DAT_0010d110 = getegid();\n            if ((DAT_0010d110 == 0xffffffff) && (*(int *)&ppVar6->pw_name != 0)) goto LAB_00102e5f;\n            *(undefined4 *)&ppVar6->pw_name = 0;\n            DAT_0010d114 = getgid();\n            uVar5 = 0;\n            if ((DAT_0010d114 != 0xffffffff) || (*(int *)&ppVar6->pw_name == 0)) goto LAB_00102afb;\n            uVar5 = dcgettext(0,\"cannot get real GID\",5);\n            error(1,*(undefined4 *)&ppVar6->pw_name,uVar5);\nLAB_00102c87:\n            if ((char)ppVar6 == '\\0') {\nLAB_00102cd7:\n              if (DAT_0010d121 != 0) goto LAB_00102d50;\n              piVar9 = __errno_location();\n              *piVar9 = 0;\n              DAT_0010d118 = geteuid();\n              if (DAT_0010d118 == 0xffffffff) {\n                if (*piVar9 != 0) goto LAB_00102dbf;\n                if (bVar12 != 0) {\n                  if (bVar1) goto LAB_001029f9;\n                  goto LAB_00102ba1;\n                }\n              }\n            }\n          } while ((char)uVar11 != '\\0');\n          if (local_3e != 0) break;\nLAB_00102d50:\n        } while (DAT_0010d121 != 0);\n        piVar9 = __errno_location();\n        *piVar9 = 0;\n        DAT_0010d11c = getuid();\n      } while (DAT_0010d11c != 0xffffffff);\n    }\n    goto LAB_00102e3a;\n  }\nLAB_00102ba1:\n  FUN_00103010();\nLAB_00102b2a:\n  if (local_3d == '\\0') {\nLAB_00102b35:\n    iVar3 = 10;\n  }\n  else {\nLAB_00102be8:\n    iVar3 = 0;\n  }\n  putchar_unlocked(iVar3);\n  return DAT_0010d010 ^ 1;\n}\n\n", 
    "00107170": "\nbool FUN_00107170(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getegid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getegid_0010cf48)();\n  return _Var1;\n}\n\n", 
    "00105e30": "\nvoid FUN_00105e30(void)\n\n{\n  FUN_001055a0();\n  return;\n}\n\n", 
    "001076b0": "\nint FUN_001076b0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001043e0": "\nulong FUN_001043e0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104867:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00104889;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00104e26;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_001047df;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104867;\n    }\n  case 1:\n    bVar1 = false;\nLAB_001047df:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_001042b0(&DAT_001088f9,param_5);\n      local_78 = (char *)FUN_001042b0(&DAT_001088e9);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104530:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00104d90_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00104d2b;\n          goto LAB_00104b1b;\n        default:\nswitchD_00104c40_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00106f90(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105018;\n              }\n              if (lVar10 == -2) goto joined_r0x0010542a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00104a00;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105018;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_001047a1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00104ce8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00104ce8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00104ce8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_001049f7;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_001049e4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_001049e4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104708;\n          goto LAB_001049f7;\n        case 0x23:\n        case 0x7e:\nLAB_001049db:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_001049e4;\n          goto LAB_00104705;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00104c40_caseD_25;\n        case 0x27:\nswitchD_00104c40_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104708;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010472b;\n          }\n          goto LAB_00104a00;\n        case 0x3f:\nswitchD_00104c40_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010538e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104708;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010472b;\n          }\n          goto LAB_00104a00;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00104638_caseD_5c;\n          if (!bVar20) {\nLAB_00104c78:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00104c90;\n          }\n          goto LAB_00104a00;\n        case 0x7b:\n        case 0x7d:\nswitchD_00104c40_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_001049db;\nLAB_00104705:\n          bVar23 = false;\n          goto LAB_00104708;\n        }\nLAB_00104b10:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00104b1b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104728;\n          goto LAB_00104650;\n        }\nLAB_00104b50:\n        bVar21 = false;\n        goto joined_r0x00104b61;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00104d70;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00104638_caseD_0;\n          default:\n            goto switchD_00104c40_caseD_1;\n          case 7:\n            goto switchD_00104d90_caseD_7;\n          case 8:\n            goto switchD_00104d90_caseD_8;\n          case 9:\n            goto switchD_00104638_caseD_9;\n          case 10:\n            goto switchD_00104d90_caseD_a;\n          case 0xb:\n            goto switchD_00104d90_caseD_b;\n          case 0xc:\n            goto switchD_00104d90_caseD_c;\n          case 0xd:\n            goto switchD_00104d90_caseD_d;\n          case 0x20:\n            goto LAB_00104db9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00104638_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00104da1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00104648;\n          case 0x27:\n            goto switchD_00104c40_caseD_27;\n          case 0x3f:\n            goto switchD_00104c40_caseD_3f;\n          case 0x5c:\n            goto switchD_00104638_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00104c40_caseD_7b;\n          }\n        }\n        goto LAB_00104a0e;\n      }\nLAB_00104d70:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00104d90_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00104638_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010472b;\n            }\nLAB_001051cb:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_001051cb;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105208;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010472b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00104a00;\n      default:\n        bVar23 = false;\n        goto switchD_00104c40_caseD_1;\n      case 7:\nswitchD_00104d90_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00104d90_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00104638_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00104b10;\n      case 10:\nswitchD_00104d90_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00104b50;\n      case 0xb:\nswitchD_00104d90_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00104b50;\n      case 0xc:\nswitchD_00104d90_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00104d90_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00104b50;\n      case 0x20:\n        bVar5 = false;\nLAB_00104db9:\n        uVar15 = 0x20;\n        goto LAB_00104648;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00104638_caseD_21:\n        bVar22 = false;\n        goto LAB_00104705;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00104da1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104708;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00104650;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00104648:\n        bVar22 = false;\n        goto LAB_00104650;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00104c40_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00104c40_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00104638_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00104c78;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00104b10;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00104c40_caseD_7b;\n      }\n      if (bVar20) goto LAB_00104b70;\n      bVar21 = false;\n      goto LAB_001046c6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_001049f7:\n      param_5 = 2;\nLAB_00104a00:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00104a0e:\n      uVar13 = FUN_001043e0(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00104a48;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105495:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00104a48:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_001043e0(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00104a48;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105495;\nLAB_00104e26:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00104889:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00104d2b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104530;\nswitchD_0010538e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105208:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010472b;\n    goto LAB_00104650;\n  }\n  goto LAB_00104a0e;\njoined_r0x0010542a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105018:\n  if (1 < uVar17) {\nLAB_00105022:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00104a00;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_001046d8;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00104c90;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_001047a1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105022;\n  }\nswitchD_00104c40_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104708:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00104650:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010472b;\n  }\n  else {\nLAB_00104728:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010472b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00104c90:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_001046d8;\n    }\n  }\njoined_r0x00104b61:\n  if (bVar20) {\nLAB_00104b70:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00104a00;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_001046c6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_001046d8:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104530;\n}\n\n", 
    "001027af": "\nvoid FUN_001027af(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001027aa": "\nvoid FUN_001027aa(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103800": "\nundefined4 FUN_00103800(__gid_t param_1,undefined4 param_2)\n\n{\n  group *pgVar1;\n  char *__s;\n  undefined8 uVar2;\n  \n  if ((char)param_2 == '\\0') {\n    param_2 = 1;\n  }\n  else {\n    pgVar1 = getgrgid(param_1);\n    if (pgVar1 != (group *)0x0) {\n      __s = pgVar1->gr_name;\n      goto LAB_00103838;\n    }\n    param_2 = 0;\n    uVar2 = dcgettext(0,\"cannot find name for group ID %lu\",5);\n    error(0,0,uVar2,param_1);\n  }\n  __s = (char *)FUN_001037f0(param_1);\nLAB_00103838:\n  fputs_unlocked(__s,stdout);\n  return param_2;\n}\n\n", 
    "00106a80": "\nvoid FUN_00106a80(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00106910();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "001070f0": "\nbool FUN_001070f0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010cf80)();\n  return iVar1;\n}\n\n", 
    "00105860": "\nvoid FUN_00105860(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0010d260;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_001043e0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00105740": "\nvoid FUN_00105740(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d260;\n  }\n  FUN_00106ae0(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t geteuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_geteuid_0010cec0)();\n  return _Var1;\n}\n\n", 
    "00102470": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ce30)();\n  return;\n}\n\n", 
    "00106ae0": "\nvoid FUN_00106ae0(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00106910(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "001055a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_001055a0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0010d080;\n  if (DAT_0010d078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00106b30();\n    }\n    if (PTR_DAT_0010d080 == &DAT_0010d090) {\n      puVar8 = (undefined4 *)FUN_00106970(0);\n      uVar6 = PTR_DAT_0010d098._4_4_;\n      uVar5 = PTR_DAT_0010d098._0_4_;\n      uVar3 = _UNK_0010d094;\n      PTR_DAT_0010d080 = (undefined *)puVar8;\n      *puVar8 = _DAT_0010d090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00106970(PTR_DAT_0010d080);\n      PTR_DAT_0010d080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0010d078 * 4,0,(long)((param_1 + 1) - DAT_0010d078) << 4);\n    DAT_0010d078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_001043e0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0010d160) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00106910(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_001043e0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "001023f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid endgrent(void)\n\n{\n  (*(code *)PTR_endgrent_0010cdf0)();\n  return;\n}\n\n", 
    "0010e080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102f90": "\nvoid FUN_00102f90(void)\n\n{\n  if (DAT_0010d0c8 == '\\0') {\n    if (PTR___cxa_finalize_0010cfe8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0010d008);\n    }\n    FUN_00102f20();\n    DAT_0010d0c8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001070a0": "\nulong FUN_001070a0(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001061f0": "\nlong FUN_001061f0(char *param_1,undefined8 param_2,long param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  char *pcVar1;\n  long lVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar2 = FUN_00105e70(param_1,0,param_2,0,param_4,param_5);\n    return lVar2;\n  }\n  pcVar1 = strchr(param_1,0x3a);\n  lVar2 = FUN_00105e70(param_1,pcVar1,param_2,param_3,param_4,param_5);\n  if (pcVar1 != (char *)0x0) {\n    return lVar2;\n  }\n  if (lVar2 != 0) {\n    pcVar1 = strchr(param_1,0x2e);\n    if (pcVar1 == (char *)0x0) {\n      return lVar2;\n    }\n    lVar3 = FUN_00105e70(param_1,pcVar1,param_2,param_3,param_4,param_5);\n    if (lVar3 != 0) {\n      return lVar2;\n    }\n  }\n  return 0;\n}\n\n", 
    "0010e088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ca0": "\nundefined8 FUN_00103ca0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103c80(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010ceb8)();\n  return pvVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ce28)();\n  return;\n}\n\n", 
    "00107350": "\nvoid * FUN_00107350(void *param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  int *piVar2;\n  \n  if ((-1 < (long)(param_2 << 2)) && (param_2 >> 0x3e == 0)) {\n    pvVar1 = realloc(param_1,param_2 << 2);\n    return pvVar1;\n  }\n  piVar2 = __errno_location();\n  *piVar2 = 0xc;\n  return (void *)0x0;\n}\n\n", 
    "001069e0": "\nvoid FUN_001069e0(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00106a3b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00106a3b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00106b30(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00106970(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010e090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010cfe8)();\n  return;\n}\n\n", 
    "001071b0": "\nint FUN_001071b0(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00105c90": "\nvoid FUN_00105c90(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105bd0(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "0010e098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ce40)();\n  return iVar1;\n}\n\n", 
    "00106970": "\nvoid * FUN_00106970(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106b30();\n  }\n  return pvVar1;\n}\n\n", 
    "00107020": "\nulong FUN_00107020(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "0010e060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwuid(__uid_t __uid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001077a0": "\nvoid FUN_001077a0(void)\n\n{\n  return;\n}\n\n", 
    "001067d0": "\nvoid FUN_001067d0(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106740();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103f80": "\nundefined8\nFUN_00103f80(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103ed0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e068": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001070c0": "\nbool FUN_001070c0(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00106b70": "\nint FUN_00106b70(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  iVar1 = FUN_00107390();\n  if (iVar1 == -1) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00106b30();\n    }\n  }\n  return iVar1;\n}\n\n", 
    "00105a80": "\nvoid FUN_00105a80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001055a0(param_1,param_2,0xffffffffffffffff,&DAT_0010d260);\n  return;\n}\n\n", 
    "0010e188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106720": "\nvoid FUN_00106720(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_001062d0();\n  return;\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010cfd8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010cfd8)();\n  }\n  return;\n}\n\n", 
    "00106960": "\nvoid thunk_FUN_00106910(void)\n\n{\n  FUN_00106910();\n  return;\n}\n\n", 
    "00102480": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ce38)();\n  return;\n}\n\n", 
    "00107250": "\nulong FUN_00107250(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_001075c0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "0010e190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001071d0": "\nint FUN_001071d0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010e198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010cf30)();\n  return iVar1;\n}\n\n", 
    "0010e0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010cea0)();\n  return pcVar1;\n}\n\n", 
    "00103880": "\nuint FUN_00103880(long param_1,__uid_t param_2,__gid_t param_3,__gid_t param_4,undefined param_5,\n                 char param_6)\n\n{\n  char cVar1;\n  int iVar2;\n  passwd *ppVar3;\n  int *piVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  __gid_t _Var7;\n  void *__ptr;\n  uint unaff_R13D;\n  uint uVar8;\n  long lVar9;\n  long in_FS_OFFSET;\n  void *local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    ppVar3 = (passwd *)0x0;\n    uVar8 = 1;\n  }\n  else {\n    ppVar3 = getpwuid(param_2);\n    uVar8 = unaff_R13D & 0xffffff00 | (uint)(ppVar3 != (passwd *)0x0);\n  }\n  cVar1 = FUN_00103800(param_3,param_5);\n  if (cVar1 == '\\0') {\n    uVar8 = 0;\n  }\n  if (param_3 != param_4) {\n    putchar_unlocked((int)param_6);\n    cVar1 = FUN_00103800(param_4,param_5);\n    if (cVar1 == '\\0') {\n      uVar8 = 0;\n    }\n  }\n  _Var7 = param_4;\n  if (ppVar3 != (passwd *)0x0) {\n    _Var7 = ppVar3->pw_gid;\n  }\n  iVar2 = FUN_00106b70(param_1,_Var7,&local_48);\n  if (iVar2 < 0) {\n    piVar4 = __errno_location();\n    if (param_1 == 0) {\n      uVar5 = dcgettext(0,\"failed to get groups for the current process\",5);\n      error(0,*piVar4,uVar5);\n    }\n    else {\n      uVar5 = FUN_00105e60(param_1);\n      uVar6 = dcgettext(0,\"failed to get groups for user %s\",5);\n      error(0,*piVar4,uVar6,uVar5);\n    }\n    uVar8 = 0;\n  }\n  else {\n    __ptr = local_48;\n    if (iVar2 != 0) {\n      lVar9 = 0;\n      do {\n        if ((*(__gid_t *)((long)__ptr + lVar9) != param_4) &&\n           (*(__gid_t *)((long)__ptr + lVar9) != param_3)) {\n          putchar_unlocked((int)param_6);\n          cVar1 = FUN_00103800(*(undefined4 *)((long)local_48 + lVar9),param_5);\n          __ptr = local_48;\n          if (cVar1 == '\\0') {\n            uVar8 = 0;\n          }\n        }\n        lVar9 = lVar9 + 4;\n      } while ((ulong)(iVar2 - 1) * 4 + 4 != lVar9);\n    }\n    free(__ptr);\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar8;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010ce10)();\n  return;\n}\n\n", 
    "00106aa0": "\nvoid FUN_00106aa0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106b30();\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010cfc0)();\n  return ppuVar1;\n}\n\n", 
    "0010e0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105ad0": "\nvoid FUN_00105ad0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103c30(auStack_58);\n  FUN_001055a0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001057a0": "\nvoid FUN_001057a0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d260;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "001069b0": "\nvoid FUN_001069b0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00106970();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106b30();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwnam(char *__name)\n\n{\n  passwd *ppVar1;\n  \n  ppVar1 = (passwd *)(*(code *)PTR_getpwnam_0010cef0)();\n  return ppVar1;\n}\n\n", 
    "001059e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001059e0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0010d080;\n  if (1 < DAT_0010d078) {\n    ppvVar2 = (void **)(PTR_DAT_0010d080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0010d080 + (ulong)(DAT_0010d078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0010d160) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0010d098 = &DAT_0010d160;\n    _DAT_0010d090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0010d090) {\n    free(__ptr_00);\n    PTR_DAT_0010d080 = &DAT_0010d090;\n  }\n  DAT_0010d078 = 1;\n  return;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010ce60)();\n  return sVar1;\n}\n\n", 
    "0010e160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102f50": "\n/* WARNING: Removing unreachable block (ram,0x00102f74) */\n/* WARNING: Removing unreachable block (ram,0x00102f80) */\n\nvoid FUN_00102f50(void)\n\n{\n  return;\n}\n\n", 
    "00106b10": "\nvoid FUN_00106b10(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106ae0(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00105c60": "\nvoid FUN_00105c60(undefined8 param_1,char param_2)\n\n{\n  FUN_00105bd0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "001062d0": "\nundefined8\nFUN_001062d0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00109063,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106599;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00106599:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010663b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010663b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001063ed;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_001063ed:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00106f90": "\nsize_t FUN_00106f90(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_001072c0(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid endpwent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e048": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010cfb8)();\n  return iVar1;\n}\n\n", 
    "00102ff0": "\nundefined8 FUN_00102ff0(void)\n\n{\n  return 0xffffffffffffffff;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010cf28)();\n  return pvVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrgid(__gid_t __gid)\n\n{\n  group *pgVar1;\n  \n  pgVar1 = (group *)(*(code *)PTR_getgrgid_0010ce98)();\n  return pgVar1;\n}\n\n", 
    "00102420": "\nvoid is_selinux_enabled(void)\n\n{\n  (*(code *)PTR_is_selinux_enabled_0010ce08)();\n  return;\n}\n\n", 
    "00107310": "\nchar * FUN_00107310(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00105ac0": "\nvoid FUN_00105ac0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105aa0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00107670": "\nvoid FUN_00107670(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00107650(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "00104040": "\nundefined8\nFUN_00104040(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103f80(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001037f0": "\nvoid FUN_001037f0(undefined4 param_1)\n\n{\n  FUN_00103b10(param_1,&DAT_0010d130);\n  return;\n}\n\n", 
    "0010e170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getegid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010cee8)();\n  return pvVar1;\n}\n\n", 
    "001059d0": "\nvoid FUN_001059d0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001058e0(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "0010e050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024c0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ce58)();\n  return;\n}\n\n", 
    "00105b30": "\nvoid FUN_00105b30(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103c30(auStack_68);\n  FUN_001055a0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e178": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105800": "\nundefined4 FUN_00105800(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d260;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010ce00)();\n  return;\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010ce20)();\n  return iVar1;\n}\n\n", 
    "00106930": "\nvoid FUN_00106930(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00106910();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106b30();\n}\n\n", 
    "0010e1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ed0": "\nundefined8\nFUN_00103ed0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103e20(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid endpwent(void)\n\n{\n  (*(code *)PTR_endpwent_0010cf40)();\n  return;\n}\n\n", 
    "00107100": "\nulong FUN_00107100(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0010ceb0)();\n  return;\n}\n\n", 
    "0010e1f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t geteuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d00": "\nundefined8 FUN_00103d00(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103ca0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001057c0": "\nuint FUN_001057c0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d260;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "00103e20": "\nundefined8\nFUN_00103e20(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103d90(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001058e0": "\nundefined8 FUN_001058e0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0010d260;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_001043e0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00106910(lVar3 + 1);\n  FUN_001043e0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "0010e140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010ce70)();\n  return;\n}\n\n", 
    "00106b30": "\nvoid FUN_00106b30(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0010d020,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001072c0": "\nbool FUN_001072c0(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00105c80": "\nvoid FUN_00105c80(undefined8 param_1)\n\n{\n  FUN_00105c60(param_1,0x3a);\n  return;\n}\n\n", 
    "0010e148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getgroups(int __size,__gid_t *__list)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010cea8)();\n  return _Var1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010ce18)();\n  return piVar1;\n}\n\n", 
    "00102ef0": "\nvoid FUN_00102ef0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010cfd0)\n            (FUN_001027c0,unaff_retaddr,&stack0x00000008,FUN_00107730,FUN_001077a0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010e0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getcon(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010cf38)();\n  return pcVar1;\n}\n\n", 
    "00106bd0": "\nuint FUN_00106bd0(undefined8 param_1,uint param_2,int param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  \n  uVar3 = (ulong)param_2;\n  param_3 = param_3 + -1;\n  uVar2 = 0;\n  do {\n    uVar1 = FUN_00106ba0(param_1,uVar3 & 0xffffffff);\n    param_3 = param_3 + -1;\n    uVar2 = uVar2 | uVar1;\n  } while (param_3 != -1);\n  return uVar2;\n}\n\n", 
    "0010e0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103090": "\nvoid FUN_00103090(undefined4 param_1)\n\n{\n  FUN_00103b10(param_1,&DAT_0010d0d0);\n  return;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010ce68)();\n  return sVar1;\n}\n\n", 
    "0010e150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103400": "\nvoid FUN_00103400(void)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined **ppuVar4;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[0] = \"Multi-call invocation\";\n  local_98 = &DAT_001085d5;\n  local_90 = \"test invocation\";\n  local_80[1] = \"sha224sum\";\n  local_88 = \"coreutils\";\n  local_38 = 0;\n  local_30 = 0;\n  local_80[3] = \"sha256sum\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_58 = \"sha384sum\";\n  local_50 = \"sha2 utilities\";\n  local_48 = \"sha512sum\";\n  local_40 = \"sha2 utilities\";\n  pcVar2 = \"coreutils\";\n  ppuVar4 = &local_98;\n  while ((pcVar2 != (char *)0x0 && (((*pcVar2 != 'i' || (pcVar2[1] != 'd')) || (pcVar2[2] != '\\0')))\n         )) {\n    pcVar2 = *(char **)((long)ppuVar4 + 0x20);\n    ppuVar4 = (undefined **)((long)ppuVar4 + 0x10);\n  }\n  puVar5 = *(undefined **)((long)ppuVar4 + 0x18);\n  if (puVar5 == (undefined *)0x0) {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar5 = &DAT_001085d2;\n        goto LAB_0010363e;\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar5 = &DAT_001085d2;\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_001085d2);\n    pcVar2 = \" invocation\";\n  }\n  else {\n    uVar3 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar3,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar2 = setlocale(5,(char *)0x0);\n    if (pcVar2 != (char *)0x0) {\n      iVar1 = strncmp(pcVar2,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010363e:\n        uVar3 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar3,&DAT_001085d2);\n      }\n    }\n    uVar3 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    __printf_chk(1,uVar3,\"https://www.gnu.org/software/coreutils/\",&DAT_001085d2);\n    pcVar2 = \" invocation\";\n    if (puVar5 != &DAT_001085d2) {\n      pcVar2 = \"\";\n    }\n  }\n  uVar3 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar3,puVar5,pcVar2);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105820": "\nvoid FUN_00105820(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d260;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106910": "\nvoid FUN_00106910(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106b30();\n  }\n  return;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010cfa0)();\n  return sVar1;\n}\n\n", 
    "0010e1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105bb0": "\nvoid FUN_00105bb0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105b30(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010e128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrnam(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105df0": "\nvoid FUN_00105df0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105de0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010e1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010ced0)();\n  return iVar1;\n}\n\n", 
    "0010e0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrgid(__gid_t __gid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107080": "\nuint FUN_00107080(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010cf60)();\n  return pcVar1;\n}\n\n", 
    "00105d40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105d40(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0010d260;\n  uStack_60 = uRam000000000010d268;\n  local_38 = DAT_0010d290;\n  local_58 = _DAT_0010d270;\n  uStack_50 = uRam000000000010d278;\n  local_48 = _DAT_0010d280;\n  uStack_40 = uRam000000000010d288;\n  FUN_00105820(&local_68);\n  FUN_001055a0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001075c0": "\nint FUN_001075c0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010762f;\n    }\n    iVar1 = FUN_00107670(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010762f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "0010e0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a40": "\nvoid FUN_00103a40(undefined8 param_1)\n\n{\n  DAT_0010d150 = param_1;\n  return;\n}\n\n", 
    "00105e60": "\nvoid FUN_00105e60(undefined8 param_1)\n\n{\n  FUN_00105e50(0,param_1);\n  return;\n}\n\n", 
    "00103c80": "\nbool FUN_00103c80(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_001071f0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010cf98)();\n  return;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putchar_unlocked_0010cf08)();\n  return iVar1;\n}\n\n", 
    "0010e120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getuid_0010ce78)();\n  return _Var1;\n}\n\n", 
    "0010e000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid endgrent(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105ba0": "\nvoid FUN_00105ba0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00105ad0(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010e018": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid is_selinux_enabled(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105de0": "\nvoid FUN_00105de0(void)\n\n{\n  FUN_00105d40();\n  return;\n}\n\n", 
    "0010e1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010cf58)();\n  return pvVar1;\n}\n\n", 
    "001025a0": "\nvoid getcon(void)\n\n{\n  (*(code *)PTR_getcon_0010cec8)();\n  return;\n}\n\n", 
    "00107070": "\nbool FUN_00107070(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00105e50": "\nvoid FUN_00105e50(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105e30(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "0010e0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d90": "\nundefined8 FUN_00103d90(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00107170((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103d00(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010e130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putchar_unlocked(int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102730": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010cf90)();\n  return;\n}\n\n", 
    "0010e010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ngroup * getgrnam(char *__name)\n\n{\n  group *pgVar1;\n  \n  pgVar1 = (group *)(*(code *)PTR_getgrnam_0010cf00)();\n  return pgVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010cfb0)();\n  return iVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getgroups(int __size,__gid_t *__list)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getgroups_0010cf20)();\n  return iVar1;\n}\n\n", 
    "00102fe0": "\nundefined8 FUN_00102fe0(void)\n\n{\n  return 0;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0010ce90)();\n  return pcVar1;\n}\n\n", 
    "00106ba0": "\nbool FUN_00106ba0(ulong *param_1,int param_2)\n\n{\n  ulong uVar1;\n  bool bVar2;\n  \n  uVar1 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1),0);\n  bVar2 = SUB168(ZEXT816((ulong)(long)param_2) * ZEXT816(*param_1) >> 0x40,0) != 0;\n  if (bVar2) {\n    uVar1 = 0xffffffffffffffff;\n  }\n  *param_1 = uVar1;\n  return bVar2;\n}\n\n", 
    "00105bd0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105bd0(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0010d260;\n  uStack_40 = uRam000000000010d268;\n  local_38 = _DAT_0010d270;\n  uStack_30 = uRam000000000010d278;\n  local_28 = _DAT_0010d280;\n  uStack_20 = uRam000000000010d288;\n  local_18 = DAT_0010d290;\n  FUN_001057c0(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_001055a0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105ab0": "\nvoid FUN_00105ab0(undefined8 param_1)\n\n{\n  FUN_00105a80(0,param_1);\n  return;\n}\n\n", 
    "0010e108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nulong strtoul(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026f0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010cf70)();\n  return;\n}\n\n", 
    "001036c0": "\nvoid FUN_001036c0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0010d158;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [USER]\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Print user and group information for the specified USER,\\nor (when USER omitted) for the current user.\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -a             ignore, for compatibility with other versions\\n  -Z, --context  print only the security context of the process\\n  -g, --group    print only the effective group ID\\n  -G, --groups   print all group IDs\\n  -n, --name     print a name instead of a number, for -ugG\\n  -r, --real     print the real ID instead of the effective ID, with -ugG\\n  -u, --user     print only the effective user ID\\n  -z, --zero     delimit entries with NUL characters, not whitespace;\\n                   not permitted in default format\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nWithout any OPTION, print some useful set of identified information.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103400();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010cee0)();\n  return iVar1;\n}\n\n", 
    "001024b0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ce50)();\n  return;\n}\n\n", 
    "0010e1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a60": "\nvoid FUN_00103a60(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00107250(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0010d148 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0010d150 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00105c80();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00103ae8;\n    }\n  }\n  iVar1 = FUN_00107250(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00103ae8:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0010d020);\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010ce88)();\n  return sVar1;\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0010cdf8)();\n  return pcVar1;\n}\n\n", 
    "0010e100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102fd0": "\nvoid thunk_FUN_00102f50(void)\n\n{\n  FUN_00102f50();\n  return;\n}\n\n", 
    "00102760": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010cfa8)();\n  return;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getgid_0010cf18)();\n  return _Var1;\n}\n\n", 
    "00105aa0": "\nvoid FUN_00105aa0(void)\n\n{\n  FUN_001055a0();\n  return;\n}\n\n", 
    "00107650": "\nvoid FUN_00107650(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_001076b0(param_1,0,1);\n  return;\n}\n\n", 
    "0010e118": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwuid(__uid_t __uid)\n\n{\n  passwd *ppVar1;\n  \n  ppVar1 = (passwd *)(*(code *)PTR_getpwuid_0010ce48)();\n  return ppVar1;\n}\n\n", 
    "00102f20": "\n/* WARNING: Removing unreachable block (ram,0x00102f33) */\n/* WARNING: Removing unreachable block (ram,0x00102f3f) */\n\nvoid FUN_00102f20(void)\n\n{\n  return;\n}\n\n", 
    "0010e1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026e0": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010cf68)();\n  return;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010ced8)();\n  return iVar1;\n}\n\n", 
    "00106c00": "\nuint FUN_00106c00(byte *param_1,byte **param_2,uint param_3,ulong *param_4,char *param_5)\n\n{\n  byte bVar1;\n  uint uVar2;\n  int *piVar3;\n  ushort **ppuVar4;\n  byte *pbVar5;\n  ulong uVar6;\n  char *pcVar7;\n  int iVar8;\n  undefined8 uVar9;\n  uint uVar10;\n  byte bVar11;\n  long in_FS_OFFSET;\n  byte *local_50;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (0x24 < param_3) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"0 <= strtol_base && strtol_base <= 36\",\"lib/xstrtol.c\",0x60,\"xstrtoul\");\n  }\n  if (param_2 == (byte **)0x0) {\n    param_2 = &local_50;\n  }\n  piVar3 = __errno_location();\n  *piVar3 = 0;\n  bVar11 = *param_1;\n  ppuVar4 = __ctype_b_loc();\n  pbVar5 = param_1;\n  while ((*(byte *)((long)*ppuVar4 + (ulong)bVar11 * 2 + 1) & 0x20) != 0) {\n    bVar11 = pbVar5[1];\n    pbVar5 = pbVar5 + 1;\n  }\n  if (bVar11 != 0x2d) {\n    uVar6 = strtoul((char *)param_1,(char **)param_2,param_3);\n    pbVar5 = *param_2;\n    local_48 = uVar6;\n    if (pbVar5 != param_1) {\n      if (*piVar3 == 0) {\n        uVar10 = 0;\n      }\n      else {\n        uVar10 = 1;\n        if (*piVar3 != 0x22) goto LAB_00106cfb;\n      }\n      if ((param_5 != (char *)0x0) && (bVar11 = *pbVar5, bVar11 != 0)) {\n        iVar8 = (int)(char)bVar11;\nLAB_00106d3c:\n        pcVar7 = strchr(param_5,iVar8);\n        if (pcVar7 == (char *)0x0) {\nswitchD_00106d90_caseD_43:\n          uVar10 = uVar10 | 2;\n          *param_4 = local_48;\n          goto LAB_00106cc2;\n        }\n        switch(bVar11) {\n        case 0x45:\n        case 0x47:\n        case 0x4b:\n        case 0x4d:\n        case 0x50:\n        case 0x54:\n        case 0x59:\n        case 0x5a:\n        case 0x67:\n        case 0x6b:\n        case 0x6d:\n        case 0x74:\n          pcVar7 = strchr(param_5,0x30);\n          if (pcVar7 == (char *)0x0) goto switchD_00106d66_caseD_46;\n          bVar1 = pbVar5[1];\n          if (bVar1 == 0x44) {\n            iVar8 = 2;\n            uVar9 = 1000;\n          }\n          else if (bVar1 == 0x69) {\n            uVar9 = 0x400;\n            iVar8 = (pbVar5[2] == 0x42) + 1 + (uint)(pbVar5[2] == 0x42);\n          }\n          else {\n            iVar8 = (bVar1 == 0x42) + 1;\n            uVar9 = 0x400;\n            if (bVar1 == 0x42) {\n              uVar9 = 1000;\n            }\n          }\n          break;\n        default:\nswitchD_00106d66_caseD_46:\n          iVar8 = 1;\n          uVar9 = 0x400;\n        }\n        switch(bVar11) {\n        case 0x42:\n          uVar2 = FUN_00106ba0(&local_48,0x400);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        default:\n          goto switchD_00106d90_caseD_43;\n        case 0x45:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,6);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x47:\n        case 0x67:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,3);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4b:\n        case 0x6b:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,1);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x4d:\n        case 0x6d:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x50:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,5);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x54:\n        case 0x74:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,4);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x59:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,8);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x5a:\n          uVar2 = FUN_00106bd0(&local_48,uVar9,7);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 0x62:\n          uVar2 = FUN_00106ba0(&local_48,0x200);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n          break;\n        case 99:\n          break;\n        case 0x77:\n          uVar2 = FUN_00106ba0(&local_48,2);\n          pbVar5 = *param_2;\n          uVar10 = uVar10 | uVar2;\n        }\n        uVar6 = local_48;\n        *param_2 = pbVar5 + iVar8;\n        if (pbVar5[iVar8] != 0) {\n          uVar10 = uVar10 | 2;\n        }\n      }\n      *param_4 = uVar6;\n      goto LAB_00106cc2;\n    }\n    if ((param_5 != (char *)0x0) && (bVar11 = *param_1, bVar11 != 0)) {\n      iVar8 = (int)(char)bVar11;\n      pcVar7 = strchr(param_5,iVar8);\n      if (pcVar7 != (char *)0x0) {\n        local_48 = 1;\n        uVar10 = 0;\n        goto LAB_00106d3c;\n      }\n    }\n  }\nLAB_00106cfb:\n  uVar10 = 4;\nLAB_00106cc2:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar10;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103a50": "\nvoid FUN_00103a50(undefined param_1)\n\n{\n  DAT_0010d148 = param_1;\n  return;\n}\n\n", 
    "00105e70": "\nundefined8\nFUN_00105e70(char *param_1,char *param_2,__uid_t *param_3,__gid_t *param_4,char **param_5,\n            char **param_6)\n\n{\n  char cVar1;\n  int iVar2;\n  group *pgVar3;\n  char *pcVar4;\n  char *__name;\n  passwd *ppVar5;\n  void *__ptr;\n  undefined8 uVar6;\n  char *pcVar7;\n  long lVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  __gid_t local_78;\n  __uid_t local_74;\n  ulong local_60;\n  undefined local_58 [24];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_74 = *param_3;\n  local_78 = 0xffffffff;\n  if (param_4 != (__gid_t *)0x0) {\n    local_78 = *param_4;\n  }\n  if (param_5 != (char **)0x0) {\n    *param_5 = (char *)0x0;\n  }\n  if (param_6 != (char **)0x0) {\n    *param_6 = (char *)0x0;\n  }\n  if (param_2 == (char *)0x0) {\n    pcVar4 = (char *)0x0;\n    if (*param_1 != '\\0') {\n      __name = (char *)FUN_00106b10();\nLAB_00105ff4:\n      if (__name == (char *)0x0) {\nLAB_001060e0:\n        param_2 = (char *)0x0;\n        pcVar4 = (char *)0x0;\n      }\n      else {\n        bVar9 = param_2 != (char *)0x0;\n        if ((*__name == '+') || (ppVar5 = getpwnam(__name), ppVar5 == (passwd *)0x0)) {\n          bVar9 = param_2 == (char *)0x0;\n          pcVar4 = param_2;\n          param_2 = __name;\n          if (bVar9) goto LAB_001060f0;\n          endpwent();\n          __ptr = (void *)0x0;\n          pcVar7 = \"invalid spec\";\n          goto LAB_001060bb;\n        }\n        pcVar4 = (char *)0x0;\n        param_2 = __name;\nLAB_0010602a:\n        local_74 = ppVar5->pw_uid;\n        if (bVar9) {\n          local_78 = ppVar5->pw_gid;\n          pgVar3 = getgrgid(local_78);\n          if (pgVar3 == (group *)0x0) {\n            pcVar4 = (char *)FUN_00103b10(local_78,local_58);\n          }\n          else {\n            pcVar4 = pgVar3->gr_name;\n          }\n          pcVar4 = (char *)FUN_00106b10(pcVar4);\n          endgrent();\n          endpwent();\n        }\n        else {\n          endpwent();\n          if (pcVar4 != (char *)0x0) {\n            cVar1 = *pcVar4;\n            goto joined_r0x00106050;\n          }\n        }\n      }\n    }\n  }\n  else {\n    lVar8 = (long)param_2 - (long)param_1;\n    if (lVar8 == 0) {\n      cVar1 = param_2[1];\n      if (cVar1 == '\\0') goto LAB_001060e0;\n      pcVar4 = param_2 + 1;\n      param_2 = (char *)0x0;\n    }\n    else {\n      __name = (char *)FUN_00106ae0(param_1,lVar8 + 1);\n      __name[lVar8] = '\\0';\n      cVar1 = param_2[1];\n      if (cVar1 == '\\0') goto LAB_00105ff4;\n      pcVar4 = param_2 + 1;\n      if (__name == (char *)0x0) {\n        param_2 = (char *)0x0;\n        goto joined_r0x00106050;\n      }\n      param_2 = __name;\n      if ((*__name != '+') && (ppVar5 = getpwnam(__name), ppVar5 != (passwd *)0x0)) {\n        bVar9 = false;\n        goto LAB_0010602a;\n      }\nLAB_001060f0:\n      iVar2 = FUN_00106c00(param_2,0,10,&local_60,\"\");\n      if ((iVar2 != 0) || (local_74 = (__uid_t)local_60, 0xfffffffe < local_60)) {\n        endpwent();\n        __ptr = (void *)0x0;\n        pcVar7 = \"invalid user\";\n        __name = param_2;\n        goto LAB_001060bb;\n      }\n      endpwent();\n      if (pcVar4 == (char *)0x0) {\n        pcVar4 = (char *)0x0;\n        goto LAB_00105f28;\n      }\n      cVar1 = *pcVar4;\n    }\njoined_r0x00106050:\n    if ((cVar1 == '+') || (pgVar3 = getgrnam(pcVar4), pgVar3 == (group *)0x0)) {\n      iVar2 = FUN_00106c00(pcVar4,0,10,&local_60,\"\");\n      if ((iVar2 != 0) || (0xfffffffe < local_60)) {\n        endgrent();\n        pcVar7 = \"invalid group\";\n        __ptr = (void *)FUN_00106b10(pcVar4);\n        __name = param_2;\nLAB_001060bb:\n        free(__name);\n        free(__ptr);\n        uVar6 = dcgettext(0,pcVar7,5);\n        goto LAB_00105f67;\n      }\n      local_78 = (__gid_t)local_60;\n      endgrent();\n      pcVar4 = (char *)FUN_00106b10(pcVar4);\n    }\n    else {\n      local_78 = pgVar3->gr_gid;\n      endgrent();\n      pcVar4 = (char *)FUN_00106b10(pcVar4);\n    }\n  }\nLAB_00105f28:\n  *param_3 = local_74;\n  if (param_4 != (__gid_t *)0x0) {\n    *param_4 = local_78;\n  }\n  if (param_5 != (char **)0x0) {\n    *param_5 = param_2;\n    param_2 = (char *)0x0;\n  }\n  if (param_6 != (char **)0x0) {\n    *param_6 = pcVar4;\n    pcVar4 = (char *)0x0;\n  }\n  free(param_2);\n  free(pcVar4);\n  uVar6 = 0;\nLAB_00105f67:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103b70": "\nvoid FUN_00103b70(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0010d158 = pcVar1 + 1;\n    uVar3 = (long)DAT_0010d158 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0010d158;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0010d158 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010cf10)();\n  return iVar1;\n}\n\n", 
    "00102510": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010ce80)();\n  return;\n}\n\n", 
    "0010e110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\npasswd * getpwnam(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}