{
    "00103000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0011bfe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0011bfe8)();\n  }\n  return;\n}\n\n", 
    "00104de0": "\nlong FUN_00104de0(void *param_1,long *param_2,void *param_3,size_t param_4)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = *param_2;\n  if (lVar2 != 0) {\n    param_2 = param_2 + 1;\n    do {\n      iVar1 = memcmp(param_1,param_3,param_4);\n      if (iVar1 == 0) {\n        return lVar2;\n      }\n      lVar2 = *param_2;\n      param_3 = (void *)((long)param_3 + param_4);\n      param_2 = param_2 + 1;\n    } while (lVar2 != 0);\n  }\n  return lVar2;\n}\n\n", 
    "00104690": "\nvoid FUN_00104690(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0011c100;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\n                      \"Usage: %s [OPTION]... [+FORMAT]\\n  or:  %s [-u|--utc|--universal] [MMDDhhmm[[CC]YY][.ss]]\\n\"\n                      ,5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Display the current time in the given FORMAT, or set the system date.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00104050();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -d, --date=STRING          display time described by STRING, not \\'now\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --debug                annotate the parsed date,\\n                              and warn about questionable usage to stderr\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -f, --file=DATEFILE        like --date; once for each line of DATEFILE\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -I[FMT], --iso-8601[=FMT]  output date/time in ISO 8601 format.\\n                               FMT=\\'date\\' for date only (the default),\\n                               \\'hours\\', \\'minutes\\', \\'seconds\\', or \\'ns\\'\\n                               for date and time to the indicated precision.\\n                               Example: 2006-08-14T02:34:56-06:00\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -R, --rfc-email            output date and time in RFC 5322 format.\\n                               Example: Mon, 14 Aug 2006 02:34:56 -0600\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --rfc-3339=FMT         output date/time in RFC 3339 format.\\n                               FMT=\\'date\\', \\'seconds\\', or \\'ns\\'\\n                               for date and time to the indicated precision.\\n                               Example: 2006-08-14 02:34:56-06:00\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -r, --reference=FILE       display the last modification time of FILE\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -s, --set=STRING           set time described by STRING\\n  -u, --utc, --universal     print or set Coordinated Universal Time (UTC)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nFORMAT controls the output.  Interpreted sequences are:\\n\\n  %%   a literal %\\n  %a   locale\\'s abbreviated weekday name (e.g., Sun)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %A   locale\\'s full weekday name (e.g., Sunday)\\n  %b   locale\\'s abbreviated month name (e.g., Jan)\\n  %B   locale\\'s full month name (e.g., January)\\n  %c   locale\\'s date and time (e.g., Thu Mar  3 23:05:25 2005)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %C   century; like %Y, except omit last two digits (e.g., 20)\\n  %d   day of month (e.g., 01)\\n  %D   date; same as %m/%d/%y\\n  %e   day of month, space padded; same as %_d\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %F   full date; same as %Y-%m-%d\\n  %g   last two digits of year of ISO week number (see %G)\\n  %G   year of ISO week number (see %V); normally useful only with %V\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %h   same as %b\\n  %H   hour (00..23)\\n  %I   hour (01..12)\\n  %j   day of year (001..366)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %k   hour, space padded ( 0..23); same as %_H\\n  %l   hour, space padded ( 1..12); same as %_I\\n  %m   month (01..12)\\n  %M   minute (00..59)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %n   a newline\\n  %N   nanoseconds (000000000..999999999)\\n  %p   locale\\'s equivalent of either AM or PM; blank if not known\\n  %P   like %p, but lower case\\n  %q   quarter of year (1..4)\\n  %r   locale\\'s 12-hour clock time (e.g., 11:11:04 PM)\\n  %R   24-hour hour and minute; same as %H:%M\\n  %s   seconds since 1970-01-01 00:00:00 UTC\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %S   second (00..60)\\n  %t   a tab\\n  %T   time; same as %H:%M:%S\\n  %u   day of week (1..7); 1 is Monday\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %U   week number of year, with Sunday as first day of week (00..53)\\n  %V   ISO week number, with Monday as first day of week (01..53)\\n  %w   day of week (0..6); 0 is Sunday\\n  %W   week number of year, with Monday as first day of week (00..53)\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %x   locale\\'s date representation (e.g., 12/31/99)\\n  %X   locale\\'s time representation (e.g., 23:13:48)\\n  %y   last two digits of year (00..99)\\n  %Y   year\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  %z   +hhmm numeric time zone (e.g., -0400)\\n  %:z  +hh:mm numeric time zone (e.g., -04:00)\\n  %::z  +hh:mm:ss numeric time zone (e.g., -04:00:00)\\n  %:::z  numeric time zone with : to necessary precision (e.g., -04, +05:30)\\n  %Z   alphabetic time zone abbreviation (e.g., EDT)\\n\\nBy default, date pads numeric fields with zeroes.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"The following optional flags may follow \\'%\\':\\n\\n  -  (hyphen) do not pad the field\\n  _  (underscore) pad with spaces\\n  0  (zero) pad with zeros\\n  ^  use upper case if possible\\n  #  use opposite case if possible\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nAfter any flags comes an optional field width, as a decimal number;\\nthen an optional modifier, which is either\\nE to use the locale\\'s alternate representations if available, or\\nO to use the locale\\'s alternate numeric symbols if available.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nExamples:\\nConvert seconds since the epoch (1970-01-01 UTC) to a date\\n  $ date --date=\\'@2147483647\\'\\n\\nShow the time on the west coast of the US (use tzselect(1) to find TZ)\\n  $ TZ=\\'America/Los_Angeles\\' date\\n\\nShow the local time for 9AM next Friday on the west coast of the US\\n  $ date --date=\\'TZ=\\\"America/Los_Angeles\\\" 09:00 next Fri\\'\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_001043f0();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "0011d160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010da00": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010da00(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0011c220;\n  uStack_40 = uRam000000000011c228;\n  local_38 = _DAT_0011c230;\n  uStack_30 = uRam000000000011c238;\n  local_28 = _DAT_0011c240;\n  uStack_20 = uRam000000000011c248;\n  local_18 = DAT_0011c250;\n  FUN_0010d5f0(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_0010d3d0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010ba60": "\nint * FUN_0010ba60(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e4f0": "\nvoid FUN_0010e4f0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_0010e380();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010e3d0": "\nvoid thunk_FUN_0010e380(void)\n\n{\n  FUN_0010e380();\n  return;\n}\n\n", 
    "0010ef70": "\nbool FUN_0010ef70(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001038a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0011bf98)();\n  return;\n}\n\n", 
    "0010dc40": "\nvoid FUN_0010dc40(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_0010db70(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "0011d168": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stpcpy_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104e50": "\nvoid FUN_00104e50(undefined param_1)\n\n{\n  DAT_0011c0f0 = param_1;\n  return;\n}\n\n", 
    "001043d0": "\nundefined  [16] FUN_001043d0(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "0011d0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103910": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_0011bfd0)();\n  return;\n}\n\n", 
    "00111d10": "\nvoid FUN_00111d10(void)\n\n{\n  undefined auVar1 [16];\n  \n  auVar1 = FUN_00111cf0();\n  FUN_00111cf0(SUB168(auVar1,0),SUB168(auVar1 >> 0x40,0));\n  return;\n}\n\n", 
    "00106a70": "\nvoid FUN_00106a70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00105010();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail(param_1,param_2,param_5);\n}\n\n", 
    "0011d0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d800": "\nvoid FUN_0010d800(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0010d710(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "0011d0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c0e0": "\nchar * FUN_0010c0e0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_0010f1a0();\n    iVar1 = FUN_0010c030(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_0010c030(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00115edf;\n      }\n      else {\n        pcVar2 = &DAT_00115edc;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00115ee3;\n    }\n    else {\n      pcVar2 = &DAT_00115ed8;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00103590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0011be10)();\n  return iVar1;\n}\n\n", 
    "0011d030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid tzset(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108480": "\nchar * FUN_00108480(long param_1,char *param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  ulong uVar3;\n  long lVar4;\n  char *pcVar5;\n  \n  if (*(char *)(param_1 + 0xe0) == '\\0') {\n    *param_2 = '\\0';\n    uVar1 = *(uint *)(param_1 + 0x10);\n    if (6 < uVar1) {\n      return param_2;\n    }\n    uVar3 = 1;\n    lVar4 = 100;\n    pcVar5 = param_2;\n  }\n  else {\n    uVar3 = *(long *)(param_1 + 8) + 1;\n    if (uVar3 < 0xe) {\n      uVar2 = snprintf(param_2,100,\"%s\",&DAT_001159e0 + uVar3 * 0xb);\n      uVar1 = *(uint *)(param_1 + 0x10);\n      if ((6 < uVar1) || (99 < uVar2)) {\n        return param_2;\n      }\n    }\n    else {\n      uVar2 = __snprintf_chk(param_2,100,1,0xffffffffffffffff,0x114c5d);\n      uVar1 = *(uint *)(param_1 + 0x10);\n      if (6 < uVar1) {\n        return param_2;\n      }\n    }\n    lVar4 = (long)(int)(100 - uVar2);\n    uVar3 = (ulong)(uVar2 == 0);\n    pcVar5 = param_2 + (int)uVar2;\n  }\n  __snprintf_chk(pcVar5,lVar4,1,0xffffffffffffffff,&DAT_0011483f + uVar3,\n                 &DAT_001159c0 + (long)(int)uVar1 * 4);\n  return param_2;\n}\n\n", 
    "0010e3e0": "\nvoid * FUN_0010e3e0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010e5a0();\n  }\n  return pvVar1;\n}\n\n", 
    "0010ef80": "\nbool FUN_0010ef80(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010ec20": "\ntm * FUN_0010ec20(long param_1,time_t *param_2,tm *param_3)\n\n{\n  char cVar1;\n  long lVar2;\n  tm *ptVar3;\n  \n  if (param_1 == 0) {\n    ptVar3 = gmtime_r(param_2,param_3);\n    return ptVar3;\n  }\n  lVar2 = FUN_0010eb10();\n  if (lVar2 != 0) {\n    ptVar3 = localtime_r(param_2,param_3);\n    if ((ptVar3 != (tm *)0x0) && (cVar1 = FUN_0010e980(param_1,param_3), cVar1 != '\\0')) {\n      cVar1 = FUN_0010ebc0(lVar2);\n      if (cVar1 == '\\0') {\n        return (tm *)0x0;\n      }\n      return param_3;\n    }\n    FUN_0010ebc0(lVar2);\n  }\n  return (tm *)0x0;\n}\n\n", 
    "0011d038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t time(time_t *__timer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104e40": "\nvoid FUN_00104e40(undefined8 param_1)\n\n{\n  DAT_0011c0f8 = param_1;\n  return;\n}\n\n", 
    "0010b5a0": "\ntm * FUN_0010b5a0(int *param_1,int *param_2,long param_3,uint param_4)\n\n{\n  int iVar1;\n  tm *ptVar2;\n  long in_FS_OFFSET;\n  time_t tStack_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_3 == 1) {\n    iVar1 = *param_2;\n    ptVar2 = (tm *)0x1;\n    *param_1 = iVar1;\n    if (0x44 < *param_2) goto LAB_0010b5e7;\n    if ((param_4 & 8) == 0) {\n      *param_1 = iVar1 + 100;\n      goto LAB_0010b5e7;\n    }\n  }\n  else {\n    if (param_3 != 2) {\n      time(&tStack_28);\n      ptVar2 = localtime(&tStack_28);\n      if (ptVar2 != (tm *)0x0) {\n        *param_1 = ptVar2->tm_year;\n        ptVar2 = (tm *)0x1;\n      }\n      goto LAB_0010b5e7;\n    }\n    if ((param_4 & 2) != 0) {\n      *param_1 = *param_2 * 100 + param_2[1] + -0x76c;\n      ptVar2 = (tm *)0x1;\n      goto LAB_0010b5e7;\n    }\n  }\n  ptVar2 = (tm *)0x0;\nLAB_0010b5e7:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return ptVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e690": "\nvoid FUN_0010e690(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010e670(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0011d0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f90": "\n/* WARNING: Removing unreachable block (ram,0x00103fa3) */\n/* WARNING: Removing unreachable block (ram,0x00103faf) */\n\nvoid FUN_00103f90(void)\n\n{\n  return;\n}\n\n", 
    "00103900": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0011bfc8)();\n  return ppuVar1;\n}\n\n", 
    "0010c030": "\nundefined8\nFUN_0010c030(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_0010bf40(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "0010e450": "\nvoid FUN_0010e450(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010e4ab;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010e4ab:\n                    /* WARNING: Subroutine does not return */\n      FUN_0010e5a0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_0010e3e0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010dab0": "\nvoid FUN_0010dab0(undefined8 param_1)\n\n{\n  FUN_0010da90(param_1,0x3a);\n  return;\n}\n\n", 
    "0010ecc0": "\ntime_t FUN_0010ecc0(long param_1,tm *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  tm *ptVar4;\n  time_t tVar5;\n  long in_FS_OFFSET;\n  time_t local_70;\n  tm local_68;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    tVar5 = timegm(param_2);\n    goto LAB_0010ed32;\n  }\n  lVar3 = FUN_0010eb10();\n  if (lVar3 != 0) {\n    local_70 = mktime(param_2);\n    if (local_70 == -1) {\n      ptVar4 = localtime_r(&local_70,&local_68);\n      if ((ptVar4 != (tm *)0x0) && (iVar2 = FUN_0010e800(param_2,&local_68), iVar2 != 0))\n      goto LAB_0010ed12;\n    }\n    else {\nLAB_0010ed12:\n      cVar1 = FUN_0010e980(param_1,param_2);\n      if (cVar1 == '\\0') {\n        local_70 = -1;\n      }\n    }\n    cVar1 = FUN_0010ebc0(lVar3);\n    tVar5 = local_70;\n    if (cVar1 != '\\0') goto LAB_0010ed32;\n  }\n  tVar5 = -1;\nLAB_0010ed32:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return tVar5;\n}\n\n", 
    "0011d0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010b830": "\nundefined4 FUN_0010b830(time_t *param_1,undefined8 param_2,undefined4 param_3)\n\n{\n  char cVar1;\n  undefined4 uVar2;\n  undefined *puVar3;\n  tm *__tp;\n  long in_FS_OFFSET;\n  time_t local_d8;\n  undefined local_d0 [8];\n  uint local_c8;\n  uint uStack_c4;\n  uint local_c0;\n  uint uStack_bc;\n  uint local_b8;\n  uint uStack_b4;\n  tm local_88;\n  undefined local_48 [24];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = FUN_0010b650(&local_c8);\n  if ((char)uVar2 != '\\0') {\n    __tp = &local_88;\n    local_88.tm_isdst = -1;\n    local_d8 = mktime(__tp);\n    if ((local_d8 != -1) || (__tp = localtime(&local_d8), __tp != (tm *)0x0)) {\n      if ((uStack_b4 ^ __tp->tm_year | local_b8 ^ __tp->tm_mon | uStack_bc ^ __tp->tm_mday |\n           local_c0 ^ __tp->tm_hour | uStack_c4 ^ __tp->tm_min | __tp->tm_sec ^ local_c8) == 0) {\nLAB_0010b968:\n        *param_1 = local_d8;\n        goto LAB_0010b870;\n      }\n      if (local_c8 == 0x3c) {\n        puVar3 = (undefined *)__stpcpy_chk(local_48,param_2,0x10);\n        *(undefined2 *)(puVar3 + -2) = 0x3935;\n        *puVar3 = 0;\n        cVar1 = FUN_0010b830(local_d0,local_48,param_3);\n        if (cVar1 != '\\0') goto LAB_0010b968;\n      }\n    }\n  }\n  uVar2 = 0;\nLAB_0010b870:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "0011d0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107fb0": "\nvoid FUN_00107fb0(int *param_1,int *param_2,long param_3,char param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  int iVar3;\n  int iVar4;\n  int iVar5;\n  int iVar6;\n  int iVar7;\n  int iVar8;\n  int iVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  int iVar13;\n  bool bVar14;\n  bool bVar15;\n  undefined8 uVar16;\n  undefined8 uVar17;\n  undefined8 uVar18;\n  long lVar19;\n  long lVar20;\n  undefined8 uVar21;\n  undefined8 uVar22;\n  uint *puVar23;\n  long in_FS_OFFSET;\n  undefined4 local_ac;\n  char local_a8 [104];\n  long local_40;\n  \n  iVar2 = *param_1;\n  iVar3 = param_1[1];\n  iVar4 = param_2[1];\n  iVar5 = param_2[2];\n  iVar6 = param_1[3];\n  iVar7 = *param_2;\n  iVar8 = param_2[4];\n  iVar9 = param_1[2];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar10 = param_1[4];\n  iVar11 = param_1[5];\n  iVar12 = param_2[5];\n  iVar13 = param_2[3];\n  cVar1 = *(char *)(param_3 + 0xd9);\n  if ((iVar2 == iVar7) && (iVar3 == iVar4)) {\n    if ((((iVar9 == iVar5) || (iVar6 != iVar13)) || (iVar10 != iVar8)) || (iVar11 != iVar12)) {\n      if (cVar1 == '\\0') goto LAB_00108330;\n      uVar16 = dcgettext(0,\"error: invalid date/time value:\\n\",5);\n      FUN_00107360(uVar16);\n      uVar16 = FUN_00107f00(param_1,param_3,local_a8);\n      uVar17 = dcgettext(0,0x114b6d,5);\n      FUN_00107360(uVar17,uVar16);\n      uVar16 = FUN_00107f00(param_2,param_3,local_a8);\n      uVar17 = dcgettext(0,0x114b8b,5);\n      FUN_00107360(uVar17,uVar16);\n      uVar17 = 0x114b8a;\n      uVar16 = uVar17;\n      goto LAB_001081ee;\n    }\n    if (cVar1 == '\\0') goto LAB_00108330;\n    uVar16 = dcgettext(0,\"error: invalid date/time value:\\n\",5);\n    FUN_00107360(uVar16);\n    uVar16 = FUN_00107f00(param_1,param_3,local_a8);\n    uVar17 = dcgettext(0,0x114b6d,5);\n    FUN_00107360(uVar17,uVar16);\n    uVar16 = FUN_00107f00(param_2,param_3,local_a8);\n    uVar17 = dcgettext(0,0x114b8b,5);\n    FUN_00107360(uVar17,uVar16);\n    uVar17 = 0x114b8a;\n    uVar22 = 0x114b6a;\n    uVar16 = 0x114b8a;\n    bVar15 = true;\nLAB_0010810c:\n    bVar14 = bVar15;\n    uVar18 = 0x114b8a;\n  }\n  else {\n    local_ac = iVar4;\n    if (cVar1 == '\\0') goto LAB_00108330;\n    uVar16 = dcgettext(0,\"error: invalid date/time value:\\n\",5);\n    FUN_00107360(uVar16);\n    uVar16 = FUN_00107f00(param_1,param_3,local_a8);\n    uVar17 = dcgettext(0,0x114b6d,5);\n    FUN_00107360(uVar17,uVar16);\n    uVar16 = FUN_00107f00(param_2,param_3,local_a8);\n    uVar17 = dcgettext(0,0x114b8b,5);\n    FUN_00107360(uVar17,uVar16);\n    if (iVar2 == iVar7) {\n      uVar17 = 0x114b8a;\n      uVar16 = 0x114b6a;\n    }\n    else {\n      uVar17 = 0x114b6a;\n      uVar16 = uVar17;\n      if (iVar3 == local_ac) {\n        uVar16 = 0x114b8a;\n      }\n    }\nLAB_001081ee:\n    uVar18 = 0x114b6a;\n    uVar22 = 0x114b8a;\n    if (iVar9 != iVar5) {\n      uVar22 = 0x114b6a;\n    }\n    bVar14 = false;\n    bVar15 = false;\n    if (iVar6 == iVar13) goto LAB_0010810c;\n  }\n  puVar23 = (uint *)0x114b8a;\n  uVar21 = 0x114b6a;\n  if (iVar10 == iVar8) {\n    uVar21 = 0x114b8a;\n  }\n  if (iVar11 != iVar12) {\n    puVar23 = &UINT_00114b68;\n  }\n  __snprintf_chk(local_a8,100,1,100,\"                                 %4s %2s %2s %2s %2s %2s\",\n                 puVar23,uVar21,uVar18,uVar22,uVar16,uVar17);\n  lVar19 = 0x34;\n  do {\n    lVar20 = (long)(int)lVar19;\n    if (lVar19 == 0) {\n      lVar20 = 0;\n      break;\n    }\n    lVar19 = lVar19 + -1;\n  } while (local_a8[lVar19] == ' ');\n  local_a8[lVar20] = '\\0';\n  FUN_00107360(&UINT_00114bec,local_a8);\n  uVar16 = dcgettext(0,0x114ba9,5);\n  FUN_00107360(uVar16);\n  if (bVar14) {\n    uVar16 = dcgettext(0,\"       non-existing due to daylight-saving time;\\n\",5);\n    FUN_00107360(uVar16);\n  }\n  if ((iVar6 != iVar13) && (iVar10 != iVar8)) {\n    uVar16 = dcgettext(0,\"       invalid day/month combination;\\n\",5);\n    FUN_00107360(uVar16);\n  }\n  uVar16 = dcgettext(0,\"       numeric values overflow;\\n\",5);\n  FUN_00107360(uVar16);\n  if (param_4 == '\\0') {\n    uVar16 = dcgettext(0,&UINT_00114bd4,5);\n  }\n  else {\n    uVar16 = dcgettext(0,0x114bc1,5);\n  }\n  FUN_00107360(0x114be5,uVar16);\nLAB_00108330:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0010392f": "\nvoid FUN_0010392f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106ec0": "\nundefined ** FUN_00106ec0(undefined8 param_1,uint *param_2)\n\n{\n  byte **ppbVar1;\n  undefined uVar2;\n  byte bVar3;\n  int iVar4;\n  uint uVar5;\n  uint uVar6;\n  long lVar7;\n  uint *puVar8;\n  byte *pbVar9;\n  uint *puVar10;\n  char *pcVar11;\n  byte *pbVar12;\n  undefined **ppuVar13;\n  bool bVar14;\n  bool bVar15;\n  bool bVar16;\n  byte bVar17;\n  \n  bVar17 = 0;\n  bVar3 = *(byte *)param_2;\n  puVar10 = param_2;\n  while (bVar3 != 0) {\n    uVar2 = FUN_00106bd0();\n    bVar3 = FUN_0010f060(uVar2);\n    *(byte *)puVar10 = bVar3;\n    bVar3 = *(byte *)(uint *)((long)puVar10 + 1);\n    puVar10 = (uint *)((long)puVar10 + 1);\n  }\n  ppuVar13 = &PTR_UINT_0011bae0;\n  puVar10 = &UINT_00114a64;\n  do {\n    iVar4 = strcmp((char *)param_2,(char *)puVar10);\n    if (iVar4 == 0) {\n      return ppuVar13;\n    }\n    puVar10 = (uint *)ppuVar13[2];\n    ppuVar13 = ppuVar13 + 2;\n    puVar8 = param_2;\n  } while (puVar10 != (uint *)0x0);\n  do {\n    puVar10 = puVar8;\n    uVar5 = *puVar10 + 0xfefefeff & ~*puVar10;\n    uVar6 = uVar5 & 0x80808080;\n    puVar8 = puVar10 + 1;\n  } while (uVar6 == 0);\n  bVar14 = true;\n  bVar15 = (uVar5 & 0x8080) == 0;\n  if (bVar15) {\n    uVar6 = uVar6 >> 0x10;\n  }\n  if (bVar15) {\n    puVar8 = (uint *)((long)puVar10 + 6);\n  }\n  pbVar9 = (byte *)((long)puVar8 + ((-3 - (ulong)CARRY1((byte)uVar6,(byte)uVar6)) - (long)param_2));\n  if ((pbVar9 != (byte *)0x3) && (bVar14 = false, pbVar9 == (byte *)0x4)) {\n    bVar14 = *(byte *)((long)param_2 + 3) == 0x2e;\n  }\n  ppuVar13 = (undefined **)&DAT_0011b940;\n  pcVar11 = (char *)((long)&UINT_00114a64 + 3);\n  do {\n    if (bVar14) {\n      iVar4 = strncmp((char *)param_2,pcVar11,3);\n    }\n    else {\n      iVar4 = strcmp((char *)param_2,pcVar11);\n    }\n    bVar15 = iVar4 == 0;\n    if (bVar15) {\n      return ppuVar13;\n    }\n    pcVar11 = ppuVar13[2];\n    ppuVar13 = ppuVar13 + 2;\n  } while (pcVar11 != (char *)0x0);\n  ppuVar13 = (undefined **)FUN_00106df0(param_1,param_2);\n  bVar14 = false;\n  bVar16 = ppuVar13 == (undefined **)0x0;\n  if (bVar16) {\n    lVar7 = 4;\n    puVar10 = param_2;\n    pbVar12 = (byte *)((long)&UINT_00114bf0 + 1);\n    do {\n      if (lVar7 == 0) break;\n      lVar7 = lVar7 + -1;\n      bVar14 = *(byte *)puVar10 < *pbVar12;\n      bVar16 = *(byte *)puVar10 == *pbVar12;\n      puVar10 = (uint *)((long)puVar10 + (ulong)bVar17 * -2 + 1);\n      pbVar12 = pbVar12 + (ulong)bVar17 * -2 + 1;\n    } while (bVar16);\n    if ((!bVar14 && !bVar16) == bVar14) {\n      ppuVar13 = (undefined **)&DAT_0011bad0;\n    }\n    else {\n      ppuVar13 = (undefined **)&DAT_0011b880;\n      pcVar11 = (char *)((long)&UINT_00114a6c + 3);\n      do {\n        iVar4 = strcmp((char *)param_2,pcVar11);\n        if (iVar4 == 0) {\n          return ppuVar13;\n        }\n        pcVar11 = ppuVar13[2];\n        ppuVar13 = ppuVar13 + 2;\n      } while (pcVar11 != (char *)0x0);\n      pbVar12 = (byte *)((long)param_2 + (long)(pbVar9 + -1));\n      if (*pbVar12 == 0x53) {\n        *pbVar12 = 0;\n        ppuVar13 = (undefined **)&DAT_0011b880;\n        pcVar11 = (char *)((long)&UINT_00114a6c + 3);\n        do {\n          iVar4 = strcmp((char *)param_2,pcVar11);\n          if (iVar4 == 0) {\n            return ppuVar13;\n          }\n          pcVar11 = ppuVar13[2];\n          ppuVar13 = ppuVar13 + 2;\n        } while (pcVar11 != (char *)0x0);\n        *pbVar12 = 0x53;\n      }\n      ppuVar13 = &PTR_UINT_0011b720;\n      puVar10 = &UINT_00114a74;\n      do {\n        iVar4 = strcmp((char *)param_2,(char *)puVar10);\n        if (iVar4 == 0) {\n          return ppuVar13;\n        }\n        puVar10 = (uint *)ppuVar13[2];\n        ppuVar13 = ppuVar13 + 2;\n      } while (puVar10 != (uint *)0x0);\n      bVar3 = *(byte *)param_2;\n      if (pbVar9 == (byte *)0x1) {\n        ppuVar13 = &PTR_DAT_0011b240;\n        bVar17 = 0x41;\n        while (bVar3 != bVar17) {\n          ppbVar1 = ppuVar13 + 2;\n          ppuVar13 = ppuVar13 + 2;\n          if (*ppbVar1 == (byte *)0x0) goto LAB_001070cd;\n          bVar17 = **ppbVar1;\n        }\n      }\n      else {\nLAB_001070cd:\n        puVar10 = param_2;\n        puVar8 = param_2;\n        if (bVar3 != 0) {\n          do {\n            if (bVar3 == 0x2e) {\n              bVar15 = true;\n            }\n            else {\n              puVar10 = (uint *)((long)puVar10 + 1);\n            }\n            bVar3 = *(byte *)((long)puVar8 + 1);\n            puVar8 = (uint *)((long)puVar8 + 1);\n            *(byte *)puVar10 = bVar3;\n          } while (bVar3 != 0);\n          if (bVar15) {\n            ppuVar13 = (undefined **)FUN_00106df0(param_1,param_2);\n            return ppuVar13;\n          }\n        }\n        ppuVar13 = (undefined **)0x0;\n      }\n    }\n  }\n  return ppuVar13;\n}\n\n", 
    "00103020": "\nvoid FUN_00103020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0011bd98)();\n  return;\n}\n\n", 
    "0010dc20": "\nvoid FUN_0010dc20(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0010dc10(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0011d140": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010392a": "\nvoid FUN_0010392a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime(time_t *__timer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001038c0": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0011bfa8)();\n  return;\n}\n\n", 
    "001037a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0011bf18)();\n  return iVar1;\n}\n\n", 
    "0010dd40": "\nundefined8\nFUN_0010dd40(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0011663b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010e009;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_0010e009:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010e0ab;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010e0ab:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010de5d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010de5d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010ef50": "\nbool FUN_0010ef50(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "0011d148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107f00": "\nlong FUN_00107f00(undefined8 param_1,long param_2,long param_3)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined auStack_48 [40];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00110bf0(param_3,100,0x114b47,param_1,0,0);\n  if (((param_2 != 0) && (iVar1 < 100)) && (*(long *)(param_2 + 0xd0) != 0)) {\n    uVar2 = FUN_001071a0(*(undefined4 *)(param_2 + 0x18),auStack_48);\n    __snprintf_chk(iVar1 + param_3,(long)(100 - iVar1),1,0xffffffffffffffff,0x114b61,uVar2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001043f0": "\nvoid FUN_001043f0(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x1144b2;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_00114438;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 5;\n    pbVar7 = (byte *)0x114535;\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"date\";\n        goto LAB_0010460e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"date\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"date\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010460e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"date\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"date\");\n    if (pcVar4 != \"date\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103939": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_001111b4::caseD_5(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0011d1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e420": "\nvoid FUN_0010e420(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_0010e3e0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010e5a0();\n}\n\n", 
    "0010edb0": "\nulong FUN_0010edb0(FILE *param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  int iVar1;\n  size_t sVar2;\n  undefined *__ptr;\n  size_t sVar3;\n  int *piVar4;\n  ulong uVar5;\n  long in_FS_OFFSET;\n  size_t local_810;\n  undefined local_808 [2008];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_810 = 2000;\n  __ptr = (undefined *)FUN_00110c50(local_808,&local_810,param_2,param_3);\n  sVar2 = local_810;\n  if (__ptr != (undefined *)0x0) {\n    sVar3 = fwrite(__ptr,1,local_810,param_1);\n    if (sVar3 < sVar2) {\n      uVar5 = 0xffffffff;\n      if (__ptr != local_808) {\n        piVar4 = __errno_location();\n        iVar1 = *piVar4;\n        free(__ptr);\n        *piVar4 = iVar1;\n      }\n      goto LAB_0010ee3d;\n    }\n    if (__ptr != local_808) {\n      free(__ptr);\n    }\n    if (sVar2 < 0x80000000) {\n      uVar5 = sVar2 & 0xffffffff;\n      goto LAB_0010ee3d;\n    }\n    piVar4 = __errno_location();\n    *piVar4 = 0x4b;\n  }\n  uVar5 = 0xffffffff;\n  FUN_00110c40(param_1);\nLAB_0010ee3d:\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * gmtime_r(time_t *__timer,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d570": "\nvoid FUN_0010d570(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0011c220;\n  }\n  FUN_0010e550(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00103934": "\nvoid switchD_0010dde8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d690": "\nvoid FUN_0010d690(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0011c220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_0010c210(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00103810": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0011bf50)();\n  return;\n}\n\n", 
    "0011d1f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unsetenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strftime(char *__s,size_t __maxsize,char *__format,tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d900": "\nvoid FUN_0010d900(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010ba60(auStack_58);\n  FUN_0010d3d0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d250": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d010": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e4e0": "\nvoid FUN_0010e4e0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010e450(param_1,param_2,1);\n  return;\n}\n\n", 
    "00107290": "\nundefined8 FUN_00107290(int param_1,undefined8 param_2)\n\n{\n  uint uVar1;\n  uint uVar2;\n  uint uVar3;\n  \n  uVar3 = param_1 / 100 + 0x13;\n  uVar1 = (int)uVar3 >> 0x1f;\n  uVar2 = param_1 % 100 >> 0x1f;\n  __sprintf_chk(param_2,1,0xffffffffffffffff,(long)&UINT_00114a84 + (ulong)(-0x76d < param_1),\n                (uVar3 ^ uVar1) - uVar1,(param_1 % 100 ^ uVar2) - uVar2);\n  return param_2;\n}\n\n", 
    "0010ef60": "\nbool FUN_0010ef60(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "001038b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0011bfa0)();\n  return sVar1;\n}\n\n", 
    "0011d258": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001043e0": "\nundefined * FUN_001043e0(void)\n\n{\n  return &DAT_00114430;\n}\n\n", 
    "00104e60": "\nvoid FUN_00104e60(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_0010f0e0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0011c0f0 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0011c0f8 == 0) {\n        error(0,*piVar2,&DAT_00114840,uVar3);\n      }\n      else {\n        uVar4 = FUN_0010dab0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00104ee8;\n    }\n  }\n  iVar1 = FUN_0010f0e0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00104ee8:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0011c020);\n}\n\n", 
    "00103925": "\nvoid switchD_0010c2af::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f080": "\nint FUN_0010f080(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_0010f040(*param_1);\n      bVar2 = FUN_0010f040(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0011d0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint snprintf(char *__s,size_t __maxlen,char *__format,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0011bf48)();\n  return pcVar1;\n}\n\n", 
    "0011d1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e670": "\nvoid FUN_0010e670(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010e6d0(param_1,0,1);\n  return;\n}\n\n", 
    "00103920": "\nvoid FUN_00103920(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e550": "\nvoid FUN_0010e550(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_0010e380(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "0010eee0": "\nbool FUN_0010eee0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00112c80": "\nvoid FUN_00112c80(char *param_1,stat *param_2)\n\n{\n  __xstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "0011d0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_clock_gettime_0011bdf8)();\n  return iVar1;\n}\n\n", 
    "00103680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0011be88)();\n  return pvVar1;\n}\n\n", 
    "0010ef30": "\nulong FUN_0010ef30(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00107360": "\nvoid FUN_00107360(undefined4 param_1,undefined4 param_2,undefined4 param_3,undefined4 param_4,\n                 undefined4 param_5,undefined4 param_6,undefined4 param_7,undefined4 param_8,\n                 undefined8 param_9,undefined8 param_10,undefined8 param_11,undefined8 param_12,\n                 undefined8 param_13,undefined8 param_14)\n\n{\n  char in_AL;\n  long in_FS_OFFSET;\n  undefined4 local_d8;\n  undefined4 local_d4;\n  undefined *local_d0;\n  undefined *local_c8;\n  long local_c0;\n  undefined local_b8 [8];\n  undefined8 local_b0;\n  undefined8 local_a8;\n  undefined8 local_a0;\n  undefined8 local_98;\n  undefined8 local_90;\n  undefined4 local_88;\n  undefined4 local_78;\n  undefined4 local_68;\n  undefined4 local_58;\n  undefined4 local_48;\n  undefined4 local_38;\n  undefined4 local_28;\n  undefined4 local_18;\n  \n  if (in_AL != '\\0') {\n    local_88 = param_1;\n    local_78 = param_2;\n    local_68 = param_3;\n    local_58 = param_4;\n    local_48 = param_5;\n    local_38 = param_6;\n    local_28 = param_7;\n    local_18 = param_8;\n  }\n  local_c0 = *(long *)(in_FS_OFFSET + 0x28);\n  local_b0 = param_10;\n  local_a8 = param_11;\n  local_a0 = param_12;\n  local_98 = param_13;\n  local_90 = param_14;\n  fwrite((void *)((long)&UINT_00114a94 + 3),1,6,stderr);\n  local_d0 = &stack0x00000008;\n  local_c8 = local_b8;\n  local_d8 = 8;\n  local_d4 = 0x30;\n  FUN_0010edb0(stderr,param_9,&local_d8);\n  if (local_c0 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d240": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104090": "\nundefined8 FUN_00104090(char *param_1,undefined8 param_2,ulong param_3,undefined8 param_4)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  undefined8 local_88;\n  ulong local_80;\n  undefined local_78 [64];\n  undefined local_38 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_88 = param_2;\n  local_80 = param_3;\n  lVar1 = FUN_0010ec20(param_4,&local_88,local_78);\n  if (lVar1 == 0) {\n    uVar2 = thunk_FUN_00106b30(local_88,local_38);\n    uVar2 = FUN_0010dc90(uVar2);\n    uVar3 = dcgettext(0,\"time %s is out of range\",5);\n    error(0,0,uVar3,uVar2);\n    uVar2 = 0;\n  }\n  else {\n    if (param_1 == \"%a, %d %b %Y %H:%M:%S %z\") {\n      setlocale(2,\"C\");\n      FUN_00106a70(stdout,\"%a, %d %b %Y %H:%M:%S %z\",local_78,param_4,local_80 & 0xffffffff);\n      setlocale(2,(char *)((long)&UINT_00114b88 + 2));\n    }\n    else {\n      FUN_00106a70(stdout,param_1,local_78,param_4,local_80 & 0xffffffff);\n    }\n    fputc_unlocked(10,stdout);\n    uVar2 = 1;\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103f60": "\nvoid FUN_00103f60(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0011bfe0)\n            (FUN_00103950,unaff_retaddr,&stack0x00000008,FUN_00112be0,FUN_00112c50,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0011d128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putenv(char *__string)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d248": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001034e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0011bdb8)();\n  return;\n}\n\n", 
    "0011d1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t timegm(tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010dca0": "\nint FUN_0010dca0(timespec *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  long in_FS_OFFSET;\n  timeval local_38;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = clock_settime(0,param_1);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 != 1) {\n      local_38.tv_sec = param_1->tv_sec;\n      local_38.tv_usec = param_1->tv_nsec / 1000;\n      iVar1 = settimeofday(&local_38,(timezone *)0x0);\n    }\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010eeb0": "\nulong FUN_0010eeb0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00107e80": "\nundefined8 FUN_00107e80(long param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  long in_FS_OFFSET;\n  undefined local_2d [13];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = *(int *)(param_1 + 0x10);\n  uVar2 = FUN_00107290(*(undefined4 *)(param_1 + 0x14),local_2d);\n  __snprintf_chk(param_2,100,1,0xffffffffffffffff,0x114b32,uVar2,iVar1 + 1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return param_2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0011d0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103550": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0011bdf0)();\n  return;\n}\n\n", 
    "0011d1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_0011be80)();\n  return iVar1;\n}\n\n", 
    "00103790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0011bf10)();\n  return pvVar1;\n}\n\n", 
    "00112c94": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "0010e3a0": "\nvoid FUN_0010e3a0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_0010e380();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010e5a0();\n}\n\n", 
    "0010d3d0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_0010d3d0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0011c080;\n  if (DAT_0011c078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_0010e5a0();\n    }\n    if (PTR_DAT_0011c080 == &DAT_0011c090) {\n      puVar8 = (undefined4 *)FUN_0010e3e0(0);\n      uVar6 = PTR_DAT_0011c098._4_4_;\n      uVar5 = PTR_DAT_0011c098._0_4_;\n      uVar3 = _UNK_0011c094;\n      PTR_DAT_0011c080 = (undefined *)puVar8;\n      *puVar8 = _DAT_0011c090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_0010e3e0(PTR_DAT_0011c080);\n      PTR_DAT_0011c080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0011c078 * 4,0,(long)((param_1 + 1) - DAT_0011c078) << 4);\n    DAT_0011c078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_0010c210(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0011c120) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_0010e380(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_0010c210(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "0010dc10": "\nvoid FUN_0010dc10(void)\n\n{\n  FUN_0010db70();\n  return;\n}\n\n", 
    "0011d230": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104080": "\nchar * thunk_FUN_00106b30(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "0010e5e0": "\nint FUN_0010e5e0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010e64f;\n    }\n    iVar1 = FUN_0010e690(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010e64f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "001034d0": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_0011bdb0)();\n  return;\n}\n\n", 
    "0011d238": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001035f0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0011be40)();\n  return;\n}\n\n", 
    "0010f060": "\nint FUN_0010f060(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010bad0": "\nundefined8 FUN_0010bad0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bab0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00106d80": "\nulong FUN_00106d80(ulong param_1,int param_2)\n\n{\n  ulong uVar1;\n  \n  if (param_2 == 0) {\n    if (10 < param_1 - 1) {\n      return (ulong)-(uint)(param_1 != 0xc);\n    }\n  }\n  else {\n    if (param_2 == 1) {\n      if (param_1 - 1 < 0xb) {\n        return (ulong)((int)param_1 + 0xc);\n      }\n      uVar1 = 0xc;\n      if (param_1 != 0xc) {\n        uVar1 = 0xffffffff;\n      }\n      return uVar1;\n    }\n    if (0x17 < param_1) {\n      return 0xffffffff;\n    }\n  }\n  return param_1 & 0xffffffff;\n}\n\n", 
    "0011d0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010efe0": "\nbool FUN_0010efe0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "0010f0e0": "\nulong FUN_0010f0e0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010e5e0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00112c60": "\nvoid FUN_00112c60(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0011c008);\n  return;\n}\n\n", 
    "00103580": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0011be08)();\n  return;\n}\n\n", 
    "0011d1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t mktime(tm *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e6d0": "\nint FUN_0010e6d0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "0010ef10": "\nuint FUN_0010ef10(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00108590": "\nvoid FUN_00108590(undefined8 param_1,long param_2)\n\n{\n  byte bVar1;\n  undefined4 uVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  byte bVar6;\n  uint *puVar7;\n  long lVar8;\n  long in_FS_OFFSET;\n  undefined auStack_98 [104];\n  long local_30;\n  \n  bVar1 = *(byte *)(param_2 + 0xd9);\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (bVar1 == 0) goto LAB_001085b9;\n  uVar3 = dcgettext(0,0x114a9e,5);\n  FUN_00107360(uVar3,param_1);\n  if ((*(long *)(param_2 + 0xa8) == 0) || (*(char *)(param_2 + 0xda) != '\\0')) {\n    bVar6 = 0;\n    if (*(char *)(param_2 + 0xd8) != *(char *)(param_2 + 0xdf)) goto LAB_0010862e;\n  }\n  else {\n    __fprintf_chk(stderr,1,&UINT_00114bfc,*(undefined8 *)(param_2 + 0x28),\n                  *(undefined8 *)(param_2 + 0x38),*(undefined8 *)(param_2 + 0x40));\n    *(undefined *)(param_2 + 0xda) = 1;\n    bVar6 = bVar1;\n    if (*(char *)(param_2 + 0xd8) != *(char *)(param_2 + 0xdf)) {\n      fputc(0x20,stderr);\nLAB_0010862e:\n      uVar3 = *(undefined8 *)(param_2 + 0x28);\n      uVar4 = dcgettext(0,0x114c16,5);\n      __fprintf_chk(stderr,1,uVar4,uVar3);\n      *(undefined *)(param_2 + 0xdf) = *(undefined *)(param_2 + 0xd8);\n      bVar6 = bVar1;\n    }\n  }\n  if ((*(long *)(param_2 + 200) == 0) || (*(char *)(param_2 + 0xdd) != '\\0')) {\n    if ((*(long *)(param_2 + 0xb0) != 0) && (*(char *)(param_2 + 0xdb) == '\\0')) {\n      if (bVar6 != 0) goto LAB_001088b5;\n      goto LAB_001086a0;\n    }\n  }\n  else {\n    __fprintf_chk(stderr,1,(ulong)(bVar6 ^ 1) + 0x114c22,*(undefined8 *)(param_2 + 0x48),\n                  *(undefined8 *)(param_2 + 0x50),*(undefined8 *)(param_2 + 0x58));\n    if (*(long *)(param_2 + 0x60) != 0) {\n      __fprintf_chk(stderr,1,0x114c35);\n    }\n    if (*(int *)(param_2 + 0x1c) == 1) {\n      fwrite((void *)((long)&UINT_00114c38 + 3),1,2,stderr);\n    }\n    *(undefined *)(param_2 + 0xdd) = 1;\n    bVar6 = bVar1;\n    if ((*(long *)(param_2 + 0xb0) != 0) && (bVar6 = *(byte *)(param_2 + 0xdb), bVar6 == 0)) {\nLAB_001088b5:\n      fputc(0x20,stderr);\nLAB_001086a0:\n      uVar2 = *(undefined4 *)(param_2 + 0x10);\n      uVar3 = *(undefined8 *)(param_2 + 8);\n      uVar4 = FUN_00108480(param_2,auStack_98);\n      uVar5 = dcgettext(0,\"%s (day ordinal=%ld number=%d)\",5);\n      __fprintf_chk(stderr,1,uVar5,uVar4,uVar3,uVar2);\n      *(undefined *)(param_2 + 0xdb) = 1;\n      bVar6 = bVar1;\n    }\n  }\n  if ((*(long *)(param_2 + 0xb8) == 0) || (*(char *)(param_2 + 0xdc) != '\\0')) {\n    if ((*(long *)(param_2 + 0xd0) != 0) && (*(char *)(param_2 + 0xde) == '\\0')) {\n      lVar8 = (ulong)(bVar6 ^ 1) + 0x114bf5;\n      goto LAB_0010879c;\n    }\n    if (*(char *)(param_2 + 0xa0) != '\\0') {\n      uVar3 = *(undefined8 *)(param_2 + 0x58);\n      if (bVar6 != 0) goto LAB_001087d4;\n      goto LAB_001087e5;\n    }\n  }\n  else {\n    puVar7 = &UINT_00114bf0;\n    if (*(long *)(param_2 + 0xc0) == 0) {\n      puVar7 = (uint *)0x114b8a;\n    }\n    __fprintf_chk(stderr,1,(ulong)(bVar6 ^ 1) + 0x114c3e,*(undefined4 *)(param_2 + 0x14),puVar7);\n    *(undefined *)(param_2 + 0xdc) = 1;\n    if ((*(long *)(param_2 + 0xd0) != 0) && (*(char *)(param_2 + 0xde) == '\\0')) {\n      lVar8 = 0x114bf5;\nLAB_0010879c:\n      uVar3 = FUN_001071a0(*(undefined4 *)(param_2 + 0x18),auStack_98);\n      __fprintf_chk(stderr,1,lVar8,uVar3);\n      *(undefined *)(param_2 + 0xde) = 1;\n    }\n    if (*(char *)(param_2 + 0xa0) != '\\0') {\n      uVar3 = *(undefined8 *)(param_2 + 0x58);\nLAB_001087d4:\n      fputc(0x20,stderr);\nLAB_001087e5:\n      uVar4 = dcgettext(0,0x114c4a,5);\n      __fprintf_chk(stderr,1,uVar4,uVar3);\n    }\n  }\n  fputc(10,stderr);\nLAB_001085b9:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0011d100": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d220": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f270": "\nlong FUN_0010f270(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_toupper_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n", 
    "0010f150": "\nbool FUN_0010f150(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00104f50": "\nvoid FUN_00104f50(FILE *param_1,byte *param_2,long param_3)\n\n{\n  byte bVar1;\n  __int32_t **pp_Var2;\n  byte *pbVar3;\n  \n  if (param_3 != 0) {\n    pbVar3 = param_2 + param_3;\n    pp_Var2 = __ctype_tolower_loc();\n    do {\n      bVar1 = *param_2;\n      param_2 = param_2 + 1;\n      fputc((*pp_Var2)[bVar1],param_1);\n    } while (param_2 != pbVar3);\n    return;\n  }\n  return;\n}\n\n", 
    "0010ef00": "\nbool FUN_0010ef00(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0011d108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d228": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e860": "\nvoid FUN_0010e860(void)\n\n{\n  getenv(\"TZ\");\n  return;\n}\n\n", 
    "0011d1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107d80": "\nbool FUN_00107d80(int *param_1,char param_2,long param_3,long param_4,long param_5)\n\n{\n  long lVar1;\n  bool bVar2;\n  \n  if (param_4 < 3) {\n    if (-1 < param_5) {\nLAB_00107d8e:\n      lVar1 = param_3 * 0x3c;\n      if (param_2 == '\\0') {\n        bVar2 = SCARRY8(lVar1,param_5);\n        param_5 = lVar1 + param_5;\n      }\n      else {\n        bVar2 = SBORROW8(lVar1,param_5);\n        param_5 = lVar1 - param_5;\n      }\n      if ((SEXT816(lVar1) != SEXT816(param_3) * SEXT816(0x3c) | bVar2) != 0) {\n        return false;\n      }\n      goto LAB_00107daa;\n    }\n    param_5 = 0;\n    lVar1 = param_3;\n  }\n  else {\n    if (-1 < param_5) goto LAB_00107d8e;\n    lVar1 = param_3 / 100;\n    param_5 = param_3 % 100;\n  }\n  param_5 = param_5 + lVar1 * 0x3c;\nLAB_00107daa:\n  bVar2 = param_5 + 0x5a0U < 0xb41;\n  if (bVar2) {\n    *param_1 = (int)param_5 * 0x3c;\n  }\n  return bVar2;\n}\n\n", 
    "0010bbc0": "\nundefined8 FUN_0010bbc0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bb30(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010d650": "\nvoid FUN_0010d650(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0011c220;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e980": "\nundefined8 FUN_0010e980(long *param_1,char *param_2)\n\n{\n  char *__s2;\n  long *plVar1;\n  int iVar2;\n  size_t sVar3;\n  ulong uVar4;\n  int *piVar5;\n  long lVar6;\n  char *__s1;\n  \n  __s2 = *(char **)(param_2 + 0x30);\n  if (__s2 == (char *)0x0) {\n    return 1;\n  }\n  if ((__s2 < param_2) || (param_2 + 0x38 <= __s2)) {\n    __s1 = (char *)((long)param_1 + 9);\n    if (*__s2 != '\\0') {\n      do {\n        iVar2 = strcmp(__s1,__s2);\n        while( true ) {\n          if (iVar2 == 0) goto LAB_0010ea18;\n          if ((*__s1 == '\\0') &&\n             (((char *)((long)param_1 + 9) != __s1 || (*(char *)(param_1 + 1) == '\\0')))) {\n            sVar3 = strlen(__s2);\n            uVar4 = (long)__s1 - (long)(char *)((long)param_1 + 9);\n            if (~uVar4 < sVar3 + 1) {\n              piVar5 = __errno_location();\n              *piVar5 = 0xc;\n              return 0;\n            }\n            if (uVar4 + sVar3 + 1 < 0x77) {\n              FUN_0010e850(__s1,__s2);\n            }\n            else {\n              lVar6 = FUN_0010e8e0(__s2);\n              *param_1 = lVar6;\n              if (lVar6 == 0) {\n                return 0;\n              }\n              *(undefined *)(lVar6 + 8) = 0;\n              __s1 = (char *)(lVar6 + 9);\n            }\n            goto LAB_0010ea18;\n          }\n          sVar3 = strlen(__s1);\n          __s1 = __s1 + sVar3 + 1;\n          if ((*__s1 != '\\0') || (plVar1 = (long *)*param_1, plVar1 == (long *)0x0)) break;\n          __s1 = (char *)((long)plVar1 + 9);\n          iVar2 = strcmp(__s1,__s2);\n          param_1 = plVar1;\n        }\n      } while( true );\n    }\n    __s1 = (char *)((long)&UINT_00114b88 + 2);\nLAB_0010ea18:\n    *(char **)(param_2 + 0x30) = __s1;\n  }\n  return 1;\n}\n\n", 
    "00103690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_0011be90)();\n  return iVar1;\n}\n\n", 
    "00103570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setenv_0011be00)();\n  return iVar1;\n}\n\n", 
    "0010bc50": "\nundefined8\nFUN_0010bc50(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bbc0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010d5f0": "\nuint FUN_0010d5f0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0011c220;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "0011d210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010bb30": "\nundefined8 FUN_0010bb30(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bad0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "0010f040": "\nint FUN_0010f040(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "0011d218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e190": "\nvoid FUN_0010e190(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_0010dd40();\n  return;\n}\n\n", 
    "001034f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime(time_t *__timer)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_localtime_0011bdc0)();\n  return ptVar1;\n}\n\n", 
    "0010e750": "\nsize_t FUN_0010e750(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_0010f150(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e510": "\nvoid FUN_0010e510(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_0010e5a0();\n}\n\n", 
    "0011d1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_settime(clockid_t __clock_id,timespec *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010c210": "\nulong FUN_0010c210(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_0010c697:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_0010c6b9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_0010cc56;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_0010c60f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_0010c697;\n    }\n  case 1:\n    bVar1 = false;\nLAB_0010c60f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_0010c0e0(&DAT_00115ef7,param_5);\n      local_78 = (char *)FUN_0010c0e0(&DAT_00115ee7);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_0010c360:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_0010cbc0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010cb5b;\n          goto LAB_0010c94b;\n        default:\nswitchD_0010ca70_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_0010e750(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_0010ce48;\n              }\n              if (lVar10 == -2) goto joined_r0x0010d25a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_0010c830;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_0010ce48;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_0010c5d1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_0010cb18;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_0010cb18;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_0010cb18:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_0010c827;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_0010c814;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_0010c814:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_0010c538;\n          goto LAB_0010c827;\n        case 0x23:\n        case 0x7e:\nLAB_0010c80b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_0010c814;\n          goto LAB_0010c535;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_0010ca70_caseD_25;\n        case 0x27:\nswitchD_0010ca70_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_0010c538;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010c55b;\n          }\n          goto LAB_0010c830;\n        case 0x3f:\nswitchD_0010ca70_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010d1be_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_0010c538;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010c55b;\n          }\n          goto LAB_0010c830;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_0010c468_caseD_5c;\n          if (!bVar20) {\nLAB_0010caa8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_0010cac0;\n          }\n          goto LAB_0010c830;\n        case 0x7b:\n        case 0x7d:\nswitchD_0010ca70_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_0010c80b;\nLAB_0010c535:\n          bVar23 = false;\n          goto LAB_0010c538;\n        }\nLAB_0010c940:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_0010c94b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_0010c558;\n          goto LAB_0010c480;\n        }\nLAB_0010c980:\n        bVar21 = false;\n        goto joined_r0x0010c991;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_0010cba0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_0010c468_caseD_0;\n          default:\n            goto switchD_0010ca70_caseD_1;\n          case 7:\n            goto switchD_0010cbc0_caseD_7;\n          case 8:\n            goto switchD_0010cbc0_caseD_8;\n          case 9:\n            goto switchD_0010c468_caseD_9;\n          case 10:\n            goto switchD_0010cbc0_caseD_a;\n          case 0xb:\n            goto switchD_0010cbc0_caseD_b;\n          case 0xc:\n            goto switchD_0010cbc0_caseD_c;\n          case 0xd:\n            goto switchD_0010cbc0_caseD_d;\n          case 0x20:\n            goto LAB_0010cbe9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_0010c468_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_0010cbd1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_0010c478;\n          case 0x27:\n            goto switchD_0010ca70_caseD_27;\n          case 0x3f:\n            goto switchD_0010ca70_caseD_3f;\n          case 0x5c:\n            goto switchD_0010c468_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_0010ca70_caseD_7b;\n          }\n        }\n        goto LAB_0010c83e;\n      }\nLAB_0010cba0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_0010cbc0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_0010c468_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010c55b;\n            }\nLAB_0010cffb:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010cffb;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_0010d038;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010c55b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_0010c830;\n      default:\n        bVar23 = false;\n        goto switchD_0010ca70_caseD_1;\n      case 7:\nswitchD_0010cbc0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_0010cbc0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_0010c468_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_0010c940;\n      case 10:\nswitchD_0010cbc0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_0010c980;\n      case 0xb:\nswitchD_0010cbc0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_0010c980;\n      case 0xc:\nswitchD_0010cbc0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_0010cbc0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_0010c980;\n      case 0x20:\n        bVar5 = false;\nLAB_0010cbe9:\n        uVar15 = 0x20;\n        goto LAB_0010c478;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_0010c468_caseD_21:\n        bVar22 = false;\n        goto LAB_0010c535;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_0010cbd1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_0010c538;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_0010c480;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_0010c478:\n        bVar22 = false;\n        goto LAB_0010c480;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_0010ca70_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_0010ca70_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_0010c468_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_0010caa8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_0010c940;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_0010ca70_caseD_7b;\n      }\n      if (bVar20) goto LAB_0010c9a0;\n      bVar21 = false;\n      goto LAB_0010c4f6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_0010c827:\n      param_5 = 2;\nLAB_0010c830:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_0010c83e:\n      uVar13 = FUN_0010c210(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_0010c878;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_0010d2c5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_0010c878:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_0010c210(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_0010c878;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_0010d2c5;\nLAB_0010cc56:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_0010c6b9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010cb5b:\n  uVar13 = uVar13 + 1;\n  goto LAB_0010c360;\nswitchD_0010d1be_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_0010d038:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010c55b;\n    goto LAB_0010c480;\n  }\n  goto LAB_0010c83e;\njoined_r0x0010d25a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_0010ce48:\n  if (1 < uVar17) {\nLAB_0010ce52:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_0010c830;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_0010c508;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_0010cac0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_0010c5d1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_0010ce52;\n  }\nswitchD_0010ca70_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_0010c538:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_0010c480:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010c55b;\n  }\n  else {\nLAB_0010c558:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010c55b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_0010cac0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_0010c508;\n    }\n  }\njoined_r0x0010c991:\n  if (bVar20) {\nLAB_0010c9a0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_0010c830;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_0010c4f6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_0010c508:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_0010c360;\n}\n\n", 
    "0010bab0": "\nbool FUN_0010bab0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_0010f080(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "0010e870": "\nvoid FUN_0010e870(char *param_1)\n\n{\n  if (param_1 != (char *)0x0) {\n    setenv(\"TZ\",param_1,1);\n    return;\n  }\n  unsetenv(\"TZ\");\n  return;\n}\n\n", 
    "00103760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint settimeofday(timeval *__tv,timezone *__tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_settimeofday_0011bef8)();\n  return iVar1;\n}\n\n", 
    "00103880": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0011bf88)();\n  return;\n}\n\n", 
    "0010f1e0": "\nint FUN_0010f1e0(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = (param_1 - param_2) + 0x17e;\n  return (param_1 - iVar1) + 3 + (iVar1 / 7) * 7;\n}\n\n", 
    "00103520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0011bdd8)();\n  return iVar1;\n}\n\n", 
    "00103640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * gmtime_r(time_t *__timer,tm *__tp)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_gmtime_r_0011be68)();\n  return ptVar1;\n}\n\n", 
    "00104050": "\nvoid FUN_00104050(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0011d200": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001036e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putenv(char *__string)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putenv_0011beb8)();\n  return iVar1;\n}\n\n", 
    "001034a0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0011bff8)();\n  return;\n}\n\n", 
    "001035c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0011be28)();\n  return sVar1;\n}\n\n", 
    "00107e40": "\nundefined  [16] FUN_00107e40(undefined4 *param_1,undefined8 param_2)\n\n{\n  undefined4 uVar1;\n  \n  uVar1 = *param_1;\n  __snprintf_chk(param_2,100,1,0xffffffffffffffff,0x114b23,param_1[2],param_1[1]);\n  return ZEXT1216(CONCAT48(uVar1,param_2));\n}\n\n", 
    "0011d208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f010": "\nulong FUN_0010f010(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00103510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0011bdd0)();\n  return piVar1;\n}\n\n", 
    "0010d630": "\nundefined4 FUN_0010d630(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0011c220;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00103870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unsetenv(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unsetenv_0011bf80)();\n  return iVar1;\n}\n\n", 
    "00103fc0": "\n/* WARNING: Removing unreachable block (ram,0x00103fe4) */\n/* WARNING: Removing unreachable block (ram,0x00103ff0) */\n\nvoid FUN_00103fc0(void)\n\n{\n  return;\n}\n\n", 
    "00103630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0011be60)();\n  return pcVar1;\n}\n\n", 
    "00103750": "\nvoid __stpcpy_chk(void)\n\n{\n  (*(code *)PTR___stpcpy_chk_0011bef0)();\n  return;\n}\n\n", 
    "00107310": "\nuint FUN_00107310(uint param_1,long param_2,undefined8 param_3)\n\n{\n  if (param_2 == 0) {\n    return param_1;\n  }\n  __fprintf_chk(stderr,1,((param_1 ^ 1) & 0xff) + 0x114a8e,param_2,param_3);\n  return 1;\n}\n\n", 
    "00105010": "\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nulong FUN_00105010(FILE *param_1,char *param_2,undefined8 *param_3,char param_4,undefined8 param_5,\n                  undefined8 param_6,uint param_7)\n\n{\n  byte bVar1;\n  char cVar2;\n  long lVar3;\n  bool bVar4;\n  uint uVar5;\n  int iVar6;\n  char *pcVar7;\n  ulong uVar8;\n  ulong uVar9;\n  char *pcVar10;\n  size_t __size;\n  int iVar11;\n  char *pcVar12;\n  char cVar13;\n  int iVar14;\n  ulong uVar15;\n  char cVar16;\n  uint uVar17;\n  long lVar18;\n  long lVar19;\n  uint uVar20;\n  uint uVar21;\n  size_t sVar22;\n  char cVar23;\n  uint uVar24;\n  size_t sVar25;\n  ulong uVar26;\n  char *__s;\n  uint uVar27;\n  char *pcVar28;\n  uint *puVar29;\n  long in_FS_OFFSET;\n  bool bVar30;\n  char *local_4d8;\n  ulong local_4c0;\n  int local_4a8;\n  undefined8 local_488;\n  undefined8 uStack_480;\n  undefined8 local_478;\n  undefined8 uStack_470;\n  undefined8 local_468;\n  undefined8 uStack_460;\n  undefined8 local_458;\n  undefined2 local_44d;\n  char local_44b;\n  char local_44a [2];\n  undefined local_448;\n  undefined local_447 [21];\n  char local_432 [1010];\n  long local_40;\n  \n  __s = (char *)param_3[6];\n  uVar17 = *(uint *)(param_3 + 1);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (__s == (char *)0x0) {\n    __s = (char *)((long)&UINT_00114b88 + 2);\n  }\n  if ((int)uVar17 < 0xd) {\n    if (uVar17 == 0) {\n      uVar17 = 0xc;\n    }\n  }\n  else {\n    uVar17 = uVar17 - 0xc;\n  }\n  cVar13 = *param_2;\n  uVar26 = 0;\njoined_r0x00105075:\n  if (cVar13 != '\\0') {\n    if (cVar13 == '%') {\n      cVar13 = '\\0';\n      local_4a8 = 0;\n      cVar16 = param_4;\nLAB_00105110:\n      do {\n        cVar23 = param_2[1];\n        cVar2 = cVar23 + -0x30;\n        bVar30 = cVar23 == '0';\n        pcVar7 = param_2;\n        while (param_2 = pcVar7 + 1, !bVar30) {\n          uVar20 = (uint)cVar23;\n          if (!bVar30 && SBORROW1(cVar23,'0') == cVar2 < '\\0') {\n            if (cVar23 == '^') {\n              cVar16 = '\\x01';\n              goto LAB_00105110;\n            }\n            if (cVar23 == '_') {\n              local_4a8 = 0x5f;\n              goto LAB_00105110;\n            }\n            if (9 < uVar20 - 0x30) {\n              uVar24 = 0xffffffff;\n              goto LAB_001051c0;\n            }\n            uVar24 = 0;\n            pcVar7 = param_2;\n            goto LAB_001052b7;\n          }\n          if (cVar23 != '#') {\n            if (cVar23 != '-') {\n              uVar24 = 0xffffffff;\n              goto LAB_0010518e;\n            }\n            local_4a8 = 0x2d;\n            goto LAB_00105110;\n          }\n          cVar23 = pcVar7[2];\n          cVar13 = '\\x01';\n          cVar2 = cVar23 + -0x30;\n          pcVar7 = param_2;\n          bVar30 = cVar2 == '\\0';\n        }\n        local_4a8 = 0x30;\n      } while( true );\n    }\n    if (0xfffffffffffffffd < uVar26) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      fputc((int)cVar13,param_1);\n    }\n    uVar26 = uVar26 + 1;\n    goto LAB_001050a1;\n  }\nLAB_001050b0:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar26;\nLAB_001052b7:\n  do {\n    uVar20 = (uint)pcVar7[1];\n    param_2 = pcVar7 + 1;\n    uVar21 = uVar20 - 0x30;\n    if ((int)uVar24 < 0xccccccd) {\n      if ((uVar24 == 0xccccccc) && ('7' < *pcVar7)) goto LAB_001052f5;\n      uVar24 = *pcVar7 + -0x30 + uVar24 * 10;\n    }\n    else {\nLAB_001052f5:\n      if (9 < uVar21) {\n        uVar24 = 0x7fffffff;\n        break;\n      }\n      uVar20 = (uint)pcVar7[2];\n      uVar24 = 0x7fffffff;\n      param_2 = pcVar7 + 2;\n      uVar21 = uVar20 - 0x30;\n    }\n    pcVar7 = param_2;\n  } while (uVar21 < 10);\nLAB_001051c0:\n  if ((char)uVar20 != 'E') {\nLAB_0010518e:\n    if ((byte)uVar20 == 0x4f) goto LAB_001051c6;\n    uVar21 = uVar20;\n    uVar27 = 0;\n    uVar5 = uVar20;\n    if ((byte)uVar20 < 0x7b) goto LAB_0010519d;\n    goto switchD_001051af_caseD_1;\n  }\nLAB_001051c6:\n  bVar1 = param_2[1];\n  uVar5 = (uint)bVar1;\n  param_2 = param_2 + 1;\n  uVar21 = (uint)(char)bVar1;\n  uVar27 = uVar20;\n  if (0x7a < bVar1) goto switchD_001051af_caseD_1;\nLAB_0010519d:\n  cVar23 = (char)uVar5;\n                    /* WARNING (jumptable): Sanity check requires truncation of jumptable */\n                    /* WARNING: Could not find normalized switch variable to match jumptable */\n  switch(uVar5 & 0xff) {\n  case 0:\n    cVar13 = param_2[-1];\n    param_2 = param_2 + -1;\nLAB_00105ec0:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    if (cVar13 != '%') break;\n    local_4c0 = 1;\n    pcVar7 = param_2;\n    local_4d8 = (char *)1;\n    if (uVar8 != 0) {\n      local_4d8 = (char *)uVar8;\n    }\n    goto LAB_00105221;\n  case 0x25:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    local_4d8 = (char *)1;\n    if (uVar8 != 0) {\n      local_4d8 = (char *)uVar8;\n    }\n    if (uVar27 != 0) {\n      local_4c0 = 1;\n      pcVar7 = param_2;\n      goto LAB_00105221;\n    }\n    if (~uVar26 <= local_4d8) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      if (1 < (int)uVar24) {\n        lVar18 = 0;\n        if (local_4a8 == 0x30) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        else {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        uVar21 = (uint)*param_2;\n      }\n      fputc(uVar21,param_1);\n    }\n    goto LAB_001060ff;\n  case 0x3a:\n    pcVar7 = param_2 + 1;\n    uVar8 = 1;\n    cVar13 = param_2[1];\n    while (cVar13 == ':') {\n      uVar8 = uVar8 + 1;\n      pcVar7 = param_2 + uVar8;\n      cVar13 = param_2[uVar8];\n    }\n    if (cVar13 == 'z') goto LAB_0010613e;\n    break;\n  case 0x41:\n  case 0x61:\n    if (uVar27 != 0) break;\n    local_4c0._0_1_ = '\\0';\n    if (cVar13 != '\\0') {\n      cVar16 = cVar13;\n    }\n    uVar27 = 0;\n    pcVar7 = &local_44b;\n    goto LAB_00105346;\n  case 0x42:\n    if (uVar27 != 0x45) {\n      local_4c0._0_1_ = '\\0';\n      if (cVar13 != '\\0') {\n        cVar16 = cVar13;\n      }\n      goto LAB_00105323;\n    }\n    break;\n  case 0x43:\n    if (uVar27 != 0x45) {\n      local_4d8._0_4_ = 2;\n      uVar20 = *(uint *)((long)param_3 + 0x14);\n      iVar6 = (int)uVar20 / 100 + 0x13;\n      bVar30 = (int)uVar20 < -0x76c;\n      uVar8 = (ulong)(iVar6 - ((uint)(0 < iVar6) & (uint)((int)uVar20 % 100) >> 0x1f));\n      uVar21 = 0;\n      bVar4 = false;\n      goto LAB_0010557d;\n    }\nLAB_001065b0:\n    uVar20 = 0;\n    goto LAB_00105590;\n  case 0x44:\n    if (uVar27 == 0) {\n      puVar29 = (uint *)\"%m/%d/%y\";\n      goto LAB_0010601a;\n    }\n    break;\n  case 0x46:\n    if (uVar27 == 0) {\n      puVar29 = (uint *)\"%Y-%m-%d\";\n      goto LAB_0010601a;\n    }\n    break;\n  case 0x47:\n  case 0x56:\n  case 0x67:\n    if (uVar27 != 0x45) {\n      uVar20 = *(uint *)((long)param_3 + 0x14);\n      uVar21 = *(uint *)((long)param_3 + 0x1c);\n      uVar8 = (ulong)((uVar20 - 100) + ((int)uVar20 >> 0x1f & 400U));\n      iVar6 = FUN_00104f10(uVar21,*(uint *)(param_3 + 3));\n      iVar11 = (int)uVar8;\n      if (iVar6 < 0) {\n        uVar5 = iVar11 - 1;\n        iVar6 = 0x16d;\n        if (((uVar5 & 3) == 0) &&\n           (iVar6 = 0x16e, (uVar5 * -0x3d70a3d7 + 0x51eb850 >> 2 | uVar5 * 0x40000000) < 0x28f5c29))\n        {\n          iVar6 = ~-(uint)((int)uVar5 % 400 == 0) + 0x16e;\n        }\n        iVar6 = FUN_00104f10(uVar21 + iVar6);\n        iVar11 = -1;\n      }\n      else {\n        iVar14 = 0x16d;\n        if ((uVar8 & 3) == 0) {\n          iVar14 = 0x16e;\n          uVar5 = iVar11 * -0x3d70a3d7 + 0x51eb850;\n          if ((uVar5 >> 2 | iVar11 * 0x40000000) < 0x28f5c29) {\n            iVar14 = ((uVar5 >> 4 | iVar11 * -0x70000000) < 0xa3d70b) + 0x16d;\n          }\n        }\n        iVar11 = FUN_00104f10(uVar21 - iVar14);\n        if (-1 < iVar11) {\n          iVar6 = iVar11;\n        }\n        iVar11 = (iVar11 >> 0x1f) + 1;\n      }\n      if (cVar23 == 'G') {\n        local_4d8._0_4_ = 4;\n        uVar8 = (ulong)(uVar20 + 0x76c + iVar11);\n        bVar30 = (int)uVar20 < -0x76c - iVar11;\n        uVar21 = 0;\n        bVar4 = false;\n        goto LAB_0010557d;\n      }\n      if (cVar23 == 'g') {\n        uVar21 = ((int)uVar20 % 100 + iVar11) % 100;\n        uVar8 = (ulong)uVar21;\n        local_4d8._0_4_ = 2;\n        if ((int)uVar21 < 0) {\n          uVar5 = uVar21 + 100;\n          if ((int)uVar20 < -0x76c - iVar11) {\n            uVar5 = -uVar21;\n          }\n          uVar8 = (ulong)uVar5;\n        }\n      }\n      else {\n        uVar8 = (ulong)(iVar6 / 7 + 1);\n        local_4d8._0_4_ = 2;\n      }\n      goto LAB_00105570;\n    }\n    break;\n  case 0x48:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)(param_3 + 1);\n      local_4d8._0_4_ = 2;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x49:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)uVar17;\n      local_4d8._0_4_ = 2;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x4d:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)((long)param_3 + 4);\n      local_4d8._0_4_ = 2;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x4e:\n    if (uVar27 != 0x45) {\n      if (uVar24 == 0xffffffff) {\n        uVar8 = (ulong)param_7;\n        uVar24 = 9;\n        local_4d8._0_4_ = 9;\n      }\n      else {\n        local_4d8._0_4_ = uVar24;\n        if ((int)uVar24 < 9) {\n          uVar8 = (ulong)param_7;\n          uVar20 = uVar24;\n          do {\n            uVar20 = uVar20 + 1;\n            uVar8 = (ulong)(uint)((int)uVar8 / 10);\n          } while (uVar20 != 9);\n        }\n        else {\n          uVar8 = (ulong)param_7;\n        }\n      }\n      goto LAB_00105570;\n    }\n    break;\n  case 0x50:\n    local_4c0._0_1_ = '\\x01';\n    goto LAB_0010620f;\n  case 0x52:\n    puVar29 = (uint *)\"%H:%M\";\n    goto LAB_0010601a;\n  case 0x53:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)param_3;\n      local_4d8._0_4_ = 2;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x54:\n    puVar29 = &UINT_00114b58;\nLAB_0010601a:\n    uVar9 = FUN_00105010(0,puVar29,param_3,cVar16,param_5,param_6,param_7);\n    uVar8 = 0;\n    if (-1 < (int)uVar24) {\n      uVar8 = (long)(int)uVar24;\n    }\n    local_4d8 = (char *)uVar8;\n    if (uVar8 <= uVar9) {\n      local_4d8 = (char *)uVar9;\n    }\n    if (~uVar26 <= local_4d8) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      if (uVar9 < uVar8) {\n        uVar8 = (ulong)(int)uVar24;\n        if (local_4a8 == 0x30) {\n          if (uVar8 != uVar9) {\n            lVar18 = 0;\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x30,param_1);\n            } while (uVar8 - uVar9 != lVar18);\n          }\n        }\n        else {\n          lVar18 = 0;\n          if (uVar8 != uVar9) {\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x20,param_1);\n            } while (uVar8 - uVar9 != lVar18);\n          }\n        }\n      }\n      FUN_00105010(param_1,puVar29,param_3,cVar16,param_5,param_6,param_7);\n    }\nLAB_001060ff:\n    uVar26 = uVar26 + (long)local_4d8;\n    goto LAB_001050a1;\n  case 0x55:\n    if (uVar27 != 0x45) {\n      iVar6 = (*(uint *)((long)param_3 + 0x1c) - *(uint *)(param_3 + 3)) + 7;\nLAB_0010592b:\n      uVar8 = (ulong)(uint)(iVar6 / 7);\n      local_4d8._0_4_ = 2;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x57:\n    if (uVar27 != 0x45) {\n      iVar6 = (((int)(*(uint *)(param_3 + 3) + 6) / 7) * 7 - (*(uint *)(param_3 + 3) + 6)) + 7 +\n              *(uint *)((long)param_3 + 0x1c);\n      goto LAB_0010592b;\n    }\n    break;\n  case 0x58:\n  case 99:\n  case 0x78:\n    if (uVar27 != 0x4f) goto switchD_001051af_caseD_72;\n    break;\n  case 0x59:\n    if (uVar27 == 0x45) goto LAB_001065b0;\n    if (uVar27 == 0x4f) break;\n    local_4d8._0_4_ = 4;\n    bVar30 = (int)*(uint *)((long)param_3 + 0x14) < -0x76c;\n    uVar8 = (ulong)(*(uint *)((long)param_3 + 0x14) + 0x76c);\n    uVar21 = 0;\n    bVar4 = false;\n    goto LAB_00105990;\n  case 0x5a:\n    if (cVar13 != '\\0') {\n      cVar16 = '\\0';\n    }\n    __size = strlen(__s);\n    sVar25 = (size_t)(int)uVar24;\n    uVar8 = 0;\n    if (-1 < (int)uVar24) {\n      uVar8 = sVar25;\n    }\n    sVar22 = __size;\n    if (__size < uVar8) {\n      sVar22 = uVar8;\n    }\n    if (~uVar26 <= sVar22) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      if (__size < uVar8) {\n        if (local_4a8 == 0x30) {\n          if (sVar25 != __size) {\n            lVar18 = 0;\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x30,param_1);\n            } while (sVar25 - __size != lVar18);\n          }\n        }\n        else {\n          lVar18 = 0;\n          if (sVar25 != __size) {\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x20,param_1);\n            } while (sVar25 - __size != lVar18);\n          }\n        }\n      }\n      if (cVar13 == '\\0') {\n        if (cVar16 == '\\0') {\n          fwrite(__s,__size,1,param_1);\n        }\n        else {\n          FUN_00104fb0(param_1,__s,__size);\n        }\n      }\n      else {\n        FUN_00104f50(param_1,__s,__size);\n      }\n    }\n    uVar26 = uVar26 + sVar22;\n    goto LAB_001050a1;\n  case 0x62:\n  case 0x68:\n    if (cVar13 != '\\0') {\n      cVar16 = cVar13;\n    }\n    if (uVar27 != 0x45) goto switchD_001051af_caseD_72;\n    break;\n  case 100:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)((long)param_3 + 0xc);\n      local_4d8._0_4_ = 2;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x65:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)((long)param_3 + 0xc);\nLAB_001057e7:\n      local_4d8._0_4_ = 2;\n      if ((local_4a8 != 0x30) && (local_4a8 != 0x2d)) {\n        local_4a8 = 0x5f;\n      }\n      goto LAB_00105570;\n    }\n    break;\n  case 0x6a:\n    if (uVar27 != 0x45) {\n      local_4d8._0_4_ = 3;\n      bVar30 = (int)*(uint *)((long)param_3 + 0x1c) < -1;\n      uVar8 = (ulong)(*(uint *)((long)param_3 + 0x1c) + 1);\n      uVar21 = 0;\n      bVar4 = false;\n      goto LAB_0010557d;\n    }\n    break;\n  case 0x6b:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)(param_3 + 1);\n      goto LAB_001057e7;\n    }\n    break;\n  case 0x6c:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)uVar17;\n      goto LAB_001057e7;\n    }\n    break;\n  case 0x6d:\n    if (uVar27 != 0x45) {\n      local_4d8._0_4_ = 2;\n      bVar30 = (int)*(uint *)(param_3 + 2) < -1;\n      uVar8 = (ulong)(*(uint *)(param_3 + 2) + 1);\n      uVar21 = 0;\n      bVar4 = false;\n      goto LAB_0010557d;\n    }\n    break;\n  case 0x6e:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    if (uVar8 == 0) {\n      uVar8 = 1;\n    }\n    if (~uVar26 <= uVar8) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      if (1 < (int)uVar24) {\n        lVar18 = 0;\n        if (local_4a8 == 0x30) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        else {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n      }\n      fputc(10,param_1);\n    }\n    goto LAB_00105e06;\n  case 0x70:\n    local_4c0._0_1_ = '\\0';\nLAB_0010620f:\n    cVar23 = 'p';\n    if (cVar13 != '\\0') {\n      cVar16 = '\\0';\n      local_4c0._0_1_ = cVar13;\n    }\nLAB_00105323:\n    if (uVar27 != 0) {\n      local_4d8._0_4_ = 0;\n      goto LAB_001055a2;\n    }\n    pcVar7 = &local_44b;\n    goto LAB_00105346;\n  case 0x71:\n    local_4d8._0_4_ = 1;\n    uVar20 = 1;\n    if (uVar27 == 0x4f) goto LAB_00105590;\n    bVar4 = false;\n    bVar30 = false;\n    uVar21 = 0;\n    uVar8 = (ulong)(((int)(*(uint *)(param_3 + 2) * 0xb) >> 5) + 1);\n    goto LAB_00105997;\n  case 0x72:\nswitchD_001051af_caseD_72:\n    local_4c0._0_1_ = '\\0';\n    goto LAB_00105323;\n  case 0x73:\n    local_468 = param_3[4];\n    uStack_460 = param_3[5];\n    local_488 = *param_3;\n    uStack_480 = param_3[1];\n    local_478 = param_3[2];\n    uStack_470 = param_3[3];\n    local_458 = param_3[6];\n    lVar19 = FUN_0010ecc0(param_6,&local_488);\n    pcVar7 = local_432 + 1;\n    lVar18 = lVar19;\n    do {\n      lVar3 = lVar18 / 10;\n      cVar13 = (char)lVar18 + (char)lVar3 * -10;\n      if (lVar19 < 0) {\n        cVar13 = -cVar13;\n      }\n      pcVar7 = pcVar7 + -1;\n      *pcVar7 = cVar13 + '0';\n      lVar18 = lVar3;\n    } while (lVar3 != 0);\n    uVar20 = 1;\n    if (0 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    if (lVar19 < 0) goto LAB_00106280;\n    goto LAB_00105702;\n  case 0x74:\n    uVar20 = 0;\n    if (-1 < (int)uVar24) {\n      uVar20 = uVar24;\n    }\n    uVar8 = (ulong)(int)uVar20;\n    if (uVar8 == 0) {\n      uVar8 = 1;\n    }\n    if (~uVar26 <= uVar8) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      if (1 < (int)uVar24) {\n        lVar18 = 0;\n        if (local_4a8 == 0x30) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n        else {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while ((long)(int)uVar24 + -1 != lVar18);\n        }\n      }\n      fputc(9,param_1);\n    }\nLAB_00105e06:\n    uVar26 = uVar26 + uVar8;\n    goto LAB_001050a1;\n  case 0x75:\n    uVar8 = (ulong)((int)(*(uint *)(param_3 + 3) + 6) % 7 + 1);\n    local_4d8._0_4_ = 1;\n    goto LAB_00105570;\n  case 0x77:\n    if (uVar27 != 0x45) {\n      uVar8 = (ulong)*(uint *)(param_3 + 3);\n      local_4d8._0_4_ = 1;\n      goto LAB_00105570;\n    }\n    break;\n  case 0x79:\n    if (uVar27 == 0x45) goto LAB_001065b0;\n    uVar20 = (int)*(uint *)((long)param_3 + 0x14) % 100;\n    uVar8 = (ulong)uVar20;\n    local_4d8._0_4_ = 2;\n    if ((int)uVar20 < 0) {\n      uVar21 = uVar20 + 100;\n      if ((int)*(uint *)((long)param_3 + 0x14) < -0x76c) {\n        uVar21 = -uVar20;\n      }\n      uVar8 = (ulong)uVar21;\n    }\nLAB_00105570:\n    uVar21 = 0;\n    bVar4 = false;\n    bVar30 = SUB81(uVar8 >> 0x1f,0);\nLAB_0010557d:\n    iVar6 = (int)uVar8;\n    if (uVar27 != 0x4f) {\nLAB_00105990:\n      iVar6 = (int)uVar8;\n      if (bVar30 != false) goto LAB_00105995;\nLAB_00105997:\n      pcVar10 = local_432 + 1;\n      pcVar7 = local_432;\n      while( true ) {\n        if ((uVar21 & 1) != 0) {\n          pcVar10[-1] = ':';\n          pcVar28 = pcVar10 + -2;\n          pcVar10 = pcVar7;\n          pcVar7 = pcVar28;\n        }\n        uVar21 = (int)uVar21 >> 1;\n        pcVar10[-1] = (char)uVar8 + (char)(uVar8 / 10) * -10 + '0';\n        if (((uint)uVar8 < 10) && (uVar21 == 0)) break;\n        uVar8 = uVar8 / 10;\n        pcVar10 = pcVar7;\n        pcVar7 = pcVar7 + -1;\n      }\n      uVar20 = (uint)local_4d8;\n      if ((int)(uint)local_4d8 < (int)uVar24) {\n        uVar20 = uVar24;\n      }\n      if (bVar30 == false) {\n        if (bVar4) {\n          if (local_4a8 != 0x2d) {\n            cVar13 = '+';\n            goto LAB_00105a4a;\n          }\n          local_4d8._0_1_ = '+';\nLAB_00106294:\n          uVar21 = 0;\n          if (-1 < (int)uVar24) {\n            uVar21 = uVar24;\n          }\n          pcVar28 = (char *)(long)(int)uVar21;\n          pcVar10 = (char *)0x1;\n          if (pcVar28 != (char *)0x0) {\n            pcVar10 = pcVar28;\n          }\n          if ((char *)~uVar26 <= pcVar10) goto LAB_001050e0;\n          if (param_1 != (FILE *)0x0) {\n            if (((uVar20 == 0) && ((char *)0x1 < pcVar28)) && ((long)(int)uVar24 != 1)) {\n              lVar18 = 0;\n              do {\n                lVar18 = lVar18 + 1;\n                fputc(0x20,param_1);\n              } while ((long)(int)uVar24 + -1 != lVar18);\n            }\n            fputc((int)(char)local_4d8,param_1);\n          }\n          uVar26 = uVar26 + (long)pcVar10;\n          local_4a8 = 0x2d;\n          local_4d8 = local_432 + (1 - (long)pcVar7);\n          pcVar10 = (char *)~uVar26;\n        }\n        else {\nLAB_00105702:\n          local_4d8 = local_432 + (1 - (long)pcVar7);\n          pcVar10 = (char *)~uVar26;\n          if (local_4a8 != 0x2d) {\n            iVar6 = uVar20 - (uint)local_4d8;\n            if (0 < iVar6) {\n              cVar13 = '\\0';\n              goto LAB_00105a74;\n            }\n          }\n          uVar21 = 0;\n          if (-1 < (int)uVar24) {\n            uVar21 = uVar24;\n          }\n          pcVar28 = (char *)(long)(int)uVar21;\n        }\n      }\n      else {\nLAB_00106280:\n        cVar13 = '-';\n        if (local_4a8 == 0x2d) {\n          local_4d8._0_1_ = '-';\n          goto LAB_00106294;\n        }\nLAB_00105a4a:\n        local_4d8 = local_432 + (1 - (long)pcVar7);\n        iVar6 = (uVar20 - 1) - (int)local_4d8;\n        if (iVar6 < 1) {\n          uVar21 = 0;\n          if (-1 < (int)uVar24) {\n            uVar21 = uVar24;\n          }\n          pcVar28 = (char *)(long)(int)uVar21;\n          pcVar10 = (char *)0x1;\n          if (pcVar28 != (char *)0x0) {\n            pcVar10 = pcVar28;\n          }\n          if ((char *)~uVar26 <= pcVar10) goto LAB_001050e0;\n          if (param_1 != (FILE *)0x0) {\n            if ((uVar20 == 0) && ((char *)0x1 < pcVar28)) {\n              lVar18 = (long)(int)uVar24;\n              if (local_4a8 == 0x30) {\n                if (lVar18 != 1) {\n                  lVar19 = 0;\n                  do {\n                    lVar19 = lVar19 + 1;\n                    fputc(0x30,param_1);\n                  } while (lVar18 + -1 != lVar19);\n                }\n              }\n              else {\n                lVar19 = 0;\n                if (lVar18 != 1) {\n                  do {\n                    lVar19 = lVar19 + 1;\n                    fputc(0x20,param_1);\n                  } while (lVar18 + -1 != lVar19);\n                }\n              }\n            }\n            fputc((int)cVar13,param_1);\n          }\n          uVar26 = uVar26 + (long)pcVar10;\n          pcVar10 = (char *)~uVar26;\n        }\n        else {\nLAB_00105a74:\n          uVar8 = ~uVar26;\n          if (local_4a8 == 0x5f) {\n            uVar9 = (ulong)iVar6;\n            if (uVar8 <= uVar9) goto LAB_001050e0;\n            if (param_1 != (FILE *)0x0) {\n              uVar8 = 0;\n              do {\n                uVar8 = uVar8 + 1;\n                fputc(0x20,param_1);\n              } while (uVar8 < uVar9);\n            }\n            uVar26 = uVar26 + uVar9;\n            if (iVar6 < (int)uVar24) {\n              uVar24 = uVar24 - iVar6;\n              pcVar28 = (char *)(long)(int)uVar24;\n            }\n            else {\n              pcVar28 = (char *)0x0;\n              uVar24 = 0;\n            }\n            pcVar10 = (char *)~uVar26;\n            if (cVar13 == '\\0') {\n              local_4d8 = local_432 + (1 - (long)pcVar7);\n            }\n            else {\n              pcVar12 = (char *)0x1;\n              if (pcVar28 != (char *)0x0) {\n                pcVar12 = pcVar28;\n              }\n              if (pcVar10 <= pcVar12) goto LAB_001050e0;\n              if (param_1 != (FILE *)0x0) {\n                if (((uVar20 == 0) && ((char *)0x1 < pcVar28)) && ((long)(int)uVar24 != 1)) {\n                  lVar18 = 0;\n                  do {\n                    lVar18 = lVar18 + 1;\n                    fputc(0x20,param_1);\n                  } while ((long)(int)uVar24 + -1 != lVar18);\n                }\n                fputc((int)cVar13,param_1);\n                local_4a8 = 0x5f;\n              }\n              uVar26 = uVar26 + (long)pcVar12;\n              local_4d8 = local_432 + (1 - (long)pcVar7);\n              pcVar10 = (char *)~uVar26;\n            }\n          }\n          else {\n            if (uVar8 <= (ulong)(long)(int)uVar20) goto LAB_001050e0;\n            if (cVar13 != '\\0') {\n              uVar21 = 0;\n              if (-1 < (int)uVar24) {\n                uVar21 = uVar24;\n              }\n              uVar15 = (ulong)(int)uVar21;\n              uVar9 = 1;\n              if (uVar15 != 0) {\n                uVar9 = uVar15;\n              }\n              if (uVar8 <= uVar9) goto LAB_001050e0;\n              if (param_1 != (FILE *)0x0) {\n                if ((uVar20 == 0) && (1 < uVar15)) {\n                  lVar18 = (long)(int)uVar24;\n                  if (local_4a8 == 0x30) {\n                    if (lVar18 != 1) {\n                      lVar19 = 0;\n                      do {\n                        lVar19 = lVar19 + 1;\n                        fputc(0x30,param_1);\n                      } while (lVar18 + -1 != lVar19);\n                    }\n                  }\n                  else {\n                    lVar19 = 0;\n                    if (lVar18 != 1) {\n                      do {\n                        lVar19 = lVar19 + 1;\n                        fputc(0x20,param_1);\n                      } while (lVar18 + -1 != lVar19);\n                    }\n                  }\n                }\n                fputc((int)cVar13,param_1);\n              }\n              uVar26 = uVar26 + uVar9;\n            }\n            if (param_1 != (FILE *)0x0) {\n              uVar8 = 0;\n              do {\n                uVar8 = uVar8 + 1;\n                fputc(0x30,param_1);\n              } while (uVar8 < (ulong)(long)iVar6);\n            }\n            uVar26 = uVar26 + (long)iVar6;\n            pcVar28 = (char *)0x0;\n            uVar24 = 0;\n            local_4d8 = local_432 + (1 - (long)pcVar7);\n            pcVar10 = (char *)~uVar26;\n          }\n        }\n      }\n      pcVar12 = local_4d8;\n      if (local_4d8 < pcVar28) {\n        pcVar12 = pcVar28;\n      }\n      if (pcVar10 <= pcVar12) goto LAB_001050e0;\n      if (param_1 != (FILE *)0x0) {\n        if ((uVar20 == 0) && (local_4d8 < pcVar28)) {\n          pcVar10 = (char *)(long)(int)uVar24;\n          if (local_4a8 == 0x30) {\n            if (pcVar10 != local_4d8) {\n              lVar18 = 0;\n              do {\n                lVar18 = lVar18 + 1;\n                fputc(0x30,param_1);\n              } while ((long)pcVar10 - (long)local_4d8 != lVar18);\n            }\n          }\n          else {\n            lVar18 = 0;\n            if (pcVar10 != local_4d8) {\n              do {\n                lVar18 = lVar18 + 1;\n                fputc(0x20,param_1);\n              } while ((long)pcVar10 - (long)local_4d8 != lVar18);\n            }\n          }\n        }\n        if (cVar16 == '\\0') {\n          fwrite(pcVar7,(size_t)local_4d8,1,param_1);\n        }\n        else {\n          FUN_00104fb0(param_1,pcVar7,local_4d8);\n        }\n      }\n      uVar26 = uVar26 + (long)pcVar12;\n      goto LAB_001050a1;\n    }\n    uVar20 = (uint)local_4d8;\n    if (bVar30 != false) {\nLAB_00105995:\n      uVar8 = (ulong)(uint)-iVar6;\n      goto LAB_00105997;\n    }\nLAB_00105590:\n    local_4d8._0_4_ = uVar20;\n    local_4c0._0_1_ = '\\0';\nLAB_001055a2:\n    local_44b = (char)uVar27;\n    pcVar7 = local_44a;\n    uVar27 = (uint)local_4d8;\nLAB_00105346:\n    local_44d = 0x2520;\n    *pcVar7 = cVar23;\n    pcVar7[1] = '\\0';\n    lVar18 = FUN_00103830(&local_448,0x400,&local_44d,param_3);\n    if (lVar18 == 0) goto LAB_001050a1;\n    uVar8 = lVar18 - 1;\n    uVar9 = 0;\n    if (-1 < (int)uVar24) {\n      uVar9 = (long)(int)uVar24;\n    }\n    local_4d8 = (char *)uVar9;\n    if (uVar9 <= uVar8) {\n      local_4d8 = (char *)uVar8;\n    }\n    if (~uVar26 <= local_4d8) goto LAB_001050e0;\n    if (param_1 != (FILE *)0x0) {\n      if ((uVar27 == 0) && (uVar8 < uVar9)) {\n        uVar9 = (ulong)(int)uVar24;\n        if (local_4a8 == 0x30) {\n          if (uVar9 != uVar8) {\n            lVar18 = 0;\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x30,param_1);\n            } while (uVar9 - uVar8 != lVar18);\n          }\n        }\n        else {\n          lVar18 = 0;\n          if (uVar9 != uVar8) {\n            do {\n              lVar18 = lVar18 + 1;\n              fputc(0x20,param_1);\n            } while (uVar9 - uVar8 != lVar18);\n          }\n        }\n      }\n      if ((char)local_4c0 == '\\0') {\n        if (cVar16 == '\\0') {\n          fwrite(local_447,uVar8,1,param_1);\n        }\n        else {\n          FUN_00104fb0(param_1,local_447,uVar8);\n        }\n      }\n      else {\n        FUN_00104f50(param_1,local_447,uVar8);\n      }\n    }\n    goto LAB_00105298;\n  case 0x7a:\n    uVar8 = 0;\n    pcVar7 = param_2;\nLAB_0010613e:\n    param_2 = pcVar7;\n    if ((int)*(uint *)(param_3 + 4) < 0) goto LAB_001050a1;\n    bVar30 = true;\n    iVar6 = (int)param_3[5];\n    if ((-1 < iVar6) && (bVar30 = false, iVar6 == 0)) {\n      bVar30 = *__s == '-';\n    }\n    uVar20 = iVar6 / 0xe10;\n    uVar21 = (iVar6 / 0x3c) % 0x3c;\n    if (uVar8 == 2) {\nLAB_0010686b:\n      local_4d8._0_4_ = 9;\n      bVar4 = true;\n      iVar11 = uVar21 * 100;\n      uVar21 = 0x14;\n      uVar8 = (ulong)(iVar6 % 0x3c + uVar20 * 10000 + iVar11);\n    }\n    else if (uVar8 < 3) {\n      if (uVar8 == 0) {\n        local_4d8._0_4_ = 5;\n        bVar4 = true;\n        uVar8 = (ulong)(uVar20 * 100 + uVar21);\n        uVar21 = 0;\n      }\n      else {\nLAB_001061de:\n        local_4d8._0_4_ = 6;\n        bVar4 = true;\n        uVar8 = (ulong)(uVar20 * 100 + uVar21);\n        uVar21 = 4;\n      }\n    }\n    else {\n      if (uVar8 != 3) {\n        cVar13 = *param_2;\n        goto LAB_00105ec0;\n      }\n      if (iVar6 % 0x3c != 0) goto LAB_0010686b;\n      if (uVar21 != 0) goto LAB_001061de;\n      uVar8 = (ulong)uVar20;\n      local_4d8._0_4_ = 3;\n      bVar4 = true;\n    }\n    goto LAB_0010557d;\n  }\nswitchD_001051af_caseD_1:\n  pcVar7 = param_2;\n  do {\n    pcVar7 = pcVar7 + -1;\n  } while (*pcVar7 != '%');\n  local_4c0 = (ulong)(((int)param_2 + 1) - (int)pcVar7);\n  uVar20 = 0;\n  if (-1 < (int)uVar24) {\n    uVar20 = uVar24;\n  }\n  uVar8 = (ulong)(int)uVar20;\n  local_4d8 = (char *)local_4c0;\n  if (local_4c0 < uVar8) {\n    local_4d8 = (char *)uVar8;\n  }\nLAB_00105221:\n  if (~uVar26 <= local_4d8) {\nLAB_001050e0:\n    uVar26 = 0;\n    goto LAB_001050b0;\n  }\n  if (param_1 != (FILE *)0x0) {\n    if (local_4c0 < uVar8) {\n      uVar8 = (ulong)(int)uVar24;\n      if (local_4a8 == 0x30) {\n        if (uVar8 != local_4c0) {\n          lVar18 = 0;\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x30,param_1);\n          } while (uVar8 - local_4c0 != lVar18);\n        }\n      }\n      else {\n        lVar18 = 0;\n        if (uVar8 != local_4c0) {\n          do {\n            lVar18 = lVar18 + 1;\n            fputc(0x20,param_1);\n          } while (uVar8 - local_4c0 != lVar18);\n        }\n      }\n    }\n    if (cVar16 == '\\0') {\n      fwrite(pcVar7,local_4c0,1,param_1);\n    }\n    else {\n      FUN_00104fb0(param_1,pcVar7,local_4c0);\n    }\n  }\nLAB_00105298:\n  uVar26 = uVar26 + (long)local_4d8;\nLAB_001050a1:\n  cVar13 = param_2[1];\n  param_2 = param_2 + 1;\n  goto joined_r0x00105075;\n}\n\n", 
    "0010da90": "\nvoid FUN_0010da90(undefined8 param_1,char param_2)\n\n{\n  FUN_0010da00(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00112c50": "\nvoid FUN_00112c50(void)\n\n{\n  return;\n}\n\n", 
    "00106df0": "\nundefined ** FUN_00106df0(long param_1,char *param_2)\n\n{\n  char **ppcVar1;\n  char *__s2;\n  int iVar2;\n  uint *puVar3;\n  undefined **ppuVar4;\n  \n  ppuVar4 = &PTR_UINT_0011b6e0;\n  puVar3 = &UINT_00114a5c;\n  do {\n    iVar2 = strcmp(param_2,(char *)puVar3);\n    if (iVar2 == 0) {\n      return ppuVar4;\n    }\n    puVar3 = (uint *)ppuVar4[2];\n    ppuVar4 = ppuVar4 + 2;\n  } while (puVar3 != (uint *)0x0);\n  ppuVar4 = (undefined **)(param_1 + 0xe8);\n  __s2 = *(char **)(param_1 + 0xe8);\n  while (__s2 != (char *)0x0) {\n    iVar2 = strcmp(param_2,__s2);\n    if (iVar2 == 0) {\n      return ppuVar4;\n    }\n    ppcVar1 = ppuVar4 + 2;\n    ppuVar4 = ppuVar4 + 2;\n    __s2 = *ppcVar1;\n  }\n  ppuVar4 = &PTR_UINT_0011b3e0;\n  puVar3 = &UINT_00114a60;\n  do {\n    iVar2 = strcmp(param_2,(char *)puVar3);\n    if (iVar2 == 0) {\n      return ppuVar4;\n    }\n    puVar3 = (uint *)ppuVar4[2];\n    ppuVar4 = ppuVar4 + 2;\n  } while (puVar3 != (uint *)0x0);\n  return (undefined **)0x0;\n}\n\n", 
    "0010be70": "\nundefined8\nFUN_0010be70(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bdb0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e7e0": "\nuint FUN_0010e7e0(uint param_1,uint param_2)\n\n{\n  uint uVar1;\n  \n  uVar1 = 0;\n  if ((param_1 == 0) != (param_2 == 0)) {\n    uVar1 = (~param_1 & ~param_2) >> 0x1f;\n  }\n  return uVar1;\n}\n\n", 
    "00104040": "\nvoid thunk_FUN_00103fc0(void)\n\n{\n  FUN_00103fc0();\n  return;\n}\n\n", 
    "0010e5a0": "\nvoid FUN_0010e5a0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0011c020,0,&DAT_00114840,uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010d5d0": "\nvoid FUN_0010d5d0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0011c220;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "001037f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0011bf40)();\n  return pvVar1;\n}\n\n", 
    "00112be0": "\nvoid FUN_00112be0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "001035b0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0011be20)();\n  return;\n}\n\n", 
    "001036d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0011beb0)();\n  return pvVar1;\n}\n\n", 
    "0010b9a0": "\nvoid FUN_0010b9a0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0011c100 = pcVar1 + 1;\n    uVar3 = (long)DAT_0011c100 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0011c100;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0011c100 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "0010e850": "\nvoid FUN_0010e850(void *param_1,void *param_2,size_t param_3)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = memcpy(param_1,param_2,param_3);\n  *(undefined *)((long)pvVar1 + param_3) = 0;\n  return;\n}\n\n", 
    "00103500": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0011bdc8)();\n  return;\n}\n\n", 
    "00103620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint snprintf(char *__s,size_t __maxlen,char *__format,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_snprintf_0011be58)();\n  return iVar1;\n}\n\n", 
    "00103540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0011bde8)();\n  return;\n}\n\n", 
    "00103660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_gettimeofday_0011be78)();\n  return iVar1;\n}\n\n", 
    "00103780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_putc_unlocked_0011bf08)();\n  return iVar1;\n}\n\n", 
    "00106ac0": "\nvoid FUN_00106ac0(timespec *param_1)\n\n{\n  int iVar1;\n  long in_FS_OFFSET;\n  timeval local_28;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = clock_gettime(0,param_1);\n  if (iVar1 != 0) {\n    gettimeofday(&local_28,(__timezone_ptr_t)0x0);\n    param_1->tv_sec = local_28.tv_sec;\n    param_1->tv_nsec = local_28.tv_usec * 1000;\n  }\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106be0": "\nlong FUN_00106be0(long param_1)\n\n{\n  long lVar1;\n  undefined4 param_7;\n  undefined4 uStack000000000000000c;\n  undefined4 uStack0000000000000010;\n  undefined4 uStack0000000000000014;\n  long param_8;\n  \n  lVar1 = *(long *)(param_1 + 0xa8);\n  if (((lVar1 == 0) || (*(long *)(param_1 + 0x30) != 0)) || (*(char *)(param_1 + 0xa1) != '\\0')) {\n    if (4 < param_8) {\n      *(long *)(param_1 + 0xa8) = lVar1 + 1;\n      *(long *)(param_1 + 0x30) = param_8 + -4;\n      *(long *)(param_1 + 0x40) = _uStack0000000000000010 % 100;\n      *(long *)(param_1 + 0x38) = (_uStack0000000000000010 / 100) % 100;\n      *(long *)(param_1 + 0x28) = _uStack0000000000000010 / 10000;\n      return _uStack0000000000000010 * 0x346dc5d63886594b;\n    }\n    *(long *)(param_1 + 200) = *(long *)(param_1 + 200) + 1;\n    if (2 < param_8) {\n      *(long *)(param_1 + 0x48) = _uStack0000000000000010 / 100;\n      lVar1 = (_uStack0000000000000010 / 100) * 100;\n      *(long *)(param_1 + 0x50) = _uStack0000000000000010 % 100;\n      goto LAB_00106d1e;\n    }\n  }\n  else {\n    if ((*(long *)(param_1 + 200) != 0) || (2 < param_8)) {\n      *(undefined *)(param_1 + 0xd8) = 1;\n      *(long *)(param_1 + 0x30) = param_8;\n      *(undefined4 *)(param_1 + 0x20) = param_7;\n      *(undefined4 *)(param_1 + 0x24) = uStack000000000000000c;\n      *(undefined4 *)(param_1 + 0x28) = uStack0000000000000010;\n      *(undefined4 *)(param_1 + 0x2c) = uStack0000000000000014;\n      return param_8;\n    }\n    *(undefined8 *)(param_1 + 200) = 1;\n  }\n  *(long *)(param_1 + 0x48) = _uStack0000000000000010;\n  *(undefined8 *)(param_1 + 0x50) = 0;\nLAB_00106d1e:\n  *(undefined8 *)(param_1 + 0x58) = 0;\n  *(undefined8 *)(param_1 + 0x60) = 0;\n  *(undefined4 *)(param_1 + 0x1c) = 2;\n  return lVar1;\n}\n\n", 
    "00104f10": "\nint FUN_00104f10(int param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = (param_1 - param_2) + 0x17e;\n  return (param_1 - iVar1) + 3 + (iVar1 / 7) * 7;\n}\n\n", 
    "001034c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0011bda8)();\n  return pcVar1;\n}\n\n", 
    "001035e0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0011be38)();\n  return;\n}\n\n", 
    "0010e380": "\nvoid FUN_0010e380(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010e5a0();\n  }\n  return;\n}\n\n", 
    "0010ead0": "\nvoid FUN_0010ead0(long *param_1)\n\n{\n  long *plVar1;\n  \n  if (param_1 == (long *)0x1) {\n    return;\n  }\n  if (param_1 != (long *)0x0) {\n    do {\n      plVar1 = (long *)*param_1;\n      free(param_1);\n      param_1 = plVar1;\n    } while (plVar1 != (long *)0x0);\n  }\n  return;\n}\n\n", 
    "00107c20": "\nbool FUN_00107c20(long param_1,long param_2,long param_3,long param_4,long param_5,long param_6,\n                 long param_7,int param_8,int param_9)\n\n{\n  int iVar1;\n  long lVar2;\n  long lVar3;\n  long lVar4;\n  long lVar5;\n  long lVar6;\n  long lVar7;\n  bool bVar8;\n  bool bVar9;\n  bool bVar10;\n  bool bVar11;\n  bool bVar12;\n  bool bVar13;\n  bool bVar14;\n  \n  iVar1 = *(int *)(param_1 + 0x98);\n  lVar2 = *(long *)(param_1 + 0x90);\n  lVar3 = *(long *)(param_1 + 0x68);\n  lVar4 = *(long *)(param_1 + 0x88);\n  lVar5 = *(long *)(param_1 + 0x80);\n  lVar6 = *(long *)(param_1 + 0x78);\n  lVar7 = *(long *)(param_1 + 0x70);\n  if (param_9 < 0) {\n    bVar8 = SBORROW4(iVar1,param_8);\n    *(int *)(param_1 + 0x98) = iVar1 - param_8;\n    bVar9 = SBORROW8(lVar2,param_7);\n    bVar10 = SBORROW8(lVar4,param_6);\n    *(long *)(param_1 + 0x90) = lVar2 - param_7;\n    bVar11 = SBORROW8(lVar5,param_5);\n    *(long *)(param_1 + 0x88) = lVar4 - param_6;\n    bVar12 = SBORROW8(lVar6,param_4);\n    *(long *)(param_1 + 0x80) = lVar5 - param_5;\n    bVar13 = SBORROW8(lVar7,param_3);\n    *(long *)(param_1 + 0x78) = lVar6 - param_4;\n    bVar14 = SBORROW8(lVar3,param_2);\n    *(long *)(param_1 + 0x70) = lVar7 - param_3;\n    *(long *)(param_1 + 0x68) = lVar3 - param_2;\n  }\n  else {\n    bVar8 = SCARRY4(iVar1,param_8);\n    *(int *)(param_1 + 0x98) = iVar1 + param_8;\n    bVar9 = SCARRY8(lVar2,param_7);\n    bVar10 = SCARRY8(param_6,lVar4);\n    *(long *)(param_1 + 0x90) = lVar2 + param_7;\n    *(long *)(param_1 + 0x88) = param_6 + lVar4;\n    bVar11 = SCARRY8(param_5,lVar5);\n    *(long *)(param_1 + 0x80) = param_5 + lVar5;\n    bVar12 = SCARRY8(param_4,lVar6);\n    *(long *)(param_1 + 0x78) = param_4 + lVar6;\n    bVar13 = SCARRY8(param_3,lVar7);\n    *(long *)(param_1 + 0x70) = param_3 + lVar7;\n    bVar14 = SCARRY8(param_2,lVar3);\n    *(long *)(param_1 + 0x68) = param_2 + lVar3;\n  }\n  bVar12 = (byte)(bVar9 | bVar8 | bVar10 | bVar11 | bVar12 | bVar13 | bVar14) == 0;\n  if (bVar12) {\n    *(undefined *)(param_1 + 0xa1) = 1;\n  }\n  return bVar12;\n}\n\n", 
    "00106b30": "\nchar * FUN_00106b30(ulong param_1,long param_2)\n\n{\n  ulong uVar1;\n  char *pcVar2;\n  char *pcVar3;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  if ((long)param_1 < 0) {\n    do {\n      pcVar3 = pcVar2;\n      uVar1 = (long)param_1 / 10;\n      pcVar3[-1] = ((char)uVar1 * '\\n' + '0') - (char)param_1;\n      param_1 = uVar1;\n      pcVar2 = pcVar3 + -1;\n    } while (uVar1 != 0);\n    pcVar3[-2] = '-';\n    return pcVar3 + -2;\n  }\n  do {\n    pcVar2 = pcVar2 + -1;\n    uVar1 = param_1 / 10;\n    *pcVar2 = (char)param_1 + (char)uVar1 * -10 + '0';\n    param_1 = uVar1;\n  } while (uVar1 != 0);\n  return pcVar2;\n}\n\n", 
    "001071a0": "\nlong FUN_001071a0(int param_1,long param_2)\n\n{\n  undefined *puVar1;\n  int iVar2;\n  undefined *puVar3;\n  uint uVar4;\n  uint uVar5;\n  \n  uVar4 = param_1 / 0xe10 >> 0x1f;\n  iVar2 = __sprintf_chk(param_2,1,0xffffffffffffffff,0x114a7d,(param_1 >> 0x1f & 2U) + 0x2b,\n                        (uVar4 ^ param_1 / 0xe10) - uVar4);\n  uVar4 = param_1 % 0xe10;\n  if (uVar4 != 0) {\n    puVar1 = (undefined *)(param_2 + iVar2);\n    *puVar1 = 0x3a;\n    uVar4 = (uVar4 ^ (int)uVar4 >> 0x1f) - ((int)uVar4 >> 0x1f);\n    puVar1[1] = (char)((uVar4 / 0x3c) / 10) + '0';\n    puVar3 = puVar1 + 3;\n    uVar5 = uVar4 % 0x3c;\n    puVar1[2] = (char)(uVar4 / 0x3c) + (char)((uVar4 / 0x3c) / 10) * -10 + '0';\n    if (uVar5 != 0) {\n      puVar1[3] = 0x3a;\n      puVar1[4] = (char)(uVar5 / 10) + '0';\n      puVar3 = puVar1 + 6;\n      puVar1[5] = (char)uVar5 + (char)(uVar5 / 10) * -10 + '0';\n    }\n    *puVar3 = 0;\n  }\n  return param_2;\n}\n\n", 
    "00103650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0011be70)();\n  return _Var1;\n}\n\n", 
    "00103770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___xstat_0011bf00)();\n  return iVar1;\n}\n\n", 
    "00104fb0": "\nvoid FUN_00104fb0(FILE *param_1,byte *param_2,long param_3)\n\n{\n  byte bVar1;\n  __int32_t **pp_Var2;\n  byte *pbVar3;\n  \n  if (param_3 != 0) {\n    pbVar3 = param_2 + param_3;\n    pp_Var2 = __ctype_toupper_loc();\n    do {\n      bVar1 = *param_2;\n      param_2 = param_2 + 1;\n      fputc((*pp_Var2)[bVar1],param_1);\n    } while (param_2 != pbVar3);\n    return;\n  }\n  return;\n}\n\n", 
    "0011d090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntm * localtime_r(time_t *__timer,tm *__tp)\n\n{\n  tm *ptVar1;\n  \n  ptVar1 = (tm *)(*(code *)PTR_localtime_r_0011bde0)();\n  return ptVar1;\n}\n\n", 
    "00103890": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__ssize_t getline(char **__lineptr,size_t *__n,FILE *__stream)\n\n{\n  __ssize_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getline_0011bf90)();\n  return _Var1;\n}\n\n", 
    "00106bd0": "\nundefined4 FUN_00106bd0(undefined4 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "00107450": "\nvoid FUN_00107450(undefined8 param_1,long param_2)\n\n{\n  FILE *__stream;\n  undefined uVar1;\n  undefined8 uVar2;\n  char *__s;\n  \n  if (*(char *)(param_2 + 0xd9) == '\\0') {\n    return;\n  }\n  uVar2 = dcgettext(0,0x114a9e,5);\n  FUN_00107360(uVar2,param_1);\n  __stream = stderr;\n  if ((((*(long *)(param_2 + 0x68) == 0) && (*(long *)(param_2 + 0x70) == 0)) &&\n      (*(long *)(param_2 + 0x78) == 0)) &&\n     (((*(long *)(param_2 + 0x80) == 0 && (*(long *)(param_2 + 0x88) == 0)) &&\n      ((*(long *)(param_2 + 0x90) == 0 && (*(int *)(param_2 + 0x98) == 0)))))) {\n    __s = (char *)dcgettext(0,0x114aaf,5);\n    fputs(__s,__stream);\n    return;\n  }\n  uVar1 = FUN_00107310(0,*(long *)(param_2 + 0x68),0x114abf);\n  uVar1 = FUN_00107310(uVar1,*(undefined8 *)(param_2 + 0x70),0x114ac7);\n  uVar1 = FUN_00107310(uVar1,*(undefined8 *)(param_2 + 0x78),&UINT_00114ad0);\n  uVar1 = FUN_00107310(uVar1,*(undefined8 *)(param_2 + 0x80),0x114ad7);\n  uVar1 = FUN_00107310(uVar1,*(undefined8 *)(param_2 + 0x88),\"minutes\");\n  uVar1 = FUN_00107310(uVar1,*(undefined8 *)(param_2 + 0x90),0x114c6b);\n  FUN_00107310(uVar1,(long)*(int *)(param_2 + 0x98),0x114adf);\n  fputc(10,stderr);\n  return;\n}\n\n", 
    "0010e8e0": "\nundefined8 * FUN_0010e8e0(char *param_1)\n\n{\n  ulong uVar1;\n  size_t sVar2;\n  undefined8 *puVar3;\n  ulong uVar4;\n  \n  if (param_1 == (char *)0x0) {\n    puVar3 = (undefined8 *)malloc(0x80);\n    if (puVar3 != (undefined8 *)0x0) {\n      *puVar3 = 0;\n      *(undefined2 *)(puVar3 + 1) = 0;\n      return puVar3;\n    }\n  }\n  else {\n    sVar2 = strlen(param_1);\n    uVar1 = sVar2 + 1;\n    uVar4 = 0x76;\n    if (0x75 < uVar1) {\n      uVar4 = uVar1;\n    }\n    puVar3 = (undefined8 *)malloc(uVar4 + 0x11 & 0xfffffffffffffff8);\n    if (puVar3 != (undefined8 *)0x0) {\n      *puVar3 = 0;\n      *(undefined2 *)(puVar3 + 1) = 1;\n      FUN_0010e850((long)puVar3 + 9,param_1,uVar1);\n    }\n  }\n  return puVar3;\n}\n\n", 
    "0011d098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d5b0": "\nundefined4 FUN_0010d5b0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0011c220;\n  }\n  return *param_1;\n}\n\n", 
    "001035d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0011be30)();\n  return sVar1;\n}\n\n", 
    "001036f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0011bec0)();\n  return iVar1;\n}\n\n", 
    "001034b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_toupper_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_toupper_loc_0011bda0)();\n  return pp_Var1;\n}\n\n", 
    "00106d60": "\nvoid FUN_00106d60(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,int param_5)\n\n{\n  *(undefined8 *)(param_1 + 0x48) = param_2;\n  *(undefined8 *)(param_1 + 0x50) = param_3;\n  *(undefined8 *)(param_1 + 0x58) = param_4;\n  *(long *)(param_1 + 0x60) = (long)param_5;\n  return;\n}\n\n", 
    "0010f000": "\nbool FUN_0010f000(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010d710": "\nundefined8 FUN_0010d710(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0011c220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_0010c210(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_0010e380(lVar3 + 1);\n  FUN_0010c210(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "0010dc80": "\nvoid FUN_0010dc80(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010dc60(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "0010e2f0": "\nvoid FUN_0010e2f0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00111d50": "\nulong FUN_00111d50(ulong param_1,ulong param_2)\n\n{\n  if (param_2 <= param_1) {\n    param_2 = param_1;\n  }\n  return param_2;\n}\n\n", 
    "0011d080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e800": "\nbool FUN_0010e800(uint *param_1,uint *param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  byte bVar1;\n  uint uVar2;\n  \n  uVar2 = *param_1 ^ *param_2 | param_1[1] ^ param_2[1] | param_1[2] ^ param_2[2] |\n          param_1[3] ^ param_2[3] | param_1[4] ^ param_2[4] | param_1[5] ^ param_2[5];\n  bVar1 = FUN_0010e7e0(param_1[8],param_2[8],param_3,param_4,uVar2);\n  return (bVar1 | uVar2) == 0;\n}\n\n", 
    "00104ac0": "\nlong FUN_00104ac0(char *param_1,char **param_2,void *param_3,size_t param_4)\n\n{\n  bool bVar1;\n  long lVar2;\n  int iVar3;\n  size_t __n;\n  size_t sVar4;\n  long lVar5;\n  void *__s2;\n  char *__s1;\n  long local_58;\n  \n  __n = strlen(param_1);\n  __s1 = *param_2;\n  if (__s1 == (char *)0x0) {\n    local_58 = -1;\n    lVar5 = local_58;\n  }\n  else {\n    bVar1 = false;\n    lVar5 = 0;\n    local_58 = -1;\n    __s2 = param_3;\n    do {\n      iVar3 = strncmp(__s1,param_1,__n);\n      lVar2 = local_58;\n      if (iVar3 == 0) {\n        sVar4 = strlen(__s1);\n        if (sVar4 == __n) {\n          return lVar5;\n        }\n        lVar2 = lVar5;\n        if (local_58 != -1) {\n          if (param_3 == (void *)0x0) {\n            bVar1 = true;\n            lVar2 = local_58;\n          }\n          else {\n            iVar3 = memcmp((void *)(local_58 * param_4 + (long)param_3),__s2,param_4);\n            lVar2 = local_58;\n            if (iVar3 != 0) {\n              bVar1 = true;\n            }\n          }\n        }\n      }\n      local_58 = lVar2;\n      lVar5 = lVar5 + 1;\n      __s2 = (void *)((long)__s2 + param_4);\n      __s1 = param_2[lVar5];\n    } while (__s1 != (char *)0x0);\n    lVar5 = -2;\n    if (!bVar1) {\n      lVar5 = local_58;\n    }\n  }\n  local_58 = lVar5;\n  return local_58;\n}\n\n", 
    "001036a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0011be98)();\n  return iVar1;\n}\n\n", 
    "0010bf40": "\nundefined8\nFUN_0010bf40(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010be70(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010f2c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Instruction at (ram,0x00111769) overlaps instruction at (ram,0x00111767)\n    */\n/* WARNING: Type propagation algorithm not settling */\n/* WARNING: Could not reconcile some variable overlaps */\n\nint * FUN_0010f2c0(byte *param_1,long param_2,int *param_3,undefined8 *param_4,byte param_5,\n                  undefined8 param_6,undefined8 param_7,uint param_8)\n\n{\n  char *pcVar1;\n  unkbyte10 Var2;\n  void *pvVar3;\n  void *pvVar4;\n  long lVar5;\n  byte bVar6;\n  uint uVar7;\n  int iVar8;\n  long lVar9;\n  int *piVar10;\n  int *piVar11;\n  undefined *puVar12;\n  long lVar13;\n  byte *pbVar14;\n  int *piVar15;\n  undefined8 uVar16;\n  ulong uVar17;\n  int iVar18;\n  uint uVar19;\n  int *piVar20;\n  size_t sVar21;\n  int *extraout_RDX;\n  int *extraout_RDX_00;\n  int *extraout_RDX_01;\n  int *extraout_RDX_02;\n  int *extraout_RDX_03;\n  int *extraout_RDX_04;\n  int *extraout_RDX_05;\n  int *extraout_RDX_06;\n  int *extraout_RDX_07;\n  int *extraout_RDX_08;\n  int *extraout_RDX_09;\n  int *extraout_RDX_10;\n  int *extraout_RDX_11;\n  int *extraout_RDX_12;\n  int *extraout_RDX_13;\n  int *extraout_RDX_14;\n  int *extraout_RDX_15;\n  int *extraout_RDX_16;\n  int *piVar22;\n  ulong uVar23;\n  int *piVar24;\n  byte bVar25;\n  int iVar26;\n  byte *pbVar27;\n  ulong uVar28;\n  int iVar29;\n  size_t __n;\n  char cVar30;\n  uint uVar31;\n  int *piVar32;\n  byte *pbVar33;\n  ulong uVar34;\n  byte *pbVar35;\n  uint uVar36;\n  byte *pbVar37;\n  long lVar38;\n  int *piVar39;\n  long in_FS_OFFSET;\n  bool bVar40;\n  char cVar41;\n  undefined auVar42 [16];\n  undefined uVar43;\n  undefined uStack_4ff;\n  uint *local_4c8;\n  int local_4b0;\n  undefined8 local_488;\n  undefined8 uStack_480;\n  undefined8 local_478;\n  undefined8 uStack_470;\n  undefined8 local_468;\n  undefined8 uStack_460;\n  undefined8 local_458;\n  undefined2 local_44d;\n  undefined local_44b;\n  undefined local_44a [2];\n  undefined local_448;\n  undefined local_447 [21];\n  undefined local_432;\n  int local_431 [252];\n  long local_40;\n  \n  piVar39 = (int *)param_4[6];\n  uVar36 = *(uint *)(param_4 + 1);\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (piVar39 == (int *)0x0) {\n    piVar39 = (int *)((long)&UINT_00114b88 + 2);\n  }\n  if ((int)uVar36 < 0xd) {\n    if (uVar36 == 0) {\n      uVar36 = 0xc;\n    }\n  }\n  else {\n    uVar36 = uVar36 - 0xc;\n  }\n  bVar25 = *(byte *)param_3;\n  piVar24 = (int *)0x0;\n  piVar15 = piVar39;\n  piVar20 = param_3;\n  do {\n    if (bVar25 == 0) {\n      if ((param_1 != (byte *)0x0) && (param_2 != 0)) {\n        *param_1 = 0;\n      }\nLAB_0010f3a3:\n      if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      return piVar24;\n    }\n    if (bVar25 != 0x25) {\n      piVar20 = (int *)(param_2 - (long)piVar24);\n      if (piVar20 < (int *)0x2) goto LAB_0010f3a0;\n      if (param_1 != (byte *)0x0) {\n        *param_1 = bVar25;\n        param_1 = param_1 + 1;\n      }\n      piVar24 = (int *)((long)piVar24 + 1);\n      goto LAB_0010f374;\n    }\n    piVar11 = (int *)(ulong)param_5;\n    piVar32 = (int *)0x0;\n    lVar38 = 0;\n    while( true ) {\n      while( true ) {\n        while( true ) {\n          while( true ) {\n            cVar41 = (char)piVar11;\n            bVar25 = *(byte *)((long)param_3 + 1);\n            pbVar14 = (byte *)(ulong)(uint)(int)(char)bVar25;\n            param_3 = (int *)((long)param_3 + 1);\n            if (bVar25 != 0x30) break;\n            lVar38 = 0x30;\n          }\n          iVar26 = (int)lVar38;\n          if ('0' < (char)bVar25) break;\n          if (bVar25 == 0x23) {\n            piVar32 = (int *)0x1;\n          }\n          else {\n            if (bVar25 != 0x2d) {\n              pbVar37 = (byte *)0xffffffff;\n              goto LAB_0010f45e;\n            }\n            lVar38 = 0x2d;\n          }\n        }\n        if (bVar25 != 0x5e) break;\n        piVar11 = (int *)0x1;\n      }\n      if (bVar25 != 0x5f) break;\n      lVar38 = 0x5f;\n    }\n    if ((int)(char)bVar25 - 0x30U < 10) {\n      pbVar37 = (byte *)0x0;\n      piVar10 = param_3;\n      do {\n        pbVar14 = (byte *)(ulong)(uint)(int)(char)*(byte *)((long)piVar10 + 1);\n        param_3 = (int *)((long)piVar10 + 1);\n        uVar7 = (int)(char)*(byte *)((long)piVar10 + 1) - 0x30;\n        iVar29 = (int)pbVar37;\n        if (iVar29 < 0xccccccd) {\n          bVar25 = *(byte *)piVar10;\n          piVar20 = (int *)(ulong)(uint)(int)(char)bVar25;\n          if ((iVar29 == 0xccccccc) && ('7' < (char)bVar25)) goto LAB_0010f5fd;\n          pbVar37 = (byte *)(ulong)(((int)(char)bVar25 - 0x30U) + iVar29 * 10);\n        }\n        else {\nLAB_0010f5fd:\n          if (9 < uVar7) {\n            pbVar37 = (byte *)0x7fffffff;\n            break;\n          }\n          pbVar14 = (byte *)(ulong)(uint)(int)(char)*(byte *)((long)piVar10 + 2);\n          pbVar37 = (byte *)0x7fffffff;\n          param_3 = (int *)((long)piVar10 + 2);\n          uVar7 = (int)(char)*(byte *)((long)piVar10 + 2) - 0x30;\n        }\n        piVar10 = param_3;\n      } while (uVar7 < 10);\n    }\n    else {\n      pbVar37 = (byte *)0xffffffff;\n    }\n    pbVar35 = pbVar14;\n    if ((char)pbVar14 != 'E') {\nLAB_0010f45e:\n      pbVar35 = pbVar14;\n      if ((byte)pbVar14 == 0x4f) goto LAB_0010f496;\n      pbVar35 = (byte *)0x0;\n      if ((byte)pbVar14 < 0x7b) goto LAB_0010f46d;\n      goto switchD_0010f47f_caseD_1;\n    }\nLAB_0010f496:\n    pbVar33 = (byte *)((long)param_3 + 1);\n    pbVar14 = (byte *)(ulong)*pbVar33;\n    param_3 = (int *)((long)param_3 + 1);\n    if (0x7a < *pbVar33) goto switchD_0010f47f_caseD_1;\nLAB_0010f46d:\n    lVar9 = (long)(int)(&switchD_0010f47f::switchdataD_001169ac)[(ulong)pbVar14 & 0xff];\n    piVar10 = (int *)((long)&switchD_0010f47f::switchdataD_001169ac + lVar9);\n    bVar40 = piVar10 == (int *)0x0;\n    iVar29 = (int)pbVar35;\n    cVar30 = (char)piVar32;\n    uVar7 = (uint)pbVar37;\n                    /* WARNING (jumptable): Sanity check requires truncation of jumptable */\n                    /* WARNING: Could not find normalized switch variable to match jumptable */\n    switch((ulong)pbVar14 & 0xff) {\n    case 0:\n      bVar25 = *(byte *)((long)param_3 + -1);\n      param_3 = (int *)((long)param_3 + -1);\nLAB_00110222:\n      piVar20 = (int *)(param_2 - (long)piVar24);\n      uVar31 = 0;\n      if (-1 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      piVar11 = (int *)(long)(int)uVar31;\n      if (bVar25 != 0x25) break;\n      piVar10 = (int *)0x1;\n      piVar32 = param_3;\n      piVar15 = (int *)0x1;\n      if (piVar11 != (int *)0x0) {\n        piVar15 = piVar11;\n      }\n      goto LAB_0010f4e8;\n    case 0x25:\n      piVar20 = (int *)(param_2 - (long)piVar24);\n      uVar31 = 0;\n      if (-1 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      piVar11 = (int *)(long)(int)uVar31;\n      piVar15 = (int *)0x1;\n      if (piVar11 != (int *)0x0) {\n        piVar15 = piVar11;\n      }\n      if (iVar29 != 0) {\n        piVar10 = (int *)0x1;\n        piVar32 = param_3;\n        goto LAB_0010f4e8;\n      }\n      if (piVar15 < piVar20) {\n        if (param_1 != (byte *)0x0) {\n          pbVar37 = param_1;\n          if (1 < (int)uVar7) {\n            iVar29 = 0x30;\n            pbVar37 = param_1 + ((long)(int)uVar7 - 1U);\n            if (iVar26 != 0x30) {\n              iVar29 = 0x20;\n            }\n            memset(param_1,iVar29,(long)(int)uVar7 - 1U);\n            pbVar14 = (byte *)(ulong)*(byte *)param_3;\n            piVar20 = extraout_RDX_05;\n          }\n          *pbVar37 = (byte)pbVar14;\n          param_1 = pbVar37 + 1;\n        }\n        goto LAB_0010fce6;\n      }\n      goto LAB_0010f3a0;\n    case 0x3a:\n      piVar11 = (int *)((long)param_3 + 1);\n      piVar15 = (int *)0x1;\n      bVar25 = *(byte *)((long)param_3 + 1);\n      while (bVar25 == 0x3a) {\n        piVar15 = (int *)((long)piVar15 + 1);\n        piVar11 = (int *)((long)param_3 + (long)piVar15);\n        bVar25 = *(byte *)((long)param_3 + (long)piVar15);\n      }\n      if (bVar25 == 0x7a) goto LAB_0011044d;\n      break;\n    case 0x41:\n    case 0x61:\n      if (iVar29 != 0) break;\n      puVar12 = &local_44b;\n      if (cVar30 != '\\0') {\n        piVar11 = piVar32;\n      }\n      cVar41 = (char)piVar11;\n      piVar15 = (int *)0x0;\n      pbVar35 = (byte *)0x0;\n      goto LAB_0010f65c;\n    case 0x42:\n      if (iVar29 != 0x45) {\n        if (cVar30 != '\\0') {\n          piVar11 = piVar32;\n        }\n        cVar41 = (char)piVar11;\n        piVar15 = (int *)0x0;\n        goto LAB_0010f63b;\n      }\n      break;\n    case 0x43:\n      if (iVar29 != 0x45) {\n        uVar31 = *(uint *)((long)param_4 + 0x14);\n        bVar40 = false;\n        uVar7 = 2;\n        iVar26 = (int)uVar31 / 100 + 0x13;\n        local_4c8._0_1_ = (int)uVar31 < -0x76c;\n        piVar20 = (int *)(ulong)(iVar26 - ((uint)(0 < iVar26) & (uint)((int)uVar31 % 100) >> 0x1f));\n        uVar19 = 0;\n        goto LAB_0010f8e0;\n      }\nLAB_00110878:\n      uVar7 = 0;\n      goto LAB_0010f8f5;\n    case 0x44:\n      if (iVar29 == 0) {\n        local_4c8 = (uint *)0x114856;\n        goto LAB_001100f7;\n      }\n      break;\n    case 0x46:\n      if (iVar29 == 0) {\n        local_4c8 = (uint *)0x114865;\n        goto LAB_001100f7;\n      }\n      break;\n    case 0x47:\n    case 0x56:\n    case 0x67:\n      if (iVar29 != 0x45) {\n        uVar31 = *(uint *)((long)param_4 + 0x14);\n        uVar7 = *(uint *)((long)param_4 + 0x1c);\n        uVar28 = (ulong)((uVar31 - 100) + ((int)uVar31 >> 0x1f & 400U));\n        iVar26 = FUN_0010f1e0();\n        iVar8 = (int)uVar28;\n        if (iVar26 < 0) {\n          uVar19 = iVar8 - 1;\n          iVar26 = 0x16d;\n          if (((uVar19 & 3) == 0) &&\n             (iVar26 = 0x16e,\n             (uVar19 * -0x3d70a3d7 + 0x51eb850 >> 2 | uVar19 * 0x40000000) < 0x28f5c29)) {\n            iVar26 = ~-(uint)((int)uVar19 % 400 == 0) + 0x16e;\n          }\n          iVar26 = FUN_0010f1e0(uVar7 + iVar26);\n          iVar8 = -1;\n        }\n        else {\n          iVar18 = 0x16d;\n          if ((uVar28 & 3) == 0) {\n            iVar18 = 0x16e;\n            uVar19 = iVar8 * -0x3d70a3d7 + 0x51eb850;\n            if ((uVar19 >> 2 | iVar8 * 0x40000000) < 0x28f5c29) {\n              iVar18 = ((uVar19 >> 4 | iVar8 * -0x70000000) < 0xa3d70b) + 0x16d;\n            }\n          }\n          iVar8 = FUN_0010f1e0(uVar7 - iVar18);\n          if (-1 < iVar8) {\n            iVar26 = iVar8;\n          }\n          iVar8 = (iVar8 >> 0x1f) + 1;\n        }\n        if ((char)pbVar14 == 'G') {\n          bVar40 = false;\n          uVar7 = 4;\n          piVar20 = (int *)(ulong)(uVar31 + 0x76c + iVar8);\n          local_4c8._0_1_ = (int)uVar31 < -0x76c - iVar8;\n          uVar19 = 0;\n          goto LAB_0010f8e0;\n        }\n        if ((char)pbVar14 == 'g') {\n          pbVar33 = (byte *)0x2;\n          uVar7 = ((int)uVar31 % 100 + iVar8) % 100;\n          piVar20 = (int *)(ulong)uVar7;\n          if ((int)uVar7 < 0) {\n            piVar20 = (int *)(ulong)(uVar7 + 100);\n            if ((int)uVar31 < -0x76c - iVar8) {\n              piVar20 = (int *)(ulong)-uVar7;\n            }\n          }\n        }\n        else {\n          piVar20 = (int *)(ulong)(iVar26 / 7 + 1);\n          pbVar33 = (byte *)0x2;\n        }\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x48:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)(param_4 + 1);\n        pbVar33 = (byte *)0x2;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x49:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)uVar36;\n        pbVar33 = (byte *)0x2;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x4d:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)((long)param_4 + 4);\n        pbVar33 = (byte *)0x2;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x4e:\n      if (iVar29 != 0x45) {\n        if (uVar7 == 0xffffffff) {\n          piVar20 = (int *)(ulong)param_8;\n          pbVar37 = (byte *)0x9;\n          pbVar33 = (byte *)0x9;\n        }\n        else {\n          pbVar33 = pbVar37;\n          if ((int)uVar7 < 9) {\n            piVar20 = (int *)(ulong)param_8;\n            pbVar27 = pbVar37;\n            do {\n              uVar7 = (int)pbVar27 + 1;\n              pbVar27 = (byte *)(ulong)uVar7;\n              piVar20 = (int *)(ulong)(uint)((int)piVar20 / 10);\n            } while (uVar7 != 9);\n          }\n          else {\n            piVar20 = (int *)(ulong)param_8;\n          }\n        }\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x50:\n      piVar15 = (int *)0x1;\n      goto LAB_0011050f;\n    case 0x52:\n      local_4c8 = (uint *)0x11485f;\n      goto LAB_001100f7;\n    case 0x53:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)param_4;\n        pbVar33 = (byte *)0x2;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x54:\n      local_4c8 = &UINT_00114b58;\nLAB_001100f7:\n      uVar43 = (undefined)param_8;\n      auVar42 = FUN_0010f2c0(0,0xffffffffffffffff,local_4c8,param_4,piVar11,param_6,param_7,uVar43);\n      piVar20 = SUB168(auVar42 >> 0x40,0);\n      piVar15 = SUB168(auVar42,0);\n      uVar31 = 0;\n      if (-1 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      piVar10 = (int *)(long)(int)uVar31;\n      piVar32 = piVar10;\n      if (piVar10 <= piVar15) {\n        piVar32 = piVar15;\n      }\n      if ((int *)(param_2 - (long)piVar24) <= piVar32) goto LAB_0010f3a0;\n      if (param_1 != (byte *)0x0) {\n        pbVar14 = param_1;\n        if (piVar15 < piVar10) {\n          sVar21 = (long)(int)uVar7 - (long)piVar15;\n          pbVar14 = param_1 + sVar21;\n          if (iVar26 == 0x30) {\n            memset(param_1,0x30,sVar21);\n          }\n          else {\n            memset(param_1,0x20,sVar21);\n          }\n        }\n        param_1 = pbVar14 + (long)piVar15;\n        uStack_4ff = (undefined)(param_8 >> 8);\n        FUN_0010f2c0(pbVar14,(int *)(param_2 - (long)piVar24),local_4c8,param_4,piVar11,param_6,\n                     param_7,uVar43);\n        piVar20 = (int *)(ulong)CONCAT11(uStack_4ff,uVar43);\n      }\n      piVar24 = (int *)((long)piVar24 + (long)piVar32);\n      goto LAB_0010f374;\n    case 0x55:\n      if (iVar29 != 0x45) {\n        iVar26 = (*(uint *)((long)param_4 + 0x1c) - *(uint *)(param_4 + 3)) + 7;\nLAB_0010fee7:\n        piVar20 = (int *)(ulong)(uint)(iVar26 / 7);\n        pbVar33 = (byte *)0x2;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x57:\n      if (iVar29 != 0x45) {\n        iVar26 = (((int)(*(uint *)(param_4 + 3) + 6) / 7) * 7 - (*(uint *)(param_4 + 3) + 6)) + 7 +\n                 *(uint *)((long)param_4 + 0x1c);\n        goto LAB_0010fee7;\n      }\n      break;\n    case 0x58:\n    case 99:\n    case 0x78:\n      if (iVar29 != 0x4f) goto switchD_0010f47f_caseD_72;\n      break;\n    case 0x59:\n      if (iVar29 == 0x45) goto LAB_00110878;\n      if (iVar29 == 0x4f) break;\n      bVar40 = false;\n      uVar31 = 4;\n      local_4c8._0_1_ = (int)*(uint *)((long)param_4 + 0x14) < -0x76c;\n      piVar20 = (int *)(ulong)(*(uint *)((long)param_4 + 0x14) + 0x76c);\n      uVar19 = 0;\n      goto LAB_0010f9a0;\n    case 0x5a:\n      if (cVar30 != '\\0') {\n        cVar41 = '\\0';\n      }\n      piVar15 = (int *)strlen((char *)piVar39);\n      uVar31 = 0;\n      if (-1 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      piVar32 = (int *)(long)(int)uVar31;\n      piVar11 = piVar32;\n      if (piVar32 <= piVar15) {\n        piVar11 = piVar15;\n      }\n      piVar20 = (int *)(param_2 - (long)piVar24);\n      if (piVar11 < piVar20) {\n        if (param_1 != (byte *)0x0) {\n          pbVar14 = param_1;\n          if (piVar15 < piVar32) {\n            sVar21 = (long)(int)uVar7 - (long)piVar15;\n            pbVar14 = param_1 + sVar21;\n            if (iVar26 == 0x30) {\n              memset(param_1,0x30,sVar21);\n            }\n            else {\n              memset(param_1,0x20,sVar21);\n            }\n          }\n          if (cVar30 == '\\0') {\n            if (cVar41 == '\\0') {\n              memcpy(pbVar14,piVar39,(size_t)piVar15);\n              piVar20 = extraout_RDX_12;\n            }\n            else {\n              FUN_0010f270();\n              piVar20 = extraout_RDX_04;\n            }\n          }\n          else {\n            FUN_0010f220();\n            piVar20 = extraout_RDX_13;\n          }\n          param_1 = pbVar14 + (long)piVar15;\n        }\n        piVar24 = (int *)((long)piVar24 + (long)piVar11);\n        goto LAB_0010f374;\n      }\n      goto LAB_0010f3a0;\n    case 0x62:\n    case 0x68:\n      if (cVar30 != '\\0') {\n        piVar11 = piVar32;\n      }\n      cVar41 = (char)piVar11;\n      if (iVar29 != 0x45) goto switchD_0010f47f_caseD_72;\n      break;\n    case 100:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)((long)param_4 + 0xc);\n        pbVar33 = (byte *)0x2;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x65:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)((long)param_4 + 0xc);\nLAB_0011031f:\n        pbVar33 = (byte *)0x2;\n        if ((iVar26 != 0x30) && (iVar26 != 0x2d)) {\n          lVar38 = 0x5f;\n        }\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x6a:\n      if (iVar29 != 0x45) {\n        bVar40 = false;\n        uVar7 = 3;\n        local_4c8._0_1_ = (int)*(uint *)((long)param_4 + 0x1c) < -1;\n        piVar20 = (int *)(ulong)(*(uint *)((long)param_4 + 0x1c) + 1);\n        uVar19 = 0;\n        goto LAB_0010f8e0;\n      }\n      break;\n    case 0x6b:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)(param_4 + 1);\n        goto LAB_0011031f;\n      }\n      break;\n    case 0x6c:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)uVar36;\n        goto LAB_0011031f;\n      }\n      break;\n    case 0x6d:\n      if (iVar29 != 0x45) {\n        bVar40 = false;\n        uVar7 = 2;\n        local_4c8._0_1_ = (int)*(uint *)(param_4 + 2) < -1;\n        piVar20 = (int *)(ulong)(*(uint *)(param_4 + 2) + 1);\n        uVar19 = 0;\n        goto LAB_0010f8e0;\n      }\n      break;\n    case 0x6e:\n      uVar31 = 0;\n      if (-1 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      piVar15 = (int *)(long)(int)uVar31;\n      if (piVar15 == (int *)0x0) {\n        piVar15 = (int *)0x1;\n      }\n      if (piVar15 < (int *)(param_2 - (long)piVar24)) {\n        if (param_1 != (byte *)0x0) {\n          pbVar14 = param_1;\n          if (1 < (int)uVar7) {\n            sVar21 = (long)(int)uVar7 - 1;\n            pbVar14 = param_1 + sVar21;\n            if (iVar26 == 0x30) {\n              memset(param_1,0x30,sVar21);\n              piVar20 = extraout_RDX_14;\n            }\n            else {\n              memset(param_1,0x20,sVar21);\n              piVar20 = extraout_RDX_06;\n            }\n          }\n          *pbVar14 = 10;\n          param_1 = pbVar14 + 1;\n        }\nLAB_0010fce6:\n        piVar24 = (int *)((long)piVar24 + (long)piVar15);\n        goto LAB_0010f374;\n      }\n      goto LAB_0010f3a0;\n    case 0x70:\n      piVar15 = (int *)0x0;\nLAB_0011050f:\n      pbVar14 = (byte *)0x70;\n      if (cVar30 != '\\0') {\n        cVar41 = '\\0';\n        piVar15 = piVar32;\n      }\nLAB_0010f63b:\n      if (iVar29 != 0) {\n        uVar7 = 0;\n        goto LAB_0010f905;\n      }\n      puVar12 = &local_44b;\n      goto LAB_0010f65c;\n    case 0x71:\n      uVar7 = 1;\n      uVar31 = 1;\n      if (iVar29 == 0x4f) goto LAB_0010f8f5;\n      bVar40 = false;\n      uVar19 = 0;\n      local_4c8._0_1_ = false;\n      piVar20 = (int *)(ulong)(((int)(*(uint *)(param_4 + 2) * 0xb) >> 5) + 1);\n      goto LAB_0010f9a9;\n    case 0x72:\nswitchD_0010f47f_caseD_72:\n      piVar15 = (int *)0x0;\n      goto LAB_0010f63b;\n    case 0x73:\n      local_488 = *param_4;\n      uStack_480 = param_4[1];\n      local_478 = param_4[2];\n      uStack_470 = param_4[3];\n      local_468 = param_4[4];\n      uStack_460 = param_4[5];\n      local_458 = param_4[6];\n      lVar13 = FUN_0010ecc0(param_7,&local_488);\n      piVar15 = (int *)(&local_432 + 1);\n      lVar9 = lVar13;\n      do {\n        lVar5 = lVar9 / 10;\n        iVar26 = (int)lVar9 + (int)lVar5 * -10;\n        if (lVar13 < 0) {\n          iVar26 = -iVar26;\n        }\n        piVar20 = (int *)(ulong)(iVar26 + 0x30U);\n        piVar15 = (int *)((long)piVar15 + -1);\n        *(byte *)piVar15 = (byte)(iVar26 + 0x30U);\n        lVar9 = lVar5;\n      } while (lVar5 != 0);\n      uVar31 = 1;\n      if (0 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      if (lVar13 < 0) goto LAB_00110570;\n      goto LAB_0010fe4b;\n    case 0x74:\n      uVar31 = 0;\n      if (-1 < (int)uVar7) {\n        uVar31 = uVar7;\n      }\n      piVar15 = (int *)(long)(int)uVar31;\n      if (piVar15 == (int *)0x0) {\n        piVar15 = (int *)0x1;\n      }\n      if (piVar15 < (int *)(param_2 - (long)piVar24)) {\n        if (param_1 != (byte *)0x0) {\n          pbVar14 = param_1;\n          if (1 < (int)uVar7) {\n            sVar21 = (long)(int)uVar7 - 1;\n            pbVar14 = param_1 + sVar21;\n            if (iVar26 == 0x30) {\n              memset(param_1,0x30,sVar21);\n              piVar20 = extraout_RDX_16;\n            }\n            else {\n              memset(param_1,0x20,sVar21);\n              piVar20 = extraout_RDX_03;\n            }\n          }\n          *pbVar14 = 9;\n          param_1 = pbVar14 + 1;\n        }\n        goto LAB_0010fce6;\n      }\n      goto LAB_0010f3a0;\n    case 0x75:\n      piVar20 = (int *)(ulong)((int)(*(uint *)(param_4 + 3) + 6) % 7 + 1);\n      pbVar33 = (byte *)0x1;\n      goto LAB_0010f8d0;\n    case 0x77:\n      if (iVar29 != 0x45) {\n        piVar20 = (int *)(ulong)*(uint *)(param_4 + 3);\n        pbVar33 = (byte *)0x1;\n        goto LAB_0010f8d0;\n      }\n      break;\n    case 0x79:\n      if (iVar29 == 0x45) goto LAB_00110878;\n      uVar7 = (int)*(uint *)((long)param_4 + 0x14) % 100;\n      piVar20 = (int *)(ulong)uVar7;\n      pbVar33 = (byte *)0x2;\n      if ((int)uVar7 < 0) {\n        uVar31 = uVar7 + 100;\n        if ((int)*(uint *)((long)param_4 + 0x14) < -0x76c) {\n          uVar31 = -uVar7;\n        }\n        piVar20 = (int *)(ulong)uVar31;\n      }\nLAB_0010f8d0:\n      uVar7 = (uint)pbVar33;\n      bVar40 = false;\n      uVar19 = 0;\n      local_4c8._0_1_ = (byte)((ulong)piVar20 >> 0x1f);\nLAB_0010f8e0:\n      uVar31 = uVar7;\n      if (iVar29 != 0x4f) {\nLAB_0010f9a0:\n        if ((bool)(byte)local_4c8 != false) goto LAB_0010f9a7;\nLAB_0010f9a9:\n        iVar26 = (int)lVar38;\n        uVar7 = (uint)pbVar37;\n        piVar11 = (int *)(&local_432 + 1);\n        piVar15 = (int *)&local_432;\n        while( true ) {\n          if ((uVar19 & 1) != 0) {\n            *(byte *)((long)piVar11 + -1) = 0x3a;\n            piVar32 = (int *)((long)piVar11 + -2);\n            piVar11 = piVar15;\n            piVar15 = piVar32;\n          }\n          uVar19 = (int)uVar19 >> 1;\n          *(byte *)((long)piVar11 + -1) = (char)piVar20 + (char)((ulong)piVar20 / 10) * -10 + 0x30;\n          if (((uint)piVar20 < 10) && (uVar19 == 0)) break;\n          piVar20 = (int *)((ulong)piVar20 / 10);\n          piVar11 = piVar15;\n          piVar15 = (int *)((long)piVar15 + -1);\n        }\n        if ((int)uVar31 < (int)uVar7) {\n          uVar31 = uVar7;\n        }\n        if ((bool)(byte)local_4c8 != false) {\nLAB_00110570:\n          uVar7 = (uint)pbVar37;\n          local_4c8._0_1_ = 0x2d;\n          bVar25 = 0x2d;\n          iVar26 = (int)lVar38;\n          if (iVar26 != 0x2d) goto LAB_0010fa5a;\nLAB_00110585:\n          uVar19 = 0;\n          if (-1 < (int)uVar7) {\n            uVar19 = uVar7;\n          }\n          piVar10 = (int *)(long)(int)uVar19;\n          piVar11 = (int *)0x1;\n          if (piVar10 != (int *)0x0) {\n            piVar11 = piVar10;\n          }\n          if ((int *)(param_2 - (long)piVar24) <= piVar11) goto LAB_0010f3a0;\n          if (param_1 != (byte *)0x0) {\n            if ((uVar31 == 0) && ((int *)0x1 < piVar10)) {\n              piVar20 = (int *)((long)(int)uVar7 + -1);\n              memset(param_1,0x20,(size_t)piVar20);\n              param_1 = param_1 + (long)piVar20;\n            }\n            *param_1 = bVar25;\n            param_1 = param_1 + 1;\n          }\n          piVar24 = (int *)((long)piVar24 + (long)piVar11);\n          iVar26 = 0x2d;\n          piVar32 = (int *)(&local_432 + (1 - (long)piVar15));\n          piVar11 = (int *)(param_2 - (long)piVar24);\n          goto LAB_0010fb81;\n        }\n        if (bVar40) {\n          if (iVar26 == 0x2d) {\n            bVar25 = 0x2b;\n            goto LAB_00110585;\n          }\n          local_4c8._0_1_ = 0x2b;\nLAB_0010fa5a:\n          piVar32 = (int *)(&local_432 + (1 - (long)piVar15));\n          iVar29 = (uVar31 - 1) - (int)piVar32;\n          piVar11 = (int *)(param_2 - (long)piVar24);\n          if (iVar29 < 1) {\n            uVar19 = 0;\n            if (-1 < (int)uVar7) {\n              uVar19 = uVar7;\n            }\n            piVar10 = (int *)(long)(int)uVar19;\n            piVar22 = (int *)0x1;\n            if (piVar10 != (int *)0x0) {\n              piVar22 = piVar10;\n            }\n            if (piVar11 <= piVar22) goto LAB_0010f3a0;\n            if (param_1 != (byte *)0x0) {\n              pbVar14 = param_1;\n              if ((uVar31 == 0) && ((int *)0x1 < piVar10)) {\n                sVar21 = (long)(int)uVar7 - 1;\n                pbVar14 = param_1 + sVar21;\n                if (iVar26 == 0x30) {\n                  memset(param_1,0x30,sVar21);\n                  piVar20 = extraout_RDX_15;\n                }\n                else {\n                  memset(param_1,0x20,sVar21);\n                  piVar20 = extraout_RDX_11;\n                }\n              }\n              param_1 = pbVar14 + 1;\n              *pbVar14 = (byte)local_4c8;\n            }\n            piVar24 = (int *)((long)piVar24 + (long)piVar22);\n            piVar11 = (int *)(param_2 - (long)piVar24);\n            goto LAB_0010fb81;\n          }\n        }\n        else {\nLAB_0010fe4b:\n          uVar7 = (uint)pbVar37;\n          piVar32 = (int *)(&local_432 + (1 - (long)piVar15));\n          piVar11 = (int *)(param_2 - (long)piVar24);\n          iVar26 = (int)lVar38;\n          if ((iVar26 == 0x2d) || (iVar29 = uVar31 - (int)piVar32, iVar29 < 1)) {\n            uVar19 = 0;\n            if (-1 < (int)uVar7) {\n              uVar19 = uVar7;\n            }\n            piVar10 = (int *)(long)(int)uVar19;\n            goto LAB_0010fb81;\n          }\n          local_4c8._0_1_ = 0;\n        }\n        if (iVar26 == 0x5f) {\n          piVar20 = (int *)(long)iVar29;\n          if (piVar20 < piVar11) {\n            pbVar14 = param_1;\n            if (param_1 != (byte *)0x0) {\n              memset(param_1,0x20,(size_t)piVar20);\n              pbVar14 = param_1 + (long)piVar20;\n            }\n            piVar24 = (int *)((long)piVar24 + (long)piVar20);\n            if (iVar29 < (int)uVar7) {\n              uVar7 = uVar7 - iVar29;\n              piVar10 = (int *)(long)(int)uVar7;\n            }\n            else {\n              piVar10 = (int *)0x0;\n              uVar7 = 0;\n            }\n            piVar11 = (int *)(param_2 - (long)piVar24);\n            param_1 = pbVar14;\n            if ((byte)local_4c8 == 0) {\n              piVar32 = (int *)(&local_432 + (1 - (long)piVar15));\n            }\n            else {\n              piVar32 = (int *)0x1;\n              if (piVar10 != (int *)0x0) {\n                piVar32 = piVar10;\n              }\n              if (piVar11 <= piVar32) goto LAB_0010f3a0;\n              if (pbVar14 != (byte *)0x0) {\n                if ((uVar31 == 0) && ((int *)0x1 < piVar10)) {\n                  piVar20 = (int *)((long)(int)uVar7 + -1);\n                  memset(pbVar14,0x20,(size_t)piVar20);\n                  pbVar14 = pbVar14 + (long)piVar20;\n                }\n                param_1 = pbVar14 + 1;\n                *pbVar14 = (byte)local_4c8;\n              }\n              piVar24 = (int *)((long)piVar24 + (long)piVar32);\n              piVar32 = (int *)(&local_432 + (1 - (long)piVar15));\n              piVar11 = (int *)(param_2 - (long)piVar24);\n            }\n            goto LAB_0010fb81;\n          }\n        }\n        else {\n          piVar20 = (int *)(long)(int)uVar31;\n          if (piVar20 < piVar11) {\n            if ((byte)local_4c8 == 0) {\n              if (param_1 != (byte *)0x0) {\nLAB_0010fb33:\n                memset(param_1,0x30,(long)iVar29);\n                param_1 = param_1 + iVar29;\n                piVar20 = extraout_RDX_01;\n              }\n            }\n            else {\n              uVar19 = 0;\n              if (-1 < (int)uVar7) {\n                uVar19 = uVar7;\n              }\n              piVar20 = (int *)(long)(int)uVar19;\n              piVar32 = (int *)0x1;\n              if (piVar20 != (int *)0x0) {\n                piVar32 = piVar20;\n              }\n              if (piVar11 <= piVar32) goto LAB_0010f3a0;\n              piVar24 = (int *)((long)piVar24 + (long)piVar32);\n              if (param_1 != (byte *)0x0) {\n                pbVar14 = param_1;\n                if ((uVar31 == 0) && ((int *)0x1 < piVar20)) {\n                  sVar21 = (long)(int)uVar7 - 1;\n                  pbVar14 = param_1 + sVar21;\n                  if (iVar26 == 0x30) {\n                    memset(param_1,0x30,sVar21);\n                  }\n                  else {\n                    memset(param_1,0x20,sVar21);\n                  }\n                }\n                param_1 = pbVar14 + 1;\n                *pbVar14 = (byte)local_4c8;\n                goto LAB_0010fb33;\n              }\n            }\n            piVar24 = (int *)((long)piVar24 + (long)iVar29);\n            piVar10 = (int *)0x0;\n            uVar7 = 0;\n            piVar32 = (int *)(&local_432 + (1 - (long)piVar15));\n            piVar11 = (int *)(param_2 - (long)piVar24);\nLAB_0010fb81:\n            piVar22 = piVar10;\n            if (piVar10 <= piVar32) {\n              piVar22 = piVar32;\n            }\n            if (piVar22 < piVar11) {\n              if (param_1 != (byte *)0x0) {\n                pbVar14 = param_1;\n                if ((uVar31 == 0) && (piVar32 < piVar10)) {\n                  sVar21 = (long)(int)uVar7 - (long)piVar32;\n                  pbVar14 = param_1 + sVar21;\n                  if (iVar26 == 0x30) {\n                    memset(param_1,0x30,sVar21);\n                  }\n                  else {\n                    memset(param_1,0x20,sVar21);\n                  }\n                }\n                if (cVar41 == '\\0') {\n                  memcpy(pbVar14,piVar15,(size_t)piVar32);\n                  piVar20 = extraout_RDX_07;\n                }\n                else {\n                  FUN_0010f270();\n                  piVar20 = extraout_RDX_02;\n                }\n                param_1 = pbVar14 + (long)piVar32;\n              }\n              goto LAB_0010f782;\n            }\n          }\n        }\n        goto LAB_0010f3a0;\n      }\n      if ((bool)(byte)local_4c8 != false) {\nLAB_0010f9a7:\n        piVar20 = (int *)(ulong)(uint)-(int)piVar20;\n        goto LAB_0010f9a9;\n      }\nLAB_0010f8f5:\n      piVar15 = (int *)0x0;\nLAB_0010f905:\n      local_44b = SUB81(pbVar35,0);\n      puVar12 = local_44a;\n      pbVar35 = (byte *)(ulong)uVar7;\nLAB_0010f65c:\n      local_44d = 0x2520;\n      *puVar12 = (char)pbVar14;\n      puVar12[1] = 0;\n      auVar42 = FUN_00103830(&local_448,0x400,&local_44d);\n      piVar20 = SUB168(auVar42 >> 0x40,0);\n      if (SUB168(auVar42,0) != 0) {\n        piVar11 = (int *)(SUB168(auVar42,0) - 1);\n        iVar29 = (int)pbVar37;\n        iVar26 = 0;\n        if (-1 < iVar29) {\n          iVar26 = iVar29;\n        }\n        piVar32 = (int *)(long)iVar26;\n        piVar22 = piVar32;\n        if (piVar32 <= piVar11) {\n          piVar22 = piVar11;\n        }\n        piVar20 = (int *)(param_2 - (long)piVar24);\n        if (piVar20 <= piVar22) goto LAB_0010f3a0;\n        if (param_1 != (byte *)0x0) {\n          local_4b0 = (int)pbVar35;\n          pbVar14 = param_1;\n          if ((local_4b0 == 0) && (piVar11 < piVar32)) {\n            sVar21 = (long)iVar29 - (long)piVar11;\n            pbVar14 = param_1 + sVar21;\n            if ((int)lVar38 == 0x30) {\n              memset(param_1,0x30,sVar21);\n            }\n            else {\n              memset(param_1,0x20,sVar21);\n            }\n          }\n          if ((char)piVar15 == '\\0') {\n            if (cVar41 == '\\0') {\n              memcpy(pbVar14,local_447,(size_t)piVar11);\n              piVar20 = extraout_RDX_09;\n            }\n            else {\n              FUN_0010f270();\n              piVar20 = extraout_RDX_00;\n            }\n          }\n          else {\n            FUN_0010f220();\n            piVar20 = extraout_RDX_10;\n          }\n          param_1 = pbVar14 + (long)piVar11;\n        }\nLAB_0010f782:\n        piVar24 = (int *)((long)piVar24 + (long)piVar22);\n      }\n      goto LAB_0010f374;\n    case 0x7a:\n      piVar15 = (int *)0x0;\n      piVar11 = param_3;\nLAB_0011044d:\n      param_3 = piVar11;\n      if ((int)*(uint *)(param_4 + 4) < 0) goto LAB_0010f374;\n      local_4c8._0_1_ = true;\n      iVar8 = (int)param_4[5];\n      if ((-1 < iVar8) && (local_4c8._0_1_ = false, iVar8 == 0)) {\n        local_4c8._0_1_ = *(byte *)piVar39 == 0x2d;\n      }\n      uVar31 = iVar8 / 0xe10;\n      uVar19 = (iVar8 / 0x3c) % 0x3c;\n      if (piVar15 == (int *)0x2) {\nLAB_00110a99:\n        bVar40 = true;\n        uVar7 = 9;\n        iVar26 = uVar19 * 100;\n        uVar19 = 0x14;\n        piVar20 = (int *)(ulong)(uVar31 * 10000 + iVar26 + iVar8 % 0x3c);\n      }\n      else if (piVar15 < (int *)0x3) {\n        if (piVar15 == (int *)0x0) {\n          bVar40 = true;\n          uVar7 = 5;\n          piVar20 = (int *)(ulong)(uVar31 * 100 + uVar19);\n          uVar19 = 0;\n        }\n        else {\nLAB_001104e4:\n          bVar40 = true;\n          uVar7 = 6;\n          piVar20 = (int *)(ulong)(uVar31 * 100 + uVar19);\n          uVar19 = 4;\n        }\n      }\n      else {\n        if (piVar15 != (int *)0x3) {\n          bVar25 = *(byte *)param_3;\n          goto LAB_00110222;\n        }\n        if (iVar8 % 0x3c != 0) goto LAB_00110a99;\n        if (uVar19 != 0) goto LAB_001104e4;\n        piVar20 = (int *)(ulong)uVar31;\n        bVar40 = true;\n        uVar7 = 3;\n      }\n      goto LAB_0010f8e0;\n    case 0x7b:\n    case 0x7c:\n    case 0x82:\n    case 0x84:\n      param_3 = (int *)((long)param_3 + (long)param_4 * 4 + -0x7b);\n      *param_3 = *param_3 + -1;\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x7d:\n    case 0x7e:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x7f:\n    case 0x81:\n    case 0x83:\n      *(int *)((long)param_4 + -0x3c77b) = *(int *)((long)param_4 + -0x3c77b) + (int)param_4;\n      *(int *)(lVar9 + -0x7bdf275a) = *(int *)(lVar9 + -0x7bdf275a) + 1;\n      uVar36 = (int)piVar10 + *piVar10;\n      pbVar35 = (byte *)((long)param_4 + -0x75);\n      bVar25 = *pbVar35;\n      bVar6 = (byte)uVar36;\n      *pbVar35 = *pbVar35 + bVar6;\n      pcVar1 = (char *)((ulong)uVar36 - 0x75);\n      *pcVar1 = *pcVar1 + cVar30 + CARRY1(bVar25,bVar6);\n      piVar24 = (int *)0xfffffc18;\n      lVar9 = lVar38;\n      goto code_r0x00110e56;\n    case 0x80:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x85:\n                    /* WARNING: Treating indirect jump as call */\n      piVar39 = (int *)(*(code *)PTR_tzset_0011bed8)();\n      return piVar39;\n    case 0x86:\n      pcVar1 = (char *)(((ulong)piVar10 & 0xffffffffffffff00 |\n                        (ulong)(byte)((char)piVar10 + *(byte *)piVar10)) - 0x7d);\n      *pcVar1 = *pcVar1 + (char)param_4;\n      in((short)piVar20);\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x87:\n      piVar39 = (int *)((long)&UINT_00116934 + lVar9 + 3);\n      *piVar39 = *piVar39 + -1;\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x88:\n      piVar39 = (int *)((long)&UINT_00116934 + lVar9 + 3);\n      *piVar39 = *piVar39 + -1;\n      piVar24 = (int *)0xfffffd48;\n      goto LAB_00111447;\n    case 0x89:\n      goto switchD_0010f47f_caseD_89;\n    case 0x8a:\n    case 0x8b:\n    case 0x92:\n    case 0x93:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x8c:\n    case 0x8d:\n    case 0x8e:\n    case 0x8f:\n    case 0x94:\n    case 0x95:\n    case 0x96:\n      out(0,(int)piVar10);\n      LOCK();\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x90:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x91:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x97:\n      goto code_r0x00111778;\n    case 0x98:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    case 0x99:\n      *(byte *)piVar10 = *(byte *)piVar10 + (char)piVar10;\n      goto code_r0x0011175c;\n    case 0x9a:\n    case 0x9b:\n                    /* WARNING: Bad instruction - Truncating control flow here */\n      halt_baddata();\n    }\nswitchD_0010f47f_caseD_1:\n    piVar32 = param_3;\n    do {\n      piVar32 = (int *)((long)piVar32 + -1);\n    } while (*(byte *)piVar32 != 0x25);\n    piVar10 = (int *)(long)(((int)param_3 + 1) - (int)piVar32);\n    piVar20 = (int *)(param_2 - (long)piVar24);\n    iVar29 = 0;\n    if (-1 < (int)pbVar37) {\n      iVar29 = (int)pbVar37;\n    }\n    piVar11 = (int *)(long)iVar29;\n    piVar15 = piVar10;\n    if (piVar10 <= piVar11) {\n      piVar15 = piVar11;\n    }\nLAB_0010f4e8:\n    if (piVar20 <= piVar15) {\nLAB_0010f3a0:\n      piVar24 = (int *)0x0;\n      goto LAB_0010f3a3;\n    }\n    if (param_1 != (byte *)0x0) {\n      pbVar14 = param_1;\n      if (piVar10 < piVar11) {\n        sVar21 = (long)(int)pbVar37 - (long)piVar10;\n        pbVar14 = param_1 + sVar21;\n        if (iVar26 == 0x30) {\n          memset(param_1,0x30,sVar21);\n        }\n        else {\n          memset(param_1,0x20,sVar21);\n        }\n      }\n      if (cVar41 == '\\0') {\n        memcpy(pbVar14,piVar32,(size_t)piVar10);\n        piVar20 = extraout_RDX_08;\n      }\n      else {\n        FUN_0010f270();\n        piVar20 = extraout_RDX;\n      }\n      param_1 = pbVar14 + (long)piVar10;\n    }\n    piVar24 = (int *)((long)piVar24 + (long)piVar15);\nLAB_0010f374:\n    bVar25 = *(byte *)((long)param_3 + 1);\n    param_3 = (int *)((long)param_3 + 1);\n  } while( true );\ncode_r0x00110e56:\n  uVar36 = *(uint *)(lVar9 + 0x10);\n  puVar12 = *(undefined **)(piVar24 + -0xfa);\n  *puVar12 = 0x25;\n  if ((uVar36 & 1) == 0) {\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  else {\n    lVar38 = *(long *)(piVar24 + -0xfa);\n    *(undefined *)(lVar38 + 1) = 0x27;\n    *(long *)(piVar24 + -0xf4) = lVar38 + 2;\n  }\n  if ((uVar36 & 2) != 0) {\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x2d;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  if ((uVar36 & 4) != 0) {\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x2b;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  if ((uVar36 & 8) != 0) {\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x20;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  if ((uVar36 & 0x10) != 0) {\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x23;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  if ((uVar36 & 0x40) != 0) {\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x49;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  if ((uVar36 & 0x20) != 0) {\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x30;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  pvVar3 = *(void **)(lVar9 + 0x18);\n  if (pvVar3 != *(void **)(lVar9 + 0x20)) {\n    sVar21 = (long)*(void **)(lVar9 + 0x20) - (long)pvVar3;\n    *(byte **)(piVar24 + -0xf6) = pbVar14;\n    memcpy(*(void **)(piVar24 + -0xf4),pvVar3,sVar21);\n    *(size_t *)(piVar24 + -0xf4) = *(long *)(piVar24 + -0xf4) + sVar21;\n    pbVar14 = *(byte **)(piVar24 + -0xf6);\n  }\n  pvVar3 = *(void **)(lVar9 + 0x30);\n  if (pvVar3 != *(void **)(lVar9 + 0x38)) {\n    sVar21 = (long)*(void **)(lVar9 + 0x38) - (long)pvVar3;\n    *(byte **)(piVar24 + -0xf6) = pbVar14;\n    memcpy(*(void **)(piVar24 + -0xf4),pvVar3,sVar21);\n    *(size_t *)(piVar24 + -0xf4) = *(long *)(piVar24 + -0xf4) + sVar21;\n    pbVar14 = *(byte **)(piVar24 + -0xf6);\n  }\n  switch(piVar24[-0xf2]) {\n  case 9:\n  case 10:\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x6c;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  case 7:\n  case 8:\n  case 0xe:\n  case 0x10:\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x6c;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n    break;\n  case 0xc:\n    puVar12 = *(undefined **)(piVar24 + -0xf4);\n    *puVar12 = 0x4c;\n    *(undefined **)(piVar24 + -0xf4) = puVar12 + 1;\n  }\n  puVar12 = *(undefined **)(piVar24 + -0xf4);\n  *puVar12 = *(undefined *)(lVar9 + 0x48);\n  puVar12[1] = 0;\n  lVar38 = *(long *)(lVar9 + 0x28);\n  if (lVar38 == -1) {\n    piVar24[-0xf7] = 0;\n  }\n  else {\n    if (*(int *)(pbVar14 + lVar38 * 0x20) != 5) {\nLAB_0010393e:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    piVar24[-0xf7] = 1;\n    piVar24[-0xee] = *(int *)((long)(pbVar14 + lVar38 * 0x20) + 0x10);\n  }\n  if (*(long *)(lVar9 + 0x40) != -1) {\n    if (*(int *)(pbVar14 + *(long *)(lVar9 + 0x40) * 0x20) != 5) goto LAB_0010393e;\n    uVar36 = piVar24[-0xf7];\n    piVar24[(ulong)uVar36 - 0xee] =\n         *(int *)((long)(pbVar14 + *(long *)(lVar9 + 0x40) * 0x20) + 0x10);\n    piVar24[-0xf7] = uVar36 + 1;\n  }\n  pbVar14 = (byte *)FUN_00111cf0(pbVar37,2);\n  piVar39 = piVar15;\n  if (pbVar14 <= param_1) goto LAB_00111111;\n  piVar20 = piVar15;\n  if (param_1 != (byte *)0x0) {\n    if (-1 < (long)param_1) {\n      param_1 = (byte *)((long)param_1 * 2);\n      goto LAB_001110cb;\n    }\ncode_r0x00111864:\n    piVar15 = piVar20;\n    piVar39 = __errno_location();\n    *(int **)(piVar24 + -0xf6) = piVar39;\n    if (piVar15 != *(int **)(piVar24 + -0xfe)) {\nLAB_001112fc:\n      if (piVar15 != (int *)0x0) {\nLAB_00111301:\n        free(piVar15);\n      }\n    }\nLAB_00111309:\n    if (*(void **)(piVar24 + -0x104) != (void *)0x0) {\n      free(*(void **)(piVar24 + -0x104));\n    }\n    if (*(int **)(piVar24 + -0xae) != piVar24 + -0xa8) {\n      free(*(int **)(piVar24 + -0xae));\n    }\n    if (*(int **)(piVar24 + -0xea) != piVar24 + -0xe8) {\n      free(*(int **)(piVar24 + -0xea));\n    }\n    piVar39 = (int *)0x0;\n    **(undefined4 **)(piVar24 + -0xf6) = 0xc;\n    goto LAB_00111483;\n  }\n  param_1 = (byte *)0xc;\nLAB_001110cb:\n  if (param_1 <= pbVar14) {\n    param_1 = pbVar14;\n  }\n  if (param_1 == (byte *)0xffffffffffffffff) goto code_r0x00111864;\n  if ((piVar15 == (int *)0x0) || (piVar15 == *(int **)(piVar24 + -0xfe))) {\n    *(bool *)(piVar24 + -0xf6) = piVar15 == *(int **)(piVar24 + -0xfe);\n    piVar39 = (int *)malloc((size_t)param_1);\n    if (piVar39 != (int *)0x0) {\n      if ((pbVar37 != (byte *)0x0) && (*(byte *)(piVar24 + -0xf6) != 0)) {\n        piVar39 = (int *)memcpy(piVar39,piVar15,(size_t)pbVar37);\n      }\n      goto LAB_00111111;\n    }\n    goto code_r0x00111864;\n  }\n  piVar39 = (int *)realloc(piVar15,(size_t)param_1);\n  if (piVar39 == (int *)0x0) goto code_r0x00111864;\nLAB_00111111:\n  *(byte *)((long)piVar39 + (long)pbVar37) = 0;\n  piVar15 = __errno_location();\n  *(int **)(piVar24 + -0xf6) = piVar15;\n  piVar24[-0xf8] = *piVar15;\n  *(int **)(piVar24 + -0xfc) = piVar24 + -0xef;\nLAB_00111144:\n  piVar15 = piVar39;\n  piVar24[-0xef] = -1;\n  uVar23 = (long)param_1 - (long)pbVar37;\n  uVar28 = 0x7fffffff;\n  if (uVar23 < 0x80000000) {\n    uVar28 = uVar23;\n  }\n  **(undefined4 **)(piVar24 + -0xf6) = 0;\n  switch(piVar24[-0xf2]) {\n  default:\n    goto switchD_001111b4_caseD_5;\n  case 1:\n    uVar17 = (ulong)(uint)(int)*(char *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea)\n                                        + 0x10);\n    iVar26 = piVar24[-0xf7];\n    break;\n  case 2:\n    uVar17 = (ulong)*(byte *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea) + 0x10);\n    iVar26 = piVar24[-0xf7];\n    break;\n  case 3:\n    uVar17 = (ulong)(uint)(int)*(short *)(*(long *)(lVar9 + 0x50) * 0x20 +\n                                          *(long *)(piVar24 + -0xea) + 0x10);\n    iVar26 = piVar24[-0xf7];\n    break;\n  case 4:\n    uVar17 = (ulong)*(ushort *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea) + 0x10);\n    iVar26 = piVar24[-0xf7];\n    break;\n  case 5:\n  case 6:\n  case 0xd:\n  case 0xe:\n    uVar17 = (ulong)*(uint *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea) + 0x10);\n    iVar26 = piVar24[-0xf7];\n    break;\n  case 7:\n  case 8:\n  case 9:\n  case 10:\n  case 0xf:\n  case 0x10:\n  case 0x11:\n    uVar34 = *(ulong *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea) + 0x10);\n    if (piVar24[-0xf7] != 1) {\n      if (piVar24[-0xf7] != 2) {\n        uVar17 = *(ulong *)(piVar24 + -0xfc);\nLAB_001111fa:\n        *(ulong *)(piVar24 + -0x106) = uVar28;\n        iVar26 = __snprintf_chk((byte *)((long)piVar15 + (long)pbVar37),uVar28,1,0xffffffffffffffff,\n                                *(undefined8 *)(piVar24 + -0xfa),uVar34,uVar17);\n        uVar28 = *(ulong *)(piVar24 + -0x106);\n        goto LAB_00111224;\n      }\n      uVar16 = *(undefined8 *)(piVar24 + -0xfc);\n      uVar43 = (undefined)uVar34;\n      goto LAB_001115e4;\n    }\n    goto LAB_00111598;\n  case 0xb:\n    uVar16 = *(undefined8 *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea) + 0x10);\n    if (piVar24[-0xf7] == 1) {\n      uVar17 = *(ulong *)(piVar24 + -0xfc);\n    }\n    else {\n      if (piVar24[-0xf7] != 2) {\n        *(ulong *)(piVar24 + -0x106) = uVar28;\n        iVar26 = __snprintf_chk(uVar16,(byte *)((long)piVar15 + (long)pbVar37),uVar28,1,\n                                0xffffffffffffffff,*(undefined8 *)(piVar24 + -0xfa),\n                                *(undefined8 *)(piVar24 + -0xfc));\n        uVar28 = *(ulong *)(piVar24 + -0x106);\n        goto LAB_00111224;\n      }\n      uVar17 = (ulong)(uint)piVar24[-0xed];\n    }\n    *(ulong *)(piVar24 + -0x106) = uVar28;\n    iVar26 = __snprintf_chk(uVar16,(byte *)((long)piVar15 + (long)pbVar37),uVar28,1,\n                            0xffffffffffffffff,*(undefined8 *)(piVar24 + -0xfa),piVar24[-0xee],\n                            uVar17);\n    uVar28 = *(ulong *)(piVar24 + -0x106);\n    goto LAB_00111224;\n  case 0xc:\n    Var2 = *(unkbyte10 *)(*(long *)(lVar9 + 0x50) * 0x20 + *(long *)(piVar24 + -0xea) + 0x10);\n    uVar43 = (undefined)((unkuint10)Var2 >> 0x40);\n    uVar17 = (ulong)Var2;\n    if (piVar24[-0xf7] != 1) {\n      if (piVar24[-0xf7] != 2) {\n        uVar34 = *(ulong *)(piVar24 + -0xfc);\n        goto LAB_001111fa;\n      }\n      *(ulong *)(piVar24 + -0x106) = uVar28;\n      iVar26 = __snprintf_chk((byte *)((long)piVar15 + (long)pbVar37),uVar28,1,0xffffffffffffffff,\n                              *(undefined8 *)(piVar24 + -0xfa),piVar24[-0xee],piVar24[-0xed]);\n      uVar28 = *(ulong *)(piVar24 + -0x106);\n      goto LAB_00111224;\n    }\n    uVar16 = *(undefined8 *)(piVar24 + -0xfc);\n    goto LAB_001115eb;\n  }\n  uVar34 = uVar17;\n  if (iVar26 == 1) {\nLAB_00111598:\n    uVar17 = (ulong)(uint)piVar24[-0xee];\nLAB_001113a2:\n    *(ulong *)(piVar24 + -0x106) = uVar28;\n    iVar26 = __snprintf_chk((byte *)((long)piVar15 + (long)pbVar37),uVar28,1,0xffffffffffffffff,\n                            *(undefined8 *)(piVar24 + -0xfa),uVar17,uVar34);\n    iVar29 = piVar24[-0xef];\n    uVar28 = *(ulong *)(piVar24 + -0x106);\n  }\n  else {\n    if (iVar26 != 2) {\n      uVar34 = *(ulong *)(piVar24 + -0xfc);\n      goto LAB_001113a2;\n    }\n    uVar16 = *(undefined8 *)(piVar24 + -0xfc);\n    uVar43 = (undefined)uVar17;\nLAB_001115e4:\n    uVar17 = (ulong)(uint)piVar24[-0xed];\nLAB_001115eb:\n    *(ulong *)(piVar24 + -0x106) = uVar28;\n    iVar26 = __snprintf_chk((byte *)((long)piVar15 + (long)pbVar37),uVar28,1,0xffffffffffffffff,\n                            *(undefined8 *)(piVar24 + -0xfa),piVar24[-0xee],uVar17,uVar43,uVar16);\n    uVar28 = *(ulong *)(piVar24 + -0x106);\nLAB_00111224:\n    iVar29 = piVar24[-0xef];\n  }\n  piVar39 = piVar15;\n  if (iVar29 < 0) {\n    if (*(char *)(*(long *)(piVar24 + -0xf4) + 1) == '\\0') {\n      if (-1 < iVar26) goto LAB_0011124c;\n      param_3 = (int *)(ulong)**(uint **)(piVar24 + -0xf6);\n      if (**(uint **)(piVar24 + -0xf6) != 0) goto LAB_0011141d;\n      param_3 = (int *)0x54;\n      bVar40 = (*(byte *)(lVar9 + 0x48) & 0xef) == 99;\n      piVar10 = (int *)0x16;\n      goto switchD_0010f47f_caseD_89;\n    }\n    *(undefined *)(*(long *)(piVar24 + -0xf4) + 1) = 0;\n    goto LAB_00111144;\n  }\n  if (((ulong)(long)iVar29 < uVar28) &&\n     (((byte *)((long)iVar29 + (long)piVar15))[(long)pbVar37] != 0)) goto LAB_0010393e;\n  if (iVar29 < iVar26) {\nLAB_0011124c:\n    piVar24[-0xef] = iVar26;\n    iVar29 = iVar26;\n  }\n  if (uVar28 <= iVar29 + 1) {\n    if (0x7ffffffe < uVar23) {\n      if ((piVar15 != *(int **)(piVar24 + -0xfe)) && (piVar15 != (int *)0x0)) {\n        free(piVar15);\n      }\n      if (*(void **)(piVar24 + -0x104) != (void *)0x0) {\n        free(*(void **)(piVar24 + -0x104));\n      }\n      if (*(int **)(piVar24 + -0xae) != piVar24 + -0xa8) {\n        free(*(int **)(piVar24 + -0xae));\n      }\n      if (*(int **)(piVar24 + -0xea) != piVar24 + -0xe8) {\n        free(*(int **)(piVar24 + -0xea));\n      }\n      piVar39 = (int *)0x0;\n      **(undefined4 **)(piVar24 + -0xf6) = 0x4b;\n      goto LAB_00111483;\n    }\n    pbVar14 = (byte *)((long)param_1 * 2);\n    if ((long)param_1 < 0) {\n      pbVar14 = (byte *)0xffffffffffffffff;\n    }\n    uVar16 = FUN_00111cf0(pbVar37,iVar29 + 2);\n    pbVar35 = (byte *)FUN_00111d50(uVar16,pbVar14);\n    if (param_1 < pbVar35) {\n      if (param_1 == (byte *)0x0) {\n        pbVar14 = (byte *)0xc;\n      }\n      param_1 = pbVar35;\n      if (pbVar35 <= pbVar14) {\n        param_1 = pbVar14;\n      }\n      if (param_1 != (byte *)0xffffffffffffffff) {\n        piVar20 = *(int **)(piVar24 + -0xfe);\n        if ((piVar15 == (int *)0x0) || (piVar15 == piVar20)) {\n          piVar39 = (int *)malloc((size_t)param_1);\n          if (piVar39 != (int *)0x0) {\n            if ((pbVar37 != (byte *)0x0) && (piVar15 == piVar20)) {\n              piVar39 = (int *)memcpy(piVar39,piVar15,(size_t)pbVar37);\n            }\n            goto LAB_00111144;\n          }\n        }\n        else {\n          piVar39 = (int *)realloc(piVar15,(size_t)param_1);\n          if (piVar39 != (int *)0x0) goto LAB_00111144;\n        }\n      }\n      if (piVar15 != *(int **)(piVar24 + -0xfe)) goto LAB_001112fc;\n      goto LAB_00111309;\n    }\n    goto LAB_00111144;\n  }\n  pbVar37 = pbVar37 + iVar29;\n  **(int **)(piVar24 + -0xf6) = piVar24[-0xf8];\nLAB_00111787:\n  pvVar3 = *(void **)(lVar9 + 8);\n  pvVar4 = *(void **)(lVar9 + 0x58);\n  lVar38 = lVar9 + 0x58;\n  *(long *)(piVar24 + -0x100) = *(long *)(piVar24 + -0x100) + 1;\n  if (pvVar4 != pvVar3) {\n    lVar13 = (long)pvVar4 - (long)pvVar3;\n    *(byte **)(piVar24 + -0xf2) = pbVar37;\n    *(long *)(piVar24 + -0xf4) = lVar13;\n    pbVar37 = (byte *)FUN_00111cf0(pbVar37,lVar13);\n    sVar21 = *(size_t *)(piVar24 + -0xf2);\n    __n = *(size_t *)(piVar24 + -0xf4);\n    piVar39 = piVar15;\n    if (pbVar37 <= param_1) {\nLAB_00110df7:\n      memcpy((byte *)((long)piVar39 + sVar21),pvVar3,__n);\n      piVar15 = piVar39;\n      goto LAB_00110e06;\n    }\n    piVar20 = piVar15;\n    if (param_1 == (byte *)0x0) {\n      param_1 = (byte *)0xc;\n    }\n    else {\n      if ((long)param_1 < 0) goto code_r0x00111864;\n      param_1 = (byte *)((long)param_1 * 2);\n    }\n    if (param_1 < pbVar37) {\n      param_1 = pbVar37;\n    }\n    if (param_1 == (byte *)0xffffffffffffffff) goto code_r0x00111864;\n    if ((piVar15 == (int *)0x0) || (piVar15 == *(int **)(piVar24 + -0xfe))) {\n      *(size_t *)(piVar24 + -0xf6) = sVar21;\n      *(bool *)(piVar24 + -0xf4) = piVar15 == *(int **)(piVar24 + -0xfe);\n      *(size_t *)(piVar24 + -0xf2) = __n;\n      piVar39 = (int *)malloc((size_t)param_1);\n      __n = *(size_t *)(piVar24 + -0xf2);\n      sVar21 = *(size_t *)(piVar24 + -0xf6);\n      if (piVar39 != (int *)0x0) {\n        if ((sVar21 != 0) && (*(byte *)(piVar24 + -0xf4) != 0)) {\n          *(size_t *)(piVar24 + -0xf4) = __n;\n          *(size_t *)(piVar24 + -0xf2) = sVar21;\n          piVar39 = (int *)memcpy(piVar39,piVar15,sVar21);\n          sVar21 = *(size_t *)(piVar24 + -0xf2);\n          __n = *(size_t *)(piVar24 + -0xf4);\n        }\n        goto LAB_00110df7;\n      }\n      goto code_r0x00111864;\n    }\n    *(size_t *)(piVar24 + -0xf4) = sVar21;\n    *(size_t *)(piVar24 + -0xf2) = __n;\n    piVar39 = (int *)realloc(piVar15,(size_t)param_1);\n    if (piVar39 != (int *)0x0) {\n      __n = *(size_t *)(piVar24 + -0xf2);\n      sVar21 = *(size_t *)(piVar24 + -0xf4);\n      goto LAB_00110df7;\n    }\nLAB_00111cdc:\n    piVar39 = __errno_location();\n    *(int **)(piVar24 + -0xf6) = piVar39;\n    goto LAB_00111301;\n  }\nLAB_00110e06:\n  piVar20 = piVar15;\n  if (*(long *)(piVar24 + -0xb0) == *(long *)(piVar24 + -0x100)) {\n    pbVar14 = (byte *)FUN_00111cf0(pbVar37,1);\n    piVar39 = piVar15;\n    if (param_1 < pbVar14) {\n      if (param_1 == (byte *)0x0) {\n        pbVar35 = (byte *)0xc;\n      }\n      else {\n        pbVar35 = (byte *)((long)param_1 * 2);\n        if ((long)param_1 < 0) goto code_r0x00111864;\n      }\n      param_1 = pbVar35;\n      if (pbVar35 <= pbVar14) {\n        param_1 = pbVar14;\n      }\n      if (param_1 == (byte *)0xffffffffffffffff) goto code_r0x00111864;\n      piVar11 = *(int **)(piVar24 + -0xfe);\n      if ((piVar15 == (int *)0x0) || (piVar15 == piVar11)) {\n        piVar39 = (int *)malloc((size_t)param_1);\n        if (piVar39 == (int *)0x0) goto code_r0x00111864;\n        if ((pbVar37 != (byte *)0x0) && (piVar15 == piVar11)) {\n          piVar39 = (int *)memcpy(piVar39,piVar15,(size_t)pbVar37);\n        }\n      }\n      else {\n        piVar39 = (int *)realloc(piVar15,(size_t)param_1);\n        if (piVar39 == (int *)0x0) goto LAB_00111cdc;\n      }\n    }\n    *(byte *)((long)piVar39 + (long)pbVar37) = 0;\n    if (((piVar39 != *(int **)(piVar24 + -0xfe)) && (pbVar37 + 1 < param_1)) &&\n       (piVar15 = (int *)realloc(piVar39,(size_t)(pbVar37 + 1)), piVar15 != (int *)0x0)) {\n      piVar39 = piVar15;\n    }\n    if (*(void **)(piVar24 + -0x104) != (void *)0x0) {\n      free(*(void **)(piVar24 + -0x104));\n    }\n    if (*(int **)(piVar24 + -0xae) != piVar24 + -0xa8) {\n      free(*(int **)(piVar24 + -0xae));\n    }\n    if (*(int **)(piVar24 + -0xea) != piVar24 + -0xe8) {\n      free(*(int **)(piVar24 + -0xea));\n    }\n    **(byte ***)(piVar24 + -0x102) = pbVar37;\n    goto LAB_00111483;\n  }\n  cVar41 = *(char *)(lVar9 + 0xa0);\n  lVar9 = *(long *)(lVar9 + 0xa8);\n  if (cVar41 == '%') {\n    if (lVar9 != -1) goto LAB_0010393e;\n    pbVar14 = (byte *)FUN_00111cf0(pbVar37,1);\n    pbVar33 = pbVar37;\n    if (param_1 < pbVar14) {\n      if (param_1 == (byte *)0x0) {\n        pbVar35 = (byte *)0xc;\n      }\n      else {\n        if ((long)param_1 < 0) goto code_r0x00111864;\n        pbVar35 = (byte *)((long)param_1 * 2);\n      }\n      if (pbVar35 < pbVar14) {\n        pbVar35 = pbVar14;\n      }\n      if (pbVar35 == (byte *)0xffffffffffffffff) goto code_r0x00111864;\n      cVar41 = piVar15 == *(int **)(piVar24 + -0xfe);\n      *(byte **)(piVar24 + -0xf2) = pbVar14;\n      param_3 = (int *)(ulong)(byte)cVar41;\n      param_1 = pbVar35;\n      if (piVar15 != (int *)0x0) {\ncode_r0x0011175c:\n        cVar41 = (char)param_3;\n        pbVar33 = pbVar37;\n        piVar20 = piVar15;\n        if (cVar41 == '\\0') {\n          piVar10 = (int *)realloc(piVar15,(size_t)pbVar35);\n          if (piVar10 == (int *)0x0) goto LAB_00111cdc;\ncode_r0x00111778:\n          pbVar14 = *(byte **)(piVar24 + -0xf2);\n          pbVar33 = pbVar37;\n          piVar15 = piVar10;\n          goto LAB_00111782;\n        }\n      }\n      piVar15 = (int *)malloc((size_t)param_1);\n      pbVar14 = *(byte **)(piVar24 + -0xf2);\n      if (piVar15 == (int *)0x0) goto code_r0x00111864;\n      if ((pbVar33 != (byte *)0x0) && (cVar41 != '\\0')) {\n        *(byte **)(piVar24 + -0xf2) = pbVar14;\n        piVar15 = (int *)memcpy(piVar15,piVar20,(size_t)pbVar33);\n        pbVar14 = *(byte **)(piVar24 + -0xf2);\n      }\n    }\nLAB_00111782:\n    pbVar37 = pbVar14;\n    *(byte *)((long)piVar15 + (long)pbVar33) = 0x25;\n    lVar9 = lVar38;\n    goto LAB_00111787;\n  }\n  if (lVar9 == -1) goto LAB_0010393e;\n  pbVar14 = *(byte **)(piVar24 + -0xea);\n  piVar39 = (int *)(pbVar14 + lVar9 * 0x20);\n  iVar26 = *piVar39;\n  piVar24[-0xf2] = iVar26;\n  lVar9 = lVar38;\n  if (cVar41 == 'n') {\n    switch(iVar26) {\n    case 0x12:\n      **(undefined **)(piVar39 + 4) = (char)pbVar37;\n      break;\n    case 0x13:\n      **(undefined2 **)(piVar39 + 4) = (short)pbVar37;\n      break;\n    case 0x14:\n      **(undefined4 **)(piVar39 + 4) = (int)pbVar37;\n      break;\n    case 0x15:\n    case 0x16:\n      **(byte ***)(piVar39 + 4) = pbVar37;\n      break;\n    default:\nswitchD_001111b4_caseD_5:\n                    /* WARNING: Subroutine does not return */\n      abort();\n    }\n    goto LAB_00111787;\n  }\n  goto code_r0x00110e56;\nswitchD_0010f47f_caseD_89:\n  param_3 = (int *)((ulong)param_3 & 0xffffffff);\n  if (!bVar40) {\n    param_3 = (int *)((ulong)piVar10 & 0xffffffff);\n  }\nLAB_0011141d:\n  if ((piVar15 != *(int **)(piVar24 + -0xfe)) && (piVar15 != (int *)0x0)) {\n    free(piVar15);\n  }\n  if (*(void **)(piVar24 + -0x104) != (void *)0x0) {\n    free(*(void **)(piVar24 + -0x104));\n  }\nLAB_00111447:\n  if (*(int **)(piVar24 + -0xae) != piVar24 + -0xa8) {\n    free(*(int **)(piVar24 + -0xae));\n  }\n  if (*(int **)(piVar24 + -0xea) != piVar24 + -0xe8) {\n    free(*(int **)(piVar24 + -0xea));\n  }\n  piVar39 = (int *)0x0;\n  **(undefined4 **)(piVar24 + -0xf6) = (int)param_3;\nLAB_00111483:\n  if (*(long *)(piVar24 + -0xe) != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return piVar39;\n}\n\n", 
    "001037c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_settime(clockid_t __clock_id,timespec *__tp)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_clock_settime_0011bf28)();\n  return iVar1;\n}\n\n", 
    "0010d8e0": "\nvoid FUN_0010d8e0(undefined8 param_1)\n\n{\n  FUN_0010d8b0(0,param_1);\n  return;\n}\n\n", 
    "0010f1a0": "\nchar * FUN_0010f1a0(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "0011d088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001038e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0011bfb8)();\n  return iVar1;\n}\n\n", 
    "0010e8a0": "\nbool FUN_0010e8a0(long param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  \n  lVar2 = param_1 + 9;\n  if (*(char *)(param_1 + 8) == '\\0') {\n    lVar2 = 0;\n  }\n  iVar1 = FUN_0010e870(lVar2);\n  if (iVar1 == 0) {\n    tzset();\n  }\n  return iVar1 == 0;\n}\n\n", 
    "001076e0": "\nuint FUN_001076e0(undefined8 param_1,uint *param_2,uint *param_3,long param_4)\n\n{\n  uint uVar1;\n  long in_FS_OFFSET;\n  long local_50;\n  undefined local_48 [56];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_50 = param_4;\n  if (param_4 == -1) {\n    param_3 = (uint *)FUN_0010ec20(param_1,&local_50,local_48);\n    if (param_3 == (uint *)0x0) {\n      uVar1 = 0;\n      goto LAB_00107732;\n    }\n  }\n  uVar1 = (param_2[5] ^ param_3[5]) & 0xffffff00 |\n          (uint)((*param_2 ^ *param_3 | param_2[1] ^ param_3[1] | param_2[2] ^ param_3[2] |\n                  param_2[3] ^ param_3[3] | param_2[4] ^ param_3[4] | param_2[5] ^ param_3[5]) == 0)\n  ;\nLAB_00107732:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00110bf0": "\nvoid FUN_00110bf0(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010f2c0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103830": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00103830(void)\n\n{\n  (*_DAT_0011bf60)();\n  return;\n}\n\n", 
    "0010b650": "\nundefined8 FUN_0010b650(int *param_1,char *param_2,uint param_3)\n\n{\n  int iVar1;\n  char cVar2;\n  size_t sVar3;\n  char *pcVar4;\n  undefined8 uVar5;\n  size_t sVar6;\n  char *pcVar7;\n  ulong uVar8;\n  ulong uVar9;\n  long in_FS_OFFSET;\n  int aiStack_68 [2];\n  undefined *puStack_60;\n  int local_58 [4];\n  undefined local_48 [8];\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  puStack_60 = (undefined *)0x10b67f;\n  sVar3 = strlen(param_2);\n  sVar6 = sVar3;\n  if ((param_3 & 4) == 0) {\n    pcVar4 = (char *)0x0;\nLAB_0010b6db:\n    if ((sVar6 - 8 < 5) && (uVar9 = (ulong)((uint)sVar6 & 1), (sVar6 & 1) == 0)) {\n      pcVar7 = param_2;\n      do {\n        if (9 < (int)*pcVar7 - 0x30U) goto LAB_0010b6b0;\n        pcVar7 = pcVar7 + 1;\n      } while (param_2 + sVar6 != pcVar7);\n      uVar8 = sVar6 >> 1;\n      do {\n        local_58[uVar9] = param_2[uVar9 * 2 + 1] + -0x30 + (param_2[uVar9 * 2] * 5 + -0xf0) * 2;\n        uVar9 = uVar9 + 1;\n      } while (uVar8 != uVar9);\n      if ((param_3 & 1) == 0) {\n        puStack_60 = (undefined *)0x10b7db;\n        cVar2 = FUN_0010b5a0(param_1 + 5,local_58,uVar8 - 4,param_3);\n        if (cVar2 != '\\0') {\n          param_1[4] = aiStack_68[uVar8] + -1;\n          param_1[3] = aiStack_68[uVar8 + 1];\n          iVar1 = local_58[uVar8 - 1];\n          param_1[2] = local_58[uVar8 - 2];\n          param_1[1] = iVar1;\n          goto LAB_0010b781;\n        }\n      }\n      else {\n        param_1[4] = local_58[0] + -1;\n        param_1[3] = local_58[1];\n        param_1[2] = local_58[2];\n        param_1[1] = local_58[3];\n        puStack_60 = (undefined *)0x10b779;\n        cVar2 = FUN_0010b5a0(param_1 + 5,local_48,uVar8 - 4,param_3);\n        if (cVar2 != '\\0') {\nLAB_0010b781:\n          if (pcVar4 == (char *)0x0) {\n            *param_1 = 0;\n            uVar5 = 1;\n            goto LAB_0010b6b2;\n          }\n          if (((int)pcVar4[1] - 0x30U < 10) && ((int)pcVar4[2] - 0x30U < 10)) {\n            *param_1 = pcVar4[2] + -0x30 + ((int)pcVar4[1] - 0x30U) * 10;\n            uVar5 = 1;\n            goto LAB_0010b6b2;\n          }\n        }\n      }\n    }\n  }\n  else {\n    puStack_60 = (undefined *)0x10b699;\n    pcVar4 = strchr(param_2,0x2e);\n    if ((pcVar4 == (char *)0x0) || (sVar6 = (long)pcVar4 - (long)param_2, sVar3 - sVar6 == 3))\n    goto LAB_0010b6db;\n  }\nLAB_0010b6b0:\n  uVar5 = 0;\nLAB_0010b6b2:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    puStack_60 = &UNK_0010b826;\n    __stack_chk_fail();\n  }\n  return uVar5;\n}\n\n", 
    "0010e240": "\nvoid FUN_0010e240(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010e1b0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103950": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nbyte FUN_00103950(int param_1,undefined8 *param_2)\n\n{\n  byte bVar1;\n  char cVar2;\n  int iVar3;\n  ulong uVar4;\n  long lVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  long lVar8;\n  char *pcVar9;\n  byte bVar10;\n  char *pcVar11;\n  char *pcVar12;\n  long in_FS_OFFSET;\n  undefined auVar13 [16];\n  undefined8 uStack_118;\n  undefined auStack_110 [7];\n  byte local_109;\n  long local_108;\n  long local_100;\n  long local_f8;\n  char *local_f0;\n  undefined local_e8 [16];\n  undefined local_d8 [88];\n  undefined8 local_80;\n  undefined8 local_78;\n  long local_40;\n  \n  pcVar12 = \"%a, %d %b %Y %H:%M:%S %z\";\n  bVar10 = 0xa0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010b9a0(*param_2);\n  setlocale(6,(char *)((long)&UINT_00114b88 + 2));\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_00112c60(FUN_00104e60);\n  local_109 = 0;\n  local_100 = 0;\n  local_f8 = 0;\n  local_108 = 0;\n  pcVar11 = (char *)0x0;\n  lVar8 = 0;\nLAB_00103a00:\n  pcVar9 = pcVar11;\n  iVar3 = getopt_long(param_1,param_2,\"d:f:I::r:Rs:u\",&PTR_s_date_0011b000,0);\n  if (iVar3 == -1) {\nLAB_00103bbd:\n    bVar10 = (local_108 != 0) + (lVar8 != 0) + (local_100 != 0);\n    if (1 < bVar10) {\n      pcVar11 = \"the options to specify dates for printing are mutually exclusive\";\n      goto LAB_00103ebb;\n    }\n    if ((local_109 & bVar10) != 0) goto LAB_00103eaf;\n    if (optind < param_1) {\n      if (optind + 1 < param_1) {\n        pcVar9 = (char *)FUN_0010dc90(param_2[(long)optind + 1]);\n        pcVar11 = \"extra operand %s\";\nLAB_00103d33:\n        uVar6 = dcgettext(0,pcVar11,5);\n        error(0,0,uVar6,pcVar9);\n        goto switchD_00103a4c_caseD_4a;\n      }\n      if (*(char *)param_2[optind] != '+') {\n        if (((bVar10 & 1) != 0) || (local_109 != 0)) {\n          pcVar9 = (char *)FUN_0010dc90();\n          pcVar11 = \n          \"the argument %s lacks a leading \\'+\\';\\nwhen using an option to specify date(s), any non-option\\nargument must be a format string beginning with \\'+\\'\"\n          ;\n          goto LAB_00103d33;\n        }\n        goto LAB_00103c30;\n      }\n      if (pcVar9 != (char *)0x0) {\n        uVar6 = dcgettext(0,\"multiple output formats specified\",5);\n        auVar13 = error(1,0,uVar6);\n        uVar6 = uStack_118;\n        uStack_118 = SUB168(auVar13,0);\n        (*(code *)PTR___libc_start_main_0011bfe0)\n                  (FUN_00103950,uVar6,auStack_110,FUN_00112be0,FUN_00112c50,\n                   SUB168(auVar13 >> 0x40,0),&uStack_118);\n        do {\n                    /* WARNING: Do nothing block with infinite loop */\n        } while( true );\n      }\n      pcVar9 = (char *)param_2[optind] + 1;\n      optind = optind + 1;\n    }\n    else {\nLAB_00103c30:\n      if ((pcVar9 == (char *)0x0) && (pcVar9 = nl_langinfo(0x2006c), *pcVar9 == '\\0')) {\n        pcVar9 = \"%a %b %e %H:%M:%S %Z %Y\";\n      }\n    }\n    local_f0 = getenv(\"TZ\");\n    pcVar12 = (char *)FUN_0010e8e0(local_f0);\n    if (lVar8 != 0) {\n      bVar1 = FUN_001041c0(lVar8,pcVar9,pcVar12);\n      goto LAB_00103c6d;\n    }\n    bVar10 = (bVar10 ^ 1) & (local_109 ^ 1);\n    if (bVar10 != 0) goto LAB_00103d55;\n    if (local_100 == 0) {\n      lVar8 = local_f8;\n      if (local_f8 == 0) {\n        lVar8 = local_108;\n      }\n      local_108 = lVar8;\n      cVar2 = FUN_00109b60(local_e8,lVar8,0,DAT_0011c0ec,pcVar12,local_f0);\n      if (cVar2 == '\\0') goto LAB_00103e57;\n    }\n    else {\n      iVar3 = FUN_00112c80(local_100,local_d8);\n      if (iVar3 != 0) {\n        uVar6 = FUN_0010dad0(0,3,local_100);\n        piVar7 = __errno_location();\n        error(1,*piVar7,&DAT_00114840,uVar6);\n        goto LAB_00103f32;\n      }\n      local_e8 = FUN_001043d0(local_80,local_78);\n    }\n    if (local_109 == 0) goto LAB_00103cfe;\n    goto LAB_00103d95;\n  }\n  if (0x81 < iVar3) goto switchD_00103a4c_caseD_4a;\n  if (iVar3 < 0x49) {\n    if (iVar3 == -0x83) {\n      FUN_0010e240(stdout,\"date\",\"GNU coreutils\",PTR_DAT_0011c010,\"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    if (iVar3 != -0x82) goto switchD_00103a4c_caseD_4a;\n    FUN_00104690(0);\n    goto LAB_00103bbd;\n  }\n  pcVar11 = pcVar9;\n  switch(iVar3) {\n  case 0x49:\n    uVar4 = 0;\n    if (optarg != 0) {\n      lVar5 = FUN_00104d60(\"--iso-8601\",optarg,&PTR_s_hours_0011b200,&DAT_001147d0,4);\n      uVar4 = (ulong)*(uint *)(&DAT_001147d0 + lVar5 * 4);\n    }\n    pcVar11 = \"%Y-%m-%d\" + uVar4 * 0x20;\n    break;\n  default:\n    goto switchD_00103a4c_caseD_4a;\n  case 0x52:\n    pcVar11 = \"%a, %d %b %Y %H:%M:%S %z\";\n    break;\n  case 100:\n    local_108 = optarg;\n    goto LAB_00103a00;\n  case 0x66:\n    lVar8 = optarg;\n    goto LAB_00103a00;\n  case 0x72:\n    local_100 = optarg;\n    goto LAB_00103a00;\n  case 0x73:\n    local_f8 = optarg;\n    local_109 = 1;\n    goto LAB_00103a00;\n  case 0x75:\n    goto switchD_00103a4c_caseD_75;\n  case 0x80:\n    lVar5 = FUN_00104d60(\"--rfc-3339\",optarg,&DAT_0011b210,&DAT_001147d8,4);\n    pcVar11 = \"%Y-%m-%d\" + (ulong)*(uint *)(&DAT_001147d8 + lVar5 * 4) * 0x20;\n    break;\n  case 0x81:\n    DAT_0011c0ec = DAT_0011c0ec | 1;\n    goto LAB_00103a00;\n  }\n  if (pcVar9 != (char *)0x0) goto LAB_00103e8b;\n  goto LAB_00103a00;\nswitchD_00103a4c_caseD_75:\n  pcVar9 = (char *)FUN_001043e0();\n  iVar3 = putenv(pcVar9);\n  if (iVar3 != 0) {\n                    /* WARNING: Subroutine does not return */\n    FUN_0010e5a0();\n  }\n  goto LAB_00103a00;\nLAB_00103e8b:\n  uVar6 = dcgettext(0,\"multiple output formats specified\",5);\n  error(1,0,uVar6);\nLAB_00103eaf:\n  pcVar11 = \"the options to print and set the time may not be used together\";\nLAB_00103ebb:\n  uVar6 = dcgettext(0,pcVar11,5);\n  error(0,0,uVar6);\nswitchD_00103a4c_caseD_4a:\n  FUN_00104690(1);\nLAB_00103d55:\n  if (param_1 <= optind) {\n    FUN_00106ac0(local_e8);\n    goto LAB_00103d03;\n  }\n  local_108 = param_2[optind];\n  cVar2 = FUN_0010b830(local_e8,local_108,7);\n  local_e8._8_8_ = 0;\n  local_e8 = ZEXT816(local_e8._0_8_);\n  if (cVar2 != '\\0') {\nLAB_00103d95:\n    iVar3 = FUN_0010dca0(local_e8);\n    if (iVar3 == 0) {\nLAB_00103cfe:\n      bVar10 = 1;\n    }\n    else {\n      bVar10 = 0;\n      uVar6 = dcgettext(0,\"cannot set date\",5);\n      piVar7 = __errno_location();\n      error(0,*piVar7,uVar6);\n    }\nLAB_00103d03:\n    local_e8._8_8_ = SUB168(local_e8 >> 0x40,0);\n    bVar1 = FUN_00104090(pcVar9,local_e8._0_8_,local_e8._8_8_,pcVar12);\n    bVar1 = bVar1 & bVar10;\nLAB_00103c6d:\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return bVar1 ^ 1;\n    }\nLAB_00103f32:\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\nLAB_00103e57:\n  param_2 = (undefined8 *)local_e8;\n  pcVar9 = (char *)FUN_0010dc90(local_108);\n  uVar6 = dcgettext(0,\"invalid date %s\",5);\n  error(1,0,uVar6,pcVar9);\n  goto LAB_00103e8b;\n}\n\n", 
    "0010b530": "\nundefined4 FUN_0010b530(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined4 uVar1;\n  char *pcVar2;\n  long lVar3;\n  \n  uVar1 = 0;\n  pcVar2 = getenv(\"TZ\");\n  lVar3 = FUN_0010e8e0(pcVar2);\n  if (lVar3 != 0) {\n    uVar1 = FUN_00109b60(param_1,param_2,param_3,0,lVar3,pcVar2);\n    FUN_0010ead0(lVar3);\n  }\n  return uVar1;\n}\n\n", 
    "00103710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0011bed0)();\n  return pvVar1;\n}\n\n", 
    "0010dc90": "\nvoid FUN_0010dc90(undefined8 param_1)\n\n{\n  FUN_0010dc80(0,param_1);\n  return;\n}\n\n", 
    "00109b60": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nuint FUN_00109b60(time_t *param_1,byte *param_2,long *param_3,byte param_4,ulong param_5,\n                 byte *param_6)\n\n{\n  byte *pbVar1;\n  byte *pbVar2;\n  time_t tVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  byte bVar8;\n  char cVar9;\n  uint uVar10;\n  size_t sVar11;\n  long lVar12;\n  ulong uVar13;\n  ulong uVar14;\n  long lVar15;\n  byte *pbVar16;\n  undefined8 uVar17;\n  tm *ptVar18;\n  undefined8 uVar19;\n  undefined8 uVar20;\n  long lVar21;\n  byte extraout_DL;\n  byte bVar22;\n  byte extraout_DL_00;\n  int extraout_EDX;\n  undefined8 extraout_RDX;\n  int iVar23;\n  byte *pbVar24;\n  byte *pbVar25;\n  char *pcVar26;\n  size_t __size;\n  ulong uVar27;\n  int iVar28;\n  undefined *puVar29;\n  long in_FS_OFFSET;\n  bool bVar30;\n  bool bVar31;\n  byte bVar32;\n  byte *local_468;\n  byte *local_460;\n  ulong local_458;\n  int local_450;\n  long local_428 [2];\n  undefined8 local_418;\n  undefined8 local_410;\n  undefined8 local_408;\n  int local_400;\n  int local_3f8;\n  long local_3f0;\n  uint local_3d8;\n  undefined4 uStack_3d4;\n  uint local_3d0;\n  int iStack_3cc;\n  int local_3c8;\n  undefined4 uStack_3c4;\n  int local_3b8;\n  int local_398;\n  int local_394;\n  int local_390;\n  int local_38c;\n  int local_388;\n  int local_384;\n  int local_378;\n  char *local_368;\n  tm local_358;\n  undefined local_318 [32];\n  int local_2f8;\n  undefined4 local_2f0;\n  char *local_2e8;\n  byte *local_2d8;\n  long local_2d0;\n  int local_2c8;\n  int local_2c4;\n  int local_2c0;\n  int local_2bc;\n  long local_2b0;\n  undefined8 local_2a8;\n  long local_2a0;\n  long local_298;\n  long local_290;\n  long local_288;\n  undefined8 local_280;\n  undefined8 uStack_278;\n  ulong local_270;\n  ulong local_268;\n  ulong local_260;\n  ulong local_258;\n  ulong local_250;\n  ulong local_248;\n  int local_240;\n  undefined2 local_238;\n  ulong local_230;\n  ulong local_228;\n  long local_220;\n  ulong local_218;\n  ulong local_210;\n  long local_208;\n  undefined local_200;\n  byte local_1ff;\n  undefined2 local_1fe;\n  undefined4 local_1fc;\n  undefined local_1f8;\n  char *local_1f0;\n  undefined4 local_1e8;\n  int local_1e4;\n  char *local_1e0;\n  undefined4 local_1d8;\n  undefined8 local_1d0;\n  undefined local_1b5 [13];\n  undefined local_1a8 [32];\n  undefined local_188 [112];\n  byte local_118 [112];\n  undefined2 local_a8;\n  undefined local_a6;\n  undefined local_a5 [101];\n  long local_40;\n  \n  bVar32 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar11 = strlen((char *)param_2);\n  if (param_3 == (long *)0x0) {\n    param_3 = local_428;\n    FUN_00106ac0(param_3);\n  }\n  lVar12 = param_3[1];\n  lVar15 = *param_3;\n  pbVar24 = param_2;\n  while( true ) {\n    uVar10 = FUN_0010efe0(*pbVar24);\n    bVar30 = false;\n    bVar31 = (char)uVar10 == '\\0';\n    if (bVar31) break;\n    pbVar24 = pbVar24 + 1;\n  }\n  lVar21 = 4;\n  pbVar25 = pbVar24;\n  pbVar16 = &DAT_00114ca5;\n  do {\n    if (lVar21 == 0) break;\n    lVar21 = lVar21 + -1;\n    bVar30 = *pbVar25 < *pbVar16;\n    bVar31 = *pbVar25 == *pbVar16;\n    pbVar25 = pbVar25 + (ulong)bVar32 * -2 + 1;\n    pbVar16 = pbVar16 + (ulong)bVar32 * -2 + 1;\n  } while (bVar31);\n  if ((!bVar30 && !bVar31) == bVar30) {\n    bVar22 = pbVar24[4];\n    pbVar25 = pbVar24 + 4;\n    if (bVar22 != 0) {\n      __size = 1;\n      pbVar16 = pbVar25;\n      bVar8 = bVar22;\n      do {\n        if (bVar8 == 0x5c) {\n          pbVar1 = pbVar16 + 1;\n          pbVar2 = pbVar16 + 1;\n          pbVar16 = pbVar1;\n          if ((*pbVar2 != 0x5c) && (*pbVar2 != 0x22)) break;\n        }\n        else if (bVar8 == 0x22) {\n          pbVar16 = local_118;\n          local_468 = (byte *)0x0;\n          pbVar24 = pbVar25;\n          local_460 = pbVar16;\n          if (((long)__size < 0x65) ||\n             (pbVar16 = (byte *)malloc(__size), local_460 = pbVar16, local_468 = pbVar16,\n             pbVar16 != (byte *)0x0)) goto joined_r0x00109fe1;\n          goto LAB_0010a3a8;\n        }\n        bVar8 = pbVar16[1];\n        __size = __size + 1;\n        pbVar16 = pbVar16 + 1;\n      } while (bVar8 != 0);\n    }\n  }\n  lVar21 = FUN_0010ec20(param_5,param_3,&local_398);\n  if (lVar21 == 0) {\nLAB_0010a3a8:\n    local_468 = (byte *)0x0;\n    goto LAB_00109f2f;\n  }\n  local_468 = (byte *)0x0;\n  uVar13 = param_5;\n  local_460 = param_6;\nLAB_00109c82:\n  local_2a8 = 0;\n  local_2bc = 2;\n  if (*pbVar24 == 0) {\n    pbVar24 = &DAT_001147e7;\n  }\n  local_270 = 0;\n  iVar23 = 0x76a700;\n  local_2b0 = (long)local_384 + 0x76c;\n  local_1ff = param_4 & 1;\n  local_268 = 0;\n  local_260 = 0;\n  local_2a0 = (long)(local_388 + 1);\n  local_258 = 0;\n  local_298 = (long)local_38c;\n  local_250 = 0;\n  local_290 = (long)local_390;\n  local_248 = 0;\n  local_288 = (long)local_394;\n  local_240 = 0;\n  local_280 = (ulong)local_398;\n  local_238 = 0;\n  local_450 = (int)lVar12;\n  uStack_278 = (long)local_450;\n  local_3f8 = local_378;\n  local_230 = 0;\n  local_228 = 0;\n  local_210 = 0;\n  local_220 = 0;\n  local_218 = 0;\n  local_208 = 0;\n  local_200 = 0;\n  local_1fe = 0;\n  local_1fc = 0;\n  local_1f8 = 0;\n  local_1f0 = local_368;\n  local_1e8 = 0x10d;\n  local_1e4 = local_378;\n  local_1e0 = (char *)0x0;\n  local_2d8 = pbVar24;\n  do {\n    if ((SCARRY8((long)iVar23,lVar15)) || (cVar9 = FUN_00107770(), cVar9 != '\\0')) break;\n    local_358._0_8_ = extraout_RDX;\n    lVar12 = FUN_0010ec20(uVar13,&local_358,local_318);\n    if ((lVar12 != 0) && ((local_2e8 != (char *)0x0 && (local_2f8 != local_1e4)))) {\n      local_1d8 = 0x10d;\n      local_1d0 = 0;\n      local_1e0 = local_2e8;\n      break;\n    }\n    iVar23 = iVar23 + 0x76a700;\n  } while (iVar23 != 0x1da9c00);\n  if (((local_1f0 != (char *)0x0) && (local_1e0 != (char *)0x0)) &&\n     (iVar23 = strcmp(local_1f0,local_1e0), iVar23 == 0)) {\n    local_1e4 = -1;\n    local_1e0 = (char *)0x0;\n  }\n  iVar23 = FUN_00108980(&local_2d8);\n  pbVar24 = local_2d8;\n  if (iVar23 != 0) {\n    if (local_1ff == 0) goto LAB_0010a070;\n    if (local_2d8 < param_2 + sVar11) {\n      pcVar26 = \"error: parsing failed, stopped at \\'%s\\'\\n\";\nLAB_0010a6b3:\n      uVar17 = dcgettext(0,pcVar26,5);\n    }\n    else {\n      uVar17 = dcgettext(0,\"error: parsing failed\\n\",5);\n    }\n    FUN_00107360(uVar17,pbVar24);\n    goto LAB_00109f20;\n  }\n  if (local_1ff == 0) {\n    if ((byte)local_238 == 0) {\n      if ((long)(local_210 | local_230 | local_228 | local_218 | local_208 + local_220) < 2) {\nLAB_0010a0dd:\n        cVar9 = FUN_001075b0((byte)local_238,(long)&local_408 + 4);\n        lVar12 = local_290;\n        if (cVar9 == '\\0') {\nLAB_0010a35c:\n          pcVar26 = \"error: year, month, or day overflow\\n\";\n          if (local_1ff == 0) goto LAB_00109f20;\n        }\n        else {\n          uVar14 = local_2a0 - 1;\n          local_408._0_4_ = (int)uVar14;\n          local_408 = local_408 & 0xffffffff00000000 | uVar14 & 0xffffffff;\n          if (uVar14 != (long)(int)local_408 || SCARRY8(local_2a0,-1)) goto LAB_0010a35c;\n          iVar23 = (int)local_298;\n          local_410 = local_410 & 0xffffffff | local_298 << 0x20;\n          bVar30 = local_298 != iVar23;\n          local_418._0_4_ = (uint)bVar30;\n          if (bVar30) goto LAB_0010a35c;\n          uVar14 = local_210;\n          if (local_210 == 0) {\n            if ((local_238._1_1_ == '\\0') || (local_230 != 0)) {\n              local_418 = 0;\n              local_410 = local_298 << 0x20;\n              uStack_278 = 0;\n              if (local_1ff == 0) {\n                local_410._0_4_ = 0;\n                local_418._4_4_ = 0;\n                local_418._0_4_ = (uint)bVar30;\n                iStack_3cc = iVar23;\n              }\n              else {\nLAB_0010aea9:\n                local_410 = local_298 << 0x20;\n                uStack_278 = 0;\n                local_418 = 0;\n                FUN_00107360(\"warning: using midnight as starting time: 00:00:00\\n\");\n                uVar14 = local_210;\n                iStack_3cc = (int)(local_410 >> 0x20);\n              }\n              goto LAB_0010ab59;\n            }\n            if (local_228 == 0) goto LAB_0010ab0b;\n            local_418 = 0;\n            local_410 = local_298 << 0x20;\n            uStack_278 = 0;\n            if (local_1ff != 0) goto LAB_0010aea9;\n            local_410._0_4_ = 0;\n            local_418._4_4_ = 0;\n            iStack_3cc = iVar23;\nLAB_0010a1da:\n            local_3f8 = -1;\n          }\n          else {\nLAB_0010ab0b:\n            iVar23 = local_2bc;\n            bVar22 = local_1ff;\n            local_410._0_4_ = FUN_00106d80(local_290);\n            local_410 = local_410 & 0xffffffff00000000 | (ulong)(uint)local_410;\n            if ((int)(uint)local_410 < 0) {\n              puVar29 = &DAT_00114ca2;\n              if ((iVar23 != 0) && (puVar29 = (undefined *)0x114c3b, iVar23 != 1)) {\n                puVar29 = (undefined *)0x114b8a;\n              }\n              if (bVar22 != 0) {\n                uVar17 = dcgettext(0,\"error: invalid hour %ld%s\\n\",5);\n                FUN_00107360(uVar17,lVar12,puVar29);\n              }\n              goto LAB_00109f20;\n            }\n            local_418._4_4_ = (undefined4)local_288;\n            local_418 = local_280 & 0xffffffff | local_288 << 0x20;\n            local_418._0_4_ = (uint)local_280;\n            iStack_3cc = extraout_EDX;\n            if (bVar22 != 0) {\n              uVar17 = FUN_00107e40(&local_418,local_188);\n              if (local_210 == 0) {\n                uVar19 = dcgettext(0,\"using current time as starting value: \\'%s\\'\\n\",5);\n              }\n              else {\n                uVar19 = dcgettext(0,\"using specified time as starting value: \\'%s\\'\\n\",5);\n              }\n              FUN_00107360(uVar19,uVar17);\n              uVar14 = local_210;\n              iStack_3cc = (int)(local_410 >> 0x20);\n            }\nLAB_0010ab59:\n            if ((local_230 | local_228 | uVar14) != 0) goto LAB_0010a1da;\n          }\n          if (local_220 != 0) {\n            local_3f8 = local_2c4;\n          }\n          uStack_3c4 = local_408._4_4_;\n          local_3d8 = (uint)local_418;\n          uStack_3d4 = local_418._4_4_;\n          local_3d0 = (uint)local_410;\n          local_3c8 = (int)local_408;\n          local_3b8 = local_3f8;\n          lVar15 = FUN_0010ecc0(uVar13,&local_418);\n          cVar9 = FUN_001076e0(uVar13,&local_3d8,&local_418,lVar15);\n          lVar12 = local_208;\n          if (cVar9 == '\\0') {\n            if (local_208 != 0) {\n              local_a8 = 0x5858;\n              local_a6 = 0x58;\n              FUN_001071a0(local_2c0,local_a5);\n              lVar21 = FUN_0010e8e0(&local_a8);\n              if (lVar21 == 0) {\n                if (local_1ff != 0) {\n                  uVar17 = dcgettext(0,\"error: tzalloc (\\\"%s\\\") failed\\n\",5);\n                  FUN_00107360(uVar17,&local_a8);\n                }\n                goto LAB_00109f20;\n              }\n              local_418 = CONCAT44(uStack_3d4,local_3d8);\n              local_410 = CONCAT44(iStack_3cc,local_3d0);\n              local_408 = CONCAT44(uStack_3c4,local_3c8);\n              local_3f8 = local_3b8;\n              lVar15 = FUN_0010ecc0(lVar21,&local_418);\n              cVar9 = FUN_001076e0(lVar21,&local_3d8,&local_418,lVar15);\n              FUN_0010ead0(lVar21);\n              if (cVar9 != '\\0') goto LAB_0010a877;\n            }\n            FUN_00107fb0(&local_3d8,&local_418,&local_2d8,lVar12 != 0);\n            goto LAB_00109f20;\n          }\nLAB_0010a877:\n          if (local_228 != 0) {\n            if (local_230 != 0) {\n              if (local_1ff == 0) goto LAB_0010a956;\nLAB_0010ae2e:\n              uVar17 = FUN_00108480(&local_2d8,&local_a8);\n              uVar19 = dcgettext(0,\"warning: day (%s) ignored when explicit dates are given\\n\",5);\n              FUN_00107360(uVar19,uVar17);\n              goto LAB_0010ac46;\n            }\n            lVar12 = local_2d0;\n            if (0 < local_2d0) {\n              lVar12 = local_2d0 - (ulong)(local_400 != local_2c8);\n            }\n            lVar15 = lVar12 * 7;\n            if ((SEXT816(lVar15) == SEXT816(lVar12) * SEXT816(7)) &&\n               (lVar12 = (long)(((local_2c8 - local_400) + 7) % 7), lVar21 = lVar12 + lVar15,\n               !SCARRY8(lVar12,lVar15))) {\n              lVar12 = lVar21 + local_410._4_4_;\n              local_410 = local_410 & 0xffffffff | lVar12 << 0x20;\n              if (lVar12 == (int)lVar12 && !SCARRY8(lVar21,(long)local_410._4_4_)) {\n                local_3f8 = -1;\n                lVar15 = FUN_0010ecc0(uVar13,&local_418);\n                if (lVar15 != -1) {\n                  if (local_1ff != 0) {\n                    uVar17 = FUN_00107f00(&local_418,&local_2d8,local_188);\n                    uVar19 = FUN_00108480(&local_2d8,&local_a8);\n                    uVar20 = dcgettext(0,\"new start date: \\'%s\\' is \\'%s\\'\\n\",5);\n                    FUN_00107360(uVar20,uVar19,uVar17);\n                    goto LAB_0010ac10;\n                  }\n                  goto LAB_0010a956;\n                }\n              }\n            }\n            if (local_1ff != 0) {\n              uVar17 = FUN_00107f00(&local_418,&local_2d8,local_188);\n              uVar19 = FUN_00108480(&local_2d8,&local_a8);\n              uVar20 = dcgettext(0,\n                                 \"error: day \\'%s\\' (day ordinal=%ld number=%d) resulted in an invalid date: \\'%s\\'\\n\"\n                                 ,5);\n              FUN_00107360(uVar20,uVar19,local_2d0,local_2c8,uVar17);\n            }\n            goto LAB_00109f20;\n          }\nLAB_0010ac10:\n          if (local_1ff == 0) {\nLAB_0010a956:\n            if ((local_268 | local_270 | local_260) == 0) {\n              bVar22 = 0;\n              goto LAB_0010a97c;\n            }\nLAB_0010afa3:\n            local_458 = (long)local_408._4_4_ + local_270;\n            if ((local_458 != (long)(int)local_458) ||\n               (SCARRY8((long)local_408._4_4_,local_270) != false)) goto LAB_00109f20;\nLAB_0010ad21:\n            local_458 = local_458 & 0xffffffff;\n            uVar14 = (long)(int)local_408 + local_268;\n            iVar23 = (int)uVar14;\n            if ((uVar14 == (long)iVar23) && (SCARRY8((long)(int)local_408,local_268) == false)) {\n              uVar27 = (long)local_410._4_4_ + local_260;\n              iVar28 = (int)uVar27;\n              if ((uVar27 == (long)iVar28) && (SCARRY8((long)local_410._4_4_,local_260) == false)) {\n                local_408 = uVar14 & 0xffffffff | local_458 << 0x20;\n                local_418 = CONCAT44(uStack_3d4,local_3d8);\n                local_410 = CONCAT44(iVar28,local_3d0);\n                local_3f8 = local_3b8;\n                lVar15 = FUN_0010ecc0(uVar13,&local_418);\n                uVar5 = local_260;\n                uVar4 = local_268;\n                uVar14 = local_270;\n                if (lVar15 == -1) {\n                  if (local_1ff != 0) {\n                    pbVar24 = (byte *)FUN_00107f00(&local_418,&local_2d8,local_188);\n                    pcVar26 = \"error: adding relative date resulted in an invalid date: \\'%s\\'\\n\";\n                    goto LAB_0010a6b3;\n                  }\n                  goto LAB_00109f20;\n                }\n                if (local_1ff != 0) {\n                  uVar17 = dcgettext(0,\n                                     \"after date adjustment (%+ld years, %+ld months, %+ld days),\\n\"\n                                     ,5);\n                  FUN_00107360(uVar17,uVar14,uVar4,uVar5);\n                  uVar17 = FUN_00107f00(&local_418,&local_2d8,local_188);\n                  uVar19 = dcgettext(0,\"    new date/time = \\'%s\\'\\n\",5);\n                  FUN_00107360(uVar19,uVar17);\n                  if ((local_3b8 != -1) && (local_3b8 != local_3f8)) {\n                    uVar17 = dcgettext(0,\n                                       \"warning: daylight saving time changed after date adjustment\\n\"\n                                       ,5);\n                    FUN_00107360(uVar17);\n                  }\n                  bVar22 = local_1ff;\n                  if ((local_260 == 0) &&\n                     ((iVar28 != local_410._4_4_ || ((local_268 == 0 && (iVar23 != (int)local_408)))\n                      ))) {\n                    uVar17 = dcgettext(0,\n                                       \"warning: month/year adjustment resulted in shifted dates:\\n\"\n                                       ,5);\n                    FUN_00107360(uVar17);\n                    uVar17 = FUN_00107290(local_458,local_1b5);\n                    uVar19 = dcgettext(0,\"     adjusted Y M D: %s %02d %02d\\n\",5);\n                    FUN_00107360(uVar19,uVar17,iVar23 + 1,uVar27 & 0xffffffff);\n                    uVar14 = local_410 >> 0x20;\n                    uVar17 = FUN_00107290(local_408._4_4_,local_1b5);\n                    uVar19 = dcgettext(0,\"   normalized Y M D: %s %02d %02d\\n\",5);\n                    FUN_00107360(uVar19,uVar17,(int)local_408 + 1,uVar14);\n                    bVar22 = local_1ff;\n                  }\n                  goto LAB_0010a97c;\n                }\n                if (local_208 != 0) {\n                  uVar14 = (ulong)local_2c0;\n                  bVar30 = SBORROW8(lVar15,uVar14 - local_3f0);\n                  lVar15 = lVar15 - (uVar14 - local_3f0);\n                  if ((byte)(SBORROW8(uVar14,local_3f0) | bVar30) == 0) goto LAB_0010a9b1;\n                  goto LAB_00109f20;\n                }\nLAB_0010a9c6:\n                lVar12 = local_258 * 0xe10;\n                if (SEXT816(lVar12) == SEXT816((long)local_258) * SEXT416(0xe10)) {\n                  uVar27 = (ulong)local_240;\n                  uVar14 = ((long)(uStack_278 + uVar27) % 1000000000 + 1000000000U) % 1000000000;\n                  iVar23 = (int)((long)((uStack_278 + uVar27) - uVar14) / 1000000000);\n                  lVar21 = lVar15 + lVar12;\n                  if (!SCARRY8(lVar15,lVar12)) {\n                    lVar12 = local_250 * 0x3c;\n                    bVar22 = 0;\n                    if (SEXT816(lVar12) == SEXT816((long)local_250) * SEXT816(0x3c))\n                    goto LAB_0010aa88;\n                  }\n                }\n                goto LAB_00109f20;\n              }\n            }\nLAB_0010ae6d:\n            if (local_1ff != 0) {\n              uVar17 = dcgettext(0,\"error: %s:%d\\n\",5);\n              FUN_00107360(uVar17,\"parse-datetime.y\",0x87c);\n            }\n            goto LAB_00109f20;\n          }\n          uVar14 = local_228;\n          if (local_230 == 0) {\n            if (local_228 == 0) {\n              uVar17 = FUN_00107e80(&local_418,local_188);\n              uVar19 = dcgettext(0,\"using current date as starting value: \\'%s\\'\\n\",5);\n              FUN_00107360(uVar19,uVar17);\n              uVar14 = local_230;\n              if (local_228 != 0) goto joined_r0x0010b059;\n            }\n          }\n          else {\njoined_r0x0010b059:\n            if (uVar14 != 0) goto LAB_0010ae2e;\n          }\nLAB_0010ac46:\n          uVar17 = FUN_00107f00(&local_418,&local_2d8,local_188);\n          uVar19 = dcgettext(0,\"starting date/time: \\'%s\\'\\n\",5);\n          FUN_00107360(uVar19,uVar17);\n          bVar22 = local_1ff;\n          if ((local_270 | local_268 | local_260) != 0) {\n            if (local_1ff == 0) goto LAB_0010afa3;\n            if ((local_270 | local_268) == 0) {\nLAB_0010b19f:\n              if ((uint)local_410 != 0xc) {\n                uVar17 = dcgettext(0,\n                                   \"warning: when adding relative days, it is recommended to specify noon\\n\"\n                                   ,5);\n                FUN_00107360(uVar17);\n              }\n            }\n            else {\n              if (local_410._4_4_ != 0xf) {\n                uVar17 = dcgettext(0,\n                                   \"warning: when adding relative months/years, it is recommended to specify the 15th of the months\\n\"\n                                   ,5);\n                FUN_00107360(uVar17);\n              }\n              if (local_260 != 0) goto LAB_0010b19f;\n            }\n            local_458 = (long)local_408._4_4_ + local_270;\n            if ((local_458 == (long)(int)local_458) &&\n               (SCARRY8((long)local_408._4_4_,local_270) == false)) goto LAB_0010ad21;\n            goto LAB_0010ae6d;\n          }\nLAB_0010a97c:\n          if (local_208 != 0) {\n            uVar14 = (ulong)local_2c0;\n            bVar30 = SBORROW8(lVar15,uVar14 - local_3f0);\n            lVar15 = lVar15 - (uVar14 - local_3f0);\n            if ((byte)(SBORROW8(uVar14,local_3f0) | bVar30) == 0) {\nLAB_0010a9b1:\n              cVar9 = FUN_00107770();\n              bVar22 = extraout_DL;\n              if (cVar9 == '\\0') goto LAB_0010a9be;\n            }\n            if (bVar22 != 0) {\n              uVar17 = dcgettext(0,\"error: timezone %d caused time_t overflow\\n\",5);\n              FUN_00107360(uVar17,uVar14 & 0xffffffff);\n            }\n            goto LAB_00109f20;\n          }\nLAB_0010a9be:\n          if (bVar22 == 0) goto LAB_0010a9c6;\n          uVar17 = FUN_00107f00(&local_418,&local_2d8,local_188);\n          uVar19 = dcgettext(0,\"\\'%s\\' = %ld epoch-seconds\\n\",5);\n          FUN_00107360(uVar19,uVar17,lVar15);\n          lVar12 = local_258 * 0xe10;\n          bVar22 = local_1ff;\n          if (SEXT816(lVar12) == SEXT816((long)local_258) * SEXT416(0xe10)) {\n            uVar27 = (ulong)local_240;\n            uVar14 = ((long)(uStack_278 + uVar27) % 1000000000 + 1000000000U) % 1000000000;\n            iVar23 = (int)((long)((uStack_278 + uVar27) - uVar14) / 1000000000);\n            lVar21 = lVar15 + lVar12;\n            if ((!SCARRY8(lVar15,lVar12)) &&\n               (lVar12 = local_250 * 0x3c,\n               SEXT816(lVar12) == SEXT816((long)local_250) * SEXT816(0x3c))) {\nLAB_0010aa88:\n              uVar7 = local_248;\n              uVar6 = local_250;\n              uVar5 = local_258;\n              uVar4 = uVar27 & 0xffffffff;\n              if ((!SCARRY8(lVar21,lVar12)) &&\n                 (((lVar15 = lVar21 + lVar12 + local_248, !SCARRY8(lVar21 + lVar12,local_248) &&\n                   (lVar12 = lVar15 + iVar23, !SCARRY8(lVar15,(long)iVar23))) &&\n                  (cVar9 = FUN_00107770(), bVar22 = extraout_DL_00, cVar9 == '\\0')))) {\n                *param_1 = lVar12;\n                param_1[1] = uVar14;\n                if ((extraout_DL_00 != 0) && ((uVar7 | uVar6 | uVar5 | uVar27) != 0)) {\n                  uVar17 = dcgettext(0,\n                                     \"after time adjustment (%+ld hours, %+ld minutes, %+ld seconds, %+d ns),\\n\"\n                                     ,5);\n                  FUN_00107360(uVar17,uVar5,uVar6,uVar7,uVar4);\n                  uVar17 = dcgettext(0,\"    new time = %ld epoch-seconds\\n\",5);\n                  FUN_00107360(uVar17,lVar12);\n                  if ((local_3f8 != -1) &&\n                     ((lVar12 = FUN_0010ec20(uVar13,param_1,local_318), lVar12 != 0 &&\n                      (local_3f8 != local_2f8)))) {\n                    uVar17 = dcgettext(0,\n                                       \"warning: daylight saving time changed after time adjustment\\n\"\n                                       ,5);\n                    FUN_00107360(uVar17);\n                  }\n                }\n                goto LAB_0010a471;\n              }\n            }\n          }\n          if (bVar22 == 0) goto LAB_00109f20;\n          pcVar26 = \"error: adding relative time caused an overflow\\n\";\n        }\n        uVar17 = dcgettext(0,pcVar26,5);\n        FUN_00107360(uVar17);\n      }\n    }\n    else {\n      uVar10 = (uint)(byte)local_238;\n      *(undefined4 *)param_1 = (undefined4)local_280;\n      *(undefined4 *)((long)param_1 + 4) = local_280._4_4_;\n      *(undefined4 *)(param_1 + 1) = (undefined4)uStack_278;\n      *(undefined4 *)((long)param_1 + 0xc) = uStack_278._4_4_;\n    }\n  }\n  else {\n    uVar17 = dcgettext(0,\"input timezone: \",5);\n    FUN_00107360(uVar17);\n    pcVar26 = \"\\'@timespec\\' - always UTC\";\n    if (((byte)local_238 == '\\0') && (pcVar26 = \"parsed date/time string\", local_208 == 0)) {\n      if (local_460 == (byte *)0x0) {\n        pcVar26 = \"system default\";\n        goto LAB_0010a3c8;\n      }\n      bVar30 = param_5 < uVar13;\n      bVar31 = param_5 == uVar13;\n      if (bVar31) {\n        lVar12 = 5;\n        pbVar24 = local_460;\n        pbVar25 = &DAT_00114433;\n        do {\n          if (lVar12 == 0) break;\n          lVar12 = lVar12 + -1;\n          bVar30 = *pbVar24 < *pbVar25;\n          bVar31 = *pbVar24 == *pbVar25;\n          pbVar24 = pbVar24 + (ulong)bVar32 * -2 + 1;\n          pbVar25 = pbVar25 + (ulong)bVar32 * -2 + 1;\n        } while (bVar31);\n        pcVar26 = \"TZ=\\\"UTC0\\\" environment value or -u\";\n        if ((!bVar30 && !bVar31) == bVar30) goto LAB_0010a3c8;\n        uVar17 = dcgettext(0,\"TZ=\\\"%s\\\" environment value\",5);\n        __fprintf_chk(stderr,1,uVar17,local_460);\n      }\n      else {\n        uVar17 = dcgettext(0,\"TZ=\\\"%s\\\" in date string\",5);\n        __fprintf_chk(stderr,1,uVar17,local_460);\n      }\n    }\n    else {\nLAB_0010a3c8:\n      uVar17 = dcgettext(0,pcVar26,5);\n      __fprintf_chk(stderr,1,uVar17);\n    }\n    if (local_220 == 0) {\nLAB_0010a5f8:\n      if (local_208 != 0) {\nLAB_0010a405:\n        uVar17 = FUN_001071a0(local_2c0,local_1a8);\n        __fprintf_chk(stderr,1,\" (%s)\",uVar17);\n      }\n    }\n    else {\n      if (local_208 != 0) goto LAB_0010a405;\n      if (0 < local_2c4) {\n        fwrite(\", dst\",1,5,stderr);\n        goto LAB_0010a5f8;\n      }\n    }\n    fputc(10,stderr);\n    if ((byte)local_238 == '\\0') {\n      local_238._0_1_ = local_1ff;\n      if ((long)(local_210 | local_230 | local_228 | local_218 | local_208 + local_220) < 2)\n      goto LAB_0010a0dd;\n      if (local_1ff != 0) {\n        if (1 < (long)local_210) {\n          FUN_00107360(\"error: seen multiple time parts\\n\");\n        }\n        if (1 < (long)local_230) {\n          FUN_00107360(\"error: seen multiple date parts\\n\");\n        }\n        if (1 < (long)local_228) {\n          FUN_00107360(\"error: seen multiple days parts\\n\");\n        }\n        if (1 < (long)local_218) {\n          FUN_00107360(\"error: seen multiple daylight-saving parts\\n\");\n        }\n        if (1 < local_208 + local_220) {\n          FUN_00107360(\"error: seen multiple time-zone parts\\n\");\n        }\n      }\n      goto LAB_00109f20;\n    }\n    *(undefined4 *)param_1 = (undefined4)local_280;\n    *(undefined4 *)((long)param_1 + 4) = local_280._4_4_;\n    *(undefined4 *)(param_1 + 1) = (undefined4)uStack_278;\n    *(undefined4 *)((long)param_1 + 0xc) = uStack_278._4_4_;\nLAB_0010a471:\n    uVar10 = (uint)local_1ff;\n    if (local_1ff == 0) {\n      uVar10 = 1;\n      goto LAB_00109f20;\n    }\n    bVar30 = false;\n    bVar31 = local_460 == (byte *)0x0;\n    pcVar26 = \"timezone: system default\\n\";\n    if (bVar31) {\nLAB_0010a4ba:\n      uVar17 = dcgettext(0,pcVar26,5);\n      FUN_00107360(uVar17);\n    }\n    else {\n      lVar12 = 5;\n      pbVar24 = local_460;\n      pbVar25 = &DAT_00114433;\n      do {\n        if (lVar12 == 0) break;\n        lVar12 = lVar12 + -1;\n        bVar30 = *pbVar24 < *pbVar25;\n        bVar31 = *pbVar24 == *pbVar25;\n        pbVar24 = pbVar24 + (ulong)bVar32 * -2 + 1;\n        pbVar25 = pbVar25 + (ulong)bVar32 * -2 + 1;\n      } while (bVar31);\n      if ((!bVar30 && !bVar31) == bVar30) {\n        pcVar26 = \"timezone: Universal Time\\n\";\n        goto LAB_0010a4ba;\n      }\n      uVar17 = dcgettext(0,\"timezone: TZ=\\\"%s\\\" environment value\\n\",5);\n      FUN_00107360(uVar17,local_460);\n    }\n    tVar3 = *param_1;\n    uVar14 = param_1[1];\n    uVar17 = dcgettext(0,\"final: %ld.%09d (epoch-seconds)\\n\",5);\n    FUN_00107360(uVar17,tVar3,uVar14 & 0xffffffff);\n    ptVar18 = gmtime_r(param_1,&local_358);\n    if (ptVar18 != (tm *)0x0) {\n      uVar17 = FUN_00107f00(&local_358,0,local_188);\n      uVar19 = dcgettext(0,\"final: %s (UTC)\\n\",5);\n      FUN_00107360(uVar19,uVar17);\n    }\n    lVar12 = FUN_0010ec20(uVar13,param_1,local_318);\n    if (lVar12 != 0) {\n      uVar17 = FUN_001071a0(local_2f0,local_1a8);\n      uVar19 = FUN_00107f00(local_318,0,local_188);\n      uVar20 = dcgettext(0,\"final: %s (UTC%s)\\n\",5);\n      FUN_00107360(uVar20,uVar19,uVar17);\n    }\n  }\nLAB_00109f20:\n  if (uVar13 != param_5) {\n    FUN_0010ead0(uVar13);\n  }\nLAB_00109f2f:\n  free(local_468);\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar10;\njoined_r0x00109fe1:\n  while (bVar22 != 0x22) {\n    pbVar24 = pbVar24 + (bVar22 == 0x5c);\n    bVar22 = pbVar24[1];\n    *pbVar16 = *pbVar24;\n    pbVar24 = pbVar24 + 1;\n    pbVar16 = pbVar16 + 1;\n  }\n  *pbVar16 = 0;\n  uVar13 = FUN_0010e8e0(local_460);\n  if (uVar13 == 0) goto LAB_00109f2f;\n  do {\n    pbVar24 = pbVar24 + 1;\n    cVar9 = FUN_0010efe0(*pbVar24);\n  } while (cVar9 != '\\0');\n  lVar21 = FUN_0010ec20(uVar13,param_3,&local_398);\n  if (lVar21 != 0) goto LAB_00109c82;\nLAB_0010a070:\n  uVar10 = 0;\n  goto LAB_00109f20;\n}\n\n", 
    "0010db70": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010db70(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0011c220;\n  uStack_60 = uRam000000000011c228;\n  local_38 = DAT_0011c250;\n  local_58 = _DAT_0011c230;\n  uStack_50 = uRam000000000011c238;\n  local_48 = _DAT_0011c240;\n  uStack_40 = uRam000000000011c248;\n  FUN_0010d650(&local_68);\n  FUN_0010d3d0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104ab0": "\nvoid FUN_00104ab0(void)\n\n{\n  FUN_00104690(1);\n  return;\n}\n\n", 
    "0011d070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104000": "\nvoid FUN_00104000(void)\n\n{\n  if (DAT_0011c0e8 == '\\0') {\n    if (PTR___cxa_finalize_0011bff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0011c008);\n    }\n    FUN_00103f90();\n    DAT_0011c0e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00111d60": "\nundefined8 FUN_00111d60(uint *param_1,ulong *param_2)\n\n{\n  uint uVar1;\n  undefined4 *puVar2;\n  ulong uVar3;\n  unkbyte10 *pVar4;\n  uint *puVar5;\n  undefined8 *puVar6;\n  undefined4 *puVar7;\n  uint **ppuVar8;\n  \n  puVar2 = (undefined4 *)param_2[1];\n  if (*param_2 != 0) {\n    uVar3 = 0;\n    do {\n      switch(*puVar2) {\n      default:\n        return 0xffffffff;\n      case 1:\n      case 2:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar7 + 2;\n        }\n        *(char *)(puVar2 + 4) = (char)*puVar7;\n        break;\n      case 3:\n      case 4:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar7 + 2;\n        }\n        *(short *)(puVar2 + 4) = (short)*puVar7;\n        break;\n      case 5:\n      case 6:\n      case 0xd:\n      case 0xe:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar7 = (undefined4 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar7 = *(undefined4 **)(param_1 + 2);\n          *(undefined4 **)(param_1 + 2) = puVar7 + 2;\n        }\n        puVar2[4] = *puVar7;\n        break;\n      case 7:\n      case 8:\n      case 9:\n      case 10:\n      case 0x11:\n      case 0x12:\n      case 0x13:\n      case 0x14:\n      case 0x15:\n      case 0x16:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          puVar6 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          puVar6 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar6 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar6;\n        break;\n      case 0xb:\n        uVar1 = param_1[1];\n        if (uVar1 < 0xb0) {\n          puVar6 = (undefined8 *)((ulong)uVar1 + *(long *)(param_1 + 4));\n          param_1[1] = uVar1 + 0x10;\n        }\n        else {\n          puVar6 = *(undefined8 **)(param_1 + 2);\n          *(undefined8 **)(param_1 + 2) = puVar6 + 1;\n        }\n        *(undefined8 *)(puVar2 + 4) = *puVar6;\n        break;\n      case 0xc:\n        pVar4 = (unkbyte10 *)(*(long *)(param_1 + 2) + 0xfU & 0xfffffffffffffff0);\n        *(long *)(param_1 + 2) = (long)pVar4 + 0x10;\n        *(unkbyte10 *)(puVar2 + 4) = *pVar4;\n        break;\n      case 0xf:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppuVar8 = (uint **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppuVar8 = *(uint ***)(param_1 + 2);\n          *(uint ***)(param_1 + 2) = ppuVar8 + 1;\n        }\n        puVar5 = *ppuVar8;\n        if (puVar5 == (uint *)0x0) {\n          puVar5 = &UINT_00116c1c;\n        }\n        *(uint **)(puVar2 + 4) = puVar5;\n        break;\n      case 0x10:\n        uVar1 = *param_1;\n        if (uVar1 < 0x30) {\n          ppuVar8 = (uint **)((ulong)uVar1 + *(long *)(param_1 + 4));\n          *param_1 = uVar1 + 8;\n        }\n        else {\n          ppuVar8 = *(uint ***)(param_1 + 2);\n          *(uint ***)(param_1 + 2) = ppuVar8 + 1;\n        }\n        puVar5 = *ppuVar8;\n        if (puVar5 == (uint *)0x0) {\n          puVar5 = &UINT_00116c90;\n        }\n        *(uint **)(puVar2 + 4) = puVar5;\n      }\n      uVar3 = uVar3 + 1;\n      puVar2 = puVar2 + 8;\n    } while (uVar3 <= *param_2 && *param_2 != uVar3);\n  }\n  return 0;\n}\n\n", 
    "00104bd0": "\nvoid FUN_00104bd0(undefined8 param_1,undefined8 param_2,long param_3)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  \n  if (param_3 == -1) {\n    uVar1 = dcgettext(0,\"invalid argument %s for %s\",5);\n  }\n  else {\n    uVar1 = dcgettext(0,\"ambiguous argument %s for %s\",5);\n  }\n  uVar2 = FUN_0010dc80(1,param_1);\n  uVar3 = FUN_0010d900(0,8,param_2);\n  error(0,0,uVar1,uVar3,uVar2);\n  return;\n}\n\n", 
    "001037b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0011bf20)();\n  return pcVar1;\n}\n\n", 
    "0011d078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001038d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0011bfb0)();\n  return iVar1;\n}\n\n", 
    "0011d198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d8f0": "\nvoid FUN_0010d8f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010d8d0(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010bd00": "\nundefined8\nFUN_0010bd00(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bc50(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001041c0": "\nulong FUN_001041c0(char *param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  __ssize_t _Var4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  FILE *__stream;\n  int *piVar7;\n  ulong uVar8;\n  char **unaff_R13;\n  size_t *unaff_R14;\n  undefined8 *unaff_R15;\n  long in_FS_OFFSET;\n  byte local_81;\n  char *local_70;\n  char *local_68;\n  size_t local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((*param_1 == '-') && (param_1[1] == '\\0')) {\n    local_70 = (char *)dcgettext(0,\"standard input\",5);\n    __stream = stdin;\n  }\n  else {\n    __stream = fopen(param_1,\"r\");\n    local_70 = param_1;\n    if (__stream == (FILE *)0x0) {\n      uVar5 = FUN_0010dad0(0,3,param_1);\n      piVar7 = __errno_location();\n      error(1,*piVar7,&DAT_00114840,uVar5);\n      goto LAB_00104330;\n    }\n  }\n  local_81 = 1;\n  unaff_R14 = &local_60;\n  unaff_R13 = &local_68;\n  local_68 = (char *)0x0;\n  unaff_R15 = &local_58;\n  local_60 = 0;\n  while( true ) {\n    _Var4 = getline(unaff_R13,unaff_R14,__stream);\n    if (_Var4 < 0) break;\n    cVar1 = FUN_00109b60(unaff_R15,local_68,0,DAT_0011c0ec,param_3,param_4);\n    if (cVar1 == '\\0') {\n      if (local_68[_Var4 + -1] == '\\n') {\n        local_68[_Var4 + -1] = '\\0';\n      }\n      uVar5 = FUN_0010dc90(local_68);\n      uVar6 = dcgettext(0,\"invalid date %s\",5);\n      error(0,0,uVar6,uVar5);\n      local_81 = 0;\n    }\n    else {\nLAB_00104330:\n      bVar2 = FUN_00104090(param_2,local_58,local_50,param_3);\n      local_81 = local_81 & bVar2;\n    }\n  }\n  iVar3 = FUN_0010e5e0(__stream);\n  if (iVar3 != -1) {\n    free(local_68);\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return (ulong)local_81;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  uVar5 = FUN_0010dad0(0,3,local_70);\n  piVar7 = __errno_location();\n  uVar8 = 1;\n  error(1,*piVar7,&DAT_00114840,uVar5);\n  return uVar8;\n}\n\n", 
    "001075b0": "\nundefined8 FUN_001075b0(char param_1,int *param_2)\n\n{\n  bool bVar1;\n  undefined8 uVar2;\n  int iVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong param_8;\n  long param_9;\n  \n  if ((long)param_8 < 0) {\n    iVar3 = (int)(-0x76c - param_8);\n    *param_2 = iVar3;\n    if (-0x76c - param_8 == (long)iVar3 && !SBORROW8(-0x76c,param_8)) {\n      return 1;\n    }\n    goto LAB_00107679;\n  }\n  uVar5 = param_8;\n  if (param_9 == 2) {\n    lVar4 = 2000;\n    if (0x44 < (long)param_8) {\n      lVar4 = 0x76c;\n    }\n    uVar5 = lVar4 + param_8;\n    if (param_1 != '\\0') {\n      uVar2 = dcgettext(0,\"warning: adjusting year value %ld to %ld\\n\",5);\n      FUN_00107360(uVar2,param_8,uVar5);\n    }\n  }\n  bVar1 = false;\n  lVar4 = uVar5 - 0x76c;\n  if (uVar5 < 0x76c) {\n    bVar1 = false;\n    if (-1 < lVar4) {\nLAB_00107625:\n      bVar1 = true;\n    }\n  }\n  else if (lVar4 < 0) goto LAB_00107625;\n  *param_2 = (int)lVar4;\n  if (lVar4 != (int)lVar4) {\n    bVar1 = true;\n  }\n  param_8 = uVar5;\n  if (!bVar1) {\n    return 1;\n  }\nLAB_00107679:\n  if (param_1 == '\\0') {\n    return 0;\n  }\n  uVar2 = dcgettext(0,0x114aeb,5);\n  FUN_00107360(uVar2,param_8);\n  return 0;\n}\n\n", 
    "00104d60": "\nlong FUN_00104d60(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5,code *param_6)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00104ac0(param_2,param_3,param_4,param_5);\n  if (lVar1 < 0) {\n    FUN_00104bd0(param_1,param_2,lVar1);\n    FUN_00104c60(param_3,param_4,param_5);\n    (*param_6)();\n    lVar1 = -1;\n  }\n  return lVar1;\n}\n\n", 
    "00111cf0": "\nlong FUN_00111cf0(ulong param_1,ulong param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = -1;\n  if (!CARRY8(param_1,param_2)) {\n    lVar1 = param_1 + param_2;\n  }\n  return lVar1;\n}\n\n", 
    "0010bdb0": "\nundefined8\nFUN_0010bdb0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_0010f000((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_0010bd00(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010d960": "\nvoid FUN_0010d960(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010ba60(auStack_68);\n  FUN_0010d3d0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f220": "\nlong FUN_0010f220(long param_1,long param_2,long param_3)\n\n{\n  __int32_t **pp_Var1;\n  \n  if (param_3 != 0) {\n    param_3 = param_3 + -1;\n    pp_Var1 = __ctype_tolower_loc();\n    do {\n      *(char *)(param_1 + param_3) = (char)(*pp_Var1)[*(byte *)(param_2 + param_3)];\n      param_3 = param_3 + -1;\n    } while (param_3 != -1);\n  }\n  return param_1;\n}\n\n", 
    "00103700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_unlocked_0011bec8)();\n  return iVar1;\n}\n\n", 
    "00103820": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t timegm(tm *__tp)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_timegm_0011bf58)();\n  return tVar1;\n}\n\n", 
    "0010d810": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_0010d810(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0011c080;\n  if (1 < DAT_0011c078) {\n    ppvVar2 = (void **)(PTR_DAT_0011c080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0011c080 + (ulong)(DAT_0011c078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0011c120) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0011c098 = &DAT_0011c120;\n    _DAT_0011c090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0011c090) {\n    free(__ptr_00);\n    PTR_DAT_0011c080 = &DAT_0011c090;\n  }\n  DAT_0011c078 = 1;\n  return;\n}\n\n", 
    "00103740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0011bee8)();\n  return iVar1;\n}\n\n", 
    "00103860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0011bf78)();\n  return pFVar1;\n}\n\n", 
    "0010ef90": "\nulong FUN_0010ef90(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "0011d180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint putc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00110c40": "\nvoid FUN_00110c40(uint *param_1)\n\n{\n  *param_1 = *param_1 | 0x20;\n  return;\n}\n\n", 
    "0011d060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint clock_gettime(clockid_t __clock_id,timespec *__tp)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107780": "\nuint FUN_00107780(long *param_1,byte **param_2)\n\n{\n  byte *pbVar1;\n  char cVar2;\n  char cVar3;\n  byte bVar4;\n  byte *pbVar5;\n  undefined8 uVar6;\n  byte *pbVar7;\n  long lVar8;\n  long lVar9;\n  int iVar10;\n  int iVar11;\n  int iVar12;\n  uint uVar13;\n  int iVar14;\n  uint uVar15;\n  undefined *puVar16;\n  long in_FS_OFFSET;\n  int local_6c;\n  undefined local_58 [24];\n  long local_40;\n  \n  pbVar5 = *param_2;\n  bVar4 = *pbVar5;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar2 = FUN_0010efe0((uint)bVar4);\n  uVar15 = (uint)bVar4;\nLAB_001077d3:\n  do {\n    while (uVar13 = uVar15, pbVar7 = pbVar5 + 1, cVar2 != '\\0') {\n      *param_2 = pbVar7;\n      bVar4 = *pbVar7;\n      cVar2 = FUN_0010efe0((uint)bVar4);\n      pbVar5 = pbVar7;\n      uVar15 = (uint)bVar4;\n    }\n    cVar3 = FUN_0010ef50(uVar13);\n    cVar2 = (char)uVar13;\n    bVar4 = cVar2 - 0x2bU & 0xfd;\n    if (cVar3 == '\\0') {\n      if (bVar4 != 0) {\n        cVar3 = FUN_0010eee0(uVar13);\n        if (cVar3 != '\\0') {\n          puVar16 = local_58;\n          do {\n            pbVar5 = pbVar5 + 1;\n            if (puVar16 < local_58 + 0x13) {\n              *puVar16 = (char)uVar13;\n              puVar16 = puVar16 + 1;\n            }\n            *param_2 = pbVar5;\n            bVar4 = *pbVar5;\n            uVar13 = (uint)bVar4;\n            cVar2 = FUN_0010eee0();\n          } while ((cVar2 != '\\0') || (bVar4 == 0x2e));\n          *puVar16 = 0;\n          lVar9 = FUN_00106ec0(param_2,local_58);\n          if (lVar9 == 0) {\n            uVar15 = 0x3f;\n            if (*(char *)((long)param_2 + 0xd9) != '\\0') {\n              uVar6 = dcgettext(0,0x114b09,5);\n              FUN_00107360(uVar6,local_58);\n            }\n          }\n          else {\n            uVar15 = *(uint *)(lVar9 + 8);\n            *param_1 = (long)*(int *)(lVar9 + 0xc);\n          }\n          goto LAB_001078ad;\n        }\n        if (cVar2 != '(') {\n          *param_2 = pbVar5 + 1;\n          bVar4 = FUN_00106bd0((int)(char)*pbVar5);\n          uVar15 = (uint)bVar4;\n          goto LAB_001078ad;\n        }\n        lVar9 = 0;\n        do {\n          while( true ) {\n            pbVar7 = pbVar5;\n            pbVar5 = pbVar7 + 1;\n            *param_2 = pbVar5;\n            bVar4 = *pbVar7;\n            if (bVar4 == 0) {\n              uVar15 = 0;\n              goto LAB_001078ad;\n            }\n            if (bVar4 != 0x28) break;\n            lVar9 = lVar9 + 1;\n            if (lVar9 == 0) goto LAB_00107931;\n          }\n          lVar9 = lVar9 - (ulong)(bVar4 == 0x29);\n        } while (lVar9 != 0);\nLAB_00107931:\n        bVar4 = pbVar7[1];\n        cVar2 = FUN_0010efe0((uint)bVar4);\n        uVar15 = (uint)bVar4;\n        goto LAB_001077d3;\n      }\n    }\n    else if (bVar4 != 0) {\n      local_6c = 0;\n      break;\n    }\n    local_6c = (-(uint)(cVar2 != '-') & 2) - 1;\n    do {\n      pbVar5 = pbVar5 + 1;\n      *param_2 = pbVar5;\n      uVar15 = (uint)*pbVar5;\n      uVar13 = (uint)*pbVar5;\n      cVar2 = FUN_0010efe0(uVar15);\n    } while (cVar2 != '\\0');\n    cVar2 = FUN_0010ef50(uVar15);\n  } while (cVar2 == '\\0');\n  lVar9 = 0;\n  pbVar7 = pbVar5;\n  while( true ) {\n    iVar12 = uVar13 - 0x30;\n    if (local_6c == -1) {\n      iVar12 = 0x30 - uVar13;\n    }\n    lVar8 = lVar9 + iVar12;\n    if (SCARRY8(lVar9,(long)iVar12)) break;\n    bVar4 = pbVar7[1];\n    uVar13 = (uint)bVar4;\n    pbVar1 = pbVar7 + 1;\n    cVar2 = FUN_0010ef50(uVar13);\n    if (cVar2 == '\\0') {\n      if ((bVar4 & 0xfd) == 0x2c) {\n        bVar4 = pbVar7[2];\n        cVar2 = FUN_0010ef50((int)(char)bVar4);\n        if (cVar2 != '\\0') {\n          cVar2 = FUN_00107770();\n          uVar15 = 0x3f;\n          if (cVar2 == '\\0') {\n            iVar10 = (int)(char)pbVar7[3];\n            pbVar7 = pbVar7 + 3;\n            iVar12 = (char)bVar4 + -0x30;\n            iVar14 = 8;\n            cVar2 = FUN_0010ef50(iVar10);\n            iVar11 = iVar10;\n            do {\n              iVar12 = iVar12 * 10;\n              if (cVar2 != '\\0') {\n                iVar12 = iVar12 + -0x30 + iVar10;\n                iVar10 = (int)(char)pbVar7[1];\n                pbVar7 = pbVar7 + 1;\n                cVar2 = FUN_0010ef50(iVar10);\n                iVar11 = iVar10;\n              }\n              iVar14 = iVar14 + -1;\n            } while (iVar14 != 0);\n            if (local_6c == -1) {\n              while (cVar2 != '\\0') {\n                if ((char)iVar11 != '0') {\n                  iVar12 = iVar12 + 1;\n                  goto LAB_00107a75;\n                }\n                iVar11 = (int)(char)pbVar7[1];\n                pbVar7 = pbVar7 + 1;\n                cVar2 = FUN_0010ef50();\n              }\n              if (iVar12 == 0) {\n                uVar15 = 0x114;\n                *param_1 = lVar8;\n                param_1[1] = 0;\n                *param_2 = pbVar7;\n                goto LAB_001078ad;\n              }\n            }\n            else {\nLAB_00107a75:\n              while (cVar2 != '\\0') {\n                pbVar5 = pbVar7 + 1;\n                pbVar7 = pbVar7 + 1;\n                cVar2 = FUN_0010ef50((int)(char)*pbVar5);\n              }\n              if ((-1 < local_6c) || (iVar12 == 0)) {\n                *param_1 = lVar8;\n                param_1[1] = (long)iVar12;\n                uVar15 = ~-(uint)(local_6c == 0) + 0x115;\n                *param_2 = pbVar7;\n                goto LAB_001078ad;\n              }\n            }\n            uVar15 = 0x3f;\n            if (lVar8 != -0x8000000000000000) {\n              uVar15 = 0x114;\n              *param_1 = lVar8 + -1;\n              param_1[1] = (long)(1000000000 - iVar12);\n              *param_2 = pbVar7;\n            }\n          }\n          goto LAB_001078ad;\n        }\n      }\n      param_1[1] = lVar8;\n      *(byte *)param_1 = (byte)((uint)local_6c >> 0x1f);\n      param_1[2] = (long)pbVar1 - (long)pbVar5;\n      uVar15 = (local_6c == 0) + 0x112;\n      *param_2 = pbVar1;\n      goto LAB_001078ad;\n    }\n    lVar9 = lVar8 * 10;\n    pbVar7 = pbVar1;\n    if (SEXT816(lVar9) != SEXT816(lVar8) * SEXT816(10)) break;\n  }\n  uVar15 = 0x3f;\nLAB_001078ad:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar15;\n}\n\n", 
    "0010d9e0": "\nvoid FUN_0010d9e0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_0010d960(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010dc60": "\nvoid FUN_0010dc60(void)\n\n{\n  FUN_0010d3d0();\n  return;\n}\n\n", 
    "0011d188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001035a0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0011be18)();\n  return;\n}\n\n", 
    "0010e1b0": "\nvoid FUN_0010e1b0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_0010dd40();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010eb10": "\nlong FUN_0010eb10(long param_1)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s2;\n  long lVar3;\n  int *piVar4;\n  long lVar5;\n  \n  __s2 = (char *)FUN_0010e860();\n  if (__s2 == (char *)0x0) {\n    if (*(char *)(param_1 + 8) == '\\0') {\n      return 1;\n    }\n  }\n  else if (*(char *)(param_1 + 8) != '\\0') {\n    iVar2 = strcmp((char *)(param_1 + 9),__s2);\n    if (iVar2 == 0) {\n      return 1;\n    }\n  }\n  lVar3 = FUN_0010e8e0(__s2);\n  lVar5 = lVar3;\n  if (lVar3 != 0) {\n    cVar1 = FUN_0010e8a0(param_1);\n    if (cVar1 == '\\0') {\n      piVar4 = __errno_location();\n      lVar5 = 0;\n      iVar2 = *piVar4;\n      FUN_0010ead0(lVar3);\n      *piVar4 = iVar2;\n    }\n  }\n  return lVar5;\n}\n\n", 
    "0011d068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setenv(char *__name,char *__value,int __replace)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001036c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0011bea8)();\n  return iVar1;\n}\n\n", 
    "0010d8b0": "\nvoid FUN_0010d8b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010d3d0(param_1,param_2,0xffffffffffffffff,&DAT_0011c220);\n  return;\n}\n\n", 
    "001037e0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0011bf38)();\n  return;\n}\n\n", 
    "0010d9d0": "\nvoid FUN_0010d9d0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_0010d900(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010e580": "\nvoid FUN_0010e580(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_0010e550(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "00111d30": "\nvoid FUN_00111d30(void)\n\n{\n  undefined8 uVar1;\n  undefined8 in_RCX;\n  undefined auVar2 [16];\n  \n  auVar2 = FUN_00111cf0();\n  uVar1 = FUN_00111cf0(SUB168(auVar2,0),SUB168(auVar2 >> 0x40,0));\n  FUN_00111cf0(uVar1,in_RCX);\n  return;\n}\n\n", 
    "00103610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0011be50)();\n  return pcVar1;\n}\n\n", 
    "00103730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t time(time_t *__timer)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_time_0011bee0)();\n  return tVar1;\n}\n\n", 
    "0010dac0": "\nvoid FUN_0010dac0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010da00(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00103850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0011bf70)();\n  return iVar1;\n}\n\n", 
    "0010dc70": "\nvoid FUN_0010dc70(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_0010dc60(0,param_1,param_2);\n  return;\n}\n\n", 
    "00110c50": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nvoid * FUN_00110c50(void *param_1,int **param_2,void *param_3,undefined8 param_4)\n\n{\n  uint *puVar1;\n  unkbyte10 Var2;\n  uint uVar3;\n  long lVar4;\n  int iVar5;\n  ulong uVar6;\n  int *__n;\n  void *pvVar7;\n  size_t sVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  ulong uVar11;\n  void *pvVar12;\n  int *piVar13;\n  ulong uVar14;\n  undefined *puVar15;\n  undefined *puVar17;\n  undefined *puVar18;\n  int *piVar19;\n  void **ppvVar20;\n  long in_FS_OFFSET;\n  bool bVar21;\n  undefined auStack_428 [8];\n  ulong local_420;\n  undefined *local_418;\n  int **local_410;\n  long local_408;\n  void *local_400;\n  int *local_3f8;\n  undefined *local_3f0;\n  int local_3e8;\n  uint local_3e4;\n  int *local_3e0;\n  int *local_3d8;\n  int *local_3d0;\n  int local_3c4;\n  uint local_3c0 [2];\n  undefined local_3b8 [8];\n  int *local_3b0;\n  int local_3a8 [56];\n  long local_2c8;\n  void **local_2c0;\n  undefined8 local_2b8;\n  undefined8 local_2b0;\n  void *local_2a8 [77];\n  long local_40;\n  undefined *puVar16;\n  \n  puVar16 = auStack_428;\n  puVar15 = auStack_428;\n  puVar17 = auStack_428;\n  puVar18 = auStack_428;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_410 = param_2;\n  local_400 = param_1;\n  iVar5 = FUN_00111f80(param_3,&local_2c8,local_3b8);\n  if (iVar5 < 0) {\n    pvVar7 = (void *)0x0;\n    goto LAB_00111483;\n  }\n  iVar5 = FUN_00111d60(param_4,local_3b8);\n  if (iVar5 < 0) {\n    if (local_2c0 != local_2a8) {\n      free(local_2c0);\n    }\n    if (local_3b0 != local_3a8) {\n      free(local_3b0);\n    }\n    piVar19 = __errno_location();\n    pvVar7 = (void *)0x0;\n    *piVar19 = 0x16;\n    puVar18 = auStack_428;\n    goto LAB_00111483;\n  }\n  uVar6 = FUN_00111d30(7,local_2b8,local_2b0,6);\n  if (uVar6 < 4000) {\n    puVar18 = auStack_428;\n    while (puVar16 != auStack_428 + -(uVar6 + 0x17 & 0xfffffffffffff000)) {\n      puVar15 = puVar18 + -0x1000;\n      *(undefined8 *)(puVar18 + -8) = *(undefined8 *)(puVar18 + -8);\n      puVar16 = puVar18 + -0x1000;\n      puVar18 = puVar18 + -0x1000;\n    }\n    uVar6 = (ulong)((uint)(uVar6 + 0x17) & 0xff0);\n    lVar4 = -uVar6;\n    puVar18 = puVar15 + lVar4;\n    if (uVar6 != 0) {\n      *(undefined8 *)(puVar15 + -8) = *(undefined8 *)(puVar15 + -8);\n    }\n    local_418 = (undefined *)0x0;\n    local_3f0 = (undefined *)((ulong)(puVar15 + lVar4 + 0xf) & 0xfffffffffffffff0);\nLAB_00110d11:\n    piVar19 = (int *)0x0;\n    if (local_400 != (void *)0x0) {\n      piVar19 = *local_410;\n    }\n    __n = (int *)0x0;\n    local_408 = 0;\n    pvVar7 = *local_2c0;\n    ppvVar20 = local_2c0;\n    pvVar12 = local_400;\n    if (pvVar7 == param_3) goto LAB_00110e06;\n    do {\n      local_3d0 = __n;\n      local_3d8 = (int *)((long)pvVar7 - (long)param_3);\n      *(undefined8 *)(puVar18 + -8) = 0x110d6c;\n      __n = (int *)FUN_00111cf0(__n,(int *)((long)pvVar7 - (long)param_3));\n      piVar9 = local_3d8;\n      piVar13 = local_3d0;\n      pvVar7 = pvVar12;\n      if (__n <= piVar19) goto LAB_00110df7;\n      if (piVar19 != (int *)0x0) {\n        if (-1 < (long)piVar19) {\n          piVar19 = (int *)((long)piVar19 * 2);\n          goto LAB_00110d95;\n        }\ncode_r0x00111864:\n        *(undefined8 *)(puVar18 + -8) = 0x111869;\n        local_3e0 = __errno_location();\n        if (pvVar12 == local_400) goto LAB_00111309;\nLAB_001112fc:\n        if (pvVar12 == (void *)0x0) goto LAB_00111309;\n        goto LAB_00111301;\n      }\n      piVar19 = (int *)0xc;\nLAB_00110d95:\n      if (piVar19 < __n) {\n        piVar19 = __n;\n      }\n      if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x00111864;\n      if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n        local_3e0 = local_3d0;\n        local_3d8 = (int *)((ulong)local_3d8 & 0xffffffffffffff00 | (ulong)(pvVar12 == local_400));\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x1117dc;\n        pvVar7 = malloc((size_t)piVar19);\n        piVar13 = local_3e0;\n        if (pvVar7 == (void *)0x0) goto code_r0x00111864;\n        piVar9 = local_3d0;\n        if ((local_3e0 != (int *)0x0) && ((char)local_3d8 != '\\0')) {\n          local_3d8 = local_3d0;\n          local_3d0 = local_3e0;\n          *(undefined8 *)(puVar18 + -8) = 0x111826;\n          pvVar7 = memcpy(pvVar7,pvVar12,(size_t)piVar13);\n          piVar9 = local_3d8;\n          piVar13 = local_3d0;\n        }\n      }\n      else {\n        local_3d8 = local_3d0;\n        local_3d0 = piVar9;\n        *(undefined8 *)(puVar18 + -8) = 0x110ddd;\n        pvVar7 = realloc(pvVar12,(size_t)piVar19);\n        piVar9 = local_3d0;\n        piVar13 = local_3d8;\n        if (pvVar7 == (void *)0x0) goto LAB_00111cdc;\n      }\nLAB_00110df7:\n      *(undefined8 *)(puVar18 + -8) = 0x110e06;\n      memcpy((void *)((long)pvVar7 + (long)piVar13),param_3,(size_t)piVar9);\n      pvVar12 = pvVar7;\nLAB_00110e06:\n      do {\n        if (local_2c8 == local_408) {\n          *(undefined8 *)(puVar18 + -8) = 0x111bb9;\n          piVar9 = (int *)FUN_00111cf0(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar13 = (int *)0xc;\n            }\n            else {\n              piVar13 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) goto code_r0x00111864;\n            }\n            piVar19 = piVar13;\n            if (piVar13 <= piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x00111864;\n            bVar21 = pvVar12 == local_400;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x111ca4;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x00111864;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x111cc7;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x111c0b;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto LAB_00111cdc;\n            }\n          }\n          *(undefined *)((long)pvVar7 + (long)__n) = 0;\n          if ((pvVar7 != local_400) && ((int *)((long)__n + 1) < piVar19)) {\n            *(undefined8 *)(puVar18 + -8) = 0x111c93;\n            pvVar12 = realloc(pvVar7,(size_t)(int *)((long)__n + 1));\n            if (pvVar12 != (void *)0x0) {\n              pvVar7 = pvVar12;\n            }\n          }\n          puVar15 = local_418;\n          if (local_418 != (undefined *)0x0) {\n            *(undefined8 *)(puVar18 + -8) = 0x111c42;\n            free(puVar15);\n          }\n          if (local_2c0 != local_2a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x111c5a;\n            free(local_2c0);\n          }\n          if (local_3b0 != local_3a8) {\n            *(undefined8 *)(puVar18 + -8) = 0x111c72;\n            free(local_3b0);\n          }\n          *local_410 = __n;\n          goto LAB_00111483;\n        }\n        pvVar7 = ppvVar20[10];\n        if (*(char *)(ppvVar20 + 9) == '%') {\n          if (pvVar7 != (void *)0xffffffffffffffff) goto LAB_0010393e;\n          *(undefined8 *)(puVar18 + -8) = 0x111717;\n          piVar9 = (int *)FUN_00111cf0(__n,1);\n          pvVar7 = pvVar12;\n          if (piVar19 < piVar9) {\n            if (piVar19 == (int *)0x0) {\n              piVar19 = (int *)0xc;\n            }\n            else {\n              if ((long)piVar19 < 0) goto code_r0x00111864;\n              piVar19 = (int *)((long)piVar19 * 2);\n            }\n            if (piVar19 < piVar9) {\n              piVar19 = piVar9;\n            }\n            if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x00111864;\n            bVar21 = pvVar12 == local_400;\n            local_3d0 = piVar9;\n            if ((pvVar12 == (void *)0x0) || (bVar21)) {\n              *(undefined8 *)(puVar18 + -8) = 0x111af8;\n              pvVar7 = malloc((size_t)piVar19);\n              if (pvVar7 == (void *)0x0) goto code_r0x00111864;\n              piVar9 = local_3d0;\n              if ((__n != (int *)0x0) && (bVar21)) {\n                *(undefined8 *)(puVar18 + -8) = 0x111b31;\n                pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                piVar9 = local_3d0;\n              }\n            }\n            else {\n              *(undefined8 *)(puVar18 + -8) = 0x11176f;\n              pvVar7 = realloc(pvVar12,(size_t)piVar19);\n              piVar9 = local_3d0;\n              if (pvVar7 == (void *)0x0) goto LAB_00111cdc;\n            }\n          }\n          pvVar12 = pvVar7;\n          *(undefined *)((long)pvVar12 + (long)__n) = 0x25;\n          __n = piVar9;\n        }\n        else {\n          if (pvVar7 == (void *)0xffffffffffffffff) {\nLAB_0010393e:\n                    /* WARNING: Subroutine does not return */\n            *(undefined **)(puVar18 + -8) = &UNK_00103943;\n            abort();\n          }\n          puVar1 = (uint *)(local_3b0 + (long)pvVar7 * 8);\n          local_3d0 = (int *)((ulong)local_3d0 & 0xffffffff00000000 | (ulong)*puVar1);\n          if (*(char *)(ppvVar20 + 9) == 'n') {\n            switch(*puVar1) {\n            case 0x12:\n              **(undefined **)(puVar1 + 4) = (char)__n;\n              break;\n            case 0x13:\n              **(undefined2 **)(puVar1 + 4) = (short)__n;\n              break;\n            case 0x14:\n              **(undefined4 **)(puVar1 + 4) = (int)__n;\n              break;\n            case 0x15:\n            case 0x16:\n              **(int ***)(puVar1 + 4) = __n;\n              break;\n            default:\nswitchD_001111b4_caseD_5:\n                    /* WARNING: Subroutine does not return */\n              *(undefined8 *)(puVar18 + -8) = 0x10393e;\n              abort();\n            }\n          }\n          else {\n            uVar3 = *(uint *)(ppvVar20 + 2);\n            *local_3f0 = 0x25;\n            if ((uVar3 & 1) == 0) {\n              local_3d8 = (int *)(local_3f0 + 1);\n            }\n            else {\n              local_3f0[1] = 0x27;\n              local_3d8 = (int *)(local_3f0 + 2);\n            }\n            if ((uVar3 & 2) != 0) {\n              *(undefined *)local_3d8 = 0x2d;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 4) != 0) {\n              *(undefined *)local_3d8 = 0x2b;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 8) != 0) {\n              *(undefined *)local_3d8 = 0x20;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x10) != 0) {\n              *(undefined *)local_3d8 = 0x23;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x40) != 0) {\n              *(undefined *)local_3d8 = 0x49;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            if ((uVar3 & 0x20) != 0) {\n              *(undefined *)local_3d8 = 0x30;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[3];\n            piVar13 = local_3b0;\n            if (pvVar7 != ppvVar20[4]) {\n              sVar8 = (long)ppvVar20[4] - (long)pvVar7;\n              local_3e0 = local_3b0;\n              *(undefined8 *)(puVar18 + -8) = 0x110f36;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            piVar9 = local_3d8;\n            pvVar7 = ppvVar20[6];\n            if (pvVar7 != ppvVar20[7]) {\n              sVar8 = (long)ppvVar20[7] - (long)pvVar7;\n              local_3e0 = piVar13;\n              *(undefined8 *)(puVar18 + -8) = 0x110f6d;\n              memcpy(piVar9,pvVar7,sVar8);\n              local_3d8 = (int *)((long)local_3d8 + sVar8);\n              piVar13 = local_3e0;\n            }\n            switch(local_3d0._0_4_) {\n            case 9:\n            case 10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            case 7:\n            case 8:\n            case 0xe:\n            case 0x10:\n              *(undefined *)local_3d8 = 0x6c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n              break;\n            case 0xc:\n              *(undefined *)local_3d8 = 0x4c;\n              local_3d8 = (int *)((long)local_3d8 + 1);\n            }\n            *(undefined *)local_3d8 = *(undefined *)(ppvVar20 + 9);\n            *(undefined *)((long)local_3d8 + 1) = 0;\n            if (ppvVar20[5] == (void *)0xffffffffffffffff) {\n              local_3e4 = 0;\n            }\n            else {\n              if (piVar13[(long)ppvVar20[5] * 8] != 5) goto LAB_0010393e;\n              local_3e4 = 1;\n              local_3c0[0] = (piVar13 + (long)ppvVar20[5] * 8)[4];\n            }\n            if (ppvVar20[8] != (void *)0xffffffffffffffff) {\n              if (piVar13[(long)ppvVar20[8] * 8] != 5) goto LAB_0010393e;\n              local_3c0[local_3e4] = (piVar13 + (long)ppvVar20[8] * 8)[4];\n              local_3e4 = local_3e4 + 1;\n            }\n            *(undefined8 *)(puVar18 + -8) = 0x1110b7;\n            piVar9 = (int *)FUN_00111cf0(__n,2);\n            pvVar7 = pvVar12;\n            if (piVar19 < piVar9) {\n              if (piVar19 == (int *)0x0) {\n                piVar19 = (int *)0xc;\n              }\n              else {\n                if ((long)piVar19 < 0) goto code_r0x00111864;\n                piVar19 = (int *)((long)piVar19 * 2);\n              }\n              if (piVar19 <= piVar9) {\n                piVar19 = piVar9;\n              }\n              if (piVar19 == (int *)0xffffffffffffffff) goto code_r0x00111864;\n              if ((pvVar12 == (void *)0x0) || (pvVar12 == local_400)) {\n                local_3e0 = (int *)((ulong)local_3e0 & 0xffffffffffffff00 |\n                                   (ulong)(pvVar12 == local_400));\n                *(undefined8 *)(puVar18 + -8) = 0x111aae;\n                pvVar7 = malloc((size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x00111864;\n                if ((__n != (int *)0x0) && ((char)local_3e0 != '\\0')) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111ae0;\n                  pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                }\n              }\n              else {\n                *(undefined8 *)(puVar18 + -8) = 0x111105;\n                pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                if (pvVar7 == (void *)0x0) goto code_r0x00111864;\n              }\n            }\n            *(undefined *)((long)pvVar7 + (long)__n) = 0;\n            *(undefined8 *)(puVar18 + -8) = 0x11111b;\n            local_3e0 = __errno_location();\n            local_3e8 = *local_3e0;\n            local_3f8 = &local_3c4;\nLAB_00111144:\n            pvVar12 = pvVar7;\n            puVar15 = local_3f0;\n            piVar9 = local_3f8;\n            local_3c4 = -1;\n            uVar14 = (long)piVar19 - (long)__n;\n            uVar6 = 0x7fffffff;\n            if (uVar14 < 0x80000000) {\n              uVar6 = uVar14;\n            }\n            *local_3e0 = 0;\n            switch((ulong)local_3d0 & 0xffffffff) {\n            default:\n              goto switchD_001111b4_caseD_5;\n            case 1:\n              uVar11 = (ulong)(uint)(int)*(char *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 2:\n              uVar11 = (ulong)*(byte *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 3:\n              uVar11 = (ulong)(uint)(int)*(short *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 4:\n              uVar11 = (ulong)*(ushort *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              break;\n            case 5:\n            case 6:\n            case 0xd:\n            case 0xe:\n              uVar11 = (ulong)(uint)local_3b0[(long)ppvVar20[10] * 8 + 4];\n              break;\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 0xf:\n            case 0x10:\n            case 0x11:\n              piVar9 = *(int **)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(int **)(puVar18 + -0x10) = piVar9;\n                goto LAB_00111598;\n              }\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\nLAB_001111fa:\n                puVar15 = local_3f0;\n                local_420 = uVar6;\n                *(undefined8 *)(puVar18 + -0x18) = 0x11121b;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       piVar9);\n                goto joined_r0x0011122c;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(int **)(puVar18 + -0x18) = piVar9;\n              goto LAB_001115e4;\n            case 0xb:\n              uVar10 = *(undefined8 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 == 1) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n              }\n              else {\n                if (local_3e4 != 2) {\n                  local_420 = uVar6;\n                  *(undefined8 *)(puVar18 + -8) = 0x111554;\n                  iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff\n                                         ,puVar15,piVar9);\n                  goto joined_r0x0011122c;\n                }\n                uVar11 = (ulong)local_3c0[1];\n                *(int **)(puVar18 + -8) = local_3f8;\n                *(ulong *)(puVar18 + -0x10) = uVar11;\n              }\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x111958;\n              iVar5 = __snprintf_chk(uVar10,(long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,\n                                     puVar15,uVar3);\n              goto joined_r0x0011122c;\n            case 0xc:\n              Var2 = *(unkbyte10 *)(local_3b0 + (long)ppvVar20[10] * 8 + 4);\n              if (local_3e4 != 1) {\n                if (local_3e4 != 2) {\n                  *(unkbyte10 *)(puVar18 + -0x10) = Var2;\n                  goto LAB_001111fa;\n                }\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                uVar3 = local_3c0[0];\n                puVar15 = local_3f0;\n                uVar11 = (ulong)local_3c0[1];\n                local_420 = uVar6;\n                *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n                *(ulong *)(puVar18 + -0x30) = uVar11;\n                *(undefined8 *)(puVar18 + -0x38) = 0x1118f1;\n                iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                       uVar3);\n                goto joined_r0x0011122c;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(unkbyte10 *)(puVar18 + -0x20) = Var2;\n              goto LAB_001115eb;\n            }\n            if (local_3e4 == 1) {\n              *(int **)(puVar18 + -8) = local_3f8;\n              *(ulong *)(puVar18 + -0x10) = uVar11;\nLAB_00111598:\n              uVar11 = (ulong)local_3c0[0];\nLAB_001113a2:\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x18) = 0x1113c3;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar11);\n            }\n            else {\n              if (local_3e4 != 2) {\n                *(int **)(puVar18 + -0x10) = local_3f8;\n                goto LAB_001113a2;\n              }\n              *(int **)(puVar18 + -0x10) = local_3f8;\n              *(ulong *)(puVar18 + -0x18) = uVar11;\nLAB_001115e4:\n              *(ulong *)(puVar18 + -0x20) = (ulong)local_3c0[1];\nLAB_001115eb:\n              uVar3 = local_3c0[0];\n              puVar15 = local_3f0;\n              local_420 = uVar6;\n              *(undefined8 *)(puVar18 + -0x28) = 0x111613;\n              iVar5 = __snprintf_chk((long)pvVar12 + (long)__n,uVar6,1,0xffffffffffffffff,puVar15,\n                                     uVar3);\n            }\njoined_r0x0011122c:\n            pvVar7 = pvVar12;\n            if (local_3c4 < 0) {\n              if (*(char *)((long)local_3d8 + 1) == '\\0') {\n                if (-1 < iVar5) goto LAB_0011124c;\n                iVar5 = *local_3e0;\n                if ((iVar5 == 0) && (iVar5 = 0x54, (*(byte *)(ppvVar20 + 9) & 0xef) != 99)) {\n                  iVar5 = 0x16;\n                }\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111433;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111447;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x11145f;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111477;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = iVar5;\n                goto LAB_00111483;\n              }\n              *(undefined *)((long)local_3d8 + 1) = 0;\n              goto LAB_00111144;\n            }\n            if (((ulong)(long)local_3c4 < local_420) &&\n               (*(char *)((long)local_3c4 + (long)pvVar12 + (long)__n) != '\\0')) goto LAB_0010393e;\n            if (local_3c4 < iVar5) {\nLAB_0011124c:\n              local_3c4 = iVar5;\n            }\n            if (local_420 <= local_3c4 + 1) {\n              if (0x7ffffffe < uVar14) {\n                if ((pvVar12 != local_400) && (pvVar12 != (void *)0x0)) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111a46;\n                  free(pvVar12);\n                }\n                puVar15 = local_418;\n                if (local_418 != (undefined *)0x0) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111a5a;\n                  free(puVar15);\n                }\n                if (local_2c0 != local_2a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111a72;\n                  free(local_2c0);\n                }\n                if (local_3b0 != local_3a8) {\n                  *(undefined8 *)(puVar18 + -8) = 0x111a8a;\n                  free(local_3b0);\n                }\n                pvVar7 = (void *)0x0;\n                *local_3e0 = 0x4b;\n                goto LAB_00111483;\n              }\n              iVar5 = local_3c4 + 2;\n              piVar9 = (int *)((long)piVar19 * 2);\n              if ((long)piVar19 < 0) {\n                piVar9 = (int *)0xffffffffffffffff;\n              }\n              *(undefined8 *)(puVar18 + -8) = 0x11128a;\n              uVar10 = FUN_00111cf0(__n,iVar5);\n              *(undefined8 *)(puVar18 + -8) = 0x111295;\n              piVar13 = (int *)FUN_00111d50(uVar10,piVar9);\n              if (piVar19 < piVar13) {\n                if (piVar19 == (int *)0x0) {\n                  piVar9 = (int *)0xc;\n                }\n                piVar19 = piVar13;\n                if (piVar13 <= piVar9) {\n                  piVar19 = piVar9;\n                }\n                if (piVar19 != (int *)0xffffffffffffffff) {\n                  bVar21 = pvVar12 == local_400;\n                  if ((pvVar12 == (void *)0x0) || (bVar21)) {\n                    *(undefined8 *)(puVar18 + -8) = 0x111690;\n                    pvVar7 = malloc((size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) {\n                      if ((__n != (int *)0x0) && (bVar21)) {\n                        *(undefined8 *)(puVar18 + -8) = 0x1116b3;\n                        pvVar7 = memcpy(pvVar7,pvVar12,(size_t)__n);\n                      }\n                      goto LAB_00111144;\n                    }\n                  }\n                  else {\n                    *(undefined8 *)(puVar18 + -8) = 0x1112e0;\n                    pvVar7 = realloc(pvVar12,(size_t)piVar19);\n                    if (pvVar7 != (void *)0x0) goto LAB_00111144;\n                  }\n                }\n                if (pvVar12 == local_400) goto LAB_00111309;\n                goto LAB_001112fc;\n              }\n              goto LAB_00111144;\n            }\n            __n = (int *)((long)local_3c4 + (long)__n);\n            *local_3e0 = local_3e8;\n          }\n        }\n        param_3 = ppvVar20[1];\n        pvVar7 = ppvVar20[0xb];\n        ppvVar20 = ppvVar20 + 0xb;\n        local_408 = local_408 + 1;\n      } while (pvVar7 == param_3);\n    } while( true );\n  }\n  if (uVar6 != 0xffffffffffffffff) {\n    local_3f0 = (undefined *)malloc(uVar6);\n    if (local_3f0 != (undefined *)0x0) {\n      local_418 = local_3f0;\n      puVar18 = auStack_428;\n      goto LAB_00110d11;\n    }\n  }\n  local_3e0 = __errno_location();\n  goto LAB_0011131d;\nLAB_00111cdc:\n  *(undefined8 *)(puVar18 + -8) = 0x111ce1;\n  local_3e0 = __errno_location();\nLAB_00111301:\n  *(undefined8 *)(puVar18 + -8) = 0x111309;\n  free(pvVar12);\nLAB_00111309:\n  puVar15 = local_418;\n  puVar17 = puVar18;\n  if (local_418 != (undefined *)0x0) {\n    *(undefined8 *)(puVar18 + -8) = 0x11131d;\n    free(puVar15);\n  }\nLAB_0011131d:\n  if (local_2c0 != local_2a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x111335;\n    free(local_2c0);\n  }\n  if (local_3b0 != local_3a8) {\n    *(undefined8 *)(puVar17 + -8) = 0x11134d;\n    free(local_3b0);\n  }\n  pvVar7 = (void *)0x0;\n  *local_3e0 = 0xc;\n  puVar18 = puVar17;\nLAB_00111483:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined8 *)(puVar18 + -8) = 0x111cdc;\n    __stack_chk_fail();\n  }\n  return pvVar7;\n}\n\n", 
    "00111f80": "\nundefined8 FUN_00111f80(byte *param_1,ulong *param_2,byte **param_3)\n\n{\n  ulong *puVar1;\n  byte **ppbVar2;\n  byte **ppbVar3;\n  int iVar4;\n  uint uVar5;\n  ulong *__dest;\n  byte *pbVar6;\n  ulong uVar7;\n  int *piVar8;\n  byte *pbVar9;\n  byte **__ptr;\n  ulong uVar10;\n  int iVar11;\n  byte bVar12;\n  byte *pbVar13;\n  byte *pbVar14;\n  byte **__src;\n  long lVar15;\n  byte *pbVar16;\n  byte *pbVar17;\n  ulong *__ptr_00;\n  bool bVar18;\n  ulong local_80;\n  ulong local_78;\n  ulong local_68;\n  byte *local_60;\n  \n  puVar1 = param_2 + 4;\n  ppbVar2 = param_3 + 2;\n  pbVar17 = (byte *)0x7;\n  uVar7 = 0;\n  *param_2 = 0;\n  param_2[1] = (ulong)puVar1;\n  *param_3 = (byte *)0x0;\n  param_3[1] = (byte *)ppbVar2;\n  local_68 = 0;\n  local_78 = 0;\n  local_80 = 7;\n  local_60 = (byte *)0x0;\n  __dest = puVar1;\nLAB_00111ffb:\n  do {\n    pbVar6 = param_1;\n    if (*pbVar6 == 0) {\n      __dest[uVar7 * 0xb] = (ulong)pbVar6;\n      param_2[2] = local_78;\n      param_2[3] = local_68;\n      return 0;\n    }\n    param_1 = pbVar6 + 1;\n  } while (*pbVar6 != 0x25);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  ppbVar3 = (byte **)(__dest + uVar7 * 0xb);\n  *ppbVar3 = pbVar6;\n  *(undefined4 *)(ppbVar3 + 2) = 0;\n  ppbVar3[3] = (byte *)0x0;\n  ppbVar3[4] = (byte *)0x0;\n  ppbVar3[5] = (byte *)0xffffffffffffffff;\n  ppbVar3[6] = (byte *)0x0;\n  ppbVar3[7] = (byte *)0x0;\n  ppbVar3[8] = (byte *)0xffffffffffffffff;\n  ppbVar3[10] = (byte *)0xffffffffffffffff;\n  bVar12 = pbVar6[1];\n  pbVar6 = param_1;\n  if (9 < (byte)(bVar12 - 0x30)) {\nLAB_001120d0:\n    do {\n      pbVar6 = param_1 + 1;\n      if (bVar12 == 0x27) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 1;\n      }\n      else if (bVar12 == 0x2d) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 2;\n      }\n      else if (bVar12 == 0x2b) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 4;\n      }\n      else if (bVar12 == 0x20) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 8;\n      }\n      else if (bVar12 == 0x23) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x10;\n      }\n      else if (bVar12 == 0x30) {\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x20;\n      }\n      else {\n        if (bVar12 != 0x49) goto LAB_00112127;\n        *(uint *)(ppbVar3 + 2) = *(uint *)(ppbVar3 + 2) | 0x40;\n      }\n      bVar12 = *pbVar6;\n      param_1 = pbVar6;\n    } while( true );\n  }\n  do {\n    pbVar14 = pbVar6 + 1;\n    pbVar6 = pbVar6 + 1;\n  } while ((byte)(*pbVar14 - 0x30) < 10);\n  pbVar16 = (byte *)0xffffffffffffffff;\n  if (*pbVar14 != 0x24) goto LAB_001120d0;\n  uVar7 = 0;\n  do {\n    pbVar6 = param_1;\n    lVar15 = -1;\n    if (uVar7 < 0x199999999999999a) {\n      lVar15 = uVar7 * 10;\n    }\n    uVar7 = FUN_00111cf0(lVar15,(long)((char)bVar12 + -0x30));\n    bVar12 = pbVar6[1];\n    param_1 = pbVar6 + 1;\n  } while ((byte)(bVar12 - 0x30) < 10);\n  pbVar16 = (byte *)(uVar7 - 1);\n  if (pbVar16 < (byte *)0xfffffffffffffffe) {\n    bVar12 = pbVar6[2];\n    param_1 = pbVar6 + 2;\n    goto LAB_001120d0;\n  }\n  goto switchD_001121b2_caseD_26;\nLAB_00112127:\n  if (bVar12 != 0x2a) {\n    pbVar9 = param_1;\n    pbVar14 = pbVar6;\n    uVar7 = local_78;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      ppbVar3[3] = param_1;\n      if ((byte)(*param_1 - 0x30) < 10) {\n        do {\n          pbVar14 = pbVar9;\n          pbVar9 = pbVar14 + 1;\n        } while ((byte)(pbVar14[1] - 0x30) < 10);\n        pbVar14 = pbVar14 + 2;\n      }\n      ppbVar3[4] = pbVar9;\n      bVar12 = *pbVar9;\n      uVar7 = (long)pbVar9 - (long)param_1;\n      if ((ulong)((long)pbVar9 - (long)param_1) <= local_78) {\n        uVar7 = local_78;\n      }\n    }\nLAB_0011213b:\n    local_78 = uVar7;\n    param_1 = pbVar9;\n    uVar7 = local_68;\n    if (bVar12 != 0x2e) goto LAB_00112144;\n    bVar12 = pbVar9[1];\n    ppbVar3[6] = pbVar9;\n    if (bVar12 != 0x2a) {\n      if ((byte)(pbVar9[1] - 0x30) < 10) {\n        do {\n          pbVar6 = pbVar14 + 1;\n          pbVar14 = pbVar14 + 1;\n        } while ((byte)(*pbVar6 - 0x30) < 10);\n        uVar7 = (long)pbVar14 - (long)pbVar9;\n        param_1 = pbVar14;\n      }\n      else {\n        uVar7 = 1;\n        param_1 = pbVar14;\n      }\n      ppbVar3[7] = param_1;\n      bVar12 = *param_1;\n      if (uVar7 <= local_68) {\n        uVar7 = local_68;\n      }\n      goto LAB_00112144;\n    }\n    param_1 = pbVar9 + 2;\n    ppbVar3[7] = param_1;\n    uVar7 = 2;\n    if (1 < local_68) {\n      uVar7 = local_68;\n    }\n    bVar12 = pbVar9[2];\n    pbVar6 = param_1;\n    if ((byte)(bVar12 - 0x30) < 10) {\n      do {\n        pbVar14 = pbVar6 + 1;\n        pbVar6 = pbVar6 + 1;\n      } while ((byte)(*pbVar14 - 0x30) < 10);\n      if (*pbVar14 != 0x24) goto LAB_0011231c;\n      uVar10 = 0;\n      do {\n        pbVar6 = param_1;\n        lVar15 = -1;\n        if (uVar10 < 0x199999999999999a) {\n          lVar15 = uVar10 * 10;\n        }\n        uVar10 = FUN_00111cf0(lVar15,(long)((char)bVar12 + -0x30));\n        bVar12 = pbVar6[1];\n        param_1 = pbVar6 + 1;\n      } while ((byte)(bVar12 - 0x30) < 10);\n      pbVar14 = (byte *)(uVar10 - 1);\n      if ((byte *)0xfffffffffffffffd < pbVar14) goto switchD_001121b2_caseD_26;\n      ppbVar3[8] = pbVar14;\n      param_1 = pbVar6 + 2;\n    }\n    else {\nLAB_0011231c:\n      pbVar14 = ppbVar3[8];\n      if (ppbVar3[8] == (byte *)0xffffffffffffffff) {\n        ppbVar3[8] = local_60;\n        bVar18 = local_60 == (byte *)0xffffffffffffffff;\n        pbVar14 = local_60;\n        local_60 = local_60 + 1;\n        if (bVar18) goto switchD_001121b2_caseD_26;\n      }\n    }\n    __src = (byte **)param_3[1];\n    __ptr = __src;\n    if (pbVar14 < pbVar17) {\nLAB_00112337:\n      pbVar6 = *param_3;\n      if (pbVar6 <= pbVar14) {\n        do {\n          pbVar6 = pbVar6 + 1;\n          *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n        } while (pbVar6 <= pbVar14);\n        *param_3 = pbVar6;\n      }\n      iVar11 = *(int *)(__ptr + (long)pbVar14 * 4);\n      if (iVar11 == 0) {\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4) = 5;\n        bVar12 = *param_1;\nLAB_00112144:\n        local_68 = uVar7;\n        uVar5 = 0;\n        do {\n          param_1 = param_1 + 1;\n          if (bVar12 == 0x68) {\n            uVar5 = uVar5 | 1 << ((byte)uVar5 & 1);\n          }\n          else if (bVar12 == 0x4c) {\n            uVar5 = uVar5 | 4;\n          }\n          else {\n            if ((((bVar12 != 0x6c) && (bVar12 != 0x6a)) && ((bVar12 & 0xdf) != 0x5a)) &&\n               (bVar12 != 0x74)) goto code_r0x001121a1;\n            uVar5 = uVar5 + 8;\n          }\n          bVar12 = *param_1;\n        } while( true );\n      }\n      if (iVar11 == 5) {\n        bVar12 = *param_1;\n        goto LAB_00112144;\n      }\n      goto LAB_00112526;\n    }\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar14) {\n      pbVar17 = (byte *)FUN_00111cf0(pbVar14,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0011298a;\nLAB_00112b5a:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_00112a8e:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_00112337;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00112b5a;\n        goto LAB_00112a8e;\n      }\n      goto LAB_00112b8f;\n    }\n    goto LAB_00112b93;\n  }\n  ppbVar3[3] = param_1;\n  ppbVar3[4] = pbVar6;\n  bVar12 = param_1[1];\n  uVar7 = 1;\n  if (local_78 != 0) {\n    uVar7 = local_78;\n  }\n  pbVar14 = pbVar6;\n  if ((byte)(bVar12 - 0x30) < 10) {\n    do {\n      pbVar9 = pbVar14 + 1;\n      pbVar14 = pbVar14 + 1;\n    } while ((byte)(*pbVar9 - 0x30) < 10);\n    if (*pbVar9 != 0x24) goto LAB_001123ae;\n    uVar10 = 0;\n    do {\n      pbVar14 = pbVar6;\n      lVar15 = -1;\n      if (uVar10 < 0x199999999999999a) {\n        lVar15 = uVar10 * 10;\n      }\n      uVar10 = FUN_00111cf0(lVar15,(long)((char)bVar12 + -0x30));\n      bVar12 = pbVar14[1];\n      pbVar6 = pbVar14 + 1;\n    } while ((byte)(bVar12 - 0x30) < 10);\n    pbVar13 = (byte *)(uVar10 - 1);\n    if ((byte *)0xfffffffffffffffd < pbVar13) goto switchD_001121b2_caseD_26;\n    ppbVar3[5] = pbVar13;\n    pbVar6 = pbVar14 + 2;\n  }\n  else {\nLAB_001123ae:\n    ppbVar3[5] = local_60;\n    bVar18 = local_60 == (byte *)0xffffffffffffffff;\n    pbVar13 = local_60;\n    local_60 = local_60 + 1;\n    if (bVar18) goto switchD_001121b2_caseD_26;\n  }\n  __ptr = (byte **)param_3[1];\n  if (pbVar13 < pbVar17) {\n    pbVar14 = *param_3;\nLAB_0011244e:\n    if (pbVar14 <= pbVar13) {\n      do {\n        pbVar14 = pbVar14 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar14 * 4 + -4) = 0;\n      } while (pbVar14 <= pbVar13);\n      *param_3 = pbVar14;\n    }\n    iVar11 = *(int *)(__ptr + (long)pbVar13 * 4);\n    pbVar9 = pbVar6;\n    if (iVar11 == 0) {\n      *(undefined4 *)(__ptr + (long)pbVar13 * 4) = 5;\n      pbVar14 = pbVar6 + 1;\n      bVar12 = *pbVar6;\n    }\n    else {\n      if (iVar11 != 5) goto LAB_00112526;\n      bVar12 = *pbVar6;\n      pbVar14 = pbVar6 + 1;\n    }\n    goto LAB_0011213b;\n  }\n  pbVar17 = (byte *)((long)pbVar17 * 2);\n  if (pbVar17 <= pbVar13) {\n    pbVar17 = (byte *)FUN_00111cf0(pbVar13,1);\n  }\n  __src = __ptr;\n  if ((byte *)0x7ffffffffffffff < pbVar17) goto LAB_00112b93;\n  if (ppbVar2 != __ptr) {\n    __ptr = (byte **)realloc(__ptr,(long)pbVar17 << 5);\n    __src = (byte **)param_3[1];\n    if (__ptr != (byte **)0x0) {\n      pbVar14 = *param_3;\n      if (ppbVar2 == __src) goto LAB_001129d1;\n      goto LAB_0011244a;\n    }\n    goto LAB_00112b93;\n  }\n  __ptr = (byte **)malloc((long)pbVar17 << 5);\n  if (__ptr != (byte **)0x0) {\n    pbVar14 = *param_3;\n    __src = ppbVar2;\nLAB_001129d1:\n    memcpy(__ptr,__src,(long)pbVar14 << 5);\n    pbVar14 = *param_3;\nLAB_0011244a:\n    param_3[1] = (byte *)__ptr;\n    goto LAB_0011244e;\n  }\n  goto LAB_0011298a;\ncode_r0x001121a1:\n  switch(bVar12) {\n  case 0x25:\n    goto switchD_001121b2_caseD_25;\n  default:\n    goto switchD_001121b2_caseD_26;\n  case 0x41:\n  case 0x45:\n  case 0x46:\n  case 0x47:\n  case 0x61:\n  case 0x65:\n  case 0x66:\n  case 0x67:\n    iVar11 = 0xc;\n    if ((int)uVar5 < 0x10) {\n      iVar11 = ((uVar5 & 4) != 0) + 0xb;\n    }\n    break;\n  case 0x43:\n    iVar11 = 0xe;\n    bVar12 = 99;\n    break;\n  case 0x53:\n    iVar11 = 0x10;\n    bVar12 = 0x73;\n    break;\n  case 0x58:\n  case 0x6f:\n  case 0x75:\n  case 0x78:\n    iVar11 = 10;\n    if (((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) && (iVar11 = 8, (int)uVar5 < 8)) &&\n       (iVar11 = 2, (uVar5 & 2) == 0)) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 4;\n    }\n    break;\n  case 99:\n    iVar11 = (7 < (int)uVar5) + 0xd;\n    break;\n  case 100:\n  case 0x69:\n    iVar11 = 9;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 7, (int)uVar5 < 8 && (iVar11 = 1, (uVar5 & 2) == 0)))) {\n      iVar11 = (-(uint)((uVar5 & 1) == 0) & 2) + 3;\n    }\n    break;\n  case 0x6e:\n    iVar11 = 0x16;\n    if ((((int)uVar5 < 0x10) && ((uVar5 & 4) == 0)) &&\n       ((iVar11 = 0x15, (int)uVar5 < 8 && (iVar11 = 0x12, (uVar5 & 2) == 0)))) {\n      iVar11 = 0x14 - (uVar5 & 1);\n    }\n    break;\n  case 0x70:\n    iVar11 = 0x11;\n    break;\n  case 0x73:\n    iVar11 = (7 < (int)uVar5) + 0xf;\n  }\n  if (pbVar16 == (byte *)0xffffffffffffffff) {\n    ppbVar3[10] = local_60;\n    if (local_60 == (byte *)0xffffffffffffffff) {\nswitchD_001121b2_caseD_26:\n      __ptr = (byte **)param_3[1];\n      goto LAB_00112526;\n    }\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60 + 1;\n    pbVar16 = local_60;\n  }\n  else {\n    ppbVar3[10] = pbVar16;\n    __src = (byte **)param_3[1];\n    pbVar6 = local_60;\n  }\n  local_60 = pbVar6;\n  __ptr = __src;\n  if (pbVar16 < pbVar17) {\nLAB_001121fb:\n    pbVar6 = *param_3;\n    if (pbVar6 <= pbVar16) {\n      do {\n        pbVar6 = pbVar6 + 1;\n        *(undefined4 *)(__ptr + (long)pbVar6 * 4 + -4) = 0;\n      } while (pbVar6 <= pbVar16);\n      *param_3 = pbVar6;\n    }\n    iVar4 = *(int *)(__ptr + (long)pbVar16 * 4);\n    if (iVar4 == 0) {\n      *(int *)(__ptr + (long)pbVar16 * 4) = iVar11;\n    }\n    else if (iVar4 != iVar11) {\nLAB_00112526:\n      if (ppbVar2 != __ptr) {\n        free(__ptr);\n      }\n      if (puVar1 != (ulong *)param_2[1]) {\n        free((ulong *)param_2[1]);\n      }\n      piVar8 = __errno_location();\n      *piVar8 = 0x16;\n      return 0xffffffff;\n    }\nswitchD_001121b2_caseD_25:\n    *(byte *)(ppbVar3 + 9) = bVar12;\n    uVar7 = *param_2;\n    ppbVar3[1] = param_1;\n    uVar7 = uVar7 + 1;\n    *param_2 = uVar7;\n    if (uVar7 < local_80) {\n      __dest = (ulong *)param_2[1];\n      goto LAB_00111ffb;\n    }\n    if (((long)local_80 < 0) || (0x2e8ba2e8ba2e8ba < local_80 * 2)) {\nLAB_00112b8f:\n      __src = (byte **)param_3[1];\n      goto LAB_00112b93;\n    }\n    __ptr_00 = (ulong *)param_2[1];\n    if (puVar1 != __ptr_00) {\n      __dest = (ulong *)realloc(__ptr_00,local_80 * 0xb0);\n      if (__dest != (ulong *)0x0) {\n        __ptr_00 = (ulong *)param_2[1];\n        uVar7 = *param_2;\n        if (puVar1 != __ptr_00) goto LAB_001122c8;\n        goto LAB_0011285a;\n      }\n      goto LAB_00112b8f;\n    }\n    __dest = (ulong *)malloc(local_80 * 0xb0);\n    if (__dest != (ulong *)0x0) {\nLAB_0011285a:\n      __dest = (ulong *)memcpy(__dest,__ptr_00,uVar7 * 0x58);\n      uVar7 = *param_2;\nLAB_001122c8:\n      param_2[1] = (ulong)__dest;\n      local_80 = local_80 * 2;\n      goto LAB_00111ffb;\n    }\n    __src = (byte **)param_3[1];\n    if (ppbVar2 == __src) goto LAB_0011299a;\n  }\n  else {\n    pbVar17 = (byte *)((long)pbVar17 * 2);\n    if (pbVar17 <= pbVar16) {\n      pbVar17 = (byte *)FUN_00111cf0(pbVar16,1);\n    }\n    if (pbVar17 < (byte *)0x800000000000000) {\n      if (ppbVar2 == __src) {\n        __ptr = (byte **)malloc((long)pbVar17 << 5);\n        if (__ptr == (byte **)0x0) goto LAB_0011298a;\nLAB_00112811:\n        __ptr = (byte **)memcpy(__ptr,__src,(long)*param_3 << 5);\nLAB_001127c8:\n        param_3[1] = (byte *)__ptr;\n        goto LAB_001121fb;\n      }\n      __ptr = (byte **)realloc(__src,(long)pbVar17 << 5);\n      if (__ptr != (byte **)0x0) {\n        __src = ppbVar2;\n        if (ppbVar2 == (byte **)param_3[1]) goto LAB_00112811;\n        goto LAB_001127c8;\n      }\n      goto LAB_00112b8f;\n    }\nLAB_00112b93:\n    if (ppbVar2 == __src) goto LAB_0011298a;\n  }\n  free(__src);\nLAB_0011298a:\n  if (puVar1 != (ulong *)param_2[1]) {\n    free((ulong *)param_2[1]);\n  }\nLAB_0011299a:\n  piVar8 = __errno_location();\n  *piVar8 = 0xc;\n  return 0xffffffff;\n}\n\n", 
    "0011d050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107770": "\nundefined8 FUN_00107770(void)\n\n{\n  return 0;\n}\n\n", 
    "00108980": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nundefined8 FUN_00108980(long param_1)\n\n{\n  undefined (*pauVar1) [16];\n  undefined uVar2;\n  int iVar3;\n  int iVar4;\n  char cVar5;\n  int iVar6;\n  int iVar7;\n  long lVar8;\n  long lVar9;\n  undefined8 uVar10;\n  uint uVar11;\n  long lVar12;\n  char *pcVar13;\n  int iVar14;\n  long lVar15;\n  uint uVar16;\n  int iVar17;\n  char *pcVar18;\n  long lVar19;\n  long lVar20;\n  long *plVar21;\n  long *plVar22;\n  long in_FS_OFFSET;\n  bool bVar23;\n  ulong uStack_590;\n  long local_588;\n  long local_580;\n  long local_578;\n  long local_570;\n  uint local_568;\n  int local_564;\n  int local_538;\n  int iStack_534;\n  int iStack_530;\n  int iStack_52c;\n  int local_528;\n  int iStack_524;\n  int iStack_520;\n  int iStack_51c;\n  int local_518;\n  int iStack_514;\n  int iStack_510;\n  int iStack_50c;\n  long local_508;\n  undefined local_4f8 [8];\n  int iStack_4f0;\n  undefined4 uStack_4ec;\n  undefined local_4e8 [8];\n  int iStack_4e0;\n  undefined4 uStack_4dc;\n  undefined local_4d8 [8];\n  int iStack_4d0;\n  undefined4 uStack_4cc;\n  ulong local_4c8;\n  long local_4b8 [140];\n  char local_58 [19];\n  char local_45 [5];\n  long local_40;\n  \n  iVar14 = 0;\n  uVar16 = 0x26;\n  iVar17 = -2;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_58[0] = '\\0';\n  local_564 = 0;\n  plVar21 = local_4b8;\n  pcVar13 = local_58;\nLAB_001089ec:\n  if (uVar16 != 0xffffffa3) {\n    if (iVar17 == -2) {\n      iVar17 = FUN_00107780(&local_538,param_1);\n    }\n    if (iVar17 < 1) {\n      iVar6 = 0;\n      iVar17 = 0;\n      uVar11 = uVar16;\n    }\n    else if (iVar17 < 0x116) {\n      iVar6 = (int)(char)(&DAT_00115d80)[iVar17];\n      uVar11 = uVar16 + iVar6;\n    }\n    else {\n      iVar6 = 2;\n      uVar11 = uVar16 + 2;\n    }\n    if ((0x70 < uVar11) || ((char)(&DAT_00115b40)[(int)uVar11] != iVar6)) goto LAB_00108aa0;\n    cVar5 = (&DAT_00115bc0)[(int)uVar11];\n    iVar14 = (int)cVar5;\n    if (cVar5 < '\\x01') {\n      iVar14 = -iVar14;\n      goto LAB_00108b6a;\n    }\n    iVar17 = -2;\n    *(int *)(plVar21 + 7) = local_538;\n    *(int *)((long)plVar21 + 0x3c) = iStack_534;\n    *(int *)(plVar21 + 8) = iStack_530;\n    *(int *)((long)plVar21 + 0x44) = iStack_52c;\n    local_564 = local_564 + -1 + (uint)(local_564 == 0);\n    plVar21[0xd] = local_508;\n    plVar22 = plVar21 + 7;\n    plVar21[9] = CONCAT44(iStack_524,local_528);\n    plVar21[10] = CONCAT44(iStack_51c,iStack_520);\n    *(int *)(plVar21 + 0xb) = local_518;\n    *(int *)((long)plVar21 + 0x5c) = iStack_514;\n    *(int *)(plVar21 + 0xc) = iStack_510;\n    *(int *)((long)plVar21 + 100) = iStack_50c;\n    goto LAB_00108d80;\n  }\nLAB_00108aa0:\n  iVar14 = (int)(char)(&DAT_00115c80)[iVar14];\n  if (iVar14 == 0) {\n    if (local_564 != 3) {\nLAB_00108afb:\n      do {\n        if (((uVar16 != 0xffffffa3) && (uVar16 = uVar16 + 1, uVar16 < 0x71)) &&\n           ((&DAT_00115b40)[(int)uVar16] == '\\x01')) {\n          cVar5 = (&DAT_00115bc0)[(int)uVar16];\n          iVar14 = (int)cVar5;\n          if ('\\0' < cVar5) goto code_r0x00108b1b;\n        }\n        if (pcVar13 == local_58) goto LAB_00108e08;\n        pcVar18 = pcVar13 + -1;\n        pcVar13 = pcVar13 + -1;\n        plVar21 = plVar21 + -7;\n        uVar16 = (uint)(char)(&DAT_00115d00)[*pcVar18];\n      } while( true );\n    }\n    if (0 < iVar17) {\n      iVar17 = -2;\n      goto LAB_00108afb;\n    }\n    if (iVar17 != 0) goto LAB_00108afb;\n    goto LAB_00108e08;\n  }\nLAB_00108b6a:\n  lVar12 = (long)(char)(&DAT_00115a80)[iVar14];\n  pauVar1 = (undefined (*) [16])(plVar21 + (long)(1 - (char)(&DAT_00115a80)[iVar14]) * 7);\n  uStack_590 = *(ulong *)*pauVar1;\n  local_570 = *(long *)((long)pauVar1[1] + 8);\n  local_4c8 = *(ulong *)pauVar1[3];\n  local_588 = *(long *)pauVar1[1];\n  lVar20 = *(long *)((long)*pauVar1 + 8);\n  local_580 = *(long *)((long)pauVar1[2] + 8);\n  local_578 = *(long *)pauVar1[2];\n  local_568 = *(uint *)pauVar1[3];\n  _local_4f8 = *pauVar1;\n  _local_4e8 = pauVar1[1];\n  _local_4d8 = pauVar1[2];\n  switch(iVar14) {\n  case 4:\n    iVar6 = *(int *)plVar21;\n    iVar7 = *(int *)((long)plVar21 + 4);\n    iVar3 = *(int *)(plVar21 + 1);\n    iVar4 = *(int *)((long)plVar21 + 0xc);\n    pcVar18 = \"number of seconds\";\n    *(undefined *)(param_1 + 0xa0) = 1;\n    *(int *)(param_1 + 0x58) = iVar6;\n    *(int *)(param_1 + 0x5c) = iVar7;\n    *(int *)(param_1 + 0x60) = iVar3;\n    *(int *)(param_1 + 100) = iVar4;\n    goto LAB_00109373;\n  case 7:\n    pcVar18 = \"datetime\";\n    *(long *)(param_1 + 200) = *(long *)(param_1 + 200) + 1;\n    *(long *)(param_1 + 0xa8) = *(long *)(param_1 + 0xa8) + 1;\n    goto LAB_00109373;\n  case 8:\n    pcVar18 = \"time\";\n    *(long *)(param_1 + 200) = *(long *)(param_1 + 200) + 1;\n    goto LAB_00109373;\n  case 9:\n    pcVar18 = \"local_zone\";\n    *(long *)(param_1 + 0xb8) = *(long *)(param_1 + 0xb8) + 1;\n    goto LAB_00109373;\n  case 10:\n    pcVar18 = \"zone\";\n    *(long *)(param_1 + 0xd0) = *(long *)(param_1 + 0xd0) + 1;\n    goto LAB_00109373;\n  case 0xb:\n    pcVar18 = \"date\";\n    *(long *)(param_1 + 0xa8) = *(long *)(param_1 + 0xa8) + 1;\n    goto LAB_00109373;\n  case 0xc:\n    pcVar18 = \"day\";\n    *(long *)(param_1 + 0xb0) = *(long *)(param_1 + 0xb0) + 1;\n    goto LAB_00109373;\n  case 0xd:\n    pcVar18 = \"relative\";\n    goto LAB_001097b8;\n  case 0xe:\n    pcVar18 = \"number\";\nLAB_00109373:\n    uVar10 = dcgettext(0,pcVar18,5);\n    FUN_00108590(uVar10,param_1);\n    break;\n  case 0xf:\n    pcVar18 = \"hybrid\";\nLAB_001097b8:\n    uVar10 = dcgettext(0,pcVar18,5);\n    FUN_00107450(uVar10,param_1);\n    break;\n  case 0x12:\n    lVar9 = plVar21[-6];\n    iVar6 = 0;\n    lVar8 = 0;\n    lVar15 = 0;\n    goto LAB_0010974c;\n  case 0x13:\n    lVar15 = plVar21[-6];\n    iVar6 = 0;\n    lVar8 = 0;\n    lVar9 = plVar21[-0x14];\n    goto LAB_0010974c;\n  case 0x14:\n    lVar8 = plVar21[-7];\n    lVar15 = plVar21[-0x14];\n    lVar9 = plVar21[-0x22];\n    iVar6 = *(int *)(plVar21 + -6);\nLAB_0010974c:\n    lVar19 = param_1;\n    FUN_00106d60(param_1,lVar9,lVar15,lVar8,iVar6);\n    *(int *)(lVar19 + 0x1c) = (int)*plVar21;\n    break;\n  case 0x16:\n    lVar9 = plVar21[-6];\n    iVar6 = 0;\n    lVar8 = 0;\n    lVar15 = 0;\n    goto LAB_0010921f;\n  case 0x17:\n    lVar15 = plVar21[-6];\n    iVar6 = 0;\n    lVar8 = 0;\n    lVar9 = plVar21[-0x14];\n    goto LAB_0010921f;\n  case 0x18:\n    lVar8 = plVar21[-7];\n    lVar15 = plVar21[-0x14];\n    lVar9 = plVar21[-0x22];\n    iVar6 = *(int *)(plVar21 + -6);\nLAB_0010921f:\n    lVar8 = FUN_00106d60(param_1,lVar9,lVar15,lVar8,iVar6);\n    *(undefined4 *)(lVar8 + 0x1c) = 2;\n    break;\n  case 0x1b:\n    lVar8 = plVar21[-5];\n    lVar15 = plVar21[-6];\n    uVar2 = *(undefined *)(plVar21 + -7);\n    *(long *)(param_1 + 0xd0) = *(long *)(param_1 + 0xd0) + 1;\n    cVar5 = FUN_00107d80(param_1 + 0x18,uVar2,lVar15,lVar8,*plVar21);\n    goto joined_r0x00108dfb;\n  case 0x1c:\n    *(int *)(param_1 + 0x14) = (int)*plVar21;\n    break;\n  case 0x1d:\n    *(long *)(param_1 + 0xc0) = *(long *)(param_1 + 0xc0) + 1;\n    *(undefined4 *)(param_1 + 0x14) = 1;\n    break;\n  case 0x1e:\n    *(int *)(param_1 + 0x18) = (int)*plVar21;\n    break;\n  case 0x1f:\n    *(undefined4 *)(param_1 + 0x18) = 0x6270;\n    break;\n  case 0x20:\n    *(int *)(param_1 + 0x18) = (int)plVar21[-7];\n    goto LAB_00109956;\n  case 0x21:\n    *(undefined4 *)(param_1 + 0x18) = 0x6270;\nLAB_00109956:\n    cVar5 = FUN_00107c20(param_1,*plVar21,plVar21[1],plVar21[2],plVar21[3],plVar21[4],plVar21[5],\n                         *(int *)(plVar21 + 6),1);\n    if (cVar5 != '\\0') {\n      pcVar18 = \"relative\";\n      goto LAB_001097b8;\n    }\n    goto LAB_00108e08;\n  case 0x22:\n    lVar8 = param_1;\n    cVar5 = FUN_00107d80(param_1 + 0x18,*(undefined *)(plVar21 + -7),plVar21[-6],plVar21[-5],\n                         *plVar21);\n    if ((cVar5 == '\\0') ||\n       (iVar6 = *(int *)(lVar8 + 0x18), lVar15 = plVar21[-0xe], lVar9 = (long)iVar6 + plVar21[-0xe],\n       iVar7 = (int)lVar9, *(int *)(lVar8 + 0x18) = iVar7,\n       lVar9 != iVar7 || SCARRY8((long)iVar6,lVar15))) goto LAB_00108e08;\n    break;\n  case 0x23:\n    *(int *)(param_1 + 0x18) = *(int *)plVar21 + 0xe10;\n    break;\n  case 0x24:\n    *(int *)(param_1 + 0x18) = *(int *)(plVar21 + -7) + 0xe10;\n    break;\n  case 0x25:\n    lVar8 = *plVar21;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(int *)(param_1 + 0x10) = (int)lVar8;\n    break;\n  case 0x26:\n    lVar8 = plVar21[-7];\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(int *)(param_1 + 0x10) = (int)lVar8;\n    break;\n  case 0x27:\n    *(long *)(param_1 + 8) = plVar21[-7];\n    lVar8 = *plVar21;\n    *(undefined *)(param_1 + 0xe0) = 1;\n    *(int *)(param_1 + 0x10) = (int)lVar8;\n    break;\n  case 0x28:\n    *(long *)(param_1 + 8) = plVar21[-6];\n    lVar8 = *plVar21;\n    *(undefined *)(param_1 + 0xe0) = 1;\n    *(int *)(param_1 + 0x10) = (int)lVar8;\n    break;\n  case 0x29:\n    *(long *)(param_1 + 0x38) = plVar21[-0xd];\n    *(long *)(param_1 + 0x40) = plVar21[1];\n    break;\n  case 0x2a:\n    lVar8 = plVar21[-0x1a];\n    if (lVar8 < 4) {\n      lVar8 = plVar21[-0x1b];\n      if (*(char *)(param_1 + 0xd9) != '\\0') {\n        uVar10 = dcgettext(0,\"warning: value %ld has less than 4 digits. Assuming MM/DD/YY[YY]\\n\",5)\n        ;\n        FUN_00107360(uVar10,lVar8);\n      }\n      iVar6 = *(int *)plVar21;\n      iVar7 = *(int *)((long)plVar21 + 4);\n      iVar3 = *(int *)(plVar21 + 1);\n      iVar4 = *(int *)((long)plVar21 + 0xc);\n      *(long *)(param_1 + 0x38) = lVar8;\n      lVar8 = plVar21[-0xd];\n      *(int *)(param_1 + 0x20) = iVar6;\n      *(int *)(param_1 + 0x24) = iVar7;\n      *(int *)(param_1 + 0x28) = iVar3;\n      *(int *)(param_1 + 0x2c) = iVar4;\n      *(long *)(param_1 + 0x40) = lVar8;\n      *(long *)(param_1 + 0x30) = plVar21[2];\n    }\n    else {\n      if (*(char *)(param_1 + 0xd9) != '\\0') {\n        lVar15 = plVar21[-0x1b];\n        uVar10 = dcgettext(0,\"warning: value %ld has %ld digits. Assuming YYYY/MM/DD\\n\",5);\n        FUN_00107360(uVar10,lVar15,lVar8);\n      }\n      lVar15 = plVar21[-0x1c];\n      lVar9 = plVar21[-0x1b];\n      *(long *)(param_1 + 0x30) = plVar21[-0x1a];\n      lVar8 = plVar21[-0xd];\n      *(long *)(param_1 + 0x20) = lVar15;\n      *(long *)(param_1 + 0x28) = lVar9;\n      *(long *)(param_1 + 0x38) = lVar8;\n      *(long *)(param_1 + 0x40) = plVar21[1];\n    }\n    break;\n  case 0x2b:\n    *(long *)(param_1 + 0x40) = plVar21[-0xd];\n    *(long *)(param_1 + 0x38) = plVar21[-7];\n    lVar8 = plVar21[1];\n    *(long *)(param_1 + 0x28) = -lVar8;\n    goto joined_r0x00109158;\n  case 0x2c:\n    *(long *)(param_1 + 0x38) = plVar21[-0xe];\n    lVar8 = plVar21[-6];\n    *(long *)(param_1 + 0x40) = -lVar8;\n    if (lVar8 == -0x8000000000000000) goto LAB_00108e08;\n    lVar8 = plVar21[1];\n    *(long *)(param_1 + 0x28) = -lVar8;\njoined_r0x00109158:\n    if (lVar8 != -0x8000000000000000) {\nLAB_0010915e:\n      *(long *)(param_1 + 0x30) = plVar21[2];\n      break;\n    }\n    goto LAB_00108e08;\n  case 0x2d:\n    *(long *)(param_1 + 0x38) = plVar21[-7];\n    *(long *)(param_1 + 0x40) = plVar21[1];\n    break;\n  case 0x2e:\n    lVar15 = *plVar21;\n    lVar9 = plVar21[1];\n    *(long *)(param_1 + 0x38) = plVar21[-0x15];\n    lVar8 = plVar21[-0xd];\n    *(long *)(param_1 + 0x20) = lVar15;\n    *(long *)(param_1 + 0x28) = lVar9;\n    *(long *)(param_1 + 0x40) = lVar8;\n    goto LAB_0010915e;\n  case 0x2f:\n    *(long *)(param_1 + 0x40) = plVar21[-6];\n    *(long *)(param_1 + 0x38) = *plVar21;\n    break;\n  case 0x30:\n    iVar6 = *(int *)plVar21;\n    iVar7 = *(int *)((long)plVar21 + 4);\n    iVar3 = *(int *)(plVar21 + 1);\n    iVar4 = *(int *)((long)plVar21 + 0xc);\n    *(long *)(param_1 + 0x40) = plVar21[-0xd];\n    lVar8 = plVar21[-7];\n    *(int *)(param_1 + 0x20) = iVar6;\n    *(int *)(param_1 + 0x24) = iVar7;\n    *(int *)(param_1 + 0x28) = iVar3;\n    *(int *)(param_1 + 0x2c) = iVar4;\n    *(long *)(param_1 + 0x38) = lVar8;\n    *(long *)(param_1 + 0x30) = plVar21[2];\n    break;\n  case 0x32:\n    lVar15 = plVar21[-0xe];\n    lVar9 = plVar21[-0xd];\n    *(long *)(param_1 + 0x30) = plVar21[-0xc];\n    lVar8 = plVar21[-6];\n    *(long *)(param_1 + 0x20) = lVar15;\n    *(long *)(param_1 + 0x28) = lVar9;\n    *(long *)(param_1 + 0x38) = -lVar8;\n    if ((lVar8 == -0x8000000000000000) ||\n       (lVar8 = plVar21[1], *(long *)(param_1 + 0x40) = -lVar8, lVar8 == -0x8000000000000000))\n    goto LAB_00108e08;\n    break;\n  case 0x33:\n    goto LAB_00108de6;\n  case 0x34:\n  case 0x35:\n    goto LAB_00108de6;\n  case 0x36:\n    uStack_590 = plVar21[-7];\n    goto LAB_00108f18;\n  case 0x37:\n  case 0x4b:\n    uStack_590 = plVar21[-6];\nLAB_00108f18:\n    local_4c8 = 0;\n    lVar20 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 0;\n    local_570 = 0;\n    local_588 = 0;\n    break;\n  case 0x38:\n    local_4c8 = local_4c8 & 0xffffffff;\n    lVar20 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 0;\n    local_570 = 0;\n    local_588 = 0;\n    uStack_590 = 1;\n    break;\n  case 0x39:\n    lVar20 = plVar21[-7];\n    goto LAB_00108ece;\n  case 0x3a:\n  case 0x4c:\n    lVar20 = plVar21[-6];\nLAB_00108ece:\n    local_4c8 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 0;\n    local_570 = 0;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x3b:\n    local_568 = 0;\n    lVar20 = 1;\n    local_4c8 = local_4c8 & 0xffffffff;\n    local_580 = 0;\n    local_578 = 0;\n    local_570 = 0;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x3c:\n    lVar20 = plVar21[-7];\n    local_4c8 = 0;\n    _local_4f8 = (undefined  [16])0x0;\n    _local_4e8 = (undefined  [16])0x0;\n    _local_4d8 = (undefined  [16])0x0;\n    goto LAB_00108c47;\n  case 0x3d:\n  case 0x4d:\n    local_4c8 = 0;\n    lVar20 = plVar21[-6];\n    _local_4f8 = (undefined  [16])0x0;\n    _local_4e8 = (undefined  [16])0x0;\n    _local_4d8 = (undefined  [16])0x0;\nLAB_00108c47:\n    local_4c8 = 0;\n    _local_4d8 = (undefined  [16])0x0;\n    _local_4e8 = (undefined  [16])0x0;\n    _local_4f8 = (undefined  [16])0x0;\n    local_588 = lVar20 * *plVar21;\n    bVar23 = SEXT816(local_588) != SEXT816(lVar20) * SEXT816(*plVar21);\n    uStack_590 = (ulong)bVar23;\n    if (!bVar23) {\n      local_580 = 0;\n      lVar20 = 0;\n      local_578 = 0;\n      local_570 = 0;\n      local_568 = 0;\n      break;\n    }\n    goto LAB_00108e08;\n  case 0x3e:\n  case 0x51:\n    local_588 = *plVar21;\n    lVar20 = 0;\n    local_4c8 = local_4c8 & 0xffffffff;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 0;\n    local_570 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x3f:\n    local_570 = plVar21[-7];\n    goto LAB_00108fab;\n  case 0x40:\n  case 0x4e:\n    local_570 = plVar21[-6];\nLAB_00108fab:\n    local_4c8 = 0;\n    lVar20 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 0;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x41:\n    local_4c8 = local_4c8 & 0xffffffff;\n    lVar20 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 0;\n    local_570 = 1;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x42:\n    local_578 = plVar21[-7];\n    goto LAB_0010903c;\n  case 0x43:\n  case 0x4f:\n    local_578 = plVar21[-6];\nLAB_0010903c:\n    local_4c8 = 0;\n    lVar20 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_570 = 0;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x44:\n    local_4c8 = local_4c8 & 0xffffffff;\n    lVar20 = 0;\n    local_568 = 0;\n    local_580 = 0;\n    local_578 = 1;\n    local_570 = 0;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x45:\n    local_4c8 = local_4c8 & 0xffffffff;\n    local_580 = plVar21[-7];\n    goto LAB_001090ae;\n  case 0x46:\n  case 0x50:\n    local_4c8 = local_4c8 & 0xffffffff;\n    local_580 = plVar21[-6];\nLAB_001090ae:\n    local_568 = 0;\n    goto LAB_00108f6f;\n  case 0x47:\n  case 0x48:\n    local_4c8 = local_4c8 & 0xffffffff;\n    local_580 = plVar21[-7];\n    local_568 = *(uint *)(plVar21 + -6);\n    goto LAB_00108f6f;\n  case 0x49:\n    local_4c8 = local_4c8 & 0xffffffff;\n    local_568 = 0;\n    local_580 = 1;\nLAB_00108f6f:\n    local_4c8 = 0;\n    local_578 = 0;\n    lVar20 = 0;\n    local_570 = 0;\n    local_588 = 0;\n    uStack_590 = 0;\n    break;\n  case 0x55:\n  case 0x57:\n    uStack_590 = plVar21[1];\n    cVar5 = FUN_00107770();\n    if (cVar5 != '\\0') goto LAB_00108e08;\n    lVar20 = 0;\n    break;\n  case 0x58:\n    FUN_00106be0(param_1);\n    break;\n  case 0x59:\n    FUN_00106be0(param_1);\nLAB_00108de6:\n    cVar5 = FUN_00107c20();\njoined_r0x00108dfb:\n    if (cVar5 == '\\0') {\nLAB_00108e08:\n      uVar10 = 1;\n      goto LAB_00108e0d;\n    }\n    break;\n  case 0x5a:\n    uStack_590 = 0xffffffffffffffff;\n    break;\n  case 0x5b:\n    uStack_590 = plVar21[1];\n  }\n  pcVar13 = pcVar13 + -lVar12;\n  _local_4f8 = CONCAT88(lVar20,uStack_590);\n  _local_4e8 = CONCAT88(local_570,local_588);\n  plVar22 = plVar21 + lVar12 * -7 + 7;\n  _local_4d8 = CONCAT88(local_580,local_578);\n  cVar5 = *pcVar13;\n  local_4f8._0_4_ = (int)uStack_590;\n  local_4f8._4_4_ = (undefined4)(uStack_590 >> 0x20);\n  iStack_4f0 = (int)lVar20;\n  uStack_4ec = (undefined4)((ulong)lVar20 >> 0x20);\n  local_4c8 = local_4c8 & 0xffffffff00000000 | (ulong)local_568;\n  local_4e8._0_4_ = (int)local_588;\n  local_4e8._4_4_ = (undefined4)((ulong)local_588 >> 0x20);\n  iStack_4e0 = (int)local_570;\n  uStack_4dc = (undefined4)((ulong)local_570 >> 0x20);\n  local_4d8._0_4_ = (int)local_578;\n  local_4d8._4_4_ = (undefined4)((ulong)local_578 >> 0x20);\n  iStack_4d0 = (int)local_580;\n  uStack_4cc = (undefined4)((ulong)local_580 >> 0x20);\n  *(int *)(plVar21 + lVar12 * -7 + 7) = local_4f8._0_4_;\n  *(undefined4 *)((long)plVar21 + lVar12 * -0x38 + 0x3c) = local_4f8._4_4_;\n  *(int *)(plVar21 + lVar12 * -7 + 8) = iStack_4f0;\n  *(undefined4 *)((long)plVar21 + lVar12 * -0x38 + 0x44) = uStack_4ec;\n  plVar21[lVar12 * -7 + 0xd] = local_4c8;\n  *(int *)(plVar21 + lVar12 * -7 + 9) = local_4e8._0_4_;\n  *(undefined4 *)((long)plVar21 + lVar12 * -0x38 + 0x4c) = local_4e8._4_4_;\n  *(int *)(plVar21 + lVar12 * -7 + 10) = iStack_4e0;\n  *(undefined4 *)((long)plVar21 + lVar12 * -0x38 + 0x54) = uStack_4dc;\n  *(int *)(plVar21 + lVar12 * -7 + 0xb) = local_4d8._0_4_;\n  *(undefined4 *)((long)plVar21 + lVar12 * -0x38 + 0x5c) = local_4d8._4_4_;\n  *(int *)(plVar21 + lVar12 * -7 + 0xc) = iStack_4d0;\n  *(undefined4 *)((long)plVar21 + lVar12 * -0x38 + 100) = uStack_4cc;\n  uVar16 = (int)(char)(&DAT_00115c60)[(char)(&DAT_00115ae0)[iVar14] + -0x1c] + (int)cVar5;\n  if ((uVar16 < 0x71) && (cVar5 == (&DAT_00115b40)[(int)uVar16])) {\n    cVar5 = (&DAT_00115bc0)[(int)uVar16];\n    iVar14 = (int)cVar5;\n  }\n  else {\n    cVar5 = (&DAT_00115c40)[(char)(&DAT_00115ae0)[iVar14] + -0x1c];\n    iVar14 = (int)cVar5;\n  }\n  goto LAB_00108d80;\ncode_r0x00108b1b:\n  local_564 = 3;\n  plVar22 = plVar21 + 7;\n  *(int *)plVar22 = local_538;\n  *(int *)((long)plVar21 + 0x3c) = iStack_534;\n  *(int *)(plVar21 + 8) = iStack_530;\n  *(int *)((long)plVar21 + 0x44) = iStack_52c;\n  plVar21[0xd] = local_508;\n  *(int *)(plVar21 + 9) = local_528;\n  *(int *)((long)plVar21 + 0x4c) = iStack_524;\n  *(int *)(plVar21 + 10) = iStack_520;\n  *(int *)((long)plVar21 + 0x54) = iStack_51c;\n  plVar21[0xb] = CONCAT44(iStack_514,local_518);\n  plVar21[0xc] = CONCAT44(iStack_50c,iStack_510);\nLAB_00108d80:\n  pcVar13[1] = cVar5;\n  pcVar13 = pcVar13 + 1;\n  if (local_45 <= pcVar13) {\n    uVar10 = 2;\n    goto LAB_00108e0d;\n  }\n  if (iVar14 == 0xc) {\n    uVar10 = 0;\nLAB_00108e0d:\n    if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n      return uVar10;\n    }\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  uVar16 = (uint)(char)(&DAT_00115d00)[iVar14];\n  plVar21 = plVar22;\n  goto LAB_001089ec;\n}\n\n", 
    "0011d170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint settimeofday(timeval *__tv,timezone *__tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010d8d0": "\nvoid FUN_0010d8d0(void)\n\n{\n  FUN_0010d3d0();\n  return;\n}\n\n", 
    "001036b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0011bea0)();\n  return iVar1;\n}\n\n", 
    "0011d058": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0011d178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __xstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001037d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ntime_t mktime(tm *__tp)\n\n{\n  time_t tVar1;\n  \n  tVar1 = (*(code *)PTR_mktime_0011bf30)();\n  return tVar1;\n}\n\n", 
    "001038f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__int32_t ** __ctype_tolower_loc(void)\n\n{\n  __int32_t **pp_Var1;\n  \n  pp_Var1 = (__int32_t **)(*(code *)PTR___ctype_tolower_loc_0011bfc0)();\n  return pp_Var1;\n}\n\n", 
    "00104c60": "\nvoid FUN_00104c60(long *param_1,void *param_2,size_t param_3)\n\n{\n  long lVar1;\n  FILE *__stream;\n  int iVar2;\n  char *__s;\n  undefined8 uVar3;\n  long lVar4;\n  void *__s1;\n  \n  __stream = stderr;\n  __s1 = (void *)0x0;\n  __s = (char *)dcgettext(0,\"Valid arguments are:\",5);\n  fputs_unlocked(__s,__stream);\n  lVar4 = 0;\n  lVar1 = *param_1;\n  while (lVar1 != 0) {\n    if ((lVar4 == 0) || (iVar2 = memcmp(__s1,param_2,param_3), iVar2 != 0)) {\n      uVar3 = FUN_0010dc90(lVar1);\n      __fprintf_chk(stderr,1,\"\\n  - %s\",uVar3);\n      __s1 = param_2;\n    }\n    else {\n      uVar3 = FUN_0010dc90(lVar1);\n      __fprintf_chk(stderr,1,&DAT_0011483e,uVar3);\n    }\n    lVar4 = lVar4 + 1;\n    param_2 = (void *)((long)param_2 + param_3);\n    lVar1 = param_1[lVar4];\n  }\n  putc_unlocked(10,stderr);\n  return;\n}\n\n", 
    "00103720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid tzset(void)\n\n{\n  (*(code *)PTR_tzset_0011bed8)();\n  return;\n}\n\n", 
    "0010dad0": "\nvoid FUN_0010dad0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_0010ba60(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_0010d5f0(puVar1,0x3a,1);\n  FUN_0010d3d0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103840": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0011bf68)();\n  return;\n}\n\n", 
    "0010ebc0": "\nundefined4 FUN_0010ebc0(long param_1)\n\n{\n  undefined4 uVar1;\n  int *piVar2;\n  int iVar3;\n  \n  uVar1 = 1;\n  if (param_1 != 1) {\n    piVar2 = __errno_location();\n    iVar3 = *piVar2;\n    uVar1 = FUN_0010e8a0(param_1);\n    if ((char)uVar1 == '\\0') {\n      iVar3 = *piVar2;\n    }\n    FUN_0010ead0(param_1);\n    *piVar2 = iVar3;\n  }\n  return uVar1;\n}\n\n", 
    "00103600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0011be48)();\n  return sVar1;\n}\n\n"
}