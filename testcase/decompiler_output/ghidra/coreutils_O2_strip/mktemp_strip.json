{
    "0010e208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103000": "\nvoid FUN_00103000(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x108085;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010800b;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 7;\n    pbVar7 = (byte *)\"mktemp\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"mktemp\";\n        goto LAB_0010321e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"mktemp\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"mktemp\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010321e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"mktemp\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"mktemp\");\n    if (pcVar4 != \"mktemp\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106870": "\nulong FUN_00106870(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00105780": "\nvoid FUN_00105780(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105700(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00107160": "\nlong FUN_00107160(long param_1,ulong param_2)\n\n{\n  FILE *__stream;\n  long lVar1;\n  size_t __n;\n  \n  if (param_2 == 0) {\n    lVar1 = FUN_00106ce0(0,0);\n    return lVar1;\n  }\n  if (param_1 != 0) {\n    __stream = (FILE *)FUN_00107850(param_1,&DAT_00109558);\n    if (__stream == (FILE *)0x0) {\n      lVar1 = 0;\n    }\n    else {\n      lVar1 = FUN_00106ce0(__stream,param_1);\n      __n = 0x1000;\n      if (param_2 < 0x1001) {\n        __n = param_2;\n      }\n      setvbuf(__stream,(char *)(lVar1 + 0x18),0,__n);\n    }\n    return lVar1;\n  }\n  lVar1 = FUN_00106ce0(0,0);\n  *(undefined8 *)(lVar1 + 0x18) = 0;\n  FUN_00106f20(lVar1 + 0x20,param_2);\n  FUN_001075a0(lVar1 + 0x20);\n  return lVar1;\n}\n\n", 
    "00107af0": "\nvoid FUN_00107af0(void)\n\n{\n  return;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getppid_0010cfa0)();\n  return _Var1;\n}\n\n", 
    "001065b0": "\nvoid FUN_001065b0(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0010d018,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102825": "\nvoid switchD_0010404f::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001067f0": "\nulong FUN_001067f0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00103e80": "\nchar * FUN_00103e80(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00106a70();\n    iVar1 = FUN_00103dd0(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00103dd0(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_001089f9;\n      }\n      else {\n        pcVar2 = &DAT_001089f6;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_001089fd;\n    }\n    else {\n      pcVar2 = &DAT_001089f2;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0010cf48)();\n  return pFVar1;\n}\n\n", 
    "0010e200": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a70": "\nchar * FUN_00106a70(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00102820": "\nvoid FUN_00102820(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106500": "\nvoid FUN_00106500(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00106390();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00103aa0": "\nundefined8\nFUN_00103aa0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001039f0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00103ce0": "\nundefined8\nFUN_00103ce0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103c10(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00105770": "\nvoid FUN_00105770(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_001056a0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106980": "\nint FUN_00106980(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00103590": "\nchar * FUN_00103590(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "00105650": "\nvoid FUN_00105650(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105170(param_1,param_2,0xffffffffffffffff,&DAT_0010d200);\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010cdd8)();\n  return;\n}\n\n", 
    "0010e218": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027a0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010cf98)();\n  return;\n}\n\n", 
    "001054b0": "\nundefined8 FUN_001054b0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0010d200;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00103fb0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00106390(lVar3 + 1);\n  FUN_00103fb0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010cfd0)();\n  return ppuVar1;\n}\n\n", 
    "0010e210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105680": "\nvoid FUN_00105680(undefined8 param_1)\n\n{\n  FUN_00105650(0,param_1);\n  return;\n}\n\n", 
    "00106890": "\nbool FUN_00106890(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010cfb0)();\n  return sVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010cf20)();\n  return pvVar1;\n}\n\n", 
    "001075a0": "\nvoid FUN_001075a0(ulong *param_1)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  long lVar11;\n  ulong uVar12;\n  long lVar13;\n  ulong *puVar14;\n  ulong *puVar15;\n  ulong uVar16;\n  ulong uVar17;\n  long lVar18;\n  undefined auVar19 [16];\n  \n  uVar2 = 0x98f5704f6c44c0ab;\n  uVar4 = 0x82f053db8355e0ce;\n  uVar9 = 0xb29b2e824a595524;\n  uVar12 = 0x8c0ea5053d4712a0;\n  uVar7 = 0xb9f8b322c73ac862;\n  uVar10 = 0x647c4677a2884b7c;\n  uVar16 = 0xae985bf2cbfc89ed;\n  uVar6 = 0x48fe4a0fa5a09315;\n  puVar5 = param_1;\n  puVar14 = param_1;\n  do {\n    lVar3 = uVar2 + puVar14[7];\n    uVar2 = puVar14[5];\n    uVar1 = puVar14[6];\n    lVar11 = uVar10 + (*puVar14 - (uVar4 + puVar14[4]));\n    uVar4 = FUN_001072b0(lVar3);\n    uVar17 = uVar4 >> 9 ^ uVar6 + uVar2;\n    lVar8 = uVar7 + (puVar14[1] - uVar17);\n    uVar10 = lVar11 + lVar8;\n    uVar4 = uVar16 + uVar1 ^ lVar11 << 9;\n    lVar13 = uVar12 + (puVar14[2] - uVar4);\n    uVar6 = FUN_001072b0(lVar8);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar11;\n    lVar11 = uVar9 + (puVar14[3] - uVar2);\n    uVar12 = lVar13 + lVar11;\n    uVar10 = uVar10 ^ lVar13 << 0xf;\n    auVar19 = FUN_001072b0(lVar11);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar9 = lVar11 + lVar3;\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar8 + lVar13;\n    lVar11 = uVar17 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar8 = uVar4 - uVar12;\n    puVar15 = puVar14 + 8;\n    uVar4 = FUN_001072b0(lVar11);\n    uVar6 = lVar11 + lVar8;\n    *puVar14 = uVar10;\n    uVar9 = uVar9 ^ uVar4 >> 0x11;\n    uVar4 = lVar8 * 0x4000 ^ lVar3 + lVar11;\n    puVar14[1] = uVar7;\n    uVar2 = uVar2 - uVar9;\n    puVar14[2] = uVar12;\n    uVar16 = lVar8 + uVar2;\n    puVar14[3] = uVar9;\n    puVar14[4] = uVar4;\n    puVar14[5] = uVar6;\n    puVar14[6] = uVar16;\n    puVar14[7] = uVar2;\n    puVar14 = puVar15;\n  } while (param_1 + 0x100 != puVar15);\n  do {\n    lVar3 = uVar2 + puVar5[7];\n    uVar2 = puVar5[5];\n    uVar1 = puVar5[6];\n    lVar8 = uVar10 + (*puVar5 - (uVar4 + puVar5[4]));\n    uVar4 = FUN_001072b0(lVar3);\n    uVar4 = uVar4 >> 9 ^ uVar6 + uVar2;\n    uVar16 = uVar16 + uVar1 ^ lVar8 << 9;\n    lVar13 = (puVar5[1] - uVar4) + uVar7;\n    lVar11 = uVar12 + (puVar5[2] - uVar16);\n    uVar10 = lVar8 + lVar13;\n    uVar6 = FUN_001072b0(lVar13);\n    uVar2 = uVar6 >> 0x17 ^ lVar3 + lVar8;\n    uVar10 = uVar10 ^ lVar11 << 0xf;\n    lVar18 = (puVar5[3] - uVar2) + uVar9;\n    uVar12 = lVar11 + lVar18;\n    auVar19 = FUN_001072b0(lVar18);\n    lVar3 = SUB168(auVar19 >> 0x40,0);\n    uVar7 = SUB168(auVar19,0) >> 0xe ^ lVar13 + lVar11;\n    lVar8 = uVar4 - uVar7;\n    uVar12 = uVar12 ^ lVar3 << 0x14;\n    lVar11 = uVar16 - uVar12;\n    uVar9 = FUN_001072b0(lVar8);\n    uVar6 = lVar8 + lVar11;\n    *puVar5 = uVar10;\n    puVar14 = puVar5 + 8;\n    uVar4 = lVar11 * 0x4000 ^ lVar3 + lVar8;\n    puVar5[1] = uVar7;\n    uVar9 = uVar9 >> 0x11 ^ lVar18 + lVar3;\n    puVar5[2] = uVar12;\n    uVar2 = uVar2 - uVar9;\n    puVar5[3] = uVar9;\n    uVar16 = lVar11 + uVar2;\n    puVar5[4] = uVar4;\n    puVar5[5] = uVar6;\n    puVar5[6] = uVar16;\n    puVar5[7] = uVar2;\n    puVar5 = puVar14;\n  } while (param_1 + 0x100 != puVar14);\n  param_1[0x102] = 0;\n  param_1[0x101] = 0;\n  param_1[0x100] = 0;\n  return;\n}\n\n", 
    "00102840": "\nundefined8 FUN_00102840(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  bool bVar2;\n  bool bVar3;\n  int iVar4;\n  char *pcVar5;\n  char *pcVar6;\n  char *pcVar7;\n  char *pcVar8;\n  int *piVar9;\n  undefined8 uVar10;\n  undefined8 uVar11;\n  ulong uVar12;\n  size_t __n;\n  byte bVar13;\n  undefined auVar14 [16];\n  char *local_68;\n  undefined auStack_60 [6];\n  char local_5a;\n  char local_59;\n  char *local_58;\n  long local_50;\n  ulong local_48;\n  char *local_40;\n  \n  bVar13 = 0;\n  bVar3 = false;\n  bVar2 = false;\n  pcVar8 = (char *)0x0;\n  FUN_00103740(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_00107b00(FUN_00102f80);\n  local_5a = '\\0';\n  local_59 = '\\0';\n  local_68 = (char *)0x0;\n  local_58 = (char *)0x0;\n  while (iVar4 = getopt_long(param_1,param_2,\"dp:qtuV\",&PTR_s_directory_0010ca80,0), iVar4 != -1) {\n    if (0x80 < iVar4) goto switchD_0010290d_caseD_57;\n    if (iVar4 < 0x56) {\n      if (iVar4 == -0x83) {\nswitchD_0010290d_caseD_56:\n        FUN_00106250(stdout,\"mktemp\",\"GNU coreutils\",PTR_DAT_0010d010,\"Jim Meyering\",\"Eric Blake\",0)\n        ;\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar4 != -0x82) goto switchD_0010290d_caseD_57;\n      FUN_001032a0(0);\n      break;\n    }\n    switch(iVar4) {\n    case 0x56:\n      goto switchD_0010290d_caseD_56;\n    default:\n      goto switchD_0010290d_caseD_57;\n    case 100:\n      local_59 = '\\x01';\n      break;\n    case 0x70:\n      local_58 = optarg;\n      pcVar8 = (char *)0x1;\n      break;\n    case 0x71:\n      bVar3 = true;\n      break;\n    case 0x74:\n      bVar2 = true;\n      pcVar8 = (char *)0x1;\n      break;\n    case 0x75:\n      local_5a = '\\x01';\n      break;\n    case 0x80:\n      local_68 = optarg;\n    }\n  }\n  if ((uint)(param_1 - optind) < 2) {\n    if (param_1 == optind) {\n      pcVar8 = (char *)0x1;\n      pcVar6 = \"tmp.XXXXXXXXXX\";\n      if (local_68 == (char *)0x0) goto LAB_00102d04;\n      __n = 0xe;\n      pcVar8 = (char *)0x1;\n      pcVar6 = \"tmp.XXXXXXXXXX\";\n    }\n    else {\n      pcVar6 = (char *)param_2[optind];\n      if (local_68 == (char *)0x0) goto LAB_00102d04;\n      uVar12 = 0xffffffffffffffff;\n      pcVar5 = pcVar6;\n      do {\n        if (uVar12 == 0) break;\n        uVar12 = uVar12 - 1;\n        cVar1 = *pcVar5;\n        pcVar5 = pcVar5 + (ulong)bVar13 * -2 + 1;\n      } while (cVar1 != '\\0');\n      __n = ~uVar12 - 1;\n      if ((__n == 0) || (pcVar6[~uVar12 - 2] != 'X')) {\nLAB_00102df6:\n        uVar10 = FUN_00105a30(pcVar6);\n        uVar11 = dcgettext(0,\"with --suffix, template %s must end in X\",5);\n        error(1,0,uVar11,uVar10);\nLAB_00102e28:\n        uVar10 = FUN_00105a30();\n        uVar11 = dcgettext(0,\"too few X\\'s in template %s\",5);\n        auVar14 = error(1,0,uVar11,uVar10);\n        pcVar8 = local_68;\n        local_68 = SUB168(auVar14,0);\n        (*(code *)PTR___libc_start_main_0010cfe0)\n                  (FUN_00102840,pcVar8,auStack_60,FUN_00107a80,FUN_00107af0,\n                   SUB168(auVar14 >> 0x40,0),&local_68);\n        do {\n                    /* WARNING: Do nothing block with infinite loop */\n        } while( true );\n      }\n    }\n    local_48 = 0xffffffffffffffff;\n    pcVar5 = local_68;\n    do {\n      if (local_48 == 0) break;\n      local_48 = local_48 - 1;\n      cVar1 = *pcVar5;\n      pcVar5 = pcVar5 + (ulong)bVar13 * -2 + 1;\n    } while (cVar1 != '\\0');\n    local_48 = ~local_48;\n    local_50 = local_48 - 1;\n    local_40 = pcVar6;\n    pcVar5 = (char *)thunk_FUN_00106390(__n + local_48);\n    memcpy(pcVar5,local_40,__n);\n    pcVar6 = (char *)memcpy(pcVar5 + __n,local_68,local_48);\nLAB_00102a6b:\n    if ((local_50 != 0) &&\n       (local_68 = pcVar6, pcVar7 = (char *)FUN_00103590(pcVar6), pcVar6 = local_68,\n       local_68 != pcVar7)) {\nLAB_00102dc4:\n      uVar10 = FUN_00105a30(pcVar6);\n      uVar11 = dcgettext(0,\"invalid suffix %s, contains directory separator\",5);\n      pcVar6 = (char *)0x0;\n      error(1,0,uVar11,uVar10);\n      goto LAB_00102df6;\n    }\n    uVar12 = FUN_00102f50(pcVar5,(long)pcVar6 - (long)pcVar5);\n    if (uVar12 < 3) goto LAB_00102e28;\n    pcVar7 = pcVar5;\n    if ((char)pcVar8 == '\\0') goto LAB_00102af4;\n    if (bVar2) {\n      pcVar8 = getenv(\"TMPDIR\");\n      if ((((pcVar8 == (char *)0x0) || (*pcVar8 == '\\0')) &&\n          (pcVar8 = \"/tmp\", local_58 != (char *)0x0)) && (*local_58 != '\\0')) {\n        pcVar8 = local_58;\n      }\n      pcVar6 = (char *)FUN_00103590(pcVar5);\n      if (pcVar5 == pcVar6) goto LAB_00102ad9;\n      pcVar8 = (char *)FUN_00105a30(pcVar5);\n      uVar10 = dcgettext(0,\"invalid template, %s, contains directory separator\",5);\n      pcVar6 = (char *)0x0;\n      error(1,0,uVar10);\nLAB_00102d04:\n      pcVar5 = (char *)FUN_00106590(pcVar6);\n      pcVar7 = strrchr(pcVar5,0x58);\n      pcVar6 = pcVar7 + 1;\n      if (pcVar7 == (char *)0x0) {\n        uVar12 = 0xffffffffffffffff;\n        pcVar6 = pcVar5;\n        do {\n          if (uVar12 == 0) break;\n          uVar12 = uVar12 - 1;\n          cVar1 = *pcVar6;\n          pcVar6 = pcVar6 + (ulong)bVar13 * -2 + 1;\n        } while (cVar1 != '\\0');\n        pcVar6 = pcVar5 + (~uVar12 - 1);\n      }\n      uVar12 = 0xffffffffffffffff;\n      pcVar7 = pcVar6;\n      do {\n        if (uVar12 == 0) break;\n        uVar12 = uVar12 - 1;\n        cVar1 = *pcVar7;\n        pcVar7 = pcVar7 + (ulong)bVar13 * -2 + 1;\n      } while (cVar1 != '\\0');\n      local_50 = ~uVar12 - 1;\n      goto LAB_00102a6b;\n    }\n    if (((local_58 == (char *)0x0) || (pcVar8 = local_58, *local_58 == '\\0')) &&\n       ((pcVar8 = getenv(\"TMPDIR\"), pcVar8 == (char *)0x0 || (*pcVar8 == '\\0')))) {\n      pcVar8 = \"/tmp\";\n    }\n    if (*pcVar5 == '/') {\n      uVar10 = FUN_00105a30(pcVar5);\n      uVar11 = dcgettext(0,\"invalid template, %s; with --tmpdir, it may not be absolute\",5);\n      error(1,0,uVar11,uVar10);\n      goto LAB_00102dc4;\n    }\nLAB_00102ad9:\n    pcVar7 = (char *)FUN_00103620(pcVar8,pcVar5,0);\n    free(pcVar5);\nLAB_00102af4:\n    pcVar8 = (char *)FUN_00106590(pcVar7);\n    if (local_59 == '\\0') {\n      iVar4 = FUN_00102fe0(pcVar8,local_50,uVar12,local_5a);\n      if (-1 < iVar4) {\n        if (local_5a == '\\0') {\n          iVar4 = close(iVar4);\n          if (iVar4 != 0) goto LAB_00102c22;\n          puts(pcVar8);\n          goto LAB_00102bcd;\n        }\n        puts(pcVar8);\n        goto LAB_00102b8f;\n      }\nLAB_00102c22:\n      if (!bVar3) {\n        uVar10 = FUN_00105a30(pcVar7);\n        pcVar8 = \"failed to create file via template %s\";\n        goto LAB_00102c42;\n      }\n    }\n    else {\n      iVar4 = FUN_00102fc0();\n      if (iVar4 == 0) goto LAB_00102bbe;\n      if (!bVar3) {\n        uVar10 = FUN_00105a30(pcVar7);\n        pcVar8 = \"failed to create directory via template %s\";\nLAB_00102c42:\n        uVar11 = dcgettext(0,pcVar8,5);\n        piVar9 = __errno_location();\n        error(0,*piVar9,uVar11,uVar10);\n      }\n    }\nLAB_00102b2c:\n    uVar10 = 1;\n  }\n  else {\n    uVar10 = dcgettext(0,\"too many templates\",5);\n    error(0,0,uVar10);\nswitchD_0010290d_caseD_57:\n    FUN_001032a0(1);\nLAB_00102bbe:\n    puts(pcVar8);\n    if (local_5a == '\\0') {\nLAB_00102bcd:\n      DAT_0010d0c9 = 1;\n      iVar4 = FUN_00103450(stdout);\n      if (iVar4 != 0) {\n        piVar9 = __errno_location();\n        iVar4 = *piVar9;\n        remove(pcVar8);\n        if (!bVar3) {\n          uVar10 = dcgettext(0,\"write error\",5);\n          error(0,iVar4,uVar10);\n        }\n        goto LAB_00102b2c;\n      }\n    }\nLAB_00102b8f:\n    uVar10 = 0;\n  }\n  return uVar10;\n}\n\n", 
    "00102720": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010cf58)();\n  return;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010cec8)();\n  return iVar1;\n}\n\n", 
    "00105310": "\nvoid FUN_00105310(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d200;\n  }\n  FUN_00106560(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00106520": "\nvoid FUN_00106520(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001065b0();\n}\n\n", 
    "00106760": "\nsize_t FUN_00106760(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00106a20(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107850": "\nFILE * FUN_00107850(char *param_1,char *param_2)\n\n{\n  uint uVar1;\n  int iVar2;\n  int iVar3;\n  FILE *__stream;\n  FILE *pFVar4;\n  int *piVar5;\n  \n  __stream = fopen(param_1,param_2);\n  pFVar4 = __stream;\n  if ((__stream != (FILE *)0x0) && (uVar1 = fileno(__stream), uVar1 < 3)) {\n    iVar2 = FUN_001078f0(uVar1);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      pFVar4 = (FILE *)0x0;\n      iVar2 = *piVar5;\n      FUN_001065f0(__stream);\n      *piVar5 = iVar2;\n    }\n    else {\n      iVar3 = FUN_001065f0(__stream);\n      if ((iVar3 == 0) && (pFVar4 = fdopen(iVar2,param_2), pFVar4 != (FILE *)0x0)) {\n        return pFVar4;\n      }\n      piVar5 = __errno_location();\n      iVar3 = *piVar5;\n      close(iVar2);\n      *piVar5 = iVar3;\n      pFVar4 = (FILE *)0x0;\n    }\n  }\n  return pFVar4;\n}\n\n", 
    "0010282f": "\nvoid FUN_0010282f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105430": "\nvoid FUN_00105430(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0010d200;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00103fb0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00105670": "\nvoid FUN_00105670(void)\n\n{\n  FUN_00105170();\n  return;\n}\n\n", 
    "0010282a": "\nvoid FUN_0010282a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001027c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010cfa8)();\n  return;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n  __gid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getgid_0010cf18)();\n  return _Var1;\n}\n\n", 
    "00106e00": "\nvoid FUN_00106e00(ulong *param_1,void *param_2,ulong param_3)\n\n{\n  ulong *puVar1;\n  ulong uVar2;\n  void *pvVar3;\n  ulong *__src;\n  ulong uVar4;\n  \n  __src = param_1 + 0x104;\n  puVar1 = param_1 + 1;\n  uVar4 = *param_1;\n  pvVar3 = param_2;\n  if (param_3 <= uVar4) {\n    __src = (ulong *)((long)__src + (0x800 - uVar4));\nLAB_00106ec0:\n    memcpy(param_2,__src,param_3);\n    *param_1 = uVar4 - param_3;\n    return;\n  }\n  while( true ) {\n    param_2 = (void *)((long)pvVar3 + uVar4);\n    param_3 = param_3 - uVar4;\n    memcpy(pvVar3,(void *)((0x800 - uVar4) + (long)__src),uVar4);\n    if (((ulong)param_2 & 7) == 0) break;\n    uVar4 = 0x800;\n    FUN_001072d0(puVar1,__src);\n    pvVar3 = param_2;\n    if (param_3 < 0x801) goto LAB_00106eba;\n  }\n  uVar2 = (ulong)((uint)param_3 & 0x7ff);\n  uVar4 = param_3;\n  while (pvVar3 = (void *)((long)param_2 + (param_3 - uVar4)), uVar4 != uVar2) {\n    FUN_001072d0(puVar1,pvVar3);\n    uVar4 = uVar4 - 0x800;\n    if (uVar4 == 0) {\n      *param_1 = 0;\n      return;\n    }\n  }\n  FUN_001072d0(puVar1,__src);\n  param_3 = uVar2;\n  param_2 = pvVar3;\nLAB_00106eba:\n  uVar4 = 0x800;\n  goto LAB_00106ec0;\n}\n\n", 
    "00106f20": "\n/* WARNING: Type propagation algorithm not settling */\n\nvoid FUN_00106f20(__uid_t *param_1,size_t param_2)\n\n{\n  int __fd;\n  uint uVar1;\n  ssize_t sVar2;\n  ulong uVar3;\n  __uid_t *p_Var4;\n  undefined *puVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  byte bVar8;\n  undefined local_58 [8];\n  __uid_t _Stack_50;\n  __uid_t _Stack_4c;\n  long local_40;\n  \n  bVar8 = 0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __fd = open(\"/dev/urandom\",0);\n  if (__fd < 0) {\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    *param_1 = local_58._0_4_;\n    param_1[1] = local_58._4_4_;\n    param_1[2] = _Stack_50;\n    param_1[3] = _Stack_4c;\n    local_58._0_4_ = getpid();\n    uVar1 = 0;\n    do {\n      uVar7 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar7 + 0x10) = *(undefined *)((long)local_58 + uVar7);\n    } while (uVar1 < 4);\n    uVar7 = 0x14;\n  }\n  else {\n    if (0x800 < param_2) {\n      param_2 = 0x800;\n    }\n    sVar2 = read(__fd,param_1,param_2);\n    close(__fd);\n    if (0x7ff < sVar2) goto LAB_00106f8f;\n    if (sVar2 < 0) {\n      sVar2 = 0;\n    }\n    uVar7 = 0x800 - sVar2;\n    if (0x10 < uVar7) {\n      uVar7 = 0x10;\n    }\n    gettimeofday((timeval *)local_58,(__timezone_ptr_t)0x0);\n    uVar3 = sVar2 + uVar7;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + sVar2);\n    for (uVar7 = uVar7 & 0xffffffff; uVar7 != 0; uVar7 = uVar7 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar3) goto LAB_00106f8f;\n    uVar6 = 0x800 - uVar3;\n    if (4 < uVar6) {\n      uVar6 = 4;\n    }\n    local_58._0_4_ = getpid();\n    uVar7 = uVar6 + uVar3;\n    p_Var4 = (__uid_t *)local_58;\n    puVar5 = (undefined *)((long)param_1 + uVar3);\n    for (uVar6 = uVar6 & 0xffffffff; uVar6 != 0; uVar6 = uVar6 - 1) {\n      *puVar5 = *(undefined *)p_Var4;\n      p_Var4 = (__uid_t *)((long)p_Var4 + (ulong)bVar8 * -2 + 1);\n      puVar5 = puVar5 + (ulong)bVar8 * -2 + 1;\n    }\n    if (0x7ff < uVar7) goto LAB_00106f8f;\n  }\n  uVar3 = 0x800 - uVar7;\n  if (4 < uVar3) {\n    uVar3 = 4;\n  }\n  local_58._0_4_ = getppid();\n  if ((uint)uVar3 != 0) {\n    uVar1 = 0;\n    do {\n      uVar6 = (ulong)uVar1;\n      uVar1 = uVar1 + 1;\n      *(undefined *)((long)param_1 + uVar6 + uVar7) = *(undefined *)((long)local_58 + uVar6);\n    } while (uVar1 < (uint)uVar3);\n  }\n  uVar3 = uVar3 + uVar7;\n  if (uVar3 < 0x800) {\n    uVar7 = 0x800 - uVar3;\n    if (4 < uVar7) {\n      uVar7 = 4;\n    }\n    local_58._0_4_ = getuid();\n    if ((uint)uVar7 != 0) {\n      uVar1 = 0;\n      do {\n        uVar6 = (ulong)uVar1;\n        uVar1 = uVar1 + 1;\n        *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n      } while (uVar1 < (uint)uVar7);\n    }\n    uVar3 = uVar3 + uVar7;\n    if (uVar3 < 0x800) {\n      local_58._0_4_ = getgid();\n      uVar7 = 0x800 - uVar3;\n      if (4 < uVar7) {\n        uVar7 = 4;\n      }\n      if ((uint)uVar7 != 0) {\n        uVar1 = 0;\n        do {\n          uVar6 = (ulong)uVar1;\n          uVar1 = uVar1 + 1;\n          *(undefined *)((long)param_1 + uVar6 + uVar3) = *(undefined *)((long)local_58 + uVar6);\n        } while (uVar1 < (uint)uVar7);\n      }\n    }\n  }\nLAB_00106f8f:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "001066e0": "\nint FUN_001066e0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001078f0": "\nvoid FUN_001078f0(undefined8 param_1)\n\n{\n  FUN_00107910(param_1,0,3);\n  return;\n}\n\n", 
    "00102839": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103800": "\nint * FUN_00103800(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102834": "\nvoid switchD_00105df8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010cf50)();\n  return pcVar1;\n}\n\n", 
    "00103dd0": "\nundefined8\nFUN_00103dd0(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00103ce0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00105860": "\nvoid FUN_00105860(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001057a0(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00106950": "\nulong FUN_00106950(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00102590": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010ce90)();\n  return;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint remove(char *__filename)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_remove_0010ce00)();\n  return iVar1;\n}\n\n", 
    "00107240": "\nvoid FUN_00107240(long *param_1)\n\n{\n  if (*param_1 != 0) {\n    FUN_00106d80();\n    return;\n  }\n  FUN_00106e00(param_1 + 3);\n  return;\n}\n\n", 
    "00106390": "\nvoid FUN_00106390(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_001065b0();\n  }\n  return;\n}\n\n", 
    "001032a0": "\nvoid FUN_001032a0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0010d0e0;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [TEMPLATE]\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Create a temporary file or directory, safely, and print its name.\\nTEMPLATE must contain at least 3 consecutive \\'X\\'s in last component.\\nIf TEMPLATE is not specified, use tmp.XXXXXXXXXX, and --tmpdir is implied.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Files are created u+rw, and directories u+rwx, minus umask restrictions.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    fputc_unlocked(10,stdout);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -d, --directory     create a directory, not a file\\n  -u, --dry-run       do not create anything; merely print a name (unsafe)\\n  -q, --quiet         suppress diagnostics about file/dir-creation failure\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --suffix=SUFF   append SUFF to TEMPLATE; SUFF must not contain a slash.\\n                        This option is implied if TEMPLATE does not end in X\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -p DIR, --tmpdir[=DIR]  interpret TEMPLATE relative to DIR; if DIR is not\\n                        specified, use $TMPDIR if set, else /tmp.  With\\n                        this option, TEMPLATE must not be an absolute name;\\n                        unlike with -t, TEMPLATE may contain slashes, but\\n                        mktemp creates only the final component\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -t                  interpret TEMPLATE as a single file name component,\\n                        relative to a directory: $TMPDIR, if set; else the\\n                        directory specified via -p; else /tmp [deprecated]\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103000();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001055a0": "\nvoid FUN_001055a0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001054b0(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "001068d0": "\nulong FUN_001068d0(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "001034e0": "\nvoid FUN_001034e0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00103450(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0010d0d0 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0010d0d8 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00105850();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00103568;\n    }\n  }\n  iVar1 = FUN_00103450(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00103568:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0010d018);\n}\n\n", 
    "0010e080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107b20": "\nvoid FUN_00107b20(char *param_1,stat *param_2)\n\n{\n  __lxstat(1,param_1,param_2);\n  return;\n}\n\n", 
    "00106c70": "\nvoid FUN_00106c70(void *param_1)\n\n{\n  __explicit_bzero_chk(param_1,0x18,0xffffffffffffffff);\n  free(param_1);\n  return;\n}\n\n", 
    "00105a60": "\nint FUN_00105a60(undefined8 param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  long in_FS_OFFSET;\n  undefined auStack_a8 [152];\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00107b20(param_1,auStack_a8);\n  piVar2 = __errno_location();\n  if (iVar1 != 0) {\n    if (*piVar2 != 0x4b) {\n      iVar1 = -(uint)(*piVar2 != 2);\n      goto LAB_00105ab3;\n    }\n  }\n  *piVar2 = 0x11;\n  iVar1 = -1;\nLAB_00105ab3:\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar1;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e088": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107910": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00107910(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00107994;\n  }\n  if (DAT_0010d238 < 0) {\n    iVar2 = FUN_00107910(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_0010d238 != -1)) goto LAB_00107994;\nLAB_001079d1:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00107994;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_00107910(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00107994;\n        DAT_0010d238 = -1;\n        __fd = iVar2;\n        goto LAB_001079d1;\n      }\n    }\n    DAT_0010d238 = 1;\n  }\nLAB_00107994:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106940": "\nbool FUN_00106940(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00106820": "\nbool FUN_00106820(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00105850": "\nvoid FUN_00105850(undefined8 param_1)\n\n{\n  FUN_00105830(param_1,0x3a);\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n  __uid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getuid_0010ce88)();\n  return _Var1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010cdf8)();\n  return piVar1;\n}\n\n", 
    "00107230": "\nvoid FUN_00107230(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 0x10) = param_2;\n  return;\n}\n\n", 
    "00105170": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00105170(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0010d060;\n  if (DAT_0010d058 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_001065b0();\n    }\n    if (PTR_DAT_0010d060 == &DAT_0010d070) {\n      puVar8 = (undefined4 *)FUN_001063f0(0);\n      uVar6 = PTR_DAT_0010d078._4_4_;\n      uVar5 = PTR_DAT_0010d078._0_4_;\n      uVar3 = _UNK_0010d074;\n      PTR_DAT_0010d060 = (undefined *)puVar8;\n      *puVar8 = _DAT_0010d070;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_001063f0(PTR_DAT_0010d060);\n      PTR_DAT_0010d060 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0010d058 * 4,0,(long)((param_1 + 1) - DAT_0010d058) << 4);\n    DAT_0010d058 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00103fb0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0010d100) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00106390(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00103fb0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "001068c0": "\nbool FUN_001068c0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00102e60": "\nvoid FUN_00102e60(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010cfe0)\n            (FUN_00102840,unaff_retaddr,&stack0x00000008,FUN_00107a80,FUN_00107af0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001034d0": "\nvoid FUN_001034d0(undefined param_1)\n\n{\n  DAT_0010d0d0 = param_1;\n  return;\n}\n\n", 
    "0010e090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102f80": "\nvoid FUN_00102f80(void)\n\n{\n  int iVar1;\n  \n  if (DAT_0010d0c9 == '\\0') {\n    FUN_001034e0();\n    return;\n  }\n  iVar1 = FUN_00103450(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  _exit(1);\n}\n\n", 
    "001035f0": "\nvoid FUN_001035f0(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00106a20": "\nbool FUN_00106a20(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "001072d0": "\nvoid FUN_001072d0(long *param_1,long *param_2)\n\n{\n  long lVar1;\n  long lVar2;\n  ulong uVar3;\n  long lVar4;\n  long *plVar5;\n  long *plVar6;\n  long *plVar7;\n  undefined auVar8 [16];\n  undefined auVar9 [16];\n  \n  plVar6 = param_1 + 0x80;\n  lVar4 = param_1[0x102];\n  uVar3 = param_1[0x100];\n  param_1[0x102] = lVar4 + 1;\n  lVar4 = lVar4 + 1 + param_1[0x101];\n  plVar5 = param_1;\n  plVar7 = param_2;\n  do {\n    uVar3 = param_1[0x80] + ~(uVar3 ^ uVar3 << 0x15);\n    lVar1 = *param_1;\n    auVar8 = FUN_001072c0(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = FUN_001072c0();\n    lVar1 = FUN_001072b0(lVar4 + lVar1);\n    *param_2 = lVar1;\n    auVar8 = FUN_001072b0(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + 0x408);\n    auVar8 = FUN_001072c0(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_001072c0();\n    auVar8 = FUN_001072b0(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    param_2[1] = SUB168(auVar8,0);\n    uVar3 = *(long *)(lVar4 + 0x410) + (uVar3 ^ uVar3 << 0xc);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = FUN_001072c0(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = FUN_001072c0();\n    lVar1 = FUN_001072b0(lVar1 + lVar4);\n    param_2[2] = lVar1;\n    auVar8 = FUN_001072b0(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + 0x418);\n    auVar8 = FUN_001072c0(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_001072c0();\n    auVar8 = FUN_001072b0(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    param_2[3] = lVar4;\n    param_2 = param_2 + 4;\n  } while (param_1 != plVar6);\n  plVar7 = plVar7 + 0x80;\n  plVar6 = plVar5 + 0x100;\n  do {\n    uVar3 = ~(uVar3 ^ uVar3 << 0x15) + param_1[-0x80];\n    lVar1 = *param_1;\n    auVar8 = FUN_001072c0(plVar5,lVar1);\n    *SUB168(auVar8 >> 0x40,0) = SUB168(auVar8,0) + uVar3 + lVar4;\n    lVar4 = FUN_001072c0();\n    lVar1 = FUN_001072b0(lVar4 + lVar1);\n    *plVar7 = lVar1;\n    auVar8 = FUN_001072b0(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 8);\n    uVar3 = (SUB168(auVar8,0) >> 5 ^ uVar3) + *(long *)(lVar2 + -0x3f8);\n    auVar8 = FUN_001072c0(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 8) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_001072c0();\n    auVar8 = FUN_001072b0(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8 >> 0x40,0);\n    plVar7[1] = SUB168(auVar8,0);\n    uVar3 = (uVar3 ^ uVar3 << 0xc) + *(long *)(lVar4 + -0x3f0);\n    lVar4 = *(long *)(lVar4 + 0x10);\n    auVar9 = FUN_001072c0(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar9 >> 0x40,0) + 0x10) = SUB168(auVar9,0) + SUB168(auVar8,0) + uVar3;\n    lVar1 = FUN_001072c0();\n    lVar1 = FUN_001072b0(lVar1 + lVar4);\n    plVar7[2] = lVar1;\n    auVar8 = FUN_001072b0(uVar3);\n    lVar2 = SUB168(auVar8 >> 0x40,0);\n    lVar4 = *(long *)(lVar2 + 0x18);\n    uVar3 = (SUB168(auVar8,0) >> 0x21 ^ uVar3) + *(long *)(lVar2 + -1000);\n    auVar8 = FUN_001072c0(plVar5,lVar4);\n    *(ulong *)(SUB168(auVar8 >> 0x40,0) + 0x18) = SUB168(auVar8,0) + lVar1 + uVar3;\n    lVar1 = FUN_001072c0();\n    auVar8 = FUN_001072b0(lVar1 + lVar4);\n    lVar4 = SUB168(auVar8,0);\n    param_1 = (long *)(SUB168(auVar8 >> 0x40,0) + 0x20);\n    plVar7[3] = lVar4;\n    plVar7 = plVar7 + 4;\n  } while (param_1 != plVar6);\n  plVar5[0x100] = uVar3;\n  plVar5[0x101] = lVar4;\n  return;\n}\n\n", 
    "00105c90": "\nvoid FUN_00105c90(undefined8 param_1,undefined8 param_2,undefined4 param_3,int param_4)\n\n{\n  undefined4 local_c [3];\n  \n  local_c[0] = param_3;\n  if (param_4 == 1) {\n    FUN_00105b10(param_1,param_2,local_c,FUN_00105ae0);\n    return;\n  }\n  if (param_4 != 2) {\n    if (param_4 != 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"! \\\"invalid KIND in __gen_tempname\\\"\",\"lib/tempname.c\",0x147,\"gen_tempname_len\"\n                   );\n    }\n    FUN_00105b10(param_1,param_2,local_c,FUN_00105af0);\n    return;\n  }\n  FUN_00105b10(param_1,param_2,local_c,FUN_00105a60);\n  return;\n}\n\n", 
    "00106d80": "\nvoid FUN_00106d80(FILE **param_1,void *param_2,size_t param_3)\n\n{\n  FILE *pFVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  int iVar5;\n  \n  piVar3 = __errno_location();\n  while( true ) {\n    sVar4 = fread_unlocked(param_2,1,param_3,*param_1);\n    iVar5 = *piVar3;\n    param_2 = (void *)((long)param_2 + sVar4);\n    param_3 = param_3 - sVar4;\n    if (param_3 == 0) break;\n    iVar2 = ferror_unlocked(*param_1);\n    pFVar1 = param_1[2];\n    if (iVar2 == 0) {\n      iVar5 = 0;\n    }\n    *piVar3 = iVar5;\n    (*(code *)param_1[1])(pFVar1);\n  }\n  return;\n}\n\n", 
    "0010e098": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106850": "\nuint FUN_00106850(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010ce10)();\n  return;\n}\n\n", 
    "00107260": "\nundefined8 FUN_00107260(long *param_1)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = *param_1;\n  __explicit_bzero_chk(param_1,0x1038,0xffffffffffffffff);\n  free(param_1);\n  if (lVar1 != 0) {\n    uVar2 = FUN_001065f0(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "0010e060": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102e90": "\n/* WARNING: Removing unreachable block (ram,0x00102ea3) */\n/* WARNING: Removing unreachable block (ram,0x00102eaf) */\n\nvoid FUN_00102e90(void)\n\n{\n  return;\n}\n\n", 
    "0010e180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010cfc8)();\n  return iVar1;\n}\n\n", 
    "0010e188": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010cfe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010cfe8)();\n  }\n  return;\n}\n\n", 
    "00106840": "\nbool FUN_00106840(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010ce08)();\n  return iVar1;\n}\n\n", 
    "00105870": "\nvoid FUN_00105870(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103800(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00105390(puVar1,0x3a,1);\n  FUN_00105170(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103450": "\nulong FUN_00103450(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_001065f0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00106af0": "\nundefined8 FUN_00106af0(void)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  \n  lVar1 = FUN_00107160();\n  if (lVar1 != 0) {\n    uVar2 = FUN_00106ac0(lVar1);\n    return uVar2;\n  }\n  return 0;\n}\n\n", 
    "00103c10": "\nundefined8\nFUN_00103c10(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103b50(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001066a0": "\nvoid FUN_001066a0(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00106680(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001055b0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001055b0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0010d060;\n  if (1 < DAT_0010d058) {\n    ppvVar2 = (void **)(PTR_DAT_0010d060 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0010d060 + (ulong)(DAT_0010d058 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0010d100) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0010d078 = &DAT_0010d100;\n    _DAT_0010d070 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0010d070) {\n    free(__ptr_00);\n    PTR_DAT_0010d060 = &DAT_0010d070;\n  }\n  DAT_0010d058 = 1;\n  return;\n}\n\n", 
    "00107b34": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "0010e190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e078": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputc_unlocked_0010cf00)();\n  return iVar1;\n}\n\n", 
    "0010e0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010ce70)();\n  return sVar1;\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0010cde0)();\n  return pcVar1;\n}\n\n", 
    "00103640": "\nvoid * FUN_00103640(void *param_1,char *param_2,void **param_3)\n\n{\n  size_t __n;\n  long lVar1;\n  long lVar2;\n  size_t __n_00;\n  void *__dest;\n  undefined *puVar3;\n  ulong uVar4;\n  undefined local_41;\n  \n  lVar1 = FUN_00103590();\n  lVar2 = FUN_001035f0(lVar1);\n  __n = (lVar1 - (long)param_1) + lVar2;\n  __n_00 = strlen(param_2);\n  if (lVar2 == 0) {\n    local_41 = 0x2e;\n    if (*param_2 != '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 == '/');\n  }\n  else if (*(char *)((long)param_1 + (__n - 1)) == '/') {\n    local_41 = 0;\n    uVar4 = 0;\n  }\n  else {\n    local_41 = 0x2f;\n    if (*param_2 == '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 != '/');\n  }\n  __dest = malloc(__n + 1 + __n_00 + uVar4);\n  if (__dest != (void *)0x0) {\n    puVar3 = (undefined *)mempcpy(__dest,param_1,__n);\n    *puVar3 = local_41;\n    if (param_3 != (void **)0x0) {\n      *param_3 = puVar3 + uVar4;\n    }\n    puVar3 = (undefined *)mempcpy(puVar3 + uVar4,param_2,__n_00);\n    *puVar3 = 0;\n  }\n  return __dest;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fopen_0010cf90)();\n  return pFVar1;\n}\n\n", 
    "00106ce0": "\nvoid FUN_00106ce0(undefined8 param_1,undefined8 param_2)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00106390(0x1038);\n  *puVar1 = param_1;\n  puVar1[1] = FUN_00106d10;\n  puVar1[2] = param_2;\n  return;\n}\n\n", 
    "0010e0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106590": "\nvoid FUN_00106590(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106560(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "001057a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_001057a0(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0010d200;\n  uStack_40 = uRam000000000010d208;\n  local_38 = _DAT_0010d210;\n  uStack_30 = uRam000000000010d218;\n  local_28 = _DAT_0010d220;\n  uStack_20 = uRam000000000010d228;\n  local_18 = DAT_0010d230;\n  FUN_00105390(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00105170(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010cec0)();\n  return pvVar1;\n}\n\n", 
    "001059e0": "\nvoid FUN_001059e0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00105910(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0010ce30)();\n  return iVar1;\n}\n\n", 
    "0010e160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102f50": "\nlong FUN_00102f50(long param_1,long param_2)\n\n{\n  long lVar1;\n  \n  lVar1 = 0;\n  if (param_2 == 0) {\n    return 0;\n  }\n  do {\n    param_2 = param_2 + -1;\n    if (*(char *)(param_1 + param_2) != 'X') {\n      return lVar1;\n    }\n    lVar1 = lVar1 + 1;\n  } while (param_2 != 0);\n  return lVar1;\n}\n\n", 
    "00105a20": "\nvoid FUN_00105a20(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105a00(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "001063f0": "\nvoid * FUN_001063f0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_001065b0();\n  }\n  return pvVar1;\n}\n\n", 
    "0010e168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103870": "\nundefined8 FUN_00103870(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103850(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010cf88)();\n  return iVar1;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010cef8)();\n  return pvVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010ce68)();\n  return sVar1;\n}\n\n", 
    "00102420": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010cff8)();\n  return;\n}\n\n", 
    "00105370": "\nvoid FUN_00105370(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d200;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00106460": "\nvoid FUN_00106460(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_001064bb;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_001064bb:\n                    /* WARNING: Subroutine does not return */\n      FUN_001065b0(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_001063f0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "001069a0": "\nint FUN_001069a0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010e170": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_0010ceb8)();\n  return;\n}\n\n", 
    "0010e050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102f40": "\nvoid thunk_FUN_00102ec0(void)\n\n{\n  FUN_00102ec0();\n  return;\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint puts(char *__s)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_puts_0010ce28)();\n  return iVar1;\n}\n\n", 
    "00105a10": "\nvoid FUN_00105a10(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105a00(0,param_1,param_2);\n  return;\n}\n\n", 
    "001061a0": "\nvoid FUN_001061a0(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00105d50();\n  return;\n}\n\n", 
    "0010e178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001063e0": "\nvoid thunk_FUN_00106390(void)\n\n{\n  FUN_00106390();\n  return;\n}\n\n", 
    "0010e058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103620": "\nvoid FUN_00103620(void)\n\n{\n  long lVar1;\n  \n  lVar1 = FUN_00103640();\n  if (lVar1 != 0) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001065b0();\n}\n\n", 
    "00103fb0": "\nulong FUN_00103fb0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104437:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00104459;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_001049f6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_001043af;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104437;\n    }\n  case 1:\n    bVar1 = false;\nLAB_001043af:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00103e80(&DAT_00108a11,param_5);\n      local_78 = (char *)FUN_00103e80(&DAT_00108a01);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104100:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00104960_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x001048fb;\n          goto LAB_001046eb;\n        default:\nswitchD_00104810_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00106760(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00104be8;\n              }\n              if (lVar10 == -2) goto joined_r0x00104ffa;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_001045d0;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00104be8;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00104371;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_001048b8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_001048b8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_001048b8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_001045c7;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_001045b4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_001045b4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_001042d8;\n          goto LAB_001045c7;\n        case 0x23:\n        case 0x7e:\nLAB_001045ab:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_001045b4;\n          goto LAB_001042d5;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00104810_caseD_25;\n        case 0x27:\nswitchD_00104810_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_001042d8;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x001042fb;\n          }\n          goto LAB_001045d0;\n        case 0x3f:\nswitchD_00104810_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_00104f5e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_001042d8;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x001042fb;\n          }\n          goto LAB_001045d0;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00104208_caseD_5c;\n          if (!bVar20) {\nLAB_00104848:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00104860;\n          }\n          goto LAB_001045d0;\n        case 0x7b:\n        case 0x7d:\nswitchD_00104810_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_001045ab;\nLAB_001042d5:\n          bVar23 = false;\n          goto LAB_001042d8;\n        }\nLAB_001046e0:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_001046eb:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_001042f8;\n          goto LAB_00104220;\n        }\nLAB_00104720:\n        bVar21 = false;\n        goto joined_r0x00104731;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00104940;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00104208_caseD_0;\n          default:\n            goto switchD_00104810_caseD_1;\n          case 7:\n            goto switchD_00104960_caseD_7;\n          case 8:\n            goto switchD_00104960_caseD_8;\n          case 9:\n            goto switchD_00104208_caseD_9;\n          case 10:\n            goto switchD_00104960_caseD_a;\n          case 0xb:\n            goto switchD_00104960_caseD_b;\n          case 0xc:\n            goto switchD_00104960_caseD_c;\n          case 0xd:\n            goto switchD_00104960_caseD_d;\n          case 0x20:\n            goto LAB_00104989;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00104208_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00104971;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00104218;\n          case 0x27:\n            goto switchD_00104810_caseD_27;\n          case 0x3f:\n            goto switchD_00104810_caseD_3f;\n          case 0x5c:\n            goto switchD_00104208_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00104810_caseD_7b;\n          }\n        }\n        goto LAB_001045de;\n      }\nLAB_00104940:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00104960_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00104208_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x001042fb;\n            }\nLAB_00104d9b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_00104d9b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00104dd8;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x001042fb;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_001045d0;\n      default:\n        bVar23 = false;\n        goto switchD_00104810_caseD_1;\n      case 7:\nswitchD_00104960_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00104960_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00104208_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_001046e0;\n      case 10:\nswitchD_00104960_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00104720;\n      case 0xb:\nswitchD_00104960_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00104720;\n      case 0xc:\nswitchD_00104960_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00104960_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00104720;\n      case 0x20:\n        bVar5 = false;\nLAB_00104989:\n        uVar15 = 0x20;\n        goto LAB_00104218;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00104208_caseD_21:\n        bVar22 = false;\n        goto LAB_001042d5;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00104971:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_001042d8;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00104220;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00104218:\n        bVar22 = false;\n        goto LAB_00104220;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00104810_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00104810_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00104208_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00104848;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_001046e0;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00104810_caseD_7b;\n      }\n      if (bVar20) goto LAB_00104740;\n      bVar21 = false;\n      goto LAB_00104296;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_001045c7:\n      param_5 = 2;\nLAB_001045d0:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_001045de:\n      uVar13 = FUN_00103fb0(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00104618;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105065:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00104618:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00103fb0(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00104618;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105065;\nLAB_001049f6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00104459:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x001048fb:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104100;\nswitchD_00104f5e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00104dd8:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x001042fb;\n    goto LAB_00104220;\n  }\n  goto LAB_001045de;\njoined_r0x00104ffa:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00104be8:\n  if (1 < uVar17) {\nLAB_00104bf2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_001045d0;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_001042a8;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00104860;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00104371:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00104bf2;\n  }\nswitchD_00104810_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_001042d8:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00104220:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x001042fb;\n  }\n  else {\nLAB_001042f8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x001042fb:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00104860:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_001042a8;\n    }\n  }\njoined_r0x00104731:\n  if (bVar20) {\nLAB_00104740:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_001045d0;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00104296:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_001042a8:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104100;\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010cdf0)();\n  return;\n}\n\n", 
    "0010e1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010cf10)();\n  return iVar1;\n}\n\n", 
    "00102570": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010ce80)();\n  return;\n}\n\n", 
    "00107220": "\nvoid FUN_00107220(long param_1,undefined8 param_2)\n\n{\n  *(undefined8 *)(param_1 + 8) = param_2;\n  return;\n}\n\n", 
    "00106250": "\nvoid FUN_00106250(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_001061c0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106ac0": "\nvoid FUN_00106ac0(undefined8 param_1)\n\n{\n  undefined8 *puVar1;\n  \n  puVar1 = (undefined8 *)FUN_00106390(0x18);\n  *puVar1 = param_1;\n  puVar1[2] = 0;\n  puVar1[1] = 0;\n  return;\n}\n\n", 
    "0010e1f8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105af0": "\nvoid FUN_00105af0(char *param_1,uint *param_2)\n\n{\n  open(param_1,*param_2 & 0xffffff3c | 0xc2,0x180);\n  return;\n}\n\n", 
    "001034c0": "\nvoid FUN_001034c0(undefined8 param_1)\n\n{\n  DAT_0010d0d8 = param_1;\n  return;\n}\n\n", 
    "001056a0": "\nvoid FUN_001056a0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103800(auStack_58);\n  FUN_00105170(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001068b0": "\nbool FUN_001068b0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010e140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107b00": "\nvoid FUN_00107b00(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0010d008);\n  return;\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fread_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fread_unlocked_0010ce40)();\n  return sVar1;\n}\n\n", 
    "00106b30": "\nulong FUN_00106b30(undefined8 *param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  undefined8 uVar2;\n  ulong uVar3;\n  long lVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  long in_FS_OFFSET;\n  undefined auVar8 [16];\n  undefined local_48 [8];\n  long local_40;\n  \n  uVar1 = param_2 + 1;\n  uVar6 = param_1[1];\n  uVar7 = param_1[2];\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar2 = *param_1;\n  while( true ) {\n    uVar5 = uVar7;\n    uVar3 = uVar6;\n    if (uVar7 < param_2) {\n      do {\n        lVar4 = FUN_00106ab0(uVar5);\n        uVar5 = lVar4 + 0xffU;\n      } while (lVar4 + 0xffU < param_2);\n      FUN_00107240(uVar2,local_48);\n      do {\n        auVar8 = FUN_00106ab0(uVar6);\n        uVar6 = (ulong)*SUB168(auVar8 >> 0x40,0) + SUB168(auVar8,0);\n        lVar4 = FUN_00106ab0(uVar7);\n        uVar7 = lVar4 + 0xff;\n        uVar3 = uVar6;\n      } while (uVar7 < param_2);\n    }\n    if (uVar7 == param_2) break;\n    uVar5 = (uVar7 - param_2) % uVar1;\n    uVar6 = uVar3 % uVar1;\n    if (uVar3 <= uVar7 - uVar5) {\n      param_1[1] = uVar3 / uVar1;\n      param_1[2] = (uVar7 - param_2) / uVar1;\nLAB_00106c27:\n      if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      return uVar6;\n    }\n    uVar7 = uVar5 - 1;\n  }\n  param_1[2] = 0;\n  param_1[1] = 0;\n  uVar6 = uVar3;\n  goto LAB_00106c27;\n}\n\n", 
    "001072c0": "\nundefined8 FUN_001072c0(long param_1,uint param_2)\n\n{\n  return *(undefined8 *)(param_1 + (ulong)(param_2 & 0x7f8));\n}\n\n", 
    "00105a40": "\nulong FUN_00105a40(char *param_1,ulong param_2)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strspn(param_1,\"X\");\n  return sVar1 & 0xffffffffffffff00 | (ulong)(param_2 <= sVar1);\n}\n\n", 
    "0010e148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint remove(char *__filename)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106920": "\nbool FUN_00106920(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___lxstat_0010ce78)();\n  return iVar1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010cde8)();\n  return;\n}\n\n", 
    "00105830": "\nvoid FUN_00105830(undefined8 param_1,char param_2)\n\n{\n  FUN_001057a0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "0010e0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010cf08)();\n  return pvVar1;\n}\n\n", 
    "00106ab0": "\nlong FUN_00106ab0(long param_1)\n\n{\n  return param_1 << 8;\n}\n\n", 
    "00105ae0": "\nvoid FUN_00105ae0(char *param_1)\n\n{\n  mkdir(param_1,0x1c0);\n  return;\n}\n\n", 
    "0010e0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105390": "\nuint FUN_00105390(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d200;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "001068a0": "\nbool FUN_001068a0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getpid(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_getpid_0010ce38)();\n  return _Var1;\n}\n\n", 
    "001069c0": "\nint FUN_001069c0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00106980(*param_1);\n      bVar2 = FUN_00106980(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010e150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__gid_t getgid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a30": "\nvoid FUN_00105a30(undefined8 param_1)\n\n{\n  FUN_00105a20(0,param_1);\n  return;\n}\n\n", 
    "00106b20": "\nundefined8 FUN_00106b20(undefined8 *param_1)\n\n{\n  return *param_1;\n}\n\n", 
    "001072b0": "\nundefined8 FUN_001072b0(undefined8 param_1)\n\n{\n  return param_1;\n}\n\n", 
    "001061c0": "\nvoid FUN_001061c0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00105d50();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105700": "\nvoid FUN_00105700(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103800(auStack_68);\n  FUN_00105170(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103960": "\nundefined8 FUN_00103960(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001038d0(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00102750": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010cf70)();\n  return;\n}\n\n", 
    "0010e1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106430": "\nvoid FUN_00106430(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_001063f0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001065b0();\n}\n\n", 
    "00106ca0": "\nundefined4 FUN_00106ca0(undefined8 *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int *piVar3;\n  \n  uVar2 = FUN_00107260(*param_1);\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  FUN_00106c70(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "0010e128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t getppid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010cea0)();\n  return pcVar1;\n}\n\n", 
    "0010e0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__uid_t getuid(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010cfc0)();\n  return iVar1;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010cf30)();\n  return pcVar1;\n}\n\n", 
    "00106d10": "\nvoid FUN_00106d10(long param_1)\n\n{\n  undefined8 uVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  \n  if (param_1 != 0) {\n    uVar1 = FUN_00105a30();\n    piVar2 = __errno_location();\n    if (*piVar2 == 0) {\n      uVar3 = dcgettext(0,\"%s: end of file\",5);\n    }\n    else {\n      uVar3 = dcgettext(0,\"%s: read error\",5);\n    }\n    error(DAT_0010d018,*piVar2,uVar3,uVar1);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105d40": "\nvoid FUN_00105d40(void)\n\n{\n  FUN_00105b10();\n  return;\n}\n\n", 
    "001063b0": "\nvoid FUN_001063b0(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00106390();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_001065b0();\n}\n\n", 
    "0010e1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fopen(char *__filename,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001065f0": "\nint FUN_001065f0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010665f;\n    }\n    iVar1 = FUN_001066a0(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010665f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_mempcpy_0010cf68)();\n  return pvVar1;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0010ced8)();\n  return sVar1;\n}\n\n", 
    "0010e120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ce48)();\n  return;\n}\n\n", 
    "00107a80": "\nvoid FUN_00107a80(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010e000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106300": "\nvoid FUN_00106300(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010e1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e138": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105690": "\nvoid FUN_00105690(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105670(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010e1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010cf28)();\n  return iVar1;\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010ce98)();\n  return sVar1;\n}\n\n", 
    "001038d0": "\nundefined8 FUN_001038d0(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103870(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00102f00": "\nvoid FUN_00102f00(void)\n\n{\n  if (DAT_0010d0c8 == '\\0') {\n    if (PTR___cxa_finalize_0010cff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0010d008);\n    }\n    FUN_00102e90();\n    DAT_0010d0c8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001039f0": "\nundefined8\nFUN_001039f0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103960(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "001027e0": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010cfb8)();\n  return;\n}\n\n", 
    "0010e0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d30": "\nvoid FUN_00105d30(void)\n\n{\n  FUN_00105c90();\n  return;\n}\n\n", 
    "001053d0": "\nundefined4 FUN_001053d0(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d200;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "00103b50": "\nundefined8\nFUN_00103b50(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106940((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103aa0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010e130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputc_unlocked(int __c,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setvbuf(FILE *__stream,char *__buf,int __modes,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setvbuf_0010cf60)();\n  return iVar1;\n}\n\n", 
    "0010e010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strspn(char *__s,char *__accept)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strspn_0010ced0)();\n  return sVar1;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0010cf80)();\n  return iVar1;\n}\n\n", 
    "00103740": "\nvoid FUN_00103740(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0010d0e0 = pcVar1 + 1;\n    uVar3 = (long)DAT_0010d0e0 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0010d0e0;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0010d0e0 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102ec0": "\n/* WARNING: Removing unreachable block (ram,0x00102ee4) */\n/* WARNING: Removing unreachable block (ram,0x00102ef0) */\n\nvoid FUN_00102ec0(void)\n\n{\n  return;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010cef0)();\n  return iVar1;\n}\n\n", 
    "00102530": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ce60)();\n  return;\n}\n\n", 
    "00102fe0": "\nvoid FUN_00102fe0(undefined8 param_1,undefined8 param_2,undefined8 param_3,char param_4)\n\n{\n  FUN_00105c90(param_1,param_2,0,(param_4 != '\\0') * '\\x02',param_3);\n  return;\n}\n\n", 
    "0010e108": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __explicit_bzero_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001059c0": "\nvoid FUN_001059c0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001059b0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010cf40)();\n  return pvVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint gettimeofday(timeval *__tv,__timezone_ptr_t __tz)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_gettimeofday_0010ceb0)();\n  return iVar1;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkdir(char *__path,__mode_t __mode)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkdir_0010ce20)();\n  return iVar1;\n}\n\n", 
    "00105a00": "\nvoid FUN_00105a00(void)\n\n{\n  FUN_00105170();\n  return;\n}\n\n", 
    "0010e1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001064f0": "\nvoid FUN_001064f0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106460(param_1,param_2,1);\n  return;\n}\n\n", 
    "00102520": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ce58)();\n  return;\n}\n\n", 
    "00105910": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105910(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0010d200;\n  uStack_60 = uRam000000000010d208;\n  local_38 = DAT_0010d230;\n  local_58 = _DAT_0010d210;\n  uStack_50 = uRam000000000010d218;\n  local_48 = _DAT_0010d220;\n  uStack_40 = uRam000000000010d228;\n  FUN_001053f0(&local_68);\n  FUN_00105170(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102760": "\nvoid __explicit_bzero_chk(void)\n\n{\n  (*(code *)PTR___explicit_bzero_chk_0010cf78)();\n  return;\n}\n\n", 
    "00103850": "\nbool FUN_00103850(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_001069c0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010cee8)();\n  return iVar1;\n}\n\n", 
    "00105350": "\nundefined4 FUN_00105350(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d200;\n  }\n  return *param_1;\n}\n\n", 
    "00106560": "\nvoid FUN_00106560(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00106390(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "0010e118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106680": "\nvoid FUN_00106680(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_001066e0(param_1,0,1);\n  return;\n}\n\n", 
    "001024a0": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ce18)();\n  return;\n}\n\n", 
    "0010e1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __lxstat(int __ver,char *__filename,stat *__stat_buf)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001059b0": "\nvoid FUN_001059b0(void)\n\n{\n  FUN_00105910();\n  return;\n}\n\n", 
    "001026e0": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010cf38)();\n  return;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010cea8)();\n  return _Var1;\n}\n\n", 
    "00105b10": "\nint FUN_00105b10(char *param_1,int param_2,undefined8 param_3,code *param_4,long param_5)\n\n{\n  char cVar1;\n  int iVar2;\n  int *piVar3;\n  size_t sVar4;\n  long lVar5;\n  long lVar6;\n  int iVar7;\n  long lVar8;\n  char *pcVar9;\n  char *pcVar10;\n  int local_40;\n  \n  piVar3 = __errno_location();\n  iVar7 = *piVar3;\n  sVar4 = strlen(param_1);\n  if ((ulong)(param_2 + param_5) <= sVar4) {\n    lVar8 = sVar4 - (param_2 + param_5);\n    cVar1 = FUN_00105a40(param_1 + lVar8,param_5);\n    if (cVar1 != '\\0') {\n      lVar5 = FUN_00106af0(0,param_5);\n      if (lVar5 == 0) {\n        return -1;\n      }\n      local_40 = 0x3a2f8;\n      while( true ) {\n        pcVar9 = param_1 + lVar8;\n        if (param_5 != 0) {\n          do {\n            pcVar10 = pcVar9 + 1;\n            lVar6 = FUN_00106b30(lVar5,0x3d);\n            *pcVar9 = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\"[lVar6];\n            pcVar9 = pcVar10;\n          } while (param_1 + lVar8 + param_5 != pcVar10);\n        }\n        iVar2 = (*param_4)(param_1,param_3);\n        if (-1 < iVar2) break;\n        if (*piVar3 != 0x11) {\n          iVar2 = -1;\n          iVar7 = *piVar3;\n          goto LAB_00105c36;\n        }\n        local_40 = local_40 + -1;\n        if (local_40 == 0) {\n          FUN_00106ca0(lVar5);\n          *piVar3 = 0x11;\n          return -1;\n        }\n      }\n      *piVar3 = iVar7;\nLAB_00105c36:\n      FUN_00106ca0(lVar5);\n      *piVar3 = iVar7;\n      return iVar2;\n    }\n  }\n  *piVar3 = 0x16;\n  return -1;\n}\n\n", 
    "0010e1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d50": "\nundefined8\nFUN_00105d50(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_001091d2,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00106019;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00106019:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_001060bb;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_001060bb:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00105e6d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_00105e6d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "001053f0": "\nvoid FUN_001053f0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d200;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010cee0)();\n  return iVar1;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ce50)();\n  return iVar1;\n}\n\n", 
    "00102fc0": "\nvoid FUN_00102fc0(undefined8 param_1,undefined8 param_2,undefined8 param_3,char param_4)\n\n{\n  FUN_00105c90(param_1,param_2,0,(param_4 != '\\0') + '\\x01',param_3);\n  return;\n}\n\n", 
    "0010e110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}