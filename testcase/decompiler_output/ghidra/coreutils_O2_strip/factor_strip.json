{
    "001140c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\niconv_t iconv_open(char *__tocode,char *__fromcode)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001092d0": "\nulong FUN_001092d0(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00114018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108130": "\nvoid FUN_00108130(undefined8 *param_1)\n\n{\n  *param_1 = 0;\n  param_1[1] = 0;\n  return;\n}\n\n", 
    "00114020": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109350": "\nulong FUN_00109350(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00104e50": "\nvoid FUN_00104e50(ulong param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  undefined *puVar3;\n  ulong uVar4;\n  undefined *puVar5;\n  ulong uVar6;\n  undefined *puVar7;\n  ulong uVar8;\n  long lVar9;\n  int iVar10;\n  long in_FS_OFFSET;\n  bool bVar11;\n  undefined auStack_38 [24];\n  long lStack_20;\n  \n  if (param_1 == 0) {\n    uVar2 = 0;\n  }\n  else {\n    iVar10 = 0x40;\n    lVar9 = 0;\n    uVar4 = 1000000000;\n    uVar8 = param_1 % 1000000000;\n    uVar2 = 0;\n    do {\n      lVar9 = lVar9 * 2;\n      uVar6 = uVar4 << 0x3f;\n      uVar4 = uVar4 >> 1;\n      uVar2 = uVar2 >> 1 | uVar6;\n      if ((uVar4 < uVar8) || ((uVar4 == uVar8 && (uVar2 <= param_2)))) {\n        lVar9 = lVar9 + 1;\n        bVar11 = param_2 < uVar2;\n        param_2 = param_2 - uVar2;\n        uVar8 = (uVar8 - uVar4) - (ulong)bVar11;\n      }\n      iVar10 = iVar10 + -1;\n    } while (iVar10 != 0);\n    FUN_00104e50(param_1 / 1000000000,lVar9);\n    uVar2 = 9;\n  }\n  lStack_20 = *(long *)(in_FS_OFFSET + 0x28);\n  pvVar1 = (void *)FUN_00105740(param_2,auStack_38);\n  puVar7 = DAT_001130f8;\n  uVar4 = 0x14 - ((long)pvVar1 - (long)auStack_38);\n  if (uVar4 < uVar2) {\n    lVar9 = ((long)pvVar1 - (long)auStack_38) + -0x14;\n    puVar3 = DAT_001130f8 + lVar9 + uVar2;\n    puVar5 = DAT_001130f8;\n    do {\n      *puVar5 = 0x30;\n      puVar5 = puVar5 + 1;\n    } while (puVar5 != puVar3);\n    puVar7 = puVar7 + lVar9 + uVar2;\n  }\n  pvVar1 = memcpy(puVar7,pvVar1,uVar4);\n  DAT_001130f8 = (undefined *)((long)pvVar1 + uVar4);\n  if (lStack_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102a30": "\nulong FUN_00102a30(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar1 = param_2;\n  if ((param_2 & 1) == 0) {\n    uVar1 = param_1;\n    param_1 = param_2;\n  }\n  if (param_1 == 0) {\n    return uVar1;\n  }\n  uVar1 = uVar1 >> 1;\n  while( true ) {\n    do {\n      uVar2 = param_1;\n      param_1 = uVar2 >> 1;\n    } while ((uVar2 & 1) == 0);\n    uVar3 = (uVar2 >> 1) - uVar1;\n    if (uVar3 == 0) break;\n    uVar2 = (long)uVar3 >> 0x3f;\n    uVar1 = uVar1 + (uVar3 & uVar2);\n    param_1 = (uVar3 ^ uVar2) - uVar2;\n  }\n  return uVar2 | 1;\n}\n\n", 
    "00102b50": "\nlong FUN_00102b50(ulong param_1,ulong param_2,ulong param_3,long param_4)\n\n{\n  long lVar1;\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar2 = SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0);\n  uVar3 = SUB168(ZEXT816((ulong)(SUB168(ZEXT816(param_1) * ZEXT816(param_2),0) * param_4)) *\n                 ZEXT816(param_3) >> 0x40,0);\n  lVar1 = uVar2 - uVar3;\n  if (uVar2 < uVar3) {\n    lVar1 = param_3 + lVar1;\n  }\n  return lVar1;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_00112f90)();\n  return sVar1;\n}\n\n", 
    "00107a40": "\nuint FUN_00107a40(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00113220;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "001080b0": "\nvoid FUN_001080b0(void)\n\n{\n  FUN_00107820();\n  return;\n}\n\n", 
    "001140c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107b60": "\nundefined8 FUN_00107b60(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_00113220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00106660(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00108e70(lVar3 + 1);\n  FUN_00106660(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "001141e8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102940": "\nvoid FUN_00102940(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_00112fd8)\n            (FUN_001027c0,unaff_retaddr,&stack0x00000008,FUN_0010adc0,FUN_0010ae30,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001140d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strnlen(char *__string,size_t __maxlen)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102bf0": "\nulong FUN_00102bf0(long param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                  uint param_5,long param_6)\n\n{\n  long lVar1;\n  uint uVar2;\n  long lVar3;\n  ulong in_R11;\n  ulong uVar4;\n  \n  lVar1 = FUN_00102b80(param_3,param_4,param_1,param_2,param_6);\n  lVar3 = param_1 - param_6;\n  uVar4 = in_R11 & 0xffffffffffffff00 | (ulong)(lVar1 == lVar3 || param_6 == lVar1);\n  if ((lVar1 != lVar3 && param_6 != lVar1) && (1 < param_5)) {\n    uVar2 = 1;\n    while( true ) {\n      lVar1 = FUN_00102b50(lVar1,lVar1,param_1,param_2);\n      if (lVar3 == lVar1) break;\n      if ((param_6 == lVar1) || (uVar2 = uVar2 + 1, param_5 == uVar2)) goto LAB_00102c6a;\n    }\n    uVar4 = 1;\n  }\nLAB_00102c6a:\n  return uVar4 & 0xffffffff;\n}\n\n", 
    "001027a8": "\nvoid FUN_001027a8(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_00112df8)();\n  return;\n}\n\n", 
    "00114028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027a3": "\nvoid FUN_001027a3(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00114148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107ae0": "\nvoid FUN_00107ae0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_00113220;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00106660(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001029e0": "\nvoid FUN_001029e0(void)\n\n{\n  if (DAT_001130e8 == '\\0') {\n    if (PTR___cxa_finalize_00112ff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_00113008);\n    }\n    FUN_00102970();\n    DAT_001130e8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "001141f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001098a0": "\nulong FUN_001098a0(void *param_1,void *param_2,void **param_3)\n\n{\n  char cVar1;\n  void *pvVar2;\n  void *pvVar3;\n  int iVar4;\n  void **ppvVar5;\n  void **ppvVar6;\n  void **ppvVar7;\n  void **ppvVar8;\n  ulong uVar9;\n  void **ppvVar10;\n  void *pvVar11;\n  long lVar12;\n  void *pvVar13;\n  long in_FS_OFFSET;\n  void *local_f8;\n  void **local_f0;\n  byte local_e1;\n  void *local_e0;\n  undefined *local_d8;\n  void *local_d0;\n  undefined local_c8 [4];\n  undefined8 local_c4;\n  undefined local_bc;\n  void *local_b8;\n  long local_b0;\n  char local_a8;\n  int local_a4;\n  undefined local_88 [4];\n  undefined8 local_84;\n  undefined local_7c;\n  void *local_78;\n  void *local_70;\n  byte local_68;\n  int local_64;\n  long local_40;\n  \n  ppvVar7 = &local_f8;\n  ppvVar10 = &local_f8;\n  ppvVar8 = &local_f8;\n  ppvVar6 = &local_f8;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_f8 = param_1;\n  local_f0 = param_3;\n  local_e0 = (void *)FUN_0010ad10(param_2);\n  ppvVar5 = &local_f8;\n  if ((-1 < SUB168(ZEXT816(0x38) * ZEXT816(local_e0),0)) &&\n     (ppvVar5 = &local_f8, SUB168(ZEXT816(0x38) * ZEXT816(local_e0) >> 0x40,0) == 0)) {\n    if ((ulong)((long)local_e0 * 0x38) < 0xfa1) {\n      uVar9 = (long)local_e0 * 0x38 + 0x36;\n      ppvVar8 = &local_f8;\n      while (ppvVar7 != (void **)((long)&local_f8 - (uVar9 & 0xfffffffffffff000))) {\n        ppvVar10 = (void **)((long)ppvVar8 + -0x1000);\n        *(undefined8 *)((long)ppvVar8 + -8) = *(undefined8 *)((long)ppvVar8 + -8);\n        ppvVar7 = (void **)((long)ppvVar8 + -0x1000);\n        ppvVar8 = (void **)((long)ppvVar8 + -0x1000);\n      }\n      uVar9 = (ulong)((uint)uVar9 & 0xff0);\n      lVar12 = -uVar9;\n      ppvVar8 = (void **)((long)ppvVar10 + lVar12);\n      ppvVar6 = (void **)((long)ppvVar10 + lVar12);\n      if (uVar9 != 0) {\n        *(undefined8 *)((long)ppvVar10 + -8) = *(undefined8 *)((long)ppvVar10 + -8);\n      }\n      ppvVar10 = (void **)(((ulong)((long)ppvVar10 + lVar12 + 0xf) & 0xfffffffffffffff0) + 0x1f &\n                          0xffffffffffffffe0);\n      pvVar3 = local_e0;\n    }\n    else {\n      ppvVar10 = (void **)FUN_0010abf0();\n      pvVar3 = local_e0;\n    }\n    ppvVar5 = ppvVar6;\n    local_e0 = pvVar3;\n    if (ppvVar10 != (void **)0x0) {\n      local_88[0] = 0;\n      local_d8 = local_88;\n      local_84 = 0;\n      ppvVar6 = ppvVar10;\n      local_78 = param_2;\n      while( true ) {\n        local_7c = 0;\n        *(undefined8 *)((long)ppvVar8 + -8) = 0x109a37;\n        FUN_0010a2a0(local_d8);\n        local_e1 = local_68;\n        if ((local_68 != 0) && (local_64 == 0)) break;\n        *(undefined8 *)((long)ppvVar8 + -8) = 0x109a1f;\n        FUN_0010ac90(ppvVar6,&local_78);\n        local_78 = (void *)((long)local_78 + (long)local_70);\n        ppvVar6 = ppvVar6 + 6;\n      }\n      lVar12 = 0;\n      ppvVar10[(long)pvVar3 * 6 + 1] = (void *)0x1;\n      local_d0 = (void *)0x2;\n      ppvVar6 = ppvVar10;\n      if ((void *)0x2 < local_e0) {\nLAB_00109a78:\n        cVar1 = *(char *)(ppvVar6 + 8);\n        do {\n          ppvVar5 = ppvVar10 + lVar12 * 6;\n          if ((cVar1 == '\\0') || (*(char *)(ppvVar5 + 2) == '\\0')) {\n            pvVar11 = ppvVar6[7];\n            if (pvVar11 == ppvVar5[1]) {\n              pvVar13 = *ppvVar5;\n              pvVar2 = ppvVar6[6];\n              *(undefined8 *)((long)ppvVar8 + -8) = 0x109ac2;\n              iVar4 = memcmp(pvVar2,pvVar13,(size_t)pvVar11);\n              if (iVar4 == 0) goto LAB_00109ac6;\n            }\n          }\n          else if (*(int *)((long)ppvVar6 + 0x44) == *(int *)((long)ppvVar5 + 0x14)) {\nLAB_00109ac6:\n            lVar12 = lVar12 + 1;\n            ppvVar10[(long)((long)pvVar3 * 6 + (long)local_d0)] = (void *)((long)local_d0 - lVar12);\n            goto LAB_00109adb;\n          }\n          if (lVar12 == 0) goto LAB_00109c90;\n          lVar12 = lVar12 - (long)ppvVar10[(long)pvVar3 * 6 + lVar12];\n        } while( true );\n      }\nLAB_00109af7:\n      local_88[0] = 0;\n      pvVar11 = (void *)0x0;\n      local_c8[0] = 0;\n      *local_f0 = (void *)0x0;\n      local_c4 = 0;\n      local_b8 = local_f8;\n      local_bc = 0;\n      local_78 = local_f8;\n      local_84 = 0;\n      local_7c = 0;\n      do {\n        while( true ) {\n          *(undefined8 *)((long)ppvVar8 + -8) = 0x109b5c;\n          FUN_0010a2a0(local_d8);\n          if (local_68 != 0) break;\n          ppvVar6 = ppvVar10 + (long)pvVar11 * 6;\nLAB_00109bcc:\n          pvVar13 = ppvVar6[1];\n          if (pvVar13 == local_70) {\n            pvVar2 = *ppvVar6;\n            *(undefined8 *)((long)ppvVar8 + -8) = 0x109c2c;\n            iVar4 = memcmp(pvVar2,local_78,(size_t)pvVar13);\n            if (iVar4 == 0) goto LAB_00109b80;\n          }\njoined_r0x00109c37:\n          if (pvVar11 == (void *)0x0) {\n            *(undefined8 *)((long)ppvVar8 + -8) = 0x109be3;\n            FUN_0010a2a0(local_c8);\n            if ((local_a8 != '\\0') && (local_a4 == 0)) {\n                    /* WARNING: Subroutine does not return */\n              *(code **)((long)ppvVar8 + -8) = FUN_001027a3;\n              abort();\n            }\n            local_bc = 0;\n            local_b8 = (void *)((long)local_b8 + local_b0);\n            local_7c = 0;\n            local_78 = (void *)((long)local_78 + (long)local_70);\n          }\n          else {\n            pvVar13 = ppvVar10[(long)((long)pvVar3 * 6 + (long)pvVar11)];\n            pvVar11 = (void *)((long)pvVar11 - (long)pvVar13);\n            for (; pvVar13 != (void *)0x0; pvVar13 = (void *)((long)pvVar13 + -1)) {\n              *(undefined8 *)((long)ppvVar8 + -8) = 0x109c77;\n              FUN_0010a2a0(local_c8);\n              if ((local_a8 != '\\0') && (local_a4 == 0)) {\n                uVar9 = FUN_0010279e();\n                return uVar9;\n              }\n              local_bc = 0;\n              local_b8 = (void *)((long)local_b8 + local_b0);\n            }\n          }\n        }\n        if (local_64 == 0) goto LAB_00109baa;\n        ppvVar6 = ppvVar10 + (long)pvVar11 * 6;\n        if (*(char *)(ppvVar6 + 2) == '\\0') goto LAB_00109bcc;\n        if (*(int *)((long)ppvVar6 + 0x14) != local_64) goto joined_r0x00109c37;\nLAB_00109b80:\n        local_7c = 0;\n        pvVar11 = (void *)((long)pvVar11 + 1);\n        local_78 = (void *)((long)local_78 + (long)local_70);\n      } while (local_e0 != pvVar11);\n      *local_f0 = local_b8;\nLAB_00109baa:\n      *(undefined8 *)((long)ppvVar8 + -8) = 0x109bb2;\n      FUN_0010ac30(ppvVar10);\n      goto LAB_00109997;\n    }\n  }\n  ppvVar8 = ppvVar5;\n  local_e1 = 0;\nLAB_00109997:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(undefined **)((long)ppvVar8 + -8) = &UNK_00109ca5;\n    __stack_chk_fail();\n  }\n  return (ulong)local_e1;\nLAB_00109c90:\n  ppvVar10[(long)((long)pvVar3 * 6 + (long)local_d0)] = local_d0;\nLAB_00109adb:\n  local_d0 = (void *)((long)local_d0 + 1);\n  ppvVar6 = ppvVar6 + 6;\n  if (local_e0 == local_d0) goto LAB_00109af7;\n  goto LAB_00109a78;\n}\n\n", 
    "00102a20": "\nvoid thunk_FUN_001029a0(void)\n\n{\n  FUN_001029a0();\n  return;\n}\n\n", 
    "00114030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114150": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00109240": "\nbool FUN_00109240(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "00109000": "\nvoid FUN_00109000(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109090();\n}\n\n", 
    "001140d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001140a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strdup(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102970": "\n/* WARNING: Removing unreachable block (ram,0x00102983) */\n/* WARNING: Removing unreachable block (ram,0x0010298f) */\n\nvoid FUN_00102970(void)\n\n{\n  return;\n}\n\n", 
    "00108830": "\nundefined8\nFUN_00108830(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010ecdb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_00108af9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_00108af9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_00108b9b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_00108b9b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010894d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010894d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00106530": "\nchar * FUN_00106530(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_001094e0();\n    iVar1 = FUN_00106480(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00106480(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_0010e587;\n      }\n      else {\n        pcVar2 = &DAT_0010e584;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010e58b;\n    }\n    else {\n      pcVar2 = &DAT_0010e580;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "001092b0": "\nbool FUN_001092b0(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00108150": "\nlong FUN_00108150(FILE *param_1,undefined *param_2,long param_3,long *param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  long lVar3;\n  undefined *extraout_RDX;\n  undefined *puVar4;\n  long lVar5;\n  long in_FS_OFFSET;\n  long local_70;\n  undefined local_68 [16];\n  undefined local_58 [16];\n  long local_40;\n  \n  puVar4 = param_2 + param_3;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = (undefined  [16])0x0;\n  local_58 = (undefined  [16])0x0;\n  if (param_3 != 0) {\n    do {\n      FUN_00108110(*param_2,local_68);\n      param_2 = param_2 + 1;\n    } while (param_2 != puVar4);\n  }\n  iVar2 = getc_unlocked(param_1);\n  while (-1 < iVar2) {\n    cVar1 = FUN_001080f0((long)iVar2,local_68);\n    if (cVar1 == '\\0') {\n      local_70 = *param_4;\n      lVar3 = param_4[1];\n      lVar5 = 0;\n      goto LAB_00108249;\n    }\n    iVar2 = getc_unlocked(param_1);\n  }\n  goto LAB_001082a8;\nLAB_00108249:\n  do {\n    if (local_70 != lVar5) {\n      puVar4 = (undefined *)(lVar3 + lVar5);\n      if (-1 < iVar2) goto LAB_0010821a;\nLAB_00108270:\n      *puVar4 = 0;\n      param_4[1] = lVar3;\n      *param_4 = local_70;\n      goto LAB_0010827f;\n    }\n    lVar3 = FUN_00108f40(lVar3,&local_70,1);\n    puVar4 = (undefined *)(lVar3 + lVar5);\n    if (iVar2 < 0) goto LAB_00108270;\nLAB_0010821a:\n    cVar1 = FUN_001080f0((long)iVar2,local_68);\n    puVar4 = extraout_RDX;\n    if (cVar1 != '\\0') goto LAB_00108270;\n    *extraout_RDX = (char)iVar2;\n    lVar5 = lVar5 + 1;\n    iVar2 = getc_unlocked(param_1);\n  } while ((-1 < iVar2) || (lVar5 != 0));\nLAB_001082a8:\n  lVar5 = -1;\nLAB_0010827f:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_00112f68)();\n  return pvVar1;\n}\n\n", 
    "001037a0": "\nulong FUN_001037a0(ulong *param_1,ulong param_2,ulong param_3,ulong param_4,ulong param_5)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  bool bVar3;\n  \n  if ((param_5 & 1) == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"b0 & 1\",\"src/factor.c\",0x1e3,\"gcd2_odd\");\n  }\n  if ((param_3 | param_2) == 0) {\n    *param_1 = param_4;\n    return param_5;\n  }\n  for (uVar2 = param_3 & 1; uVar2 == 0; uVar2 = uVar2 & 1) {\n    uVar2 = param_3 >> 1;\n    param_3 = param_2 << 0x3f | uVar2;\n    param_2 = param_2 >> 1;\n  }\n  while ((param_4 | param_2) != 0) {\n    while ((param_2 <= param_4 && ((param_3 <= param_5 || (param_4 != param_2))))) {\n      if ((param_4 <= param_2) && ((param_5 <= param_3 || (param_4 != param_2)))) {\n        *param_1 = param_2;\n        return param_3;\n      }\n      bVar3 = param_5 < param_3;\n      param_5 = param_5 - param_3;\n      uVar2 = (param_4 - param_2) - (ulong)bVar3;\n      do {\n        param_4 = uVar2 >> 1;\n        uVar1 = param_5 >> 1;\n        param_5 = uVar2 << 0x3f | uVar1;\n        uVar2 = param_4;\n      } while ((uVar1 & 1) == 0);\n      if ((param_4 | param_2) == 0) goto LAB_0010383f;\n    }\n    bVar3 = param_3 < param_5;\n    param_3 = param_3 - param_5;\n    uVar2 = (param_2 - param_4) - (ulong)bVar3;\n    do {\n      uVar1 = param_3 >> 1;\n      param_2 = uVar2 >> 1;\n      param_3 = uVar2 << 0x3f | uVar1;\n      uVar2 = param_2;\n    } while ((uVar1 & 1) == 0);\n  }\nLAB_0010383f:\n  *param_1 = 0;\n  uVar2 = FUN_00102a30();\n  return uVar2;\n}\n\n", 
    "00114118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107f00": "\nvoid FUN_00107f00(undefined8 param_1)\n\n{\n  FUN_00107ee0(param_1,0x3a);\n  return;\n}\n\n", 
    "00109690": "\nvoid FUN_00109690(long *param_1,long param_2)\n\n{\n  param_1[3] = param_1[3] + param_2;\n  *param_1 = *param_1 + param_2;\n  return;\n}\n\n", 
    "00114000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001140a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001080d0": "\nvoid FUN_001080d0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001080b0(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00102720": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strdup(char *__s)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strdup_00112fa0)();\n  return pcVar1;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_wcwidth_00112f10)();\n  return iVar1;\n}\n\n", 
    "001140b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108e90": "\nvoid FUN_00108e90(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00108e70();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109090();\n}\n\n", 
    "001092c0": "\nbool FUN_001092c0(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "0010aa80": "\nint FUN_0010aa80(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010aaef;\n    }\n    iVar1 = FUN_0010ab30(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010aaef:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00114128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint wcwidth(wchar_t __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027c0": "\nbyte FUN_001027c0(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long lVar6;\n  \n  FUN_001057a0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_00102d00();\n  FUN_0010ae40(FUN_00105610);\n  FUN_0010ae40(FUN_00102c80);\n  while( true ) {\n    iVar3 = getopt_long(param_1,param_2,\"\",&PTR_s__debug_00112b20,0);\n    if (iVar3 == -1) {\n      lVar6 = (long)optind;\n      if (optind < param_1) {\n        bVar2 = 1;\n        do {\n          cVar1 = FUN_001050d0(param_2[lVar6]);\n          if (cVar1 == '\\0') {\n            bVar2 = 0;\n          }\n          lVar6 = lVar6 + 1;\n        } while ((int)lVar6 < param_1);\n      }\n      else {\n        bVar2 = FUN_001051d0();\n      }\n      return bVar2 ^ 1;\n    }\n    if (iVar3 == -0x82) break;\n    if (iVar3 != 0x80) {\n      if (iVar3 != -0x83) {\n                    /* WARNING: Subroutine does not return */\n        FUN_00105500(1);\n      }\n      uVar4 = FUN_00105b80(\"Niels Moller\",&DAT_0010b11a);\n      uVar5 = FUN_00105b80(\"Torbjorn Granlund\",&DAT_0010b135);\n      FUN_00108d30(stdout,\"factor\",\"GNU coreutils\",PTR_DAT_00113018,\"Paul Rubin\",uVar5,uVar4,0);\n                    /* WARNING: Subroutine does not return */\n      exit(0);\n    }\n    DAT_00113100 = 1;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00105500(0);\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswspace(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswspace_00112f60)();\n  return iVar1;\n}\n\n", 
    "001038b0": "\nvoid FUN_001038b0(ulong *param_1,ulong param_2,ulong param_3,ulong param_4,ulong param_5)\n\n{\n  long lVar1;\n  long lVar2;\n  byte bVar3;\n  ulong uVar4;\n  int iVar5;\n  ulong uVar6;\n  int iVar7;\n  bool bVar8;\n  \n  if (param_4 == 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"d1 != 0\",\"src/factor.c\",0x1a3,\"mod2\");\n  }\n  if (param_2 != 0) {\n    lVar1 = 0x3f;\n    if (param_4 != 0) {\n      for (; param_4 >> lVar1 == 0; lVar1 = lVar1 + -1) {\n      }\n    }\n    lVar2 = 0x3f;\n    if (param_2 != 0) {\n      for (; param_2 >> lVar2 == 0; lVar2 = lVar2 + -1) {\n      }\n    }\n    iVar7 = ((uint)lVar1 ^ 0x3f) - ((uint)lVar2 ^ 0x3f);\n    bVar3 = (byte)iVar7;\n    uVar6 = param_5 >> (0x40 - bVar3 & 0x3f) | param_4 << (bVar3 & 0x3f);\n    param_5 = param_5 << (bVar3 & 0x3f);\n    if (0 < iVar7) {\n      iVar5 = 0;\n      do {\n        if ((uVar6 < param_2) || ((uVar6 == param_2 && (param_5 <= param_3)))) {\n          bVar8 = param_3 < param_5;\n          param_3 = param_3 - param_5;\n          param_2 = (param_2 - uVar6) - (ulong)bVar8;\n        }\n        iVar5 = iVar5 + 1;\n        uVar4 = uVar6 << 0x3f;\n        uVar6 = uVar6 >> 1;\n        param_5 = param_5 >> 1 | uVar4;\n      } while (iVar7 != iVar5);\n    }\n    *param_1 = param_2;\n    return;\n  }\n  *param_1 = 0;\n  return;\n}\n\n", 
    "00114008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswalnum(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102c80": "\nvoid FUN_00102c80(void)\n\n{\n  long lVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  long lVar4;\n  \n  lVar4 = DAT_001130f8 - DAT_001130f0;\n  lVar1 = FUN_001056c0(1,DAT_001130f0,lVar4);\n  if (lVar1 == lVar4) {\n    DAT_001130f8 = DAT_001130f0;\n    return;\n  }\n  uVar2 = dcgettext(0,\"write error\",5);\n  piVar3 = __errno_location();\n  error(1,*piVar3,\"%s\",uVar2);\n  if (DAT_001130f0 != 0) {\n    return;\n  }\n  DAT_001130f0 = FUN_00108e70(0x400);\n  DAT_001130f8 = DAT_001130f0;\n  return;\n}\n\n", 
    "00109340": "\nbool FUN_00109340(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "00109220": "\nbool FUN_00109220(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001055f0": "\nvoid FUN_001055f0(undefined8 param_1)\n\n{\n  DAT_00113110 = param_1;\n  return;\n}\n\n", 
    "00109100": "\nlong FUN_00109100(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_0010a710();\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109090();\n    }\n  }\n  return lVar1;\n}\n\n", 
    "001140b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001141d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027ad": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001080c0": "\nvoid FUN_001080c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001080b0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00102710": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_00112f98)();\n  return;\n}\n\n", 
    "00105500": "\nvoid FUN_00105500(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_00113118;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [NUMBER]...\\n  or:  %s OPTION\\n\",5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"Print the prime factors of each specified integer NUMBER.  If none\\nare specified on the command line, read them from standard input.\\n\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00105260();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00105860": "\nuint FUN_00105860(char *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  byte bVar2;\n  int iVar3;\n  char *__s;\n  ushort **ppuVar4;\n  char *pcVar5;\n  size_t sVar6;\n  uint unaff_R15D;\n  long in_FS_OFFSET;\n  undefined local_c8 [4];\n  undefined8 local_c4;\n  undefined local_bc;\n  char *local_b8;\n  long local_b0;\n  char local_a8;\n  wint_t local_a4;\n  undefined local_88 [4];\n  undefined8 local_84;\n  undefined local_7c;\n  char *local_78;\n  long local_70;\n  char local_68;\n  int local_64;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __s = (char *)FUN_001084d0(param_2,2);\n  cVar1 = *param_1;\n  while ((cVar1 != '\\0' && (pcVar5 = (char *)FUN_00109cb0(param_1,__s), pcVar5 != (char *)0x0))) {\n    sVar6 = __ctype_get_mb_cur_max();\n    if (sVar6 < 2) {\n      sVar6 = strlen(__s);\n      if (((pcVar5 <= param_1) ||\n          (ppuVar4 = __ctype_b_loc(), (*(byte *)(*ppuVar4 + (byte)pcVar5[-1]) & 8) == 0)) &&\n         ((bVar2 = pcVar5[sVar6], bVar2 == 0 ||\n          (ppuVar4 = __ctype_b_loc(), (*(byte *)(*ppuVar4 + bVar2) & 8) == 0)))) {\n        unaff_R15D = 1;\n        goto LAB_00105aa3;\n      }\n      if (*pcVar5 == '\\0') break;\n      cVar1 = pcVar5[1];\n      param_1 = pcVar5 + 1;\n    }\n    else {\n      local_c8[0] = 0;\n      local_c4 = 0;\n      local_b8 = param_1;\n      if (param_1 < pcVar5) {\n        do {\n          local_bc = 0;\n          FUN_0010a2a0(local_c8);\n          if ((local_a8 != '\\0') && (local_a4 == 0)) goto FUN_00102780;\n          local_b8 = local_b8 + local_b0;\n          local_bc = 0;\n        } while (local_b8 < pcVar5);\n        if (local_a8 == '\\0') goto LAB_00105ad8;\n        iVar3 = iswalnum(local_a4);\n        unaff_R15D = unaff_R15D & 0xffffff00 | (uint)(iVar3 == 0);\n      }\n      else {\nLAB_00105ad8:\n        unaff_R15D = 1;\n      }\n      local_c8[0] = 0;\n      local_c4 = 0;\n      local_88[0] = 0;\n      local_84 = 0;\n      local_b8 = pcVar5;\n      local_78 = __s;\n      while( true ) {\n        local_7c = 0;\n        local_bc = 0;\n        FUN_0010a2a0(local_88);\n        if ((local_68 != '\\0') && (local_64 == 0)) break;\n        FUN_0010a2a0(local_c8);\n        if ((local_a8 != '\\0') && (local_a4 == 0)) {\nFUN_00102780:\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\n        local_b8 = local_b8 + local_b0;\n        local_78 = local_78 + local_70;\n      }\n      FUN_0010a2a0(local_c8);\n      if ((((local_a8 != '\\0') && (local_a4 == 0)) ||\n          ((local_a8 == '\\0' || (iVar3 = iswalnum(local_a4), iVar3 == 0)))) &&\n         ((char)unaff_R15D != '\\0')) goto LAB_00105aa3;\n      local_c4 = 0;\n      local_c8[0] = 0;\n      local_bc = 0;\n      local_b8 = pcVar5;\n      FUN_0010a2a0(local_c8);\n      if ((local_a8 != '\\0') && (local_a4 == 0)) break;\n      param_1 = pcVar5 + local_b0;\n      cVar1 = *param_1;\n    }\n  }\n  unaff_R15D = 0;\nLAB_00105aa3:\n  free(__s);\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return unaff_R15D;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00105740": "\nchar * FUN_00105740(ulong param_1,long param_2)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  \n  *(undefined *)(param_2 + 0x14) = 0;\n  pcVar2 = (char *)(param_2 + 0x14);\n  do {\n    pcVar2 = pcVar2 + -1;\n    *pcVar2 = (char)param_1 + (char)(param_1 / 10) * -10 + '0';\n    bVar1 = 9 < param_1;\n    param_1 = param_1 / 10;\n  } while (bVar1);\n  return pcVar2;\n}\n\n", 
    "0010a960": "\nchar * FUN_0010a960(char *param_1,char *param_2,char *param_3)\n\n{\n  int iVar1;\n  char *pcVar2;\n  iconv_t __cd;\n  int *piVar3;\n  \n  if ((*param_1 == '\\0') || (iVar1 = FUN_001093c0(param_2,param_3), iVar1 == 0)) {\n    pcVar2 = strdup(param_1);\n    if (pcVar2 == (char *)0x0) {\n      piVar3 = __errno_location();\n      *piVar3 = 0xc;\n    }\n    return pcVar2;\n  }\n  __cd = iconv_open(param_3,param_2);\n  if (__cd == (iconv_t)0xffffffffffffffff) {\n    return (char *)0x0;\n  }\n  pcVar2 = (char *)FUN_0010a710(param_1,__cd);\n  if (pcVar2 != (char *)0x0) {\n    iVar1 = iconv_close(__cd);\n    if (-1 < iVar1) {\n      return pcVar2;\n    }\n    piVar3 = __errno_location();\n    iVar1 = *piVar3;\n    free(pcVar2);\n    *piVar3 = iVar1;\n    return (char *)0x0;\n  }\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  iconv_close(__cd);\n  *piVar3 = iVar1;\n  return (char *)0x0;\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_00112ed8)();\n  return iVar1;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswcntrl_00112e48)();\n  return iVar1;\n}\n\n", 
    "00104770": "\nchar FUN_00104770(ulong param_1,ulong param_2)\n\n{\n  byte bVar1;\n  char cVar2;\n  ulong uVar3;\n  undefined8 uVar4;\n  ulong uVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  ulong uVar9;\n  ulong uVar10;\n  ulong uVar11;\n  long in_FS_OFFSET;\n  bool bVar12;\n  byte *pbStack_210;\n  ulong *puStack_1f0;\n  int iStack_1b0;\n  char local_1a9;\n  ulong uStack_1a8;\n  ulong uStack_1a0;\n  ulong uStack_198;\n  ulong uStack_190;\n  ulong uStack_188;\n  ulong uStack_180;\n  ulong uStack_178;\n  ulong uStack_170;\n  ulong uStack_168;\n  ulong uStack_160;\n  ulong uStack_158;\n  ulong uStack_150;\n  ulong uStack_148;\n  ulong auStack_140 [30];\n  byte bStack_4e;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0) {\n    local_1a9 = FUN_00103960(param_2);\n  }\n  else {\n    uVar10 = param_1 - (param_2 == 0);\n    uVar11 = param_2 - 1;\n    if (uVar11 == 0) {\n      lVar7 = 0;\n      if (uVar10 != 0) {\n        for (; (uVar10 >> lVar7 & 1) == 0; lVar7 = lVar7 + 1) {\n        }\n      }\n      uStack_1a0 = 0;\n      uStack_1a8 = uVar10 >> ((byte)lVar7 & 0x3f);\n      iStack_1b0 = (int)lVar7 + 0x40;\n    }\n    else {\n      lVar7 = 0;\n      if (uVar11 != 0) {\n        for (; (uVar11 >> lVar7 & 1) == 0; lVar7 = lVar7 + 1) {\n        }\n      }\n      iStack_1b0 = (int)lVar7;\n      bVar1 = (byte)lVar7;\n      uStack_1a8 = uVar10 << (0x40 - bVar1 & 0x3f) | uVar11 >> (bVar1 & 0x3f);\n      uStack_1a0 = uVar10 >> (bVar1 & 0x3f);\n    }\n    uVar9 = (ulong)(byte)(&DAT_0010b500)[(uint)(param_2 >> 1) & 0x7f];\n    lVar7 = uVar9 * 2 - uVar9 * uVar9 * param_2;\n    lVar7 = lVar7 * 2 - lVar7 * lVar7 * param_2;\n    lVar8 = lVar7 * 2 - lVar7 * lVar7 * param_2;\n    lVar7 = (ulong)(-(uint)(param_1 < 2) & 0x40) + 0x3f;\n    uStack_180 = (ulong)(param_1 >= 2);\n    uVar9 = (ulong)(param_1 < 2);\n    do {\n      uStack_188 = uVar9 * 2;\n      uStack_180 = uStack_180 * 2 | uVar9 >> 0x3f;\n      if ((param_1 < uStack_180) || ((param_1 == uStack_180 && (param_2 <= uStack_188)))) {\n        bVar12 = uStack_188 < param_2;\n        uStack_188 = uStack_188 - param_2;\n        uStack_180 = (uStack_180 - param_1) - (ulong)bVar12;\n      }\n      lVar7 = lVar7 + -1;\n      uVar9 = uStack_188;\n    } while (lVar7 != -1);\n    uStack_198 = uStack_188 * 2;\n    uStack_190 = uStack_180 * 2 + (ulong)CARRY8(uStack_188,uStack_188);\n    if ((param_1 < uStack_190) || ((uStack_190 == param_1 && (param_2 <= uStack_198)))) {\n      bVar12 = uStack_198 < param_2;\n      uStack_198 = uStack_198 - param_2;\n      uStack_190 = (uStack_190 - param_1) - (ulong)bVar12;\n    }\n    uStack_178 = param_2;\n    uStack_170 = param_1;\n    local_1a9 = FUN_00103620(&uStack_178,lVar8,&uStack_198,&uStack_1a8,iStack_1b0,&uStack_188);\n    if (local_1a9 != '\\0') {\n      FUN_001046a0(uVar10,uVar11,&uStack_148);\n      pbStack_210 = &DAT_0010e280;\n      uVar9 = 2;\n      do {\n        if (auStack_140[0] == 0) {\njoined_r0x0010499f:\n          if (bStack_4e != 0) {\nLAB_001049b2:\n            puStack_1f0 = &uStack_150;\n            lVar7 = 1;\n            do {\n              uVar5 = auStack_140[lVar7];\n              uStack_168 = uVar10 << 0x3f | uVar11 >> 1;\n              uStack_160 = uVar10 >> 1;\n              if (uVar5 != 2) {\n                uVar3 = (ulong)(byte)(&DAT_0010b500)[(uint)(uVar5 >> 1) & 0x7f];\n                lVar6 = uVar3 * 2 - uVar3 * uVar3 * uVar5;\n                lVar6 = lVar6 * 2 - lVar6 * lVar6 * uVar5;\n                lVar6 = lVar6 * 2 - lVar6 * lVar6 * uVar5;\n                uStack_168 = uVar11 * lVar6;\n                if (uVar10 < uVar5) {\n                  uStack_160 = 0;\n                }\n                else {\n                  uStack_160 = lVar6 * (uVar10 - SUB168(ZEXT816(uStack_168) * ZEXT816(uVar5) >> 0x40\n                                                        ,0));\n                }\n              }\n              uStack_158 = FUN_001034c0(puStack_1f0,&uStack_198,&uStack_168,&uStack_178,lVar8,\n                                        &uStack_188);\n              if (uStack_158 == uStack_188) {\n                if ((uint)bStack_4e <= (uint)lVar7) {\n                  bVar12 = uStack_150 != uStack_180;\n                  goto LAB_00104d51;\n                }\n                if (uStack_150 == uStack_180) goto LAB_00104b30;\n              }\n              else if ((uint)bStack_4e <= (uint)lVar7) break;\n              lVar7 = lVar7 + 1;\n            } while( true );\n          }\n          break;\n        }\n        uStack_160 = 0;\n        uVar5 = (ulong)(byte)(&DAT_0010b500)[(uint)(uStack_148 >> 1) & 0x7f];\n        lVar7 = uVar5 * 2 - uVar5 * uVar5 * uStack_148;\n        lVar7 = lVar7 * 2 - lVar7 * lVar7 * uStack_148;\n        uStack_168 = uVar11 * (lVar7 * 2 - lVar7 * lVar7 * uStack_148);\n        uStack_158 = FUN_001034c0(&uStack_150,&uStack_198,&uStack_168,&uStack_178,lVar8);\n        if (uStack_158 != uStack_188) goto joined_r0x0010499f;\n        if (bStack_4e == 0) {\n          bVar12 = uStack_150 != uStack_180;\nLAB_00104d51:\n          if (bVar12) break;\n        }\n        else if (uStack_150 != uStack_180) goto LAB_001049b2;\nLAB_00104b30:\n        uVar9 = uVar9 + *pbStack_210;\n        uVar5 = 0;\n        if (param_1 <= uVar9) {\n          uVar5 = uVar9;\n        }\n        lVar7 = (-(ulong)(uVar9 < param_1) & 0xffffffffffffffc0) + 0x7f;\n        uStack_190 = 0;\n        if (uVar9 < param_1) {\n          uStack_190 = uVar9;\n        }\n        do {\n          uStack_198 = uVar5 * 2;\n          uStack_190 = uStack_190 * 2 | uVar5 >> 0x3f;\n          if ((param_1 < uStack_190) || ((param_1 == uStack_190 && (param_2 <= uStack_198)))) {\n            bVar12 = uStack_198 < param_2;\n            uStack_198 = uStack_198 - param_2;\n            uStack_190 = (uStack_190 - param_1) - (ulong)bVar12;\n          }\n          lVar7 = lVar7 + -1;\n          uVar5 = uStack_198;\n        } while (lVar7 != -1);\n        cVar2 = FUN_00103620(&uStack_178,lVar8,&uStack_198,&uStack_1a8,iStack_1b0);\n        if (cVar2 == '\\0') {\n          local_1a9 = '\\0';\n          break;\n        }\n        pbStack_210 = pbStack_210 + 1;\n        if (pbStack_210 == &DAT_0010e51c) {\n          uVar4 = dcgettext(0,\"Lucas prime test failure.  This should not happen\",5);\n          error(0,0,uVar4);\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\n      } while( true );\n    }\n  }\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_1a9;\n}\n\n", 
    "001141a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010ac90": "\nvoid FUN_0010ac90(void **param_1,void **param_2)\n\n{\n  char cVar1;\n  void **__src;\n  void *pvVar2;\n  void *__n;\n  \n  __src = (void **)*param_2;\n  __n = param_2[1];\n  if (__src == param_2 + 3) {\n    pvVar2 = memcpy(param_1 + 3,__src,(size_t)__n);\n    __n = param_2[1];\n    *param_1 = pvVar2;\n  }\n  else {\n    *param_1 = __src;\n  }\n  cVar1 = *(char *)(param_2 + 2);\n  param_1[1] = __n;\n  *(char *)(param_1 + 2) = cVar1;\n  if (cVar1 != '\\0') {\n    *(undefined4 *)((long)param_1 + 0x14) = *(undefined4 *)((long)param_2 + 0x14);\n  }\n  return;\n}\n\n", 
    "00106150": "\nundefined8\nFUN_00106150(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001060a0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "0010ab70": "\nint FUN_0010ab70(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "00106390": "\nundefined8\nFUN_00106390(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001062c0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00105f00": "\nbool FUN_00105f00(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_001093c0(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "001079c0": "\nvoid FUN_001079c0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00113220;\n  }\n  FUN_00109040(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001056c0": "\nlong FUN_001056c0(undefined4 param_1,long param_2,long param_3)\n\n{\n  long lVar1;\n  int *piVar2;\n  long lVar3;\n  \n  if (param_3 == 0) {\n    lVar3 = 0;\n  }\n  else {\n    lVar3 = 0;\n    do {\n      lVar1 = FUN_00108460(param_1,param_2,param_3);\n      if (lVar1 == -1) {\n        return lVar3;\n      }\n      if (lVar1 == 0) {\n        piVar2 = __errno_location();\n        *piVar2 = 0x1c;\n        return lVar3;\n      }\n      lVar3 = lVar3 + lVar1;\n      param_2 = param_2 + lVar1;\n      param_3 = param_3 - lVar1;\n    } while (param_3 != 0);\n  }\n  return lVar3;\n}\n\n", 
    "001023f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_00112e08)();\n  return;\n}\n\n", 
    "00107a00": "\nundefined4 FUN_00107a00(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00113220;\n  }\n  return *param_1;\n}\n\n", 
    "00114100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105b80": "\nchar * FUN_00105b80(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  char *__s1;\n  char *pcVar3;\n  size_t sVar4;\n  size_t sVar5;\n  char *pcVar6;\n  char *__ptr;\n  void *pvVar7;\n  char *pcVar8;\n  undefined8 *puVar9;\n  char *pcVar10;\n  char *pcVar11;\n  \n  __s1 = (char *)dcgettext(0,param_1,5);\n  pcVar3 = (char *)FUN_001094e0();\n  iVar2 = FUN_001093c0(pcVar3,\"UTF-8\");\n  pcVar6 = __s1;\n  if (iVar2 == 0) {\n    iVar2 = strcmp(__s1,param_1);\n    if (param_2 != (char *)0x0) {\n      pcVar3 = param_2;\n      pcVar8 = (char *)0x0;\n      pcVar11 = param_2;\n      goto LAB_00105be2;\n    }\n    if (iVar2 == 0) {\n      return param_1;\n    }\n    cVar1 = FUN_00105860(__s1,param_1);\n    if (cVar1 != '\\0') {\n      return __s1;\n    }\n    pcVar8 = (char *)0x0;\n    pcVar10 = (char *)0x0;\nLAB_00105c7e:\n    sVar4 = strlen(__s1);\n    sVar5 = strlen(param_1);\n    pcVar6 = (char *)FUN_00108e70(sVar4 + 4 + sVar5);\n    __sprintf_chk(pcVar6,1,0xffffffffffffffff,\"%s (%s)\",__s1,param_1);\n    if (pcVar10 != (char *)0x0) {\n      free(pcVar10);\n    }\n    goto LAB_00105c27;\n  }\n  __ptr = (char *)FUN_00109130(param_2,\"UTF-8\",pcVar3);\n  sVar4 = strlen(pcVar3);\n  pvVar7 = (void *)FUN_00108e70(sVar4 + 0xb);\n  pvVar7 = memcpy(pvVar7,pcVar3,sVar4);\n  puVar9 = (undefined8 *)(sVar4 + (long)pvVar7);\n  *puVar9 = 0x4c534e4152542f2f;\n  *(undefined2 *)(puVar9 + 1) = 0x5449;\n  *(undefined *)((long)puVar9 + 10) = 0;\n  param_2 = (char *)FUN_00109130(param_2,\"UTF-8\",pvVar7);\n  free(pvVar7);\n  pcVar3 = param_1;\n  pcVar10 = __ptr;\n  pcVar11 = __ptr;\n  if (param_2 == (char *)0x0) {\n    iVar2 = strcmp(__s1,param_1);\n    if (__ptr == (char *)0x0) {\n      param_2 = (char *)0x0;\n      pcVar8 = (char *)0x0;\n      goto LAB_00105be2;\n    }\nLAB_00105d95:\n    if (iVar2 == 0) {\n      return __ptr;\n    }\n    cVar1 = FUN_00105860(__s1,param_1);\n    if (cVar1 == '\\0') {\n      param_2 = (char *)0x0;\n      pcVar8 = (char *)0x0;\n      goto LAB_00105bfc;\n    }\n    pcVar8 = (char *)0x0;\nLAB_00105c1a:\n    param_2 = pcVar8;\n    __ptr = pcVar10;\n    pcVar8 = param_2;\n    if (__ptr == (char *)0x0) goto LAB_00105c27;\n  }\n  else {\n    pcVar8 = strchr(param_2,0x3f);\n    if (pcVar8 != (char *)0x0) {\n      free(param_2);\n      if (__ptr != (char *)0x0) {\n        iVar2 = strcmp(__s1,param_1);\n        goto LAB_00105d95;\n      }\n      iVar2 = strcmp(__s1,param_1);\n      param_2 = (char *)0x0;\n      pcVar8 = (char *)0x0;\nLAB_00105be2:\n      __ptr = pcVar3;\n      if (iVar2 == 0) {\n        return __ptr;\n      }\n      cVar1 = FUN_00105860(__s1,param_1);\n      pcVar10 = (char *)0x0;\n      if (cVar1 != '\\0') goto LAB_00105c27;\nLAB_00105bfc:\n      if (((pcVar11 == (char *)0x0) || (cVar1 = FUN_00105860(__s1,pcVar11), cVar1 == '\\0')) &&\n         ((param_1 = __ptr, param_2 == (char *)0x0 ||\n          (cVar1 = FUN_00105860(__s1,param_2), cVar1 == '\\0')))) goto LAB_00105c7e;\n      goto LAB_00105c1a;\n    }\n    iVar2 = strcmp(__s1,param_1);\n    pcVar3 = param_2;\n    pcVar8 = param_2;\n    if (__ptr == (char *)0x0) goto LAB_00105be2;\n    if (iVar2 == 0) {\n      if (__ptr == param_2) {\n        return __ptr;\n      }\n      free(param_2);\n      return __ptr;\n    }\n    cVar1 = FUN_00105860(__s1,param_1);\n    if (cVar1 == '\\0') goto LAB_00105bfc;\n  }\n  free(__ptr);\n  pcVar8 = param_2;\nLAB_00105c27:\n  if (pcVar8 != (char *)0x0) {\n    free(pcVar8);\n  }\n  return pcVar6;\n}\n\n", 
    "001141a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103ca0": "\nulong FUN_00103ca0(ulong param_1,ulong param_2,undefined8 param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  long lVar6;\n  long lVar7;\n  long lVar8;\n  int iVar9;\n  ulong uVar10;\n  ulong uVar11;\n  long lVar12;\n  ulong uVar13;\n  bool bVar14;\n  long local_68;\n  ulong local_60;\n  long local_40;\n  \n  if (param_1 < 2) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"(1) < (n)\",\"src/factor.c\",0x5c2,\"factor_using_pollard_rho\");\n  }\n  local_40 = param_2 + 1;\n  local_60 = param_2;\n  do {\n    uVar10 = 0;\n    iVar9 = 0x40;\n    uVar2 = 1;\n    uVar5 = 0;\n    uVar4 = param_1;\n    do {\n      uVar11 = uVar4 << 0x3f;\n      uVar4 = uVar4 >> 1;\n      uVar5 = uVar5 >> 1 | uVar11;\n      if ((uVar4 < uVar2) || ((uVar4 == uVar2 && (uVar5 <= uVar10)))) {\n        bVar14 = uVar10 < uVar5;\n        uVar10 = uVar10 - uVar5;\n        uVar2 = (uVar2 - uVar4) - (ulong)bVar14;\n      }\n      iVar9 = iVar9 + -1;\n    } while (iVar9 != 0);\n    lVar7 = 1;\n    local_68 = 1;\n    uVar5 = (-(ulong)(uVar10 < param_1 - uVar10) & param_1) + (uVar10 * 2 - param_1);\n    uVar4 = uVar5;\n    uVar2 = uVar5;\n    while( true ) {\n      if (param_1 <= local_60) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"a < n\",\"src/factor.c\",0x5c8,\"factor_using_pollard_rho\");\n      }\n      uVar11 = (ulong)(byte)(&DAT_0010b500)[(uint)(param_1 >> 1) & 0x7f];\n      lVar6 = uVar11 * 2 - uVar11 * uVar11 * param_1;\n      lVar6 = lVar6 * 2 - lVar6 * lVar6 * param_1;\n      lVar12 = lVar6 * 2 - lVar6 * lVar6 * param_1;\n      uVar13 = param_1 - local_60;\n      lVar3 = local_60 - param_1;\n      uVar11 = uVar5;\n      lVar6 = local_68;\n      while( true ) {\n        local_68 = lVar6;\n        uVar4 = FUN_00102b50(uVar4,uVar4,param_1,lVar12);\n        uVar4 = (-(ulong)(uVar4 < uVar13) & param_1) + uVar4 + lVar3;\n        uVar10 = FUN_00102b50(uVar10,(-(ulong)(uVar2 < uVar4) & param_1) + (uVar2 - uVar4),param_1);\n        uVar5 = uVar11;\n        if ((((uint)lVar7 & 0x1f) == 1) &&\n           (lVar6 = FUN_00102a30(uVar10,param_1), uVar5 = uVar4, lVar6 != 1)) break;\n        lVar8 = lVar7 + -1;\n        lVar7 = lVar8;\n        uVar11 = uVar5;\n        lVar6 = local_68;\n        if ((lVar8 == 0) &&\n           (lVar7 = local_68, uVar11 = uVar4, uVar2 = uVar4, lVar6 = local_68 * 2, local_68 != 0)) {\n          do {\n            uVar4 = FUN_00102b50(uVar11,uVar11,param_1,lVar12);\n            lVar8 = lVar8 + 1;\n            uVar11 = (-(ulong)(uVar4 < uVar13) & param_1) + uVar4 + lVar3;\n            lVar7 = lVar8;\n            uVar4 = uVar11;\n          } while (local_68 != lVar8);\n        }\n      }\n      do {\n        uVar5 = FUN_00102b50(uVar11,uVar11,param_1,lVar12);\n        uVar11 = (-(ulong)(uVar5 < uVar13) & param_1) + uVar5 + lVar3;\n        uVar5 = FUN_00102a30((-(ulong)(uVar2 < uVar11) & param_1) + (uVar2 - uVar11),param_1);\n      } while (uVar5 == 1);\n      if (uVar5 == param_1) break;\n      param_1 = param_1 / uVar5;\n      cVar1 = FUN_00103960(uVar5);\n      if (cVar1 == '\\0') {\n        FUN_00103ca0(uVar5,local_40,param_3);\n      }\n      else {\n        FUN_00102a90(param_3,uVar5,1);\n      }\n      cVar1 = FUN_00103960(param_1);\n      if (cVar1 != '\\0') {\n        uVar4 = FUN_00102a90(param_3,param_1,1);\n        return uVar4;\n      }\n      uVar4 = uVar4 % param_1;\n      uVar2 = uVar2 % param_1;\n      uVar5 = uVar11 % param_1;\n      if (param_1 == 1) {\n        return uVar11 / param_1;\n      }\n    }\n    local_60 = local_60 + 1;\n    local_40 = local_40 + 1;\n  } while( true );\n}\n\n", 
    "001141b0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105610": "\nvoid FUN_00105610(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00109420(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_00113108 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_00113110 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00107f00();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00105698;\n    }\n  }\n  iVar1 = FUN_00109420(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00105698:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_00113020);\n}\n\n", 
    "00104fd0": "\nvoid FUN_00104fd0(undefined8 param_1,undefined8 param_2)\n\n{\n  uint uVar1;\n  undefined8 *puVar2;\n  undefined8 *puVar3;\n  long in_FS_OFFSET;\n  undefined8 local_138;\n  long local_130;\n  undefined8 local_128 [26];\n  byte local_58 [26];\n  byte local_3e;\n  long local_30;\n  \n  puVar2 = &local_138;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00104e50();\n  FUN_00104f00(0x3a);\n  FUN_001046a0(param_1,param_2,&local_138);\n  if (local_3e != 0) {\n    puVar3 = local_128;\n    do {\n      uVar1 = 0;\n      if (*(char *)((long)puVar2 + 0xe0) != '\\0') {\n        do {\n          uVar1 = uVar1 + 1;\n          FUN_00104f00(0x20);\n          FUN_00104e50(0,*puVar3);\n        } while (uVar1 < *(byte *)((long)puVar2 + 0xe0));\n      }\n      puVar2 = (undefined8 *)((long)puVar2 + 1);\n      puVar3 = puVar3 + 1;\n    } while ((uint)((int)puVar2 - (int)&local_138) < (uint)local_3e);\n  }\n  if (local_130 != 0) {\n    FUN_00104f00(0x20);\n    FUN_00104e50(local_130,local_138);\n  }\n  FUN_00104f00(10);\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "00108e70": "\nvoid FUN_00108e70(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109090();\n  }\n  return;\n}\n\n", 
    "001094e0": "\nchar * FUN_001094e0(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memchr(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memchr_00112ed0)();\n  return pvVar1;\n}\n\n", 
    "001093c0": "\nint FUN_001093c0(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00109380(*param_1);\n      bVar2 = FUN_00109380(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_isatty_00112e40)();\n  return iVar1;\n}\n\n", 
    "00107aa0": "\nvoid FUN_00107aa0(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00113220;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001092a0": "\nbool FUN_001092a0(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "001029a0": "\n/* WARNING: Removing unreachable block (ram,0x001029c4) */\n/* WARNING: Removing unreachable block (ram,0x001029d0) */\n\nvoid FUN_001029a0(void)\n\n{\n  return;\n}\n\n", 
    "00114108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_00112e00)();\n  return;\n}\n\n", 
    "00109320": "\nbool FUN_00109320(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00109cb0": "\n/* WARNING: Could not reconcile some variable overlaps */\n\nchar * FUN_00109cb0(char *param_1,char *param_2)\n\n{\n  char *pcVar1;\n  char cVar2;\n  char cVar3;\n  byte bVar4;\n  int iVar5;\n  size_t sVar6;\n  char *pcVar7;\n  long lVar8;\n  byte bVar9;\n  ulong uVar10;\n  ulong uVar11;\n  char *__string;\n  ulong uVar12;\n  ulong uVar13;\n  long in_FS_OFFSET;\n  bool bVar14;\n  ulong local_1a0;\n  char *local_190;\n  undefined local_188 [4];\n  undefined8 local_184;\n  undefined local_17c;\n  char *local_178;\n  size_t local_170;\n  char local_168;\n  int local_164;\n  undefined local_148 [4];\n  undefined8 local_144;\n  undefined local_13c;\n  char *local_138;\n  long local_130;\n  byte local_128;\n  int local_124;\n  uint local_108;\n  undefined4 uStack_104;\n  uint uStack_100;\n  uint uStack_fc;\n  char *local_f8;\n  size_t sStack_f0;\n  undefined4 local_e8;\n  int iStack_e4;\n  undefined8 uStack_e0;\n  undefined8 local_d8;\n  undefined8 uStack_d0;\n  undefined8 local_c8;\n  undefined8 uStack_c0;\n  char *local_b8;\n  size_t sStack_b0;\n  undefined8 local_a8;\n  undefined8 uStack_a0;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined local_88 [4];\n  undefined8 local_84;\n  undefined local_7c;\n  char *local_78;\n  size_t local_70;\n  char local_68;\n  int local_64;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar6 = __ctype_get_mb_cur_max();\n  pcVar7 = param_1;\n  if (sVar6 < 2) {\n    cVar2 = *param_2;\n    if (cVar2 != '\\0') {\n      cVar3 = *param_1;\n      if (cVar3 != '\\0') {\n        uVar12 = 0;\n        uVar13 = 0;\n        uVar11 = 0;\n        bVar4 = 1;\n        __string = param_2;\n        while( true ) {\n          uVar12 = uVar12 + 1;\n          uVar10 = uVar13 + 1;\n          pcVar1 = param_1 + 1;\n          if (cVar2 == cVar3) {\n            cVar3 = param_2[1];\n            pcVar7 = param_1;\n            if (cVar3 == '\\0') goto LAB_00109de8;\n            while( true ) {\n              lVar8 = uVar10 - uVar13;\n              if (param_1[lVar8] == '\\0') goto LAB_00109e59;\n              uVar10 = uVar10 + 1;\n              if (param_1[lVar8] != cVar3) break;\n              cVar3 = param_2[uVar10 - uVar13];\n              if (cVar3 == '\\0') goto LAB_00109de8;\n            }\n          }\n          uVar13 = uVar10;\n          if (*pcVar1 == '\\0') break;\n          bVar9 = 9 < uVar12 & bVar4;\n          if ((bVar9 != 0) && (bVar4 = bVar9, uVar12 * 5 <= uVar13)) {\n            if (__string != (char *)0x0) {\n              sVar6 = strnlen(__string,uVar13 - uVar11);\n              __string = __string + sVar6;\n              uVar11 = uVar13;\n              if (*__string != '\\0') goto LAB_00109d80;\n            }\n            sVar6 = strlen(param_2);\n            bVar4 = FUN_001096f0(pcVar1,param_2,sVar6,&local_190);\n            pcVar7 = local_190;\n            if (bVar4 != 0) goto LAB_00109de8;\n            __string = (char *)0x0;\n          }\nLAB_00109d80:\n          cVar3 = *pcVar1;\n          param_1 = pcVar1;\n        }\n      }\nLAB_00109e59:\n      pcVar7 = (char *)0x0;\n    }\n  }\n  else {\n    local_188[0] = 0;\n    local_184 = 0;\n    local_17c = 0;\n    local_178 = param_2;\n    FUN_0010a2a0(local_188);\n    if ((local_168 == '\\0') || (local_164 != 0)) {\n      uVar13 = 0;\n      local_148[0] = 0;\n      local_144 = 0;\n      local_13c = 0;\n      local_108 = local_108 & 0xffffff00;\n      uStack_104 = 0;\n      uStack_100 = 0;\n      local_1a0 = 0;\n      bVar4 = 1;\n      uVar11 = 0;\n      local_138 = param_2;\n      local_f8 = param_1;\n      do {\n        uStack_fc = uStack_fc & 0xffffff00;\n        FUN_0010a2a0(&local_108);\n        if ((char)local_e8 == '\\0') {\n          bVar9 = 9 < uVar13 & bVar4;\n          if ((bVar9 != 0) && (bVar4 = bVar9, uVar13 * 5 <= uVar11)) goto LAB_0010a1d0;\nLAB_0010a16e:\n          sVar6 = sStack_f0;\n          uVar12 = uVar11 + 1;\n          if ((sStack_f0 == local_170) && (iVar5 = memcmp(local_f8,local_178,sStack_f0), iVar5 == 0)\n             ) {\nLAB_00109f89:\n            local_c8 = CONCAT44(uStack_104,local_108);\n            local_a8 = CONCAT44(iStack_e4,local_e8);\n            local_88[0] = 0;\n            sStack_b0 = sStack_f0;\n            local_b8 = local_f8 + sStack_f0;\n            local_84 = 0;\n            local_7c = 0;\n            uStack_a0 = uStack_e0;\n            local_98 = local_d8;\n            uStack_90 = uStack_d0;\n            local_78 = param_2;\n            FUN_0010a2a0(local_88);\n            if ((local_68 != '\\0') && (local_64 == 0)) {\n                    /* WARNING: Subroutine does not return */\n              abort();\n            }\n            local_78 = local_78 + local_70;\n            uVar12 = uVar11 + 2;\n            do {\n              local_7c = 0;\n              FUN_0010a2a0(local_88);\n              if ((local_68 != '\\0') && (pcVar7 = local_f8, local_64 == 0)) goto LAB_00109de8;\n              FUN_0010a2a0(&local_c8);\n              if ((char)local_a8 == '\\0') {\nLAB_0010a0e5:\n                sVar6 = sStack_f0;\n                if (sStack_b0 != local_70) break;\n                iVar5 = memcmp(local_b8,local_78,sStack_b0);\n                bVar14 = iVar5 != 0;\n              }\n              else {\n                if (local_a8._4_4_ == 0) goto LAB_00109e59;\n                if (local_68 == '\\0') goto LAB_0010a0e5;\n                bVar14 = local_64 != local_a8._4_4_;\n              }\n              sVar6 = sStack_f0;\n              if (bVar14) break;\n              local_b8 = local_b8 + sStack_b0;\n              local_78 = local_78 + local_70;\n              uStack_c0 = uStack_c0 & 0xffffff00ffffffff;\n              uVar12 = uVar12 + 1;\n            } while( true );\n          }\n        }\n        else {\n          if (iStack_e4 == 0) goto LAB_00109e59;\n          bVar9 = 9 < uVar13 & bVar4;\n          if ((bVar9 != 0) && (bVar4 = bVar9, uVar13 * 5 <= uVar11)) {\nLAB_0010a1d0:\n            lVar8 = uVar11 - local_1a0;\n            while ((lVar8 != 0 && ((FUN_0010a2a0(local_148), local_128 == 0 || (local_124 != 0)))))\n            {\n              local_138 = local_138 + local_130;\n              lVar8 = lVar8 + -1;\n              local_13c = 0;\n            }\n            FUN_0010a2a0(local_148);\n            if (local_128 == 0) {\n              bVar4 = 1;\n            }\n            else {\n              bVar4 = local_128;\n              if ((local_124 == 0) &&\n                 (bVar4 = FUN_001098a0(param_1,param_2,&local_190), pcVar7 = local_190, bVar4 != 0))\n              break;\n            }\n            local_1a0 = uVar11;\n            if ((char)local_e8 == '\\0') goto LAB_0010a16e;\n          }\n          uVar12 = uVar11 + 1;\n          if (local_168 == '\\0') goto LAB_0010a16e;\n          sVar6 = sStack_f0;\n          if (iStack_e4 == local_164) goto LAB_00109f89;\n        }\n        local_f8 = local_f8 + sVar6;\n        uVar13 = uVar13 + 1;\n        uVar11 = uVar12;\n      } while( true );\n    }\n  }\nLAB_00109de8:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return pcVar7;\n}\n\n", 
    "00114110": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107d50": "\nvoid FUN_00107d50(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00105eb0(auStack_58);\n  FUN_00107820(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001141b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105600": "\nvoid FUN_00105600(undefined param_1)\n\n{\n  DAT_00113108 = param_1;\n  return;\n}\n\n", 
    "00107820": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00107820(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_00113080;\n  if (DAT_00113078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109090();\n    }\n    if (PTR_DAT_00113080 == &DAT_00113090) {\n      puVar8 = (undefined4 *)FUN_00108ed0(0);\n      uVar6 = PTR_DAT_00113098._4_4_;\n      uVar5 = PTR_DAT_00113098._0_4_;\n      uVar3 = _UNK_00113094;\n      PTR_DAT_00113080 = (undefined *)puVar8;\n      *puVar8 = _DAT_00113090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00108ed0(PTR_DAT_00113080);\n      PTR_DAT_00113080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_00113078 * 4,0,(long)((param_1 + 1) - DAT_00113078) << 4);\n    DAT_00113078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00106660(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_00113120) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00108e70(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00106660(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00105eb0": "\nint * FUN_00105eb0(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102490": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_00112e58)();\n  return;\n}\n\n", 
    "00103340": "\n/* WARNING: Removing unreachable block (ram,0x00103452) */\n\nundefined8\nFUN_00103340(undefined8 *param_1,ulong param_2,ulong param_3,ulong param_4,ulong param_5,\n            ulong param_6,ulong param_7,long param_8)\n\n{\n  undefined auVar1 [16];\n  undefined auVar2 [16];\n  long lVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  ulong uVar7;\n  ulong uVar8;\n  \n  if ((long)param_2 < 0) {\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"(a1 >> (W_TYPE_SIZE - 1)) == 0\",\"src/factor.c\",999,\"mulredc2\");\n  }\n  if (-1 < (long)param_4) {\n    if (-1 < (long)param_6) {\n      uVar4 = SUB168(ZEXT816(param_3) * ZEXT816(param_5) >> 0x40,0);\n      lVar3 = SUB168(ZEXT816(param_3) * ZEXT816(param_5),0);\n      uVar8 = -param_8 * lVar3;\n      uVar5 = SUB168(ZEXT816(uVar8) * ZEXT816(param_7) >> 0x40,0);\n      uVar6 = SUB168(ZEXT816(param_3) * ZEXT816(param_4),0) + (ulong)(lVar3 != 0);\n      uVar7 = uVar6 + uVar5;\n      auVar1 = ZEXT816(uVar8) * ZEXT816(param_6) +\n               CONCAT88(SUB168(ZEXT816(param_3) * ZEXT816(param_4) >> 0x40,0) +\n                        (ulong)CARRY8(uVar6,uVar5) + (ulong)CARRY8(uVar7,uVar4),uVar7 + uVar4);\n      auVar2 = ZEXT816(param_2) * ZEXT816(param_5) + (auVar1 & (undefined  [16])0xffffffffffffffff);\n      lVar3 = SUB168(auVar2,0);\n      uVar8 = SUB168(auVar2 >> 0x40,0);\n      uVar5 = -param_8 * lVar3;\n      auVar1 = ZEXT816(param_2) * ZEXT816(param_4) +\n               (auVar1 >> 0x40 & (undefined  [16])0xffffffffffffffff);\n      uVar4 = SUB168(ZEXT816(uVar5) * ZEXT816(param_7) >> 0x40,0);\n      uVar6 = (ulong)(lVar3 != 0) + SUB168(auVar1,0);\n      uVar7 = uVar6 + uVar4;\n      auVar1 = ZEXT816(uVar5) * ZEXT816(param_6) +\n               CONCAT88(SUB168(auVar1 >> 0x40,0) + (ulong)CARRY8(uVar6,uVar4) +\n                        (ulong)CARRY8(uVar7,uVar8),uVar7 + uVar8);\n      if (CONCAT88(param_6,param_7) <= auVar1) {\n        auVar1 = auVar1 - CONCAT88(param_6,param_7);\n      }\n      *param_1 = SUB168(auVar1 >> 0x40,0);\n      return SUB168(auVar1,0);\n    }\n                    /* WARNING: Subroutine does not return */\n    __assert_fail(\"(m1 >> (W_TYPE_SIZE - 1)) == 0\",\"src/factor.c\",0x3e9,\"mulredc2\");\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"(b1 >> (W_TYPE_SIZE - 1)) == 0\",\"src/factor.c\",1000,\"mulredc2\");\n}\n\n", 
    "001096f0": "\nundefined8 FUN_001096f0(char *param_1,long param_2,ulong param_3,char **param_4)\n\n{\n  undefined *puVar1;\n  undefined8 uVar2;\n  long lVar3;\n  char cVar4;\n  undefined *puVar5;\n  undefined *puVar7;\n  undefined *puVar8;\n  ulong uVar9;\n  ulong uVar10;\n  char *pcVar11;\n  long in_FS_OFFSET;\n  undefined auStack_38 [8];\n  long local_30;\n  undefined *puVar6;\n  \n  puVar5 = auStack_38;\n  puVar6 = auStack_38;\n  puVar8 = auStack_38;\n  puVar7 = auStack_38;\n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar9 = param_3 * 8;\n  puVar1 = auStack_38;\n  if ((-1 < (long)uVar9) && (puVar1 = auStack_38, param_3 >> 0x3d == 0)) {\n    if (uVar9 < 0xfa1) {\n      puVar8 = auStack_38;\n      while (puVar6 != auStack_38 + -(uVar9 + 0x36 & 0xfffffffffffff000)) {\n        puVar5 = puVar8 + -0x1000;\n        *(undefined8 *)(puVar8 + -8) = *(undefined8 *)(puVar8 + -8);\n        puVar6 = puVar8 + -0x1000;\n        puVar8 = puVar8 + -0x1000;\n      }\n      uVar9 = (ulong)((uint)(uVar9 + 0x36) & 0xff0);\n      lVar3 = -uVar9;\n      puVar7 = puVar5 + lVar3;\n      puVar8 = puVar5 + lVar3;\n      if (uVar9 != 0) {\n        *(undefined8 *)(puVar5 + -8) = *(undefined8 *)(puVar5 + -8);\n      }\n      uVar9 = ((ulong)(puVar5 + lVar3 + 0xf) & 0xfffffffffffffff0) + 0x1f & 0xffffffffffffffe0;\n    }\n    else {\n      uVar9 = FUN_0010abf0();\n    }\n    puVar1 = puVar7;\n    if (uVar9 != 0) {\n      *(undefined8 *)(uVar9 + 8) = 1;\n      if (2 < param_3) {\n        lVar3 = 0;\n        uVar10 = 2;\n        do {\n          cVar4 = *(char *)(param_2 + lVar3);\n          while (*(char *)(param_2 + -1 + uVar10) != cVar4) {\n            if (lVar3 == 0) {\n              *(ulong *)(uVar9 + uVar10 * 8) = uVar10;\n              lVar3 = 0;\n              goto LAB_001097f9;\n            }\n            lVar3 = lVar3 - *(long *)(uVar9 + lVar3 * 8);\n            cVar4 = *(char *)(param_2 + lVar3);\n          }\n          lVar3 = lVar3 + 1;\n          *(ulong *)(uVar9 + uVar10 * 8) = uVar10 - lVar3;\nLAB_001097f9:\n          uVar10 = uVar10 + 1;\n        } while (param_3 != uVar10);\n      }\n      *param_4 = (char *)0x0;\n      cVar4 = *param_1;\n      if (cVar4 != '\\0') {\n        uVar10 = 0;\n        pcVar11 = param_1;\n        do {\n          if (*(char *)(param_2 + uVar10) == cVar4) {\n            uVar10 = uVar10 + 1;\n            param_1 = param_1 + 1;\n            if (param_3 == uVar10) {\n              *param_4 = pcVar11;\n              break;\n            }\n          }\n          else if (uVar10 == 0) {\n            pcVar11 = pcVar11 + 1;\n            param_1 = param_1 + 1;\n          }\n          else {\n            lVar3 = *(long *)(uVar9 + uVar10 * 8);\n            pcVar11 = pcVar11 + lVar3;\n            uVar10 = uVar10 - lVar3;\n          }\n          cVar4 = *param_1;\n        } while (cVar4 != '\\0');\n      }\n      *(undefined8 *)(puVar8 + -8) = 0x109850;\n      FUN_0010ac30();\n      uVar2 = 1;\n      goto LAB_00109855;\n    }\n  }\n  puVar8 = puVar1;\n  uVar2 = 0;\nLAB_00109855:\n  if (local_30 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    *(code **)(puVar8 + -8) = FUN_001098a0;\n    __stack_chk_fail();\n  }\n  return uVar2;\n}\n\n", 
    "00108110": "\nvoid FUN_00108110(ulong param_1,long param_2)\n\n{\n  ulong *puVar1;\n  \n  puVar1 = (ulong *)(param_2 + (param_1 >> 6) * 8);\n  *puVar1 = *puVar1 | 1L << ((byte)param_1 & 0x3f);\n  return;\n}\n\n", 
    "00109090": "\nvoid FUN_00109090(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_00113020,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105f20": "\nundefined8 FUN_00105f20(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00105f00(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00107a20": "\nvoid FUN_00107a20(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_00113220;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010abf0": "\nlong FUN_0010abf0(ulong param_1)\n\n{\n  void *pvVar1;\n  ulong uVar2;\n  long lVar3;\n  \n  if (0xffffffffffffffdf < param_1) {\n    return 0;\n  }\n  pvVar1 = malloc(param_1 + 0x20);\n  if (pvVar1 != (void *)0x0) {\n    uVar2 = (long)pvVar1 + 0x10U & 0xffffffffffffffe0;\n    lVar3 = uVar2 + 0x10;\n    *(char *)(uVar2 + 0xf) = (char)lVar3 - (char)pvVar1;\n    return lVar3;\n  }\n  return 0;\n}\n\n", 
    "00107c60": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00107c60(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_00113080;\n  if (1 < DAT_00113078) {\n    ppvVar2 = (void **)(PTR_DAT_00113080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_00113080 + (ulong)(DAT_00113078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_00113120) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_00113098 = &DAT_00113120;\n    _DAT_00113090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_00113090) {\n    free(__ptr_00);\n    PTR_DAT_00113080 = &DAT_00113090;\n  }\n  DAT_00113078 = 1;\n  return;\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___00112fe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___00112fe0)();\n  }\n  return;\n}\n\n", 
    "00104db0": "\nvoid FUN_00104db0(undefined8 param_1,ulong param_2)\n\n{\n  long lVar1;\n  void *pvVar2;\n  undefined *puVar3;\n  undefined *puVar4;\n  ulong __n;\n  undefined *puVar5;\n  long in_FS_OFFSET;\n  undefined auStack_38 [24];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  pvVar2 = (void *)FUN_00105740(param_1,auStack_38);\n  puVar5 = DAT_001130f8;\n  __n = 0x14 - ((long)pvVar2 - (long)auStack_38);\n  if (__n < param_2) {\n    lVar1 = ((long)pvVar2 - (long)auStack_38) + -0x14;\n    puVar3 = DAT_001130f8 + lVar1 + param_2;\n    puVar4 = DAT_001130f8;\n    do {\n      *puVar4 = 0x30;\n      puVar4 = puVar4 + 1;\n    } while (puVar4 != puVar3);\n    puVar5 = puVar5 + lVar1 + param_2;\n  }\n  pvVar2 = memcpy(puVar5,pvVar2,__n);\n  DAT_001130f8 = (undefined *)((long)pvVar2 + __n);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_write_00112e50)();\n  return sVar1;\n}\n\n", 
    "0010a710": "\nchar * FUN_0010a710(char *param_1,iconv_t param_2)\n\n{\n  ulong uVar1;\n  char *__ptr;\n  size_t sVar2;\n  int *piVar3;\n  char *pcVar4;\n  ulong uVar5;\n  long lVar6;\n  long in_FS_OFFSET;\n  char *local_60;\n  size_t local_58;\n  char *local_50;\n  size_t local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_60 = param_1;\n  local_58 = strlen(param_1);\n  sVar2 = local_58 << 4;\n  if (0xfffffff < local_58) {\n    sVar2 = local_58;\n  }\n  __ptr = (char *)malloc(sVar2 + 1);\n  if (__ptr == (char *)0x0) {\n    piVar3 = __errno_location();\n    *piVar3 = 0xc;\n  }\n  else {\n    iconv(param_2,(char **)0x0,(size_t *)0x0,(char **)0x0,(size_t *)0x0);\n    uVar5 = sVar2 + 1;\n    local_50 = __ptr;\n    local_48 = sVar2;\n    while (sVar2 = iconv(param_2,&local_60,&local_58,&local_50,&local_48),\n          sVar2 == 0xffffffffffffffff) {\n      piVar3 = __errno_location();\n      if (*piVar3 == 0x16) break;\n      if (*piVar3 != 7) goto LAB_0010a906;\n      uVar1 = uVar5 * 2;\n      lVar6 = (long)local_50 - (long)__ptr;\n      if ((uVar1 <= uVar5) || (pcVar4 = (char *)realloc(__ptr,uVar1), pcVar4 == (char *)0x0)) {\n        *piVar3 = 0xc;\n        goto LAB_0010a906;\n      }\n      local_50 = pcVar4 + lVar6;\n      local_48 = (uVar1 - 1) - lVar6;\n      uVar5 = uVar1;\n      __ptr = pcVar4;\n    }\nLAB_0010a8b3:\n    sVar2 = iconv(param_2,(char **)0x0,(size_t *)0x0,&local_50,&local_48);\n    if (sVar2 != 0xffffffffffffffff) goto code_r0x0010a8cb;\n    piVar3 = __errno_location();\n    if (*piVar3 != 7) goto LAB_0010a906;\n    uVar1 = uVar5 * 2;\n    lVar6 = (long)local_50 - (long)__ptr;\n    if ((uVar5 < uVar1) && (pcVar4 = (char *)realloc(__ptr,uVar1), pcVar4 != (char *)0x0)) {\n      local_50 = pcVar4 + lVar6;\n      local_48 = (uVar1 - 1) - lVar6;\n      uVar5 = uVar1;\n      __ptr = pcVar4;\n      goto LAB_0010a8b3;\n    }\n    *piVar3 = 0xc;\nLAB_0010a906:\n    free(__ptr);\n    __ptr = (char *)0x0;\n  }\nLAB_0010a911:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return __ptr;\ncode_r0x0010a8cb:\n  pcVar4 = local_50 + 1;\n  *local_50 = '\\0';\n  local_50 = pcVar4;\n  if (((ulong)((long)pcVar4 - (long)__ptr) < uVar5) &&\n     (pcVar4 = (char *)realloc(__ptr,(long)pcVar4 - (long)__ptr), pcVar4 != (char *)0x0)) {\n    __ptr = pcVar4;\n  }\n  goto LAB_0010a911;\n}\n\n", 
    "00108d30": "\nvoid FUN_00108d30(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00108ca0();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001093a0": "\nint FUN_001093a0(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010aa40": "\nsize_t FUN_0010aa40(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  size_t sVar2;\n  \n  pvVar1 = memchr(param_1,0,param_2);\n  sVar2 = (long)pvVar1 + (1 - (long)param_1);\n  if (pvVar1 == (void *)0x0) {\n    sVar2 = param_2;\n  }\n  return sVar2;\n}\n\n", 
    "00108460": "\nssize_t FUN_00108460(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = write(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (*piVar2 != 0x16) break;\n    if (param_3 < 0x7ff00001) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00102b20": "\nvoid FUN_00102b20(undefined8 param_1,long param_2,uint param_3,int param_4)\n\n{\n  ulong uVar1;\n  uint uVar2;\n  \n  if (param_4 != 0) {\n    uVar2 = param_4 + param_3;\n    do {\n      uVar1 = (ulong)param_3;\n      param_3 = param_3 + 1;\n      param_2 = param_2 + (ulong)(byte)(&DAT_0010e280)[uVar1];\n    } while (uVar2 != param_3);\n  }\n  FUN_00102a90(param_1,param_2,1);\n  return;\n}\n\n", 
    "00108de0": "\nvoid FUN_00108de0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00109420": "\nulong FUN_00109420(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_0010aa80(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00107c50": "\nvoid FUN_00107c50(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00107b60(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "001082c0": "\nulong FUN_001082c0(undefined8 param_1,long param_2,undefined8 param_3,undefined8 param_4,\n                  long *param_5,void **param_6)\n\n{\n  long *plVar1;\n  void **ppvVar2;\n  long lVar3;\n  void *__ptr;\n  void *pvVar4;\n  long lVar5;\n  ulong uVar6;\n  long in_FS_OFFSET;\n  ulong local_60;\n  undefined local_58 [8];\n  void *local_50;\n  long local_40;\n  \n  local_60 = param_2 + 1;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 == 0) {\n    local_60 = 0x40;\n  }\n  uVar6 = 0;\n  lVar3 = FUN_00108e90(local_60,8);\n  __ptr = (void *)FUN_00108e90(local_60,8);\n  FUN_00108130(local_58);\n  while( true ) {\n    lVar5 = FUN_00108150(param_1,param_3,param_4,local_58);\n    if (local_60 <= uVar6) {\n      lVar3 = FUN_00108f40(lVar3,&local_60,8);\n      __ptr = (void *)FUN_00108f10(__ptr,local_60,8);\n    }\n    plVar1 = (long *)((long)__ptr + uVar6 * 8);\n    ppvVar2 = (void **)(lVar3 + uVar6 * 8);\n    if (lVar5 == -1) break;\n    uVar6 = uVar6 + 1;\n    pvVar4 = (void *)FUN_00108e90(lVar5 + 1U,1);\n    *plVar1 = lVar5;\n    pvVar4 = memcpy(pvVar4,local_50,lVar5 + 1U);\n    *ppvVar2 = pvVar4;\n  }\n  *ppvVar2 = (void *)0x0;\n  *plVar1 = 0;\n  free(local_50);\n  *param_5 = lVar3;\n  if (param_6 == (void **)0x0) {\n    free(__ptr);\n  }\n  else {\n    *param_6 = __ptr;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_00112f48)();\n  return pcVar1;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid __assert_fail(char *__assertion,char *__file,uint __line,char *__function)\n\n{\n  (*(code *)PTR___assert_fail_00112eb8)();\n  return;\n}\n\n", 
    "00102430": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_00112e28)();\n  return;\n}\n\n", 
    "00102794": "\nvoid FUN_00102794(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105260": "\nvoid FUN_00105260(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x10b0f4;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010b07a;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 7;\n    pbVar7 = (byte *)\"factor\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"factor\";\n        goto LAB_0010547e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"factor\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"factor\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010547e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"factor\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"factor\");\n    if (pcVar4 != \"factor\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108f40": "\nvoid FUN_00108f40(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_00108f9b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_00108f9b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00109090(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00108ed0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "001057a0": "\nvoid FUN_001057a0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_00113118 = pcVar1 + 1;\n    uVar3 = (long)DAT_00113118 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_00113118;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_00113118 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00109070": "\nvoid FUN_00109070(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00109040(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0010ab30": "\nvoid FUN_0010ab30(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_0010ab10(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_00112f08)();\n  return iVar1;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_00112e78)();\n  return sVar1;\n}\n\n", 
    "00108090": "\nvoid FUN_00108090(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00107fc0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00107d20": "\nvoid FUN_00107d20(void)\n\n{\n  FUN_00107820();\n  return;\n}\n\n", 
    "00108ed0": "\nvoid * FUN_00108ed0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109090();\n  }\n  return pvVar1;\n}\n\n", 
    "0010acf0": "\nuint FUN_0010acf0(byte param_1)\n\n{\n  return *(uint *)(&DAT_0010f0e0 + (ulong)(param_1 >> 5) * 4) >> (param_1 & 0x1f) & 1;\n}\n\n", 
    "00102785": "\nvoid FUN_00102785(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102780": "\nvoid FUN_00102780(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_00112f40)();\n  return pvVar1;\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_00112eb0)();\n  return _Var1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_00112e20)();\n  return;\n}\n\n", 
    "00103750": "\nvoid FUN_00103750(undefined8 *param_1,long param_2,undefined8 param_3)\n\n{\n  if (param_2 == 0) {\n    FUN_00102a90(param_1,param_3,1);\n    return;\n  }\n  if (param_1[1] == 0) {\n    *param_1 = param_3;\n    param_1[1] = param_2;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __assert_fail(\"factors->plarge[1] == 0\",\"src/factor.c\",0x235,\"factor_insert_large\");\n}\n\n", 
    "00107ee0": "\nvoid FUN_00107ee0(undefined8 param_1,char param_2)\n\n{\n  FUN_00107e50(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "0010ac60": "\nuint FUN_0010ac60(wchar_t param_1)\n\n{\n  uint uVar1;\n  int iVar2;\n  \n  uVar1 = wcwidth(param_1);\n  if (-1 < (int)uVar1) {\n    return uVar1;\n  }\n  iVar2 = iswcntrl(param_1);\n  return (uint)(iVar2 == 0);\n}\n\n", 
    "00102d00": "\nvoid FUN_00102d00(void)\n\n{\n  if (DAT_001130f0 != 0) {\n    return;\n  }\n  DAT_001130f0 = FUN_00108e70(0x400);\n  DAT_001130f8 = DAT_001130f0;\n  return;\n}\n\n", 
    "001046a0": "\nvoid FUN_001046a0(long param_1,ulong param_2,long param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  long local_20 [2];\n  \n  *(undefined *)(param_3 + 0xfa) = 0;\n  *(undefined8 *)(param_3 + 8) = 0;\n  if ((param_1 != 0) || (1 < param_2)) {\n    local_20[0] = param_1;\n    uVar2 = FUN_00102e10(local_20,param_1,param_2,param_3);\n    if ((1 < uVar2) || (local_20[0] != 0)) {\n      cVar1 = FUN_00104770(local_20[0],uVar2);\n      if (cVar1 != '\\0') {\n        FUN_00103750(param_3,local_20[0],uVar2);\n        return;\n      }\n      if (local_20[0] == 0) {\n        FUN_00103ca0(uVar2,1,param_3);\n        return;\n      }\n      FUN_00104030(local_20[0],uVar2,1,param_3);\n      return;\n    }\n  }\n  return;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_00112f00)();\n  return pvVar1;\n}\n\n", 
    "001024c0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_00112e70)();\n  return;\n}\n\n", 
    "00107e30": "\nvoid FUN_00107e30(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00107db0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001062c0": "\nundefined8\nFUN_001062c0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106200(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001051d0": "\nuint FUN_001051d0(void)\n\n{\n  uint uVar1;\n  long lVar2;\n  uint uVar3;\n  long in_FS_OFFSET;\n  undefined auStack_38 [8];\n  void *local_30;\n  long local_20;\n  \n  uVar3 = 1;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00108130(auStack_38);\n  while( true ) {\n    lVar2 = FUN_00108150(stdin,&DAT_0010b06f,3,auStack_38);\n    if (lVar2 == -1) break;\n    uVar1 = FUN_001050d0();\n    uVar3 = uVar3 & uVar1;\n  }\n  free(local_30);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108ca0": "\nvoid FUN_00108ca0(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00108830();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00109520": "\nvoid FUN_00109520(long *param_1)\n\n{\n  char *pcVar1;\n  char cVar2;\n  int iVar3;\n  long lVar4;\n  \n  if (*(char *)((long)param_1 + 0x14) != '\\0') {\n    return;\n  }\n  pcVar1 = (char *)param_1[3];\n  if (*(char *)(param_1 + 1) == '\\0') {\n    cVar2 = FUN_0010acf0((int)*pcVar1);\n    if (cVar2 != '\\0') {\n      param_1[4] = 1;\n      cVar2 = *pcVar1;\n      *(undefined *)(param_1 + 5) = 1;\n      *(int *)((long)param_1 + 0x2c) = (int)cVar2;\n      goto LAB_00109563;\n    }\n    iVar3 = mbsinit((mbstate_t *)((long)param_1 + 0xc));\n    if (iVar3 == 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"mbsinit (&iter->state)\",\"lib/mbiter.h\",0x8e,\"mbiter_multi_next\");\n    }\n    *(undefined *)(param_1 + 1) = 1;\n  }\n  lVar4 = FUN_00109160((long)param_1 + 0x2c,pcVar1,*param_1 - (long)pcVar1,\n                       (mbstate_t *)((long)param_1 + 0xc));\n  param_1[4] = lVar4;\n  if (lVar4 == -1) {\n    param_1[4] = 1;\n    *(undefined *)(param_1 + 5) = 0;\n    *(undefined *)((long)param_1 + 0x14) = 1;\n    return;\n  }\n  if (lVar4 == -2) {\n    *(undefined *)(param_1 + 5) = 0;\n    param_1[4] = *param_1 - param_1[3];\n  }\n  else {\n    if (lVar4 == 0) {\n      param_1[4] = 1;\n      if (*(char *)param_1[3] != '\\0') {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"lib/mbiter.h\",0xa9,\"mbiter_multi_next\");\n      }\n      if (*(int *)((long)param_1 + 0x2c) != 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"iter->cur.wc == 0\",\"lib/mbiter.h\",0xaa,\"mbiter_multi_next\");\n      }\n    }\n    *(undefined *)(param_1 + 5) = 1;\n    iVar3 = mbsinit((mbstate_t *)((long)param_1 + 0xc));\n    if (iVar3 != 0) {\n      *(undefined *)(param_1 + 1) = 0;\n    }\n  }\nLAB_00109563:\n  *(undefined *)((long)param_1 + 0x14) = 1;\n  return;\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_00112e18)();\n  return iVar1;\n}\n\n", 
    "00103620": "\nbool FUN_00103620(ulong *param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 uint param_5,ulong *param_6)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  uint uVar6;\n  long in_FS_OFFSET;\n  bool local_49;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  uVar1 = FUN_001034c0(&local_48,param_3,param_4,param_1,param_2);\n  uVar5 = *param_6;\n  if ((uVar5 != uVar1) || (param_6[1] != local_48)) {\n    uVar4 = param_1[1];\n    uVar2 = *param_1;\n    uVar3 = uVar2 - uVar5;\n    uVar5 = (uVar4 - param_6[1]) - (ulong)(uVar2 < uVar5);\n    local_49 = uVar1 == uVar3 && local_48 == uVar5;\n    if (uVar1 != uVar3 || local_48 != uVar5) {\n      uVar6 = 1;\n      if (1 < param_5) {\n        while( true ) {\n          uVar1 = FUN_00103340(&local_48,local_48,uVar1,local_48,uVar1,uVar4,uVar2);\n          if ((uVar3 == uVar1) && (uVar5 == local_48)) goto LAB_00103740;\n          if (((*param_6 == uVar1) && (param_6[1] == local_48)) ||\n             (uVar6 = uVar6 + 1, param_5 == uVar6)) break;\n          uVar2 = *param_1;\n          uVar4 = param_1[1];\n        }\n      }\n      goto LAB_00103708;\n    }\n  }\nLAB_00103740:\n  local_49 = true;\nLAB_00103708:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return local_49;\n}\n\n", 
    "00102450": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getc_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_getc_unlocked_00112e38)();\n  return iVar1;\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iconv_close(iconv_t __cd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iconv_close_00112f58)();\n  return iVar1;\n}\n\n", 
    "00106010": "\nundefined8 FUN_00106010(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00105f80(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strnlen(char *__string,size_t __maxlen)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strnlen_00112ec8)();\n  return sVar1;\n}\n\n", 
    "00105af0": "\nchar * FUN_00105af0(char *param_1)\n\n{\n  char cVar1;\n  char *__s;\n  size_t sVar2;\n  size_t sVar3;\n  char *pcVar4;\n  \n  __s = (char *)dcgettext(0,param_1,5);\n  if (param_1 != __s) {\n    cVar1 = FUN_00105860(__s,param_1);\n    if (cVar1 == '\\0') {\n      sVar2 = strlen(__s);\n      sVar3 = strlen(param_1);\n      pcVar4 = (char *)FUN_00108e70(sVar2 + 4 + sVar3);\n      __sprintf_chk(pcVar4,1,0xffffffffffffffff,\"%s (%s)\",__s,param_1);\n      return pcVar4;\n    }\n  }\n  return __s;\n}\n\n", 
    "0010279e": "\nvoid FUN_0010279e(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010ac30": "\nvoid FUN_0010ac30(ulong param_1)\n\n{\n  if ((param_1 & 0xf) != 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  if ((param_1 & 0x10) == 0) {\n    return;\n  }\n  free((void *)(param_1 - *(byte *)(param_1 - 1)));\n  return;\n}\n\n", 
    "0010ab10": "\nvoid FUN_0010ab10(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_0010ab70(param_1,0,1);\n  return;\n}\n\n", 
    "00109290": "\nbool FUN_00109290(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "001023d0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_00112ff0)();\n  return;\n}\n\n", 
    "001034c0": "\nundefined8\nFUN_001034c0(undefined8 *param_1,undefined8 *param_2,ulong *param_3,undefined8 *param_4,\n            undefined8 param_5,undefined8 *param_6)\n\n{\n  undefined8 uVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int iVar4;\n  ulong uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  \n  local_58 = *param_6;\n  local_60 = param_6[1];\n  uVar3 = *param_2;\n  uVar6 = param_2[1];\n  uVar1 = *param_4;\n  uVar2 = param_4[1];\n  iVar4 = 0x40;\n  uVar5 = *param_3;\n  do {\n    if ((uVar5 & 1) != 0) {\n      local_58 = FUN_00103340(param_1,local_60,local_58,uVar6,uVar3,uVar2,uVar1,param_5);\n      local_60 = *param_1;\n    }\n    uVar5 = uVar5 >> 1;\n    uVar3 = FUN_00103340(param_1,uVar6,uVar3,uVar6,uVar3,uVar2,uVar1,param_5);\n    uVar6 = *param_1;\n    iVar4 = iVar4 + -1;\n  } while (iVar4 != 0);\n  for (uVar5 = param_3[1]; uVar5 != 0; uVar5 = uVar5 >> 1) {\n    if ((uVar5 & 1) != 0) {\n      local_58 = FUN_00103340(param_1,local_60,local_58,uVar6,uVar3,uVar2,uVar1,param_5);\n      local_60 = *param_1;\n    }\n    uVar3 = FUN_00103340(param_1,uVar6,uVar3,uVar6,uVar3,uVar2,uVar1,param_5);\n    uVar6 = *param_1;\n  }\n  *param_1 = local_60;\n  return local_58;\n}\n\n", 
    "00102d30": "\nint FUN_00102d30(ulong *param_1,long *param_2,char *param_3)\n\n{\n  char cVar1;\n  ulong uVar2;\n  uint uVar3;\n  int iVar4;\n  ulong uVar5;\n  ulong uVar6;\n  char *pcVar7;\n  long lVar8;\n  \n  cVar1 = *param_3;\n  while (cVar1 == ' ') {\n    pcVar7 = param_3 + 1;\n    param_3 = param_3 + 1;\n    cVar1 = *pcVar7;\n  }\n  iVar4 = 4;\n  param_3 = param_3 + (cVar1 == '+');\n  pcVar7 = param_3;\n  do {\n    cVar1 = *pcVar7;\n    pcVar7 = pcVar7 + 1;\n    if (cVar1 == '\\0') {\n      lVar8 = 0;\n      uVar6 = 0;\n      if (iVar4 == 0) goto LAB_00102da8;\n      goto LAB_00102d7f;\n    }\n    iVar4 = 0;\n  } while ((int)cVar1 - 0x30U < 10);\n  iVar4 = 4;\n  lVar8 = 0;\n  uVar6 = 0;\nLAB_00102d7f:\n  *param_1 = uVar6;\n  *param_2 = lVar8;\n  return iVar4;\n  while( true ) {\n    uVar5 = lVar8 * 2;\n    uVar2 = lVar8 * 10;\n    uVar3 = (uint)((ulong)lVar8 >> 0x20);\n    lVar8 = (iVar4 - 0x30) + uVar2;\n    uVar5 = (ulong)(((uVar3 >> 0x1d) - ((int)uVar3 >> 0x1f)) + (uint)(uVar2 < uVar5) +\n                   (uint)CARRY8((ulong)(iVar4 - 0x30),uVar2));\n    uVar2 = uVar6 * 10;\n    uVar6 = uVar5 + uVar2;\n    if (CARRY8(uVar5,uVar2)) break;\nLAB_00102da8:\n    iVar4 = (int)*param_3;\n    param_3 = param_3 + 1;\n    if (iVar4 == 0) goto LAB_00102d7f;\n    if (0x1999999999999999 < uVar6) break;\n  }\n  *param_1 = uVar6;\n  *param_2 = lVar8;\n  return 1;\n}\n\n", 
    "001024f0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_00112e88)();\n  return;\n}\n\n", 
    "00107d40": "\nvoid FUN_00107d40(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00107d20(0,param_1,param_2);\n  return;\n}\n\n", 
    "00114088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001084d0": "\nuint * FUN_001084d0(char *param_1,int param_2)\n\n{\n  byte bVar1;\n  ushort *puVar2;\n  uint uVar3;\n  uint uVar4;\n  int iVar5;\n  uint *__dest;\n  size_t sVar6;\n  ushort **ppuVar7;\n  uint *puVar8;\n  uint *puVar9;\n  uint *unaff_R13;\n  long in_FS_OFFSET;\n  bool bVar10;\n  char cVar11;\n  uint *local_88;\n  undefined local_80;\n  undefined8 local_7c;\n  undefined local_74;\n  uint *local_70;\n  long local_68;\n  char local_60;\n  wint_t local_5c;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  __dest = (uint *)strdup(param_1);\n  if (__dest == (uint *)0x0) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00109090();\n  }\n  sVar6 = __ctype_get_mb_cur_max();\n  if (sVar6 < 2) {\n    puVar9 = __dest;\n    if (param_2 != 0) {\n      bVar1 = *(byte *)__dest;\n      if (bVar1 != 0) {\n        ppuVar7 = __ctype_b_loc();\n        do {\n          if ((*(byte *)((long)*ppuVar7 + (ulong)bVar1 * 2 + 1) & 0x20) == 0) break;\n          bVar1 = *(byte *)((long)puVar9 + 1);\n          puVar9 = (uint *)((long)puVar9 + 1);\n        } while (bVar1 != 0);\n      }\n      sVar6 = strlen((char *)puVar9);\n      memmove(__dest,puVar9,sVar6 + 1);\n      puVar9 = __dest;\n      if (param_2 == 1) goto LAB_001086c4;\n    }\n    do {\n      puVar8 = puVar9;\n      uVar3 = *puVar8 + 0xfefefeff & ~*puVar8;\n      uVar4 = uVar3 & 0x80808080;\n      puVar9 = puVar8 + 1;\n    } while (uVar4 == 0);\n    bVar10 = (uVar3 & 0x8080) == 0;\n    if (bVar10) {\n      uVar4 = uVar4 >> 0x10;\n    }\n    if (bVar10) {\n      puVar9 = (uint *)((long)puVar8 + 6);\n    }\n    puVar9 = (uint *)((long)puVar9 + (-4 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n    if (__dest <= puVar9) {\n      ppuVar7 = __ctype_b_loc();\n      puVar2 = *ppuVar7;\n      do {\n        if ((*(byte *)((long)puVar2 + (ulong)*(byte *)puVar9 * 2 + 1) & 0x20) == 0) break;\n        *(byte *)puVar9 = 0;\n        puVar9 = (uint *)((long)puVar9 + -1);\n      } while (__dest <= puVar9);\n    }\n  }\n  else {\n    puVar9 = __dest;\n    local_70 = __dest;\n    if (param_2 != 0) {\n      do {\n        puVar8 = puVar9;\n        uVar3 = *puVar8 + 0xfefefeff & ~*puVar8;\n        uVar4 = uVar3 & 0x80808080;\n        puVar9 = puVar8 + 1;\n      } while (uVar4 == 0);\n      local_80 = 0;\n      bVar10 = (uVar3 & 0x8080) == 0;\n      local_74 = 0;\n      local_7c = 0;\n      if (bVar10) {\n        uVar4 = uVar4 >> 0x10;\n      }\n      local_88 = puVar8 + 1;\n      if (bVar10) {\n        local_88 = (uint *)((long)puVar8 + 6);\n      }\n      local_88 = (uint *)((long)local_88 + (-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n      if (__dest < local_88) {\n        do {\n          local_74 = 0;\n          FUN_00109520(&local_88);\n          if ((local_60 == '\\0') || (iVar5 = iswspace(local_5c), iVar5 == 0)) break;\n          local_70 = (uint *)((long)local_70 + local_68);\n          local_74 = 0;\n        } while (local_70 < local_88);\n      }\n      puVar9 = local_70;\n      sVar6 = strlen((char *)local_70);\n      memmove(__dest,puVar9,sVar6 + 1);\n      puVar9 = __dest;\n      if (param_2 == 1) goto LAB_001086c4;\n    }\n    do {\n      puVar8 = puVar9;\n      uVar3 = *puVar8 + 0xfefefeff & ~*puVar8;\n      uVar4 = uVar3 & 0x80808080;\n      puVar9 = puVar8 + 1;\n    } while (uVar4 == 0);\n    local_80 = 0;\n    bVar10 = (uVar3 & 0x8080) == 0;\n    local_74 = 0;\n    local_7c = 0;\n    if (bVar10) {\n      uVar4 = uVar4 >> 0x10;\n    }\n    local_88 = puVar8 + 1;\n    if (bVar10) {\n      local_88 = (uint *)((long)puVar8 + 6);\n    }\n    local_88 = (uint *)((long)local_88 + (-3 - (ulong)CARRY1((byte)uVar4,(byte)uVar4)));\n    cVar11 = '\\0';\n    local_70 = __dest;\n    if (__dest < local_88) {\n      do {\n        local_74 = 0;\n        FUN_00109520(&local_88);\n        puVar9 = local_70;\n        if (cVar11 == '\\0') {\n          if (local_60 == '\\0') {\nLAB_001085f2:\n            cVar11 = '\\x01';\n          }\n          else {\n            iVar5 = iswspace(local_5c);\n            cVar11 = iVar5 == 0;\n          }\n        }\n        else if (cVar11 == '\\x01') {\n          local_70 = puVar9;\n          if ((local_60 != '\\0') && (iVar5 = iswspace(local_5c), local_70 = puVar9, iVar5 != 0)) {\n            cVar11 = '\\x02';\n            unaff_R13 = puVar9;\n          }\n        }\n        else if (((cVar11 != '\\x02') || (local_60 == '\\0')) ||\n                (iVar5 = iswspace(local_5c), iVar5 == 0)) goto LAB_001085f2;\n        local_74 = 0;\n        local_70 = (uint *)(local_68 + (long)local_70);\n      } while (local_70 < local_88);\n      if (cVar11 == '\\x02') {\n        *(byte *)unaff_R13 = 0;\n      }\n    }\n  }\nLAB_001086c4:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return __dest;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108fd0": "\nvoid FUN_00108fd0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00108f40(param_1,param_2,1);\n  return;\n}\n\n", 
    "00114080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_00112ec0)();\n  return pvVar1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t iconv(iconv_t __cd,char **__inbuf,size_t *__inbytesleft,char **__outbuf,\n            size_t *__outbytesleft)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_iconv_00112e30)();\n  return sVar1;\n}\n\n", 
    "00102680": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_00112f50)();\n  return;\n}\n\n", 
    "00106480": "\nundefined8\nFUN_00106480(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00106390(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "0010278f": "\nvoid FUN_0010278f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104f00": "\nvoid FUN_00104f00(char param_1)\n\n{\n  char *pcVar1;\n  char *pcVar2;\n  char *__src;\n  void *pvVar3;\n  \n  pcVar1 = DAT_001130f8 + 1;\n  pcVar2 = pcVar1;\n  *DAT_001130f8 = param_1;\n  DAT_001130f8 = pcVar2;\n  pvVar3 = DAT_001130f0;\n  if (param_1 == '\\n') {\n    if (DAT_00113010 == -1) {\n      DAT_00113010 = isatty(0);\n    }\n    if (DAT_00113010 != 0) {\n      FUN_00102c80();\n      return;\n    }\n    if (0x1ff < (ulong)((long)pcVar1 - (long)pvVar3)) {\n      pcVar2 = (char *)((long)pvVar3 + 0x200);\n      do {\n        __src = pcVar2;\n        pcVar2 = __src + -1;\n      } while (__src[-1] != '\\n');\n      DAT_001130f8 = __src;\n      FUN_00102c80();\n      pvVar3 = memcpy(DAT_001130f0,__src,(long)pcVar1 - (long)__src);\n      DAT_001130f8 = (char *)(((long)pcVar1 - (long)__src) + (long)pvVar3);\n      return;\n    }\n  }\n  return;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_00112e80)();\n  return sVar1;\n}\n\n", 
    "00114098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010278a": "\nvoid switchD_001066ff::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107d30": "\nvoid FUN_00107d30(undefined8 param_1)\n\n{\n  FUN_00107d00(0,param_1);\n  return;\n}\n\n", 
    "001060a0": "\nundefined8\nFUN_001060a0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106010(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00107e50": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00107e50(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_00113220;\n  uStack_40 = uRam0000000000113228;\n  local_38 = _DAT_00113230;\n  uStack_30 = uRam0000000000113238;\n  local_28 = _DAT_00113240;\n  uStack_20 = uRam0000000000113248;\n  local_18 = DAT_00113250;\n  FUN_00107a40(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00107820(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102799": "\nvoid switchD_001088d8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001050d0": "\nundefined8 FUN_001050d0(undefined8 param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  long in_FS_OFFSET;\n  long local_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  iVar1 = FUN_00102d30(&local_30,&local_28,param_1);\n  if (iVar1 == 0) {\n    if (-1 < local_30) {\n      if (DAT_00113100 != '\\0') {\n        fwrite(\"[using single-precision arithmetic] \",1,0x24,stderr);\n      }\n      FUN_00104fd0(local_30,local_28);\n      uVar2 = 1;\n      goto LAB_00105136;\n    }\nLAB_0010515a:\n    uVar2 = FUN_001080e0(param_1);\n    pcVar4 = \"%s is too large\";\n  }\n  else {\n    if (iVar1 == 1) goto LAB_0010515a;\n    uVar2 = FUN_001080e0(param_1);\n    pcVar4 = \"%s is not a valid positive integer\";\n  }\n  uVar3 = dcgettext(0,pcVar4,5);\n  error(0,0,uVar3,uVar2);\n  uVar2 = 0;\nLAB_00105136:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00108fe0": "\nvoid FUN_00108fe0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00108e70();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "00114090": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108ec0": "\nvoid thunk_FUN_00108e70(void)\n\n{\n  FUN_00108e70();\n  return;\n}\n\n", 
    "0010a470": "\nundefined8 FUN_0010a470(char *param_1,size_t param_2,iconv_t param_3,char **param_4,char **param_5)\n\n{\n  int iVar1;\n  size_t sVar2;\n  int *piVar3;\n  char *__ptr;\n  undefined8 uVar4;\n  char *pcVar5;\n  long in_FS_OFFSET;\n  char *local_1068;\n  size_t local_1060;\n  char *local_1058;\n  char *local_1050;\n  char local_1048 [4104];\n  long local_40;\n  \n  pcVar5 = (char *)0x0;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  iconv(param_3,(char **)0x0,(size_t *)0x0,(char **)0x0,(size_t *)0x0);\n  local_1068 = param_1;\n  local_1060 = param_2;\n  if (param_2 != 0) {\n    do {\n      local_1050 = (char *)0x1000;\n      local_1058 = local_1048;\n      sVar2 = iconv(param_3,&local_1068,&local_1060,&local_1058,(size_t *)&local_1050);\n      if (sVar2 == 0xffffffffffffffff) {\n        piVar3 = __errno_location();\n        if (*piVar3 != 7) {\n          if (*piVar3 != 0x16) goto LAB_0010a69f;\n          break;\n        }\n      }\n      pcVar5 = local_1058 + ((long)pcVar5 - (long)local_1048);\n    } while (local_1060 != 0);\n  }\n  local_1050 = (char *)0x1000;\n  local_1058 = local_1048;\n  sVar2 = iconv(param_3,(char **)0x0,(size_t *)0x0,&local_1058,(size_t *)&local_1050);\n  if (sVar2 != 0xffffffffffffffff) {\n    pcVar5 = local_1058 + ((long)pcVar5 - (long)local_1048);\n    if (pcVar5 == (char *)0x0) {\n      uVar4 = 0;\n      *param_5 = (char *)0x0;\n      goto LAB_0010a64d;\n    }\n    __ptr = *param_4;\n    if (((__ptr != (char *)0x0) && (pcVar5 <= *param_5)) ||\n       (__ptr = (char *)malloc((size_t)pcVar5), __ptr != (char *)0x0)) {\n      iconv(param_3,(char **)0x0,(size_t *)0x0,(char **)0x0,(size_t *)0x0);\n      local_1068 = param_1;\n      local_1060 = param_2;\n      local_1058 = __ptr;\n      local_1050 = pcVar5;\n      do {\n        if (local_1060 == 0) goto LAB_0010a612;\n        sVar2 = iconv(param_3,&local_1068,&local_1060,&local_1058,(size_t *)&local_1050);\n      } while (sVar2 != 0xffffffffffffffff);\n      piVar3 = __errno_location();\n      if (*piVar3 == 0x16) {\nLAB_0010a612:\n        sVar2 = iconv(param_3,(char **)0x0,(size_t *)0x0,&local_1058,(size_t *)&local_1050);\n        if (sVar2 != 0xffffffffffffffff) {\n          if (local_1050 != (char *)0x0) {\n                    /* WARNING: Subroutine does not return */\n            abort();\n          }\n          uVar4 = 0;\n          *param_4 = __ptr;\n          *param_5 = pcVar5;\n          goto LAB_0010a64d;\n        }\n      }\n      uVar4 = 0xffffffff;\n      if (*param_4 != __ptr) {\n        piVar3 = __errno_location();\n        iVar1 = *piVar3;\n        free(__ptr);\n        *piVar3 = iVar1;\n      }\n      goto LAB_0010a64d;\n    }\n    piVar3 = __errno_location();\n    *piVar3 = 0xc;\n  }\nLAB_0010a69f:\n  uVar4 = 0xffffffff;\nLAB_0010a64d:\n  if (local_40 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return uVar4;\n}\n\n", 
    "001091f0": "\nulong FUN_001091f0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00103960": "\n/* WARNING: Removing unreachable block (ram,0x00103c47) */\n\nundefined8 FUN_00103960(ulong param_1)\n\n{\n  ulong uVar1;\n  undefined auVar2 [16];\n  char cVar3;\n  ulong uVar4;\n  undefined8 uVar5;\n  ulong uVar6;\n  long lVar7;\n  ulong uVar8;\n  long lVar9;\n  int iVar10;\n  ulong uVar11;\n  undefined *puVar12;\n  byte *pbVar13;\n  ulong uVar14;\n  ulong uVar15;\n  long in_FS_OFFSET;\n  bool bVar16;\n  ulong local_178;\n  int local_168;\n  undefined local_148 [250];\n  byte local_4e;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 < 2) {\nLAB_00103c18:\n    uVar5 = 0;\n  }\n  else {\n    if (0x17ded78 < param_1) {\n      uVar1 = param_1 - 1;\n      uVar14 = uVar1;\n      if ((param_1 & 1) == 0) {\n        local_168 = 0;\n      }\n      else {\n        local_168 = 0;\n        do {\n          uVar14 = uVar14 >> 1;\n          local_168 = local_168 + 1;\n        } while ((uVar14 & 1) == 0);\n      }\n      uVar15 = 0;\n      iVar10 = 0x40;\n      uVar6 = (ulong)(byte)(&DAT_0010b500)[(uint)(param_1 >> 1) & 0x7f];\n      lVar7 = uVar6 * 2 - uVar6 * uVar6 * param_1;\n      lVar7 = lVar7 * 2 - lVar7 * lVar7 * param_1;\n      uVar8 = 0;\n      lVar7 = lVar7 * 2 - lVar7 * lVar7 * param_1;\n      uVar4 = 1;\n      uVar6 = param_1;\n      do {\n        uVar11 = uVar6 << 0x3f;\n        uVar6 = uVar6 >> 1;\n        uVar8 = uVar8 >> 1 | uVar11;\n        if ((uVar6 < uVar4) || ((uVar6 == uVar4 && (uVar8 <= uVar15)))) {\n          bVar16 = uVar15 < uVar8;\n          uVar15 = uVar15 - uVar8;\n          uVar4 = (uVar4 - uVar6) - (ulong)bVar16;\n        }\n        iVar10 = iVar10 + -1;\n      } while (iVar10 != 0);\n      lVar9 = (uVar15 * 2 - param_1) + (-(ulong)(uVar15 < param_1 - uVar15) & param_1);\n      cVar3 = FUN_00102bf0(param_1,lVar7,lVar9,uVar14,local_168,uVar15);\n      if (cVar3 == '\\0') goto LAB_00103c18;\n      FUN_001046a0(0,uVar1,local_148);\n      local_178 = 2;\n      pbVar13 = &DAT_0010e280;\n      while (puVar12 = local_148, local_4e != 0) {\n        do {\n          uVar6 = FUN_00102b80(lVar9,uVar1 / *(ulong *)(puVar12 + 0x10),param_1);\n          if (local_148 + (ulong)(local_4e - 1) * 8 == puVar12) {\n            if (uVar6 != uVar15) goto LAB_00103be8;\n            break;\n          }\n          puVar12 = puVar12 + 8;\n        } while (uVar6 != uVar15);\n        local_178 = local_178 + *pbVar13;\n        auVar2 = ZEXT816(uVar15) * ZEXT816(local_178);\n        uVar6 = SUB168(auVar2 >> 0x40,0);\n        if (uVar6 == 0) {\n          lVar9 = SUB168((ZEXT816(0) << 0x40 | auVar2 & (undefined  [16])0xffffffffffffffff) %\n                         ZEXT816(param_1),0);\n        }\n        else {\n          if (param_1 <= uVar6) {\n                    /* WARNING: Subroutine does not return */\n            __assert_fail(\"(s1) < (n)\",\"src/factor.c\",0x4f4,\"prime_p\");\n          }\n          iVar10 = 0x40;\n          uVar4 = 0;\n          uVar6 = param_1;\n          do {\n            uVar8 = uVar6 << 0x3f;\n            uVar6 = uVar6 >> 1;\n            uVar4 = uVar4 >> 1 | uVar8;\n            if (CONCAT88(uVar6,uVar4) <= auVar2) {\n              auVar2 = auVar2 - CONCAT88(uVar6,uVar4);\n            }\n            lVar9 = SUB168(auVar2,0);\n            iVar10 = iVar10 + -1;\n          } while (iVar10 != 0);\n        }\n        cVar3 = FUN_00102bf0(param_1,lVar7,lVar9,uVar14,local_168,uVar15);\n        if (cVar3 == '\\0') goto LAB_00103c18;\n        pbVar13 = pbVar13 + 1;\n        if (pbVar13 == &DAT_0010e51c) {\n          uVar5 = dcgettext(0,\"Lucas prime test failure.  This should not happen\",5);\n          error(0,0,uVar5);\n                    /* WARNING: Subroutine does not return */\n          abort();\n        }\n      }\n    }\nLAB_00103be8:\n    uVar5 = 1;\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar5;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001090d0": "\nint FUN_001090d0(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  iVar1 = FUN_0010a470();\n  if (iVar1 < 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109090();\n    }\n  }\n  return iVar1;\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_00112fb8)();\n  return ppuVar1;\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_00112ee8)();\n  return iVar1;\n}\n\n", 
    "00109270": "\nulong FUN_00109270(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_00112f78)();\n  return iVar1;\n}\n\n", 
    "00107f20": "\nvoid FUN_00107f20(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00105eb0(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00107a40(puVar1,0x3a,1);\n  FUN_00107820(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105f80": "\nundefined8 FUN_00105f80(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00105f20(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_00112fb0)();\n  return iVar1;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_00112f20)();\n  return pvVar1;\n}\n\n", 
    "00114060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_00112e90)();\n  return;\n}\n\n", 
    "00107a80": "\nundefined4 FUN_00107a80(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_00113220;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001080f0": "\nuint FUN_001080f0(ulong param_1,long param_2)\n\n{\n  return (uint)(*(ulong *)(param_2 + (param_1 >> 6) * 8) >> ((byte)param_1 & 0x3f)) & 1;\n}\n\n", 
    "00114180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107fc0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00107fc0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_00113220;\n  uStack_60 = uRam0000000000113228;\n  local_38 = DAT_00113250;\n  local_58 = _DAT_00113230;\n  uStack_50 = uRam0000000000113238;\n  local_48 = _DAT_00113240;\n  uStack_40 = uRam0000000000113248;\n  FUN_00107aa0(&local_68);\n  FUN_00107820(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106660": "\nulong FUN_00106660(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00106ae7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00106b09;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_001070a6;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00106a5f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00106ae7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00106a5f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00106530(&DAT_0010e597,param_5);\n      local_78 = (char *)FUN_00106530(\"\\'\");\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_001067b0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00107010_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00106fab;\n          goto LAB_00106d9b;\n        default:\nswitchD_00106ec0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00109160(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00107298;\n              }\n              if (lVar10 == -2) goto joined_r0x001076aa;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00106c80;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00107298;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00106a21;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00106f68;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00106f68;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00106f68:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00106c77;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00106c64;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00106c64:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00106988;\n          goto LAB_00106c77;\n        case 0x23:\n        case 0x7e:\nLAB_00106c5b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00106c64;\n          goto LAB_00106985;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00106ec0_caseD_25;\n        case 0x27:\nswitchD_00106ec0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00106988;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x001069ab;\n          }\n          goto LAB_00106c80;\n        case 0x3f:\nswitchD_00106ec0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010760e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00106988;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x001069ab;\n          }\n          goto LAB_00106c80;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_001068b8_caseD_5c;\n          if (!bVar20) {\nLAB_00106ef8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00106f10;\n          }\n          goto LAB_00106c80;\n        case 0x7b:\n        case 0x7d:\nswitchD_00106ec0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00106c5b;\nLAB_00106985:\n          bVar23 = false;\n          goto LAB_00106988;\n        }\nLAB_00106d90:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00106d9b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_001069a8;\n          goto LAB_001068d0;\n        }\nLAB_00106dd0:\n        bVar21 = false;\n        goto joined_r0x00106de1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00106ff0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_001068b8_caseD_0;\n          default:\n            goto switchD_00106ec0_caseD_1;\n          case 7:\n            goto switchD_00107010_caseD_7;\n          case 8:\n            goto switchD_00107010_caseD_8;\n          case 9:\n            goto switchD_001068b8_caseD_9;\n          case 10:\n            goto switchD_00107010_caseD_a;\n          case 0xb:\n            goto switchD_00107010_caseD_b;\n          case 0xc:\n            goto switchD_00107010_caseD_c;\n          case 0xd:\n            goto switchD_00107010_caseD_d;\n          case 0x20:\n            goto LAB_00107039;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_001068b8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00107021;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001068c8;\n          case 0x27:\n            goto switchD_00106ec0_caseD_27;\n          case 0x3f:\n            goto switchD_00106ec0_caseD_3f;\n          case 0x5c:\n            goto switchD_001068b8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00106ec0_caseD_7b;\n          }\n        }\n        goto LAB_00106c8e;\n      }\nLAB_00106ff0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00107010_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_001068b8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x001069ab;\n            }\nLAB_0010744b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010744b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00107488;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x001069ab;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00106c80;\n      default:\n        bVar23 = false;\n        goto switchD_00106ec0_caseD_1;\n      case 7:\nswitchD_00107010_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00107010_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_001068b8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00106d90;\n      case 10:\nswitchD_00107010_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00106dd0;\n      case 0xb:\nswitchD_00107010_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00106dd0;\n      case 0xc:\nswitchD_00107010_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00107010_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00106dd0;\n      case 0x20:\n        bVar5 = false;\nLAB_00107039:\n        uVar15 = 0x20;\n        goto LAB_001068c8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_001068b8_caseD_21:\n        bVar22 = false;\n        goto LAB_00106985;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00107021:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00106988;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001068d0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001068c8:\n        bVar22 = false;\n        goto LAB_001068d0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00106ec0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00106ec0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_001068b8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00106ef8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00106d90;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00106ec0_caseD_7b;\n      }\n      if (bVar20) goto LAB_00106df0;\n      bVar21 = false;\n      goto LAB_00106946;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00106c77:\n      param_5 = 2;\nLAB_00106c80:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00106c8e:\n      uVar13 = FUN_00106660(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00106cc8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00107715:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00106cc8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00106660(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00106cc8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00107715;\nLAB_001070a6:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00106b09:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00106fab:\n  uVar13 = uVar13 + 1;\n  goto LAB_001067b0;\nswitchD_0010760e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00107488:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x001069ab;\n    goto LAB_001068d0;\n  }\n  goto LAB_00106c8e;\njoined_r0x001076aa:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00107298:\n  if (1 < uVar17) {\nLAB_001072a2:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00106c80;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00106958;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00106f10;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00106a21:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_001072a2;\n  }\nswitchD_00106ec0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00106988:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001068d0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x001069ab;\n  }\n  else {\nLAB_001069a8:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x001069ab:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00106f10:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00106958;\n    }\n  }\njoined_r0x00106de1:\n  if (bVar20) {\nLAB_00106df0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00106c80;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00106946:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00106958:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_001067b0;\n}\n\n", 
    "001096a0": "\nvoid FUN_001096a0(undefined8 *param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  \n  *param_1 = *param_2;\n  cVar1 = *(char *)(param_2 + 1);\n  *(char *)(param_1 + 1) = cVar1;\n  if (cVar1 == '\\0') {\n    *(undefined8 *)((long)param_1 + 0xc) = 0;\n  }\n  else {\n    *(undefined8 *)((long)param_1 + 0xc) = *(undefined8 *)((long)param_2 + 0xc);\n  }\n  *(undefined *)((long)param_1 + 0x14) = *(undefined *)((long)param_2 + 0x14);\n  FUN_0010ac90(param_1 + 3,param_2 + 3);\n  return;\n}\n\n", 
    "001026c0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_00112f70)();\n  return;\n}\n\n", 
    "00108f10": "\nvoid FUN_00108f10(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00108ed0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00109090();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_00112ee0)();\n  return iVar1;\n}\n\n", 
    "0010ae54": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "00109160": "\nsize_t FUN_00109160(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00109490(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107f10": "\nvoid FUN_00107f10(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00107e50(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00109040": "\nvoid FUN_00109040(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00108e70(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00114078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114198": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102b80": "\nundefined8\nFUN_00102b80(undefined8 param_1,ulong param_2,undefined8 param_3,undefined8 param_4,\n            undefined8 param_5)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = param_1;\n  if (((param_2 & 1) != 0) || (uVar1 = param_5, param_2 != 0)) {\n    do {\n      while( true ) {\n        param_1 = FUN_00102b50(param_1,param_1,param_3);\n        param_2 = param_2 >> 1;\n        if ((param_2 & 1) == 0) break;\n        uVar1 = FUN_00102b50(uVar1,param_1,param_3);\n      }\n    } while (param_2 != 0);\n  }\n  return uVar1;\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_00112fa8)();\n  return iVar1;\n}\n\n", 
    "001080e0": "\nvoid FUN_001080e0(undefined8 param_1)\n\n{\n  FUN_001080d0(0,param_1);\n  return;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswalnum(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswalnum_00112f18)();\n  return iVar1;\n}\n\n", 
    "00114070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102770": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_00112fc8)();\n  return;\n}\n\n", 
    "00102650": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_00112f38)();\n  return;\n}\n\n", 
    "00108c80": "\nvoid FUN_00108c80(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00108830();\n  return;\n}\n\n", 
    "0010a420": "\nvoid FUN_0010a420(long param_1,long param_2)\n\n{\n  *(long *)(param_1 + 0x10) = *(long *)(param_1 + 0x10) + param_2;\n  return;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_00112ea8)();\n  return pcVar1;\n}\n\n", 
    "001140e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104030": "\nvoid FUN_00104030(ulong param_1,ulong param_2,ulong param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  long lVar5;\n  ulong uVar6;\n  long lVar7;\n  long lVar8;\n  long lVar9;\n  long in_FS_OFFSET;\n  bool bVar10;\n  long local_b8;\n  ulong local_b0;\n  ulong local_a8;\n  ulong local_98;\n  ulong local_68;\n  ulong local_60;\n  ulong local_58;\n  ulong local_50;\n  ulong local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  local_a8 = (ulong)(1 < param_1);\n  lVar5 = (ulong)(-(uint)(param_1 < 2) & 0x40) + 0x3f;\n  uVar6 = (ulong)(param_1 < 2);\n  do {\n    local_b0 = uVar6 * 2;\n    local_a8 = local_a8 * 2 | uVar6 >> 0x3f;\n    if ((param_1 < local_a8) || ((param_1 == local_a8 && (param_2 <= local_b0)))) {\n      bVar10 = local_b0 < param_2;\n      local_b0 = local_b0 - param_2;\n      local_a8 = (local_a8 - param_1) - (ulong)bVar10;\n    }\n    lVar5 = lVar5 + -1;\n    uVar6 = local_b0;\n  } while (lVar5 != -1);\n  uVar6 = local_b0 * 2;\n  local_68 = local_a8 * 2 + (ulong)CARRY8(local_b0,local_b0);\n  if ((param_1 < local_68) || ((local_68 == param_1 && (param_2 <= uVar6)))) {\n    bVar10 = uVar6 < param_2;\n    uVar6 = uVar6 - param_2;\n    local_68 = (local_68 - param_1) - (ulong)bVar10;\n  }\n  local_60 = local_68;\n  local_58 = local_68;\n  if ((param_1 != 0) || (param_2 != 1)) {\n    lVar5 = 1;\n    local_b8 = 1;\n    uVar3 = uVar6;\n    local_98 = uVar6;\nLAB_00104130:\n    uVar2 = (ulong)(byte)(&DAT_0010b500)[(uint)(param_2 >> 1) & 0x7f];\n    lVar7 = uVar2 * 2 - uVar2 * uVar2 * param_2;\n    lVar7 = lVar7 * 2 - lVar7 * lVar7 * param_2;\n    lVar8 = lVar7 * 2 - lVar7 * lVar7 * param_2;\n    lVar7 = local_b8;\n    uVar2 = local_58;\n    do {\n      local_58 = uVar2;\n      local_b8 = lVar7;\n      uVar2 = FUN_00103340(&local_48,local_68,uVar6,local_68,uVar6,param_1,param_2,lVar8);\n      uVar6 = uVar2 + param_3;\n      local_68 = local_48 + CARRY8(uVar2,param_3);\n      if ((param_1 < local_68) || ((local_68 == param_1 && (param_2 <= uVar6)))) {\n        bVar10 = uVar6 < param_2;\n        uVar6 = uVar6 - param_2;\n        local_68 = (local_68 - param_1) - (ulong)bVar10;\n      }\n      uVar2 = local_98 - uVar6;\n      lVar7 = (local_60 - local_68) - (ulong)(local_98 < uVar6);\n      if (lVar7 < 0) {\n        bVar10 = CARRY8(uVar2,param_2);\n        uVar2 = uVar2 + param_2;\n        lVar7 = lVar7 + param_1 + (ulong)bVar10;\n      }\n      local_b0 = FUN_00103340(&local_48,local_a8,local_b0,lVar7,uVar2,param_1,param_2,lVar8);\n      local_a8 = local_48;\n      if (((uint)lVar5 & 0x1f) == 1) {\n        lVar7 = FUN_001037a0(&local_50,local_48,local_b0,param_1,param_2);\n        if ((local_50 != 0) || (lVar7 != 1)) goto LAB_0010437a;\n        local_58 = local_68;\n        uVar3 = uVar6;\n      }\n      lVar9 = lVar5 + -1;\n      lVar5 = lVar9;\n      lVar7 = local_b8;\n      uVar2 = local_58;\n      if (lVar9 == 0) {\n        local_60 = local_68;\n        lVar5 = local_b8;\n        uVar3 = uVar6;\n        lVar7 = local_b8 * 2;\n        local_98 = uVar6;\n        uVar2 = local_68;\n        if (local_b8 != 0) {\n          do {\n            uVar3 = FUN_00103340(&local_48,local_68,uVar6,local_68,uVar6,param_1,param_2,lVar8);\n            uVar6 = uVar3 + param_3;\n            local_68 = local_48 + CARRY8(uVar3,param_3);\n            if ((param_1 < local_68) || ((local_68 == param_1 && (param_2 <= uVar6)))) {\n              bVar10 = uVar6 < param_2;\n              uVar6 = uVar6 - param_2;\n              local_68 = (local_68 - param_1) - (ulong)bVar10;\n            }\n            lVar9 = lVar9 + 1;\n            uVar3 = uVar6;\n            uVar2 = local_68;\n          } while (local_b8 != lVar9);\n        }\n      }\n    } while( true );\n  }\nLAB_001044b9:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n  while (uVar2 == 1) {\nLAB_0010437a:\n    uVar2 = FUN_00103340(&local_48,local_58,uVar3,local_58,uVar3,param_1,param_2,lVar8);\n    uVar3 = uVar2 + param_3;\n    local_58 = local_48 + CARRY8(uVar2,param_3);\n    if ((param_1 < local_58) || ((local_58 == param_1 && (param_2 <= uVar3)))) {\n      bVar10 = uVar3 < param_2;\n      uVar3 = uVar3 - param_2;\n      local_58 = (local_58 - param_1) - (ulong)bVar10;\n    }\n    uVar2 = local_98 - uVar3;\n    lVar7 = (local_60 - local_58) - (ulong)(local_98 < uVar3);\n    if (lVar7 < 0) {\n      bVar10 = CARRY8(uVar2,param_2);\n      uVar2 = uVar2 + param_2;\n      lVar7 = lVar7 + param_1 + (ulong)bVar10;\n    }\n    uVar2 = FUN_001037a0(&local_50,lVar7,uVar2,param_1,param_2);\n    if (local_50 != 0) {\n      if ((uVar2 == param_2) && (local_50 == param_1)) {\n        FUN_00104030(param_1,param_2,param_3 + 1,param_4);\n        goto LAB_001044b9;\n      }\n      uVar6 = (ulong)(byte)(&DAT_0010b500)[(uint)(uVar2 >> 1) & 0x7f];\n      lVar5 = uVar6 * 2 - uVar6 * uVar6 * uVar2;\n      lVar5 = lVar5 * 2 - lVar5 * lVar5 * uVar2;\n      param_2 = param_2 * (lVar5 * 2 - lVar5 * lVar5 * uVar2);\n      cVar1 = FUN_00104770(local_50,uVar2);\n      if (cVar1 == '\\0') {\n        FUN_00104030(local_50,uVar2,param_3 + 1,param_4);\n        goto LAB_00104497;\n      }\n      FUN_00103750(param_4,local_50,uVar2);\n      cVar1 = FUN_00103960(param_2);\n      goto joined_r0x00104652;\n    }\n  }\n  uVar4 = (ulong)(byte)(&DAT_0010b500)[(uint)(uVar2 >> 1) & 0x7f];\n  lVar7 = uVar4 * 2 - uVar4 * uVar4 * uVar2;\n  lVar7 = lVar7 * 2 - lVar7 * lVar7 * uVar2;\n  lVar7 = lVar7 * 2 - lVar7 * lVar7 * uVar2;\n  param_2 = param_2 * lVar7;\n  if (param_1 < uVar2) {\n    param_1 = 0;\n  }\n  else {\n    param_1 = (param_1 - SUB168(ZEXT816(param_2) * ZEXT816(uVar2) >> 0x40,0)) * lVar7;\n  }\n  cVar1 = FUN_00103960(uVar2);\n  if (cVar1 == '\\0') {\n    FUN_00103ca0(uVar2,param_3 + 1,param_4);\n  }\n  else {\n    FUN_00102a90(param_4,uVar2,1);\n  }\n  if (param_1 == 0) {\nLAB_00104497:\n    cVar1 = FUN_00103960(param_2);\njoined_r0x00104652:\n    if (cVar1 == '\\0') {\n      FUN_00103ca0(param_2,param_3,param_4);\n    }\n    else {\n      FUN_00102a90(param_4,param_2,1);\n    }\n    goto LAB_001044b9;\n  }\n  cVar1 = FUN_00104770(param_1,param_2);\n  if (cVar1 != '\\0') goto LAB_00104621;\n  uVar6 = FUN_001038b0(&local_68,local_68,uVar6,param_1,param_2);\n  local_98 = FUN_001038b0(&local_60,local_60,local_98,param_1,param_2);\n  uVar3 = FUN_001038b0(&local_58,local_58,uVar3,param_1,param_2);\n  goto LAB_00104130;\nLAB_00104621:\n  FUN_00103750(param_4,param_1,param_2);\n  goto LAB_001044b9;\n}\n\n", 
    "00107db0": "\nvoid FUN_00107db0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00105eb0(auStack_68);\n  FUN_00107820(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00114038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t iconv(iconv_t __cd,char **__inbuf,size_t *__inbytesleft,char **__outbuf,\n            size_t *__outbytesleft)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102e10": "\nulong FUN_00102e10(ulong *param_1,ulong param_2,ulong param_3,undefined8 param_4)\n\n{\n  ulong uVar1;\n  ulong uVar2;\n  ulong uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  ulong uVar6;\n  uint uVar7;\n  ulong uVar8;\n  long lVar9;\n  ulong uVar10;\n  byte bVar11;\n  ulong *puVar12;\n  \n  if ((param_3 & 1) == 0) {\n    if (param_3 != 0) {\n      lVar9 = 0;\n      if (param_3 != 0) {\n        for (; (param_3 >> lVar9 & 1) == 0; lVar9 = lVar9 + 1) {\n        }\n      }\n      bVar11 = (byte)lVar9;\n      uVar2 = param_2 << (0x40 - bVar11 & 0x3f);\n      param_2 = param_2 >> (bVar11 & 0x3f);\n      param_3 = param_3 >> (bVar11 & 0x3f) | uVar2;\n      FUN_00102a90(param_4,2);\n      goto LAB_00102ec2;\n    }\n    lVar9 = 0;\n    if (param_2 != 0) {\n      for (; (param_2 >> lVar9 & 1) == 0; lVar9 = lVar9 + 1) {\n      }\n    }\n    param_3 = param_2 >> ((byte)lVar9 & 0x3f);\n    FUN_00102a90(param_4,2,(int)lVar9 + 0x40);\n  }\n  else {\nLAB_00102ec2:\n    if (param_2 != 0) {\n      uVar2 = 0xaaaaaaaaaaaaaaab;\n      uVar4 = 2;\n      uVar5 = 3;\n      uVar6 = 1;\n      puVar12 = &DAT_0010b588;\n      do {\n        uVar3 = SUB168(ZEXT816(uVar2 * param_3) * ZEXT816(uVar5) >> 0x40,0);\n        if (uVar3 <= param_2) {\n          uVar1 = *puVar12;\n          uVar8 = uVar2 * param_3;\n          do {\n            uVar10 = (param_2 - uVar3) * uVar2;\n            if (uVar1 <= uVar10 && uVar10 - uVar1 != 0) break;\n            FUN_00102a90();\n            uVar3 = SUB168(ZEXT816(uVar2 * uVar8) * ZEXT816(uVar5) >> 0x40,0);\n            param_3 = uVar8;\n            param_2 = uVar10;\n            uVar8 = uVar2 * uVar8;\n          } while (uVar3 <= uVar10);\n        }\n        uVar2 = uVar6 & 0xffffffff;\n        uVar5 = uVar5 + uVar4;\n        if ((param_2 == 0) || (0x29b < (uint)uVar2)) goto LAB_00102fa8;\n        uVar4 = (ulong)(byte)(&DAT_0010e281)[uVar6];\n        uVar2 = puVar12[1];\n        uVar6 = uVar6 + 1;\n        puVar12 = puVar12 + 2;\n      } while( true );\n    }\n  }\n  bVar11 = 0x1a;\n  uVar2 = 0;\n  lVar9 = -0x5555555555555555;\n  uVar5 = 3;\n  uVar6 = 0x5555555555555555;\n  *param_1 = 0;\nLAB_001030c4:\n  do {\n    uVar4 = param_3 * lVar9;\n    if (uVar4 < uVar6 || uVar4 - uVar6 == 0) {\n      do {\n        param_3 = uVar4;\n        FUN_00102b20();\n        uVar4 = param_3 * lVar9;\n      } while (uVar4 < uVar6 || uVar4 - uVar6 == 0);\n      uVar6 = (&DAT_0010b590)[uVar2 * 2] * param_3;\n      if ((&DAT_0010b590)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b598)[uVar2 * 2])\n      goto LAB_00103134;\nLAB_00103004:\n      uVar6 = (&DAT_0010b5a0)[uVar2 * 2] * param_3;\n      if ((ulong)(&DAT_0010b5a8)[uVar2 * 2] < (&DAT_0010b5a0)[uVar2 * 2] * param_3)\n      goto LAB_00103018;\nLAB_0010317c:\n      do {\n        param_3 = uVar6;\n        FUN_00102b20();\n        uVar6 = (&DAT_0010b5a0)[uVar2 * 2] * param_3;\n      } while ((&DAT_0010b5a0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5a8)[uVar2 * 2]);\n      uVar6 = (&DAT_0010b5b0)[uVar2 * 2] * param_3;\n      if (uVar6 < (ulong)(&DAT_0010b5b8)[uVar2 * 2] || uVar6 - (&DAT_0010b5b8)[uVar2 * 2] == 0)\n      goto LAB_001031c4;\nLAB_0010302c:\n      uVar6 = (&DAT_0010b5c0)[uVar2 * 2] * param_3;\n      if ((ulong)(&DAT_0010b5c8)[uVar2 * 2] <= uVar6 && uVar6 - (&DAT_0010b5c8)[uVar2 * 2] != 0)\n      goto LAB_00103040;\nLAB_0010320c:\n      do {\n        param_3 = uVar6;\n        FUN_00102b20();\n        uVar6 = (&DAT_0010b5c0)[uVar2 * 2] * param_3;\n      } while ((&DAT_0010b5c0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5c8)[uVar2 * 2]);\n      uVar6 = (&DAT_0010b5d0)[uVar2 * 2] * param_3;\n      if (uVar6 < (ulong)(&DAT_0010b5d8)[uVar2 * 2] || uVar6 - (&DAT_0010b5d8)[uVar2 * 2] == 0)\n      goto LAB_00103254;\nLAB_00103054:\n      uVar6 = (&DAT_0010b5e0)[uVar2 * 2] * param_3;\n      if ((ulong)(&DAT_0010b5e8)[uVar2 * 2] <= uVar6 && uVar6 - (&DAT_0010b5e8)[uVar2 * 2] != 0)\n      goto LAB_00103068;\nLAB_0010329c:\n      do {\n        param_3 = uVar6;\n        FUN_00102b20();\n        uVar6 = (&DAT_0010b5e0)[uVar2 * 2] * param_3;\n      } while ((&DAT_0010b5e0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5e8)[uVar2 * 2]);\n      uVar6 = (&DAT_0010b5f0)[uVar2 * 2] * param_3;\n      if ((&DAT_0010b5f0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5f8)[uVar2 * 2]) {\nLAB_001032e7:\n        do {\n          param_3 = uVar6;\n          FUN_00102b20();\n          uVar6 = (&DAT_0010b5f0)[uVar2 * 2] * param_3;\n        } while ((&DAT_0010b5f0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5f8)[uVar2 * 2]);\n      }\n    }\n    else {\n      uVar6 = (&DAT_0010b590)[uVar2 * 2] * param_3;\n      if ((ulong)(&DAT_0010b598)[uVar2 * 2] < (&DAT_0010b590)[uVar2 * 2] * param_3)\n      goto LAB_00103004;\nLAB_00103134:\n      do {\n        param_3 = uVar6;\n        FUN_00102b20();\n        uVar6 = (&DAT_0010b590)[uVar2 * 2] * param_3;\n      } while ((&DAT_0010b590)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b598)[uVar2 * 2]);\n      uVar6 = (&DAT_0010b5a0)[uVar2 * 2] * param_3;\n      if ((&DAT_0010b5a0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5a8)[uVar2 * 2])\n      goto LAB_0010317c;\nLAB_00103018:\n      uVar6 = (&DAT_0010b5b0)[uVar2 * 2] * param_3;\n      if ((ulong)(&DAT_0010b5b8)[uVar2 * 2] <= uVar6 && uVar6 - (&DAT_0010b5b8)[uVar2 * 2] != 0)\n      goto LAB_0010302c;\nLAB_001031c4:\n      do {\n        param_3 = uVar6;\n        FUN_00102b20();\n        uVar6 = (&DAT_0010b5b0)[uVar2 * 2] * param_3;\n      } while ((&DAT_0010b5b0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5b8)[uVar2 * 2]);\n      uVar6 = (&DAT_0010b5c0)[uVar2 * 2] * param_3;\n      if (uVar6 < (ulong)(&DAT_0010b5c8)[uVar2 * 2] || uVar6 - (&DAT_0010b5c8)[uVar2 * 2] == 0)\n      goto LAB_0010320c;\nLAB_00103040:\n      uVar6 = (&DAT_0010b5d0)[uVar2 * 2] * param_3;\n      if ((ulong)(&DAT_0010b5d8)[uVar2 * 2] <= uVar6 && uVar6 - (&DAT_0010b5d8)[uVar2 * 2] != 0)\n      goto LAB_00103054;\nLAB_00103254:\n      do {\n        param_3 = uVar6;\n        FUN_00102b20();\n        uVar6 = (&DAT_0010b5d0)[uVar2 * 2] * param_3;\n      } while ((&DAT_0010b5d0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5d8)[uVar2 * 2]);\n      uVar6 = (&DAT_0010b5e0)[uVar2 * 2] * param_3;\n      if (uVar6 < (ulong)(&DAT_0010b5e8)[uVar2 * 2] || uVar6 - (&DAT_0010b5e8)[uVar2 * 2] == 0)\n      goto LAB_0010329c;\nLAB_00103068:\n      uVar6 = (&DAT_0010b5f0)[uVar2 * 2] * param_3;\n      if ((&DAT_0010b5f0)[uVar2 * 2] * param_3 <= (ulong)(&DAT_0010b5f8)[uVar2 * 2])\n      goto LAB_001032e7;\n    }\n    uVar5 = uVar5 + bVar11;\n    if (param_3 <= uVar5 * uVar5 && uVar5 * uVar5 - param_3 != 0) {\n      return param_3;\n    }\n    uVar7 = (int)uVar2 + 8;\n    if (0x29b < uVar7) {\n      return param_3;\n    }\n    uVar2 = (ulong)uVar7;\n    bVar11 = (&DAT_0010dfc0)[uVar2];\n    uVar6 = (&DAT_0010b588)[uVar2 * 2];\n    lVar9 = *(long *)(&DAT_0010b580 + uVar2 * 0x10);\n  } while( true );\nLAB_00102fa8:\n  *param_1 = param_2;\n  if (0x29b < (uint)uVar2) {\n    return param_3;\n  }\n  bVar11 = (&DAT_0010dfc0)[uVar2];\n  uVar6 = (&DAT_0010b588)[uVar2 * 2];\n  lVar9 = *(long *)(&DAT_0010b580 + uVar2 * 0x10);\n  goto LAB_001030c4;\n}\n\n", 
    "001140e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108070": "\nvoid FUN_00108070(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00108060(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_00112f88)();\n  return;\n}\n\n", 
    "00109490": "\nbool FUN_00109490(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_00112ef8)();\n  return iVar1;\n}\n\n", 
    "001024b0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_00112e68)();\n  return;\n}\n\n", 
    "00107d00": "\nvoid FUN_00107d00(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00107820(param_1,param_2,0xffffffffffffffff,&DAT_00113220);\n  return;\n}\n\n", 
    "00109250": "\nuint FUN_00109250(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00114040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint getc_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107e20": "\nvoid FUN_00107e20(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00107d50(0,param_1,param_2);\n  return;\n}\n\n", 
    "00109130": "\nlong FUN_00109130(void)\n\n{\n  long lVar1;\n  int *piVar2;\n  \n  lVar1 = FUN_0010a960();\n  if (lVar1 == 0) {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0xc) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00109090();\n    }\n  }\n  return lVar1;\n}\n\n", 
    "00114168": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102a90": "\nvoid FUN_00102a90(long param_1,ulong param_2,char param_3)\n\n{\n  ulong *puVar1;\n  byte bVar2;\n  ulong uVar3;\n  ulong uVar4;\n  ulong uVar5;\n  char *pcVar6;\n  ulong *puVar7;\n  bool bVar8;\n  \n  bVar2 = *(byte *)(param_1 + 0xfa);\n  puVar7 = (ulong *)(param_1 + 0x10);\n  pcVar6 = (char *)(param_1 + 0xe0);\n  if (bVar2 != 0) {\n    uVar4 = (ulong)(int)(bVar2 - 1);\n    uVar3 = uVar4;\n    do {\n      uVar5 = uVar3 & 0xffffffff;\n      puVar1 = (ulong *)(param_1 + 0x10 + uVar3 * 8);\n      bVar8 = *puVar1 == param_2;\n      if (*puVar1 < param_2 || bVar8) {\n        if (bVar8) {\n          pcVar6[uVar3] = pcVar6[uVar3] + param_3;\n          return;\n        }\n        puVar7 = puVar7 + uVar3 + 1;\n        pcVar6 = pcVar6 + uVar3 + 1;\n        if ((int)(bVar2 - 1) <= (int)uVar5) goto LAB_00102b02;\n        break;\n      }\n      uVar3 = uVar3 - 1;\n      uVar5 = uVar3 & 0xffffffff;\n    } while ((int)uVar3 != -1);\n    do {\n      *(undefined8 *)(param_1 + 0x18 + uVar4 * 8) = *(undefined8 *)(param_1 + 0x10 + uVar4 * 8);\n      *(undefined *)(param_1 + 0xe1 + uVar4) = *(undefined *)(param_1 + 0xe0 + uVar4);\n      uVar4 = uVar4 - 1;\n    } while ((int)uVar5 < (int)uVar4);\n  }\nLAB_00102b02:\n  *puVar7 = param_2;\n  *pcVar6 = param_3;\n  *(byte *)(param_1 + 0xfa) = bVar2 + 1;\n  return;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_00112ea0)();\n  return pcVar1;\n}\n\n", 
    "00114160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_00112e10)();\n  return piVar1;\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\niconv_t iconv_open(char *__tocode,char *__fromcode)\n\n{\n  iconv_t pvVar1;\n  \n  pvVar1 = (iconv_t)(*(code *)PTR_iconv_open_00112fc0)();\n  return pvVar1;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_00112f30)();\n  return pcVar1;\n}\n\n", 
    "00106200": "\nundefined8\nFUN_00106200(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00109340((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00106150(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001140f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_00112e60)();\n  return iVar1;\n}\n\n", 
    "0010a2a0": "\nvoid FUN_0010a2a0(char *param_1)\n\n{\n  char *pcVar1;\n  undefined8 uVar2;\n  char cVar3;\n  int iVar4;\n  size_t sVar5;\n  undefined8 uVar6;\n  long lVar7;\n  \n  if (param_1[0xc] != '\\0') {\n    return;\n  }\n  if (*param_1 == '\\0') {\n    pcVar1 = *(char **)(param_1 + 0x10);\n    cVar3 = FUN_0010acf0((int)*pcVar1);\n    if (cVar3 != '\\0') {\n      *(undefined8 *)(param_1 + 0x18) = 1;\n      cVar3 = *pcVar1;\n      param_1[0x20] = '\\x01';\n      *(int *)(param_1 + 0x24) = (int)cVar3;\n      goto LAB_0010a2e2;\n    }\n    iVar4 = mbsinit((mbstate_t *)(param_1 + 4));\n    if (iVar4 == 0) {\n                    /* WARNING: Subroutine does not return */\n      __assert_fail(\"mbsinit (&iter->state)\",\"lib/mbuiter.h\",0x96,\"mbuiter_multi_next\");\n    }\n    *param_1 = '\\x01';\n  }\n  sVar5 = __ctype_get_mb_cur_max();\n  uVar2 = *(undefined8 *)(param_1 + 0x10);\n  uVar6 = FUN_0010aa40(uVar2,sVar5);\n  lVar7 = FUN_00109160(param_1 + 0x24,uVar2,uVar6,(mbstate_t *)(param_1 + 4));\n  *(long *)(param_1 + 0x18) = lVar7;\n  if (lVar7 == -1) {\n    *(undefined8 *)(param_1 + 0x18) = 1;\n    param_1[0x20] = '\\0';\n    param_1[0xc] = '\\x01';\n    return;\n  }\n  if (lVar7 == -2) {\n    sVar5 = strlen(*(char **)(param_1 + 0x10));\n    param_1[0x20] = '\\0';\n    *(size_t *)(param_1 + 0x18) = sVar5;\n  }\n  else {\n    if (lVar7 == 0) {\n      *(undefined8 *)(param_1 + 0x18) = 1;\n      if (**(char **)(param_1 + 0x10) != '\\0') {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"*iter->cur.ptr == \\'\\\\0\\'\",\"lib/mbuiter.h\",0xb2,\"mbuiter_multi_next\");\n      }\n      if (*(int *)(param_1 + 0x24) != 0) {\n                    /* WARNING: Subroutine does not return */\n        __assert_fail(\"iter->cur.wc == 0\",\"lib/mbuiter.h\",0xb3,\"mbuiter_multi_next\");\n      }\n    }\n    param_1[0x20] = '\\x01';\n    iVar4 = mbsinit((mbstate_t *)(param_1 + 4));\n    if (iVar4 != 0) {\n      *param_1 = '\\0';\n    }\n  }\nLAB_0010a2e2:\n  param_1[0xc] = '\\x01';\n  return;\n}\n\n", 
    "0010ae40": "\nvoid FUN_0010ae40(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_00113008);\n  return;\n}\n\n", 
    "001140f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00108060": "\nvoid FUN_00108060(void)\n\n{\n  FUN_00107fc0();\n  return;\n}\n\n", 
    "00109380": "\nint FUN_00109380(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "001026e0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_00112f80)();\n  return;\n}\n\n", 
    "0010ae30": "\nvoid FUN_0010ae30(void)\n\n{\n  return;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_00112ef0)();\n  return pvVar1;\n}\n\n", 
    "0010ad10": "\nsize_t FUN_0010ad10(char *param_1)\n\n{\n  size_t sVar1;\n  long in_FS_OFFSET;\n  undefined local_68 [4];\n  undefined8 local_64;\n  undefined local_5c;\n  char *local_58;\n  long local_50;\n  char local_48;\n  int local_44;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar1 = __ctype_get_mb_cur_max();\n  if (sVar1 < 2) {\n    sVar1 = strlen(param_1);\n  }\n  else {\n    sVar1 = 0;\n    local_68[0] = 0;\n    local_64 = 0;\n    local_58 = param_1;\n    while( true ) {\n      local_5c = 0;\n      FUN_0010a2a0(local_68);\n      if ((local_48 != '\\0') && (local_44 == 0)) break;\n      local_58 = local_58 + local_50;\n      sVar1 = sVar1 + 1;\n    }\n  }\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return sVar1;\n}\n\n", 
    "00114058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t write(int __fd,void *__buf,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00114178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswspace(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_00112f28)();\n  return iVar1;\n}\n\n", 
    "0010adc0": "\nvoid FUN_0010adc0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00114050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswcntrl(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_00112e98)();\n  return sVar1;\n}\n\n", 
    "0010a430": "\nvoid FUN_0010a430(char *param_1,char *param_2)\n\n{\n  char cVar1;\n  \n  cVar1 = *param_2;\n  *param_1 = cVar1;\n  if (cVar1 == '\\0') {\n    *(undefined8 *)(param_1 + 4) = 0;\n  }\n  else {\n    *(undefined8 *)(param_1 + 4) = *(undefined8 *)(param_2 + 4);\n  }\n  param_1[0xc] = param_2[0xc];\n  FUN_0010ac90(param_1 + 0x10,param_2 + 0x10);\n  return;\n}\n\n", 
    "00114170": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iconv_close(iconv_t __cd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}