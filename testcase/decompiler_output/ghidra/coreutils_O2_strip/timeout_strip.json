{
    "0010e208": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105db0": "\nvoid FUN_00105db0(void)\n\n{\n  FUN_001058b0();\n  return;\n}\n\n", 
    "00106fc0": "\nbool FUN_00106fc0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "00106870": "\nvoid FUN_00106870(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00106850();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106a70();\n}\n\n", 
    "00103cf0": "\nvoid FUN_00103cf0(undefined param_1)\n\n{\n  DAT_0010d2d8 = param_1;\n  return;\n}\n\n", 
    "00107040": "\nint FUN_00107040(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "001027b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint execvp(char *__file,char **__argv)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_execvp_0010cf60)();\n  return iVar1;\n}\n\n", 
    "00106190": "\nint FUN_00106190(long param_1,int param_2,long param_3,int param_4)\n\n{\n  int iVar1;\n  \n  if (param_3 <= param_1) {\n    iVar1 = 1;\n    if (param_1 <= param_3) {\n      iVar1 = param_2 - param_4;\n    }\n    return iVar1;\n  }\n  return -1;\n}\n\n", 
    "00106f10": "\nulong FUN_00106f10(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00103c40": "\n__locale_t FUN_00103c40(void)\n\n{\n  if (DAT_0010d2d0 != (__locale_t)0x0) {\n    return DAT_0010d2d0;\n  }\n  DAT_0010d2d0 = newlocale(0x1fbf,\"C\",(__locale_t)0x0);\n  return DAT_0010d2d0;\n}\n\n", 
    "00103e80": "\nvoid FUN_00103e80(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0010d2e8 = pcVar1 + 1;\n    uVar3 = (long)DAT_0010d2e8 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0010d2e8;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0010d2e8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010cf08)();\n  return pcVar1;\n}\n\n", 
    "0010e200": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a70": "\nvoid FUN_00106a70(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0010d020,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102820": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010cf98)();\n  return;\n}\n\n", 
    "00105ec0": "\nvoid FUN_00105ec0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105e40(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00103ce0": "\nvoid FUN_00103ce0(undefined8 param_1)\n\n{\n  DAT_0010d2e0 = param_1;\n  return;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010cdb8)();\n  return;\n}\n\n", 
    "0010e218": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106180": "\nundefined  [16] FUN_00106180(undefined8 param_1,undefined8 param_2)\n\n{\n  return CONCAT88(param_2,param_1);\n}\n\n", 
    "00107270": "\nvoid FUN_00107270(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00107250(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "001028c0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nuint FUN_001028c0(int param_1,undefined8 *param_2)\n\n{\n  char **__argv;\n  char cVar1;\n  int iVar2;\n  __pid_t _Var3;\n  int *piVar4;\n  undefined8 uVar5;\n  uint uVar6;\n  long in_FS_OFFSET;\n  undefined8 uVar7;\n  uint local_cc;\n  sigset_t local_c8;\n  undefined local_48 [24];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103e80(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_00103800();\n  FUN_001073b0(FUN_00103d00);\nLAB_00102940:\n  do {\n    iVar2 = getopt_long(param_1,param_2,\"+k:s:v\",&PTR_s_kill_after_0010ca40,0);\n    if (iVar2 == -1) {\nLAB_00102a29:\n      iVar2 = param_1 - optind;\n      param_1 = iVar2 + -1;\n      if (param_1 != 0 && 0 < iVar2) {\n        optind = optind + 1;\n        uVar7 = FUN_00103990();\n        __argv = (char **)(param_2 + optind);\n        DAT_0010d2b0 = *__argv;\n        if (DAT_0010d2ba == '\\0') {\n          setpgid(0,0);\n        }\n        FUN_00102eb0(DAT_0010d010);\n        signal(0x15,(__sighandler_t)0x1);\n        signal(0x16,(__sighandler_t)0x1);\n        FUN_00103490();\n        DAT_0010d2c8 = fork();\n        if (DAT_0010d2c8 == -1) {\n          uVar7 = dcgettext(0,\"fork system call failed\",5);\n          piVar4 = __errno_location();\n          error(0,*piVar4,uVar7);\n          uVar6 = 0x7d;\n        }\n        else if (DAT_0010d2c8 == 0) {\n          signal(0x15,(__sighandler_t)0x0);\n          signal(0x16,(__sighandler_t)0x0);\n          execvp(*__argv,__argv);\n          piVar4 = __errno_location();\n          iVar2 = *piVar4;\n          uVar7 = FUN_00106170(DAT_0010d2b0);\n          uVar5 = dcgettext(0,\"failed to run command %s\",5);\n          error(0,*piVar4,uVar5,uVar7);\n          uVar6 = (iVar2 == 2) + 0x7e;\n        }\n        else {\n          FUN_001033f0(0xe);\n          FUN_00102fb0(uVar7,1);\n          FUN_00103300(DAT_0010d010,&local_c8);\n          while( true ) {\n            _Var3 = waitpid(DAT_0010d2c8,(int *)&local_cc,1);\n            if (_Var3 != 0) break;\n            sigsuspend(&local_c8);\n          }\n          if (_Var3 < 0) {\n            uVar7 = dcgettext(0,\"error waiting for command\",5);\n            piVar4 = __errno_location();\n            error(0,*piVar4,uVar7);\n            local_cc = 0x7d;\n          }\n          else {\n            uVar6 = local_cc & 0x7f;\n            if (uVar6 == 0) {\n              local_cc = local_cc >> 8 & 0xff;\n            }\n            else if ((char)uVar6 == '\\0' || (char)((char)uVar6 + '\\x01') < '\\x01') {\n              uVar7 = dcgettext(0,\"unknown status from command (%d)\",5);\n              error(0,0,uVar7,local_cc);\n              local_cc = 1;\n            }\n            else {\n              if ((local_cc & 0x80) != 0) {\n                uVar7 = dcgettext(0,\"the monitored command dumped core\",5);\n                error(0,0,uVar7);\n              }\n              if ((_DAT_0010d2cc == 0) && (cVar1 = FUN_00103510(), cVar1 != '\\0')) {\n                signal(uVar6,(__sighandler_t)0x0);\n                FUN_001033f0(uVar6);\n                raise(uVar6);\n              }\n              local_cc = uVar6 + 0x80;\n            }\n          }\n          uVar6 = local_cc;\n          if ((_DAT_0010d2cc != 0) && (DAT_0010d2b9 == '\\0')) {\n            local_cc = 0x7c;\n            uVar6 = local_cc;\n          }\n        }\n        if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n          return uVar6;\n        }\n                    /* WARNING: Subroutine does not return */\n        __stack_chk_fail();\n      }\n      goto switchD_00102980_caseD_6c;\n    }\n    if (0x81 < iVar2) goto switchD_00102980_caseD_6c;\n    if (iVar2 < 0x6b) {\n      if (iVar2 == -0x83) {\n        FUN_00106710(stdout,\"timeout\",\"GNU coreutils\",PTR_DAT_0010d018,\"Padraig Brady\",0);\n                    /* WARNING: Subroutine does not return */\n        exit(0);\n      }\n      if (iVar2 == -0x82) {\n        FUN_00103810(0);\n        goto LAB_00102a29;\n      }\n      goto switchD_00102980_caseD_6c;\n    }\n    switch(iVar2) {\n    case 0x6b:\n      goto switchD_00102980_caseD_6b;\n    case 0x73:\n      DAT_0010d010 = FUN_00103a60(optarg,local_48);\n      if (DAT_0010d010 != -1) break;\n    default:\nswitchD_00102980_caseD_6c:\n      FUN_00103810(0x7d);\n      goto switchD_00102980_caseD_6b;\n    case 0x76:\n      DAT_0010d2b8 = 1;\n      break;\n    case 0x80:\n      DAT_0010d2ba = '\\x01';\n      break;\n    case 0x81:\n      goto switchD_00102980_caseD_81;\n    }\n  } while( true );\nswitchD_00102980_caseD_81:\n  DAT_0010d2b9 = '\\x01';\n  goto LAB_00102940;\nswitchD_00102980_caseD_6b:\n  DAT_0010d2c0 = FUN_00103990(optarg);\n  goto LAB_00102940;\n}\n\n", 
    "0010e1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint timer_create(clockid_t __clock_id,sigevent *__evp,timer_t *__timerid)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_timer_create_0010cf58)();\n  return iVar1;\n}\n\n", 
    "001033f0": "\nvoid FUN_001033f0(int param_1)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  long in_FS_OFFSET;\n  sigset_t sStack_a8;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  sigemptyset(&sStack_a8);\n  sigaddset(&sStack_a8,param_1);\n  iVar1 = sigprocmask(1,&sStack_a8,(sigset_t *)0x0);\n  if (iVar1 != 0) {\n    uVar2 = dcgettext(0,\"warning: sigprocmask\",5);\n    piVar3 = __errno_location();\n    error(0,*piVar3,uVar2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001028af": "\nvoid FUN_001028af(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103f90": "\nbool FUN_00103f90(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00107060(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00102810": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint timer_delete(timer_t __timerid)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_timer_delete_0010cf90)();\n  return iVar1;\n}\n\n", 
    "001028aa": "\nvoid FUN_001028aa(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105a90": "\nundefined4 FUN_00105a90(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d400;\n  }\n  return *param_1;\n}\n\n", 
    "00106b80": "\nsize_t FUN_00106b80(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00107130(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e210": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104350": "\nundefined8\nFUN_00104350(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104290(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00105dd0": "\nvoid FUN_00105dd0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105db0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106ec0": "\nbool FUN_00106ec0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106fe0": "\nbool FUN_00106fe0(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "001027d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setpgid(__pid_t __pid,__pid_t __pgid)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_setpgid_0010cf70)();\n  return iVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint prctl(int __option,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_prctl_0010cee0)();\n  return iVar1;\n}\n\n", 
    "00107060": "\nint FUN_00107060(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00107020(*param_1);\n      bVar2 = FUN_00107020(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "00107180": "\nchar * FUN_00107180(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106f30": "\nbool FUN_00106f30(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00105e40": "\nvoid FUN_00105e40(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103f40(auStack_68);\n  FUN_001058b0(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102840": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010cfa8)();\n  return iVar1;\n}\n\n", 
    "00103810": "\nvoid FUN_00103810(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0010d2e8;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION] DURATION COMMAND [ARG]...\\n  or:  %s [OPTION]\\n\",5);\n    __printf_chk(1,uVar3,uVar2,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"Start COMMAND, and kill it if still running after DURATION.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00102e80();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"      --preserve-status\\n                 exit with the same status as COMMAND, even when the\\n                   command times out\\n      --foreground\\n                 when not running timeout directly from a shell prompt,\\n                   allow COMMAND to read from the TTY and get TTY signals;\\n                   in this mode, children of COMMAND will not be timed out\\n  -k, --kill-after=DURATION\\n                 also send a KILL signal if COMMAND is still running\\n                   this long after the initial signal was sent\\n  -s, --signal=SIGNAL\\n                 specify the signal to be sent on timeout;\\n                   SIGNAL may be a name like \\'HUP\\' or a number;\\n                   see \\'kill -l\\' for a list of signals\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -v, --verbose  diagnose to stderr any signal sent upon timeout\\n\",\n                               5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nDURATION is a floating point number with an optional suffix:\\n\\'s\\' for seconds (the default), \\'m\\' for minutes, \\'h\\' for hours or \\'d\\' for days.\\nA duration of 0 disables the associated timeout.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"\\nIf the command times out, and --preserve-status is not set, then exit with\\nstatus 124.  Otherwise, exit with the status of COMMAND.  If no signal\\nis specified, send the TERM signal upon timeout.  The TERM signal kills\\nany process that does not block or catch that signal.  It may be necessary\\nto use the KILL (9) signal, since this signal cannot be caught, in which\\ncase the exit status is 128+9 rather than 124.\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103560();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "00102720": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010cf18)();\n  return;\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010ce88)();\n  return pvVar1;\n}\n\n", 
    "00105dc0": "\nvoid FUN_00105dc0(undefined8 param_1)\n\n{\n  FUN_00105d90(0,param_1);\n  return;\n}\n\n", 
    "00105ee0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105ee0(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0010d400;\n  uStack_40 = uRam000000000010d408;\n  local_38 = _DAT_0010d410;\n  uStack_30 = uRam000000000010d418;\n  local_28 = _DAT_0010d420;\n  uStack_20 = uRam000000000010d428;\n  local_18 = DAT_0010d430;\n  FUN_00105ad0(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_001058b0(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103490": "\nvoid FUN_00103490(void)\n\n{\n  long in_FS_OFFSET;\n  sigaction local_a8;\n  long local_10;\n  \n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  sigemptyset(&local_a8.sa_mask);\n  local_a8.sa_flags = 0x10000000;\n  local_a8.__sigaction_handler.sa_handler = FUN_00102df0;\n  sigaction(0x11,&local_a8,(sigaction *)0x0);\n  FUN_001033f0(0x11);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001027c0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010cf68)();\n  return;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010ced8)();\n  return pvVar1;\n}\n\n", 
    "00103800": "\nvoid FUN_00103800(void)\n\n{\n  DAT_0010d020 = 0x7d;\n  return;\n}\n\n", 
    "00102830": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmax(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___libc_current_sigrtmax_0010cfa0)();\n  return iVar1;\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigsuspend(sigset_t *__set)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigsuspend_0010cf10)();\n  return iVar1;\n}\n\n", 
    "00105fb0": "\nvoid FUN_00105fb0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103f40(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00105ad0(puVar1,0x3a,1);\n  FUN_001058b0(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106710": "\nvoid FUN_00106710(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106680();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102590": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010ce50)();\n  return;\n}\n\n", 
    "00103560": "\nvoid FUN_00103560(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  char *pcVar4;\n  long lVar5;\n  undefined **ppuVar6;\n  byte *pbVar7;\n  byte *pbVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar8 = (byte *)0x108918;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010889e;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar6 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar8 == (byte *)0x0;\n    if (bVar10) break;\n    lVar5 = 8;\n    pbVar7 = (byte *)\"timeout\";\n    do {\n      if (lVar5 == 0) break;\n      lVar5 = lVar5 + -1;\n      bVar9 = *pbVar7 < *pbVar8;\n      bVar10 = *pbVar7 == *pbVar8;\n      pbVar7 = pbVar7 + 1;\n      pbVar8 = pbVar8 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar8 = *(byte **)((long)ppuVar6 + 0x20);\n    ppuVar6 = (undefined **)((long)ppuVar6 + 0x10);\n  }\n  pcVar4 = *(char **)((long)ppuVar6 + 0x18);\n  if (pcVar4 == (char *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar4 = setlocale(5,(char *)0x0);\n    if (pcVar4 != (char *)0x0) {\n      iVar1 = strncmp(pcVar4,\"en_\",3);\n      if (iVar1 != 0) {\n        pcVar4 = \"timeout\";\n        goto LAB_0010377e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar4 = \"timeout\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"timeout\");\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_0010377e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,\"timeout\");\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",\"timeout\");\n    if (pcVar4 != \"timeout\") {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,pcVar4,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigprocmask(int __how,sigset_t *__set,sigset_t *__oset)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigprocmask_0010cdc0)();\n  return iVar1;\n}\n\n", 
    "00106150": "\nvoid FUN_00106150(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106140(0,param_1,param_2);\n  return;\n}\n\n", 
    "001046f0": "\nulong FUN_001046f0(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104b77:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00104b99;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00105136;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00104aef;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104b77;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00104aef:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_001045c0(&DAT_00108b41,param_5);\n      local_78 = (char *)FUN_001045c0(&DAT_00108b31);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_00104840:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_001050a0_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x0010503b;\n          goto LAB_00104e2b;\n        default:\nswitchD_00104f50_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00106b80(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105328;\n              }\n              if (lVar10 == -2) goto joined_r0x0010573a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00104d10;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105328;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00104ab1;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00104ff8;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00104ff8;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00104ff8:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00104d07;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00104cf4;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00104cf4:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104a18;\n          goto LAB_00104d07;\n        case 0x23:\n        case 0x7e:\nLAB_00104ceb:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00104cf4;\n          goto LAB_00104a15;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00104f50_caseD_25;\n        case 0x27:\nswitchD_00104f50_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104a18;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x00104a3b;\n          }\n          goto LAB_00104d10;\n        case 0x3f:\nswitchD_00104f50_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_0010569e_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104a18;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x00104a3b;\n          }\n          goto LAB_00104d10;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_00104948_caseD_5c;\n          if (!bVar20) {\nLAB_00104f88:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00104fa0;\n          }\n          goto LAB_00104d10;\n        case 0x7b:\n        case 0x7d:\nswitchD_00104f50_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00104ceb;\nLAB_00104a15:\n          bVar23 = false;\n          goto LAB_00104a18;\n        }\nLAB_00104e20:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00104e2b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104a38;\n          goto LAB_00104960;\n        }\nLAB_00104e60:\n        bVar21 = false;\n        goto joined_r0x00104e71;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00105080;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_00104948_caseD_0;\n          default:\n            goto switchD_00104f50_caseD_1;\n          case 7:\n            goto switchD_001050a0_caseD_7;\n          case 8:\n            goto switchD_001050a0_caseD_8;\n          case 9:\n            goto switchD_00104948_caseD_9;\n          case 10:\n            goto switchD_001050a0_caseD_a;\n          case 0xb:\n            goto switchD_001050a0_caseD_b;\n          case 0xc:\n            goto switchD_001050a0_caseD_c;\n          case 0xd:\n            goto switchD_001050a0_caseD_d;\n          case 0x20:\n            goto LAB_001050c9;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_00104948_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_001050b1;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_00104958;\n          case 0x27:\n            goto switchD_00104f50_caseD_27;\n          case 0x3f:\n            goto switchD_00104f50_caseD_3f;\n          case 0x5c:\n            goto switchD_00104948_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00104f50_caseD_7b;\n          }\n        }\n        goto LAB_00104d1e;\n      }\nLAB_00105080:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_001050a0_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_00104948_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x00104a3b;\n            }\nLAB_001054db:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_001054db;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105518;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x00104a3b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00104d10;\n      default:\n        bVar23 = false;\n        goto switchD_00104f50_caseD_1;\n      case 7:\nswitchD_001050a0_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_001050a0_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_00104948_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00104e20;\n      case 10:\nswitchD_001050a0_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00104e60;\n      case 0xb:\nswitchD_001050a0_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00104e60;\n      case 0xc:\nswitchD_001050a0_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_001050a0_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00104e60;\n      case 0x20:\n        bVar5 = false;\nLAB_001050c9:\n        uVar15 = 0x20;\n        goto LAB_00104958;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_00104948_caseD_21:\n        bVar22 = false;\n        goto LAB_00104a15;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_001050b1:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104a18;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_00104960;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_00104958:\n        bVar22 = false;\n        goto LAB_00104960;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00104f50_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00104f50_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_00104948_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00104f88;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00104e20;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00104f50_caseD_7b;\n      }\n      if (bVar20) goto LAB_00104e80;\n      bVar21 = false;\n      goto LAB_001049d6;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00104d07:\n      param_5 = 2;\nLAB_00104d10:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00104d1e:\n      uVar13 = FUN_001046f0(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00104d58;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_001057a5:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00104d58:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_001046f0(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00104d58;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_001057a5;\nLAB_00105136:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00104b99:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x0010503b:\n  uVar13 = uVar13 + 1;\n  goto LAB_00104840;\nswitchD_0010569e_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105518:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x00104a3b;\n    goto LAB_00104960;\n  }\n  goto LAB_00104d1e;\njoined_r0x0010573a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105328:\n  if (1 < uVar17) {\nLAB_00105332:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00104d10;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_001049e8;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00104fa0;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00104ab1:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105332;\n  }\nswitchD_00104f50_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104a18:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_00104960:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x00104a3b;\n  }\n  else {\nLAB_00104a38:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x00104a3b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00104fa0:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_001049e8;\n    }\n  }\njoined_r0x00104e71:\n  if (bVar20) {\nLAB_00104e80:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00104d10;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_001049d6:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_001049e8:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_00104840;\n}\n\n", 
    "0010e080": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001071c0": "\nint FUN_001071c0(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010722f;\n    }\n    iVar1 = FUN_00107270(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010722f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00106d90": "\nint FUN_00106d90(undefined8 param_1,int *param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00106c10();\n  *param_2 = iVar1;\n  return iVar1 >> 0x1f;\n}\n\n", 
    "0010e088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105fa0": "\nvoid FUN_00105fa0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105ee0(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "00102df0": "\nvoid FUN_00102df0(void)\n\n{\n  return;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010ce48)();\n  return sVar1;\n}\n\n", 
    "00102460": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010cff8)();\n  return;\n}\n\n", 
    "00106140": "\nvoid FUN_00106140(void)\n\n{\n  FUN_001058b0();\n  return;\n}\n\n", 
    "001045c0": "\nchar * FUN_001045c0(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00107180();\n    iVar1 = FUN_00104510(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00104510(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00108b29;\n      }\n      else {\n        pcVar2 = &DAT_00108b26;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_00108b2d;\n    }\n    else {\n      pcVar2 = &DAT_00108b22;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "001069e0": "\nvoid FUN_001069e0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106a70();\n}\n\n", 
    "0010e090": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a20": "\nvoid FUN_00106a20(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00106850(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00105a50": "\nvoid FUN_00105a50(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d400;\n  }\n  FUN_00106a20(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00105b70": "\nvoid FUN_00105b70(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0010d400;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_001046f0(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "001061e0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\ndouble FUN_001061e0(long param_1,long param_2)\n\n{\n  return (double)param_2 / _DAT_00108ad8 + (double)param_1;\n}\n\n", 
    "0010e098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105eb0": "\nvoid FUN_00105eb0(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00105de0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106850": "\nvoid FUN_00106850(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106a70();\n  }\n  return;\n}\n\n", 
    "00102490": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_raise_0010cdd0)();\n  return iVar1;\n}\n\n", 
    "00107020": "\nint FUN_00107020(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00106050": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00106050(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0010d400;\n  uStack_60 = uRam000000000010d408;\n  local_38 = DAT_0010d430;\n  local_58 = _DAT_0010d410;\n  uStack_50 = uRam000000000010d418;\n  local_48 = _DAT_0010d420;\n  uStack_40 = uRam000000000010d428;\n  FUN_00105b30(&local_68);\n  FUN_001058b0(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001028b4": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_001062b8::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00106170": "\nvoid FUN_00106170(undefined8 param_1)\n\n{\n  FUN_00106160(0,param_1);\n  return;\n}\n\n", 
    "0010e060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001068f0": "\nvoid FUN_001068f0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_001068b0();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106a70();\n}\n\n", 
    "0010e180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtod_l(char *__nptr,char **__endptr,__locale_t __loc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102800": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010cf88)();\n  return sVar1;\n}\n\n", 
    "00106a50": "\nvoid FUN_00106a50(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106a20(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "001070c0": "\nulong FUN_001070c0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_001071c0(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "001060f0": "\nvoid FUN_001060f0(void)\n\n{\n  FUN_00106050();\n  return;\n}\n\n", 
    "0010e188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104420": "\nundefined8\nFUN_00104420(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104350(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010cfe8 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010cfe8)();\n  }\n  return;\n}\n\n", 
    "00102480": "\nvoid __snprintf_chk(void)\n\n{\n  (*(code *)PTR___snprintf_chk_0010cdc8)();\n  return;\n}\n\n", 
    "001028a5": "\nvoid switchD_0010478f::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001028a0": "\nvoid FUN_001028a0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00107130": "\nbool FUN_00107130(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00106160": "\nvoid FUN_00106160(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106140(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00107250": "\nvoid FUN_00107250(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_001072b0(param_1,0,1);\n  return;\n}\n\n", 
    "001067c0": "\nvoid FUN_001067c0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102d60": "\n/* WARNING: Removing unreachable block (ram,0x00102d84) */\n/* WARNING: Removing unreachable block (ram,0x00102d90) */\n\nvoid FUN_00102d60(void)\n\n{\n  return;\n}\n\n", 
    "0010e190": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102e80": "\nvoid FUN_00102e80(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010e070": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__sighandler_t signal(int __sig,__sighandler_t __handler)\n\n{\n  __sighandler_t p_Var1;\n  \n  p_Var1 = (__sighandler_t)(*(code *)PTR_signal_0010cec0)();\n  return p_Var1;\n}\n\n", 
    "0010e0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102550": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010ce30)();\n  return;\n}\n\n", 
    "00102790": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint timer_settime(timer_t __timerid,int __flags,itimerspec *__value,itimerspec *__ovalue)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_timer_settime_0010cf50)();\n  return iVar1;\n}\n\n", 
    "00105bf0": "\nundefined8 FUN_00105bf0(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0010d400;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_001046f0(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00106850(lVar3 + 1);\n  FUN_001046f0(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "0010e0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104290": "\nundefined8\nFUN_00104290(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001041e0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00105ad0": "\nuint FUN_00105ad0(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d400;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "001069b0": "\nvoid FUN_001069b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106920(param_1,param_2,1);\n  return;\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010ce80)();\n  return _Var1;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010cdf0)();\n  return iVar1;\n}\n\n", 
    "0010e160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e040": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001073c4": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "0010e168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigsuspend(sigset_t *__set)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103510": "\nbool FUN_00103510(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  \n  iVar1 = prctl(4,0);\n  if (iVar1 != 0) {\n    uVar2 = dcgettext(0,\"warning: disabling core dumps failed\",5);\n    piVar3 = __errno_location();\n    error(0,*piVar3,uVar2);\n  }\n  return iVar1 == 0;\n}\n\n", 
    "00102780": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010cf48)();\n  return iVar1;\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strcmp_0010ceb8)();\n  return iVar1;\n}\n\n", 
    "00103990": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00103990(undefined8 param_1)\n\n{\n  char cVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  long in_FS_OFFSET;\n  double local_30;\n  char *local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar1 = FUN_00106ab0(param_1,&local_28,&local_30,FUN_00103c90);\n  if (cVar1 == '\\0') {\n    piVar2 = __errno_location();\n    if (*piVar2 == 0x22) goto LAB_001039d1;\n  }\n  else {\nLAB_001039d1:\n    if (_DAT_00108a78 <= local_30) {\n      if ((*local_28 == '\\0') || (local_28[1] == '\\0')) {\n        cVar1 = FUN_00102e00(&local_30);\n        if (cVar1 != '\\0') {\n          if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n            return;\n          }\n          goto LAB_00103a57;\n        }\n      }\n    }\n  }\n  uVar3 = FUN_00106170(param_1);\n  uVar4 = dcgettext(0,\"invalid time interval %s\",5);\n  error(0,0,uVar4,uVar3);\n  local_30 = (double)FUN_00103810(0x7d);\nLAB_00103a57:\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail(local_30);\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010ce28)();\n  return iVar1;\n}\n\n", 
    "00106100": "\nvoid FUN_00106100(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_001060f0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "00102d00": "\nvoid FUN_00102d00(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010cfe0)\n            (FUN_001028c0,unaff_retaddr,&stack0x00000008,FUN_00107330,FUN_001073a0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "001058b0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_001058b0(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0010d080;\n  if (DAT_0010d078 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00106a70();\n    }\n    if (PTR_DAT_0010d080 == &DAT_0010d090) {\n      puVar8 = (undefined4 *)FUN_001068b0(0);\n      uVar6 = PTR_DAT_0010d098._4_4_;\n      uVar5 = PTR_DAT_0010d098._0_4_;\n      uVar3 = _UNK_0010d094;\n      PTR_DAT_0010d080 = (undefined *)puVar8;\n      *puVar8 = _DAT_0010d090;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_001068b0(PTR_DAT_0010d080);\n      PTR_DAT_0010d080 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0010d078 * 4,0,(long)((param_1 + 1) - DAT_0010d078) << 4);\n    DAT_0010d078 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_001046f0(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0010d300) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00106850(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_001046f0(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "0010e170": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010ce78)();\n  return pcVar1;\n}\n\n", 
    "0010e050": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010cde8)();\n  return piVar1;\n}\n\n", 
    "001073b0": "\nvoid FUN_001073b0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0010d008);\n  return;\n}\n\n", 
    "00105b30": "\nvoid FUN_00105b30(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d400;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010e178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102da0": "\nvoid FUN_00102da0(void)\n\n{\n  if (DAT_0010d2a8 == '\\0') {\n    if (PTR___cxa_finalize_0010cff8 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0010d008);\n    }\n    FUN_00102d30();\n    DAT_0010d2a8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "00103fb0": "\nundefined8 FUN_00103fb0(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103f90(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "00103db0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00103db0(double param_1)\n\n{\n  long lVar1;\n  long lVar2;\n  double dVar3;\n  \n  if (param_1 <= _DAT_00108ac8) {\n    FUN_00106180(0x8000000000000000,0);\n    return;\n  }\n  if (param_1 < DAT_00108ad0) {\n    dVar3 = (param_1 - (double)(long)param_1) * _DAT_00108ad8;\n    lVar1 = (long)dVar3;\n    lVar1 = (ulong)((double)lVar1 < dVar3) + lVar1;\n    lVar2 = (long)param_1 + lVar1 / 1000000000;\n    lVar1 = lVar1 % 1000000000;\n    if (-1 < lVar1) {\n      FUN_00106180(lVar2);\n      return;\n    }\n    FUN_00106180(lVar2 + -1,lVar1 + 1000000000);\n    return;\n  }\n  FUN_00106180(0x7fffffffffffffff,999999999);\n  return;\n}\n\n", 
    "00102de0": "\nvoid thunk_FUN_00102d60(void)\n\n{\n  FUN_00102d60();\n  return;\n}\n\n", 
    "0010e1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103300": "\nvoid FUN_00103300(int param_1,sigset_t *param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  int *piVar3;\n  long in_FS_OFFSET;\n  sigset_t sStack_a8;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  sigemptyset(&sStack_a8);\n  sigaddset(&sStack_a8,0xe);\n  sigaddset(&sStack_a8,2);\n  sigaddset(&sStack_a8,3);\n  sigaddset(&sStack_a8,1);\n  sigaddset(&sStack_a8,0xf);\n  sigaddset(&sStack_a8,param_1);\n  sigaddset(&sStack_a8,0x11);\n  iVar1 = sigprocmask(0,&sStack_a8,param_2);\n  if (iVar1 != 0) {\n    uVar2 = dcgettext(0,\"warning: sigprocmask\",5);\n    piVar3 = __errno_location();\n    error(0,*piVar3,uVar2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00104510": "\nundefined8\nFUN_00104510(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00104420(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "0010e0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102690": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n  long lVar1;\n  \n  lVar1 = (*(code *)PTR_strtol_0010ced0)();\n  return lVar1;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010ce40)();\n  return sVar1;\n}\n\n", 
    "0010e1f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmax(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint alarm(uint __seconds)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103d00": "\nvoid FUN_00103d00(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_001070c0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0010d2d8 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0010d2e0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00105f90();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00103d88;\n    }\n  }\n  iVar1 = FUN_001070c0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00103d88:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0010d020);\n}\n\n", 
    "00103f40": "\nint * FUN_00103f40(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00102f70": "\nvoid FUN_00102f70(int param_1,int param_2)\n\n{\n  if (param_1 == 0) {\n    signal(param_2,(__sighandler_t)0x1);\n  }\n  kill(param_1,param_2);\n  return;\n}\n\n", 
    "001068b0": "\nvoid * FUN_001068b0(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106a70();\n  }\n  return pvVar1;\n}\n\n", 
    "00102d30": "\n/* WARNING: Removing unreachable block (ram,0x00102d43) */\n/* WARNING: Removing unreachable block (ram,0x00102d4f) */\n\nvoid FUN_00102d30(void)\n\n{\n  return;\n}\n\n", 
    "0010e140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint kill(__pid_t __pid,int __sig)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strcpy(char *__dest,char *__src)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strcpy_0010ce00)();\n  return pcVar1;\n}\n\n", 
    "00106e90": "\nulong FUN_00106e90(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "0010e148": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106920": "\nvoid FUN_00106920(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010697b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010697b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00106a70(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_001068b0(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "00102560": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010ce38)();\n  return;\n}\n\n", 
    "0010e0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106120": "\nvoid FUN_00106120(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00106050(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigemptyset_0010cec8)();\n  return iVar1;\n}\n\n", 
    "00106ab0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nbool FUN_00106ab0(char *param_1,char **param_2,double *param_3,code *param_4)\n\n{\n  int *piVar1;\n  long in_FS_OFFSET;\n  bool bVar2;\n  double dVar3;\n  char *local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  piVar1 = __errno_location();\n  *piVar1 = 0;\n  dVar3 = (double)(*param_4)(param_1,&local_38);\n  if (local_38 == param_1) {\n    bVar2 = false;\nLAB_00106b1c:\n    if (param_2 == (char **)0x0) goto LAB_00106b25;\n  }\n  else {\n    if (param_2 == (char **)0x0) {\n      bVar2 = false;\n      if ((*local_38 != '\\0') || (bVar2 = true, dVar3 == _DAT_00108a78)) goto LAB_00106b25;\nLAB_00106b13:\n      bVar2 = *piVar1 != 0x22;\n      goto LAB_00106b1c;\n    }\n    bVar2 = true;\n    if (dVar3 != _DAT_00108a78) goto LAB_00106b13;\n  }\n  *param_2 = local_38;\nLAB_00106b25:\n  *param_3 = dVar3;\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return bVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00107330": "\nvoid FUN_00107330(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "0010e0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001068a0": "\nvoid thunk_FUN_00106850(void)\n\n{\n  FUN_00106850();\n  return;\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010cdf8)();\n  return;\n}\n\n", 
    "001069c0": "\nvoid FUN_001069c0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00106850();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "0010e150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e030": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001072b0": "\nint FUN_001072b0(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "001061c0": "\nulong FUN_001061c0(ulong param_1,ulong param_2)\n\n{\n  ulong uVar1;\n  \n  uVar1 = 0xffffffff;\n  if (-1 < (long)param_1) {\n    uVar1 = (ulong)((param_1 | param_2) != 0);\n  }\n  return uVar1;\n}\n\n", 
    "0010e158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105d90": "\nvoid FUN_00105d90(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001058b0(param_1,param_2,0xffffffffffffffff,&DAT_0010d400);\n  return;\n}\n\n", 
    "0010e038": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102870": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_fork_0010cfc0)();\n  return _Var1;\n}\n\n", 
    "00102750": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010cf30)();\n  return;\n}\n\n", 
    "0010e1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmin(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104130": "\nundefined8\nFUN_00104130(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001040a0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "0010e128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nlong strtol(char *__nptr,char **__endptr,int __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106ee0": "\nbool FUN_00106ee0(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "0010e008": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __snprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104010": "\nundefined8 FUN_00104010(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103fb0(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "0010e1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010ce60)();\n  return sVar1;\n}\n\n", 
    "0010e0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001027f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010cf80)();\n  return;\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010cef0)();\n  return iVar1;\n}\n\n", 
    "0010e1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint setpgid(__pid_t __pid,__pid_t __pgid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106f50": "\nbool FUN_00106f50(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "0010e0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010cf28)();\n  return pcVar1;\n}\n\n", 
    "00102fb0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00102fb0(double param_1,char param_2)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  uint __seconds;\n  long in_FS_OFFSET;\n  timer_t local_50;\n  itimerspec local_48;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48.it_value = (timespec)FUN_00103db0();\n  local_48.it_interval.tv_sec = 0;\n  local_48.it_interval.tv_nsec = 0;\n  iVar1 = timer_create(0,(sigevent *)0x0,&local_50);\n  if (iVar1 == 0) {\n    iVar1 = timer_settime(local_50,0,&local_48,(itimerspec *)0x0);\n    if (iVar1 == 0) goto LAB_0010303d;\n    if (param_2 != '\\0') {\n      uVar3 = dcgettext(0,\"warning: timer_settime\",5);\n      piVar2 = __errno_location();\n      error(0,*piVar2,uVar3);\n    }\n    timer_delete(local_50);\n  }\n  else if (param_2 != '\\0') {\n    piVar2 = __errno_location();\n    if (*piVar2 != 0x26) {\n      uVar3 = dcgettext(0,\"warning: timer_create\",5);\n      error(0,*piVar2,uVar3);\n    }\n  }\n  __seconds = 0xffffffff;\n  if (param_1 < _DAT_00108a70) {\n    __seconds = (uint)((double)((long)param_1 & 0xffffffff) < param_1) + (int)(long)param_1;\n  }\n  alarm(__seconds);\nLAB_0010303d:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010ce98)();\n  return iVar1;\n}\n\n", 
    "0010e120": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102500": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010ce08)();\n  return;\n}\n\n", 
    "0010e000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigprocmask(int __how,sigset_t *__set,sigset_t *__oset)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102860": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaddset(sigset_t *__set,int __signo)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaddset_0010cfb8)();\n  return iVar1;\n}\n\n", 
    "0010e0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106db0": "\nint FUN_00106db0(int param_1,undefined4 *param_2)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  uint uVar4;\n  ulong uVar5;\n  \n  uVar5 = 0;\n  piVar3 = &DAT_0010d0a0;\n  do {\n    if (*piVar3 == param_1) {\n      strcpy((char *)param_2,&DAT_0010d0a4 + uVar5 * 0xc);\n      return 0;\n    }\n    uVar4 = (int)uVar5 + 1;\n    uVar5 = (ulong)uVar4;\n    piVar3 = piVar3 + 3;\n  } while (uVar4 != 0x23);\n  iVar1 = __libc_current_sigrtmin();\n  iVar2 = __libc_current_sigrtmax();\n  if ((param_1 < iVar1) || (iVar2 < param_1)) {\n    param_1 = -1;\n  }\n  else {\n    if ((iVar2 - iVar1 >> 1) + iVar1 < param_1) {\n      *param_2 = 0x414d5452;\n      *(undefined2 *)(param_2 + 1) = 0x58;\n      iVar1 = iVar2;\n    }\n    else {\n      *param_2 = 0x494d5452;\n      *(undefined2 *)(param_2 + 1) = 0x4e;\n    }\n    param_1 = param_1 - iVar1;\n    if (param_1 != 0) {\n      __sprintf_chk((long)param_2 + 5,1,0xffffffffffffffff,&DAT_001095ec,param_1);\n      return 0;\n    }\n  }\n  return param_1;\n}\n\n", 
    "0010e138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint prctl(int __option,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103150": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00103150(int param_1)\n\n{\n  double dVar1;\n  int iVar2;\n  int *piVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  long in_FS_OFFSET;\n  bool bVar6;\n  undefined local_38 [24];\n  long local_20;\n  \n  dVar1 = DAT_0010d2c0;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == 0xe) {\n    _DAT_0010d2cc = 1;\n    param_1 = DAT_0010d010;\n  }\n  if (DAT_0010d2c8 == 0) {\n                    /* WARNING: Subroutine does not return */\n    _exit(param_1 + 0x80);\n  }\n  if (DAT_0010d2c0 == _DAT_00108a78) {\n    if (DAT_0010d2b8 == '\\0') goto LAB_001031b2;\n  }\n  else {\n    piVar3 = __errno_location();\n    DAT_0010d010 = 9;\n    iVar2 = *piVar3;\n    FUN_00102fb0(dVar1,0);\n    bVar6 = DAT_0010d2b8 == '\\0';\n    DAT_0010d2c0 = 0.0;\n    *piVar3 = iVar2;\n    if (bVar6) goto LAB_001031b2;\n  }\n  iVar2 = FUN_00106db0(param_1,local_38);\n  if (iVar2 != 0) {\n    __snprintf_chk(local_38,0x13,1,0x13,&DAT_0010887e,param_1);\n  }\n  uVar4 = FUN_00106170(DAT_0010d2b0);\n  uVar5 = dcgettext(0,\"sending signal %s to command %s\",5);\n  error(0,0,uVar5,local_38,uVar4);\nLAB_001031b2:\n  iVar2 = DAT_0010d2c8;\n  FUN_00102f70(DAT_0010d2c8,param_1);\n  if (((DAT_0010d2ba == '\\0') && (FUN_00102f70(0,param_1), param_1 != 9)) && (param_1 != 0x12)) {\n    FUN_00102f70(iVar2,0x12);\n    FUN_00102f70(0,0x12);\n  }\n  if (local_20 != *(long *)(in_FS_OFFSET + 0x28)) {\n                    /* WARNING: Subroutine does not return */\n    __stack_chk_fail();\n  }\n  return;\n}\n\n", 
    "0010e018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105de0": "\nvoid FUN_00105de0(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103f40(auStack_58);\n  FUN_001058b0(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106ff0": "\nulong FUN_00106ff0(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00106660": "\nvoid FUN_00106660(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_00106210();\n  return;\n}\n\n", 
    "0010e1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint timer_delete(timer_t __timerid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint kill(__pid_t __pid,int __sig)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_kill_0010cee8)();\n  return iVar1;\n}\n\n", 
    "001025a0": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010ce58)();\n  return;\n}\n\n", 
    "001027e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint __libc_current_sigrtmin(void)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR___libc_current_sigrtmin_0010cf78)();\n  return iVar1;\n}\n\n", 
    "00106f40": "\nbool FUN_00106f40(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "0010e0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__locale_t newlocale(int __category_mask,char *__locale,__locale_t __base)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105f70": "\nvoid FUN_00105f70(undefined8 param_1,char param_2)\n\n{\n  FUN_00105ee0(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "001040a0": "\nundefined8 FUN_001040a0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104010(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "00102850": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010cfb0)();\n  return iVar1;\n}\n\n", 
    "0010e130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010cf20)();\n  return pvVar1;\n}\n\n", 
    "0010e010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint raise(int __sig)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nuint alarm(uint __seconds)\n\n{\n  uint uVar1;\n  \n  uVar1 = (*(code *)PTR_alarm_0010ce90)();\n  return uVar1;\n}\n\n", 
    "00102890": "\nvoid __sprintf_chk(void)\n\n{\n  (*(code *)PTR___sprintf_chk_0010cfd0)();\n  return;\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t waitpid(__pid_t __pid,int *__stat_loc,int __options)\n\n{\n  __pid_t _Var1;\n  \n  _Var1 = (*(code *)PTR_waitpid_0010cf40)();\n  return _Var1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010ceb0)();\n  return pvVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\ndouble strtod_l(char *__nptr,char **__endptr,__locale_t __loc)\n\n{\n  double dVar1;\n  \n  dVar1 = (double)(*(code *)PTR_strtod_l_0010ce20)();\n  return dVar1;\n}\n\n", 
    "00106210": "\nundefined8\nFUN_00106210(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_0010927b,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001064d9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_001064d9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010657b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010657b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010632d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010632d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "0010e228": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105ab0": "\nvoid FUN_00105ab0(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010d400;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "0010e108": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strcmp(char *__s1,char *__s2)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105cf0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105cf0(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0010d080;\n  if (1 < DAT_0010d078) {\n    ppvVar2 = (void **)(PTR_DAT_0010d080 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0010d080 + (ulong)(DAT_0010d078 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0010d300) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0010d098 = &DAT_0010d300;\n    _DAT_0010d090 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0010d090) {\n    free(__ptr_00);\n    PTR_DAT_0010d080 = &DAT_0010d090;\n  }\n  DAT_0010d078 = 1;\n  return;\n}\n\n", 
    "0010e1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint timer_create(clockid_t __clock_id,sigevent *__evp,timer_t *__timerid)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010cf00)();\n  return iVar1;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__locale_t newlocale(int __category_mask,char *__locale,__locale_t __base)\n\n{\n  __locale_t p_Var1;\n  \n  p_Var1 = (__locale_t)(*(code *)PTR_newlocale_0010ce70)();\n  return p_Var1;\n}\n\n", 
    "001024b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010cde0)();\n  return;\n}\n\n", 
    "00106c10": "\nulong FUN_00106c10(byte *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  ulong uVar3;\n  long lVar4;\n  uint uVar5;\n  char *__s1;\n  byte *pbVar6;\n  byte *pbVar7;\n  long in_FS_OFFSET;\n  bool bVar8;\n  bool bVar9;\n  byte bVar10;\n  char *local_28;\n  long local_20;\n  \n  bVar10 = 0;\n  __s1 = \"HUP\";\n  uVar3 = 0;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((int)(char)*param_1 - 0x30U < 10) {\n    uVar3 = strtol((char *)param_1,&local_28,10);\n    if ((*local_28 == '\\0') && ((long)uVar3 < 0x41)) goto LAB_00106c71;\n  }\n  else {\n    do {\n      iVar1 = strcmp(__s1,(char *)param_1);\n      if (iVar1 == 0) {\n        uVar3 = (ulong)(uint)(&DAT_0010d0a0)[uVar3 * 3];\n        goto LAB_00106c71;\n      }\n      uVar5 = (int)uVar3 + 1;\n      uVar3 = (ulong)uVar5;\n      __s1 = __s1 + 0xc;\n    } while (uVar5 != 0x23);\n    iVar1 = __libc_current_sigrtmin();\n    iVar2 = __libc_current_sigrtmax();\n    bVar8 = false;\n    bVar9 = iVar1 == 0;\n    if (0 < iVar1) {\n      lVar4 = 5;\n      pbVar6 = param_1;\n      pbVar7 = (byte *)\"RTMIN\";\n      do {\n        if (lVar4 == 0) break;\n        lVar4 = lVar4 + -1;\n        bVar8 = *pbVar6 < *pbVar7;\n        bVar9 = *pbVar6 == *pbVar7;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        pbVar7 = pbVar7 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      if ((!bVar8 && !bVar9) == bVar8) {\n        lVar4 = strtol((char *)(param_1 + 5),&local_28,10);\n        if (((*local_28 == '\\0') && (-1 < lVar4)) && (lVar4 <= iVar2 - iVar1)) {\n          uVar3 = (ulong)(uint)(iVar1 + (int)lVar4);\n          goto LAB_00106c71;\n        }\n        goto LAB_00106cac;\n      }\n    }\n    bVar8 = false;\n    bVar9 = iVar2 == 0;\n    if (0 < iVar2) {\n      lVar4 = 5;\n      pbVar6 = param_1;\n      pbVar7 = (byte *)\"RTMAX\";\n      do {\n        if (lVar4 == 0) break;\n        lVar4 = lVar4 + -1;\n        bVar8 = *pbVar6 < *pbVar7;\n        bVar9 = *pbVar6 == *pbVar7;\n        pbVar6 = pbVar6 + (ulong)bVar10 * -2 + 1;\n        pbVar7 = pbVar7 + (ulong)bVar10 * -2 + 1;\n      } while (bVar9);\n      if ((!bVar8 && !bVar9) == bVar8) {\n        lVar4 = strtol((char *)(param_1 + 5),&local_28,10);\n        if (((*local_28 == '\\0') && (iVar1 - iVar2 <= lVar4)) && (lVar4 < 1)) {\n          uVar3 = (ulong)(uint)(iVar2 + (int)lVar4);\n          goto LAB_00106c71;\n        }\n      }\n    }\n  }\nLAB_00106cac:\n  uVar3 = 0xffffffff;\nLAB_00106c71:\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001073a0": "\nvoid FUN_001073a0(void)\n\n{\n  return;\n}\n\n", 
    "0010e1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint timer_settime(timer_t __timerid,int __flags,itimerspec *__value,itimerspec *__ovalue)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106f70": "\nulong FUN_00106f70(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00103a60": "\nuint FUN_00103a60(char *param_1,undefined8 param_2)\n\n{\n  char cVar1;\n  uint uVar2;\n  int iVar3;\n  int *piVar4;\n  long lVar5;\n  char *__ptr;\n  char *pcVar6;\n  undefined8 uVar7;\n  undefined8 uVar8;\n  uint uVar9;\n  char *pcVar10;\n  long in_FS_OFFSET;\n  uint local_4c;\n  char *local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  if ((int)*param_1 - 0x30U < 10) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    lVar5 = strtol(param_1,&local_48,10);\n    if (((local_48 == param_1) || (*local_48 != '\\0')) ||\n       ((*piVar4 != 0 || ((uVar2 = (uint)lVar5, (int)uVar2 != lVar5 || (uVar2 == 0xffffffff)))))) {\n      local_4c = 0xffffffff;\n    }\n    else {\n      uVar9 = 0x7f;\n      if (0xfe < (int)uVar2) {\n        uVar9 = 0xff;\n      }\n      uVar9 = uVar9 & uVar2;\n      local_4c = uVar9;\nLAB_00103bf6:\n      iVar3 = FUN_00106db0(uVar9,param_2);\n      uVar9 = local_4c;\n      if (iVar3 == 0) goto LAB_00103b90;\n    }\n  }\n  else {\n    __ptr = (char *)FUN_00106a50();\n    cVar1 = *__ptr;\n    pcVar10 = __ptr;\n    while (cVar1 != '\\0') {\n      pcVar6 = strchr(\"abcdefghijklmnopqrstuvwxyz\",(int)cVar1);\n      if (pcVar6 != (char *)0x0) {\n        *pcVar10 = cVar1 + -0x20;\n      }\n      pcVar6 = pcVar10 + 1;\n      pcVar10 = pcVar10 + 1;\n      cVar1 = *pcVar6;\n    }\n    iVar3 = FUN_00106d90(__ptr,&local_4c);\n    if ((iVar3 == 0) ||\n       ((((*__ptr == 'S' && (__ptr[1] == 'I')) && (__ptr[2] == 'G')) &&\n        (iVar3 = FUN_00106d90(__ptr + 3,&local_4c), iVar3 == 0)))) {\n      uVar9 = local_4c;\n      free(__ptr);\n      if (-1 < (int)uVar9) goto LAB_00103bf6;\n    }\n    else {\n      local_4c = 0xffffffff;\n      free(__ptr);\n    }\n  }\n  uVar7 = FUN_00106170(param_1);\n  uVar8 = dcgettext(0,\"%s: invalid signal\",5);\n  error(0,0,uVar8,uVar7);\n  uVar9 = 0xffffffff;\nLAB_00103b90:\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar9;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102520": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010ce18)();\n  return;\n}\n\n", 
    "00102eb0": "\nvoid FUN_00102eb0(int param_1)\n\n{\n  long in_FS_OFFSET;\n  sigaction local_b8;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  sigemptyset(&local_b8.sa_mask);\n  local_b8.sa_flags = 0x10000000;\n  local_b8.__sigaction_handler.sa_handler = FUN_00103150;\n  sigaction(0xe,&local_b8,(sigaction *)0x0);\n  sigaction(2,&local_b8,(sigaction *)0x0);\n  sigaction(3,&local_b8,(sigaction *)0x0);\n  sigaction(1,&local_b8,(sigaction *)0x0);\n  sigaction(0xf,&local_b8,(sigaction *)0x0);\n  sigaction(param_1,&local_b8,(sigaction *)0x0);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010e220": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__pid_t fork(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102880": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010cfc8)();\n  return ppuVar1;\n}\n\n", 
    "00102760": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010cf38)();\n  return;\n}\n\n", 
    "00102640": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010cea8)();\n  return iVar1;\n}\n\n", 
    "0010e238": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105ce0": "\nvoid FUN_00105ce0(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105bf0(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "0010e118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigemptyset(sigset_t *__set)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106ef0": "\nuint FUN_00106ef0(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00106680": "\nvoid FUN_00106680(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_00106210();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010cdd8)();\n  return;\n}\n\n", 
    "0010e1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102e00": "\nundefined8 FUN_00102e00(double *param_1,char param_2)\n\n{\n  double dVar1;\n  \n  dVar1 = DAT_00108a68;\n  if (param_2 == 'h') {\nLAB_00102e1b:\n    *param_1 = dVar1 * *param_1;\n    return 1;\n  }\n  if (param_2 < 'i') {\n    if (param_2 != '\\0') {\n      dVar1 = DAT_00108a58;\n      if (param_2 != 'd') {\n        return 0;\n      }\n      goto LAB_00102e1b;\n    }\n  }\n  else {\n    if (param_2 == 'm') {\n      *param_1 = DAT_00108a60 * *param_1;\n      return 1;\n    }\n    if (param_2 != 's') {\n      return 0;\n    }\n  }\n  *param_1 = DAT_00108a50 * *param_1;\n  return 1;\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010cef8)();\n  return pvVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strchr_0010ce68)();\n  return pcVar1;\n}\n\n", 
    "00105b10": "\nundefined4 FUN_00105b10(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010d400;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "0010e1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint execvp(char *__file,char **__argv)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106f60": "\nbool FUN_00106f60(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "00103c90": "\ndouble FUN_00103c90(char *param_1,char **param_2)\n\n{\n  __locale_t __loc;\n  double dVar1;\n  \n  __loc = (__locale_t)FUN_00103c40();\n  if (__loc != (__locale_t)0x0) {\n    dVar1 = strtod_l(param_1,param_2,__loc);\n    return dVar1;\n  }\n  if (param_2 != (char **)0x0) {\n    *param_2 = param_1;\n  }\n  return 0.0;\n}\n\n", 
    "00105f90": "\nvoid FUN_00105f90(undefined8 param_1)\n\n{\n  FUN_00105f70(param_1,0x3a);\n  return;\n}\n\n", 
    "001041e0": "\nundefined8\nFUN_001041e0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106fe0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104130(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010cea0)();\n  return iVar1;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint sigaction(int __sig,sigaction *__act,sigaction *__oact)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_sigaction_0010ce10)();\n  return iVar1;\n}\n\n", 
    "0010e230": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __sprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010e110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__sighandler_t signal(int __sig,__sighandler_t __handler)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n"
}