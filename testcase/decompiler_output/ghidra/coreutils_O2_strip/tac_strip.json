{
    "00106ea0": "\nvoid FUN_00106ea0(char *param_1)\n\n{\n  long lVar1;\n  ulong uVar2;\n  \n  uVar2 = strlen(param_1);\n  do {\n    if (uVar2 < 2) {\n      return;\n    }\n    lVar1 = uVar2 - 1;\n    uVar2 = uVar2 - 1;\n  } while (param_1[lVar1] == '/');\n  return;\n}\n\n", 
    "00105ed0": "\nvoid FUN_00105ed0(undefined8 param_1,char param_2)\n\n{\n  FUN_00105e40(param_1,0xffffffffffffffff,(int)param_2);\n  return;\n}\n\n", 
    "00106990": "\nvoid FUN_00106990(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00106900(param_1,param_2,1);\n  return;\n}\n\n", 
    "00106190": "\nuint FUN_00106190(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00106fe0();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00105e20": "\nvoid FUN_00105e20(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105da0(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "0010f090": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __stack_chk_fail(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001042b0": "\nundefined8\nFUN_001042b0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 2);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001041f0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102700": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n  (*(code *)PTR_exit_0010bf90)();\n  return;\n}\n\n", 
    "0010f098": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid getopt_long(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105da0": "\nvoid FUN_00105da0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_68 [56];\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103ea0(auStack_68);\n  FUN_00105810(param_1,param_3,param_4,auStack_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103ce0": "\nvoid * FUN_00103ce0(void *param_1,char *param_2,void **param_3)\n\n{\n  size_t __n;\n  long lVar1;\n  long lVar2;\n  size_t __n_00;\n  void *__dest;\n  undefined *puVar3;\n  ulong uVar4;\n  undefined local_41;\n  \n  lVar1 = FUN_00106e40();\n  lVar2 = FUN_00106ea0(lVar1);\n  __n = (lVar1 - (long)param_1) + lVar2;\n  __n_00 = strlen(param_2);\n  if (lVar2 == 0) {\n    local_41 = 0x2e;\n    if (*param_2 != '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 == '/');\n  }\n  else if (*(char *)((long)param_1 + (__n - 1)) == '/') {\n    local_41 = 0;\n    uVar4 = 0;\n  }\n  else {\n    local_41 = 0x2f;\n    if (*param_2 == '/') {\n      local_41 = 0;\n    }\n    uVar4 = (ulong)(*param_2 != '/');\n  }\n  __dest = malloc(__n + 1 + __n_00 + uVar4);\n  if (__dest != (void *)0x0) {\n    puVar3 = (undefined *)mempcpy(__dest,param_1,__n);\n    *puVar3 = local_41;\n    if (param_3 != (void **)0x0) {\n      *param_3 = puVar3 + uVar4;\n    }\n    puVar3 = (undefined *)mempcpy(puVar3 + uVar4,param_2,__n_00);\n    *puVar3 = 0;\n  }\n  return __dest;\n}\n\n", 
    "00102020": "\nvoid FUN_00102020(void)\n\n{\n                    /* WARNING: Treating indirect jump as call */\n  (*(code *)PTR_0010bdf8)();\n  return;\n}\n\n", 
    "00106060": "\nvoid FUN_00106060(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00106050(0,param_1,param_2,param_3);\n  return;\n}\n\n", 
    "001027a0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nuint FUN_001027a0(int param_1,undefined8 *param_2)\n\n{\n  char cVar1;\n  int iVar2;\n  uint uVar3;\n  char *pcVar4;\n  void *pvVar5;\n  int *piVar6;\n  undefined8 uVar7;\n  ulong uVar8;\n  undefined8 extraout_RDX;\n  undefined8 unaff_RBX;\n  undefined **ppuVar9;\n  uint uVar10;\n  undefined *puVar11;\n  byte bVar12;\n  \n  bVar12 = 0;\n  FUN_00103de0(*param_2);\n  setlocale(6,\"\");\n  bindtextdomain(\"coreutils\",\"/usr/local/share/locale\");\n  textdomain(\"coreutils\");\n  FUN_001072e0(FUN_00103c30);\n  DAT_0010e280 = 1;\n  DAT_0010e290 = \"\\n\";\n  DAT_0010e288 = 1;\n  while (iVar2 = getopt_long(param_1,param_2,&DAT_001084fc,&PTR_s_before_0010bae0,0), iVar2 != -1) {\n    if (iVar2 == 0x62) {\nLAB_001028d0:\n      DAT_0010e288 = 0;\n    }\n    else {\n      if (iVar2 < 99) {\n        if (iVar2 == -0x83) {\n          FUN_001066f0(stdout,&DAT_0010843a,\"GNU coreutils\",PTR_DAT_0010c010,\"Jay Lepreau\",\n                       \"David MacKenzie\",0);\n                    /* WARNING: Subroutine does not return */\n          exit(0);\n        }\n        if (iVar2 != -0x82) goto LAB_00102acd;\n        FUN_00103af0(0);\n        goto LAB_001028d0;\n      }\n      if (iVar2 == 0x72) {\n        DAT_0010e280 = 0;\n      }\n      else {\n        if (iVar2 != 0x73) {\nLAB_00102acd:\n          DAT_0010e268 = FUN_00103af0(1);\n          goto LAB_00102ad7;\n        }\n        DAT_0010e290 = optarg;\n      }\n    }\n  }\n  if (DAT_0010e280 == 0) {\n    if (*DAT_0010e290 == '\\0') {\n      uVar7 = dcgettext(0,\"separator cannot be empty\",5);\n      error(1,0,uVar7);\n      (*(code *)PTR___libc_start_main_0010bfd8)\n                (FUN_001027a0,unaff_RBX,&stack0xfffffffffffffff0,FUN_00107260,FUN_001072d0,\n                 extraout_RDX,&stack0xffffffffffffffe8);\n      do {\n                    /* WARNING: Do nothing block with infinite loop */\n      } while( true );\n    }\n    uVar8 = 0xffffffffffffffff;\n    _DAT_0010e220 = 0;\n    _DAT_0010e240 = &DAT_0010e120;\n    _DAT_0010e228 = 0;\n    _DAT_0010e248 = 0;\n    pcVar4 = DAT_0010e290;\n    do {\n      if (uVar8 == 0) break;\n      uVar8 = uVar8 - 1;\n      cVar1 = *pcVar4;\n      pcVar4 = pcVar4 + (ulong)bVar12 * -2 + 1;\n    } while (cVar1 != '\\0');\n    pcVar4 = re_compile_pattern(DAT_0010e290,~uVar8 - 1,(re_pattern_buffer *)&DAT_0010e220);\n    if (pcVar4 != (char *)0x0) {\n      error(1,0,\"%s\",pcVar4);\n      goto LAB_00102afb;\n    }\n  }\n  else {\n    DAT_0010e278 = 1;\n    DAT_0010e280 = DAT_0010e278;\n    if (*DAT_0010e290 != '\\0') {\n      uVar8 = 0xffffffffffffffff;\n      pcVar4 = DAT_0010e290;\n      do {\n        if (uVar8 == 0) break;\n        uVar8 = uVar8 - 1;\n        cVar1 = *pcVar4;\n        pcVar4 = pcVar4 + (ulong)bVar12 * -2 + 1;\n      } while (cVar1 != '\\0');\n      DAT_0010e278 = ~uVar8 - 1;\n      DAT_0010e280 = DAT_0010e278;\n    }\n  }\n  iVar2 = 0x32;\n  DAT_0010e268 = 0x2000;\n  uVar8 = 0x2000;\n  if (0xfff < DAT_0010e280) {\n    while (DAT_0010e268 = uVar8 * 2, (uVar8 & 0x7fffffffffffffff) <= DAT_0010e280) {\n      iVar2 = iVar2 + -1;\n      uVar8 = DAT_0010e268;\n      if (iVar2 == 0) {\nLAB_00102ad7:\n                    /* WARNING: Subroutine does not return */\n        FUN_00106a50();\n      }\n    }\n  }\n  uVar8 = DAT_0010e268 + 1 + DAT_0010e280;\n  DAT_0010e260 = uVar8 * 2;\n  if (DAT_0010e260 <= uVar8 || uVar8 <= DAT_0010e268) {\nLAB_00102afb:\n                    /* WARNING: Subroutine does not return */\n    FUN_00106a50();\n  }\n  pvVar5 = (void *)FUN_00106830();\n  uVar8 = DAT_0010e280;\n  if (DAT_0010e280 == 0) {\n    DAT_0010e270 = (long)pvVar5 + 1;\n  }\n  else {\n    pvVar5 = memcpy(pvVar5,DAT_0010e290,DAT_0010e280 + 1);\n    DAT_0010e270 = (long)pvVar5 + uVar8;\n  }\n  if (optind < param_1) {\n    ppuVar9 = (undefined **)(param_2 + optind);\n    puVar11 = *ppuVar9;\n    if (puVar11 == (undefined *)0x0) {\n      uVar10 = 1;\n      goto LAB_00102a1b;\n    }\n  }\n  else {\n    ppuVar9 = &PTR_DAT_0010bac0;\n    puVar11 = &DAT_001084c6;\n  }\n  uVar10 = 1;\n  do {\n    ppuVar9 = ppuVar9 + 1;\n    uVar3 = FUN_00103720(puVar11);\n    puVar11 = *ppuVar9;\n    uVar10 = uVar10 & uVar3;\n  } while (puVar11 != (undefined *)0x0);\nLAB_00102a1b:\n  FUN_00102c80(0,0);\n  if ((DAT_0010e289 != '\\0') && (iVar2 = close(0), iVar2 < 0)) {\n    piVar6 = __errno_location();\n    uVar10 = 0;\n    error(0,*piVar6,&DAT_001084c6);\n  }\n  return uVar10 ^ 1;\n}\n\n", 
    "00105e10": "\nvoid FUN_00105e10(undefined4 param_1,undefined8 param_2)\n\n{\n  FUN_00105d40(0,param_1,param_2);\n  return;\n}\n\n", 
    "00103c30": "\nvoid FUN_00103c30(void)\n\n{\n  int iVar1;\n  int *piVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  \n  iVar1 = FUN_00106dd0(stdout);\n  if (iVar1 != 0) {\n    piVar2 = __errno_location();\n    if ((DAT_0010e298 == '\\0') || (*piVar2 != 0x20)) {\n      uVar3 = dcgettext(0,\"write error\",5);\n      if (DAT_0010e2a0 == 0) {\n        error(0,*piVar2,\"%s\",uVar3);\n      }\n      else {\n        uVar4 = FUN_00105ef0();\n        error(0,*piVar2,\"%s: %s\",uVar4,uVar3);\n      }\n      goto LAB_00103cb8;\n    }\n  }\n  iVar1 = FUN_00106dd0(stderr);\n  if (iVar1 == 0) {\n    return;\n  }\nLAB_00103cb8:\n                    /* WARNING: Subroutine does not return */\n  _exit(DAT_0010c018);\n}\n\n", 
    "00105a90": "\nvoid FUN_00105a90(undefined4 *param_1,long param_2,long param_3)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010e3c0;\n  }\n  *param_1 = 10;\n  if ((param_2 != 0) && (param_3 != 0)) {\n    *(long *)(param_1 + 10) = param_2;\n    *(long *)(param_1 + 0xc) = param_3;\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00104470": "\nundefined8\nFUN_00104470(byte *param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7,char param_8,char param_9)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *param_1;\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  uVar3 = 0;\n  if (bVar2 == param_3) {\n    uVar3 = FUN_00104380(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7,\n                         (int)param_8,(int)param_9,0,0);\n  }\n  return uVar3;\n}\n\n", 
    "00106fe0": "\nvoid FUN_00106fe0(undefined8 param_1)\n\n{\n  FUN_00107090(param_1,0,3);\n  return;\n}\n\n", 
    "00105ef0": "\nvoid FUN_00105ef0(undefined8 param_1)\n\n{\n  FUN_00105ed0(param_1,0x3a);\n  return;\n}\n\n", 
    "00106890": "\nvoid * FUN_00106890(void *param_1,size_t param_2)\n\n{\n  void *pvVar1;\n  \n  if ((param_2 == 0) && (param_1 != (void *)0x0)) {\n    free(param_1);\n    return (void *)0x0;\n  }\n  pvVar1 = realloc(param_1,param_2);\n  if ((pvVar1 == (void *)0x0) && (param_2 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106a50();\n  }\n  return pvVar1;\n}\n\n", 
    "001026b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memmove_0010bf68)();\n  return pvVar1;\n}\n\n", 
    "00105d20": "\nvoid FUN_00105d20(undefined8 param_1)\n\n{\n  FUN_00105cf0(0,param_1);\n  return;\n}\n\n", 
    "00106f30": "\nvoid FUN_00106f30(undefined8 param_1,uint param_2)\n\n{\n  param_2 = param_2 & 0x80000;\n  if (param_2 != 0) {\n    param_2 = 0x406;\n  }\n  FUN_00107090(param_1,param_2,3);\n  return;\n}\n\n", 
    "00105e40": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105e40(undefined8 param_1,undefined8 param_2,char param_3,undefined8 param_4)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  undefined8 uStack_20;\n  undefined8 local_18;\n  long local_10;\n  \n  puVar1 = &local_48;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  local_48 = _DAT_0010e3c0;\n  uStack_40 = uRam000000000010e3c8;\n  local_38 = _DAT_0010e3d0;\n  uStack_30 = uRam000000000010e3d8;\n  local_28 = _DAT_0010e3e0;\n  uStack_20 = uRam000000000010e3e8;\n  local_18 = DAT_0010e3f0;\n  FUN_00105a30(&local_48,(int)param_3,1,param_4,param_1,param_2);\n  FUN_00105810(0,param_1,param_2,puVar1);\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f190": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f070": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid bindtextdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001066f0": "\nvoid FUN_001066f0(void)\n\n{\n  long lVar1;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00106660();\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f198": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102720": "\nvoid __fprintf_chk(void)\n\n{\n  (*(code *)PTR___fprintf_chk_0010bfa0)();\n  return;\n}\n\n", 
    "00106a90": "\nint FUN_00106a90(FILE *param_1,__off_t param_2,int param_3)\n\n{\n  int iVar1;\n  __off_t _Var2;\n  \n  if (((param_1->_IO_read_end == param_1->_IO_read_ptr) &&\n      (param_1->_IO_write_ptr == param_1->_IO_write_base)) &&\n     (param_1->_IO_save_base == (char *)0x0)) {\n    iVar1 = fileno(param_1);\n    _Var2 = lseek(iVar1,param_2,param_3);\n    if (_Var2 == -1) {\n      iVar1 = -1;\n    }\n    else {\n      param_1->_flags = param_1->_flags & 0xffffffef;\n      param_1->_offset = _Var2;\n      iVar1 = 0;\n    }\n    return iVar1;\n  }\n  iVar1 = fseeko(param_1,param_2,param_3);\n  return iVar1;\n}\n\n", 
    "0010f078": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid dcgettext(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102600": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_0010bf10)();\n  return iVar1;\n}\n\n", 
    "00106640": "\nvoid FUN_00106640(void)\n\n{\n  long lVar1;\n  long *in_R8;\n  long lVar2;\n  \n  lVar2 = 0;\n  lVar1 = *in_R8;\n  while (lVar1 != 0) {\n    lVar2 = lVar2 + 1;\n    lVar1 = in_R8[lVar2];\n  }\n  FUN_001061f0();\n  return;\n}\n\n", 
    "00106880": "\nvoid thunk_FUN_00106830(void)\n\n{\n  FUN_00106830();\n  return;\n}\n\n", 
    "001026a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_mempcpy_0010bf60)();\n  return pvVar1;\n}\n\n", 
    "00106080": "\nvoid FUN_00106080(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4)\n\n{\n  FUN_00105fb0(0,param_1,param_2,param_3,param_4);\n  return;\n}\n\n", 
    "00105d10": "\nvoid FUN_00105d10(void)\n\n{\n  FUN_00105810();\n  return;\n}\n\n", 
    "00102b60": "\n/* WARNING: Removing unreachable block (ram,0x00102b73) */\n/* WARNING: Removing unreachable block (ram,0x00102b7f) */\n\nvoid FUN_00102b60(void)\n\n{\n  return;\n}\n\n", 
    "00102c80": "\nvoid FUN_00102c80(void *param_1,long param_2)\n\n{\n  size_t __n;\n  ulong __n_00;\n  undefined *__dest;\n  ulong uVar1;\n  \n  __n_00 = param_2 - (long)param_1;\n  __n = 0x2000 - DAT_0010e0e0;\n  if (param_1 == (void *)0x0) {\n    fwrite_unlocked(&DAT_0010c0e0,1,DAT_0010e0e0,stdout);\n    DAT_0010e0e0 = 0;\n  }\n  else {\n    if (__n_00 < __n) {\n      __dest = &DAT_0010c0e0 + DAT_0010e0e0;\n      uVar1 = DAT_0010e0e0 + __n_00;\n    }\n    else {\n      do {\n        uVar1 = __n_00 - __n;\n        memcpy(&DAT_0010c0e0 + DAT_0010e0e0,param_1,__n);\n        param_1 = (void *)((long)param_1 + __n);\n        __n = 0x2000;\n        fwrite_unlocked(&DAT_0010c0e0,1,0x2000,stdout);\n        DAT_0010e0e0 = 0;\n        __n_00 = uVar1;\n      } while (0x1fff < uVar1);\n      __dest = &DAT_0010c0e0;\n    }\n    memcpy(__dest,param_1,__n_00);\n    DAT_0010e0e0 = uVar1;\n  }\n  return;\n}\n\n", 
    "0010f080": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f088": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102710": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_0010bf98)();\n  return sVar1;\n}\n\n", 
    "00103320": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unlink_0010be20)();\n  return iVar1;\n}\n\n", 
    "00106830": "\nvoid FUN_00106830(size_t param_1)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = malloc(param_1);\n  if ((pvVar1 == (void *)0x0) && (param_1 != 0)) {\n                    /* WARNING: Subroutine does not return */\n    FUN_00106a50();\n  }\n  return;\n}\n\n", 
    "00104650": "\nulong FUN_00104650(undefined *param_1,ulong param_2,char *param_3,ulong param_4,int param_5,\n                  uint param_6,long param_7,char *param_8,char *param_9)\n\n{\n  byte *__s1;\n  bool bVar1;\n  bool bVar2;\n  bool bVar3;\n  bool bVar4;\n  bool bVar5;\n  bool bVar6;\n  int iVar7;\n  size_t sVar8;\n  ushort **ppuVar9;\n  long lVar10;\n  char cVar11;\n  uint uVar12;\n  ulong uVar13;\n  byte bVar14;\n  ulong uVar15;\n  char *pcVar16;\n  ulong uVar17;\n  ulong uVar18;\n  ulong uVar19;\n  long in_FS_OFFSET;\n  bool bVar20;\n  bool bVar21;\n  bool bVar22;\n  bool bVar23;\n  bool bVar24;\n  size_t local_c8;\n  char *local_98;\n  ulong local_90;\n  char *local_78;\n  char *local_70;\n  bool local_64;\n  wint_t local_4c;\n  mbstate_t local_48;\n  long local_40;\n  \n  local_70 = param_8;\n  local_78 = param_9;\n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  sVar8 = __ctype_get_mb_cur_max();\n  uVar12 = param_6 & 2;\n  bVar20 = uVar12 != 0;\n  switch(param_5) {\n  case 0:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = false;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 2:\n    if (uVar12 == 0) {\n      bVar1 = false;\nLAB_00104ad7:\n      if (param_2 == 0) {\n        local_90 = 0;\n        bVar2 = false;\n        bVar6 = true;\n        local_64 = false;\n        goto LAB_00104af9;\n      }\n      bVar2 = false;\n      local_64 = false;\n      bVar6 = true;\n      uVar13 = 0;\n      local_90 = param_2;\n      goto LAB_00105096;\n    }\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = false;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 3:\n    bVar1 = true;\n    goto LAB_00104a4f;\n  case 4:\n    if (uVar12 == 0) {\n      bVar1 = true;\n      goto LAB_00104ad7;\n    }\n  case 1:\n    bVar1 = false;\nLAB_00104a4f:\n    bVar6 = true;\n    local_64 = false;\n    bVar20 = true;\n    local_90 = 0;\n    bVar2 = false;\n    uVar18 = 0;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n    break;\n  case 5:\n    if (uVar12 == 0) {\n      if (param_2 != 0) {\n        *param_1 = 0x22;\n      }\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar2 = false;\n      bVar20 = false;\n      uVar18 = 1;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    else {\n      bVar2 = false;\n      uVar18 = 0;\n      bVar6 = true;\n      local_64 = false;\n      local_90 = 0;\n      bVar20 = true;\n      bVar1 = true;\n      local_c8 = 1;\n      local_98 = \"\\\"\";\n    }\n    break;\n  case 6:\n    bVar2 = false;\n    uVar18 = 0;\n    bVar6 = true;\n    local_64 = false;\n    param_5 = 5;\n    local_90 = 0;\n    bVar20 = true;\n    bVar1 = true;\n    local_c8 = 1;\n    local_98 = \"\\\"\";\n    break;\n  case 7:\n    bVar6 = true;\n    bVar2 = false;\n    uVar18 = 0;\n    local_64 = false;\n    local_90 = 0;\n    bVar20 = false;\n    bVar1 = true;\n    local_c8 = 0;\n    local_98 = (char *)0x0;\n    break;\n  case 8:\n  case 9:\n  case 10:\n    if (param_5 != 10) {\n      local_70 = (char *)FUN_00104520(&DAT_001085b1,param_5);\n      local_78 = (char *)FUN_00104520(&DAT_001085a1);\n    }\n    uVar18 = 0;\n    if (uVar12 == 0) {\n      cVar11 = *local_70;\n      while (cVar11 != '\\0') {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = cVar11;\n        }\n        uVar18 = uVar18 + 1;\n        cVar11 = local_70[uVar18];\n      }\n    }\n    bVar2 = false;\n    local_c8 = strlen(local_78);\n    local_98 = local_78;\n    bVar6 = true;\n    local_64 = false;\n    local_90 = 0;\n    bVar1 = true;\n    break;\n  default:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  do {\n    uVar13 = 0;\n    bVar4 = local_64;\nLAB_001047a0:\n    bVar21 = param_4 != uVar13;\n    if (param_4 == 0xffffffffffffffff) {\n      bVar21 = param_3[uVar13] != '\\0';\n    }\n    bVar24 = bVar1;\n    if (bVar21) {\n      bVar23 = (bool)(param_5 != 2 & bVar1);\n      __s1 = (byte *)(param_3 + uVar13);\n      uVar17 = uVar13;\n      bVar3 = bVar2;\n      bVar5 = bVar23;\n      if (!bVar23) {\n        uVar15 = (ulong)*__s1;\n        switch(uVar15) {\n        case 0:\n          if (bVar1) goto switchD_00105000_caseD_0;\n          bVar5 = false;\n          uVar15 = 0;\n          if ((param_6 & 1) != 0) goto code_r0x00104f9b;\n          goto LAB_00104d8b;\n        default:\nswitchD_00104eb0_caseD_1:\n          bVar22 = bVar1;\n          if (sVar8 != 1) {\n            local_48 = (mbstate_t)0x0;\n            if (param_4 == 0xffffffffffffffff) {\n              param_4 = strlen(param_3);\n            }\n            uVar17 = 0;\n            do {\n              uVar19 = uVar13 + uVar17;\n              lVar10 = FUN_00106b10(&local_4c,param_3 + uVar19,param_4 - uVar19,&local_48);\n              if (lVar10 == 0) break;\n              if (lVar10 == -1) {\n                bVar21 = false;\n                goto LAB_00105288;\n              }\n              if (lVar10 == -2) goto joined_r0x0010569a;\n              if (((param_5 == 2) && (bVar20)) && (lVar10 != 1)) {\n                pcVar16 = param_3 + uVar19 + 1;\n                do {\n                  if (((byte)(*pcVar16 + 0xa5U) < 0x22) &&\n                     ((1L << (*pcVar16 + 0xa5U & 0x3f) & 0x20000002bU) != 0)) {\n                    param_5 = 2;\n                    goto LAB_00104c70;\n                  }\n                  pcVar16 = pcVar16 + 1;\n                } while (param_3 + uVar19 + lVar10 != pcVar16);\n              }\n              iVar7 = iswprint(local_4c);\n              if (iVar7 == 0) {\n                bVar21 = false;\n              }\n              uVar17 = uVar17 + lVar10;\n              iVar7 = mbsinit(&local_48);\n            } while (iVar7 == 0);\n            bVar22 = (bool)((bVar21 ^ 1U) & bVar1);\n            goto LAB_00105288;\n          }\n          ppuVar9 = __ctype_b_loc();\n          uVar17 = 1;\n          bVar22 = ((*ppuVar9)[uVar15] & 0x4000) == 0;\n          bVar21 = !bVar22;\n          bVar22 = (bool)(bVar22 & bVar1);\n          goto LAB_00104a11;\n        case 7:\n          uVar15 = 7;\n          bVar14 = 0x61;\n          break;\n        case 8:\n          uVar15 = 8;\n          bVar14 = 0x62;\n          break;\n        case 9:\n          uVar15 = 9;\n          bVar14 = 0x74;\n          goto LAB_00104f58;\n        case 10:\n          uVar15 = 10;\n          bVar14 = 0x6e;\n          goto LAB_00104f58;\n        case 0xb:\n          uVar15 = 0xb;\n          bVar14 = 0x76;\n          break;\n        case 0xc:\n          uVar15 = 0xc;\n          bVar14 = 0x66;\n          break;\n        case 0xd:\n          uVar15 = 0xd;\n          bVar14 = 0x72;\nLAB_00104f58:\n          bVar23 = (bool)(param_5 == 2 & bVar20);\n          if (bVar23) goto LAB_00104c67;\n          break;\n        case 0x20:\n          uVar15 = 0x20;\n          goto LAB_00104c54;\n        case 0x21:\n        case 0x22:\n        case 0x24:\n        case 0x26:\n        case 0x28:\n        case 0x29:\n        case 0x2a:\n        case 0x3b:\n        case 0x3c:\n        case 0x3d:\n        case 0x3e:\n        case 0x5b:\n        case 0x5e:\n        case 0x60:\n        case 0x7c:\n          bVar21 = false;\nLAB_00104c54:\n          bVar22 = param_5 == 2;\n          bVar23 = bVar21;\n          if ((!bVar20) || (!bVar22)) goto LAB_00104978;\n          goto LAB_00104c67;\n        case 0x23:\n        case 0x7e:\nLAB_00104c4b:\n          bVar22 = param_5 == 2;\n          if (uVar13 == 0) goto LAB_00104c54;\n          goto LAB_00104975;\n        case 0x25:\n        case 0x2b:\n        case 0x2c:\n        case 0x2d:\n        case 0x2e:\n        case 0x2f:\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x3a:\n        case 0x41:\n        case 0x42:\n        case 0x43:\n        case 0x44:\n        case 0x45:\n        case 0x46:\n        case 0x47:\n        case 0x48:\n        case 0x49:\n        case 0x4a:\n        case 0x4b:\n        case 0x4c:\n        case 0x4d:\n        case 0x4e:\n        case 0x4f:\n        case 0x50:\n        case 0x51:\n        case 0x52:\n        case 0x53:\n        case 0x54:\n        case 0x55:\n        case 0x56:\n        case 0x57:\n        case 0x58:\n        case 0x59:\n        case 0x5a:\n        case 0x5d:\n        case 0x5f:\n        case 0x61:\n        case 0x62:\n        case 99:\n        case 100:\n        case 0x65:\n        case 0x66:\n        case 0x67:\n        case 0x68:\n        case 0x69:\n        case 0x6a:\n        case 0x6b:\n        case 0x6c:\n        case 0x6d:\n        case 0x6e:\n        case 0x6f:\n        case 0x70:\n        case 0x71:\n        case 0x72:\n        case 0x73:\n        case 0x74:\n        case 0x75:\n        case 0x76:\n        case 0x77:\n        case 0x78:\n        case 0x79:\n        case 0x7a:\n          goto switchD_00104eb0_caseD_25;\n        case 0x27:\nswitchD_00104eb0_caseD_27:\n          bVar4 = bVar21;\n          if (param_5 != 2) {\n            bVar22 = false;\n            uVar15 = 0x27;\n            bVar23 = bVar21;\n            goto LAB_00104978;\n          }\n          if (!bVar20) {\n            if ((param_2 == 0) || (uVar13 = 0, uVar15 = param_2, local_90 != 0)) {\n              if (uVar18 < param_2) {\n                param_1[uVar18] = 0x27;\n              }\n              if (uVar18 + 1 < param_2) {\n                param_1[uVar18 + 1] = 0x5c;\n              }\n              uVar13 = param_2;\n              uVar15 = local_90;\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x27;\n              }\n            }\n            bVar14 = 0x27;\n            uVar18 = uVar18 + 3;\n            param_2 = uVar13;\n            local_90 = uVar15;\n            bVar3 = false;\n            bVar22 = false;\n            goto joined_r0x0010499b;\n          }\n          goto LAB_00104c70;\n        case 0x3f:\nswitchD_00104eb0_caseD_3f:\n          if (param_5 != 2) {\n            if ((((param_5 == 5) && ((param_6 & 4) != 0)) && (uVar17 = uVar13 + 2, uVar17 < param_4)\n                ) && (param_3[uVar13 + 1] == '?')) {\n              uVar15 = (ulong)(byte)param_3[uVar17];\n              switch(param_3[uVar17]) {\n              case '!':\n              case '\\'':\n              case '(':\n              case ')':\n              case '-':\n              case '/':\n              case '<':\n              case '=':\n              case '>':\n                goto switchD_001055fe_caseD_21;\n              default:\n                break;\n              }\n            }\n            bVar22 = false;\n            uVar15 = 0x3f;\n            bVar23 = false;\n            goto LAB_00104978;\n          }\n          if (!bVar20) {\n            bVar14 = 0x3f;\n            bVar22 = false;\n            bVar21 = false;\n            goto joined_r0x0010499b;\n          }\n          goto LAB_00104c70;\n        case 0x5c:\n          if (param_5 != 2) goto switchD_001048a8_caseD_5c;\n          if (!bVar20) {\nLAB_00104ee8:\n            uVar13 = uVar13 + 1;\n            bVar21 = false;\n            bVar14 = 0x5c;\n            goto LAB_00104f00;\n          }\n          goto LAB_00104c70;\n        case 0x7b:\n        case 0x7d:\nswitchD_00104eb0_caseD_7b:\n          bVar23 = param_4 != 1;\n          if (param_4 == 0xffffffffffffffff) {\n            bVar23 = param_3[1] != '\\0';\n          }\n          bVar22 = param_5 == 2;\n          if (!bVar23) goto LAB_00104c4b;\nLAB_00104975:\n          bVar23 = false;\n          goto LAB_00104978;\n        }\nLAB_00104d80:\n        bVar5 = bVar23;\n        if (!bVar1) {\nLAB_00104d8b:\n          bVar14 = (byte)uVar15;\n          bVar23 = false;\n          bVar21 = false;\n          bVar22 = false;\n          if (!bVar20) goto LAB_00104998;\n          goto LAB_001048c0;\n        }\nLAB_00104dc0:\n        bVar21 = false;\n        goto joined_r0x00104dd1;\n      }\n      if (local_c8 != 0) {\n        if ((param_4 == 0xffffffffffffffff) && (1 < local_c8)) {\n          param_4 = strlen(param_3);\n        }\n        if ((param_4 < uVar13 + local_c8) || (iVar7 = memcmp(__s1,local_98,local_c8), iVar7 != 0))\n        goto LAB_00104fe0;\n        if (!bVar20) {\n          uVar15 = (ulong)*__s1;\n          switch(uVar15) {\n          case 0:\n            goto switchD_001048a8_caseD_0;\n          default:\n            goto switchD_00104eb0_caseD_1;\n          case 7:\n            goto switchD_00105000_caseD_7;\n          case 8:\n            goto switchD_00105000_caseD_8;\n          case 9:\n            goto switchD_001048a8_caseD_9;\n          case 10:\n            goto switchD_00105000_caseD_a;\n          case 0xb:\n            goto switchD_00105000_caseD_b;\n          case 0xc:\n            goto switchD_00105000_caseD_c;\n          case 0xd:\n            goto switchD_00105000_caseD_d;\n          case 0x20:\n            goto LAB_00105029;\n          case 0x21:\n          case 0x22:\n          case 0x24:\n          case 0x26:\n          case 0x28:\n          case 0x29:\n          case 0x2a:\n          case 0x3b:\n          case 0x3c:\n          case 0x3d:\n          case 0x3e:\n          case 0x5b:\n          case 0x5e:\n          case 0x60:\n          case 0x7c:\n            goto switchD_001048a8_caseD_21;\n          case 0x23:\n          case 0x7e:\n            goto LAB_00105011;\n          case 0x25:\n          case 0x2b:\n          case 0x2c:\n          case 0x2d:\n          case 0x2e:\n          case 0x2f:\n          case 0x30:\n          case 0x31:\n          case 0x32:\n          case 0x33:\n          case 0x34:\n          case 0x35:\n          case 0x36:\n          case 0x37:\n          case 0x38:\n          case 0x39:\n          case 0x3a:\n          case 0x41:\n          case 0x42:\n          case 0x43:\n          case 0x44:\n          case 0x45:\n          case 0x46:\n          case 0x47:\n          case 0x48:\n          case 0x49:\n          case 0x4a:\n          case 0x4b:\n          case 0x4c:\n          case 0x4d:\n          case 0x4e:\n          case 0x4f:\n          case 0x50:\n          case 0x51:\n          case 0x52:\n          case 0x53:\n          case 0x54:\n          case 0x55:\n          case 0x56:\n          case 0x57:\n          case 0x58:\n          case 0x59:\n          case 0x5a:\n          case 0x5d:\n          case 0x5f:\n          case 0x61:\n          case 0x62:\n          case 99:\n          case 100:\n          case 0x65:\n          case 0x66:\n          case 0x67:\n          case 0x68:\n          case 0x69:\n          case 0x6a:\n          case 0x6b:\n          case 0x6c:\n          case 0x6d:\n          case 0x6e:\n          case 0x6f:\n          case 0x70:\n          case 0x71:\n          case 0x72:\n          case 0x73:\n          case 0x74:\n          case 0x75:\n          case 0x76:\n          case 0x77:\n          case 0x78:\n          case 0x79:\n          case 0x7a:\n            goto LAB_001048b8;\n          case 0x27:\n            goto switchD_00104eb0_caseD_27;\n          case 0x3f:\n            goto switchD_00104eb0_caseD_3f;\n          case 0x5c:\n            goto switchD_001048a8_caseD_5c;\n          case 0x7b:\n          case 0x7d:\n            goto switchD_00104eb0_caseD_7b;\n          }\n        }\n        goto LAB_00104c7e;\n      }\nLAB_00104fe0:\n      uVar15 = (ulong)*__s1;\n      switch(uVar15) {\n      case 0:\nswitchD_00105000_caseD_0:\n        if (!bVar20) {\n          bVar5 = false;\nswitchD_001048a8_caseD_0:\n          bVar24 = param_5 == 2;\n          bVar3 = (bool)((bVar2 ^ 1U) & bVar24);\n          if (bVar3) {\n            if (uVar18 < param_2) {\n              param_1[uVar18] = 0x27;\n            }\n            if (uVar18 + 1 < param_2) {\n              param_1[uVar18 + 1] = 0x24;\n            }\n            if (uVar18 + 2 < param_2) {\n              param_1[uVar18 + 2] = 0x27;\n            }\n            uVar15 = uVar18 + 3;\n            bVar2 = bVar3;\n            if (param_2 <= uVar18 + 3) {\n              bVar14 = 0x30;\n              uVar18 = uVar18 + 4;\n              bVar22 = bVar3;\n              bVar21 = false;\n              goto joined_r0x0010499b;\n            }\nLAB_0010543b:\n            param_1[uVar15] = 0x5c;\n            uVar18 = uVar15;\n          }\n          else {\n            uVar15 = uVar18;\n            if (uVar18 < param_2) goto LAB_0010543b;\n          }\n          uVar19 = uVar18 + 1;\n          bVar22 = bVar21;\n          if (param_5 != 2) {\n            uVar15 = 0x30;\n            if ((uVar13 + 1 < param_4) && ((byte)(param_3[uVar13 + 1] - 0x30U) < 10)) {\n              if (uVar19 < param_2) {\n                param_1[uVar19] = 0x30;\n              }\n              if (uVar18 + 2 < param_2) {\n                param_1[uVar18 + 2] = 0x30;\n              }\n              uVar19 = uVar18 + 3;\n              uVar15 = 0x30;\n            }\n            goto LAB_00105478;\n          }\n          bVar14 = 0x30;\n          uVar18 = uVar19;\n          bVar3 = bVar2;\n          bVar21 = false;\n          goto joined_r0x0010499b;\n        }\n        bVar24 = param_5 == 2;\n        goto LAB_00104c70;\n      default:\n        bVar23 = false;\n        goto switchD_00104eb0_caseD_1;\n      case 7:\nswitchD_00105000_caseD_7:\n        bVar14 = 0x61;\n        break;\n      case 8:\nswitchD_00105000_caseD_8:\n        bVar14 = 0x62;\n        break;\n      case 9:\n        bVar23 = false;\nswitchD_001048a8_caseD_9:\n        uVar15 = 9;\n        bVar14 = 0x74;\n        goto LAB_00104d80;\n      case 10:\nswitchD_00105000_caseD_a:\n        bVar14 = 0x6e;\n        goto LAB_00104dc0;\n      case 0xb:\nswitchD_00105000_caseD_b:\n        bVar14 = 0x76;\n        goto LAB_00104dc0;\n      case 0xc:\nswitchD_00105000_caseD_c:\n        bVar14 = 0x66;\n        break;\n      case 0xd:\nswitchD_00105000_caseD_d:\n        bVar14 = 0x72;\n        goto LAB_00104dc0;\n      case 0x20:\n        bVar5 = false;\nLAB_00105029:\n        uVar15 = 0x20;\n        goto LAB_001048b8;\n      case 0x21:\n      case 0x22:\n      case 0x24:\n      case 0x26:\n      case 0x28:\n      case 0x29:\n      case 0x2a:\n      case 0x3b:\n      case 0x3c:\n      case 0x3d:\n      case 0x3e:\n      case 0x5b:\n      case 0x5e:\n      case 0x60:\n      case 0x7c:\n        bVar5 = false;\nswitchD_001048a8_caseD_21:\n        bVar22 = false;\n        goto LAB_00104975;\n      case 0x23:\n      case 0x7e:\n        bVar5 = false;\nLAB_00105011:\n        if (uVar13 == 0) {\n          bVar22 = false;\n          goto LAB_00104978;\n        }\n        bVar23 = false;\n        bVar22 = false;\n        goto LAB_001048c0;\n      case 0x25:\n      case 0x2b:\n      case 0x2c:\n      case 0x2d:\n      case 0x2e:\n      case 0x2f:\n      case 0x30:\n      case 0x31:\n      case 0x32:\n      case 0x33:\n      case 0x34:\n      case 0x35:\n      case 0x36:\n      case 0x37:\n      case 0x38:\n      case 0x39:\n      case 0x3a:\n      case 0x41:\n      case 0x42:\n      case 0x43:\n      case 0x44:\n      case 0x45:\n      case 0x46:\n      case 0x47:\n      case 0x48:\n      case 0x49:\n      case 0x4a:\n      case 0x4b:\n      case 0x4c:\n      case 0x4d:\n      case 0x4e:\n      case 0x4f:\n      case 0x50:\n      case 0x51:\n      case 0x52:\n      case 0x53:\n      case 0x54:\n      case 0x55:\n      case 0x56:\n      case 0x57:\n      case 0x58:\n      case 0x59:\n      case 0x5a:\n      case 0x5d:\n      case 0x5f:\n      case 0x61:\n      case 0x62:\n      case 99:\n      case 100:\n      case 0x65:\n      case 0x66:\n      case 0x67:\n      case 0x68:\n      case 0x69:\n      case 0x6a:\n      case 0x6b:\n      case 0x6c:\n      case 0x6d:\n      case 0x6e:\n      case 0x6f:\n      case 0x70:\n      case 0x71:\n      case 0x72:\n      case 0x73:\n      case 0x74:\n      case 0x75:\n      case 0x76:\n      case 0x77:\n      case 0x78:\n      case 0x79:\n      case 0x7a:\n        bVar5 = false;\nLAB_001048b8:\n        bVar22 = false;\n        goto LAB_001048c0;\n      case 0x27:\n        bVar5 = false;\n        goto switchD_00104eb0_caseD_27;\n      case 0x3f:\n        bVar5 = false;\n        goto switchD_00104eb0_caseD_3f;\n      case 0x5c:\n        bVar23 = false;\nswitchD_001048a8_caseD_5c:\n        if (((bool)(bVar1 & bVar20)) && (local_c8 != 0)) goto LAB_00104ee8;\n        uVar15 = 0x5c;\n        bVar14 = 0x5c;\n        goto LAB_00104d80;\n      case 0x7b:\n      case 0x7d:\n        bVar5 = false;\n        goto switchD_00104eb0_caseD_7b;\n      }\n      if (bVar20) goto LAB_00104de0;\n      bVar21 = false;\n      goto LAB_00104936;\n    }\n    if ((uVar18 == 0) && ((bool)(bVar20 & param_5 == 2))) {\nLAB_00104c67:\n      param_5 = 2;\nLAB_00104c70:\n      if (bVar24) {\n        param_5 = 4;\n      }\nLAB_00104c7e:\n      uVar13 = FUN_00104650(param_1,param_2,param_3,param_4,param_5,param_6 & 0xfffffffd,0,local_70,\n                            local_78);\n      goto LAB_00104cb8;\n    }\n    bVar21 = (bool)(param_5 == 2 & (bVar20 ^ 1U));\n    bVar20 = (bool)(bVar20 ^ 1U);\n    if ((!bVar21) || (bVar20 = bVar21, !bVar4)) {\nLAB_00105705:\n      uVar13 = uVar18;\n      if (((local_98 != (char *)0x0) && (bVar20)) && (cVar11 = *local_98, cVar11 != '\\0')) {\n        do {\n          if (uVar13 < param_2) {\n            param_1[uVar13] = cVar11;\n          }\n          uVar13 = uVar13 + 1;\n          cVar11 = local_98[uVar13 - uVar18];\n        } while (cVar11 != '\\0');\n      }\n      if (uVar13 < param_2) {\n        param_1[uVar13] = 0;\n      }\nLAB_00104cb8:\n      if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n        return uVar13;\n      }\n                    /* WARNING: Subroutine does not return */\n      __stack_chk_fail();\n    }\n    if (bVar6) {\n      uVar13 = FUN_00104650(param_1,local_90,param_3,param_4,5,param_6,param_7,local_70,local_78);\n      goto LAB_00104cb8;\n    }\n    local_64 = param_2 == 0 && local_90 != 0;\n    uVar13 = local_90;\n    bVar20 = bVar4;\n    if (param_2 != 0 || local_90 == 0) goto LAB_00105705;\nLAB_00105096:\n    *param_1 = 0x27;\n    param_2 = local_90;\n    local_90 = uVar13;\nLAB_00104af9:\n    bVar20 = false;\n    uVar18 = 1;\n    param_5 = 2;\n    local_c8 = 1;\n    local_98 = \"\\'\";\n  } while( true );\ncode_r0x00104f9b:\n  uVar13 = uVar13 + 1;\n  goto LAB_001047a0;\nswitchD_001055fe_caseD_21:\n  if (!bVar20) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x3f;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x22;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x22;\n    }\n    if (uVar18 + 3 < param_2) {\n      param_1[uVar18 + 3] = 0x3f;\n    }\n    uVar19 = uVar18 + 4;\n    bVar24 = false;\n    bVar22 = false;\nLAB_00105478:\n    bVar14 = (byte)uVar15;\n    bVar23 = false;\n    bVar21 = false;\n    uVar13 = uVar17;\n    uVar18 = uVar19;\n    bVar3 = bVar2;\n    if ((bool)(bVar1 ^ 1U | bVar24)) goto joined_r0x0010499b;\n    goto LAB_001048c0;\n  }\n  goto LAB_00104c7e;\njoined_r0x0010569a:\n  while ((uVar19 < param_4 && (param_3[uVar19] != '\\0'))) {\n    uVar17 = uVar17 + 1;\n    uVar19 = uVar13 + uVar17;\n  }\n  bVar21 = false;\nLAB_00105288:\n  if (1 < uVar17) {\nLAB_00105292:\n    bVar24 = false;\n    uVar17 = uVar17 + uVar13;\n    uVar19 = uVar13;\n    do {\n      bVar14 = (byte)uVar15;\n      if (bVar22) {\n        bVar24 = param_5 == 2;\n        if (bVar20) goto LAB_00104c70;\n        bVar24 = (bool)(bVar24 & (bVar3 ^ 1U));\n        if (bVar24) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x24;\n          }\n          if (uVar18 + 2 < param_2) {\n            param_1[uVar18 + 2] = 0x27;\n          }\n          uVar18 = uVar18 + 3;\n          bVar3 = bVar24;\n        }\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x5c;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = (char)(uVar15 >> 6) + '0';\n        }\n        if (uVar18 + 2 < param_2) {\n          param_1[uVar18 + 2] = ((byte)(uVar15 >> 3) & 7) + 0x30;\n        }\n        uVar13 = uVar19 + 1;\n        uVar18 = uVar18 + 3;\n        bVar14 = (bVar14 & 7) + 0x30;\n        bVar24 = bVar22;\n        if (uVar17 <= uVar13) goto LAB_00104948;\n      }\n      else {\n        bVar2 = (bool)((bVar24 ^ 1U) & bVar3);\n        if (bVar23) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x5c;\n          }\n          uVar18 = uVar18 + 1;\n        }\n        uVar13 = uVar19 + 1;\n        if (uVar17 <= uVar13) goto LAB_00104f00;\n        if (bVar2) {\n          if (uVar18 < param_2) {\n            param_1[uVar18] = 0x27;\n          }\n          if (uVar18 + 1 < param_2) {\n            param_1[uVar18 + 1] = 0x27;\n          }\n          uVar18 = uVar18 + 2;\n          bVar23 = false;\n          bVar3 = false;\n        }\n        else {\n          bVar23 = false;\n        }\n      }\n      uVar19 = uVar19 + 1;\n      if (uVar18 < param_2) {\n        param_1[uVar18] = bVar14;\n      }\n      uVar15 = (ulong)(byte)param_3[uVar19];\n      uVar18 = uVar18 + 1;\n    } while( true );\n  }\nLAB_00104a11:\n  bVar5 = bVar23;\n  if (bVar22) {\n    bVar21 = false;\n    bVar22 = bVar1;\n    goto LAB_00105292;\n  }\nswitchD_00104eb0_caseD_25:\n  bVar22 = param_5 == 2;\n  bVar23 = bVar21;\nLAB_00104978:\n  bVar14 = (byte)uVar15;\n  bVar22 = (bool)(bVar22 | bVar1 ^ 1U);\n  if ((!bVar22) || (bVar22 = false, bVar21 = bVar23, bVar20)) {\nLAB_001048c0:\n    bVar14 = (byte)uVar15;\n    uVar17 = uVar13;\n    bVar3 = bVar2;\n    bVar21 = bVar23;\n    if ((param_7 == 0) || ((*(uint *)(param_7 + (uVar15 >> 5) * 4) >> (bVar14 & 0x1f) & 1) == 0))\n    goto joined_r0x0010499b;\n  }\n  else {\nLAB_00104998:\n    uVar17 = uVar13;\n    bVar22 = false;\njoined_r0x0010499b:\n    uVar13 = uVar17;\n    bVar2 = bVar3;\n    if (!bVar5) {\n      uVar13 = uVar17 + 1;\n      bVar2 = (bool)((bVar22 ^ 1U) & bVar3);\nLAB_00104f00:\n      if (bVar2) {\n        if (uVar18 < param_2) {\n          param_1[uVar18] = 0x27;\n        }\n        if (uVar18 + 1 < param_2) {\n          param_1[uVar18 + 1] = 0x27;\n        }\n        uVar18 = uVar18 + 2;\n        bVar3 = false;\n      }\n      goto LAB_00104948;\n    }\n  }\njoined_r0x00104dd1:\n  if (bVar20) {\nLAB_00104de0:\n    bVar24 = (bool)(bVar1 & param_5 == 2);\n    goto LAB_00104c70;\n  }\n  bVar24 = (bool)((bVar2 ^ 1U) & param_5 == 2);\n  if (bVar24) {\n    if (uVar18 < param_2) {\n      param_1[uVar18] = 0x27;\n    }\n    if (uVar18 + 1 < param_2) {\n      param_1[uVar18 + 1] = 0x24;\n    }\n    if (uVar18 + 2 < param_2) {\n      param_1[uVar18 + 2] = 0x27;\n    }\n    uVar18 = uVar18 + 3;\n    bVar2 = bVar24;\n  }\nLAB_00104936:\n  if (uVar18 < param_2) {\n    param_1[uVar18] = 0x5c;\n  }\n  uVar18 = uVar18 + 1;\n  uVar13 = uVar13 + 1;\n  bVar3 = bVar2;\nLAB_00104948:\n  bVar2 = bVar3;\n  if (uVar18 < param_2) {\n    param_1[uVar18] = bVar14;\n  }\n  uVar18 = uVar18 + 1;\n  if (!bVar21) {\n    bVar6 = false;\n  }\n  goto LAB_001047a0;\n}\n\n", 
    "00105fb0": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105fb0(undefined4 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined8 param_5)\n\n{\n  long in_FS_OFFSET;\n  undefined8 local_68;\n  undefined8 uStack_60;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  local_68 = _DAT_0010e3c0;\n  uStack_60 = uRam000000000010e3c8;\n  local_38 = DAT_0010e3f0;\n  local_58 = _DAT_0010e3d0;\n  uStack_50 = uRam000000000010e3d8;\n  local_48 = _DAT_0010e3e0;\n  uStack_40 = uRam000000000010e3e8;\n  FUN_00105a90(&local_68);\n  FUN_00105810(param_1,param_4,param_5,&local_68);\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102590": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_memcmp_0010bed8)();\n  return iVar1;\n}\n\n", 
    "00103ef0": "\nbool FUN_00103ef0(long param_1,long param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = FUN_00106d70(param_1 + 9,param_2 + 9);\n  return iVar1 == 0;\n}\n\n", 
    "00102470": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fcntl_0010be48)();\n  return iVar1;\n}\n\n", 
    "00107000": "\nint FUN_00107000(FILE *param_1)\n\n{\n  int iVar1;\n  int iVar2;\n  int *piVar3;\n  __off_t _Var4;\n  \n  iVar1 = fileno(param_1);\n  if (-1 < iVar1) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      iVar1 = fileno(param_1);\n      _Var4 = lseek(iVar1,0,1);\n      if (_Var4 == -1) goto LAB_0010706f;\n    }\n    iVar1 = FUN_00107220(param_1);\n    if (iVar1 != 0) {\n      piVar3 = __errno_location();\n      iVar1 = *piVar3;\n      iVar2 = fclose(param_1);\n      if (iVar1 != 0) {\n        *piVar3 = iVar1;\n        iVar2 = -1;\n      }\n      return iVar2;\n    }\n  }\nLAB_0010706f:\n  iVar1 = fclose(param_1);\n  return iVar1;\n}\n\n", 
    "00106150": "\nvoid FUN_00106150(char *param_1)\n\n{\n  int iVar1;\n  \n  iVar1 = mkstemp(param_1);\n  FUN_00106190(iVar1);\n  return;\n}\n\n", 
    "00104090": "\nundefined8\nFUN_00104090(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 5);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104000(param_1,param_2,(int)param_4,(int)param_5,(int)param_6);\n  return uVar3;\n}\n\n", 
    "00105f00": "\nvoid FUN_00105f00(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105e40(param_1,param_2,0x3a);\n  return;\n}\n\n", 
    "0010f050": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fcntl(int __fd,int __cmd,...)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001068d0": "\nvoid FUN_001068d0(undefined8 param_1,ulong param_2,ulong param_3)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_2) * ZEXT816(param_3),0)) &&\n     (SUB168(ZEXT816(param_2) * ZEXT816(param_3) >> 0x40,0) == 0)) {\n    FUN_00106890();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106a50();\n}\n\n", 
    "001023f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n  (*(code *)PTR_free_0010be08)();\n  return;\n}\n\n", 
    "0010f170": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __printf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a30": "\nvoid FUN_00106a30(char *param_1)\n\n{\n  size_t sVar1;\n  \n  sVar1 = strlen(param_1);\n  FUN_00106a00(param_1,sVar1 + 1);\n  return;\n}\n\n", 
    "0010f058": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001061f0": "\nundefined8\nFUN_001061f0(FILE *param_1,long param_2,undefined8 param_3,undefined8 param_4,undefined8 *param_5,\n            undefined8 param_6)\n\n{\n  undefined8 uVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  undefined8 uVar4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  undefined8 local_60;\n  undefined8 local_58;\n  undefined8 local_50;\n  undefined8 local_48;\n  \n  if (param_2 == 0) {\n    __fprintf_chk(param_1,1,\"%s %s\\n\",param_3,param_4);\n  }\n  else {\n    __fprintf_chk(param_1,1,\"%s (%s) %s\\n\",param_2,param_3,param_4);\n  }\n  uVar1 = dcgettext(0,&DAT_00108cdb,5);\n  __fprintf_chk(param_1,1,\"Copyright %s %d Free Software Foundation, Inc.\",uVar1,0x7e2);\n  pcVar2 = (char *)dcgettext(0,\n                             \"\\nLicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\\nThis is free software: you are free to change and redistribute it.\\nThere is NO WARRANTY, to the extent permitted by law.\\n\\n\"\n                             ,5);\n  fputs_unlocked(pcVar2,param_1);\n  switch(param_6) {\n  case 0:\n                    /* WARNING: Subroutine does not return */\n    abort();\n  case 1:\n    uVar1 = *param_5;\n    uVar4 = dcgettext(0,\"Written by %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar4,uVar1);\n    return uVar1;\n  case 2:\n    uVar1 = param_5[1];\n    uVar4 = *param_5;\n    uVar5 = dcgettext(0,\"Written by %s and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 3:\n    uVar1 = param_5[2];\n    uVar4 = param_5[1];\n    uVar5 = *param_5;\n    uVar6 = dcgettext(0,\"Written by %s, %s, and %s.\\n\",5);\n    uVar1 = __fprintf_chk(param_1,1,uVar6,uVar5,uVar4,uVar1);\n    return uVar1;\n  case 4:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_001064b9;\n  case 5:\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, and %s.\\n\",5);\nLAB_001064b9:\n    __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4);\n    return uVar1;\n  case 6:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, and %s.\\n\",5);\n    goto LAB_0010655b;\n  case 7:\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, and %s.\\n\",5);\nLAB_0010655b:\n    uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58);\n    return uVar1;\n  case 8:\n    local_48 = param_5[7];\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    uVar3 = dcgettext(0,\"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\nand %s.\\n\",5);\n    goto LAB_0010630d;\n  case 9:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, and %s.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n    break;\n  default:\n    local_48 = param_5[7];\n    pcVar2 = \"Written by %s, %s, %s,\\n%s, %s, %s, %s,\\n%s, %s, and others.\\n\";\n    local_50 = param_5[6];\n    local_58 = param_5[5];\n    local_60 = param_5[4];\n    uVar1 = param_5[3];\n    uVar4 = param_5[2];\n    uVar5 = param_5[1];\n    uVar6 = *param_5;\n  }\n  uVar3 = dcgettext(0,pcVar2,5);\nLAB_0010630d:\n  uVar1 = __fprintf_chk(param_1,1,uVar3,uVar6,uVar5,uVar4,uVar1,local_60,local_58,local_50,local_48)\n  ;\n  return uVar1;\n}\n\n", 
    "00106c70": "\nbool FUN_00106c70(int param_1)\n\n{\n  return param_1 - 0x20U < 0x5f;\n}\n\n", 
    "001072e0": "\nvoid FUN_001072e0(undefined8 param_1)\n\n{\n  __cxa_atexit(param_1,0,PTR_LOOP_0010c008);\n  return;\n}\n\n", 
    "001060d0": "\nvoid FUN_001060d0(undefined8 param_1)\n\n{\n  FUN_001060c0(0,param_1);\n  return;\n}\n\n", 
    "0010f178": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * mempcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00104520": "\nchar * FUN_00104520(char *param_1,int param_2)\n\n{\n  int iVar1;\n  char *pcVar2;\n  undefined8 uVar3;\n  \n  pcVar2 = (char *)dcgettext(0,param_1,5);\n  if (param_1 == pcVar2) {\n    uVar3 = FUN_00106fa0();\n    iVar1 = FUN_00104470(uVar3,\"UTF-8\",0x55,0x54,0x46,0x2d,0x38,0,0);\n    if (iVar1 == 0) {\n      iVar1 = FUN_00104470(uVar3,\"GB18030\",0x47,0x42,0x31,0x38,0x30,0x33,0x30);\n      if (iVar1 == 0) {\n        pcVar2 = \"\\\"\";\n        if (param_2 != 9) {\n          pcVar2 = \"\\'\";\n        }\n        return pcVar2;\n      }\n      if (*pcVar2 == '`') {\n        pcVar2 = &DAT_00108599;\n      }\n      else {\n        pcVar2 = &DAT_00108596;\n      }\n    }\n    else if (*pcVar2 == '`') {\n      pcVar2 = &DAT_0010859d;\n    }\n    else {\n      pcVar2 = &DAT_00108592;\n    }\n  }\n  return pcVar2;\n}\n\n", 
    "00102580": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n  ssize_t sVar1;\n  \n  sVar1 = (*(code *)PTR_read_0010bed0)();\n  return sVar1;\n}\n\n", 
    "00102460": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_isatty_0010be40)();\n  return iVar1;\n}\n\n", 
    "00106bf0": "\nbool FUN_00106bf0(uint param_1)\n\n{\n  return param_1 < 0x80;\n}\n\n", 
    "001067a0": "\nvoid FUN_001067a0(void)\n\n{\n  FILE *__stream;\n  undefined8 uVar1;\n  char *__s;\n  \n  uVar1 = dcgettext(0,\"\\nReport bugs to: %s\\n\",5);\n  __printf_chk(1,uVar1,\"bug-coreutils@gnu.org\");\n  uVar1 = dcgettext(0,\"%s home page: <%s>\\n\",5);\n  __printf_chk(1,uVar1,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"General help using GNU software: <https://www.gnu.org/gethelp/>\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102c20": "\nvoid FUN_00102c20(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\"\\nWith no FILE, or when FILE is -, read standard input.\\n\",5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "0010f180": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memmove(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_getenv_0010be00)();\n  return pcVar1;\n}\n\n", 
    "0010f060": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid textdomain(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001060c0": "\nvoid FUN_001060c0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001060a0(param_1,param_2,0xffffffffffffffff);\n  return;\n}\n\n", 
    "00106c60": "\nbool FUN_00106c60(int param_1)\n\n{\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "001072d0": "\nvoid FUN_001072d0(void)\n\n{\n  return;\n}\n\n", 
    "0010f188": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid error(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f068": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0e0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __libc_start_main(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106fa0": "\nchar * FUN_00106fa0(void)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = nl_langinfo(0xe);\n  if (pcVar1 != (char *)0x0) {\n    if (*pcVar1 == '\\0') {\n      pcVar1 = \"ASCII\";\n    }\n    return pcVar1;\n  }\n  return \"ASCII\";\n}\n\n", 
    "00106850": "\nvoid FUN_00106850(ulong param_1,ulong param_2)\n\n{\n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    FUN_00106830();\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106a50();\n}\n\n", 
    "00102490": "\nvoid textdomain(void)\n\n{\n  (*(code *)PTR_textdomain_0010be58)();\n  return;\n}\n\n", 
    "0010f0e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint memcmp(void *__s1,void *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106050": "\nvoid FUN_00106050(void)\n\n{\n  FUN_00105fb0();\n  return;\n}\n\n", 
    "00107260": "\nvoid FUN_00107260(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long lVar1;\n  \n  __DT_INIT();\n  lVar1 = 0;\n  do {\n    (*(code *)(&__DT_INIT_ARRAY)[lVar1])(param_1,param_2,param_3);\n    lVar1 = lVar1 + 1;\n  } while (lVar1 != 1);\n  return;\n}\n\n", 
    "00106170": "\nvoid FUN_00106170(char *param_1,int param_2)\n\n{\n  int iVar1;\n  \n  iVar1 = mkostemp(param_1,param_2);\n  FUN_00106ed0(iVar1,param_2);\n  return;\n}\n\n", 
    "00102b30": "\nvoid FUN_00102b30(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 unaff_retaddr;\n  undefined auStack_8 [8];\n  \n  (*(code *)PTR___libc_start_main_0010bfd8)\n            (FUN_001027a0,unaff_retaddr,&stack0x00000008,FUN_00107260,FUN_001072d0,param_3,auStack_8\n            );\n  do {\n                    /* WARNING: Do nothing block with infinite loop */\n  } while( true );\n}\n\n", 
    "0010f150": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f030": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_deregisterTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103c20": "\nvoid FUN_00103c20(undefined param_1)\n\n{\n  DAT_0010e298 = param_1;\n  return;\n}\n\n", 
    "00102c50": "\nvoid FUN_00102c50(void)\n\n{\n  char *__s;\n  FILE *__stream;\n  \n  __stream = stdout;\n  __s = (char *)dcgettext(0,\n                          \"\\nMandatory arguments to long options are mandatory for short options too.\\n\"\n                          ,5);\n  fputs_unlocked(__s,__stream);\n  return;\n}\n\n", 
    "00102d70": "\nundefined8 FUN_00102d70(int param_1,undefined8 param_2,ulong param_3)\n\n{\n  size_t __n;\n  ulong uVar1;\n  char cVar2;\n  bool bVar3;\n  ulong uVar4;\n  long lVar5;\n  char *__s1;\n  ulong uVar6;\n  char *pcVar7;\n  __off_t _Var8;\n  undefined8 uVar9;\n  undefined8 uVar10;\n  int *piVar11;\n  int iVar12;\n  long lVar13;\n  char *pcVar14;\n  int __range;\n  char *__s2;\n  char *local_58;\n  \n  lVar13 = DAT_0010e278;\n  uVar6 = DAT_0010e268;\n  __n = DAT_0010e278 - 1;\n  cVar2 = *DAT_0010e290;\n  __s2 = DAT_0010e290 + 1;\n  if (param_3 % DAT_0010e268 != 0) {\n    param_3 = param_3 - param_3 % DAT_0010e268;\n    _Var8 = lseek(param_1,param_3,0);\n    if (_Var8 < 0) {\n      uVar9 = FUN_00105f10(0,3,param_2);\n      uVar10 = dcgettext(0,\"%s: seek failed\",5);\n      piVar11 = __errno_location();\n      error(0,*piVar11,uVar10,uVar9);\n      uVar6 = DAT_0010e268;\n    }\n  }\n  while (uVar4 = FUN_001060e0(param_1,DAT_0010e270,uVar6), uVar6 = DAT_0010e268, uVar4 == 0) {\n    if (param_3 == 0) {\n      if (DAT_0010e268 != 0) goto LAB_00102e6e;\n      goto LAB_00103102;\n    }\n    _Var8 = lseek(param_1,-DAT_0010e268,1);\n    if (_Var8 < 0) {\n      uVar9 = FUN_00105f10(0,3,param_2);\n      uVar10 = dcgettext(0,\"%s: seek failed\",5);\n      piVar11 = __errno_location();\n      error(0,*piVar11,uVar10,uVar9);\n      uVar6 = DAT_0010e268;\n    }\n    param_3 = param_3 - uVar6;\n  }\n  uVar1 = uVar4;\n  if (uVar4 == DAT_0010e268) {\nLAB_00103102:\n    do {\n      uVar4 = FUN_001060e0(param_1,DAT_0010e270,uVar6);\n      uVar1 = uVar6;\n      if (uVar4 == 0) goto LAB_00102e64;\n      if (uVar4 == 0xffffffffffffffff) goto LAB_001031d9;\n      param_3 = param_3 + uVar4;\n      uVar6 = uVar4;\n    } while (DAT_0010e268 == uVar4);\n  }\n  else {\nLAB_00102e64:\n    uVar4 = uVar1;\n    if (uVar4 == 0xffffffffffffffff) {\nLAB_001031d9:\n      uVar9 = FUN_00105f10(0,3,param_2);\n      uVar10 = dcgettext(0,\"%s: read error\",5);\n      piVar11 = __errno_location();\n      error(0,*piVar11,uVar10,uVar9);\n      return 0;\n    }\n  }\nLAB_00102e6e:\n  bVar3 = true;\n  local_58 = DAT_0010e270 + uVar4;\n  pcVar14 = DAT_0010e270;\n  __s1 = local_58 + (1 - lVar13);\n  if (DAT_0010e280 == 0) {\n    __s1 = local_58;\n  }\n  do {\n    pcVar7 = __s1;\n    if (DAT_0010e280 != 0) goto LAB_00103053;\nLAB_00102ea9:\n    do {\n      iVar12 = (int)__s1 - (int)pcVar14;\n      __range = 1 - iVar12;\n      if (1 < __range) {\n        uVar9 = dcgettext(0,\"record too large\",5);\n        error(1,0,uVar9);\ncode_r0x00102424:\n        uVar9 = dcgettext(0,\"error in regular expression search\",5);\n        error(1,0,uVar9);\n        uVar9 = (*(code *)PTR_unlink_0010be20)();\n        return uVar9;\n      }\n      if ((__range == 1) ||\n         (iVar12 = re_search((re_pattern_buffer *)&DAT_0010e220,pcVar14,iVar12,iVar12 + -1,__range,\n                             (re_registers *)&DAT_0010e100), pcVar14 = DAT_0010e270, iVar12 == -1))\n      {\n        pcVar7 = pcVar14 + -1;\n      }\n      else {\n        if (iVar12 == -2) goto code_r0x00102424;\n        pcVar7 = DAT_0010e270 + *DAT_0010e108;\n        DAT_0010e278 = (long)(*DAT_0010e110 - *DAT_0010e108);\n      }\nLAB_00102f1d:\n      uVar6 = param_3;\n      __s1 = pcVar7;\n      if (pcVar7 < pcVar14) {\n        do {\n          if (uVar6 == 0) {\n            FUN_00102c80(pcVar14,local_58);\n            return 1;\n          }\n          uVar4 = (long)local_58 - (long)pcVar14;\n          if (DAT_0010e268 < uVar4) {\n            uVar1 = DAT_0010e280 + 2 + DAT_0010e268 * 4;\n            lVar13 = 1;\n            if (DAT_0010e280 != 0) {\n              lVar13 = DAT_0010e280;\n            }\n            if (uVar1 < DAT_0010e260) {\n              DAT_0010e260 = uVar1;\n              DAT_0010e268 = DAT_0010e268 * 2;\n                    /* WARNING: Subroutine does not return */\n              FUN_00106a50();\n            }\n            DAT_0010e260 = uVar1;\n            DAT_0010e268 = DAT_0010e268 * 2;\n            lVar5 = FUN_00106890((long)pcVar14 - lVar13);\n            DAT_0010e270 = (char *)(lVar5 + lVar13);\n          }\n          if (uVar6 < DAT_0010e268) {\n            param_3 = 0;\n            DAT_0010e268 = uVar6;\n          }\n          else {\n            param_3 = uVar6 - DAT_0010e268;\n          }\n          _Var8 = lseek(param_1,param_3,0);\n          if (_Var8 < 0) {\n            uVar9 = FUN_00105f10(0,3,param_2);\n            uVar10 = dcgettext(0,\"%s: seek failed\",5);\n            piVar11 = __errno_location();\n            error(0,*piVar11,uVar10,uVar9);\n          }\n          pcVar14 = DAT_0010e270;\n          uVar6 = DAT_0010e268;\n          __s1 = (char *)memmove(DAT_0010e270 + DAT_0010e268,DAT_0010e270,uVar4);\n          local_58 = pcVar14 + uVar4 + uVar6;\n          if (DAT_0010e280 == 0) {\n            __s1 = local_58;\n          }\n          uVar6 = FUN_001060e0(param_1,pcVar14,uVar6);\n          if (uVar6 != DAT_0010e268) goto LAB_001031d9;\n          pcVar14 = DAT_0010e270;\n          if (DAT_0010e280 == 0) goto LAB_00102ea9;\n          pcVar7 = __s1 + -1;\n          if (__s1[-1] == cVar2) goto LAB_0010305d;\nLAB_00103053:\n          do {\n            do {\n              __s1 = pcVar7;\n              pcVar7 = __s1 + -1;\n            } while (__s1[-1] != cVar2);\nLAB_0010305d:\n            if (__n == 0) goto LAB_00102f1d;\n            iVar12 = strncmp(__s1,__s2,__n);\n          } while (iVar12 != 0);\n          uVar6 = param_3;\n          __s1 = pcVar7;\n        } while (pcVar7 < pcVar14);\n      }\n      if (DAT_0010e288 == '\\0') {\n        FUN_00102c80(__s1,local_58);\n        pcVar14 = DAT_0010e270;\n        pcVar7 = __s1;\n      }\n      else {\n        pcVar7 = __s1 + DAT_0010e278;\n        bVar3 = (bool)(bVar3 ^ 1U | local_58 != pcVar7);\n        if (bVar3) {\n          FUN_00102c80(pcVar7,local_58);\n          bVar3 = false;\n          pcVar14 = DAT_0010e270;\n        }\n      }\n      local_58 = pcVar7;\n    } while (DAT_0010e280 == 0);\n    __s1 = __s1 + (1 - DAT_0010e278);\n  } while( true );\n}\n\n", 
    "0010f158": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a50": "\nvoid FUN_00106a50(void)\n\n{\n  undefined8 uVar1;\n  \n  uVar1 = dcgettext(0,\"memory exhausted\",5);\n  error(DAT_0010c018,0,\"%s\",uVar1);\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f038": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102000": "\nvoid __DT_INIT(void)\n\n{\n  if (PTR___gmon_start___0010bfe0 != (undefined *)0x0) {\n    (*(code *)PTR___gmon_start___0010bfe0)();\n  }\n  return;\n}\n\n", 
    "00103330": "\nundefined8 FUN_00103330(FILE **param_1,char **param_2)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  int *piVar4;\n  char *pcVar5;\n  FILE *pFVar6;\n  \n  pFVar6 = DAT_0010e0e8;\n  if (DAT_0010e0f0 == (char *)0x0) {\n    pcVar5 = getenv(\"TMPDIR\");\n    if (pcVar5 == (char *)0x0) {\n      pcVar5 = \"/tmp\";\n    }\n    DAT_0010e0f0 = (char *)FUN_00103ce0(pcVar5,\"tacXXXXXX\",0);\n    iVar1 = FUN_00106150(DAT_0010e0f0);\n    if (iVar1 < 0) {\n      uVar2 = FUN_00105e10(4,pcVar5);\n      uVar3 = dcgettext(0,\"failed to create temporary file in %s\",5);\n      piVar4 = __errno_location();\n      error(0,*piVar4,uVar3,uVar2);\n      pcVar5 = DAT_0010e0f0;\n    }\n    else {\n      pFVar6 = fdopen(iVar1,\"w+\");\n      pcVar5 = DAT_0010e0f0;\n      DAT_0010e0e8 = pFVar6;\n      if (pFVar6 != (FILE *)0x0) {\n        unlink(DAT_0010e0f0);\n        goto LAB_00103395;\n      }\n      uVar2 = FUN_00105e10(4,DAT_0010e0f0);\n      uVar3 = dcgettext(0,\"failed to open %s for writing\",5);\n      piVar4 = __errno_location();\n      error(0,*piVar4,uVar3,uVar2);\n      close(iVar1);\n      pcVar5 = DAT_0010e0f0;\n      unlink(DAT_0010e0f0);\n    }\n    free(pcVar5);\n    uVar2 = 0;\n    DAT_0010e0f0 = (char *)0x0;\n  }\n  else {\n    clearerr_unlocked(DAT_0010e0e8);\n    iVar1 = FUN_00106a90(pFVar6,0,0);\n    pFVar6 = DAT_0010e0e8;\n    if (iVar1 < 0) {\nLAB_001033b0:\n      uVar2 = FUN_00105e10(4,DAT_0010e0f0);\n      uVar3 = dcgettext(0,\"failed to rewind stream for %s\",5);\n      piVar4 = __errno_location();\n      error(0,*piVar4,uVar3,uVar2);\n      return 0;\n    }\n    iVar1 = fileno(DAT_0010e0e8);\n    iVar1 = ftruncate(iVar1,0);\n    pcVar5 = DAT_0010e0f0;\n    if (iVar1 < 0) goto LAB_001033b0;\nLAB_00103395:\n    *param_1 = pFVar6;\n    uVar2 = 1;\n    *param_2 = pcVar5;\n  }\n  return uVar2;\n}\n\n", 
    "00103de0": "\nvoid FUN_00103de0(char *param_1)\n\n{\n  char *pcVar1;\n  long lVar2;\n  ulong uVar3;\n  byte *pbVar4;\n  byte *pbVar5;\n  bool bVar6;\n  bool bVar7;\n  byte bVar8;\n  \n  bVar8 = 0;\n  if (param_1 == (char *)0x0) {\n    fwrite(\"A NULL argv[0] was passed through an exec system call.\\n\",1,0x37,stderr);\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  pcVar1 = strrchr(param_1,0x2f);\n  if (pcVar1 != (char *)0x0) {\n    DAT_0010e2a8 = pcVar1 + 1;\n    uVar3 = (long)DAT_0010e2a8 - (long)param_1;\n    bVar6 = uVar3 < 6;\n    bVar7 = uVar3 == 6;\n    if (6 < (long)uVar3) {\n      lVar2 = 7;\n      pbVar4 = (byte *)(pcVar1 + -6);\n      pbVar5 = (byte *)\"/.libs/\";\n      do {\n        if (lVar2 == 0) break;\n        lVar2 = lVar2 + -1;\n        bVar6 = *pbVar4 < *pbVar5;\n        bVar7 = *pbVar4 == *pbVar5;\n        pbVar4 = pbVar4 + (ulong)bVar8 * -2 + 1;\n        pbVar5 = pbVar5 + (ulong)bVar8 * -2 + 1;\n      } while (bVar7);\n      if ((!bVar6 && !bVar7) == bVar6) {\n        if (((pcVar1[1] != 'l') || (pcVar1[2] != 't')) || (pcVar1[3] != '-')) {\n          program_invocation_name = DAT_0010e2a8;\n          return;\n        }\n        param_1 = pcVar1 + 4;\n        program_invocation_short_name = param_1;\n      }\n    }\n  }\n  DAT_0010e2a8 = param_1;\n  program_invocation_name = param_1;\n  return;\n}\n\n", 
    "00102480": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid clearerr_unlocked(FILE *__stream)\n\n{\n  (*(code *)PTR_clearerr_unlocked_0010be50)();\n  return;\n}\n\n", 
    "00102bd0": "\nvoid FUN_00102bd0(void)\n\n{\n  if (DAT_0010c0c8 == '\\0') {\n    if (PTR___cxa_finalize_0010bff0 != (undefined *)0x0) {\n      __cxa_finalize(PTR_LOOP_0010c008);\n    }\n    FUN_00102b60();\n    DAT_0010c0c8 = 1;\n    return;\n  }\n  return;\n}\n\n", 
    "0010f0f0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0f8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105f10": "\nvoid FUN_00105f10(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  undefined8 *puVar1;\n  long in_FS_OFFSET;\n  undefined8 local_98;\n  undefined8 uStack_90;\n  undefined8 local_88;\n  undefined8 uStack_80;\n  undefined8 local_78;\n  undefined8 uStack_70;\n  undefined8 local_68;\n  undefined8 local_58;\n  undefined8 uStack_50;\n  undefined8 local_48;\n  undefined8 uStack_40;\n  undefined8 local_38;\n  undefined8 uStack_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103ea0(&local_98);\n  puVar1 = &local_58;\n  local_58 = local_98;\n  uStack_50 = uStack_90;\n  local_48 = local_88;\n  uStack_40 = uStack_80;\n  local_38 = local_78;\n  uStack_30 = uStack_70;\n  local_28 = local_68;\n  FUN_00105a30(puVar1,0x3a,1);\n  FUN_00105810(param_1,param_3,0xffffffffffffffff,puVar1);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00103c10": "\nvoid FUN_00103c10(undefined8 param_1)\n\n{\n  DAT_0010e2a0 = param_1;\n  return;\n}\n\n", 
    "0010f160": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f040": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fpending(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f70": "\nundefined8 FUN_00103f70(long param_1,undefined8 param_2,byte param_3,char param_4)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 7);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103f10(param_1,param_2,(int)param_4);\n  return uVar3;\n}\n\n", 
    "001072f4": "\nvoid __DT_FINI(void)\n\n{\n  return;\n}\n\n", 
    "0010f168": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f048": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint isatty(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a70": "\nundefined4 FUN_00105a70(undefined *param_1,undefined4 param_2)\n\n{\n  undefined4 uVar1;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010e3c0;\n  }\n  uVar1 = *(undefined4 *)(param_1 + 4);\n  *(undefined4 *)(param_1 + 4) = param_2;\n  return uVar1;\n}\n\n", 
    "001060e0": "\nssize_t FUN_001060e0(int param_1,void *param_2,ulong param_3)\n\n{\n  ssize_t sVar1;\n  int *piVar2;\n  \n  while( true ) {\n    do {\n      sVar1 = read(param_1,param_2,param_3);\n      if (-1 < sVar1) {\n        return sVar1;\n      }\n      piVar2 = __errno_location();\n    } while (*piVar2 == 4);\n    if (param_3 < 0x7ff00001) break;\n    if (*piVar2 != 0x16) {\n      return sVar1;\n    }\n    param_3 = 0x7ff00000;\n  }\n  return sVar1;\n}\n\n", 
    "00106c80": "\nulong FUN_00106c80(int param_1)\n\n{\n  ulong in_RAX;\n  \n  if (0x60 < param_1) {\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x7bU < 4);\n  }\n  if (param_1 < 0x5b) {\n    if (param_1 < 0x30) {\n      return in_RAX & 0xffffffffffffff00 | (ulong)(0x20 < param_1);\n    }\n    return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x3aU < 7);\n  }\n  return 1;\n}\n\n", 
    "00102670": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nFILE * fdopen(int __fd,char *__modes)\n\n{\n  FILE *pFVar1;\n  \n  pFVar1 = (FILE *)(*(code *)PTR_fdopen_0010bf48)();\n  return pFVar1;\n}\n\n", 
    "00102550": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n  __off_t _Var1;\n  \n  _Var1 = (*(code *)PTR_lseek_0010beb8)();\n  return _Var1;\n}\n\n", 
    "0010f1e0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102430": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_strncmp_0010be28)();\n  return iVar1;\n}\n\n", 
    "0010f0c0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\n__off_t lseek(int __fd,__off_t __offset,int __whence)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102794": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid switchD_00106298::caseD_0(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f018": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00107200": "\nvoid FUN_00107200(uint *param_1)\n\n{\n  if ((*param_1 & 0x100) == 0) {\n    return;\n  }\n  FUN_00106a90(param_1,0,1);\n  return;\n}\n\n", 
    "00105ad0": "\nvoid FUN_00105ad0(undefined8 param_1,undefined8 param_2,undefined8 param_3,undefined8 param_4,\n                 undefined4 *param_5)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  if (param_5 == (undefined4 *)0x0) {\n    param_5 = (undefined4 *)&DAT_0010e3c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  FUN_00104650(param_1,param_2,param_3,param_4,*param_5,param_5[1],param_5 + 2,\n               *(undefined8 *)(param_5 + 10),*(undefined8 *)(param_5 + 0xc));\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "0010f1e8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025f0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_malloc_0010bf08)();\n  return pvVar1;\n}\n\n", 
    "001024d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t __ctype_get_mb_cur_max(void)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR___ctype_get_mb_cur_max_0010be78)();\n  return sVar1;\n}\n\n", 
    "0010f130": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106b10": "\nsize_t FUN_00106b10(wchar_t *param_1,byte *param_2,size_t param_3,mbstate_t *param_4)\n\n{\n  char cVar1;\n  size_t sVar2;\n  long in_FS_OFFSET;\n  wchar_t local_34;\n  long local_30;\n  \n  local_30 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_1 == (wchar_t *)0x0) {\n    param_1 = &local_34;\n  }\n  sVar2 = mbrtowc(param_1,(char *)param_2,param_3,param_4);\n  if ((0xfffffffffffffffd < sVar2) && (param_3 != 0)) {\n    cVar1 = FUN_00106f50(0);\n    if (cVar1 == '\\0') {\n      sVar2 = 1;\n      *param_1 = (uint)*param_2;\n    }\n  }\n  if (local_30 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return sVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106d50": "\nint FUN_00106d50(int param_1)\n\n{\n  if (param_1 - 0x61U < 0x1a) {\n    param_1 = param_1 + -0x20;\n  }\n  return param_1;\n}\n\n", 
    "0010f138": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkstemp(char *__template)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106900": "\nvoid FUN_00106900(long param_1,ulong *param_2,ulong param_3)\n\n{\n  undefined auVar1 [16];\n  ulong uVar2;\n  ulong uVar3;\n  \n  uVar3 = *param_2;\n  if (param_1 == 0) {\n    if (uVar3 == 0) {\n      uVar3 = (ulong)(0x80 < param_3) +\n              SUB168((ZEXT816(0) << 0x40 | ZEXT816(0x80)) / ZEXT816(param_3),0);\n    }\n    uVar2 = (ulong)(SUB168(ZEXT816(uVar3) * ZEXT816(param_3) >> 0x40,0) != 0);\n    if ((SUB168(ZEXT816(uVar3) * ZEXT816(param_3),0) < 0) || (uVar2 != 0)) goto LAB_0010695b;\n  }\n  else {\n    auVar1 = ZEXT816(0) << 0x40 | ZEXT816(0x5555555555555554);\n    uVar2 = SUB168(auVar1 % ZEXT816(param_3),0);\n    if (SUB168(auVar1 / ZEXT816(param_3),0) <= uVar3) {\nLAB_0010695b:\n                    /* WARNING: Subroutine does not return */\n      FUN_00106a50(param_1,uVar3,uVar2);\n    }\n    uVar3 = (uVar3 >> 1) + 1 + uVar3;\n  }\n  *param_2 = uVar3;\n  FUN_00106890(param_1,uVar3 * param_3);\n  return;\n}\n\n", 
    "0010f010": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102785": "\nvoid switchD_001046ef::caseD_b(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00103ea0": "\nint * FUN_00103ea0(int *param_1,int param_2)\n\n{\n  if (param_2 != 10) {\n    *param_1 = param_2;\n    param_1[1] = 0;\n    *(undefined8 *)(param_1 + 2) = 0;\n    *(undefined8 *)(param_1 + 4) = 0;\n    *(undefined8 *)(param_1 + 6) = 0;\n    *(undefined8 *)(param_1 + 8) = 0;\n    *(undefined8 *)(param_1 + 10) = 0;\n    *(undefined8 *)(param_1 + 0xc) = 0;\n    return param_1;\n  }\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "00105810": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nundefined * FUN_00105810(int param_1,undefined8 param_2,undefined8 param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  uint uVar2;\n  undefined4 uVar3;\n  ulong uVar4;\n  undefined4 uVar5;\n  undefined4 uVar6;\n  int *piVar7;\n  undefined4 *puVar8;\n  ulong uVar9;\n  undefined *__ptr;\n  ulong *puVar10;\n  \n  piVar7 = __errno_location();\n  iVar1 = *piVar7;\n  if (param_1 < 0) {\n                    /* WARNING: Subroutine does not return */\n    abort();\n  }\n  puVar8 = (undefined4 *)PTR_DAT_0010c060;\n  if (DAT_0010c058 <= param_1) {\n    if (param_1 == 0x7fffffff) {\n                    /* WARNING: Subroutine does not return */\n      FUN_00106a50();\n    }\n    if (PTR_DAT_0010c060 == &DAT_0010c070) {\n      puVar8 = (undefined4 *)FUN_00106890(0);\n      uVar6 = PTR_DAT_0010c078._4_4_;\n      uVar5 = PTR_DAT_0010c078._0_4_;\n      uVar3 = _UNK_0010c074;\n      PTR_DAT_0010c060 = (undefined *)puVar8;\n      *puVar8 = _DAT_0010c070;\n      puVar8[1] = uVar3;\n      puVar8[2] = uVar5;\n      puVar8[3] = uVar6;\n    }\n    else {\n      puVar8 = (undefined4 *)FUN_00106890(PTR_DAT_0010c060);\n      PTR_DAT_0010c060 = (undefined *)puVar8;\n    }\n    memset(puVar8 + (long)DAT_0010c058 * 4,0,(long)((param_1 + 1) - DAT_0010c058) << 4);\n    DAT_0010c058 = param_1 + 1;\n  }\n  uVar2 = param_4[1];\n  puVar10 = (ulong *)(puVar8 + (long)param_1 * 4);\n  uVar4 = *puVar10;\n  __ptr = (undefined *)puVar10[1];\n  uVar9 = FUN_00104650(__ptr,uVar4,param_2,param_3,*param_4,uVar2 | 1,param_4 + 2,\n                       *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  if (uVar4 <= uVar9) {\n    uVar9 = uVar9 + 1;\n    *puVar10 = uVar9;\n    if (__ptr != &DAT_0010e2c0) {\n      free(__ptr);\n    }\n    __ptr = (undefined *)thunk_FUN_00106830(uVar9);\n    uVar3 = *param_4;\n    puVar10[1] = (ulong)__ptr;\n    FUN_00104650(__ptr,uVar9,param_2,param_3,uVar3,uVar2 | 1,param_4 + 2,\n                 *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  }\n  *piVar7 = iVar1;\n  return __ptr;\n}\n\n", 
    "00102780": "\nvoid FUN_00102780(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "0010f1f0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_finalize(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102660": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * realloc(void *__ptr,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_realloc_0010bf40)();\n  return pvVar1;\n}\n\n", 
    "0010f0d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102540": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkostemp(char *__template,int __flags)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkostemp_0010beb0)();\n  return iVar1;\n}\n\n", 
    "00102420": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_unlink_0010be20)();\n  return iVar1;\n}\n\n", 
    "00106cd0": "\nbool FUN_00106cd0(int param_1)\n\n{\n  if (param_1 < 0xe) {\n    return 8 < param_1;\n  }\n  return param_1 == 0x20;\n}\n\n", 
    "0010f0d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nssize_t read(int __fd,void *__buf,size_t __nbytes)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00103f10": "\nundefined8 FUN_00103f10(long param_1,undefined8 param_2,byte param_3)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 8);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103ef0(param_1,param_2);\n  return uVar3;\n}\n\n", 
    "001069a0": "\nvoid FUN_001069a0(size_t param_1)\n\n{\n  void *__s;\n  \n  __s = (void *)FUN_00106830();\n  memset(__s,0,param_1);\n  return;\n}\n\n", 
    "001025e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fileno_0010bf00)();\n  return iVar1;\n}\n\n", 
    "001024c0": "\nvoid dcgettext(void)\n\n{\n  (*(code *)PTR_dcgettext_0010be70)();\n  return;\n}\n\n", 
    "0010f140": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_search(re_pattern_buffer *__buffer,char *__string,int __length,int __start,int __range,\n             re_registers *__regs)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f020": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint unlink(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00105a10": "\nvoid FUN_00105a10(undefined4 *param_1,undefined4 param_2)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010e3c0;\n  }\n  *param_1 = param_2;\n  return;\n}\n\n", 
    "00106c20": "\nulong FUN_00106c20(uint param_1)\n\n{\n  ulong in_RAX;\n  \n  if ((int)param_1 < 0x20) {\n    return (ulong)(~param_1 >> 0x1f);\n  }\n  return in_RAX & 0xffffffffffffff00 | (ulong)(param_1 == 0x7f);\n}\n\n", 
    "00105c50": "\n/* WARNING: Globals starting with '_' overlap smaller symbols at the same address */\n\nvoid FUN_00105c50(void)\n\n{\n  void **ppvVar1;\n  void *__ptr;\n  undefined *__ptr_00;\n  void **ppvVar2;\n  \n  __ptr_00 = PTR_DAT_0010c060;\n  if (1 < DAT_0010c058) {\n    ppvVar2 = (void **)(PTR_DAT_0010c060 + 0x18);\n    ppvVar1 = (void **)(PTR_DAT_0010c060 + (ulong)(DAT_0010c058 - 2) * 0x10 + 0x28);\n    do {\n      __ptr = *ppvVar2;\n      ppvVar2 = ppvVar2 + 2;\n      free(__ptr);\n    } while (ppvVar2 != ppvVar1);\n  }\n  if (*(undefined **)(__ptr_00 + 8) != &DAT_0010e2c0) {\n    free(*(undefined **)(__ptr_00 + 8));\n    PTR_DAT_0010c078 = &DAT_0010e2c0;\n    _DAT_0010c070 = 0x100;\n  }\n  if (__ptr_00 != &DAT_0010c070) {\n    free(__ptr_00);\n    PTR_DAT_0010c060 = &DAT_0010c070;\n  }\n  DAT_0010c058 = 1;\n  return;\n}\n\n", 
    "0010f148": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __freading(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f028": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint strncmp(char *__s1,char *__s2,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102410": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint * __errno_location(void)\n\n{\n  int *piVar1;\n  \n  piVar1 = (int *)(*(code *)PTR___errno_location_0010be18)();\n  return piVar1;\n}\n\n", 
    "00102450": "\nvoid __fpending(void)\n\n{\n  (*(code *)PTR___fpending_0010be38)();\n  return;\n}\n\n", 
    "00103540": "\nlong FUN_00103540(FILE **param_1,undefined8 *param_2,undefined4 param_3,undefined8 param_4)\n\n{\n  char cVar1;\n  int iVar2;\n  size_t sVar3;\n  size_t __n;\n  undefined8 uVar4;\n  int *piVar5;\n  long lVar6;\n  undefined8 uVar7;\n  char *pcVar8;\n  long in_FS_OFFSET;\n  FILE *local_50;\n  undefined8 local_48;\n  long local_40;\n  \n  local_40 = *(long *)(in_FS_OFFSET + 0x28);\n  cVar1 = FUN_00103330(&local_50,&local_48);\n  if (cVar1 == '\\0') {\n    lVar6 = -1;\n  }\n  else {\n    lVar6 = 0;\n    while( true ) {\n      __n = FUN_001060e0(param_3,DAT_0010e270,DAT_0010e268);\n      if (__n == 0) break;\n      if (__n == 0xffffffffffffffff) {\n        uVar7 = FUN_00105f10(0,3,param_4);\n        pcVar8 = \"%s: read error\";\n        goto LAB_0010363e;\n      }\n      sVar3 = fwrite_unlocked(DAT_0010e270,1,__n,local_50);\n      if (sVar3 != __n) goto LAB_00103670;\n      lVar6 = lVar6 + sVar3;\n    }\n    iVar2 = fflush_unlocked(local_50);\n    if (iVar2 == 0) {\n      *param_1 = local_50;\n      *param_2 = local_48;\n    }\n    else {\nLAB_00103670:\n      uVar7 = FUN_00105f10(0,3,local_48);\n      pcVar8 = \"%s: write error\";\nLAB_0010363e:\n      uVar4 = dcgettext(0,pcVar8,5);\n      piVar5 = __errno_location();\n      error(0,*piVar5,uVar4,uVar7);\n      lVar6 = -1;\n    }\n  }\n  if (local_40 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return lVar6;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "0010f1c0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid _ITM_registerTMCloneTable(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f118": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fileno(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102690": "\nvoid __printf_chk(void)\n\n{\n  (*(code *)PTR___printf_chk_0010bf58)();\n  return;\n}\n\n", 
    "00102570": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint close(int __fd)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_close_0010bec8)();\n  return iVar1;\n}\n\n", 
    "00107220": "\nvoid FUN_00107220(FILE *param_1)\n\n{\n  int iVar1;\n  \n  if (param_1 != (FILE *)0x0) {\n    iVar1 = __freading();\n    if (iVar1 != 0) {\n      FUN_00107200(param_1);\n      fflush(param_1);\n      return;\n    }\n  }\n  fflush(param_1);\n  return;\n}\n\n", 
    "0010f1c8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * re_compile_pattern(char *__pattern,size_t __length,re_pattern_buffer *__buffer)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0a0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001023d0": "\nvoid __cxa_finalize(void)\n\n{\n  (*(code *)PTR___cxa_finalize_0010bff0)();\n  return;\n}\n\n", 
    "00102c10": "\nvoid thunk_FUN_00102b90(void)\n\n{\n  FUN_00102b90();\n  return;\n}\n\n", 
    "0010f1b8": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __fprintf_chk(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001024f0": "\nvoid __stack_chk_fail(void)\n\n{\n  (*(code *)PTR___stack_chk_fail_0010be88)();\n  return;\n}\n\n", 
    "00106c50": "\nbool FUN_00106c50(int param_1)\n\n{\n  return param_1 - 0x21U < 0x5e;\n}\n\n", 
    "001060b0": "\nvoid FUN_001060b0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_001060a0(0,param_1,param_2);\n  return;\n}\n\n", 
    "00106d70": "\nint FUN_00106d70(undefined *param_1,undefined *param_2)\n\n{\n  byte bVar1;\n  byte bVar2;\n  int iVar3;\n  \n  iVar3 = 0;\n  if (param_1 != param_2) {\n    do {\n      bVar1 = FUN_00106d30(*param_1);\n      bVar2 = FUN_00106d30(*param_2);\n      if (bVar1 == 0) break;\n      param_1 = param_1 + 1;\n      param_2 = param_2 + 1;\n    } while (bVar1 == bVar2);\n    iVar3 = (uint)bVar1 - (uint)bVar2;\n  }\n  return iVar3;\n}\n\n", 
    "0010f110": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102560": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memset(void *__s,int __c,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memset_0010bec0)();\n  return pvVar1;\n}\n\n", 
    "00102440": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid _exit(int __status)\n\n{\n  (*(code *)PTR__exit_0010be30)();\n  return;\n}\n\n", 
    "0010f1d0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush_unlocked(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f128": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush(FILE *__stream)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f008": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid free(void *__ptr)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102680": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * setlocale(int __category,char *__locale)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_setlocale_0010bf50)();\n  return pcVar1;\n}\n\n", 
    "00106bd0": "\nbool FUN_00106bd0(int param_1)\n\n{\n  if (param_1 < 0x5b) {\n    return 0x40 < param_1;\n  }\n  return param_1 - 0x61U < 0x1a;\n}\n\n", 
    "00106cf0": "\nbool FUN_00106cf0(int param_1)\n\n{\n  return param_1 - 0x41U < 0x1a;\n}\n\n", 
    "0010f1d8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f0b8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkostemp(char *__template,int __flags)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010278f": "\nvoid FUN_0010278f(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001024e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t strlen(char *__s)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_strlen_0010be80)();\n  return sVar1;\n}\n\n", 
    "0010278a": "\nvoid FUN_0010278a(void)\n\n{\n                    /* WARNING: Subroutine does not return */\n  abort();\n}\n\n", 
    "001069c0": "\nvoid FUN_001069c0(size_t param_1,ulong param_2)\n\n{\n  void *pvVar1;\n  \n  if ((-1 < SUB168(ZEXT816(param_1) * ZEXT816(param_2),0)) &&\n     (SUB168(ZEXT816(param_1) * ZEXT816(param_2) >> 0x40,0) == 0)) {\n    pvVar1 = calloc(param_1,param_2);\n    if (pvVar1 != (void *)0x0) {\n      return;\n    }\n  }\n                    /* WARNING: Subroutine does not return */\n  FUN_00106a50();\n}\n\n", 
    "001059f0": "\nundefined4 FUN_001059f0(undefined4 *param_1)\n\n{\n  if (param_1 == (undefined4 *)0x0) {\n    param_1 = (undefined4 *)&DAT_0010e3c0;\n  }\n  return *param_1;\n}\n\n", 
    "0010f0a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106a00": "\nvoid FUN_00106a00(void *param_1,size_t param_2)\n\n{\n  void *__dest;\n  \n  __dest = (void *)FUN_00106830(param_2);\n  memcpy(__dest,param_1,param_2);\n  return;\n}\n\n", 
    "00105a30": "\nuint FUN_00105a30(undefined *param_1,byte param_2,uint param_3)\n\n{\n  uint uVar1;\n  uint uVar2;\n  \n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010e3c0;\n  }\n  uVar1 = *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8);\n  uVar2 = uVar1 >> (param_2 & 0x1f);\n  *(uint *)(param_1 + (ulong)(param_2 >> 5) * 4 + 8) =\n       ((param_3 ^ uVar2) & 1) << (param_2 & 0x1f) ^ uVar1;\n  return uVar2 & 1;\n}\n\n", 
    "001060a0": "\nvoid FUN_001060a0(void)\n\n{\n  FUN_00105810();\n  return;\n}\n\n", 
    "00106c40": "\nbool FUN_00106c40(int param_1)\n\n{\n  return param_1 - 0x30U < 10;\n}\n\n", 
    "00105b50": "\nundefined8 FUN_00105b50(undefined8 param_1,undefined8 param_2,long *param_3,undefined4 *param_4)\n\n{\n  int iVar1;\n  int *piVar2;\n  long lVar3;\n  undefined8 uVar4;\n  uint uVar5;\n  \n  if (param_4 == (undefined4 *)0x0) {\n    param_4 = (undefined4 *)&DAT_0010e3c0;\n  }\n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  uVar5 = (uint)(param_3 == (long *)0x0) | param_4[1];\n  lVar3 = FUN_00104650(0,0,param_1,param_2,*param_4,uVar5,param_4 + 2,*(undefined8 *)(param_4 + 10),\n                       *(undefined8 *)(param_4 + 0xc));\n  uVar4 = thunk_FUN_00106830(lVar3 + 1);\n  FUN_00104650(uVar4,lVar3 + 1,param_1,param_2,*param_4,uVar5,param_4 + 2,\n               *(undefined8 *)(param_4 + 10),*(undefined8 *)(param_4 + 0xc));\n  *piVar2 = iVar1;\n  if (param_3 != (long *)0x0) {\n    *param_3 = lVar3;\n  }\n  return uVar4;\n}\n\n", 
    "0010f120": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * malloc(size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "0010f000": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * getenv(char *__name)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102750": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mbsinit(mbstate_t *__ps)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mbsinit_0010bfb8)();\n  return iVar1;\n}\n\n", 
    "00103af0": "\nvoid FUN_00103af0(int param_1)\n\n{\n  FILE *pFVar1;\n  undefined8 uVar2;\n  undefined8 uVar3;\n  char *pcVar4;\n  \n  uVar2 = DAT_0010e2a8;\n  if (param_1 == 0) {\n    uVar3 = dcgettext(0,\"Usage: %s [OPTION]... [FILE]...\\n\",5);\n    __printf_chk(1,uVar3,uVar2);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"Write each FILE to standard output, last line first.\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00102c20();\n    FUN_00102c50();\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\n                               \"  -b, --before             attach the separator before instead of after\\n  -r, --regex              interpret the separator as a regular expression\\n  -s, --separator=STRING   use STRING as the separator instead of newline\\n\"\n                               ,5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --help     display this help and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    pFVar1 = stdout;\n    pcVar4 = (char *)dcgettext(0,\"      --version  output version information and exit\\n\",5);\n    fputs_unlocked(pcVar4,pFVar1);\n    FUN_00103850();\n  }\n  else {\n    uVar3 = dcgettext(0,\"Try \\'%s --help\\' for more information.\\n\",5);\n    __fprintf_chk(stderr,1,uVar3,uVar2);\n  }\n                    /* WARNING: Subroutine does not return */\n  exit(param_1);\n}\n\n", 
    "001025b0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ferror_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ferror_unlocked_0010bee8)();\n  return iVar1;\n}\n\n", 
    "0010f1a0": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __cxa_atexit(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001026d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint open(char *__file,int __oflag,...)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_open_0010bf78)();\n  return iVar1;\n}\n\n", 
    "00105d40": "\nvoid FUN_00105d40(undefined4 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  long in_FS_OFFSET;\n  undefined auStack_58 [56];\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  FUN_00103ea0(auStack_58);\n  FUN_00105810(param_1,param_3,0xffffffffffffffff,auStack_58);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00106f50": "\nbool FUN_00106f50(int param_1)\n\n{\n  byte *pbVar1;\n  long lVar2;\n  byte *pbVar3;\n  bool bVar4;\n  bool bVar5;\n  byte bVar6;\n  \n  bVar6 = 0;\n  pbVar1 = (byte *)setlocale(param_1,(char *)0x0);\n  bVar4 = true;\n  if (pbVar1 != (byte *)0x0) {\n    bVar4 = *pbVar1 < 0x43;\n    bVar5 = *pbVar1 == 0x43;\n    if (bVar5) {\n      bVar4 = false;\n      bVar5 = pbVar1[1] == 0;\n      if (bVar5) {\n        return false;\n      }\n    }\n    lVar2 = 6;\n    pbVar3 = (byte *)\"POSIX\";\n    do {\n      if (lVar2 == 0) break;\n      lVar2 = lVar2 + -1;\n      bVar4 = *pbVar1 < *pbVar3;\n      bVar5 = *pbVar1 == *pbVar3;\n      pbVar1 = pbVar1 + (ulong)bVar6 * -2 + 1;\n      pbVar3 = pbVar3 + (ulong)bVar6 * -2 + 1;\n    } while (bVar5);\n    bVar4 = (!bVar4 && !bVar5) != bVar4;\n  }\n  return bVar4;\n}\n\n", 
    "00102b90": "\n/* WARNING: Removing unreachable block (ram,0x00102bb4) */\n/* WARNING: Removing unreachable block (ram,0x00102bc0) */\n\nvoid FUN_00102b90(void)\n\n{\n  return;\n}\n\n", 
    "00102740": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fflush_unlocked(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fflush_unlocked_0010bfb0)();\n  return iVar1;\n}\n\n", 
    "00102620": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint mkstemp(char *__template)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_mkstemp_0010bf20)();\n  return iVar1;\n}\n\n", 
    "00102500": "\nvoid getopt_long(void)\n\n{\n  (*(code *)PTR_getopt_long_0010be90)();\n  return;\n}\n\n", 
    "00106ed0": "\nuint FUN_00106ed0(uint param_1)\n\n{\n  int iVar1;\n  uint uVar2;\n  int *piVar3;\n  \n  if (2 < param_1) {\n    return param_1;\n  }\n  uVar2 = FUN_00106f30();\n  piVar3 = __errno_location();\n  iVar1 = *piVar3;\n  close(param_1);\n  *piVar3 = iVar1;\n  return uVar2;\n}\n\n", 
    "00104000": "\nundefined8 FUN_00104000(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 6);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00103f70(param_1,param_2,(int)param_4,(int)param_5);\n  return uVar3;\n}\n\n", 
    "0010f108": "\n/* WARNING: Control flow encountered bad instruction data */\n\nvoid __gmon_start__(void)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00106660": "\nvoid FUN_00106660(void)\n\n{\n  uint uVar1;\n  long *plVar2;\n  long lVar3;\n  uint *in_R8;\n  long lVar4;\n  long in_FS_OFFSET;\n  long local_68 [11];\n  long local_10;\n  \n  lVar4 = 0;\n  local_10 = *(long *)(in_FS_OFFSET + 0x28);\n  do {\n    uVar1 = *in_R8;\n    if (uVar1 < 0x30) {\n      *in_R8 = uVar1 + 8;\n      lVar3 = *(long *)((ulong)uVar1 + *(long *)(in_R8 + 4));\n      local_68[lVar4] = lVar3;\n    }\n    else {\n      plVar2 = *(long **)(in_R8 + 2);\n      *(long **)(in_R8 + 2) = plVar2 + 1;\n      lVar3 = *plVar2;\n      local_68[lVar4] = lVar3;\n    }\n  } while ((lVar3 != 0) && (lVar4 = lVar4 + 1, lVar4 != 10));\n  FUN_001061f0();\n  if (local_10 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001026c0": "\nvoid error(void)\n\n{\n  (*(code *)PTR_error_0010bf70)();\n  return;\n}\n\n", 
    "0010f1b0": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite(void *__ptr,size_t __size,size_t __n,FILE *__s)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "001025a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fputs_unlocked(char *__s,FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fputs_unlocked_0010bee0)();\n  return iVar1;\n}\n\n", 
    "00106d00": "\nulong FUN_00106d00(int param_1)\n\n{\n  ulong uVar1;\n  \n  if (param_1 - 0x30U < 0x37) {\n    uVar1 = 1L << ((byte)(param_1 - 0x30U) & 0x3f);\n    return uVar1 & 0xffffffffffffff00 | (ulong)((uVar1 & 0x7e0000007e03ff) != 0);\n  }\n  return 0;\n}\n\n", 
    "00105d30": "\nvoid FUN_00105d30(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105d10(0,param_1,param_2);\n  return;\n}\n\n", 
    "0010f1a8": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid exit(int __status)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102730": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * re_compile_pattern(char *__pattern,size_t __length,re_pattern_buffer *__buffer)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_re_compile_pattern_0010bfa8)();\n  return pcVar1;\n}\n\n", 
    "00102610": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * nl_langinfo(nl_item __item)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_nl_langinfo_0010bf18)();\n  return pcVar1;\n}\n\n", 
    "0010f100": "\n/* WARNING: Control flow encountered bad instruction data */\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n                    /* WARNING: Bad instruction - Truncating control flow here */\n  halt_baddata();\n}\n\n", 
    "00102770": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nushort ** __ctype_b_loc(void)\n\n{\n  ushort **ppuVar1;\n  \n  ppuVar1 = (ushort **)(*(code *)PTR___ctype_b_loc_0010bfc8)();\n  return ppuVar1;\n}\n\n", 
    "00102650": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t fwrite_unlocked(void *__ptr,size_t __size,size_t __n,FILE *__stream)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_fwrite_unlocked_0010bf38)();\n  return sVar1;\n}\n\n", 
    "00102530": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint ftruncate(int __fd,__off_t __length)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_ftruncate_0010bea8)();\n  return iVar1;\n}\n\n", 
    "00106ba0": "\nulong FUN_00106ba0(int param_1)\n\n{\n  ulong in_RAX;\n  ulong uVar1;\n  \n  if (param_1 < 0x5b) {\n    uVar1 = 1;\n    if (param_1 < 0x41) {\n      return (ulong)(param_1 - 0x30U < 10);\n    }\n  }\n  else {\n    uVar1 = in_RAX & 0xffffffffffffff00 | (ulong)(param_1 - 0x61U < 0x1a);\n  }\n  return uVar1;\n}\n\n", 
    "00105cf0": "\nvoid FUN_00105cf0(undefined8 param_1,undefined8 param_2)\n\n{\n  FUN_00105810(param_1,param_2,0xffffffffffffffff,&DAT_0010e3c0);\n  return;\n}\n\n", 
    "001026f0": "\nvoid __cxa_atexit(void)\n\n{\n  (*(code *)PTR___cxa_atexit_0010bf88)();\n  return;\n}\n\n", 
    "001025d0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * memcpy(void *__dest,void *__src,size_t __n)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_memcpy_0010bef8)();\n  return pvVar1;\n}\n\n", 
    "001024b0": "\nvoid bindtextdomain(void)\n\n{\n  (*(code *)PTR_bindtextdomain_0010be68)();\n  return;\n}\n\n", 
    "00106d30": "\nint FUN_00106d30(int param_1)\n\n{\n  if (param_1 - 0x41U < 0x1a) {\n    param_1 = param_1 + 0x20;\n  }\n  return param_1;\n}\n\n", 
    "00105c40": "\nvoid FUN_00105c40(undefined8 param_1,undefined8 param_2,undefined8 param_3)\n\n{\n  FUN_00105b50(param_1,param_2,0,param_3);\n  return;\n}\n\n", 
    "001041f0": "\nundefined8\nFUN_001041f0(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 3);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104140(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00102520": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nchar * strrchr(char *__s,int __c)\n\n{\n  char *pcVar1;\n  \n  pcVar1 = (char *)(*(code *)PTR_strrchr_0010bea0)();\n  return pcVar1;\n}\n\n", 
    "00102400": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid abort(void)\n\n{\n  (*(code *)PTR_abort_0010be10)();\n  return;\n}\n\n", 
    "00102760": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint iswprint(wint_t __wc)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_iswprint_0010bfc0)();\n  return iVar1;\n}\n\n", 
    "00103850": "\nvoid FUN_00103850(void)\n\n{\n  int iVar1;\n  undefined8 uVar2;\n  char *pcVar3;\n  long lVar4;\n  undefined **ppuVar5;\n  byte *pbVar6;\n  byte *pbVar7;\n  undefined1 *puVar8;\n  long in_FS_OFFSET;\n  bool bVar9;\n  bool bVar10;\n  undefined *local_98;\n  char *local_90;\n  char *local_88;\n  char *local_80 [5];\n  char *local_58;\n  char *local_50;\n  char *local_48;\n  char *local_40;\n  undefined8 local_38;\n  undefined8 local_30;\n  long local_20;\n  \n  pbVar7 = (byte *)0x1084b8;\n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  local_80[3] = \"sha256sum\";\n  local_98 = &DAT_0010843e;\n  local_90 = \"test invocation\";\n  local_80[0] = \"Multi-call invocation\";\n  local_80[1] = \"sha224sum\";\n  local_58 = \"sha384sum\";\n  local_48 = \"sha512sum\";\n  local_88 = \"coreutils\";\n  local_80[2] = \"sha2 utilities\";\n  local_80[4] = \"sha2 utilities\";\n  local_50 = \"sha2 utilities\";\n  local_40 = \"sha2 utilities\";\n  local_38 = 0;\n  local_30 = 0;\n  ppuVar5 = &local_98;\n  while( true ) {\n    bVar9 = false;\n    bVar10 = pbVar7 == (byte *)0x0;\n    if (bVar10) break;\n    lVar4 = 4;\n    pbVar6 = &DAT_0010843a;\n    do {\n      if (lVar4 == 0) break;\n      lVar4 = lVar4 + -1;\n      bVar9 = *pbVar6 < *pbVar7;\n      bVar10 = *pbVar6 == *pbVar7;\n      pbVar6 = pbVar6 + 1;\n      pbVar7 = pbVar7 + 1;\n    } while (bVar10);\n    if ((!bVar9 && !bVar10) == bVar9) break;\n    pbVar7 = *(byte **)((long)ppuVar5 + 0x20);\n    ppuVar5 = (undefined **)((long)ppuVar5 + 0x10);\n  }\n  puVar8 = *(undefined1 **)((long)ppuVar5 + 0x18);\n  if (puVar8 == (undefined1 *)0x0) {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\n        puVar8 = &DAT_0010843a;\n        goto LAB_00103a6e;\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    puVar8 = &DAT_0010843a;\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_0010843a);\n    pcVar3 = \" invocation\";\n  }\n  else {\n    uVar2 = dcgettext(0,\"\\n%s online help: <%s>\\n\",5);\n    __printf_chk(1,uVar2,\"GNU coreutils\",\"https://www.gnu.org/software/coreutils/\");\n    pcVar3 = setlocale(5,(char *)0x0);\n    if (pcVar3 != (char *)0x0) {\n      iVar1 = strncmp(pcVar3,\"en_\",3);\n      if (iVar1 != 0) {\nLAB_00103a6e:\n        uVar2 = dcgettext(0,\"Report %s translation bugs to <https://translationproject.org/team/>\\n\"\n                          ,5);\n        __printf_chk(1,uVar2,&DAT_0010843a);\n      }\n    }\n    uVar2 = dcgettext(0,\"Full documentation at: <%s%s>\\n\",5);\n    pcVar3 = \" invocation\";\n    __printf_chk(1,uVar2,\"https://www.gnu.org/software/coreutils/\",&DAT_0010843a);\n    if (puVar8 != &DAT_0010843a) {\n      pcVar3 = \"\";\n    }\n  }\n  uVar2 = dcgettext(0,\"or available locally via: info \\'(coreutils) %s%s\\'\\n\",5);\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    __printf_chk(1,uVar2,puVar8,pcVar3);\n    return;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "00102640": "\nvoid __freading(void)\n\n{\n  (*(code *)PTR___freading_0010bf30)();\n  return;\n}\n\n", 
    "00104140": "\nundefined8\nFUN_00104140(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 4);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_00104090(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "00106dd0": "\nulong FUN_00106dd0(FILE *param_1)\n\n{\n  int iVar1;\n  long lVar2;\n  ulong uVar3;\n  int *piVar4;\n  \n  lVar2 = __fpending();\n  iVar1 = ferror_unlocked(param_1);\n  uVar3 = FUN_00107000(param_1);\n  if (iVar1 == 0) {\n    if ((int)uVar3 == 0) {\n      return uVar3;\n    }\n    if (lVar2 == 0) {\n      piVar4 = __errno_location();\n      return (ulong)-(uint)(*piVar4 != 9);\n    }\n  }\n  else if ((int)uVar3 == 0) {\n    piVar4 = __errno_location();\n    *piVar4 = 0;\n    return 0xffffffff;\n  }\n  return 0xffffffff;\n}\n\n", 
    "00104380": "\nundefined8\nFUN_00104380(long param_1,undefined8 param_2,byte param_3,char param_4,char param_5,char param_6,\n            char param_7)\n\n{\n  char cVar1;\n  byte bVar2;\n  undefined8 uVar3;\n  \n  cVar1 = FUN_00106cf0((int)(char)param_3);\n  bVar2 = *(byte *)(param_1 + 1);\n  if (cVar1 != '\\0') {\n    bVar2 = bVar2 & 0xdf;\n  }\n  if (param_3 != bVar2) {\n    return 0;\n  }\n  if (param_3 == 0) {\n    return 1;\n  }\n  uVar3 = FUN_001042b0(param_1,param_2,(int)param_4,(int)param_5,(int)param_6,(int)param_7);\n  return uVar3;\n}\n\n", 
    "001024a0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fclose(FILE *__stream)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fclose_0010be60)();\n  return iVar1;\n}\n\n", 
    "001036b0": "\nundefined8 FUN_001036b0(undefined4 param_1,undefined8 param_2)\n\n{\n  int iVar1;\n  long lVar2;\n  undefined8 uVar3;\n  long in_FS_OFFSET;\n  FILE *local_30;\n  undefined8 local_28;\n  long local_20;\n  \n  local_20 = *(long *)(in_FS_OFFSET + 0x28);\n  lVar2 = FUN_00103540(&local_30,&local_28,param_1,param_2);\n  uVar3 = 0;\n  if (-1 < lVar2) {\n    iVar1 = fileno(local_30);\n    uVar3 = FUN_00102d70(iVar1,local_28,lVar2);\n  }\n  if (local_20 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return uVar3;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001059b0": "\nvoid FUN_001059b0(undefined *param_1)\n\n{\n  int iVar1;\n  int *piVar2;\n  \n  piVar2 = __errno_location();\n  iVar1 = *piVar2;\n  if (param_1 == (undefined *)0x0) {\n    param_1 = &DAT_0010e3c0;\n  }\n  FUN_00106a00(param_1,0x38);\n  *piVar2 = iVar1;\n  return;\n}\n\n", 
    "00107090": "\n/* WARNING: Restarted to delay deadcode elimination for space: stack */\n\nint FUN_00107090(ulong param_1,int param_2,ulong param_3)\n\n{\n  long lVar1;\n  int iVar2;\n  uint uVar3;\n  int iVar4;\n  int *piVar5;\n  int __fd;\n  long in_FS_OFFSET;\n  \n  lVar1 = *(long *)(in_FS_OFFSET + 0x28);\n  if (param_2 != 0x406) {\n    iVar2 = fcntl((int)param_1,param_2,param_3);\n    goto LAB_00107114;\n  }\n  if (DAT_0010e3f8 < 0) {\n    iVar2 = FUN_00107090(param_1,0,param_3 & 0xffffffff);\n    if ((iVar2 < 0) || (__fd = iVar2, DAT_0010e3f8 != -1)) goto LAB_00107114;\nLAB_00107151:\n    uVar3 = fcntl(__fd,1);\n    if (-1 < (int)uVar3) {\n      iVar4 = fcntl(__fd,2,(ulong)(uVar3 | 1));\n      iVar2 = __fd;\n      if (iVar4 != -1) goto LAB_00107114;\n    }\n    piVar5 = __errno_location();\n    iVar2 = -1;\n    iVar4 = *piVar5;\n    close(__fd);\n    *piVar5 = iVar4;\n  }\n  else {\n    iVar2 = fcntl((int)param_1,0x406);\n    if (iVar2 < 0) {\n      piVar5 = __errno_location();\n      if (*piVar5 == 0x16) {\n        iVar2 = FUN_00107090(param_1 & 0xffffffff,0,param_3 & 0xffffffff);\n        if (iVar2 < 0) goto LAB_00107114;\n        DAT_0010e3f8 = -1;\n        __fd = iVar2;\n        goto LAB_00107151;\n      }\n    }\n    DAT_0010e3f8 = 1;\n  }\nLAB_00107114:\n  if (lVar1 == *(long *)(in_FS_OFFSET + 0x28)) {\n    return iVar2;\n  }\n                    /* WARNING: Subroutine does not return */\n  __stack_chk_fail();\n}\n\n", 
    "001026e0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint fseeko(FILE *__stream,__off_t __off,int __whence)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_fseeko_0010bf80)();\n  return iVar1;\n}\n\n", 
    "001025c0": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nvoid * calloc(size_t __nmemb,size_t __size)\n\n{\n  void *pvVar1;\n  \n  pvVar1 = (void *)(*(code *)PTR_calloc_0010bef0)();\n  return pvVar1;\n}\n\n", 
    "00106c00": "\nuint FUN_00106c00(int param_1,undefined8 param_2,uint param_3)\n\n{\n  uint in_EAX;\n  \n  return in_EAX & 0xffffff00 | (uint)(param_1 == 0x20) | param_3 & 0xffffff00 | (uint)(param_1 == 9)\n  ;\n}\n\n", 
    "00106e40": "\nchar * FUN_00106e40(char *param_1)\n\n{\n  bool bVar1;\n  char *pcVar2;\n  char cVar3;\n  \n  cVar3 = *param_1;\n  while (cVar3 == '/') {\n    pcVar2 = param_1 + 1;\n    param_1 = param_1 + 1;\n    cVar3 = *pcVar2;\n  }\n  if (cVar3 != '\\0') {\n    bVar1 = false;\n    pcVar2 = param_1;\n    do {\n      while (cVar3 != '/') {\n        if (bVar1) {\n          bVar1 = false;\n          param_1 = pcVar2;\n        }\n        cVar3 = pcVar2[1];\n        pcVar2 = pcVar2 + 1;\n        if (cVar3 == '\\0') {\n          return param_1;\n        }\n      }\n      cVar3 = pcVar2[1];\n      pcVar2 = pcVar2 + 1;\n      bVar1 = true;\n    } while (cVar3 != '\\0');\n  }\n  return param_1;\n}\n\n", 
    "00102630": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nint re_search(re_pattern_buffer *__buffer,char *__string,int __length,int __start,int __range,\n             re_registers *__regs)\n\n{\n  int iVar1;\n  \n  iVar1 = (*(code *)PTR_re_search_0010bf28)();\n  return iVar1;\n}\n\n", 
    "00103720": "\nundefined4 FUN_00103720(byte *param_1)\n\n{\n  int iVar1;\n  undefined4 uVar2;\n  int iVar3;\n  __off_t _Var4;\n  undefined8 uVar5;\n  undefined8 uVar6;\n  int *piVar7;\n  uint uVar8;\n  char *pcVar9;\n  \n  uVar8 = *param_1 - 0x2d;\n  if ((uVar8 == 0) && (uVar8 = (uint)param_1[1], param_1[1] == 0)) {\n    iVar3 = 0;\n    DAT_0010e289 = 1;\n    param_1 = (byte *)dcgettext(0,\"standard input\",5);\n  }\n  else {\n    iVar3 = open((char *)param_1,0);\n    if (iVar3 < 0) {\n      uVar5 = FUN_00105e10(4,param_1);\n      pcVar9 = \"failed to open %s for reading\";\n      goto LAB_001037f9;\n    }\n  }\n  _Var4 = lseek(iVar3,0,2);\n  if (_Var4 < 0) {\nLAB_00103781:\n    uVar2 = FUN_001036b0(iVar3,param_1);\n  }\n  else {\n    iVar1 = isatty(iVar3);\n    if (iVar1 != 0) goto LAB_00103781;\n    uVar2 = FUN_00102d70(iVar3,param_1,_Var4);\n  }\n  if (uVar8 != 0) {\n    iVar3 = close(iVar3);\n    if (iVar3 != 0) {\n      uVar5 = FUN_00105f10(0,3,param_1);\n      pcVar9 = \"%s: read error\";\nLAB_001037f9:\n      uVar6 = dcgettext(0,pcVar9,5);\n      piVar7 = __errno_location();\n      error(0,*piVar7,uVar6,uVar5);\n      return 0;\n    }\n  }\n  return uVar2;\n}\n\n", 
    "00102510": "\n/* WARNING: Unknown calling convention -- yet parameter storage is locked */\n\nsize_t mbrtowc(wchar_t *__pwc,char *__s,size_t __n,mbstate_t *__p)\n\n{\n  size_t sVar1;\n  \n  sVar1 = (*(code *)PTR_mbrtowc_0010be98)();\n  return sVar1;\n}\n\n"
}